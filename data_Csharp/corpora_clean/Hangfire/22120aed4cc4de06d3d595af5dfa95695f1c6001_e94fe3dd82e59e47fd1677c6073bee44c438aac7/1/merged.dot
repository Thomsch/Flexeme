digraph  {
n80 [label="Hangfire.BackgroundJobServer", span=""];
n0 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer()", span="44-44", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()"];
n1 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer()", span="44-44", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()"];
n2 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="54-54", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)"];
n3 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="54-54", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)"];
n4 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="64-64", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)"];
n5 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="64-64", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)"];
n6 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="75-75", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n7 [label="options == null", span="77-77", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n9 [label="storage == null", span="78-78", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n11 [label="_options = options", span="80-80", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n12 [label="_storage = storage", span="81-81", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n8 [label="throw new ArgumentNullException(''options'');", span="77-77", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n10 [label="throw new ArgumentNullException(''storage'');", span="78-78", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n13 [label="_serverId = String.Format(''{0}:{1}'', _options.ServerName.ToLowerInvariant(), Process.GetCurrentProcess().Id)", span="83-83", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n14 [label="Logger.Info(''Starting Hangfire Server'')", span="85-85", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n21 [label="Entry string.ToLowerInvariant()", span="0-0", cluster="string.ToLowerInvariant()"];
n22 [label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0", cluster="System.Diagnostics.Process.GetCurrentProcess()"];
n23 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)"];
n15 [label="Logger.InfoFormat(''Using job storage: '{0}'.'', _storage)", span="86-86", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n24 [label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202", cluster="Hangfire.Logging.ILog.Info(string)"];
n16 [label="_storage.WriteOptionsToLog(Logger)", span="88-88", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n25 [label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210", cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])"];
n17 [label="_options.WriteToLog(Logger)", span="89-89", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n26 [label="Entry Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="68-68", cluster="Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)"];
n18 [label="_bootstrapTask = GetBootstrapTask()", span="92-92", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n27 [label="Entry Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="82-82", cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)"];
n19 [label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="75-75", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)"];
n20 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n28 [label="Entry Hangfire.BackgroundJobServer.GetBootstrapTask()", span="117-117", cluster="Hangfire.BackgroundJobServer.GetBootstrapTask()"];
n29 [label="Entry Hangfire.BackgroundJobServer.Start()", span="96-96", cluster="Hangfire.BackgroundJobServer.Start()"];
n30 [label="Exit Hangfire.BackgroundJobServer.Start()", span="96-96", cluster="Hangfire.BackgroundJobServer.Start()"];
n31 [label="Entry Hangfire.BackgroundJobServer.Stop()", span="101-101", cluster="Hangfire.BackgroundJobServer.Stop()"];
n32 [label="Exit Hangfire.BackgroundJobServer.Stop()", span="101-101", cluster="Hangfire.BackgroundJobServer.Stop()"];
n33 [label="Entry Hangfire.BackgroundJobServer.Dispose()", span="105-105", cluster="Hangfire.BackgroundJobServer.Dispose()"];
n34 [label="_cts.Cancel()", span="107-107", cluster="Hangfire.BackgroundJobServer.Dispose()"];
n35 [label="!_bootstrapTask.Wait(_options.ShutdownTimeout)", span="109-109", cluster="Hangfire.BackgroundJobServer.Dispose()"];
n39 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()"];
n36 [label="Logger.WarnFormat('''')", span="111-111", cluster="Hangfire.BackgroundJobServer.Dispose()"];
n37 [label="Logger.Info(''Hangfire Server stopped.'')", span="114-114", cluster="Hangfire.BackgroundJobServer.Dispose()"];
n40 [label="Entry System.Threading.Tasks.Task.Wait(System.TimeSpan)", span="0-0", cluster="System.Threading.Tasks.Task.Wait(System.TimeSpan)"];
n41 [label="Entry Hangfire.Logging.ILog.WarnFormat(string, params object[])", span="270-270", cluster="Hangfire.Logging.ILog.WarnFormat(string, params object[])"];
n38 [label="Exit Hangfire.BackgroundJobServer.Dispose()", span="105-105", cluster="Hangfire.BackgroundJobServer.Dispose()"];
n42 [label="var context = new ServerContext\r\n            {\r\n                Queues = _options.Queues,\r\n                WorkerCount = _options.WorkerCount\r\n            }", span="119-123", cluster="Hangfire.BackgroundJobServer.GetBootstrapTask()"];
n43 [label="var bootstrapper = new ServerBootstrapper(\r\n                _serverId, \r\n                context, \r\n                _storage, \r\n                GetComponents())", span="125-129", cluster="Hangfire.BackgroundJobServer.GetBootstrapTask()"];
n46 [label="Entry Hangfire.Server.ServerContext.ServerContext()", span="18-18", cluster="Hangfire.Server.ServerContext.ServerContext()"];
n44 [label="return WrapComponent(bootstrapper).CreateTask(_cts.Token);", span="131-131", cluster="Hangfire.BackgroundJobServer.GetBootstrapTask()"];
n47 [label="Entry Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerComponent>)", span="36-36", cluster="Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerComponent>)"];
n48 [label="Entry Hangfire.BackgroundJobServer.GetComponents()", span="134-134", cluster="Hangfire.BackgroundJobServer.GetComponents()"];
n45 [label="Exit Hangfire.BackgroundJobServer.GetBootstrapTask()", span="117-117", cluster="Hangfire.BackgroundJobServer.GetBootstrapTask()"];
n49 [label="Entry Hangfire.BackgroundJobServer.WrapComponent(Hangfire.Server.IServerComponent)", span="158-158", cluster="Hangfire.BackgroundJobServer.WrapComponent(Hangfire.Server.IServerComponent)"];
n50 [label="Entry Hangfire.Server.IServerComponent.CreateTask(System.Threading.CancellationToken)", span="26-26", cluster="Hangfire.Server.IServerComponent.CreateTask(System.Threading.CancellationToken)"];
n51 [label="var components = new List<IServerComponent>()", span="136-136", cluster="Hangfire.BackgroundJobServer.GetComponents()"];
n52 [label="components.AddRange(GetCommonComponents().Select(WrapComponent))", span="138-138", cluster="Hangfire.BackgroundJobServer.GetComponents()"];
n56 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n53 [label="components.AddRange(_storage.GetComponents().Select(WrapComponent))", span="139-139", cluster="Hangfire.BackgroundJobServer.GetComponents()"];
n54 [label="return components;", span="141-141", cluster="Hangfire.BackgroundJobServer.GetComponents()"];
n57 [label="Entry Hangfire.BackgroundJobServer.GetCommonComponents()", span="144-144", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()"];
n58 [label="Entry Unk.Select", span="", cluster="Unk.Select"];
n59 [label="Entry Unk.AddRange", span="", cluster="Unk.AddRange"];
n60 [label="Entry Hangfire.JobStorage.GetComponents()", span="58-58", cluster="Hangfire.JobStorage.GetComponents()"];
n55 [label="Exit Hangfire.BackgroundJobServer.GetComponents()", span="134-134", cluster="Hangfire.BackgroundJobServer.GetComponents()"];
n61 [label="var i = 0", span="146-146", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()"];
n63 [label="yield return new Worker(new WorkerContext(_options.Queues, i + 1));", span="148-148", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()"];
n65 [label="yield return new ServerHeartbeat();", span="151-151", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()"];
n66 [label="yield return new SchedulePoller(_options.SchedulePollingInterval);", span="152-152", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()"];
n67 [label="yield return new ServerWatchdog(_options.ServerWatchdogOptions);", span="153-153", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()"];
n68 [label="yield return new RecurringJobScheduler();", span="155-155", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()"];
n62 [label="i < _options.WorkerCount", span="146-146", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()"];
n64 [label="i++", span="146-146", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()"];
n70 [label="Entry Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", span="36-36", cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)"];
n71 [label="Entry WorkerContext.cstr", span="", cluster="WorkerContext.cstr"];
n72 [label="Entry ServerHeartbeat.cstr", span="", cluster="ServerHeartbeat.cstr"];
n73 [label="Entry Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="33-33", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)"];
n74 [label="Entry ServerWatchdog.cstr", span="", cluster="ServerWatchdog.cstr"];
n69 [label="Exit Hangfire.BackgroundJobServer.GetCommonComponents()", span="144-144", cluster="Hangfire.BackgroundJobServer.GetCommonComponents()"];
n75 [label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="40-40", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()"];
n76 [label="return new InfiniteLoopComponent(new AutomaticRetryServerComponentWrapper(component));", span="160-160", cluster="Hangfire.BackgroundJobServer.WrapComponent(Hangfire.Server.IServerComponent)"];
n77 [label="Exit Hangfire.BackgroundJobServer.WrapComponent(Hangfire.Server.IServerComponent)", span="158-158", cluster="Hangfire.BackgroundJobServer.WrapComponent(Hangfire.Server.IServerComponent)"];
n78 [label="Entry Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", span="24-24", cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)"];
n79 [label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", span="31-31", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)"];
m0_86 [label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57", cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ApplyStateContextFacts.cs"];
m0_52 [label="HangFire.Core.Tests.Common.JobHelperFacts", span="", cluster="Hangfire.Dashboard.RazorPage.ToString()", file="ApplyStateContextFacts.cs"];
m0_18 [label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", span="36-36", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", file="ApplyStateContextFacts.cs"];
m0_19 [label="var result = JobHelper.FromJson<string>(''\''hello\'''')", span="38-38", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", file="ApplyStateContextFacts.cs"];
m0_20 [label="Assert.Equal(''hello'', result)", span="39-39", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", file="ApplyStateContextFacts.cs"];
m0_21 [label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", span="36-36", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", file="ApplyStateContextFacts.cs"];
m0_22 [label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()", span="43-43", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()", file="ApplyStateContextFacts.cs"];
m0_56 [label="Entry Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", span="92-92", cluster="Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", file="ApplyStateContextFacts.cs"];
m0_57 [label="Guid guid", span="94-94", cluster="Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", file="ApplyStateContextFacts.cs"];
m0_58 [label="return new NonEscapedString(Guid.TryParse(jobId, out guid)\r\n                ? (shorten ? jobId.Substring(0, 8) + ''…'' : jobId)\r\n                : $''#{jobId}'');", span="95-97", cluster="Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", file="ApplyStateContextFacts.cs"];
m0_59 [label="Exit Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", span="92-92", cluster="Hangfire.Dashboard.HtmlHelper.JobId(string, bool)", file="ApplyStateContextFacts.cs"];
m0_119 [label="Entry System.Text.StringBuilder.Append(int)", span="0-0", cluster="System.Text.StringBuilder.Append(int)", file="ApplyStateContextFacts.cs"];
m0_130 [label="Entry Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", span="218-218", cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="ApplyStateContextFacts.cs"];
m0_131 [label="var label = queue != null \r\n                ? $''<a class=\''text-uppercase\'' href=\''{_page.Url.Queue(queue)}\''>{queue}</a>'' \r\n                : $''<span class=\''label label-danger\''><i>{Strings.Common_Unknown}</i></span>''", span="220-222", cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="ApplyStateContextFacts.cs"];
m0_132 [label="return new NonEscapedString(label);", span="224-224", cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="ApplyStateContextFacts.cs"];
m0_133 [label="Exit Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", span="218-218", cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="ApplyStateContextFacts.cs"];
m0_0 [label="Entry Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", span="34-34", cluster="Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", file="ApplyStateContextFacts.cs"];
m0_2 [label="throw new ArgumentNullException(nameof(page));", span="36-36", cluster="Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", file="ApplyStateContextFacts.cs"];
m0_1 [label="page == null", span="36-36", cluster="Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", file="ApplyStateContextFacts.cs"];
m0_3 [label="_page = page", span="37-37", cluster="Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", file="ApplyStateContextFacts.cs"];
m0_134 [label="Entry Hangfire.Dashboard.UrlHelper.Queue(string)", span="68-68", cluster="Hangfire.Dashboard.UrlHelper.Queue(string)", file="ApplyStateContextFacts.cs"];
m0_17 [label="Entry Hangfire.Dashboard.Pages.SidebarMenu.SidebarMenu(System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>)", span="24-24", cluster="Hangfire.Dashboard.Pages.SidebarMenu.SidebarMenu(System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>)", file="ApplyStateContextFacts.cs"];
m0_35 [label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()", span="60-60", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()", file="ApplyStateContextFacts.cs"];
m0_36 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ApplyStateContextFacts.cs"];
m0_37 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="ApplyStateContextFacts.cs"];
m0_38 [label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()", span="68-68", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()", file="ApplyStateContextFacts.cs"];
m0_39 [label="var result = JobHelper.FromStringTimestamp(_wellKnownTimestamp.ToString())", span="70-70", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()", file="ApplyStateContextFacts.cs"];
m0_73 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="ApplyStateContextFacts.cs"];
m0_117 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="ApplyStateContextFacts.cs"];
m0_126 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="ApplyStateContextFacts.cs"];
m0_23 [label="Entry Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", span="57-57", cluster="Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", file="ApplyStateContextFacts.cs"];
m0_24 [label="metric == null", span="59-59", cluster="Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", file="ApplyStateContextFacts.cs"];
m0_25 [label="throw new ArgumentNullException(nameof(metric));", span="59-59", cluster="Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", file="ApplyStateContextFacts.cs"];
m0_10 [label="return RenderPartial(new Breadcrumbs(title, items));", span="43-43", cluster="Hangfire.Dashboard.HtmlHelper.Breadcrumbs(string, System.Collections.Generic.IDictionary<string, string>)", file="ApplyStateContextFacts.cs"];
m0_7 [label="var result = JobHelper.ToJson(''hello'')", span="21-21", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", file="ApplyStateContextFacts.cs"];
m0_8 [label="Assert.Equal(''\''hello\'''', result)", span="22-22", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", file="ApplyStateContextFacts.cs"];
m0_9 [label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", span="19-19", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", file="ApplyStateContextFacts.cs"];
m0_11 [label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", span="26-26", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", file="ApplyStateContextFacts.cs"];
m0_74 [label="Entry Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", span="83-83", cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="ApplyStateContextFacts.cs"];
m0_31 [label="throw new ArgumentNullException(nameof(metric));", span="65-65", cluster="Hangfire.Dashboard.HtmlHelper.InlineMetric(Hangfire.Dashboard.DashboardMetric)", file="ApplyStateContextFacts.cs"];
m0_122 [label="Entry Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="213-213", cluster="Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="ApplyStateContextFacts.cs"];
m0_123 [label="return String.Join('', '', properties.Select(x => $''{x.Key}: \''{x.Value}\''''));", span="215-215", cluster="Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="ApplyStateContextFacts.cs"];
m0_124 [label="Exit Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="213-213", cluster="Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="ApplyStateContextFacts.cs"];
m0_48 [label="return new NonEscapedString(partialPage.ToString());", span="84-84", cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="ApplyStateContextFacts.cs"];
m0_50 [label="Entry Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", span="74-74", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="ApplyStateContextFacts.cs"];
m0_49 [label="Exit Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", span="81-81", cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="ApplyStateContextFacts.cs"];
m0_51 [label="Entry Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", span="22-22", cluster="Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", file="ApplyStateContextFacts.cs"];
m0_78 [label="Entry Hangfire.Dashboard.UrlHelper.JobDetails(string)", span="58-58", cluster="Hangfire.Dashboard.UrlHelper.JobDetails(string)", file="ApplyStateContextFacts.cs"];
m0_42 [label="pager == null", span="77-77", cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="ApplyStateContextFacts.cs"];
m0_14 [label="Assert.Null(stringResult)", span="31-31", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", file="ApplyStateContextFacts.cs"];
m0_15 [label="Assert.Equal(0, intResult)", span="32-32", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", file="ApplyStateContextFacts.cs"];
m0_16 [label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", span="26-26", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", file="ApplyStateContextFacts.cs"];
m0_116 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="ApplyStateContextFacts.cs"];
m0_143 [label="Entry Hangfire.Dashboard.HtmlHelper.StackTrace(string)", span="250-250", cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="ApplyStateContextFacts.cs"];
m0_144 [label="return new NonEscapedString(StackTraceFormatter.FormatHtml(stackTrace, StackTraceHtmlFragments));", span="252-252", cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="ApplyStateContextFacts.cs"];
m0_145 [label="Exit Hangfire.Dashboard.HtmlHelper.StackTrace(string)", span="250-250", cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="ApplyStateContextFacts.cs"];
m0_26 [label="return RenderPartial(new BlockMetric(metric));", span="60-60", cluster="Hangfire.Dashboard.HtmlHelper.BlockMetric(Hangfire.Dashboard.DashboardMetric)", file="ApplyStateContextFacts.cs"];
m0_47 [label="partialPage.Assign(_page)", span="83-83", cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="ApplyStateContextFacts.cs"];
m0_149 [label="Entry System.Net.WebUtility.HtmlEncode(string)", span="0-0", cluster="System.Net.WebUtility.HtmlEncode(string)", file="ApplyStateContextFacts.cs"];
m0_82 [label="Entry Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", span="255-255", cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="ApplyStateContextFacts.cs"];
m0_147 [label="return WebUtility.HtmlEncode(text);", span="257-257", cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="ApplyStateContextFacts.cs"];
m0_148 [label="Exit Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", span="255-255", cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="ApplyStateContextFacts.cs"];
m0_121 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="ApplyStateContextFacts.cs"];
m0_53 [label="Entry Hangfire.Dashboard.HtmlHelper.Raw(string)", span="87-87", cluster="Hangfire.Dashboard.HtmlHelper.Raw(string)", file="ApplyStateContextFacts.cs"];
m0_54 [label="return new NonEscapedString(value);", span="89-89", cluster="Hangfire.Dashboard.HtmlHelper.Raw(string)", file="ApplyStateContextFacts.cs"];
m0_55 [label="Exit Hangfire.Dashboard.HtmlHelper.Raw(string)", span="87-87", cluster="Hangfire.Dashboard.HtmlHelper.Raw(string)", file="ApplyStateContextFacts.cs"];
m0_4 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="ApplyStateContextFacts.cs"];
m0_27 [label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", span="52-52", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", file="ApplyStateContextFacts.cs"];
m0_87 [label="Entry Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", span="150-150", cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", file="ApplyStateContextFacts.cs"];
m0_88 [label="return Raw($''<span data-moment-title=\''{JobHelper.ToTimestamp(time)}\''>{value}</span>'');", span="152-152", cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", file="ApplyStateContextFacts.cs"];
m0_89 [label="Exit Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", span="150-150", cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", file="ApplyStateContextFacts.cs"];
m0_6 [label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", span="19-19", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", file="ApplyStateContextFacts.cs"];
m0_40 [label="Entry Hangfire.Dashboard.Pages.Paginator.Paginator(Hangfire.Dashboard.Pager)", span="6-6", cluster="Hangfire.Dashboard.Pages.Paginator.Paginator(Hangfire.Dashboard.Pager)", file="ApplyStateContextFacts.cs"];
m0_41 [label="Entry Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="75-75", cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="ApplyStateContextFacts.cs"];
m0_61 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="ApplyStateContextFacts.cs"];
m0_135 [label="Entry Hangfire.Dashboard.HtmlHelper.ServerId(string)", span="227-227", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="ApplyStateContextFacts.cs"];
m0_136 [label="var parts = serverId.Split(':')", span="229-229", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="ApplyStateContextFacts.cs"];
m0_137 [label="var shortenedId = parts.Length > 1\r\n                ? String.Join('':'', parts.Take(parts.Length - 1))\r\n                : serverId", span="230-232", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="ApplyStateContextFacts.cs"];
m0_138 [label="return new NonEscapedString(\r\n                $''<span class=\''labe label-defult text-uppercase\'' title=\''{serverId}\''>{shortenedId}</span>'');", span="234-235", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="ApplyStateContextFacts.cs"];
m0_139 [label="Exit Hangfire.Dashboard.HtmlHelper.ServerId(string)", span="227-227", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="ApplyStateContextFacts.cs"];
m0_62 [label="Entry Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", span="100-100", cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="ApplyStateContextFacts.cs"];
m0_63 [label="job == null", span="102-102", cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="ApplyStateContextFacts.cs"];
m0_65 [label="return job.ToString();", span="122-122", cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="ApplyStateContextFacts.cs"];
m0_64 [label="return Strings.Common_CannotFindTargetMethod;", span="104-104", cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="ApplyStateContextFacts.cs"];
m0_66 [label="Exit Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", span="100-100", cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="ApplyStateContextFacts.cs"];
m0_142 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="ApplyStateContextFacts.cs"];
m0_90 [label="Entry Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="155-155", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_91 [label="duration == null", span="157-157", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_94 [label=displaySign, span="160-160", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_95 [label="builder.Append(duration.Value.TotalMilliseconds < 0 ? ''-'' : ''+'')", span="162-162", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_96 [label="duration = duration.Value.Duration()", span="165-165", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_92 [label="return null;", span="157-157", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_93 [label="var builder = new StringBuilder()", span="159-159", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_98 [label="builder.Append($''{duration.Value.Days}d '')", span="169-169", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_100 [label="builder.Append($''{duration.Value.Hours}h '')", span="174-174", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_102 [label="builder.Append($''{duration.Value.Minutes}m '')", span="179-179", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_105 [label="builder.Append(duration.Value.Seconds)", span="186-186", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_107 [label="builder.Append($''.{duration.Value.Milliseconds}'')", span="189-189", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_108 [label="builder.Append(''s '')", span="192-192", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_110 [label="builder.Append($''{duration.Value.Milliseconds}ms '')", span="198-198", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_111 [label="builder.Length <= 1", span="203-203", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_112 [label="builder.Append('' <1ms '')", span="205-205", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_113 [label="builder.Remove(builder.Length - 1, 1)", span="208-208", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_114 [label="return builder.ToString();", span="210-210", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_97 [label="duration.Value.Days > 0", span="167-167", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=red, community=0, file="ApplyStateContextFacts.cs"];
m0_99 [label="duration.Value.Hours > 0", span="172-172", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_101 [label="duration.Value.Minutes > 0", span="177-177", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_103 [label="duration.Value.TotalHours < 1", span="182-182", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_104 [label="duration.Value.Seconds > 0", span="184-184", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_106 [label="duration.Value.Milliseconds > 0", span="187-187", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_109 [label="duration.Value.Milliseconds > 0", span="196-196", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_115 [label="Exit Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="155-155", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ApplyStateContextFacts.cs"];
m0_141 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="ApplyStateContextFacts.cs"];
m0_60 [label="Entry System.Guid.TryParse(string, out System.Guid)", span="0-0", cluster="System.Guid.TryParse(string, out System.Guid)", file="ApplyStateContextFacts.cs"];
m0_12 [label="var stringResult = JobHelper.FromJson<string>(null)", span="28-28", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", file="ApplyStateContextFacts.cs", color=green, community=0];
m0_32 [label="return RenderPartial(new InlineMetric(metric));", span="66-66", cluster="Hangfire.Dashboard.HtmlHelper.InlineMetric(Hangfire.Dashboard.DashboardMetric)", file="ApplyStateContextFacts.cs"];
m0_34 [label="Entry Hangfire.Dashboard.Pages.InlineMetric.InlineMetric(Hangfire.Dashboard.DashboardMetric)", span="4-4", cluster="Hangfire.Dashboard.Pages.InlineMetric.InlineMetric(Hangfire.Dashboard.DashboardMetric)", file="ApplyStateContextFacts.cs"];
m0_33 [label="Exit Hangfire.Dashboard.HtmlHelper.InlineMetric(Hangfire.Dashboard.DashboardMetric)", span="63-63", cluster="Hangfire.Dashboard.HtmlHelper.InlineMetric(Hangfire.Dashboard.DashboardMetric)", file="ApplyStateContextFacts.cs"];
m0_5 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="ApplyStateContextFacts.cs"];
m0_29 [label="Assert.Equal(_wellKnownDateTime, result)", span="56-56", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", file="ApplyStateContextFacts.cs"];
m0_30 [label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", span="52-52", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", file="ApplyStateContextFacts.cs"];
m0_83 [label="Entry Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145", cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="ApplyStateContextFacts.cs"];
m0_84 [label="return Raw($''<span data-moment=\''{JobHelper.ToTimestamp(value)}\''>{value}</span>'');", span="147-147", cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="ApplyStateContextFacts.cs"];
m0_85 [label="Exit Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145", cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="ApplyStateContextFacts.cs"];
m0_28 [label="var result = JobHelper.FromTimestamp(_wellKnownTimestamp)", span="54-54", cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", file="ApplyStateContextFacts.cs"];
m0_118 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()", file="ApplyStateContextFacts.cs"];
m0_127 [label="Entry lambda expression", span="215-215", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_128 [label="$''{x.Key}: \''{x.Value}\''''", span="215-215", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_129 [label="Exit lambda expression", span="215-215", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_125 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ApplyStateContextFacts.cs"];
m0_140 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="ApplyStateContextFacts.cs"];
m0_68 [label="Entry Hangfire.Dashboard.HtmlHelper.StateLabel(string)", span="125-125", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="ApplyStateContextFacts.cs"];
m0_69 [label="String.IsNullOrWhiteSpace(stateName)", span="127-127", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="ApplyStateContextFacts.cs"];
m0_71 [label="return Raw($''<span class=\''label label-default\'' style=\''background-color: {JobHistoryRenderer.GetForegroundStateColor(stateName)};\''>{stateName}</span>'');", span="132-132", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="ApplyStateContextFacts.cs"];
m0_70 [label="return Raw($''<em>{Strings.Common_NoState}</em>'');", span="129-129", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="ApplyStateContextFacts.cs"];
m0_72 [label="Exit Hangfire.Dashboard.HtmlHelper.StateLabel(string)", span="125-125", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="ApplyStateContextFacts.cs"];
m0_43 [label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", span="76-76", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", file="ApplyStateContextFacts.cs"];
m0_44 [label="Assert.Null(JobHelper.FromNullableStringTimestamp(''''))", span="78-78", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", file="ApplyStateContextFacts.cs"];
m0_45 [label="Assert.Null(JobHelper.FromNullableStringTimestamp(null))", span="79-79", cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", file="ApplyStateContextFacts.cs"];
m0_75 [label="Entry Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135", cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="ApplyStateContextFacts.cs"];
m0_76 [label="return Raw($''<a href=\''{_page.Url.JobDetails(jobId)}\''>{JobId(jobId)}</a>'');", span="137-137", cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="ApplyStateContextFacts.cs"];
m0_77 [label="Exit Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135", cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="ApplyStateContextFacts.cs"];
m0_79 [label="Entry Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140", cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="ApplyStateContextFacts.cs"];
m0_80 [label="return Raw($''<a class=\''job-method\'' href=\''{_page.Url.JobDetails(jobId)}\''>{HtmlEncode(JobName(job))}</a>'');", span="142-142", cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="ApplyStateContextFacts.cs"];
m0_81 [label="Exit Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140", cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="ApplyStateContextFacts.cs"];
m0_46 [label="Entry Hangfire.Dashboard.Pages.PerPageSelector.PerPageSelector(Hangfire.Dashboard.Pager)", span="6-6", cluster="Hangfire.Dashboard.Pages.PerPageSelector.PerPageSelector(Hangfire.Dashboard.Pager)", file="ApplyStateContextFacts.cs"];
m0_67 [label="Entry Hangfire.Common.Job.ToString()", span="179-179", cluster="Hangfire.Common.Job.ToString()", file="ApplyStateContextFacts.cs"];
m0_146 [label="Entry Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", span="77-77", cluster="Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", file="ApplyStateContextFacts.cs"];
m0_120 [label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0", cluster="System.Text.StringBuilder.Remove(int, int)", file="ApplyStateContextFacts.cs"];
m0_13 [label="Entry Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", span="81-81", cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="ApplyStateContextFacts.cs"];
m0_150 [label="Hangfire.Dashboard.HtmlHelper", span="", file="ApplyStateContextFacts.cs"];
m1_19 [label="Entry HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="81-81", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs"];
m1_20 [label="job == null", span="83-83", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs"];
m1_22 [label="state == null", span="84-84", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs"];
m1_24 [label="var context = new CreateContext(_connection, _stateMachineFactory, job, state)", span="88-88", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs"];
m1_21 [label="throw new ArgumentNullException(''job'');", span="83-83", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs"];
m1_23 [label="throw new ArgumentNullException(''state'');", span="84-84", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs"];
m1_25 [label="_process.Run(context)", span="89-89", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs"];
m1_26 [label="return context.JobId;", span="91-91", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs"];
m1_27 [label=Exception, span="93-93", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs"];
m1_28 [label="throw new CreateJobFailedException(''Job creation process has bee failed. See inner exception for details'', ex);", span="95-95", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs"];
m1_29 [label="Exit HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="81-81", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs"];
m1_31 [label="Entry HangFire.Client.IJobCreationProcess.Run(HangFire.Client.CreateContext)", span="28-28", cluster="HangFire.Client.IJobCreationProcess.Run(HangFire.Client.CreateContext)", file="BackgroundJobClient.cs"];
m1_32 [label="Entry HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="34-34", cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="BackgroundJobClient.cs"];
m1_33 [label="Entry HangFire.BackgroundJobClient.Dispose()", span="103-103", cluster="HangFire.BackgroundJobClient.Dispose()", file="BackgroundJobClient.cs"];
m1_34 [label="_connection.Dispose()", span="105-105", cluster="HangFire.BackgroundJobClient.Dispose()", file="BackgroundJobClient.cs"];
m1_35 [label="Exit HangFire.BackgroundJobClient.Dispose()", span="103-103", cluster="HangFire.BackgroundJobClient.Dispose()", file="BackgroundJobClient.cs"];
m1_30 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", span="46-46", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs"];
m1_4 [label="Entry HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory)", span="54-54", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory)", file="BackgroundJobClient.cs"];
m1_5 [label="Exit HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory)", span="54-54", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory)", file="BackgroundJobClient.cs"];
m1_36 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="BackgroundJobClient.cs"];
m1_2 [label="Entry HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", span="49-49", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", file="BackgroundJobClient.cs"];
m1_3 [label="Exit HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", span="49-49", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", file="BackgroundJobClient.cs"];
m1_6 [label="Entry HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", span="66-66", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m1_7 [label="storage == null", span="71-71", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m1_9 [label="stateMachineFactory == null", span="72-72", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m1_11 [label="process == null", span="73-73", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m1_13 [label="_connection = storage.GetConnection()", span="75-75", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m1_14 [label="_stateMachineFactory = stateMachineFactory", span="76-76", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m1_15 [label="_process = process", span="77-77", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m1_8 [label="throw new ArgumentNullException(''storage'');", span="71-71", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m1_10 [label="throw new ArgumentNullException(''stateMachineFactory'');", span="72-72", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m1_12 [label="throw new ArgumentNullException(''process'');", span="73-73", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m1_16 [label="Exit HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", span="66-66", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m1_18 [label="Entry HangFire.JobStorage.GetConnection()", span="55-55", cluster="HangFire.JobStorage.GetConnection()", file="BackgroundJobClient.cs"];
m1_0 [label="Entry HangFire.BackgroundJobClient.BackgroundJobClient()", span="39-39", cluster="HangFire.BackgroundJobClient.BackgroundJobClient()", file="BackgroundJobClient.cs"];
m1_1 [label="Exit HangFire.BackgroundJobClient.BackgroundJobClient()", span="39-39", cluster="HangFire.BackgroundJobClient.BackgroundJobClient()", file="BackgroundJobClient.cs"];
m1_37 [label="HangFire.BackgroundJobClient", span="", file="BackgroundJobClient.cs"];
m2_31 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredSupervisors()", span="44-44", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_32 [label="var collection = CreateCollection()", span="46-46", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_33 [label="collection.Stop()", span="48-48", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_34 [label="_supervisor1.Verify(x => x.Stop())", span="50-50", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_35 [label="_supervisor2.Verify(x => x.Stop())", span="51-51", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_36 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredSupervisors()", span="44-44", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_0 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.ServerSupervisorCollectionFacts()", span="14-14", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.ServerSupervisorCollectionFacts()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_1 [label="_supervisor1 = new Mock<IServerSupervisor>()", span="16-16", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.ServerSupervisorCollectionFacts()", color=red, community=0, file="BackgroundJobClientExtensionsFacts.cs"];
m2_2 [label="_supervisor2 = new Mock<IServerSupervisor>()", span="17-17", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.ServerSupervisorCollectionFacts()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_3 [label="_supervisors = new List<IServerSupervisor>\r\n            {\r\n                _supervisor1.Object,\r\n                _supervisor2.Object\r\n            }", span="19-23", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.ServerSupervisorCollectionFacts()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_4 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.ServerSupervisorCollectionFacts()", span="14-14", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.ServerSupervisorCollectionFacts()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_118 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="BackgroundJobClientExtensionsFacts.cs"];
m2_7 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Ctor_ThrowsAnException_WhenSupervisorsValueIsNull()", span="27-27", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Ctor_ThrowsAnException_WhenSupervisorsValueIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_8 [label="Assert.Throws<ArgumentNullException>(() => new ServerSupervisorCollection(null))", span="29-29", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Ctor_ThrowsAnException_WhenSupervisorsValueIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_9 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Ctor_ThrowsAnException_WhenSupervisorsValueIsNull()", span="27-27", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Ctor_ThrowsAnException_WhenSupervisorsValueIsNull()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_82 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Clear_RemovesAllElements_FromCollection()", span="95-95", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_83 [label="var collection = CreateCollection()", span="97-97", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_84 [label="collection.Clear()", span="99-99", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_85 [label="Assert.Equal(0, collection.Count)", span="101-101", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_86 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Clear_RemovesAllElements_FromCollection()", span="95-95", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_88 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", span="105-105", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_89 [label="var element = new Mock<IServerSupervisor>()", span="107-107", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_90 [label="var collection = CreateCollection()", span="108-108", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_91 [label="Assert.False(collection.Contains(element.Object))", span="110-110", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_92 [label="collection.Add(element.Object)", span="112-112", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_93 [label="Assert.True(collection.Contains(element.Object))", span="114-114", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_94 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", span="105-105", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_75 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="BackgroundJobClientExtensionsFacts.cs"];
m2_41 [label="Entry Unk.Stop", span="", cluster="Unk.Stop", file="BackgroundJobClientExtensionsFacts.cs"];
m2_21 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CreateCollection()", span="149-149", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CreateCollection()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_119 [label="return new ServerSupervisorCollection(_supervisors);", span="151-151", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CreateCollection()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_120 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CreateCollection()", span="149-149", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CreateCollection()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_5 [label="Entry Mock<IServerSupervisor>.cstr", span="", cluster="Mock<IServerSupervisor>.cstr", file="BackgroundJobClientExtensionsFacts.cs"];
m2_117 [label="Entry Hangfire.Server.ServerSupervisorCollection.CopyTo(Hangfire.Server.IServerSupervisor[], int)", span="87-87", cluster="Hangfire.Server.ServerSupervisorCollection.CopyTo(Hangfire.Server.IServerSupervisor[], int)", file="BackgroundJobClientExtensionsFacts.cs"];
m2_10 [label="Entry Unk.>", span="", cluster="Unk.>", file="BackgroundJobClientExtensionsFacts.cs"];
m2_96 [label="Entry Unk.False", span="", cluster="Unk.False", file="BackgroundJobClientExtensionsFacts.cs"];
m2_37 [label="Entry Hangfire.Server.ServerSupervisorCollection.Stop()", span="44-44", cluster="Hangfire.Server.ServerSupervisorCollection.Stop()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_45 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", span="55-55", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_46 [label="var collection = CreateCollection()", span="57-57", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_47 [label="collection.Dispose()", span="59-59", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_48 [label="_supervisor1.Verify(x => x.Dispose())", span="61-61", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_49 [label="_supervisor2.Verify(x => x.Dispose())", span="62-62", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_50 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", span="55-55", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_106 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.IsReadOnly_ReturnsFalse()", span="130-130", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.IsReadOnly_ReturnsFalse()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_107 [label="var collection = CreateCollection()", span="132-132", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.IsReadOnly_ReturnsFalse()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_108 [label="Assert.False(collection.IsReadOnly)", span="134-134", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.IsReadOnly_ReturnsFalse()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_109 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.IsReadOnly_ReturnsFalse()", span="130-130", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.IsReadOnly_ReturnsFalse()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_14 [label="Entry Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", span="26-26", cluster="Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", file="BackgroundJobClientExtensionsFacts.cs"];
m2_81 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="BackgroundJobClientExtensionsFacts.cs"];
m2_71 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Count_ReturnsTheNumberOfElements()", span="77-77", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Count_ReturnsTheNumberOfElements()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_72 [label="var collection = CreateCollection()", span="79-79", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Count_ReturnsTheNumberOfElements()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_73 [label="Assert.Equal(2, collection.Count)", span="81-81", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Count_ReturnsTheNumberOfElements()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_74 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Count_ReturnsTheNumberOfElements()", span="77-77", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Count_ReturnsTheNumberOfElements()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_98 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()", span="118-118", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_99 [label="var supervisor = new Mock<IServerSupervisor>()", span="120-120", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_100 [label="var collection = CreateCollection()", span="121-121", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_101 [label="collection.Add(supervisor.Object)", span="122-122", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_102 [label="collection.Remove(supervisor.Object)", span="124-124", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_103 [label="Assert.False(collection.Contains(supervisor.Object))", span="126-126", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_104 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()", span="118-118", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_55 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="BackgroundJobClientExtensionsFacts.cs"];
m2_51 [label="Entry Hangfire.Server.ServerSupervisorCollection.Dispose()", span="52-52", cluster="Hangfire.Server.ServerSupervisorCollection.Dispose()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_105 [label="Entry Unk.Remove", span="", cluster="Unk.Remove", file="BackgroundJobClientExtensionsFacts.cs"];
m2_22 [label="Entry Hangfire.Server.ServerSupervisorCollection.Start()", span="36-36", cluster="Hangfire.Server.ServerSupervisorCollection.Start()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_76 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Add_AddsNewElement()", span="85-85", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Add_AddsNewElement()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_77 [label="var collection = CreateCollection()", span="87-87", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Add_AddsNewElement()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_78 [label="collection.Add(new Mock<IServerSupervisor>().Object)", span="89-89", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Add_AddsNewElement()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_79 [label="Assert.Equal(3, collection.Count)", span="91-91", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Add_AddsNewElement()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_80 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Add_AddsNewElement()", span="85-85", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Add_AddsNewElement()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_68 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_11 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_12 [label="new ServerSupervisorCollection(null)", span="29-29", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_13 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_24 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_28 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_25 [label="x.Start()", span="39-39", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_26 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_29 [label="x.Start()", span="40-40", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_30 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_38 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_42 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_39 [label="x.Stop()", span="50-50", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_40 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_43 [label="x.Stop()", span="51-51", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_44 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_52 [label="Entry lambda expression", span="61-61", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_56 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_53 [label="x.Dispose()", span="61-61", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_54 [label="Exit lambda expression", span="61-61", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_57 [label="x.Dispose()", span="62-62", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_58 [label="Exit lambda expression", span="62-62", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_65 [label="Entry lambda expression", span="72-72", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_66 [label="x.Stop()", span="72-72", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_67 [label="Exit lambda expression", span="72-72", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_69 [label="x.Stop()", span="73-73", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_70 [label="Exit lambda expression", span="73-73", cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs"];
m2_95 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="BackgroundJobClientExtensionsFacts.cs"];
m2_27 [label="Entry Unk.Start", span="", cluster="Unk.Start", file="BackgroundJobClientExtensionsFacts.cs"];
m2_59 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()", span="66-66", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_60 [label="var collection = CreateCollection()", span="68-68", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_61 [label="collection.Dispose()", span="70-70", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_62 [label="_supervisor1.Verify(x => x.Stop())", span="72-72", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_63 [label="_supervisor2.Verify(x => x.Stop())", span="73-73", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_64 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()", span="66-66", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_97 [label="Entry Unk.True", span="", cluster="Unk.True", file="BackgroundJobClientExtensionsFacts.cs"];
m2_23 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="BackgroundJobClientExtensionsFacts.cs"];
m2_110 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()", span="138-138", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_111 [label="var collection = CreateCollection()", span="140-140", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_112 [label="var array = new IServerSupervisor[3]", span="141-141", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_113 [label="collection.CopyTo(array, 1)", span="143-143", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_114 [label="Assert.Same(_supervisor1.Object, array[1])", span="145-145", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_115 [label="Assert.Same(_supervisor2.Object, array[2])", span="146-146", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_116 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()", span="138-138", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_87 [label="Entry Hangfire.Server.ServerSupervisorCollection.Clear()", span="77-77", cluster="Hangfire.Server.ServerSupervisorCollection.Clear()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_15 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()", span="33-33", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_16 [label="var collection = CreateCollection()", span="35-35", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_17 [label="collection.Start()", span="37-37", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_18 [label="_supervisor1.Verify(x => x.Start())", span="39-39", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_19 [label="_supervisor2.Verify(x => x.Start())", span="40-40", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_20 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()", span="33-33", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientExtensionsFacts.cs"];
m2_121 [label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts", span="", file="BackgroundJobClientExtensionsFacts.cs"];
m3_23 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="BackgroundJobClientFacts.cs"];
m3_21 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CreateCollection()", span="149-149", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CreateCollection()", file="BackgroundJobClientFacts.cs"];
m3_20 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()", span="33-33", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientFacts.cs"];
m3_22 [label="Entry Hangfire.Server.ServerSupervisorCollection.Start()", span="36-36", cluster="Hangfire.Server.ServerSupervisorCollection.Start()", file="BackgroundJobClientFacts.cs"];
m3_19 [label="_supervisor2.Verify(x => x.Start())", span="40-40", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientFacts.cs"];
m3_31 [label="Assert.Contains(''Can not serialize'', data[''Result''])", span="54-54", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", file="BackgroundJobClientFacts.cs"];
m3_32 [label="Exit Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", span="47-47", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", file="BackgroundJobClientFacts.cs"];
m3_33 [label="Entry System.Diagnostics.Process.Process()", span="0-0", cluster="System.Diagnostics.Process.Process()", file="BackgroundJobClientFacts.cs"];
m3_34 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="BackgroundJobClientFacts.cs"];
m3_35 [label="Entry Hangfire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", span="58-58", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="BackgroundJobClientFacts.cs"];
m3_36 [label="var state = CreateState()", span="60-60", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="BackgroundJobClientFacts.cs"];
m3_0 [label="Entry Hangfire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", span="11-11", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", file="BackgroundJobClientFacts.cs"];
m3_1 [label="Assert.Equal(''Succeeded'', SucceededState.StateName)", span="13-13", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", file="BackgroundJobClientFacts.cs"];
m3_2 [label="Exit Hangfire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", span="11-11", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", file="BackgroundJobClientFacts.cs"];
m3_3 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="BackgroundJobClientFacts.cs"];
m3_4 [label="Entry Hangfire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", span="17-17", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="BackgroundJobClientFacts.cs"];
m3_118 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="BackgroundJobClientFacts.cs"];
m3_7 [label="Exit Hangfire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", span="17-17", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="BackgroundJobClientFacts.cs"];
m3_8 [label="Entry Hangfire.Core.Tests.States.SucceededStateFacts.CreateState()", span="71-71", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.CreateState()", file="BackgroundJobClientFacts.cs"];
m3_9 [label="Entry Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", span="24-24", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="BackgroundJobClientFacts.cs"];
m3_82 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Clear_RemovesAllElements_FromCollection()", span="95-95", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="BackgroundJobClientFacts.cs"];
m3_83 [label="var collection = CreateCollection()", span="97-97", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="BackgroundJobClientFacts.cs"];
m3_84 [label="collection.Clear()", span="99-99", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="BackgroundJobClientFacts.cs"];
m3_85 [label="Assert.Equal(0, collection.Count)", span="101-101", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="BackgroundJobClientFacts.cs"];
m3_86 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Clear_RemovesAllElements_FromCollection()", span="95-95", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="BackgroundJobClientFacts.cs"];
m3_88 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", span="105-105", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="BackgroundJobClientFacts.cs"];
m3_89 [label="var element = new Mock<IServerSupervisor>()", span="107-107", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="BackgroundJobClientFacts.cs"];
m3_90 [label="var collection = CreateCollection()", span="108-108", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="BackgroundJobClientFacts.cs"];
m3_91 [label="Assert.False(collection.Contains(element.Object))", span="110-110", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="BackgroundJobClientFacts.cs"];
m3_92 [label="collection.Add(element.Object)", span="112-112", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="BackgroundJobClientFacts.cs"];
m3_93 [label="Assert.True(collection.Contains(element.Object))", span="114-114", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="BackgroundJobClientFacts.cs"];
m3_94 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", span="105-105", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="BackgroundJobClientFacts.cs"];
m3_75 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="BackgroundJobClientFacts.cs"];
m3_41 [label="var state = CreateState()", span="67-67", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", file="BackgroundJobClientFacts.cs"];
m3_119 [label="return new ServerSupervisorCollection(_supervisors);", span="151-151", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CreateCollection()", file="BackgroundJobClientFacts.cs"];
m3_120 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CreateCollection()", span="149-149", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CreateCollection()", file="BackgroundJobClientFacts.cs"];
m3_44 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_45 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", span="55-55", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="BackgroundJobClientFacts.cs"];
m3_5 [label="var state = CreateState()", span="19-19", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="BackgroundJobClientFacts.cs"];
m3_117 [label="Entry Hangfire.Server.ServerSupervisorCollection.CopyTo(Hangfire.Server.IServerSupervisor[], int)", span="87-87", cluster="Hangfire.Server.ServerSupervisorCollection.CopyTo(Hangfire.Server.IServerSupervisor[], int)", file="BackgroundJobClientFacts.cs"];
m3_25 [label="x.Start()", span="39-39", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_10 [label="var state = CreateState()", span="26-26", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="BackgroundJobClientFacts.cs"];
m3_26 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_96 [label="Entry Unk.False", span="", cluster="Unk.False", file="BackgroundJobClientFacts.cs"];
m3_11 [label="Entry lambda expression", span="29-29", cluster="lambda expression", color=green, community=0, file="BackgroundJobClientFacts.cs"];
m3_12 [label="new ServerSupervisorCollection(null)", span="29-29", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_13 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_14 [label="Entry Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", span="26-26", cluster="Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", file="BackgroundJobClientFacts.cs"];
m3_15 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()", span="33-33", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientFacts.cs"];
m3_16 [label="var collection = CreateCollection()", span="35-35", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientFacts.cs"];
m3_40 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_42 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_43 [label="x.Stop()", span="51-51", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_37 [label="Assert.True(state.IsFinal)", span="61-61", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="BackgroundJobClientFacts.cs"];
m3_24 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_27 [label="Entry Unk.Start", span="", cluster="Unk.Start", file="BackgroundJobClientFacts.cs"];
m3_30 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_29 [label="x.Start()", span="40-40", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_28 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_46 [label="var collection = CreateCollection()", span="57-57", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="BackgroundJobClientFacts.cs"];
m3_47 [label="collection.Dispose()", span="59-59", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="BackgroundJobClientFacts.cs"];
m3_48 [label="_supervisor1.Verify(x => x.Dispose())", span="61-61", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="BackgroundJobClientFacts.cs"];
m3_49 [label="_supervisor2.Verify(x => x.Dispose())", span="62-62", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="BackgroundJobClientFacts.cs"];
m3_50 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", span="55-55", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="BackgroundJobClientFacts.cs"];
m3_106 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.IsReadOnly_ReturnsFalse()", span="130-130", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.IsReadOnly_ReturnsFalse()", file="BackgroundJobClientFacts.cs"];
m3_107 [label="var collection = CreateCollection()", span="132-132", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.IsReadOnly_ReturnsFalse()", file="BackgroundJobClientFacts.cs"];
m3_108 [label="Assert.False(collection.IsReadOnly)", span="134-134", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.IsReadOnly_ReturnsFalse()", file="BackgroundJobClientFacts.cs"];
m3_109 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.IsReadOnly_ReturnsFalse()", span="130-130", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.IsReadOnly_ReturnsFalse()", file="BackgroundJobClientFacts.cs"];
m3_81 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="BackgroundJobClientFacts.cs"];
m3_18 [label="_supervisor1.Verify(x => x.Start())", span="39-39", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientFacts.cs"];
m3_71 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Count_ReturnsTheNumberOfElements()", span="77-77", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Count_ReturnsTheNumberOfElements()", file="BackgroundJobClientFacts.cs"];
m3_72 [label="var collection = CreateCollection()", span="79-79", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Count_ReturnsTheNumberOfElements()", file="BackgroundJobClientFacts.cs"];
m3_73 [label="Assert.Equal(2, collection.Count)", span="81-81", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Count_ReturnsTheNumberOfElements()", file="BackgroundJobClientFacts.cs"];
m3_74 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Count_ReturnsTheNumberOfElements()", span="77-77", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Count_ReturnsTheNumberOfElements()", file="BackgroundJobClientFacts.cs"];
m3_98 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()", span="118-118", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="BackgroundJobClientFacts.cs"];
m3_99 [label="var supervisor = new Mock<IServerSupervisor>()", span="120-120", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="BackgroundJobClientFacts.cs"];
m3_100 [label="var collection = CreateCollection()", span="121-121", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="BackgroundJobClientFacts.cs"];
m3_101 [label="collection.Add(supervisor.Object)", span="122-122", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="BackgroundJobClientFacts.cs"];
m3_102 [label="collection.Remove(supervisor.Object)", span="124-124", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="BackgroundJobClientFacts.cs"];
m3_103 [label="Assert.False(collection.Contains(supervisor.Object))", span="126-126", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="BackgroundJobClientFacts.cs"];
m3_104 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()", span="118-118", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="BackgroundJobClientFacts.cs"];
m3_55 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="BackgroundJobClientFacts.cs"];
m3_6 [label="Assert.Equal(SucceededState.StateName, state.Name)", span="20-20", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="BackgroundJobClientFacts.cs"];
m3_51 [label="Entry Hangfire.Server.ServerSupervisorCollection.Dispose()", span="52-52", cluster="Hangfire.Server.ServerSupervisorCollection.Dispose()", file="BackgroundJobClientFacts.cs"];
m3_105 [label="Entry Unk.Remove", span="", cluster="Unk.Remove", file="BackgroundJobClientFacts.cs"];
m3_76 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Add_AddsNewElement()", span="85-85", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Add_AddsNewElement()", file="BackgroundJobClientFacts.cs"];
m3_77 [label="var collection = CreateCollection()", span="87-87", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Add_AddsNewElement()", file="BackgroundJobClientFacts.cs"];
m3_78 [label="collection.Add(new Mock<IServerSupervisor>().Object)", span="89-89", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Add_AddsNewElement()", file="BackgroundJobClientFacts.cs"];
m3_79 [label="Assert.Equal(3, collection.Count)", span="91-91", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Add_AddsNewElement()", file="BackgroundJobClientFacts.cs"];
m3_80 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Add_AddsNewElement()", span="85-85", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Add_AddsNewElement()", file="BackgroundJobClientFacts.cs"];
m3_17 [label="collection.Start()", span="37-37", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientFacts.cs"];
m3_68 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_38 [label="Exit Hangfire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", span="58-58", cluster="Hangfire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="BackgroundJobClientFacts.cs"];
m3_39 [label="Entry Unk.True", span="", cluster="Unk.True", file="BackgroundJobClientFacts.cs"];
m3_52 [label="Entry lambda expression", span="61-61", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_56 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_53 [label="x.Dispose()", span="61-61", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_54 [label="Exit lambda expression", span="61-61", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_57 [label="x.Dispose()", span="62-62", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_58 [label="Exit lambda expression", span="62-62", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_65 [label="Entry lambda expression", span="72-72", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_66 [label="x.Stop()", span="72-72", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_67 [label="Exit lambda expression", span="72-72", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_69 [label="x.Stop()", span="73-73", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_70 [label="Exit lambda expression", span="73-73", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_95 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="BackgroundJobClientFacts.cs"];
m3_59 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()", span="66-66", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientFacts.cs"];
m3_60 [label="var collection = CreateCollection()", span="68-68", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientFacts.cs"];
m3_61 [label="collection.Dispose()", span="70-70", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientFacts.cs"];
m3_62 [label="_supervisor1.Verify(x => x.Stop())", span="72-72", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientFacts.cs"];
m3_63 [label="_supervisor2.Verify(x => x.Stop())", span="73-73", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientFacts.cs"];
m3_64 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()", span="66-66", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredSupervisors()", file="BackgroundJobClientFacts.cs"];
m3_97 [label="Entry Unk.True", span="", cluster="Unk.True", file="BackgroundJobClientFacts.cs"];
m3_110 [label="Entry Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()", span="138-138", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()", file="BackgroundJobClientFacts.cs"];
m3_111 [label="var collection = CreateCollection()", span="140-140", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()", file="BackgroundJobClientFacts.cs"];
m3_112 [label="var array = new IServerSupervisor[3]", span="141-141", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()", file="BackgroundJobClientFacts.cs"];
m3_113 [label="collection.CopyTo(array, 1)", span="143-143", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()", file="BackgroundJobClientFacts.cs"];
m3_114 [label="Assert.Same(_supervisor1.Object, array[1])", span="145-145", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()", file="BackgroundJobClientFacts.cs"];
m3_115 [label="Assert.Same(_supervisor2.Object, array[2])", span="146-146", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()", file="BackgroundJobClientFacts.cs"];
m3_116 [label="Exit Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()", span="138-138", cluster="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts.CopyTo_WorksAsExpected()", file="BackgroundJobClientFacts.cs"];
m3_87 [label="Entry Hangfire.Server.ServerSupervisorCollection.Clear()", span="77-77", cluster="Hangfire.Server.ServerSupervisorCollection.Clear()", file="BackgroundJobClientFacts.cs"];
m3_121 [label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts", span="", file="BackgroundJobClientFacts.cs"];
m4_40 [label="Entry Unk.EnqueueItemOnList", span="", cluster="Unk.EnqueueItemOnList", file="BackgroundJobServer.cs"];
m4_5 [label="Entry HangFire.Tests.JobSteps.GivenTheJob(string)", span="24-24", cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", file="BackgroundJobServer.cs"];
m4_6 [label="Given(String.Format(''the '{0}' job of the '{1}' type'', jobId, DefaultJobType))", span="26-26", cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", file="BackgroundJobServer.cs"];
m4_7 [label="Exit HangFire.Tests.JobSteps.GivenTheJob(string)", span="24-24", cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", file="BackgroundJobServer.cs"];
m4_0 [label="Entry HangFire.Tests.JobSteps.GivenAJob()", span="18-18", cluster="HangFire.Tests.JobSteps.GivenAJob()", file="BackgroundJobServer.cs"];
m4_1 [label="Given(String.Format(''a job of the '{0}' type'', DefaultJobType.AssemblyQualifiedName))", span="20-20", cluster="HangFire.Tests.JobSteps.GivenAJob()", file="BackgroundJobServer.cs"];
m4_2 [label="Exit HangFire.Tests.JobSteps.GivenAJob()", span="18-18", cluster="HangFire.Tests.JobSteps.GivenAJob()", file="BackgroundJobServer.cs"];
m4_17 [label="Entry HangFire.Tests.JobSteps.GivenAJobOfTheTypeWithTheFollowingArguments(string, Table)", span="42-42", cluster="HangFire.Tests.JobSteps.GivenAJobOfTheTypeWithTheFollowingArguments(string, Table)", file="BackgroundJobServer.cs"];
m4_18 [label="GivenTheJobOfTheTypeWithTheFollowingArguments(JobSteps.DefaultJobId, type, args)", span="44-44", cluster="HangFire.Tests.JobSteps.GivenAJobOfTheTypeWithTheFollowingArguments(string, Table)", file="BackgroundJobServer.cs"];
m4_19 [label="Exit HangFire.Tests.JobSteps.GivenAJobOfTheTypeWithTheFollowingArguments(string, Table)", span="42-42", cluster="HangFire.Tests.JobSteps.GivenAJobOfTheTypeWithTheFollowingArguments(string, Table)", file="BackgroundJobServer.cs"];
m4_29 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="BackgroundJobServer.cs"];
m4_27 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="BackgroundJobServer.cs"];
m4_46 [label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                ''State'',\r\n                state)", span="94-97", cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="BackgroundJobServer.cs"];
m4_45 [label="Entry HangFire.Tests.JobSteps.GivenItsStateIs(string)", span="92-92", cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="BackgroundJobServer.cs"];
m4_47 [label="Exit HangFire.Tests.JobSteps.GivenItsStateIs(string)", span="92-92", cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="BackgroundJobServer.cs"];
m4_25 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="BackgroundJobServer.cs"];
m4_3 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="BackgroundJobServer.cs"];
m4_12 [label="Entry HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", span="36-36", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="BackgroundJobServer.cs"];
m4_13 [label="GivenTheJobOfTheTypeWithTheFollowingArguments(jobId, type, new Table(''Name'', ''Value''))", span="38-38", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="BackgroundJobServer.cs"];
m4_14 [label="Exit HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", span="36-36", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="BackgroundJobServer.cs"];
m4_9 [label="Entry HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", span="30-30", cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="BackgroundJobServer.cs"];
m4_10 [label="Given(String.Format(''the '{0}' job of the '{1}' type'', DefaultJobId, type))", span="32-32", cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="BackgroundJobServer.cs"];
m4_11 [label="Exit HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", span="30-30", cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="BackgroundJobServer.cs"];
m4_15 [label="Entry Table.cstr", span="", cluster="Table.cstr", file="BackgroundJobServer.cs"];
m4_53 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="BackgroundJobServer.cs"];
m4_26 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BackgroundJobServer.cs"];
m4_24 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="BackgroundJobServer.cs"];
m4_41 [label="Entry HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", span="79-79", cluster="HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", file="BackgroundJobServer.cs"];
m4_42 [label="Redis.Client.SetRangeInHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                new Dictionary<string, string>\r\n                    {\r\n                        { ''Type'', typeof(TestJob).AssemblyQualifiedName },\r\n                        { ''Args'', JobHelper.ToJson(new Dictionary<string, string>()) },\r\n                        { ''State'', String.Empty }\r\n                    })", span="81-88", cluster="HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", file="BackgroundJobServer.cs"];
m4_43 [label="Exit HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", span="79-79", cluster="HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", file="BackgroundJobServer.cs"];
m4_28 [label="Entry Unk.ToJson", span="", cluster="Unk.ToJson", file="BackgroundJobServer.cs"];
m4_33 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_30 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_31 [label="x[''Name'']", span="64-64", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_32 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_34 [label="x[''Value'']", span="64-64", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_35 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="BackgroundJobServer.cs"];
m4_21 [label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}:state'', jobId),\r\n                ''StateProp'',\r\n                ''SomeValue'')", span="54-57", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", file="BackgroundJobServer.cs"];
m4_16 [label="Entry HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", span="48-48", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", file="BackgroundJobServer.cs"];
m4_20 [label="Redis.Client.AddItemToList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId),\r\n                '''')", span="50-52", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", file="BackgroundJobServer.cs"];
m4_22 [label="Redis.Client.SetRangeInHash(\r\n                String.Format(''hangfire:job:{0}'', jobId),\r\n                new Dictionary<string, string>\r\n                    {\r\n                        { ''Type'', type },\r\n                        { ''Args'', JobHelper.ToJson(args.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])) },\r\n                        { ''State'', EnqueuedState.Name },\r\n                    })", span="59-66", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", file="BackgroundJobServer.cs"];
m4_23 [label="Exit HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", span="48-48", cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", file="BackgroundJobServer.cs"];
m4_4 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="BackgroundJobServer.cs"];
m4_44 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="BackgroundJobServer.cs"];
m4_52 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="BackgroundJobServer.cs"];
m4_36 [label="Entry HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", span="70-70", cluster="HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", file="BackgroundJobServer.cs"];
m4_37 [label="GivenAJobOfTheTypeWithTheFollowingArguments(typeof(CustomJob).AssemblyQualifiedName, table)", span="72-72", cluster="HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", file="BackgroundJobServer.cs"];
m4_38 [label="Redis.Client.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', QueueSteps.DefaultQueue),\r\n                DefaultJobId)", span="73-75", cluster="HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", file="BackgroundJobServer.cs"];
m4_39 [label="Exit HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", span="70-70", cluster="HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", file="BackgroundJobServer.cs"];
m4_48 [label="Entry HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="104-104", cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="BackgroundJobServer.cs"];
m4_49 [label="var jobState = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                ''State'')", span="106-108", cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="BackgroundJobServer.cs"];
m4_50 [label="Assert.AreEqual(state, jobState)", span="110-110", cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="BackgroundJobServer.cs"];
m4_51 [label="Exit HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="104-104", cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="BackgroundJobServer.cs"];
m4_54 [label="HangFire.Tests.JobSteps", span="", file="BackgroundJobServer.cs"];
m5_35 [label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", span="47-47", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="BackgroundJobServerFacts.cs"];
m5_36 [label="JobStorage.Current = new Mock<JobStorage>().Object", span="49-49", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="BackgroundJobServerFacts.cs"];
m5_37 [label="Assert.DoesNotThrow(() => new BackgroundJobServer(_options))", span="50-50", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="BackgroundJobServerFacts.cs"];
m5_38 [label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", span="47-47", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="BackgroundJobServerFacts.cs"];
m5_86 [label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", span="96-96", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="BackgroundJobServerFacts.cs"];
m5_87 [label="var server = CreateServer()", span="99-99", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="BackgroundJobServerFacts.cs"];
m5_88 [label="var runners = server.GetServerComponentsRunner()", span="102-102", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="BackgroundJobServerFacts.cs"];
m5_89 [label="Assert.True(runners.Select(x => x.GetType()).Contains(typeof(WorkerManager)))", span="105-105", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="BackgroundJobServerFacts.cs"];
m5_90 [label="var componentTypes = runners.OfType<ServerComponentRunner>()\r\n                .Select(x => x.Component)\r\n                .Select(x => x.GetType())\r\n                .ToArray()", span="107-110", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="BackgroundJobServerFacts.cs"];
m5_91 [label="Assert.Contains(typeof(ServerHeartbeat), componentTypes)", span="112-112", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="BackgroundJobServerFacts.cs"];
m5_92 [label="Assert.Contains(typeof(ServerWatchdog), componentTypes)", span="113-113", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="BackgroundJobServerFacts.cs"];
m5_93 [label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", span="96-96", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="BackgroundJobServerFacts.cs"];
m5_22 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="BackgroundJobServerFacts.cs"];
m5_65 [label="Entry Unk.Stop", span="", cluster="Unk.Stop", file="BackgroundJobServerFacts.cs"];
m5_83 [label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", span="136-136", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", file="BackgroundJobServerFacts.cs"];
m5_127 [label="return new BackgroundJobServer(_options, _storage.Object);", span="138-138", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", file="BackgroundJobServerFacts.cs"];
m5_128 [label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", span="136-136", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", file="BackgroundJobServerFacts.cs"];
m5_61 [label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", span="69-69", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="BackgroundJobServerFacts.cs"];
m5_62 [label="_serverMock.Object.Stop()", span="71-71", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="BackgroundJobServerFacts.cs"];
m5_63 [label="_runner.Verify(x => x.Stop())", span="73-73", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="BackgroundJobServerFacts.cs"];
m5_64 [label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", span="69-69", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="BackgroundJobServerFacts.cs"];
m5_103 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="BackgroundJobServerFacts.cs"];
m5_39 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="BackgroundJobServerFacts.cs"];
m5_69 [label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", span="77-77", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="BackgroundJobServerFacts.cs"];
m5_70 [label="_serverMock.Object.Dispose()", span="79-79", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="BackgroundJobServerFacts.cs"];
m5_71 [label="_runner.Verify(x => x.Dispose())", span="81-81", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="BackgroundJobServerFacts.cs"];
m5_72 [label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", span="77-77", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="BackgroundJobServerFacts.cs"];
m5_9 [label="Entry Mock<IServerComponentRunner>.cstr", span="", cluster="Mock<IServerComponentRunner>.cstr", file="BackgroundJobServerFacts.cs"];
m5_21 [label="Entry Unk.>", span="", cluster="Unk.>", file="BackgroundJobServerFacts.cs"];
m5_111 [label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", span="117-117", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="BackgroundJobServerFacts.cs"];
m5_112 [label="var storageComponent = new Mock<IServerComponent>()", span="120-120", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="BackgroundJobServerFacts.cs"];
m5_113 [label="_storage.Setup(x => x.GetComponents()).Returns(new[] { storageComponent.Object })", span="121-121", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="BackgroundJobServerFacts.cs"];
m5_117 [label="Assert.Contains(storageComponent.Object, components)", span="133-133", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="BackgroundJobServerFacts.cs"];
m5_114 [label="var server = CreateServer()", span="123-123", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="BackgroundJobServerFacts.cs"];
m5_115 [label="var runners = server.GetServerComponentsRunner()", span="126-126", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="BackgroundJobServerFacts.cs"];
m5_116 [label="var components = runners.OfType<ServerComponentRunner>()\r\n                .Select(x => x.Component)\r\n                .ToArray()", span="129-131", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="BackgroundJobServerFacts.cs"];
m5_118 [label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", span="117-117", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="BackgroundJobServerFacts.cs"];
m5_0 [label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", span="15-15", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="BackgroundJobServerFacts.cs"];
m5_1 [label="_storage = new Mock<JobStorage>()", span="17-17", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="BackgroundJobServerFacts.cs"];
m5_2 [label="_options = new BackgroundJobServerOptions()", span="18-18", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="BackgroundJobServerFacts.cs"];
m5_3 [label="_runner = new Mock<IServerComponentRunner>()", span="20-20", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="BackgroundJobServerFacts.cs"];
m5_4 [label="_serverMock = new Mock<BackgroundJobServer>(_options, _storage.Object)\r\n            {\r\n                CallBase = true\r\n            }", span="21-24", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="BackgroundJobServerFacts.cs"];
m5_5 [label="_serverMock.Setup(x => x.GetServerRunner()).Returns(_runner.Object)", span="25-25", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="BackgroundJobServerFacts.cs"];
m5_6 [label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", span="15-15", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="BackgroundJobServerFacts.cs"];
m5_123 [label="Entry Unk.GetComponents", span="", cluster="Unk.GetComponents", file="BackgroundJobServerFacts.cs"];
m5_44 [label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", span="54-54", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="BackgroundJobServerFacts.cs"];
m5_45 [label="JobStorage.Current = new Mock<JobStorage>().Object", span="56-56", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="BackgroundJobServerFacts.cs"];
m5_46 [label="Assert.DoesNotThrow(() => new BackgroundJobServer())", span="57-57", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="BackgroundJobServerFacts.cs"];
m5_47 [label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", span="54-54", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="BackgroundJobServerFacts.cs"];
m5_77 [label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", span="85-85", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="BackgroundJobServerFacts.cs"];
m5_78 [label="var server = CreateServer()", span="87-87", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="BackgroundJobServerFacts.cs"];
m5_79 [label="var runner = server.GetServerRunner()", span="89-89", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="BackgroundJobServerFacts.cs"];
m5_80 [label="Assert.NotNull(runner)", span="91-91", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="BackgroundJobServerFacts.cs"];
m5_81 [label="Assert.IsType<ServerCore>(((ServerComponentRunner) runner).Component)", span="92-92", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="BackgroundJobServerFacts.cs"];
m5_82 [label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", span="85-85", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="BackgroundJobServerFacts.cs"];
m5_99 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="BackgroundJobServerFacts.cs"];
m5_85 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="BackgroundJobServerFacts.cs"];
m5_43 [label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", span="41-41", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", file="BackgroundJobServerFacts.cs"];
m5_11 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="BackgroundJobServerFacts.cs"];
m5_51 [label="Entry HangFire.BackgroundJobServer.BackgroundJobServer()", span="36-36", cluster="HangFire.BackgroundJobServer.BackgroundJobServer()", file="BackgroundJobServerFacts.cs"];
m5_73 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="BackgroundJobServerFacts.cs"];
m5_34 [label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="46-46", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="BackgroundJobServerFacts.cs"];
m5_10 [label="Entry Mock<BackgroundJobServer>.cstr", span="", cluster="Mock<BackgroundJobServer>.cstr", file="BackgroundJobServerFacts.cs"];
m5_119 [label="Entry Mock<IServerComponent>.cstr", span="", cluster="Mock<IServerComponent>.cstr", file="BackgroundJobServerFacts.cs"];
m5_52 [label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", span="61-61", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="BackgroundJobServerFacts.cs"];
m5_53 [label="_serverMock.Object.Start()", span="63-63", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="BackgroundJobServerFacts.cs"];
m5_54 [label="_runner.Verify(x => x.Start())", span="65-65", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="BackgroundJobServerFacts.cs"];
m5_55 [label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", span="61-61", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="BackgroundJobServerFacts.cs"];
m5_94 [label="Entry HangFire.BackgroundJobServer.GetServerComponentsRunner()", span="99-99", cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="BackgroundJobServerFacts.cs"];
m5_98 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="BackgroundJobServerFacts.cs"];
m5_17 [label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="29-29", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="BackgroundJobServerFacts.cs"];
m5_18 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobServer(null, _storage.Object))", span="31-32", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="BackgroundJobServerFacts.cs"];
m5_19 [label="Assert.Equal(''options'', exception.ParamName)", span="34-34", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="BackgroundJobServerFacts.cs"];
m5_20 [label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="29-29", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="BackgroundJobServerFacts.cs"];
m5_124 [label="Entry lambda expression", span="130-130", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_13 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_14 [label="x.GetServerRunner()", span="25-25", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_15 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_23 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_24 [label="new BackgroundJobServer(null, _storage.Object)", span="32-32", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_25 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_31 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_32 [label="new BackgroundJobServer(_options, null)", span="41-41", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_33 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_40 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_41 [label="new BackgroundJobServer(_options)", span="50-50", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_42 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_48 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_49 [label="new BackgroundJobServer()", span="57-57", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_50 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_58 [label="Entry lambda expression", span="65-65", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_59 [label="x.Start()", span="65-65", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_60 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_66 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_67 [label="x.Stop()", span="73-73", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_68 [label="Exit lambda expression", span="73-73", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_74 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_75 [label="x.Dispose()", span="81-81", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_76 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_100 [label="Entry lambda expression", span="105-105", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_104 [label="Entry lambda expression", span="108-108", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_107 [label="Entry lambda expression", span="109-109", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_101 [label="x.GetType()", span="105-105", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_102 [label="Exit lambda expression", span="105-105", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_105 [label="x.Component", span="108-108", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_106 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_108 [label="x.GetType()", span="109-109", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_109 [label="Exit lambda expression", span="109-109", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_120 [label="Entry lambda expression", span="121-121", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_121 [label="x.GetComponents()", span="121-121", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_122 [label="Exit lambda expression", span="121-121", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_125 [label="x.Component", span="130-130", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_126 [label="Exit lambda expression", span="130-130", cluster="lambda expression", file="BackgroundJobServerFacts.cs"];
m5_96 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="BackgroundJobServerFacts.cs"];
m5_16 [label="Entry Unk.GetServerRunner", span="", cluster="Unk.GetServerRunner", file="BackgroundJobServerFacts.cs"];
m5_56 [label="Entry Unk.Start", span="", cluster="Unk.Start", file="BackgroundJobServerFacts.cs"];
m5_110 [label="Entry Unk.GetType", span="", cluster="Unk.GetType", file="BackgroundJobServerFacts.cs"];
m5_27 [label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="38-38", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobServerFacts.cs"];
m5_28 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobServer(_options, null))", span="40-41", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobServerFacts.cs"];
m5_29 [label="Assert.Equal(''storage'', exception.ParamName)", span="43-43", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobServerFacts.cs"];
m5_30 [label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="38-38", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobServerFacts.cs"];
m5_97 [label="Entry Unk.True", span="", cluster="Unk.True", file="BackgroundJobServerFacts.cs"];
m5_84 [label="Entry HangFire.BackgroundJobServer.GetServerRunner()", span="77-77", cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="BackgroundJobServerFacts.cs"];
m5_8 [label="Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="11-11", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerFacts.cs"];
m5_12 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="BackgroundJobServerFacts.cs"];
m5_26 [label="Entry BackgroundJobServer.cstr", span="", cluster="BackgroundJobServer.cstr", file="BackgroundJobServerFacts.cs"];
m5_57 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="BackgroundJobServerFacts.cs"];
m5_7 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="BackgroundJobServerFacts.cs"];
m5_129 [label="HangFire.Core.Tests.BackgroundJobServerFacts", span="", file="BackgroundJobServerFacts.cs"];
m6_26 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="BackgroundJobServerOptions.cs"];
m6_20 [label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="51-51", cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="BackgroundJobServerOptions.cs"];
m6_0 [label="Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="11-11", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs"];
m6_5 [label="Exit HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="11-11", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="BackgroundJobServerOptions.cs"];
m6_4 [label="ShutdownTimeout = TimeSpan.FromSeconds(15)", span="16-16", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs"];
m6_3 [label="Queues = new[] { EnqueuedState.DefaultQueue }", span="15-15", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs"];
m6_6 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="BackgroundJobServerOptions.cs"];
m6_8 [label="value == ''<Tomorrow timestamp>''", span="25-25", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="BackgroundJobServerOptions.cs"];
m6_2 [label="ServerName = Environment.MachineName", span="14-14", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs"];
m6_11 [label="value == ''<Non-empty>''", span="32-32", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="BackgroundJobServerOptions.cs"];
m6_13 [label="value.StartsWith(''<Assembly qualified name of '')", span="36-36", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="BackgroundJobServerOptions.cs"];
m6_14 [label="var splitted = value.Split('\'')", span="38-38", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="BackgroundJobServerOptions.cs"];
m6_16 [label="Assert.Equal(value, actual[name])", span="43-43", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="BackgroundJobServerOptions.cs"];
m6_7 [label="HangFire.BackgroundJobServerOptions", span="", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="BackgroundJobServerOptions.cs"];
m6_9 [label="var timestamp = JobHelper.FromStringTimestamp(actual[name])", span="27-27", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="BackgroundJobServerOptions.cs"];
m6_1 [label="WorkerCount = Environment.ProcessorCount * 5", span="13-13", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs"];
m6_12 [label="Assert.False(String.IsNullOrEmpty(actual[name]))", span="34-34", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="BackgroundJobServerOptions.cs"];
m6_15 [label="Assert.Equal(Type.GetType(splitted[1]).AssemblyQualifiedName, actual[name])", span="39-39", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="BackgroundJobServerOptions.cs"];
m6_10 [label="Assert.True(\r\n                        timestamp >= DateTime.UtcNow.Date.AddDays(1)\r\n                        && timestamp < DateTime.UtcNow.Date.AddDays(2))", span="28-30", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="BackgroundJobServerOptions.cs"];
m6_17 [label="Exit HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="BackgroundJobServerOptions.cs"];
m6_19 [label="Entry Unk.True", span="", cluster="Unk.True", file="BackgroundJobServerOptions.cs"];
m6_25 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="BackgroundJobServerOptions.cs"];
m6_21 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="BackgroundJobServerOptions.cs"];
m6_23 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="BackgroundJobServerOptions.cs"];
m6_24 [label="Entry Unk.False", span="", cluster="Unk.False", file="BackgroundJobServerOptions.cs"];
m6_28 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="BackgroundJobServerOptions.cs"];
m6_18 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="BackgroundJobServerOptions.cs"];
m6_27 [label="Entry System.Type.GetType(string)", span="0-0", cluster="System.Type.GetType(string)", file="BackgroundJobServerOptions.cs"];
m6_22 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="BackgroundJobServerOptions.cs"];
m8_22 [label="Entry HangFire.Tests.States.FailedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.States.FailedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="ClientExceptionContextFacts.cs"];
m8_23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63", cluster="HangFire.Tests.States.FailedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="ClientExceptionContextFacts.cs"];
m8_24 [label="Exit HangFire.Tests.States.FailedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.States.FailedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="ClientExceptionContextFacts.cs"];
m8_25 [label="Entry Unk.OnScenarioStart", span="", cluster="Unk.OnScenarioStart", file="ClientExceptionContextFacts.cs"];
m8_29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors", file="ClientExceptionContextFacts.cs"];
m8_38 [label="Entry HangFire.Tests.States.FailedStateFeature.System.IDisposable.Dispose()", span="85-85", cluster="HangFire.Tests.States.FailedStateFeature.System.IDisposable.Dispose()", file="ClientExceptionContextFacts.cs"];
m8_39 [label="this.ScenarioTearDown()", span="87-87", cluster="HangFire.Tests.States.FailedStateFeature.System.IDisposable.Dispose()", file="ClientExceptionContextFacts.cs"];
m8_40 [label="Exit HangFire.Tests.States.FailedStateFeature.System.IDisposable.Dispose()", span="85-85", cluster="HangFire.Tests.States.FailedStateFeature.System.IDisposable.Dispose()", file="ClientExceptionContextFacts.cs"];
m8_21 [label="Entry Unk.OnScenarioEnd", span="", cluster="Unk.OnScenarioEnd", file="ClientExceptionContextFacts.cs"];
m8_36 [label="Entry HangFire.Tests.States.FailedStateFeature.SetFixture(HangFire.Tests.States.FailedStateFeature.FixtureData)", span="81-81", cluster="HangFire.Tests.States.FailedStateFeature.SetFixture(HangFire.Tests.States.FailedStateFeature.FixtureData)", file="ClientExceptionContextFacts.cs"];
m8_37 [label="Exit HangFire.Tests.States.FailedStateFeature.SetFixture(HangFire.Tests.States.FailedStateFeature.FixtureData)", span="81-81", cluster="HangFire.Tests.States.FailedStateFeature.SetFixture(HangFire.Tests.States.FailedStateFeature.FixtureData)", file="ClientExceptionContextFacts.cs"];
m8_35 [label="Entry Unk.And", span="", cluster="Unk.And", file="ClientExceptionContextFacts.cs"];
m8_0 [label="Entry HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="ClientExceptionContextFacts.cs"];
m8_1 [label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32", cluster="HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="ClientExceptionContextFacts.cs"];
m8_2 [label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Failed state'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34", cluster="HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="ClientExceptionContextFacts.cs"];
m8_3 [label="testRunner.OnFeatureStart(featureInfo)", span="35-35", cluster="HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="ClientExceptionContextFacts.cs"];
m8_4 [label="Exit HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="ClientExceptionContextFacts.cs"];
m8_5 [label="Entry Unk.GetTestRunner", span="", cluster="Unk.GetTestRunner", file="ClientExceptionContextFacts.cs"];
m8_18 [label="Entry HangFire.Tests.States.FailedStateFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.States.FailedStateFeature.ScenarioTearDown()", file="ClientExceptionContextFacts.cs"];
m8_19 [label="testRunner.OnScenarioEnd()", span="58-58", cluster="HangFire.Tests.States.FailedStateFeature.ScenarioTearDown()", file="ClientExceptionContextFacts.cs"];
m8_20 [label="Exit HangFire.Tests.States.FailedStateFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.States.FailedStateFeature.ScenarioTearDown()", file="ClientExceptionContextFacts.cs"];
m8_26 [label="Entry HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", file="ClientExceptionContextFacts.cs"];
m8_27 [label="testRunner.CollectScenarioErrors()", span="68-68", cluster="HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", file="ClientExceptionContextFacts.cs"];
m8_28 [label="Exit HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", file="ClientExceptionContextFacts.cs"];
m8_13 [label="Entry Unk.OnFeatureEnd", span="", cluster="Unk.OnFeatureEnd", file="ClientExceptionContextFacts.cs"];
m8_7 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="ClientExceptionContextFacts.cs"];
m8_50 [label="Entry Unk.When", span="", cluster="Unk.When", file="ClientExceptionContextFacts.cs"];
m8_41 [label="Entry HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", span="93-93", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="ClientExceptionContextFacts.cs"];
m8_42 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying it should add the job to the failed set'', ((string[])(null)))", span="95-95", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="ClientExceptionContextFacts.cs"];
m8_43 [label="this.ScenarioSetup(scenarioInfo)", span="97-97", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="ClientExceptionContextFacts.cs"];
m8_44 [label="this.FeatureBackground()", span="99-99", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="ClientExceptionContextFacts.cs"];
m8_45 [label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="101-101", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="ClientExceptionContextFacts.cs"];
m8_46 [label="testRunner.Then(''the job should be added to the failed set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="103-103", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="ClientExceptionContextFacts.cs"];
m8_47 [label="this.ScenarioCleanup()", span="105-105", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="ClientExceptionContextFacts.cs"];
m8_48 [label="Exit HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", span="93-93", cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="ClientExceptionContextFacts.cs"];
m8_52 [label="Entry HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", span="112-112", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="ClientExceptionContextFacts.cs"];
m8_53 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should remove the job from the failed set'', ((string[])(null)))", span="114-114", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="ClientExceptionContextFacts.cs"];
m8_54 [label="this.ScenarioSetup(scenarioInfo)", span="116-116", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="ClientExceptionContextFacts.cs"];
m8_55 [label="this.FeatureBackground()", span="118-118", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="ClientExceptionContextFacts.cs"];
m8_56 [label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="120-120", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="ClientExceptionContextFacts.cs"];
m8_57 [label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="122-122", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="ClientExceptionContextFacts.cs"];
m8_58 [label="testRunner.Then(''the job should be removed from the failed set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="124-124", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="ClientExceptionContextFacts.cs"];
m8_59 [label="this.ScenarioCleanup()", span="126-126", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="ClientExceptionContextFacts.cs"];
m8_60 [label="Exit HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", span="112-112", cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="ClientExceptionContextFacts.cs"];
m8_49 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="ClientExceptionContextFacts.cs"];
m8_51 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="ClientExceptionContextFacts.cs"];
m8_34 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="ClientExceptionContextFacts.cs"];
m8_9 [label="Entry HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", file="ClientExceptionContextFacts.cs"];
m8_10 [label="testRunner.OnFeatureEnd()", span="41-41", cluster="HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", file="ClientExceptionContextFacts.cs"];
m8_11 [label="testRunner = null", span="42-42", cluster="HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", file="ClientExceptionContextFacts.cs"];
m8_12 [label="Exit HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", file="ClientExceptionContextFacts.cs"];
m8_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="ClientExceptionContextFacts.cs"];
m8_8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart", file="ClientExceptionContextFacts.cs"];
m8_30 [label="Entry HangFire.Tests.States.FailedStateFeature.FeatureBackground()", span="71-71", cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="ClientExceptionContextFacts.cs"];
m8_31 [label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75", cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="ClientExceptionContextFacts.cs"];
m8_32 [label="testRunner.And(''the Failed state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="77-77", cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="ClientExceptionContextFacts.cs"];
m8_33 [label="Exit HangFire.Tests.States.FailedStateFeature.FeatureBackground()", span="71-71", cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="ClientExceptionContextFacts.cs"];
m8_14 [label="Entry HangFire.Tests.States.FailedStateFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", file="ClientExceptionContextFacts.cs"];
m8_15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Failed state''))", span="48-49", cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", file="ClientExceptionContextFacts.cs"];
m8_16 [label="HangFire.Tests.States.FailedStateFeature.FeatureSetup(null)", span="51-51", cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", file="ClientExceptionContextFacts.cs"];
m8_17 [label="Exit HangFire.Tests.States.FailedStateFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", file="ClientExceptionContextFacts.cs"];
m8_61 [label="HangFire.Tests.States.FailedStateFeature", span="", file="ClientExceptionContextFacts.cs"];
m9_89 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="155-155", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="ConnectionFacts.cs"];
m9_90 [label="AddToSet(key, value, 0.0)", span="157-157", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="ConnectionFacts.cs"];
m9_91 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="155-155", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="ConnectionFacts.cs"];
m9_105 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="181-181", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ConnectionFacts.cs"];
m9_106 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="183-185", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ConnectionFacts.cs"];
m9_107 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="181-181", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ConnectionFacts.cs"];
m9_92 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="160-160", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ConnectionFacts.cs"];
m9_93 [label="string addSql = @''\r\nmerge HangFire.[Set] as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="162-167", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ConnectionFacts.cs"];
m9_94 [label="QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="169-171", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ConnectionFacts.cs"];
m9_95 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="160-160", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ConnectionFacts.cs"];
m9_71 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="134-134", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ConnectionFacts.cs"];
m9_72 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="136-138", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ConnectionFacts.cs"];
m9_73 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="134-134", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ConnectionFacts.cs"];
m9_126 [label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="ConnectionFacts.cs"];
m9_47 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", span="101-101", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", file="ConnectionFacts.cs"];
m9_48 [label="string addStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="103-105", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", file="ConnectionFacts.cs"];
m9_49 [label="QueueCommand(x => x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                }))", span="107-116", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", file="ConnectionFacts.cs"];
m9_50 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", span="101-101", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", file="ConnectionFacts.cs"];
m9_0 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="ConnectionFacts.cs"];
m9_1 [label="connection == null", span="39-39", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="ConnectionFacts.cs"];
m9_3 [label="queueProviders == null", span="40-40", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="ConnectionFacts.cs"];
m9_5 [label="_connection = connection", span="42-42", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="ConnectionFacts.cs"];
m9_6 [label="_queueProviders = queueProviders", span="43-43", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="ConnectionFacts.cs"];
m9_2 [label="throw new ArgumentNullException(''connection'');", span="39-39", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="ConnectionFacts.cs"];
m9_4 [label="throw new ArgumentNullException(''queueProviders'');", span="40-40", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="ConnectionFacts.cs"];
m9_7 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="ConnectionFacts.cs"];
m9_117 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="195-195", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ConnectionFacts.cs"];
m9_118 [label="string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num, [Key] from HangFire.List)\r\ndelete from cte where row_num not between @start and @end and [Key] = @key''", span="197-200", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ConnectionFacts.cs"];
m9_119 [label="QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="202-204", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ConnectionFacts.cs"];
m9_120 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="195-195", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ConnectionFacts.cs"];
m9_26 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="207-207", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="ConnectionFacts.cs"];
m9_124 [label="_commandQueue.Enqueue(action)", span="209-209", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="ConnectionFacts.cs"];
m9_125 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="207-207", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="ConnectionFacts.cs"];
m9_45 [label="Entry HangFire.States.IState.SerializeData()", span="27-27", cluster="HangFire.States.IState.SerializeData()", file="ConnectionFacts.cs"];
m9_20 [label="Entry Unk.EnlistTransaction", span="", cluster="Unk.EnlistTransaction", file="ConnectionFacts.cs"];
m9_21 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="ConnectionFacts.cs"];
m9_18 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr", file="ConnectionFacts.cs"];
m9_38 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", span="81-81", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", file="ConnectionFacts.cs"];
m9_39 [label="string addAndSetStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate HangFire.Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="83-86", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", file="ConnectionFacts.cs"];
m9_40 [label="QueueCommand(x => x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                }))", span="88-98", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", file="ConnectionFacts.cs"];
m9_41 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", span="81-81", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", file="ConnectionFacts.cs"];
m9_77 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="141-141", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="ConnectionFacts.cs"];
m9_78 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="143-145", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="ConnectionFacts.cs"];
m9_79 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="141-141", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="ConnectionFacts.cs"];
m9_83 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="148-148", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ConnectionFacts.cs"];
m9_84 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="150-152", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ConnectionFacts.cs"];
m9_85 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="148-148", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ConnectionFacts.cs"];
m9_22 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="ConnectionFacts.cs"];
m9_30 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="ConnectionFacts.cs"];
m9_64 [label="Entry HangFire.SqlServer.IPersistentJobQueue.Enqueue(string, string)", span="24-24", cluster="HangFire.SqlServer.IPersistentJobQueue.Enqueue(string, string)", file="ConnectionFacts.cs"];
m9_99 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="174-174", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ConnectionFacts.cs"];
m9_100 [label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="176-178", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ConnectionFacts.cs"];
m9_101 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="174-174", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ConnectionFacts.cs"];
m9_23 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="67-67", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ConnectionFacts.cs"];
m9_24 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="69-71", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ConnectionFacts.cs"];
m9_25 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="67-67", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ConnectionFacts.cs"];
m9_111 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="188-188", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ConnectionFacts.cs"];
m9_112 [label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="190-192", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ConnectionFacts.cs"];
m9_113 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="188-188", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ConnectionFacts.cs"];
m9_11 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="50-50", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ConnectionFacts.cs"];
m9_12 [label="var transaction = new TransactionScope(\r\n                TransactionScopeOption.Required,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.Serializable })", span="52-54", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ConnectionFacts.cs"];
m9_13 [label="_connection.EnlistTransaction(Transaction.Current)", span="56-56", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ConnectionFacts.cs"];
m9_16 [label="transaction.Complete()", span="63-63", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ConnectionFacts.cs"];
m9_14 [label=_commandQueue, span="58-58", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ConnectionFacts.cs"];
m9_15 [label="command(_connection)", span="60-60", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ConnectionFacts.cs"];
m9_17 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="50-50", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ConnectionFacts.cs"];
m9_59 [label="Entry HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53", cluster="HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="ConnectionFacts.cs"];
m9_19 [label="Entry TransactionOptions.cstr", span="", cluster="TransactionOptions.cstr", file="ConnectionFacts.cs"];
m9_121 [label="Entry lambda expression", span="202-204", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_28 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="69-71", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_27 [label="Entry lambda expression", span="69-71", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_29 [label="Exit lambda expression", span="69-71", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_36 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="76-78", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_35 [label="Entry lambda expression", span="76-78", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_37 [label="Exit lambda expression", span="76-78", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_43 [label="x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                })", span="88-98", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_42 [label="Entry lambda expression", span="88-98", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_44 [label="Exit lambda expression", span="88-98", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_52 [label="x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                })", span="107-116", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_51 [label="Entry lambda expression", span="107-116", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_53 [label="Exit lambda expression", span="107-116", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_62 [label="persistentQueue.Enqueue(queue, jobId)", span="124-124", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_61 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_63 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_69 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="129-131", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_68 [label="Entry lambda expression", span="129-131", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_70 [label="Exit lambda expression", span="129-131", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_75 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="136-138", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_74 [label="Entry lambda expression", span="136-138", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_76 [label="Exit lambda expression", span="136-138", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_81 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="143-145", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_80 [label="Entry lambda expression", span="143-145", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_82 [label="Exit lambda expression", span="143-145", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_87 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="150-152", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_86 [label="Entry lambda expression", span="150-152", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_88 [label="Exit lambda expression", span="150-152", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_97 [label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="169-171", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_96 [label="Entry lambda expression", span="169-171", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_98 [label="Exit lambda expression", span="169-171", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_103 [label="x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="176-178", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_102 [label="Entry lambda expression", span="176-178", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_104 [label="Exit lambda expression", span="176-178", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_109 [label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="183-185", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_108 [label="Entry lambda expression", span="183-185", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_110 [label="Exit lambda expression", span="183-185", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_115 [label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="190-192", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_114 [label="Entry lambda expression", span="190-192", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_116 [label="Exit lambda expression", span="190-192", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_122 [label="x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="202-204", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_123 [label="Exit lambda expression", span="202-204", cluster="lambda expression", file="ConnectionFacts.cs"];
m9_46 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="ConnectionFacts.cs"];
m9_31 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="ConnectionFacts.cs"];
m9_54 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="119-119", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ConnectionFacts.cs"];
m9_55 [label="var provider = _queueProviders.GetProvider(queue)", span="121-121", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ConnectionFacts.cs"];
m9_57 [label="QueueCommand(_ => persistentQueue.Enqueue(queue, jobId))", span="124-124", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ConnectionFacts.cs"];
m9_56 [label="var persistentQueue = provider.GetJobQueue(_connection)", span="122-122", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ConnectionFacts.cs"];
m9_58 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="119-119", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ConnectionFacts.cs"];
m9_60 [label="Entry Unk.GetJobQueue", span="", cluster="Unk.GetJobQueue", file="ConnectionFacts.cs"];
m9_65 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="127-127", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="ConnectionFacts.cs"];
m9_66 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="129-131", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="ConnectionFacts.cs"];
m9_67 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="127-127", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="ConnectionFacts.cs"];
m9_32 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="74-74", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="ConnectionFacts.cs"];
m9_33 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="76-78", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="ConnectionFacts.cs"];
m9_34 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="74-74", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="ConnectionFacts.cs"];
m9_9 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="46-46", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="ConnectionFacts.cs"];
m9_10 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="46-46", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="ConnectionFacts.cs"];
m9_127 [label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", span="", file="ConnectionFacts.cs"];
m9_128 [label=string, span="", file="ConnectionFacts.cs"];
m9_129 [label="System.TimeSpan", span="", file="ConnectionFacts.cs"];
m9_130 [label=string, span="", file="ConnectionFacts.cs"];
m9_131 [label=string, span="", file="ConnectionFacts.cs"];
m9_132 [label="HangFire.States.IState", span="", file="ConnectionFacts.cs"];
m9_133 [label=addAndSetStateSql, span="", file="ConnectionFacts.cs"];
m9_134 [label=string, span="", file="ConnectionFacts.cs"];
m9_135 [label="HangFire.States.IState", span="", file="ConnectionFacts.cs"];
m9_136 [label=addStateSql, span="", file="ConnectionFacts.cs"];
m9_137 [label=string, span="", file="ConnectionFacts.cs"];
m9_138 [label=string, span="", file="ConnectionFacts.cs"];
m9_139 [label=persistentQueue, span="", file="ConnectionFacts.cs"];
m9_140 [label=string, span="", file="ConnectionFacts.cs"];
m9_141 [label=string, span="", file="ConnectionFacts.cs"];
m9_142 [label="System.TimeSpan", span="", file="ConnectionFacts.cs"];
m9_143 [label=string, span="", file="ConnectionFacts.cs"];
m9_144 [label=string, span="", file="ConnectionFacts.cs"];
m9_145 [label="System.TimeSpan", span="", file="ConnectionFacts.cs"];
m9_146 [label=string, span="", file="ConnectionFacts.cs"];
m9_147 [label=string, span="", file="ConnectionFacts.cs"];
m9_148 [label=double, span="", file="ConnectionFacts.cs"];
m9_149 [label=addSql, span="", file="ConnectionFacts.cs"];
m9_150 [label=string, span="", file="ConnectionFacts.cs"];
m9_151 [label=string, span="", file="ConnectionFacts.cs"];
m9_152 [label=string, span="", file="ConnectionFacts.cs"];
m9_153 [label=string, span="", file="ConnectionFacts.cs"];
m9_154 [label=string, span="", file="ConnectionFacts.cs"];
m9_155 [label=string, span="", file="ConnectionFacts.cs"];
m9_156 [label=string, span="", file="ConnectionFacts.cs"];
m9_157 [label=int, span="", file="ConnectionFacts.cs"];
m9_158 [label=int, span="", file="ConnectionFacts.cs"];
m9_159 [label=trimSql, span="", file="ConnectionFacts.cs"];
m10_351 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="CreateContext.cs"];
m10_112 [label="Entry long.Parse(string)", span="0-0", cluster="long.Parse(string)", file="CreateContext.cs"];
m10_366 [label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0", cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="CreateContext.cs"];
m10_89 [label="Entry Hangfire.Storage.Monitoring.ServerDto.ServerDto()", span="21-21", cluster="Hangfire.Storage.Monitoring.ServerDto.ServerDto()", file="CreateContext.cs"];
m10_45 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="484-484", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="CreateContext.cs"];
m10_352 [label="string jobsSql = @''\r\nselect * from (\r\n  select j.*, s.Reason as StateReason, s.Data as StateData, row_number() over (order by j.Id desc) as row_num\r\n  from HangFire.Job j with (forceseek)\r\n  left join HangFire.State s on j.StateId = s.Id\r\n  where j.StateName = @stateName\r\n) as j where j.row_num between @start and @end\r\n''", span="491-498", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="CreateContext.cs"];
m10_353 [label="var jobs = connection.Query<SqlJob>(\r\n                        jobsSql,\r\n                        new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                        .ToList()", span="500-503", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="CreateContext.cs"];
m10_354 [label="return DeserializeJobs(jobs, selector);", span="505-505", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="CreateContext.cs"];
m10_355 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="484-484", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="CreateContext.cs"];
m10_367 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="CreateContext.cs"];
m10_27 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="66-66", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="CreateContext.cs"];
m10_28 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, FailedState.StateName));", span="68-69", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="CreateContext.cs"];
m10_29 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="66-66", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="CreateContext.cs"];
m10_140 [label="Entry Hangfire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="18-18", cluster="Hangfire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="CreateContext.cs"];
m10_100 [label="Entry Hangfire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="23-23", cluster="Hangfire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="CreateContext.cs"];
m10_356 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="508-508", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="CreateContext.cs"];
m10_357 [label="var result = new List<KeyValuePair<string, TDto>>(jobs.Count)", span="512-512", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="CreateContext.cs"];
m10_358 [label=jobs, span="514-514", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="CreateContext.cs"];
m10_361 [label="var dto = selector(job, DeserializeJob(job.InvocationData, job.Arguments), stateData)", span="521-521", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="CreateContext.cs"];
m10_362 [label="result.Add(new KeyValuePair<string, TDto>(\r\n                    job.Id.ToString(), dto))", span="523-524", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="CreateContext.cs"];
m10_363 [label="return new JobList<TDto>(result);", span="527-527", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="CreateContext.cs"];
m10_359 [label="var deserializedData = JobHelper.FromJson<Dictionary<string, string>>(job.StateData)", span="516-516", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="CreateContext.cs"];
m10_360 [label="var stateData = deserializedData != null\r\n                    ? new Dictionary<string, string>(deserializedData, StringComparer.OrdinalIgnoreCase)\r\n                    : null", span="517-519", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="CreateContext.cs"];
m10_364 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="508-508", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="CreateContext.cs"];
m10_14 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", span="455-455", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="CreateContext.cs"];
m10_339 [label="var sqlQuery = _jobListLimit.HasValue\r\n                ? @''select count(j.Id) from (select top (@limit) Id from HangFire.Job where StateName = @state) as j''\r\n                : @''select count(Id) from HangFire.Job where StateName = @state''", span="457-459", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="CreateContext.cs"];
m10_340 [label="var count = connection.Query<int>(\r\n                 sqlQuery,\r\n                 new { state = stateName, limit = _jobListLimit })\r\n                 .Single()", span="461-464", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="CreateContext.cs"];
m10_341 [label="return count;", span="466-466", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="CreateContext.cs"];
m10_342 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", span="455-455", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="CreateContext.cs"];
m10_227 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="300-300", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="CreateContext.cs"];
m10_228 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, DeletedState.StateName));", span="302-303", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="CreateContext.cs"];
m10_229 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="300-300", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="CreateContext.cs"];
m10_379 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="CreateContext.cs"];
m10_10 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="423-423", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="CreateContext.cs"];
m10_327 [label="return _storage.UseTransaction(action, IsolationLevel.ReadUncommitted);", span="425-425", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="CreateContext.cs"];
m10_328 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="423-423", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="CreateContext.cs"];
m10_239 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="CreateContext.cs"];
m10_186 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="246-246", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="CreateContext.cs"];
m10_187 [label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''failed''));", span="248-249", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="CreateContext.cs"];
m10_188 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="246-246", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="CreateContext.cs"];
m10_334 [label="Entry Unk.DeserializeJobs", span="", cluster="Unk.DeserializeJobs", file="CreateContext.cs"];
m10_233 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="306-306", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="CreateContext.cs"];
m10_234 [label="string sql = @''\r\nselect count(Id) from HangFire.Job where StateName = N'Enqueued';\r\nselect count(Id) from HangFire.Job where StateName = N'Failed';\r\nselect count(Id) from HangFire.Job where StateName = N'Processing';\r\nselect count(Id) from HangFire.Job where StateName = N'Scheduled';\r\nselect count(Id) from HangFire.Server;\r\nselect sum(s.[Value]) from (\r\n    select sum([Value]) as [Value] from HangFire.Counter where [Key] = N'stats:succeeded'\r\n    union all\r\n    select [Value] from HangFire.AggregatedCounter where [Key] = N'stats:succeeded'\r\n) as s;\r\nselect sum(s.[Value]) from (\r\n    select sum([Value]) as [Value] from HangFire.Counter where [Key] = N'stats:deleted'\r\n    union all\r\n    select [Value] from HangFire.AggregatedCounter where [Key] = N'stats:deleted'\r\n) as s;\r\nselect count(*) from HangFire.[Set] where [Key] = N'recurring-jobs';\r\n''", span="308-325", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="CreateContext.cs"];
m10_235 [label="var statistics = UseConnection(connection =>\r\n            {\r\n                var stats = new StatisticsDto();\r\n                using (var multi = connection.QueryMultiple(sql))\r\n                {\r\n                    stats.Enqueued = multi.Read<int>().Single();\r\n                    stats.Failed = multi.Read<int>().Single();\r\n                    stats.Processing = multi.Read<int>().Single();\r\n                    stats.Scheduled = multi.Read<int>().Single();\r\n\r\n                    stats.Servers = multi.Read<int>().Single();\r\n\r\n                    stats.Succeeded = multi.Read<long?>().SingleOrDefault() ?? 0;\r\n                    stats.Deleted = multi.Read<long?>().SingleOrDefault() ?? 0;\r\n\r\n                    stats.Recurring = multi.Read<int>().Single();\r\n                }\r\n                return stats;\r\n            })", span="327-345", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="CreateContext.cs"];
m10_236 [label="statistics.Queues = _storage.QueueProviders\r\n                .SelectMany(x => x.GetJobQueueMonitoringApi().GetQueues())\r\n                .Count()", span="347-349", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="CreateContext.cs"];
m10_237 [label="return statistics;", span="351-351", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="CreateContext.cs"];
m10_238 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="306-306", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="CreateContext.cs"];
m10_174 [label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="24-24", cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="CreateContext.cs"];
m10_169 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="232-232", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="CreateContext.cs"];
m10_170 [label="var queueApi = GetQueueApi(queue)", span="234-234", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="CreateContext.cs"];
m10_171 [label="var fetchedJobIds = queueApi.GetFetchedJobIds(queue, from, perPage)", span="235-235", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="CreateContext.cs"];
m10_172 [label="return UseConnection(connection => FetchedJobs(connection, fetchedJobIds));", span="237-237", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="CreateContext.cs"];
m10_173 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="232-232", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="CreateContext.cs"];
m10_185 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="354-354", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="CreateContext.cs"];
m10_260 [label="var endDate = DateTime.UtcNow", span="358-358", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="CreateContext.cs"];
m10_267 [label="var keyMaps = dates.ToDictionary(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH'')), x => x)", span="366-366", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="CreateContext.cs"];
m10_268 [label="return GetTimelineStats(connection, keyMaps);", span="368-368", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="CreateContext.cs"];
m10_261 [label="var dates = new List<DateTime>()", span="359-359", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="CreateContext.cs"];
m10_264 [label="dates.Add(endDate)", span="362-362", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="CreateContext.cs"];
m10_265 [label="endDate = endDate.AddHours(-1)", span="363-363", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="CreateContext.cs"];
m10_262 [label="var i = 0", span="360-360", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="CreateContext.cs"];
m10_263 [label="i < 24", span="360-360", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="CreateContext.cs"];
m10_266 [label="i++", span="360-360", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="CreateContext.cs"];
m10_269 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="354-354", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="CreateContext.cs"];
m10_312 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="CreateContext.cs"];
m10_6 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="CreateContext.cs"];
m10_111 [label="Entry Hangfire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="23-23", cluster="Hangfire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="CreateContext.cs"];
m10_158 [label="Entry Unk.EnqueuedJobs", span="", cluster="Unk.EnqueuedJobs", file="CreateContext.cs"];
m10_380 [label="Entry Hangfire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21", cluster="Hangfire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="CreateContext.cs"];
m10_259 [label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", span="22-22", cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", file="CreateContext.cs"];
m10_164 [label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="23-23", cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="CreateContext.cs"];
m10_144 [label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi()", span="21-21", cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi()", file="CreateContext.cs"];
m10_50 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="CreateContext.cs"];
m10_368 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="CreateContext.cs"];
m10_329 [label="Entry Unk.UseTransaction", span="", cluster="Unk.UseTransaction", file="CreateContext.cs"];
m10_123 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", span="195-195", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="CreateContext.cs"];
m10_124 [label="var tuples = _storage.QueueProviders\r\n                .Select(x => x.GetJobQueueMonitoringApi())\r\n                .SelectMany(x => x.GetQueues(), (monitoring, queue) => new { Monitoring = monitoring, Queue = queue })\r\n                .OrderBy(x => x.Queue)\r\n                .ToArray()", span="197-201", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="CreateContext.cs"];
m10_125 [label="var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length)", span="203-203", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="CreateContext.cs"];
m10_126 [label=tuples, span="205-205", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="CreateContext.cs"];
m10_130 [label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = tuple.Queue,\r\n                    Length = counters.EnqueuedCount ?? 0,\r\n                    Fetched = counters.FetchedCount,\r\n                    FirstJobs = firstJobs\r\n                })", span="212-218", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="CreateContext.cs"];
m10_131 [label="return result;", span="221-221", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="CreateContext.cs"];
m10_127 [label="var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue, 0, 5)", span="207-207", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="CreateContext.cs"];
m10_128 [label="var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue)", span="208-208", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="CreateContext.cs"];
m10_129 [label="var firstJobs = UseConnection(connection => EnqueuedJobs(connection, enqueuedJobIds))", span="210-210", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="CreateContext.cs"];
m10_132 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", span="195-195", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="CreateContext.cs"];
m10_136 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="CreateContext.cs"];
m10_290 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="CreateContext.cs"];
m10_220 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", file="CreateContext.cs"];
m10_350 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="CreateContext.cs"];
m10_0 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", span="36-36", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="CreateContext.cs"];
m10_1 [label="storage == null", span="38-38", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="CreateContext.cs"];
m10_3 [label="_storage = storage", span="40-40", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="CreateContext.cs"];
m10_4 [label="_jobListLimit = jobListLimit", span="41-41", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="CreateContext.cs"];
m10_2 [label="throw new ArgumentNullException(''storage'');", span="38-38", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="CreateContext.cs"];
m10_5 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", span="36-36", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="CreateContext.cs"];
m10_113 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="181-181", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="CreateContext.cs"];
m10_114 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                }));", span="183-192", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="CreateContext.cs"];
m10_115 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="181-181", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="CreateContext.cs"];
m10_271 [label="Entry Unk.GetTimelineStats", span="", cluster="Unk.GetTimelineStats", file="CreateContext.cs"];
m10_219 [label="Entry Hangfire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21", cluster="Hangfire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="CreateContext.cs"];
m10_335 [label="Entry lambda expression", span="445-452", cluster="lambda expression", file="CreateContext.cs"];
m10_11 [label="Entry lambda expression", span="46-47", cluster="lambda expression", file="CreateContext.cs"];
m10_12 [label="GetNumberOfJobsByStateName(connection, ScheduledState.StateName)", span="47-47", cluster="lambda expression", file="CreateContext.cs"];
m10_13 [label="Exit lambda expression", span="46-47", cluster="lambda expression", file="CreateContext.cs"];
m10_30 [label="Entry lambda expression", span="68-69", cluster="lambda expression", file="CreateContext.cs"];
m10_31 [label="GetNumberOfJobsByStateName(connection, FailedState.StateName)", span="69-69", cluster="lambda expression", file="CreateContext.cs"];
m10_32 [label="Exit lambda expression", span="68-69", cluster="lambda expression", file="CreateContext.cs"];
m10_36 [label="Entry lambda expression", span="74-75", cluster="lambda expression", file="CreateContext.cs"];
m10_37 [label="GetNumberOfJobsByStateName(connection, ProcessingState.StateName)", span="75-75", cluster="lambda expression", file="CreateContext.cs"];
m10_38 [label="Exit lambda expression", span="74-75", cluster="lambda expression", file="CreateContext.cs"];
m10_43 [label="GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                })", span="80-89", cluster="lambda expression", color=red, community=0, file="CreateContext.cs"];
m10_42 [label="Entry lambda expression", span="80-89", cluster="lambda expression", file="CreateContext.cs"];
m10_44 [label="Exit lambda expression", span="80-89", cluster="lambda expression", file="CreateContext.cs"];
m10_46 [label="Entry lambda expression", span="84-89", cluster="lambda expression", file="CreateContext.cs"];
m10_47 [label="new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                }", span="84-89", cluster="lambda expression", color=red, community=0, file="CreateContext.cs"];
m10_48 [label="Exit lambda expression", span="84-89", cluster="lambda expression", file="CreateContext.cs"];
m10_56 [label="GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                })", span="94-103", cluster="lambda expression", file="CreateContext.cs"];
m10_55 [label="Entry lambda expression", span="94-103", cluster="lambda expression", file="CreateContext.cs"];
m10_57 [label="Exit lambda expression", span="94-103", cluster="lambda expression", file="CreateContext.cs"];
m10_58 [label="Entry lambda expression", span="98-103", cluster="lambda expression", file="CreateContext.cs"];
m10_59 [label="new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                }", span="98-103", cluster="lambda expression", file="CreateContext.cs"];
m10_60 [label="Exit lambda expression", span="98-103", cluster="lambda expression", file="CreateContext.cs"];
m10_65 [label="Entry lambda expression", span="108-109", cluster="lambda expression", file="CreateContext.cs"];
m10_66 [label="GetTimelineStats(connection, ''succeeded'')", span="109-109", cluster="lambda expression", file="CreateContext.cs"];
m10_67 [label="Exit lambda expression", span="108-109", cluster="lambda expression", file="CreateContext.cs"];
m10_72 [label="Entry lambda expression", span="114-115", cluster="lambda expression", file="CreateContext.cs"];
m10_73 [label="GetTimelineStats(connection, ''failed'')", span="115-115", cluster="lambda expression", file="CreateContext.cs"];
m10_74 [label="Exit lambda expression", span="114-115", cluster="lambda expression", file="CreateContext.cs"];
m10_79 [label="Entry lambda expression", span="120-142", cluster="lambda expression", file="CreateContext.cs"];
m10_80 [label="var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList()", span="122-124", cluster="lambda expression", file="CreateContext.cs"];
m10_81 [label="var result = new List<ServerDto>()", span="126-126", cluster="lambda expression", file="CreateContext.cs"];
m10_82 [label=servers, span="128-128", cluster="lambda expression", file="CreateContext.cs"];
m10_84 [label="result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    })", span="131-138", cluster="lambda expression", file="CreateContext.cs"];
m10_85 [label="return result;", span="141-141", cluster="lambda expression", file="CreateContext.cs"];
m10_83 [label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="130-130", cluster="lambda expression", file="CreateContext.cs"];
m10_86 [label="Exit lambda expression", span="120-142", cluster="lambda expression", file="CreateContext.cs"];
m10_95 [label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                })", span="147-160", cluster="lambda expression", file="CreateContext.cs"];
m10_94 [label="Entry lambda expression", span="147-160", cluster="lambda expression", file="CreateContext.cs"];
m10_96 [label="Exit lambda expression", span="147-160", cluster="lambda expression", file="CreateContext.cs"];
m10_97 [label="Entry lambda expression", span="152-160", cluster="lambda expression", file="CreateContext.cs"];
m10_98 [label="new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }", span="152-160", cluster="lambda expression", file="CreateContext.cs"];
m10_99 [label="Exit lambda expression", span="152-160", cluster="lambda expression", file="CreateContext.cs"];
m10_106 [label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                })", span="165-178", cluster="lambda expression", file="CreateContext.cs"];
m10_105 [label="Entry lambda expression", span="165-178", cluster="lambda expression", file="CreateContext.cs"];
m10_107 [label="Exit lambda expression", span="165-178", cluster="lambda expression", file="CreateContext.cs"];
m10_108 [label="Entry lambda expression", span="170-178", cluster="lambda expression", file="CreateContext.cs"];
m10_109 [label="new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }", span="170-178", cluster="lambda expression", file="CreateContext.cs"];
m10_110 [label="Exit lambda expression", span="170-178", cluster="lambda expression", file="CreateContext.cs"];
m10_117 [label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                })", span="183-192", cluster="lambda expression", file="CreateContext.cs"];
m10_116 [label="Entry lambda expression", span="183-192", cluster="lambda expression", file="CreateContext.cs"];
m10_118 [label="Exit lambda expression", span="183-192", cluster="lambda expression", file="CreateContext.cs"];
m10_119 [label="Entry lambda expression", span="188-192", cluster="lambda expression", file="CreateContext.cs"];
m10_120 [label="new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                }", span="188-192", cluster="lambda expression", file="CreateContext.cs"];
m10_121 [label="Exit lambda expression", span="188-192", cluster="lambda expression", file="CreateContext.cs"];
m10_141 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="CreateContext.cs"];
m10_145 [label="Entry lambda expression", span="199-199", cluster="lambda expression", file="CreateContext.cs"];
m10_149 [label="Entry lambda expression", span="199-199", cluster="lambda expression", file="CreateContext.cs"];
m10_152 [label="Entry lambda expression", span="200-200", cluster="lambda expression", file="CreateContext.cs"];
m10_156 [label="EnqueuedJobs(connection, enqueuedJobIds)", span="210-210", cluster="lambda expression", file="CreateContext.cs"];
m10_155 [label="Entry lambda expression", span="210-210", cluster="lambda expression", file="CreateContext.cs"];
m10_142 [label="x.GetJobQueueMonitoringApi()", span="198-198", cluster="lambda expression", file="CreateContext.cs"];
m10_143 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="CreateContext.cs"];
m10_146 [label="x.GetQueues()", span="199-199", cluster="lambda expression", file="CreateContext.cs"];
m10_147 [label="Exit lambda expression", span="199-199", cluster="lambda expression", file="CreateContext.cs"];
m10_150 [label="new { Monitoring = monitoring, Queue = queue }", span="199-199", cluster="lambda expression", file="CreateContext.cs"];
m10_151 [label="Exit lambda expression", span="199-199", cluster="lambda expression", file="CreateContext.cs"];
m10_153 [label="x.Queue", span="200-200", cluster="lambda expression", file="CreateContext.cs"];
m10_154 [label="Exit lambda expression", span="200-200", cluster="lambda expression", file="CreateContext.cs"];
m10_157 [label="Exit lambda expression", span="210-210", cluster="lambda expression", file="CreateContext.cs"];
m10_166 [label="EnqueuedJobs(connection, enqueuedJobIds)", span="229-229", cluster="lambda expression", file="CreateContext.cs"];
m10_165 [label="Entry lambda expression", span="229-229", cluster="lambda expression", file="CreateContext.cs"];
m10_167 [label="Exit lambda expression", span="229-229", cluster="lambda expression", file="CreateContext.cs"];
m10_176 [label="FetchedJobs(connection, fetchedJobIds)", span="237-237", cluster="lambda expression", file="CreateContext.cs"];
m10_175 [label="Entry lambda expression", span="237-237", cluster="lambda expression", file="CreateContext.cs"];
m10_177 [label="Exit lambda expression", span="237-237", cluster="lambda expression", file="CreateContext.cs"];
m10_182 [label="Entry lambda expression", span="242-243", cluster="lambda expression", file="CreateContext.cs"];
m10_183 [label="GetHourlyTimelineStats(connection, ''succeeded'')", span="243-243", cluster="lambda expression", file="CreateContext.cs"];
m10_184 [label="Exit lambda expression", span="242-243", cluster="lambda expression", file="CreateContext.cs"];
m10_189 [label="Entry lambda expression", span="248-249", cluster="lambda expression", file="CreateContext.cs"];
m10_190 [label="GetHourlyTimelineStats(connection, ''failed'')", span="249-249", cluster="lambda expression", file="CreateContext.cs"];
m10_191 [label="Exit lambda expression", span="248-249", cluster="lambda expression", file="CreateContext.cs"];
m10_197 [label="var multi = connection.QueryMultiple(sql, new { id = jobId })", span="262-262", cluster="lambda expression", file="CreateContext.cs"];
m10_195 [label="Entry lambda expression", span="254-291", cluster="lambda expression", file="CreateContext.cs"];
m10_196 [label="string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc''", span="257-260", cluster="lambda expression", file="CreateContext.cs"];
m10_198 [label="var job = multi.Read<SqlJob>().SingleOrDefault()", span="264-264", cluster="lambda expression", file="CreateContext.cs"];
m10_201 [label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="267-267", cluster="lambda expression", file="CreateContext.cs"];
m10_202 [label="var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            })\r\n                            .ToList()", span="268-280", cluster="lambda expression", file="CreateContext.cs"];
m10_199 [label="job == null", span="265-265", cluster="lambda expression", file="CreateContext.cs"];
m10_203 [label="return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        ExpireAt = job.ExpireAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };", span="282-289", cluster="lambda expression", file="CreateContext.cs"];
m10_200 [label="return null;", span="265-265", cluster="lambda expression", file="CreateContext.cs"];
m10_210 [label="Entry lambda expression", span="267-267", cluster="lambda expression", file="CreateContext.cs"];
m10_213 [label="Entry lambda expression", span="267-267", cluster="lambda expression", file="CreateContext.cs"];
m10_216 [label="Entry lambda expression", span="271-279", cluster="lambda expression", file="CreateContext.cs"];
m10_204 [label="Exit lambda expression", span="254-291", cluster="lambda expression", file="CreateContext.cs"];
m10_211 [label="x.Name", span="267-267", cluster="lambda expression", file="CreateContext.cs"];
m10_212 [label="Exit lambda expression", span="267-267", cluster="lambda expression", file="CreateContext.cs"];
m10_214 [label="x.Value", span="267-267", cluster="lambda expression", file="CreateContext.cs"];
m10_215 [label="Exit lambda expression", span="267-267", cluster="lambda expression", file="CreateContext.cs"];
m10_217 [label="new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            }", span="271-279", cluster="lambda expression", file="CreateContext.cs"];
m10_218 [label="Exit lambda expression", span="271-279", cluster="lambda expression", file="CreateContext.cs"];
m10_224 [label="Entry lambda expression", span="296-297", cluster="lambda expression", file="CreateContext.cs"];
m10_225 [label="GetNumberOfJobsByStateName(connection, SucceededState.StateName)", span="297-297", cluster="lambda expression", file="CreateContext.cs"];
m10_226 [label="Exit lambda expression", span="296-297", cluster="lambda expression", file="CreateContext.cs"];
m10_230 [label="Entry lambda expression", span="302-303", cluster="lambda expression", file="CreateContext.cs"];
m10_231 [label="GetNumberOfJobsByStateName(connection, DeletedState.StateName)", span="303-303", cluster="lambda expression", file="CreateContext.cs"];
m10_232 [label="Exit lambda expression", span="302-303", cluster="lambda expression", file="CreateContext.cs"];
m10_243 [label="var multi = connection.QueryMultiple(sql)", span="330-330", cluster="lambda expression", file="CreateContext.cs"];
m10_241 [label="Entry lambda expression", span="327-345", cluster="lambda expression", file="CreateContext.cs"];
m10_256 [label="Entry lambda expression", span="348-348", cluster="lambda expression", file="CreateContext.cs"];
m10_242 [label="var stats = new StatisticsDto()", span="329-329", cluster="lambda expression", file="CreateContext.cs"];
m10_244 [label="stats.Enqueued = multi.Read<int>().Single()", span="332-332", cluster="lambda expression", file="CreateContext.cs"];
m10_245 [label="stats.Failed = multi.Read<int>().Single()", span="333-333", cluster="lambda expression", file="CreateContext.cs"];
m10_246 [label="stats.Processing = multi.Read<int>().Single()", span="334-334", cluster="lambda expression", file="CreateContext.cs"];
m10_247 [label="stats.Scheduled = multi.Read<int>().Single()", span="335-335", cluster="lambda expression", file="CreateContext.cs"];
m10_248 [label="stats.Servers = multi.Read<int>().Single()", span="337-337", cluster="lambda expression", file="CreateContext.cs"];
m10_249 [label="stats.Succeeded = multi.Read<long?>().SingleOrDefault() ?? 0", span="339-339", cluster="lambda expression", file="CreateContext.cs"];
m10_250 [label="stats.Deleted = multi.Read<long?>().SingleOrDefault() ?? 0", span="340-340", cluster="lambda expression", file="CreateContext.cs"];
m10_251 [label="stats.Recurring = multi.Read<int>().Single()", span="342-342", cluster="lambda expression", file="CreateContext.cs"];
m10_252 [label="return stats;", span="344-344", cluster="lambda expression", file="CreateContext.cs"];
m10_253 [label="Exit lambda expression", span="327-345", cluster="lambda expression", file="CreateContext.cs"];
m10_257 [label="x.GetJobQueueMonitoringApi().GetQueues()", span="348-348", cluster="lambda expression", file="CreateContext.cs"];
m10_258 [label="Exit lambda expression", span="348-348", cluster="lambda expression", file="CreateContext.cs"];
m10_273 [label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="366-366", cluster="lambda expression", file="CreateContext.cs"];
m10_272 [label="Entry lambda expression", span="366-366", cluster="lambda expression", file="CreateContext.cs"];
m10_277 [label="Entry lambda expression", span="366-366", cluster="lambda expression", file="CreateContext.cs"];
m10_274 [label="Exit lambda expression", span="366-366", cluster="lambda expression", file="CreateContext.cs"];
m10_278 [label=x, span="366-366", cluster="lambda expression", file="CreateContext.cs"];
m10_279 [label="Exit lambda expression", span="366-366", cluster="lambda expression", file="CreateContext.cs"];
m10_292 [label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd''))", span="383-383", cluster="lambda expression", file="CreateContext.cs"];
m10_291 [label="Entry lambda expression", span="383-383", cluster="lambda expression", file="CreateContext.cs"];
m10_294 [label="Entry lambda expression", span="383-383", cluster="lambda expression", file="CreateContext.cs"];
m10_293 [label="Exit lambda expression", span="383-383", cluster="lambda expression", file="CreateContext.cs"];
m10_295 [label=x, span="383-383", cluster="lambda expression", file="CreateContext.cs"];
m10_296 [label="Exit lambda expression", span="383-383", cluster="lambda expression", file="CreateContext.cs"];
m10_316 [label="Entry lambda expression", span="398-398", cluster="lambda expression", file="CreateContext.cs"];
m10_319 [label="Entry lambda expression", span="398-398", cluster="lambda expression", file="CreateContext.cs"];
m10_317 [label="(string)x.Key", span="398-398", cluster="lambda expression", file="CreateContext.cs"];
m10_318 [label="Exit lambda expression", span="398-398", cluster="lambda expression", file="CreateContext.cs"];
m10_320 [label="(long)x.Count", span="398-398", cluster="lambda expression", file="CreateContext.cs"];
m10_321 [label="Exit lambda expression", span="398-398", cluster="lambda expression", file="CreateContext.cs"];
m10_336 [label="new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                }", span="445-452", cluster="lambda expression", file="CreateContext.cs"];
m10_337 [label="Exit lambda expression", span="445-452", cluster="lambda expression", file="CreateContext.cs"];
m10_90 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="CreateContext.cs"];
m10_87 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="CreateContext.cs"];
m10_315 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="CreateContext.cs"];
m10_22 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="58-58", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="CreateContext.cs"];
m10_23 [label="var queueApi = GetQueueApi(queue)", span="60-60", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="CreateContext.cs"];
m10_24 [label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="61-61", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="CreateContext.cs"];
m10_25 [label="return counters.FetchedCount ?? 0;", span="63-63", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="CreateContext.cs"];
m10_26 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="58-58", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="CreateContext.cs"];
m10_369 [label="Entry Hangfire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="22-22", cluster="Hangfire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="CreateContext.cs"];
m10_61 [label="Entry Hangfire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", span="23-23", cluster="Hangfire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", file="CreateContext.cs"];
m10_275 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="CreateContext.cs"];
m10_102 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="163-163", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="CreateContext.cs"];
m10_103 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }));", span="165-178", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="CreateContext.cs"];
m10_104 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="163-163", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="CreateContext.cs"];
m10_137 [label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span="", cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="CreateContext.cs"];
m10_21 [label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="25-25", cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="CreateContext.cs"];
m10_122 [label="Entry Hangfire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", span="7-7", cluster="Hangfire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", file="CreateContext.cs"];
m10_178 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="530-530", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="CreateContext.cs"];
m10_370 [label="string fetchedJobsSql = @''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nwhere j.Id in @jobIds''", span="534-538", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="CreateContext.cs"];
m10_371 [label="var jobs = connection.Query<SqlJob>(\r\n                fetchedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="540-543", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="CreateContext.cs"];
m10_372 [label="var result = new List<KeyValuePair<string, FetchedJobDto>>(jobs.Count)", span="545-545", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="CreateContext.cs"];
m10_373 [label=jobs, span="547-547", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="CreateContext.cs"];
m10_374 [label="result.Add(new KeyValuePair<string, FetchedJobDto>(\r\n                    job.Id.ToString(),\r\n                    new FetchedJobDto\r\n                    {\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        State = job.StateName,\r\n                    }))", span="549-555", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="CreateContext.cs"];
m10_375 [label="return new JobList<FetchedJobDto>(result);", span="558-558", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="CreateContext.cs"];
m10_376 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="530-530", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="CreateContext.cs"];
m10_378 [label="Entry KeyValuePair<string, FetchedJobDto>.cstr", span="", cluster="KeyValuePair<string, FetchedJobDto>.cstr", file="CreateContext.cs"];
m10_192 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="252-252", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="CreateContext.cs"];
m10_193 [label="return UseConnection(connection =>\r\n            {\r\n\r\n                const string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc'';\r\n\r\n                using (var multi = connection.QueryMultiple(sql, new { id = jobId }))\r\n                {\r\n                    var job = multi.Read<SqlJob>().SingleOrDefault();\r\n                    if (job == null) return null;\r\n\r\n                    var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value);\r\n                    var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            })\r\n                            .ToList();\r\n\r\n                    return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        ExpireAt = job.ExpireAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };\r\n                }\r\n            });", span="254-291", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="CreateContext.cs"];
m10_194 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="252-252", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="CreateContext.cs"];
m10_311 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="CreateContext.cs"];
m10_7 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="44-44", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="CreateContext.cs"];
m10_8 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ScheduledState.StateName));", span="46-47", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="CreateContext.cs"];
m10_9 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="44-44", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="CreateContext.cs"];
m10_168 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="428-428", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="CreateContext.cs"];
m10_330 [label="string enqueuedJobsSql = @''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nwhere j.Id in @jobIds''", span="432-436", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="CreateContext.cs"];
m10_331 [label="var jobs = connection.Query<SqlJob>(\r\n                enqueuedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="438-441", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="CreateContext.cs"];
m10_332 [label="return DeserializeJobs(\r\n                jobs,\r\n                (sqlJob, job, stateData) => new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                });", span="443-452", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="CreateContext.cs"];
m10_333 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="428-428", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="CreateContext.cs"];
m10_313 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="CreateContext.cs"];
m10_221 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="294-294", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="CreateContext.cs"];
m10_222 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, SucceededState.StateName));", span="296-297", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="CreateContext.cs"];
m10_223 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="294-294", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="CreateContext.cs"];
m10_51 [label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73", cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="CreateContext.cs"];
m10_338 [label="Entry Hangfire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="23-23", cluster="Hangfire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="CreateContext.cs"];
m10_377 [label="Entry List<KeyValuePair<string, FetchedJobDto>>.cstr", span="", cluster="List<KeyValuePair<string, FetchedJobDto>>.cstr", file="CreateContext.cs"];
m10_270 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="CreateContext.cs"];
m10_91 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="145-145", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="CreateContext.cs"];
m10_92 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }));", span="147-160", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="CreateContext.cs"];
m10_93 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="145-145", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="CreateContext.cs"];
m10_343 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="469-469", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="CreateContext.cs"];
m10_344 [label="var data = JobHelper.FromJson<InvocationData>(invocationData)", span="471-471", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="CreateContext.cs"];
m10_345 [label="data.Arguments = arguments", span="472-472", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="CreateContext.cs"];
m10_346 [label="return data.Deserialize();", span="476-476", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="CreateContext.cs"];
m10_347 [label=JobLoadException, span="478-478", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="CreateContext.cs"];
m10_348 [label="return null;", span="480-480", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="CreateContext.cs"];
m10_349 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="469-469", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="CreateContext.cs"];
m10_75 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", span="118-118", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", file="CreateContext.cs"];
m10_76 [label="return UseConnection<IList<ServerDto>>(connection =>\r\n            {\r\n                var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList();\r\n\r\n                var result = new List<ServerDto>();\r\n\r\n                foreach (var server in servers)\r\n                {\r\n                    var data = JobHelper.FromJson<ServerData>(server.Data);\r\n                    result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", span="120-142", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", file="CreateContext.cs"];
m10_77 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", span="118-118", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", file="CreateContext.cs"];
m10_205 [label="Entry Unk.QueryMultiple", span="", cluster="Unk.QueryMultiple", file="CreateContext.cs"];
m10_20 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="415-415", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="CreateContext.cs"];
m10_322 [label="var provider = _storage.QueueProviders.GetProvider(queueName)", span="417-417", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="CreateContext.cs"];
m10_323 [label="var monitoringApi = provider.GetJobQueueMonitoringApi()", span="418-418", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="CreateContext.cs"];
m10_324 [label="return monitoringApi;", span="420-420", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="CreateContext.cs"];
m10_325 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="415-415", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="CreateContext.cs"];
m10_39 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="78-78", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="CreateContext.cs"];
m10_40 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                }));", span="80-89", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", color=red, community=0, file="CreateContext.cs"];
m10_41 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="78-78", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="CreateContext.cs"];
m10_52 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="92-92", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="CreateContext.cs"];
m10_53 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                }));", span="94-103", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="CreateContext.cs"];
m10_54 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="92-92", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="CreateContext.cs"];
m10_208 [label="Entry Hangfire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="22-22", cluster="Hangfire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="CreateContext.cs"];
m10_69 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="112-112", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="CreateContext.cs"];
m10_70 [label="return UseConnection(connection => \r\n                GetTimelineStats(connection, ''failed''));", span="114-115", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="CreateContext.cs"];
m10_71 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="112-112", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="CreateContext.cs"];
m10_179 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="240-240", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="CreateContext.cs"];
m10_180 [label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''succeeded''));", span="242-243", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="CreateContext.cs"];
m10_181 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="240-240", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="CreateContext.cs"];
m10_276 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="CreateContext.cs"];
m10_326 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="CreateContext.cs"];
m10_134 [label="Entry Unk.SelectMany", span="", cluster="Unk.SelectMany", file="CreateContext.cs"];
m10_207 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="CreateContext.cs"];
m10_78 [label="Entry Unk.>", span="", cluster="Unk.>", file="CreateContext.cs"];
m10_138 [label="Entry Unk.GetEnqueuedJobIds", span="", cluster="Unk.GetEnqueuedJobIds", file="CreateContext.cs"];
m10_101 [label="Entry Hangfire.Common.JobHelper.DeserializeNullableDateTime(string)", span="84-84", cluster="Hangfire.Common.JobHelper.DeserializeNullableDateTime(string)", file="CreateContext.cs"];
m10_135 [label="Entry Unk.OrderBy", span="", cluster="Unk.OrderBy", file="CreateContext.cs"];
m10_139 [label="Entry Unk.GetEnqueuedAndFetchedCount", span="", cluster="Unk.GetEnqueuedAndFetchedCount", file="CreateContext.cs"];
m10_15 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="50-50", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="CreateContext.cs"];
m10_16 [label="var queueApi = GetQueueApi(queue)", span="52-52", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="CreateContext.cs"];
m10_17 [label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="53-53", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="CreateContext.cs"];
m10_18 [label="return counters.EnqueuedCount ?? 0;", span="55-55", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="CreateContext.cs"];
m10_19 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="50-50", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="CreateContext.cs"];
m10_148 [label="Entry Unk.GetQueues", span="", cluster="Unk.GetQueues", file="CreateContext.cs"];
m10_62 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="106-106", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="CreateContext.cs"];
m10_63 [label="return UseConnection(connection => \r\n                GetTimelineStats(connection, ''succeeded''));", span="108-109", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="CreateContext.cs"];
m10_64 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="106-106", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="CreateContext.cs"];
m10_314 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="CreateContext.cs"];
m10_68 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", span="371-371", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="CreateContext.cs"];
m10_280 [label="var endDate = DateTime.UtcNow.Date", span="375-375", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="CreateContext.cs"];
m10_287 [label="var keyMaps = dates.ToDictionary(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd'')), x => x)", span="383-383", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="CreateContext.cs"];
m10_288 [label="return GetTimelineStats(connection, keyMaps);", span="385-385", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="CreateContext.cs"];
m10_281 [label="var dates = new List<DateTime>()", span="376-376", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="CreateContext.cs"];
m10_284 [label="dates.Add(endDate)", span="379-379", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="CreateContext.cs"];
m10_285 [label="endDate = endDate.AddDays(-1)", span="380-380", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="CreateContext.cs"];
m10_282 [label="var i = 0", span="377-377", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="CreateContext.cs"];
m10_283 [label="i < 7", span="377-377", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="CreateContext.cs"];
m10_286 [label="i++", span="377-377", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="CreateContext.cs"];
m10_289 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", span="371-371", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="CreateContext.cs"];
m10_254 [label="Entry Hangfire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18", cluster="Hangfire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="CreateContext.cs"];
m10_49 [label="Entry Hangfire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="23-23", cluster="Hangfire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="CreateContext.cs"];
m10_297 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", span="388-388", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="CreateContext.cs"];
m10_298 [label="string sqlQuery = @''\r\nselect [Key], [Value] as [Count] from HangFire.AggregatedCounter\r\nwhere [Key] in @keys''", span="391-393", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="CreateContext.cs"];
m10_299 [label="var valuesMap = connection.Query(\r\n                sqlQuery,\r\n                new { keys = keyMaps.Keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="395-398", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="CreateContext.cs"];
m10_300 [label="keyMaps.Keys", span="400-400", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="CreateContext.cs"];
m10_305 [label="i < keyMaps.Count", span="406-406", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="CreateContext.cs"];
m10_306 [label="var value = valuesMap[keyMaps.ElementAt(i).Key]", span="408-408", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="CreateContext.cs"];
m10_307 [label="result.Add(keyMaps.ElementAt(i).Value, value)", span="409-409", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="CreateContext.cs"];
m10_301 [label="!valuesMap.ContainsKey(key)", span="402-402", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="CreateContext.cs"];
m10_302 [label="valuesMap.Add(key, 0)", span="402-402", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="CreateContext.cs"];
m10_303 [label="var result = new Dictionary<DateTime, long>()", span="405-405", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="CreateContext.cs"];
m10_304 [label="var i = 0", span="406-406", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="CreateContext.cs"];
m10_309 [label="return result;", span="412-412", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="CreateContext.cs"];
m10_308 [label="i++", span="406-406", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="CreateContext.cs"];
m10_310 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", span="388-388", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="CreateContext.cs"];
m10_240 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="CreateContext.cs"];
m10_133 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="CreateContext.cs"];
m10_365 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="CreateContext.cs"];
m10_255 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="CreateContext.cs"];
m10_159 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="224-224", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="CreateContext.cs"];
m10_160 [label="var queueApi = GetQueueApi(queue)", span="226-226", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="CreateContext.cs"];
m10_161 [label="var enqueuedJobIds = queueApi.GetEnqueuedJobIds(queue, from, perPage)", span="227-227", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="CreateContext.cs"];
m10_162 [label="return UseConnection(connection => EnqueuedJobs(connection, enqueuedJobIds));", span="229-229", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="CreateContext.cs"];
m10_163 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="224-224", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="CreateContext.cs"];
m10_206 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="CreateContext.cs"];
m10_33 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="72-72", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="CreateContext.cs"];
m10_34 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ProcessingState.StateName));", span="74-75", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="CreateContext.cs"];
m10_35 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="72-72", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="CreateContext.cs"];
m10_209 [label="Entry Unk.DeserializeJob", span="", cluster="Unk.DeserializeJob", file="CreateContext.cs"];
m10_381 [label="Hangfire.SqlServer.SqlServerMonitoringApi", span="", file="CreateContext.cs"];
m10_382 [label=int, span="", file="CreateContext.cs"];
m10_383 [label=int, span="", file="CreateContext.cs"];
m10_384 [label=int, span="", file="CreateContext.cs"];
m10_385 [label=int, span="", file="CreateContext.cs"];
m10_386 [label=int, span="", file="CreateContext.cs"];
m10_387 [label=int, span="", file="CreateContext.cs"];
m10_388 [label=int, span="", file="CreateContext.cs"];
m10_389 [label=int, span="", file="CreateContext.cs"];
m10_390 [label=int, span="", file="CreateContext.cs"];
m10_391 [label=int, span="", file="CreateContext.cs"];
m10_392 [label=enqueuedJobIds, span="", file="CreateContext.cs"];
m10_393 [label=enqueuedJobIds, span="", file="CreateContext.cs"];
m10_394 [label=fetchedJobIds, span="", file="CreateContext.cs"];
m10_395 [label=string, span="", file="CreateContext.cs"];
m10_396 [label=sql, span="", file="CreateContext.cs"];
m10_397 [label=string, span="", file="CreateContext.cs"];
m10_398 [label=string, span="", file="CreateContext.cs"];
m11_0 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", span="19-19", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="CreateContextFacts.cs"];
m11_1 [label="_job = Job.FromExpression(() => Method())", span="21-21", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="CreateContextFacts.cs"];
m11_3 [label="_connection = new Mock<IStorageConnection>()", span="23-23", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="CreateContextFacts.cs"];
m11_2 [label="_state = new Mock<IState>()", span="22-22", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="CreateContextFacts.cs", color=green, community=0];
m11_4 [label="_stateMachine = new Mock<IStateMachine>()", span="24-24", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="CreateContextFacts.cs"];
m11_24 [label="return PerformJobWithFilters(context, performer, filterInfo.ServerFilters);", span="55-55", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="CreateContextFacts.cs"];
m11_25 [label=OperationCanceledException, span="57-57", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="CreateContextFacts.cs"];
m11_26 [label="throw;", span="59-59", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="CreateContextFacts.cs"];
m11_27 [label=Exception, span="61-61", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="CreateContextFacts.cs"];
m11_110 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", span="137-137", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="CreateContextFacts.cs"];
m11_111 [label="var context = CreateContext()", span="139-139", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="CreateContextFacts.cs"];
m11_112 [label="Assert.Equal(default(int), context.GetJobParameter<int>(''one''))", span="141-141", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="CreateContextFacts.cs"];
m11_113 [label="Assert.Equal(default(string), context.GetJobParameter<string>(''two''))", span="142-142", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="CreateContextFacts.cs"];
m11_114 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", span="137-137", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="CreateContextFacts.cs"];
m11_12 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_9 [label="Exit Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, System.Collections.Generic.IEnumerable<object>)", span="37-37", cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, System.Collections.Generic.IEnumerable<object>)", file="CreateContextFacts.cs"];
m11_63 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_71 [label="return new PerformedContext(\r\n                    preContext, null, true, null);", span="124-125", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="CreateContextFacts.cs"];
m11_180 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", span="241-241", cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="CreateContextFacts.cs"];
m11_181 [label="var context = CreateContext()", span="243-243", cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="CreateContextFacts.cs"];
m11_183 [label="Assert.Throws<InvalidOperationException>(\r\n                () => context.SetJobParameter(''name'', ''value''))", span="246-247", cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="CreateContextFacts.cs"];
m11_182 [label="context.CreateJob()", span="244-244", cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="CreateContextFacts.cs"];
m11_184 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", span="241-241", cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="CreateContextFacts.cs"];
m11_49 [label="Assert.Equal(''initialState'', exception.ParamName)", span="65-65", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="CreateContextFacts.cs"];
m11_50 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", span="59-59", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="CreateContextFacts.cs"];
m11_98 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", span="119-119", cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="CreateContextFacts.cs"];
m11_196 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", span="262-262", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="CreateContextFacts.cs"];
m11_197 [label="_stateMachine.Setup(x => x.CreateInState(\r\n                _job, It.IsAny<Dictionary<string, string>>(), _state.Object))\r\n                .Returns(''id'')", span="264-266", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="CreateContextFacts.cs"];
m11_198 [label="var context = CreateContext()", span="268-268", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="CreateContextFacts.cs"];
m11_199 [label="context.CreateJob()", span="269-269", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="CreateContextFacts.cs"];
m11_200 [label="var contextCopy = new CreateContext(context)", span="271-271", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="CreateContextFacts.cs"];
m11_201 [label="Assert.Equal(''id'', contextCopy.JobId)", span="273-273", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="CreateContextFacts.cs"];
m11_202 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", span="262-262", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="CreateContextFacts.cs"];
m11_28 [label="var exceptionContext = new ServerExceptionContext(context, ex)", span="63-63", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="CreateContextFacts.cs"];
m11_10 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_66 [label=OperationCanceledException, span="111-111", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="CreateContextFacts.cs"];
m11_67 [label="throw;", span="113-113", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="CreateContextFacts.cs"];
m11_68 [label=Exception, span="115-115", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="CreateContextFacts.cs"];
m11_69 [label="throw new JobPerformanceException(\r\n                    ''An exception occurred during execution of one of the filters'',\r\n                    filterException);", span="117-119", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="CreateContextFacts.cs"];
m11_70 [label="preContext.Canceled", span="122-122", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="CreateContextFacts.cs"];
m11_90 [label="Exit Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", span="102-102", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="CreateContextFacts.cs"];
m11_158 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", span="213-213", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="CreateContextFacts.cs"];
m11_159 [label="var context = CreateContext()", span="215-215", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="CreateContextFacts.cs"];
m11_160 [label="_stateMachine\r\n                .Setup(x => x.CreateInState(context.Job, It.IsAny<Dictionary<string, string>>(), context.InitialState))\r\n                .Returns(''id'')", span="216-218", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="CreateContextFacts.cs"];
m11_161 [label="context.CreateJob()", span="220-220", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="CreateContextFacts.cs"];
m11_162 [label="Assert.Equal(''id'', context.JobId)", span="222-222", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="CreateContextFacts.cs"];
m11_163 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", span="213-213", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="CreateContextFacts.cs"];
m11_91 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_120 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", span="155-155", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="CreateContextFacts.cs"];
m11_121 [label="var context = CreateContext()", span="157-157", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="CreateContextFacts.cs"];
m11_122 [label="context.SetJobParameter(''name1'', ''value1'')", span="159-159", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="CreateContextFacts.cs"];
m11_123 [label="context.SetJobParameter(''name2'', ''value2'')", span="160-160", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="CreateContextFacts.cs"];
m11_124 [label="Assert.Equal(''value1'', context.GetJobParameter<string>(''name1''))", span="162-162", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="CreateContextFacts.cs"];
m11_125 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", span="155-155", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="CreateContextFacts.cs"];
m11_22 [label="throw new ArgumentNullException(''performer'');", span="49-49", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="CreateContextFacts.cs"];
m11_57 [label="Assert.Same(_job, context.Job)", span="74-74", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="CreateContextFacts.cs"];
m11_41 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(_connection.Object, _stateMachineFactory.Object, null, _state.Object))", span="52-53", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="CreateContextFacts.cs"];
m11_34 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(_connection.Object, null, _job, _state.Object))", span="43-44", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="CreateContextFacts.cs"];
m11_38 [label="new CreateContext(_connection.Object, null, _job, _state.Object)", span="44-44", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_39 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_167 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", span="226-226", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="CreateContextFacts.cs"];
m11_171 [label="_stateMachine.Verify(x => x.CreateInState(\r\n                It.IsAny<Job>(),\r\n                It.Is<Dictionary<string, string>>(\r\n                    d => d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''),\r\n                It.IsAny<IState>()))", span="233-237", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", color=green, community=0, file="CreateContextFacts.cs"];
m11_170 [label="context.CreateJob()", span="231-231", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="CreateContextFacts.cs"];
m11_168 [label="var context = CreateContext()", span="228-228", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="CreateContextFacts.cs"];
m11_169 [label="context.SetJobParameter(''name'', new { key = ''value'' })", span="229-229", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="CreateContextFacts.cs"];
m11_172 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", span="226-226", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="CreateContextFacts.cs"];
m11_6 [label="_stateMachineFactory.Setup(x => x.Create(It.IsNotNull<IStorageConnection>()))\r\n                .Returns(_stateMachine.Object)", span="27-28", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="CreateContextFacts.cs"];
m11_7 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", span="19-19", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="CreateContextFacts.cs"];
m11_8 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="CreateContextFacts.cs"];
m11_52 [label="new CreateContext(\r\n                    _connection.Object, _stateMachineFactory.Object, _job, null)", span="62-63", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_152 [label="Entry HangFire.Client.CreateContext.CreateJob()", span="147-147", cluster="HangFire.Client.CreateContext.CreateJob()", file="CreateContextFacts.cs"];
m11_5 [label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="26-26", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="CreateContextFacts.cs"];
m11_36 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="41-41", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="CreateContextFacts.cs"];
m11_51 [label="Entry lambda expression", span="62-63", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_94 [label="Entry Hangfire.Server.IServerFilter.OnPerformed(Hangfire.Server.PerformedContext)", span="33-33", cluster="Hangfire.Server.IServerFilter.OnPerformed(Hangfire.Server.PerformedContext)", file="CreateContextFacts.cs"];
m11_95 [label="filters.Reverse()", span="182-182", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", file="CreateContextFacts.cs"];
m11_96 [label="filter.OnServerException(context)", span="184-184", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", file="CreateContextFacts.cs"];
m11_97 [label="Exit Hangfire.Server.DefaultJobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", span="178-178", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", file="CreateContextFacts.cs"];
m11_188 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", span="251-251", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="CreateContextFacts.cs"];
m11_189 [label="var context = CreateContext()", span="253-253", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="CreateContextFacts.cs"];
m11_190 [label="context.CreateJob()", span="255-255", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="CreateContextFacts.cs"];
m11_191 [label="Assert.DoesNotThrow(\r\n                () => context.GetJobParameter<string>(''name''))", span="257-258", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="CreateContextFacts.cs"];
m11_192 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", span="251-251", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="CreateContextFacts.cs"];
m11_33 [label="Exit Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", span="46-46", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="CreateContextFacts.cs"];
m11_35 [label="Entry Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", span="80-80", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="CreateContextFacts.cs"];
m11_102 [label="Hangfire.Server.IJobPerformer", span="", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="CreateContextFacts.cs"];
m11_103 [label=preContext, span="", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="CreateContextFacts.cs"];
m11_104 [label="System.Func<Hangfire.Server.PerformedContext>", span="", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="CreateContextFacts.cs"];
m11_105 [label="Hangfire.Server.IServerFilter", span="", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="CreateContextFacts.cs"];
m11_64 [label="Entry Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", span="102-102", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="CreateContextFacts.cs"];
m11_206 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", span="277-277", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="CreateContextFacts.cs"];
m11_207 [label="var context = CreateContext()", span="279-279", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="CreateContextFacts.cs"];
m11_210 [label="Assert.Throws<InvalidOperationException>(\r\n                () => contextCopy.SetJobParameter(''name'', ''value''))", span="284-285", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="CreateContextFacts.cs"];
m11_208 [label="context.CreateJob()", span="280-280", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="CreateContextFacts.cs"];
m11_209 [label="var contextCopy = new CreateContext(context)", span="282-282", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="CreateContextFacts.cs"];
m11_211 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", span="277-277", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="CreateContextFacts.cs"];
m11_58 [label="Assert.Same(_state.Object, context.InitialState)", span="75-75", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="CreateContextFacts.cs"];
m11_47 [label="return result;", span="99-99", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="CreateContextFacts.cs"];
m11_48 [label="Exit Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", span="80-80", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="CreateContextFacts.cs"];
m11_72 [label="var wasError = false", span="128-128", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="CreateContextFacts.cs"];
m11_73 [label="PerformedContext postContext", span="129-129", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="CreateContextFacts.cs"];
m11_74 [label="postContext = continuation()", span="132-132", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="CreateContextFacts.cs"];
m11_75 [label=Exception, span="134-134", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="CreateContextFacts.cs"];
m11_76 [label="wasError = true", span="136-136", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="CreateContextFacts.cs"];
m11_77 [label="postContext = new PerformedContext(\r\n                    preContext, null, false, ex)", span="137-138", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="CreateContextFacts.cs"];
m11_78 [label="filter.OnPerformed(postContext)", span="142-142", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="CreateContextFacts.cs"];
m11_79 [label=Exception, span="144-144", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="CreateContextFacts.cs"];
m11_80 [label="throw new JobPerformanceException(\r\n                        ''An exception occurred during execution of one of the filters'',\r\n                        filterException);", span="146-148", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="CreateContextFacts.cs"];
m11_81 [label="!postContext.ExceptionHandled", span="151-151", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="CreateContextFacts.cs"];
m11_147 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", span="200-200", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="CreateContextFacts.cs"];
m11_148 [label="var context = CreateContext()", span="202-202", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="CreateContextFacts.cs"];
m11_150 [label="_stateMachine.Verify(x => x.CreateInState(\r\n                context.Job,\r\n                It.IsNotNull<Dictionary<string, string>>(),\r\n                context.InitialState))", span="206-209", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="CreateContextFacts.cs"];
m11_149 [label="context.CreateJob()", span="204-204", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="CreateContextFacts.cs"];
m11_151 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", span="200-200", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="CreateContextFacts.cs"];
m11_13 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="CreateContextFacts.cs"];
m11_65 [label="filter.OnPerforming(preContext)", span="109-109", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="CreateContextFacts.cs"];
m11_37 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_62 [label="InvokePerformFilter(filter, preContext, next)", span="95-95", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_216 [label="return new CreateContext(\r\n                _connection.Object, _stateMachineFactory.Object, _job, _state.Object);", span="294-295", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContext()", file="CreateContextFacts.cs"];
m11_217 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CreateContext()", span="292-292", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContext()", file="CreateContextFacts.cs"];
m11_157 [label="Entry Unk.CreateInState", span="", cluster="Unk.CreateInState", file="CreateContextFacts.cs"];
m11_193 [label="Entry lambda expression", span="258-258", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_11 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="CreateContextFacts.cs"];
m11_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="CreateContextFacts.cs"];
m11_15 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_16 [label="Method()", span="21-21", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_54 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", span="69-69", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="CreateContextFacts.cs"];
m11_55 [label="var context = CreateContext()", span="71-71", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="CreateContextFacts.cs"];
m11_59 [label="Assert.NotNull(context.Items)", span="77-77", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="CreateContextFacts.cs"];
m11_53 [label="Exit lambda expression", span="62-63", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_56 [label="Assert.Same(_connection.Object, context.Connection)", span="73-73", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="CreateContextFacts.cs"];
m11_60 [label="Assert.Null(context.JobId)", span="78-78", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="CreateContextFacts.cs"];
m11_61 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", span="69-69", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="CreateContextFacts.cs"];
m11_173 [label="Entry lambda expression", span="233-237", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_174 [label="x.CreateInState(\r\n                It.IsAny<Job>(),\r\n                It.Is<Dictionary<string, string>>(\r\n                    d => d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''),\r\n                It.IsAny<IState>())", span="233-237", cluster="lambda expression", color=green, community=0, file="CreateContextFacts.cs"];
m11_175 [label="Exit lambda expression", span="233-237", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_176 [label="Entry lambda expression", span="236-236", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_30 [label="!exceptionContext.ExceptionHandled", span="66-66", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="CreateContextFacts.cs"];
m11_45 [label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokePerformFilter(filter, preContext, next))", span="94-95", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="CreateContextFacts.cs"];
m11_204 [label="x.CreateInState(\r\n                _job, It.IsAny<Dictionary<string, string>>(), _state.Object)", span="264-265", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_20 [label="throw new ArgumentNullException(''context'');", span="48-48", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="CreateContextFacts.cs"];
m11_155 [label="x.CreateInState(\r\n                context.Job,\r\n                It.IsNotNull<Dictionary<string, string>>(),\r\n                context.InitialState)", span="206-209", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_165 [label="x.CreateInState(context.Job, It.IsAny<Dictionary<string, string>>(), context.InitialState)", span="217-217", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_178 [label="Exit lambda expression", span="236-236", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_177 [label="d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''", span="236-236", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_19 [label="context == null", span="48-48", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="CreateContextFacts.cs"];
m11_29 [label="InvokeServerExceptionFilters(exceptionContext, filterInfo.ServerExceptionFilters)", span="64-64", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="CreateContextFacts.cs"];
m11_31 [label="throw;", span="68-68", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="CreateContextFacts.cs"];
m11_44 [label="Func<PerformedContext> continuation = () =>\r\n            {\r\n                result = performer.Perform(_activator, context.CancellationToken);\r\n                return new PerformedContext(context, result, false, null);\r\n            }", span="88-92", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="CreateContextFacts.cs"];
m11_46 [label="thunk()", span="97-97", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="CreateContextFacts.cs"];
m11_83 [label="!wasError", span="157-157", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="CreateContextFacts.cs"];
m11_92 [label="Entry Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22", cluster="Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="CreateContextFacts.cs"];
m11_100 [label="System.Collections.Generic.IEnumerable<object>", span="", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_107 [label="context.GetJobParameter<int>(null)", span="133-133", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_138 [label="context.GetJobParameter<int>(''name'')", span="184-184", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_154 [label="Entry lambda expression", span="206-209", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_164 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_186 [label="context.SetJobParameter(''name'', ''value'')", span="247-247", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_194 [label="context.GetJobParameter<string>(''name'')", span="258-258", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_203 [label="Entry lambda expression", span="264-265", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_205 [label="Exit lambda expression", span="264-265", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_21 [label="performer == null", span="49-49", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="CreateContextFacts.cs"];
m11_82 [label="throw;", span="153-153", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="CreateContextFacts.cs"];
m11_106 [label="Entry lambda expression", span="133-133", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_137 [label="Entry lambda expression", span="184-184", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_156 [label="Exit lambda expression", span="206-209", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_166 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_185 [label="Entry lambda expression", span="247-247", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_212 [label="Entry lambda expression", span="285-285", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_84 [label="filter.OnPerformed(postContext)", span="161-161", cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="CreateContextFacts.cs"];
m11_93 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="CreateContextFacts.cs"];
m11_99 [label="Hangfire.Server.DefaultJobPerformanceProcess", span="", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_101 [label="Hangfire.Server.PerformContext", span="", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_108 [label="Exit lambda expression", span="133-133", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_139 [label="Exit lambda expression", span="184-184", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_187 [label="Exit lambda expression", span="247-247", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_195 [label="Exit lambda expression", span="258-258", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_213 [label="contextCopy.SetJobParameter(''name'', ''value'')", span="285-285", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_214 [label="Exit lambda expression", span="285-285", cluster="lambda expression", file="CreateContextFacts.cs"];
m11_89 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", span="110-110", cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="CreateContextFacts.cs"];
m11_85 [label="Entry HangFire.Client.CreateContext.SetJobParameter(string, object)", span="96-96", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContextFacts.cs"];
m11_87 [label="var context = CreateContext()", span="112-112", cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="CreateContextFacts.cs"];
m11_86 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", span="110-110", cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="CreateContextFacts.cs"];
m11_88 [label="Assert.DoesNotThrow(\r\n                () => context.SetJobParameter(''name'', null))", span="114-115", cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="CreateContextFacts.cs"];
m11_32 [label="return null;", span="72-72", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="CreateContextFacts.cs"];
m11_153 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="CreateContextFacts.cs"];
m11_115 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", span="146-146", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="CreateContextFacts.cs"];
m11_116 [label="var context = CreateContext()", span="148-148", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="CreateContextFacts.cs"];
m11_117 [label="context.SetJobParameter(''name'', ''value'')", span="149-149", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="CreateContextFacts.cs"];
m11_118 [label="Assert.Equal(''value'', context.GetJobParameter<string>(''name''))", span="151-151", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="CreateContextFacts.cs"];
m11_119 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", span="146-146", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="CreateContextFacts.cs"];
m11_140 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", span="188-188", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="CreateContextFacts.cs"];
m11_141 [label="var context = CreateContext()", span="190-190", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="CreateContextFacts.cs"];
m11_142 [label="context.SetJobParameter(''name'', ''value'')", span="191-191", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="CreateContextFacts.cs"];
m11_143 [label="var contextCopy = new CreateContext(context)", span="192-192", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="CreateContextFacts.cs"];
m11_144 [label="var value = contextCopy.GetJobParameter<string>(''name'')", span="194-194", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="CreateContextFacts.cs"];
m11_145 [label="Assert.Equal(''value'', value)", span="196-196", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="CreateContextFacts.cs"];
m11_146 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", span="188-188", cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="CreateContextFacts.cs"];
m11_40 [label="Entry Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="40-40", cluster="Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="CreateContextFacts.cs"];
m11_42 [label="object result = null", span="85-85", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="CreateContextFacts.cs"];
m11_43 [label="var preContext = new PerformingContext(context)", span="87-87", cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="CreateContextFacts.cs"];
m11_109 [label="Entry HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContextFacts.cs"];
m11_23 [label="var filterInfo = GetFilters(context.Job)", span="51-51", cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="CreateContextFacts.cs"];
m11_17 [label="Entry Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", span="38-38", cluster="Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", file="CreateContextFacts.cs"];
m11_126 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", span="166-166", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="CreateContextFacts.cs"];
m11_127 [label="var context = CreateContext()", span="168-168", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="CreateContextFacts.cs"];
m11_128 [label="context.SetJobParameter(''name'', ''oldValue'')", span="170-170", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="CreateContextFacts.cs"];
m11_129 [label="context.SetJobParameter(''name'', ''newValue'')", span="171-171", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="CreateContextFacts.cs"];
m11_130 [label="Assert.Equal(''newValue'', context.GetJobParameter<string>(''name''))", span="173-173", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="CreateContextFacts.cs"];
m11_131 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", span="166-166", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="CreateContextFacts.cs"];
m11_18 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.Method()", span="288-288", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Method()", file="CreateContextFacts.cs"];
m11_215 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.Method()", span="288-288", cluster="HangFire.Core.Tests.Client.CreateContextFacts.Method()", file="CreateContextFacts.cs"];
m11_132 [label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="177-177", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="CreateContextFacts.cs"];
m11_133 [label="var context = CreateContext()", span="179-179", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="CreateContextFacts.cs"];
m11_135 [label="Assert.Throws<InvalidOperationException>(\r\n                () => context.GetJobParameter<int>(''name''))", span="183-184", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="CreateContextFacts.cs"];
m11_134 [label="context.SetJobParameter(''name'', ''value'')", span="181-181", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="CreateContextFacts.cs"];
m11_136 [label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="177-177", cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="CreateContextFacts.cs"];
m11_179 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="CreateContextFacts.cs"];
m11_218 [label="HangFire.Core.Tests.Client.CreateContextFacts", span="", file="CreateContextFacts.cs"];
m11_224 [label=context, span="", file="CreateContextFacts.cs"];
m11_225 [label=context, span="", file="CreateContextFacts.cs"];
m11_219 [label=context, span="", file="CreateContextFacts.cs"];
m11_220 [label=context, span="", file="CreateContextFacts.cs"];
m11_221 [label=context, span="", file="CreateContextFacts.cs"];
m11_222 [label=context, span="", file="CreateContextFacts.cs"];
m11_223 [label=context, span="", file="CreateContextFacts.cs"];
m11_226 [label=context, span="", file="CreateContextFacts.cs"];
m11_227 [label=context, span="", file="CreateContextFacts.cs"];
m11_228 [label=contextCopy, span="", file="CreateContextFacts.cs"];
m12_66 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="CreatedContextFacts.cs"];
m12_80 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="CreatedContextFacts.cs"];
m12_23 [label=recurringJobIds, span="72-72", cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="CreatedContextFacts.cs"];
m12_21 [label="var recurringJobIds = connection.GetAllItemsFromSet(''recurring-jobs'')", span="69-69", cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="CreatedContextFacts.cs"];
m12_26 [label="TryScheduleJob(connection, recurringJobId, recurringJob, stateMachineFactory)", span="84-84", cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="CreatedContextFacts.cs"];
m12_83 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="CreatedContextFacts.cs"];
m12_41 [label="Entry Hangfire.Server.RecurringJobScheduler.ToString()", span="100-100", cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="CreatedContextFacts.cs"];
m12_42 [label="return ''Recurring Job Scheduler'';", span="102-102", cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="CreatedContextFacts.cs"];
m12_43 [label="Exit Hangfire.Server.RecurringJobScheduler.ToString()", span="100-100", cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="CreatedContextFacts.cs"];
m12_75 [label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="31-31", cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="CreatedContextFacts.cs"];
m12_37 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="CreatedContextFacts.cs"];
m12_22 [label="var stateMachineFactory = _stateMachineFactory(context.Storage)", span="70-70", cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="CreatedContextFacts.cs"];
m12_76 [label="Entry Hangfire.Server.RecurringJobScheduler.CreateBackgroundJob(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState, Hangfire.States.IStateMachineFactory)", span="161-161", cluster="Hangfire.Server.RecurringJobScheduler.CreateBackgroundJob(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_85 [label="var context = new CreateContext(connection, job, state)", span="163-163", cluster="Hangfire.Server.RecurringJobScheduler.CreateBackgroundJob(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_86 [label="var stateMachine = stateMachineFactory.Create(connection)", span="164-164", cluster="Hangfire.Server.RecurringJobScheduler.CreateBackgroundJob(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_87 [label="return _creationProcess.Run(context, stateMachine);", span="166-166", cluster="Hangfire.Server.RecurringJobScheduler.CreateBackgroundJob(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_88 [label="Exit Hangfire.Server.RecurringJobScheduler.CreateBackgroundJob(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState, Hangfire.States.IStateMachineFactory)", span="161-161", cluster="Hangfire.Server.RecurringJobScheduler.CreateBackgroundJob(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_73 [label="Entry Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime?)", span="25-25", cluster="Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime?)", file="CreatedContextFacts.cs"];
m12_82 [label="Entry Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="61-61", cluster="Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="CreatedContextFacts.cs"];
m12_81 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="CreatedContextFacts.cs"];
m12_90 [label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22", cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="CreatedContextFacts.cs"];
m12_68 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="CreatedContextFacts.cs"];
m12_0 [label="Entry HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", span="13-13", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="CreatedContextFacts.cs"];
m12_1 [label="Assert.Throws<NullReferenceException>(\r\n                () => new CreatedContext(null, false, null))", span="15-16", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="CreatedContextFacts.cs"];
m12_3 [label="stateMachineFactory == null", span="51-51", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="CreatedContextFacts.cs"];
m12_17 [label="Assert.Same(exception, context.Exception)", span="33-33", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="CreatedContextFacts.cs"];
m12_18 [label="Exit HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", span="20-20", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="CreatedContextFacts.cs"];
m12_29 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="CreatedContextFacts.cs"];
m12_19 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="CreatedContextFacts.cs"];
m12_20 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="CreatedContextFacts.cs"];
m12_24 [label="Entry CreateContext.cstr", span="", cluster="CreateContext.cstr", file="CreatedContextFacts.cs"];
m12_28 [label="TestMethod()", span="23-23", cluster="lambda expression", file="CreatedContextFacts.cs"];
m12_25 [label="Entry Unk.True", span="", cluster="Unk.True", file="CreatedContextFacts.cs"];
m12_27 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="CreatedContextFacts.cs"];
m12_30 [label="Entry HangFire.Core.Tests.Client.CreatedContextFacts.TestMethod()", span="36-36", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.TestMethod()", file="CreatedContextFacts.cs"];
m12_39 [label="Entry Hangfire.Logging.ILog.WarnException(string, System.Exception)", span="278-278", cluster="Hangfire.Logging.ILog.WarnException(string, System.Exception)", file="CreatedContextFacts.cs"];
m12_69 [label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0", cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="CreatedContextFacts.cs"];
m12_7 [label="instantFactory == null", span="53-53", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="CreatedContextFacts.cs"];
m12_74 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="CreatedContextFacts.cs"];
m12_35 [label="Entry Unk._stateMachineFactory", span="", cluster="Unk._stateMachineFactory", file="CreatedContextFacts.cs"];
m12_31 [label="Entry Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", span="22-22", cluster="Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", file="CreatedContextFacts.cs"];
m12_32 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="CreatedContextFacts.cs"];
m12_67 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="CreatedContextFacts.cs"];
m12_8 [label="throw new ArgumentNullException(''instantFactory'');", span="53-53", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="CreatedContextFacts.cs"];
m12_11 [label="_stateMachineFactory = stateMachineFactory", span="56-56", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", color=green, community=0, file="CreatedContextFacts.cs"];
m12_10 [label="throw new ArgumentNullException(''throttler'');", span="54-54", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="CreatedContextFacts.cs"];
m12_12 [label="_creationProcess = creationProcess", span="57-57", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="CreatedContextFacts.cs"];
m12_14 [label="_throttler = throttler", span="59-59", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="CreatedContextFacts.cs"];
m12_9 [label="throttler == null", span="54-54", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="CreatedContextFacts.cs"];
m12_13 [label="_instantFactory = instantFactory", span="58-58", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="CreatedContextFacts.cs"];
m12_15 [label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", span="45-45", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="CreatedContextFacts.cs"];
m12_16 [label="Assert.True(context.Canceled)", span="32-32", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="CreatedContextFacts.cs"];
m12_72 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="CreatedContextFacts.cs"];
m12_79 [label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68", cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="CreatedContextFacts.cs"];
m12_65 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="CreatedContextFacts.cs"];
m12_44 [label="Entry Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", span="105-105", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_45 [label="var serializedJob = JobHelper.FromJson<InvocationData>(recurringJob[''Job''])", span="111-111", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_47 [label="var cron = recurringJob[''Cron'']", span="113-113", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_49 [label="var timeZone = recurringJob.ContainsKey(''TimeZoneId'')\r\n                ? TimeZoneInfo.FindSystemTimeZoneById(recurringJob[''TimeZoneId''])\r\n                : TimeZoneInfo.Utc", span="118-120", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_51 [label="var lastExecutionTime = recurringJob.ContainsKey(''LastExecution'')\r\n                    ? JobHelper.DeserializeDateTime(recurringJob[''LastExecution''])\r\n                    : (DateTime?)null", span="124-126", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_55 [label="var jobId = CreateBackgroundJob(connection, job, state, stateMachineFactory)", span="133-133", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_57 [label="Logger.DebugFormat(\r\n                            ''Recurring job '{0}' execution at '{1}' has been canceled.'',\r\n                            recurringJobId,\r\n                            instant.NowInstant)", span="137-140", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_61 [label="connection.SetRangeInHash(\r\n                    String.Format(''recurring-job:{0}'', recurringJobId),\r\n                    changedFields)", span="149-151", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_63 [label="Logger.ErrorException(\r\n                    String.Format(''Recurring job '{0}' was not triggered: {1}.'', recurringJobId, ex.Message),\r\n                    ex)", span="155-157", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_46 [label="var job = serializedJob.Deserialize()", span="112-112", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_48 [label="var cronSchedule = CrontabSchedule.Parse(cron)", span="114-114", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_50 [label="var instant = _instantFactory.GetInstant(cronSchedule, timeZone)", span="122-122", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_53 [label="instant.GetNextInstants(lastExecutionTime).Any()", span="130-130", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_58 [label="changedFields.Add(''LastExecution'', JobHelper.SerializeDateTime(instant.NowInstant))", span="143-143", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_60 [label="changedFields.Add(''NextExecution'', JobHelper.SerializeDateTime(instant.NextInstant))", span="147-147", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_52 [label="var changedFields = new Dictionary<string, string>()", span="128-128", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_59 [label="changedFields.Add(''LastJobId'', jobId ?? String.Empty)", span="144-144", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_54 [label="var state = new EnqueuedState { Reason = ''Triggered by recurring job scheduler'' }", span="132-132", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_56 [label="String.IsNullOrEmpty(jobId)", span="135-135", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_62 [label=TimeZoneNotFoundException, span="153-153", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_64 [label="Exit Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", span="105-105", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>, Hangfire.States.IStateMachineFactory)", file="CreatedContextFacts.cs"];
m12_77 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="CreatedContextFacts.cs"];
m12_71 [label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73", cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="CreatedContextFacts.cs"];
m12_33 [label="Entry Unk.AcquireDistributedLock", span="", cluster="Unk.AcquireDistributedLock", file="CreatedContextFacts.cs"];
m12_38 [label="Entry Unk.TryScheduleJob", span="", cluster="Unk.TryScheduleJob", file="CreatedContextFacts.cs"];
m12_70 [label="Entry Unk.GetInstant", span="", cluster="Unk.GetInstant", file="CreatedContextFacts.cs"];
m12_40 [label="Entry Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", span="23-23", cluster="Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", file="CreatedContextFacts.cs"];
m12_4 [label="throw new ArgumentNullException(''stateMachineFactory'');", span="51-51", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="CreatedContextFacts.cs"];
m12_5 [label="creationProcess == null", span="52-52", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="CreatedContextFacts.cs"];
m12_6 [label="throw new ArgumentNullException(''creationProcess'');", span="52-52", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>, Hangfire.Client.IJobCreationProcess, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="CreatedContextFacts.cs"];
m12_2 [label="Exit HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", span="13-13", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="CreatedContextFacts.cs"];
m12_34 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="CreatedContextFacts.cs"];
m12_36 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="CreatedContextFacts.cs"];
m12_91 [label="Entry Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", span="32-32", cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="CreatedContextFacts.cs"];
m12_78 [label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122", cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="CreatedContextFacts.cs"];
m12_84 [label="Entry Hangfire.Logging.ILog.ErrorException(string, System.Exception)", span="159-159", cluster="Hangfire.Logging.ILog.ErrorException(string, System.Exception)", file="CreatedContextFacts.cs"];
m12_89 [label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="36-36", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="CreatedContextFacts.cs"];
m12_92 [label="Hangfire.Server.RecurringJobScheduler", span="", file="CreatedContextFacts.cs"];
m13_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="CreatingContextFacts.cs"];
m13_8 [label="Entry HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", span="20-20", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs"];
m13_9 [label="var connection = new Mock<IStorageConnection>()", span="22-22", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs"];
m13_10 [label="var job = Job.FromExpression(() => TestMethod())", span="23-23", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs"];
m13_13 [label="var createContext = new CreateContext(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="27-28", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs"];
m13_11 [label="var state = new Mock<IState>()", span="24-24", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="CreatingContextFacts.cs"];
m13_12 [label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="25-25", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs"];
m13_14 [label="var context = new CreatingContext(createContext)", span="29-29", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs"];
m13_15 [label="Assert.False(context.Canceled)", span="31-31", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs"];
m13_16 [label="Exit HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", span="20-20", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs"];
m13_20 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="CreatingContextFacts.cs"];
m13_19 [label="Entry Mock<State>.cstr", span="", cluster="Mock<State>.cstr", file="CreatingContextFacts.cs"];
m13_22 [label="Entry Unk.False", span="", cluster="Unk.False", file="CreatingContextFacts.cs"];
m13_7 [label="Entry HangFire.Client.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="24-24", cluster="HangFire.Client.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="CreatingContextFacts.cs"];
m13_18 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="CreatingContextFacts.cs"];
m13_0 [label="Entry HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="13-13", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="CreatingContextFacts.cs"];
m13_1 [label="Assert.Throws<NullReferenceException>(\r\n                () => new CreatingContext(null))", span="15-16", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="CreatingContextFacts.cs"];
m13_2 [label="Exit HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="13-13", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="CreatingContextFacts.cs"];
m13_26 [label="Entry HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", span="34-34", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", file="CreatingContextFacts.cs"];
m13_27 [label="Exit HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", span="34-34", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", file="CreatingContextFacts.cs"];
m13_17 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="CreatingContextFacts.cs"];
m13_23 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="CreatingContextFacts.cs"];
m13_4 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="CreatingContextFacts.cs"];
m13_5 [label="new CreatingContext(null)", span="16-16", cluster="lambda expression", file="CreatingContextFacts.cs"];
m13_6 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="CreatingContextFacts.cs"];
m13_24 [label="TestMethod()", span="23-23", cluster="lambda expression", file="CreatingContextFacts.cs"];
m13_25 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="CreatingContextFacts.cs"];
m13_21 [label="Entry CreateContext.cstr", span="", cluster="CreateContext.cstr", file="CreatingContextFacts.cs"];
m14_18 [label="Entry HangFire.Storage.IStorageConnection.GetJobParameter(string, string)", span="34-34", cluster="HangFire.Storage.IStorageConnection.GetJobParameter(string, string)", file="ElectStateContext.cs"];
m14_66 [label="Entry HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", span="153-153", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="ElectStateContext.cs"];
m14_67 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server shuts down, it should clear its properties list'', ((string[])(null)))", span="155-155", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="ElectStateContext.cs"];
m14_68 [label="this.ScenarioSetup(scenarioInfo)", span="157-157", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="ElectStateContext.cs"];
m14_71 [label="this.ScenarioCleanup()", span="163-163", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="ElectStateContext.cs"];
m14_69 [label="testRunner.When(''the \'Test\' server shuts down'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="159-159", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="ElectStateContext.cs"];
m14_70 [label="testRunner.Then(''the storage should not contain an entry for the \'Test\' server properties'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="161-161", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="ElectStateContext.cs"];
m14_72 [label="Exit HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", span="153-153", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="ElectStateContext.cs"];
m14_36 [label="Exit HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", span="75-75", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="ElectStateContext.cs"];
m14_22 [label="throw new ArgumentNullException(''filters'');", span="71-71", cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs"];
m14_23 [label="var statesToAppend = new List<State>()", span="73-73", cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs", color=red, community=0];
m14_24 [label=filters, span="75-75", cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs"];
m14_52 [label="Entry HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", span="119-119", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="ElectStateContext.cs"];
m14_53 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server starts, it should publicate its queues'', ((string[])(null)))", span="121-121", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="ElectStateContext.cs"];
m14_54 [label="this.ScenarioSetup(scenarioInfo)", span="123-123", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="ElectStateContext.cs"];
m14_57 [label="this.ScenarioCleanup()", span="129-129", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="ElectStateContext.cs"];
m14_55 [label="testRunner.When(''the \'Test\' server starts with the queues critical, high'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="125-125", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="ElectStateContext.cs"];
m14_56 [label="testRunner.Then(''the \'Test\' server\'s queues list should contain queues critical, high'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="127-127", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="ElectStateContext.cs"];
m14_58 [label="Exit HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", span="119-119", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="ElectStateContext.cs"];
m14_26 [label="filter.OnStateElection(this)", span="78-78", cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs"];
m14_27 [label="oldState != CandidateState", span="80-80", cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs"];
m14_28 [label="statesToAppend.Add(oldState)", span="82-82", cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs"];
m14_25 [label="var oldState = CandidateState", span="77-77", cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs"];
m14_59 [label="Entry HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", span="136-136", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="ElectStateContext.cs"];
m14_60 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server shuts down, it should remove itself from the servers set'', ((string[])(null)))", span="138-138", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="ElectStateContext.cs"];
m14_61 [label="this.ScenarioSetup(scenarioInfo)", span="140-140", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="ElectStateContext.cs"];
m14_64 [label="this.ScenarioCleanup()", span="146-146", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="ElectStateContext.cs"];
m14_62 [label="testRunner.When(''the \'Test\' server shuts down'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="142-142", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="ElectStateContext.cs"];
m14_63 [label="testRunner.Then(''the servers set should not contain the \'Test\' server'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="144-144", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="ElectStateContext.cs"];
m14_65 [label="Exit HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", span="136-136", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="ElectStateContext.cs"];
m14_29 [label="statesToAppend.Count > 0", span="86-86", cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs"];
m14_19 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="ElectStateContext.cs"];
m14_41 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server starts, it should publicate its properties'', ((string[])(null)))", span="94-94", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="ElectStateContext.cs"];
m14_40 [label="Entry HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", span="92-92", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="ElectStateContext.cs"];
m14_39 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="ElectStateContext.cs"];
m14_30 [label="var transaction = Connection.CreateWriteTransaction()", span="88-88", cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs"];
m14_31 [label=statesToAppend, span="90-90", cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs"];
m14_32 [label="transaction.AddJobState(JobId, state)", span="92-92", cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs"];
m14_33 [label="transaction.Commit()", span="95-95", cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs"];
m14_35 [label="Exit HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", span="69-69", cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs"];
m14_34 [label="return CandidateState;", span="99-99", cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs"];
m14_42 [label="HangFire.States.ElectStateContext", span="", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="ElectStateContext.cs"];
m14_48 [label="this.ScenarioCleanup()", span="112-112", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="ElectStateContext.cs"];
m14_43 [label="testRunner.When(''the \'Test\' server starts with 5 workers'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="98-98", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="ElectStateContext.cs"];
m14_47 [label="testRunner.Then(''the \'Test\' server\'s properties should contain the following items:'', ((string)(null)), table1, ''Then '')", span="110-110", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="ElectStateContext.cs"];
m14_44 [label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="100-102", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="ElectStateContext.cs"];
m14_46 [label="table1.AddRow(new string[] {\r\n                        ''StartedAt'',\r\n                        ''<UtcNow timestamp>''})", span="106-108", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="ElectStateContext.cs"];
m14_45 [label="table1.AddRow(new string[] {\r\n                        ''WorkerCount'',\r\n                        ''5''})", span="103-105", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="ElectStateContext.cs"];
m14_49 [label="Exit HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", span="92-92", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="ElectStateContext.cs"];
m14_13 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="ElectStateContext.cs"];
m14_14 [label="Entry HangFire.Storage.IStorageConnection.SetJobParameter(string, string, string)", span="33-33", cluster="HangFire.Storage.IStorageConnection.SetJobParameter(string, string, string)", file="ElectStateContext.cs"];
m14_10 [label="testRunner.OnFeatureEnd()", span="41-41", cluster="HangFire.Tests.ServerFeature.FeatureTearDown()", file="ElectStateContext.cs"];
m14_11 [label="testRunner = null", span="42-42", cluster="HangFire.Tests.ServerFeature.FeatureTearDown()", file="ElectStateContext.cs", color=green, community=0];
m14_12 [label="Exit HangFire.Tests.ServerFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.ServerFeature.FeatureTearDown()", file="ElectStateContext.cs"];
m14_38 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="ElectStateContext.cs"];
m14_37 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="ElectStateContext.cs"];
m14_51 [label="Entry Unk.AddRow", span="", cluster="Unk.AddRow", file="ElectStateContext.cs"];
m14_73 [label="Entry HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", span="170-170", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="ElectStateContext.cs"];
m14_74 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server shuts down, it should clear its queues'', ((string[])(null)))", span="172-172", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="ElectStateContext.cs"];
m14_75 [label="this.ScenarioSetup(scenarioInfo)", span="174-174", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="ElectStateContext.cs"];
m14_78 [label="this.ScenarioCleanup()", span="180-180", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="ElectStateContext.cs"];
m14_76 [label="testRunner.When(''the \'Test\' server shuts down'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="176-176", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="ElectStateContext.cs"];
m14_77 [label="testRunner.Then(''the storage should not contain an entry for the \'Test\' server queues'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="178-178", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="ElectStateContext.cs"];
m14_79 [label="Exit HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", span="170-170", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="ElectStateContext.cs"];
m14_0 [label="Entry HangFire.States.ElectStateContext.ElectStateContext(HangFire.States.StateContext, HangFire.States.State, string, HangFire.Storage.IStorageConnection)", span="27-27", cluster="HangFire.States.ElectStateContext.ElectStateContext(HangFire.States.StateContext, HangFire.States.State, string, HangFire.Storage.IStorageConnection)", file="ElectStateContext.cs"];
m14_1 [label="candidateState == null", span="34-34", cluster="HangFire.States.ElectStateContext.ElectStateContext(HangFire.States.StateContext, HangFire.States.State, string, HangFire.Storage.IStorageConnection)", file="ElectStateContext.cs"];
m14_3 [label="connection == null", span="35-35", cluster="HangFire.States.ElectStateContext.ElectStateContext(HangFire.States.StateContext, HangFire.States.State, string, HangFire.Storage.IStorageConnection)", file="ElectStateContext.cs"];
m14_5 [label="CandidateState = candidateState", span="37-37", cluster="HangFire.States.ElectStateContext.ElectStateContext(HangFire.States.StateContext, HangFire.States.State, string, HangFire.Storage.IStorageConnection)", file="ElectStateContext.cs"];
m14_6 [label="CurrentState = currentState", span="38-38", cluster="HangFire.States.ElectStateContext.ElectStateContext(HangFire.States.StateContext, HangFire.States.State, string, HangFire.Storage.IStorageConnection)", file="ElectStateContext.cs"];
m14_7 [label="Connection = connection", span="39-39", cluster="HangFire.States.ElectStateContext.ElectStateContext(HangFire.States.StateContext, HangFire.States.State, string, HangFire.Storage.IStorageConnection)", file="ElectStateContext.cs"];
m14_2 [label="throw new ArgumentNullException(''candidateState'');", span="34-34", cluster="HangFire.States.ElectStateContext.ElectStateContext(HangFire.States.StateContext, HangFire.States.State, string, HangFire.Storage.IStorageConnection)", file="ElectStateContext.cs"];
m14_4 [label="throw new ArgumentNullException(''connection'');", span="35-35", cluster="HangFire.States.ElectStateContext.ElectStateContext(HangFire.States.StateContext, HangFire.States.State, string, HangFire.Storage.IStorageConnection)", file="ElectStateContext.cs"];
m14_8 [label="Exit HangFire.States.ElectStateContext.ElectStateContext(HangFire.States.StateContext, HangFire.States.State, string, HangFire.Storage.IStorageConnection)", span="27-27", cluster="HangFire.States.ElectStateContext.ElectStateContext(HangFire.States.StateContext, HangFire.States.State, string, HangFire.Storage.IStorageConnection)", file="ElectStateContext.cs"];
m14_50 [label="Entry TechTalk.SpecFlow.Table.cstr", span="", cluster="TechTalk.SpecFlow.Table.cstr", file="ElectStateContext.cs"];
m14_15 [label="Entry HangFire.States.ElectStateContext.GetJobParameter<T>(string)", span="63-63", cluster="HangFire.States.ElectStateContext.GetJobParameter<T>(string)", file="ElectStateContext.cs"];
m14_16 [label="return JobHelper.FromJson<T>(Connection.GetJobParameter(\r\n                JobId, name));", span="65-66", cluster="HangFire.States.ElectStateContext.GetJobParameter<T>(string)", file="ElectStateContext.cs"];
m14_17 [label="Exit HangFire.States.ElectStateContext.GetJobParameter<T>(string)", span="63-63", cluster="HangFire.States.ElectStateContext.GetJobParameter<T>(string)", file="ElectStateContext.cs"];
m14_9 [label="Entry HangFire.Tests.ServerFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.ServerFeature.FeatureTearDown()", file="ElectStateContext.cs"];
m14_20 [label="Entry HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", span="69-69", cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs"];
m14_21 [label="filters == null", span="71-71", cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs"];
m14_80 [label="HangFire.Tests.ServerFeature", span="", file="ElectStateContext.cs"];
m15_0 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", span="18-18", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m15_1 [label="var job = Job.FromExpression(() => Console.WriteLine())", span="20-20", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m15_2 [label="_stateContext = new StateContext(JobId, job)", span="21-21", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m15_3 [label="_candidateState = new Mock<IState>()", span="22-22", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs", color=green, community=0];
m15_55 [label="context.CandidateState = null", span="73-73", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_47 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", span="56-56", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m15_48 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.CreateContext()", span="174-174", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="ElectStateContextFacts.cs"];
m15_49 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="ElectStateContextFacts.cs"];
m15_51 [label="var context = CreateContext()", span="71-71", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs"];
m15_54 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_56 [label="Exit lambda expression", span="73-73", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_58 [label="var context = CreateContext()", span="79-79", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m15_59 [label="var newState = new Mock<IState>()", span="80-80", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs", color=green, community=0];
m15_60 [label="context.CandidateState = newState.Object", span="82-82", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m15_61 [label="Assert.Same(newState.Object, context.CandidateState)", span="84-84", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m15_52 [label="Assert.Throws<ArgumentNullException>(() => context.CandidateState = null)", span="73-73", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs"];
m15_53 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", span="69-69", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs"];
m15_57 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", span="77-77", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m15_50 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", span="69-69", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs"];
m15_62 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", span="77-77", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m15_63 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", span="88-88", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs"];
m15_107 [label="Entry lambda expression", span="138-138", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_83 [label="Exit HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", span="121-121", cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="ElectStateContextFacts.cs"];
m15_84 [label="Entry HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", span="131-131", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="ElectStateContextFacts.cs"];
m15_85 [label="var properties = state.GetProperties()", span="134-134", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="ElectStateContextFacts.cs"];
m15_86 [label="var now = DateTime.UtcNow", span="135-135", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="ElectStateContextFacts.cs"];
m15_87 [label="properties.Add(''State'', state.StateName)", span="137-137", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="ElectStateContextFacts.cs"];
m15_88 [label=appendToJob, span="139-139", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="ElectStateContextFacts.cs"];
m15_131 [label="Entry Mock<IElectStateFilter>.cstr", span="", cluster="Mock<IElectStateFilter>.cstr", file="ElectStateContextFacts.cs"];
m15_10 [label="Entry HangFire.States.JobState.JobState()", span="33-33", cluster="HangFire.States.JobState.JobState()", file="ElectStateContextFacts.cs"];
m15_99 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", span="122-122", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m15_12 [label="RegisterDescriptor(ProcessingState.Name, new ProcessingState.Descriptor())", span="36-36", cluster="HangFire.States.JobState.JobState()", file="ElectStateContextFacts.cs"];
m15_43 [label="Assert.Equal(_stateContext.Job, context.Job)", span="61-61", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m15_73 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="ElectStateContextFacts.cs"];
m15_75 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="ElectStateContextFacts.cs"];
m15_76 [label="Entry lambda expression", span="99-100", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_78 [label="Exit lambda expression", span="99-100", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_77 [label="x.RemoveEntry(\r\n                        String.Format(''hangfire:job:{0}:state'', state.JobId))", span="99-100", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_79 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="ElectStateContextFacts.cs"];
m15_94 [label="Exit HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", span="131-131", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="ElectStateContextFacts.cs"];
m15_95 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="ElectStateContextFacts.cs"];
m15_96 [label="Entry lambda expression", span="141-146", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_97 [label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}'', state.JobId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''State'', state.StateName },\r\n                        })", span="141-146", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_98 [label="Exit lambda expression", span="141-146", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_28 [label="throw new ArgumentNullException(''state'');", span="51-51", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="ElectStateContextFacts.cs"];
m15_11 [label="RegisterDescriptor(FailedState.Name, new FailedState.Descriptor())", span="35-35", cluster="HangFire.States.JobState.JobState()", file="ElectStateContextFacts.cs"];
m15_121 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", span="153-153", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="ElectStateContextFacts.cs"];
m15_122 [label="var newState = new Mock<IState>()", span="156-156", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", color=green, community=0, file="ElectStateContextFacts.cs"];
m15_123 [label="var filter = new Mock<IElectStateFilter>()", span="158-158", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="ElectStateContextFacts.cs"];
m15_124 [label="filter.Setup(x => x.OnStateElection(It.IsNotNull<ElectStateContext>()))\r\n                .Callback((ElectStateContext x) => x.CandidateState = newState.Object)", span="159-160", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="ElectStateContextFacts.cs"];
m15_127 [label="Assert.Same(newState.Object, electedState)", span="168-168", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="ElectStateContextFacts.cs"];
m15_125 [label="var context = CreateContext()", span="162-162", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="ElectStateContextFacts.cs"];
m15_128 [label="_transaction.Verify(x => x.AddJobState(JobId, _candidateState.Object))", span="170-170", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="ElectStateContextFacts.cs"];
m15_129 [label="_transaction.Verify(x => x.Dispose())", span="171-171", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="ElectStateContextFacts.cs"];
m15_126 [label="var electedState = context.ElectState(new[] { filter.Object })", span="165-165", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="ElectStateContextFacts.cs"];
m15_130 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", span="153-153", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="ElectStateContextFacts.cs"];
m15_111 [label=properties, span="", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ReturnsCandidateState_WhenFiltersArrayIsEmpty()", file="ElectStateContextFacts.cs"];
m15_112 [label="var context = CreateContext()", span="144-144", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ReturnsCandidateState_WhenFiltersArrayIsEmpty()", file="ElectStateContextFacts.cs"];
m15_114 [label="Assert.Same(_candidateState.Object, electedState)", span="148-148", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ReturnsCandidateState_WhenFiltersArrayIsEmpty()", file="ElectStateContextFacts.cs"];
m15_115 [label="_connection.Verify(x => x.CreateWriteTransaction(), Times.Never)", span="149-149", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ReturnsCandidateState_WhenFiltersArrayIsEmpty()", file="ElectStateContextFacts.cs"];
m15_113 [label="var electedState = context.ElectState(Enumerable.Empty<IElectStateFilter>())", span="146-146", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ReturnsCandidateState_WhenFiltersArrayIsEmpty()", file="ElectStateContextFacts.cs"];
m15_116 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ReturnsCandidateState_WhenFiltersArrayIsEmpty()", span="142-142", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ReturnsCandidateState_WhenFiltersArrayIsEmpty()", file="ElectStateContextFacts.cs"];
m15_133 [label="Entry Unk.ElectState", span="", cluster="Unk.ElectState", file="ElectStateContextFacts.cs"];
m15_42 [label="Assert.Equal(_stateContext.JobId, context.JobId)", span="60-60", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m15_106 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ThrowsAnException_WhenFiltersArrayIsNull()", span="134-134", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ThrowsAnException_WhenFiltersArrayIsNull()", file="ElectStateContextFacts.cs"];
m15_71 [label="x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(''Value''))", span="94-95", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_27 [label="state == null", span="51-51", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="ElectStateContextFacts.cs"];
m15_9 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ElectStateContextFacts.cs"];
m15_18 [label="Entry HangFire.States.ProcessingState.Descriptor.Descriptor()", span="37-37", cluster="HangFire.States.ProcessingState.Descriptor.Descriptor()", file="ElectStateContextFacts.cs"];
m15_19 [label="Entry lambda expression", span="26-26", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_137 [label="Entry Unk.OnStateElection", span="", cluster="Unk.OnStateElection", file="ElectStateContextFacts.cs"];
m15_74 [label="Entry Unk.SetJobParameter", span="", cluster="Unk.SetJobParameter", file="ElectStateContextFacts.cs"];
m15_117 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="ElectStateContextFacts.cs"];
m15_144 [label="Entry Unk.AddJobState", span="", cluster="Unk.AddJobState", file="ElectStateContextFacts.cs"];
m15_68 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="ElectStateContextFacts.cs"];
m15_4 [label="_connection = new Mock<IStorageConnection>()", span="23-23", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m15_5 [label="_transaction = new Mock<IWriteOnlyTransaction>()", span="24-24", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m15_93 [label="transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', state.JobId),\r\n                JobHelper.ToJson(properties)))", span="156-158", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="ElectStateContextFacts.cs", color=red, community=0];
m15_16 [label="Entry HangFire.States.FailedState.Descriptor.Descriptor()", span="41-41", cluster="HangFire.States.FailedState.Descriptor.Descriptor()", file="ElectStateContextFacts.cs"];
m15_6 [label="Entry HangFire.States.JobState.GetProperties()", span="24-24", cluster="HangFire.States.JobState.GetProperties()", file="ElectStateContextFacts.cs"];
m15_7 [label="return new Dictionary<string, string>();", span="26-26", cluster="HangFire.States.JobState.GetProperties()", file="ElectStateContextFacts.cs"];
m15_13 [label="RegisterDescriptor(ScheduledState.Name, new ScheduledState.Descriptor())", span="37-37", cluster="HangFire.States.JobState.JobState()", file="ElectStateContextFacts.cs"];
m15_17 [label="Entry HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", span="41-41", cluster="HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", file="ElectStateContextFacts.cs"];
m15_21 [label="Exit lambda expression", span="26-26", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_22 [label="Entry Unk.CreateWriteTransaction", span="", cluster="Unk.CreateWriteTransaction", file="ElectStateContextFacts.cs"];
m15_148 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="ElectStateContextFacts.cs"];
m15_41 [label="var context = CreateContext()", span="58-58", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m15_69 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ElectStateContextFacts.cs"];
m15_103 [label="Entry lambda expression", span="156-158", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_104 [label="x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', state.JobId),\r\n                JobHelper.ToJson(properties))", span="156-158", cluster="lambda expression", file="ElectStateContextFacts.cs", color=red, community=0];
m15_105 [label="Exit lambda expression", span="156-158", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_40 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", span="56-56", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m15_101 [label="x.GetJobParameter(''1'', ''Value'')", span="125-125", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_100 [label="Entry lambda expression", span="125-125", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_102 [label="Exit lambda expression", span="125-125", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_139 [label="x.CandidateState = newState.Object", span="160-160", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_30 [label="redis.AcquireLock(\r\n                String.Format(''hangfire:job:{0}:state-lock'', state.JobId), TimeSpan.FromMinutes(1))", span="56-57", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="ElectStateContextFacts.cs"];
m15_38 [label="Exit HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="ElectStateContextFacts.cs"];
m15_142 [label="x.AddJobState(JobId, _candidateState.Object)", span="170-170", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_134 [label="Entry lambda expression", span="159-159", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_138 [label="Entry lambda expression", span="160-160", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_140 [label="Exit lambda expression", span="160-160", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_29 [label="var changingFilters = GlobalJobFilters.Filters\r\n                .OfType<IStateChangedFilter>().ToList()", span="53-54", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="ElectStateContextFacts.cs"];
m15_31 [label=changingFilters, span="59-59", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="ElectStateContextFacts.cs"];
m15_37 [label="return ApplyState(redis, state, appliedFilters, allowedStates);", span="73-73", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="ElectStateContextFacts.cs"];
m15_39 [label="Exit lambda expression", span="46-50", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_70 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="ElectStateContextFacts.cs"];
m15_80 [label="var transaction = redis.CreateTransaction()", span="124-124", cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="ElectStateContextFacts.cs"];
m15_90 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', state.JobId),\r\n                    properties))", span="148-150", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="ElectStateContextFacts.cs"];
m15_108 [label="HangFire.States.JobState", span="", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_118 [label="Entry lambda expression", span="149-149", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_141 [label="Entry lambda expression", span="170-170", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_143 [label="Exit lambda expression", span="170-170", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_145 [label="Entry lambda expression", span="171-171", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_136 [label="Exit lambda expression", span="159-159", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_135 [label="x.OnStateElection(It.IsNotNull<ElectStateContext>())", span="159-159", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_20 [label="Entry HangFire.States.SucceededState.Descriptor.Descriptor()", span="49-49", cluster="HangFire.States.SucceededState.Descriptor.Descriptor()", file="ElectStateContextFacts.cs"];
m15_72 [label="Entry Unk.AppendHistory", span="", cluster="Unk.AppendHistory", file="ElectStateContextFacts.cs"];
m15_82 [label="transaction.Commit()", span="127-127", cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="ElectStateContextFacts.cs"];
m15_81 [label="AppendHistory(transaction, state, appendToJob)", span="126-126", cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="ElectStateContextFacts.cs"];
m15_92 [label="properties.Add(''CreatedAt'', JobHelper.ToStringTimestamp(now))", span="154-154", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="ElectStateContextFacts.cs"];
m15_91 [label="properties.Add(''Reason'', state.Reason)", span="153-153", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="ElectStateContextFacts.cs"];
m15_109 [label="HangFire.States.JobState", span="", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_120 [label="Exit lambda expression", span="149-149", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_119 [label="x.CreateWriteTransaction()", span="149-149", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_146 [label="x.Dispose()", span="171-171", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_147 [label="Exit lambda expression", span="171-171", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m15_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ElectStateContextFacts.cs"];
m15_15 [label="Exit HangFire.States.JobState.JobState()", span="33-33", cluster="HangFire.States.JobState.JobState()", file="ElectStateContextFacts.cs"];
m15_65 [label="context.SetJobParameter(''Name'', ''Value'')", span="92-92", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs"];
m15_64 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="ElectStateContextFacts.cs"];
m15_66 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="ElectStateContextFacts.cs"];
m15_67 [label="Entry Unk.IsNullOrEmpty", span="", cluster="Unk.IsNullOrEmpty", file="ElectStateContextFacts.cs"];
m15_24 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ElectStateContext(\r\n                    _stateContext,\r\n                    null,\r\n                    null,\r\n                    _connection.Object))", span="32-37", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs"];
m15_25 [label="Assert.Equal(''candidateState'', exception.ParamName)", span="39-39", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs"];
m15_32 [label="Entry ElectStateContext.cstr", span="", cluster="ElectStateContext.cstr", file="ElectStateContextFacts.cs"];
m15_33 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="43-43", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ElectStateContextFacts.cs"];
m15_35 [label="Assert.Equal(''connection'', exception.ParamName)", span="52-52", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ElectStateContextFacts.cs"];
m15_26 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", span="30-30", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs"];
m15_36 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="43-43", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ElectStateContextFacts.cs"];
m15_34 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ElectStateContext(\r\n                    _stateContext,\r\n                    _candidateState.Object,\r\n                    null,\r\n                    null))", span="45-50", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ElectStateContextFacts.cs"];
m15_46 [label="Assert.Same(_connection.Object, context.Connection)", span="65-65", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m15_45 [label="Assert.Equal(''State'', context.CurrentState)", span="64-64", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m15_44 [label="Entry Unk.AcquireLock", span="", cluster="Unk.AcquireLock", file="ElectStateContextFacts.cs"];
m15_132 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="ElectStateContextFacts.cs"];
m15_8 [label="Exit HangFire.States.JobState.GetProperties()", span="24-24", cluster="HangFire.States.JobState.GetProperties()", file="ElectStateContextFacts.cs"];
m15_23 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="ElectStateContextFacts.cs"];
m15_89 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}'', state.JobId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''State'', state.StateName },\r\n                        }))", span="141-146", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="ElectStateContextFacts.cs"];
m15_149 [label="return new ElectStateContext(\r\n                _stateContext,\r\n                _candidateState.Object,\r\n                ''State'',\r\n                _connection.Object);", span="176-180", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="ElectStateContextFacts.cs"];
m15_150 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.CreateContext()", span="174-174", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="ElectStateContextFacts.cs"];
m15_110 [label="HangFire.States.JobState", span="", cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContextFacts.cs"];
m15_151 [label="HangFire.Core.Tests.States.ElectStateContextFacts", span="", file="ElectStateContextFacts.cs"];
m15_154 [label=newState, span="", file="ElectStateContextFacts.cs"];
m15_152 [label=context, span="", file="ElectStateContextFacts.cs"];
m15_153 [label=context, span="", file="ElectStateContextFacts.cs"];
m16_9 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="EnqueuedState.cs"];
m16_17 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="EnqueuedState.cs"];
m16_11 [label="Entry HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="79-79", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs"];
m16_12 [label="var enqueuedState = context.NewState as EnqueuedState", span="81-81", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs"];
m16_15 [label="transaction.AddToQueue(enqueuedState.Queue, context.JobId)", span="89-89", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs"];
m16_13 [label="enqueuedState == null", span="82-82", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs"];
m16_14 [label="throw new InvalidOperationException(String.Format(\r\n                        ''`{0}` state handler can be registered only for the Enqueued state.'',\r\n                        typeof(Handler).FullName));", span="84-86", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs"];
m16_16 [label="Exit HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="79-79", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs"];
m16_0 [label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="31-31", cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="EnqueuedState.cs"];
m16_1 [label="Exit HangFire.States.EnqueuedState.EnqueuedState()", span="31-31", cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="EnqueuedState.cs"];
m16_20 [label="Entry HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="92-92", cluster="HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs"];
m16_21 [label="Exit HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="92-92", cluster="HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs"];
m16_19 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="30-30", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="EnqueuedState.cs"];
m16_18 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="EnqueuedState.cs"];
m16_10 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="EnqueuedState.cs"];
m16_2 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string)", span="36-36", cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="EnqueuedState.cs"];
m16_3 [label="EnqueuedAt = DateTime.UtcNow", span="38-38", cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="EnqueuedState.cs"];
m16_4 [label="Queue = queue", span="39-39", cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="EnqueuedState.cs"];
m16_5 [label="Exit HangFire.States.EnqueuedState.EnqueuedState(string)", span="36-36", cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="EnqueuedState.cs"];
m16_6 [label="Entry HangFire.States.EnqueuedState.SerializeData()", span="68-68", cluster="HangFire.States.EnqueuedState.SerializeData()", file="EnqueuedState.cs"];
m16_7 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''EnqueuedAt'', JobHelper.ToStringTimestamp(EnqueuedAt) },\r\n                { ''Queue'', Queue }\r\n            };", span="70-74", cluster="HangFire.States.EnqueuedState.SerializeData()", file="EnqueuedState.cs"];
m16_8 [label="Exit HangFire.States.EnqueuedState.SerializeData()", span="68-68", cluster="HangFire.States.EnqueuedState.SerializeData()", file="EnqueuedState.cs"];
m16_22 [label="HangFire.States.EnqueuedState", span="", file="EnqueuedState.cs"];
m18_6 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", span="26-26", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="FailedState.cs"];
m18_7 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                // ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new CoreBackgroundJobPerformer(null))", span="28-30", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="FailedState.cs"];
m18_8 [label="Assert.Equal(''activator'', exception.ParamName)", span="32-32", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="FailedState.cs"];
m18_9 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", span="26-26", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="FailedState.cs"];
m18_190 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="224-224", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="FailedState.cs"];
m18_191 [label="_context.BackgroundJob.Job = Job.FromExpression(() => CancelableJob(JobCancellationToken.Null))", span="227-227", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="FailedState.cs"];
m18_192 [label="_context.CancellationToken.Setup(x => x.ThrowIfCancellationRequested()).Throws<OperationCanceledException>()", span="228-228", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="FailedState.cs"];
m18_193 [label="var performer = CreatePerformer()", span="229-229", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="FailedState.cs"];
m18_194 [label="Assert.Throws<OperationCanceledException>(\r\n                () => performer.Perform(_context.Object))", span="232-233", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="FailedState.cs"];
m18_195 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="224-224", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="FailedState.cs"];
m18_90 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="FailedState.cs"];
m18_77 [label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="FailedState.cs"];
m18_53 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", span="254-254", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", file="FailedState.cs"];
m18_219 [label="_methodInvoked = true", span="256-256", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", file="FailedState.cs"];
m18_220 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", span="254-254", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", file="FailedState.cs"];
m18_11 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="FailedState.cs"];
m18_101 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", span="294-294", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", file="FailedState.cs"];
m18_239 [label="_methodInvoked = true", span="296-296", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", file="FailedState.cs"];
m18_240 [label="Assert.Equal(SomeDateTime, argument)", span="298-298", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", file="FailedState.cs"];
m18_241 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", span="294-294", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", file="FailedState.cs"];
m18_157 [label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", span="144-144", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="FailedState.cs"];
m18_24 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", span="319-319", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", file="FailedState.cs"];
m18_251 [label="return new CoreBackgroundJobPerformer(_activator.Object);", span="321-321", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", file="FailedState.cs"];
m18_252 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", span="319-319", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", file="FailedState.cs"];
m18_0 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", span="19-19", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", file="FailedState.cs"];
m18_2 [label="_context = new PerformContextMock()", span="22-22", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", color=green, community=0, file="FailedState.cs"];
m18_1 [label="_activator = new Mock<JobActivator>() { CallBase = true }", span="21-21", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", file="FailedState.cs"];
m18_3 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", span="19-19", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", file="FailedState.cs"];
m18_38 [label="Entry Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", span="286-286", cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="FailedState.cs"];
m18_91 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", span="128-128", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="FailedState.cs"];
m18_93 [label="_context.BackgroundJob.Job = Job.FromExpression(() => MethodWithDateTimeArgument(SomeDateTime))", span="132-132", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="FailedState.cs"];
m18_94 [label="var performer = CreatePerformer()", span="133-133", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="FailedState.cs"];
m18_95 [label="performer.Perform(_context.Object)", span="136-136", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="FailedState.cs"];
m18_92 [label="_methodInvoked = false", span="131-131", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="FailedState.cs"];
m18_96 [label="Assert.True(_methodInvoked)", span="139-139", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="FailedState.cs"];
m18_97 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", span="128-128", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTimeArguments()", file="FailedState.cs"];
m18_78 [label="Entry System.Type.GetMethod(string)", span="0-0", cluster="System.Type.GetMethod(string)", file="FailedState.cs"];
m18_79 [label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="13-13", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="FailedState.cs"];
m18_207 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", span="237-237", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="FailedState.cs"];
m18_208 [label="_context.BackgroundJob.Job = Job.FromExpression<JobFacts.Instance>(x => x.FunctionReturningValue())", span="239-239", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="FailedState.cs"];
m18_209 [label="var performer = CreatePerformer()", span="240-240", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="FailedState.cs"];
m18_210 [label="var result = performer.Perform(_context.Object)", span="242-242", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="FailedState.cs"];
m18_211 [label="Assert.Equal(''Return value'', result)", span="244-244", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="FailedState.cs"];
m18_212 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", span="237-237", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="FailedState.cs"];
m18_120 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="FailedState.cs"];
m18_186 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", span="314-314", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", file="FailedState.cs"];
m18_248 [label="throw new InvalidOperationException(''exception'');", span="316-316", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", file="FailedState.cs"];
m18_249 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", span="314-314", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", file="FailedState.cs"];
m18_10 [label="Entry Unk.>", span="", cluster="Unk.>", file="FailedState.cs"];
m18_102 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", span="143-143", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="FailedState.cs"];
m18_104 [label="_context.BackgroundJob.Job = Job.FromExpression(() => NullArgumentMethod(null))", span="147-147", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="FailedState.cs"];
m18_105 [label="var performer = CreatePerformer()", span="149-149", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="FailedState.cs"];
m18_106 [label="performer.Perform(_context.Object)", span="151-151", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="FailedState.cs"];
m18_103 [label="_methodInvoked = false", span="146-146", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="FailedState.cs"];
m18_107 [label="Assert.True(_methodInvoked)", span="154-154", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="FailedState.cs"];
m18_108 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", span="143-143", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="FailedState.cs"];
m18_203 [label="Entry Unk.ThrowIfCancellationRequested", span="", cluster="Unk.ThrowIfCancellationRequested", file="FailedState.cs"];
m18_54 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", span="72-72", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="FailedState.cs"];
m18_56 [label="_context.BackgroundJob.Job = Job.FromExpression(() => MethodWithArguments(''hello'', 5))", span="76-76", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="FailedState.cs"];
m18_57 [label="var performer = CreatePerformer()", span="77-77", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="FailedState.cs"];
m18_58 [label="performer.Perform(_context.Object)", span="80-80", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="FailedState.cs"];
m18_55 [label="_methodInvoked = false", span="75-75", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="FailedState.cs"];
m18_59 [label="Assert.True(_methodInvoked)", span="83-83", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="FailedState.cs"];
m18_60 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", span="72-72", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="FailedState.cs"];
m18_15 [label="Entry Hangfire.Server.CoreBackgroundJobPerformer.CoreBackgroundJobPerformer(Hangfire.JobActivator)", span="35-35", cluster="Hangfire.Server.CoreBackgroundJobPerformer.CoreBackgroundJobPerformer(Hangfire.JobActivator)", file="FailedState.cs"];
m18_64 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", span="306-306", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="FailedState.cs"];
m18_244 [label="_methodInvoked = true", span="308-308", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="FailedState.cs"];
m18_245 [label="Assert.Equal(''hello'', stringArg)", span="310-310", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="FailedState.cs"];
m18_246 [label="Assert.Equal(5, intArg)", span="311-311", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="FailedState.cs"];
m18_247 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", span="306-306", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="FailedState.cs"];
m18_250 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="FailedState.cs"];
m18_65 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="87-87", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="FailedState.cs"];
m18_71 [label="_context.BackgroundJob.Job = new Job(type, method, new[] { convertedDate })", span="97-97", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="FailedState.cs"];
m18_72 [label="var performer = CreatePerformer()", span="98-98", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="FailedState.cs"];
m18_73 [label="performer.Perform(_context.Object)", span="101-101", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="FailedState.cs"];
m18_68 [label="var convertedDate = typeConverter.ConvertToInvariantString(SomeDateTime)", span="92-92", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="FailedState.cs"];
m18_69 [label="var type = typeof(CoreBackgroundJobPerformerFacts)", span="94-94", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="FailedState.cs"];
m18_70 [label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="95-95", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="FailedState.cs"];
m18_74 [label="Assert.True(_methodInvoked)", span="104-104", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="FailedState.cs"];
m18_67 [label="var typeConverter = TypeDescriptor.GetConverter(typeof(DateTime))", span="91-91", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="FailedState.cs"];
m18_66 [label="_methodInvoked = false", span="90-90", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="FailedState.cs"];
m18_75 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="87-87", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="FailedState.cs"];
m18_76 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="FailedState.cs"];
m18_25 [label="Entry Hangfire.Server.CoreBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", span="41-41", cluster="Hangfire.Server.CoreBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", file="FailedState.cs"];
m18_158 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="FailedState.cs"];
m18_162 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", span="198-198", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="FailedState.cs"];
m18_164 [label="_context.BackgroundJob.Job = Job.FromExpression<BrokenDispose>(x => x.Method())", span="201-201", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="FailedState.cs"];
m18_165 [label="var performer = CreatePerformer()", span="202-202", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="FailedState.cs"];
m18_166 [label="Assert.Throws<InvalidOperationException>(\r\n                () => performer.Perform(_context.Object))", span="204-205", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="FailedState.cs"];
m18_163 [label="_methodInvoked = false", span="200-200", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="FailedState.cs"];
m18_167 [label="Assert.True(_methodInvoked)", span="207-207", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="FailedState.cs"];
m18_168 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", span="198-198", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="FailedState.cs"];
m18_16 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", span="36-36", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", file="FailedState.cs"];
m18_17 [label="_methodInvoked = false", span="38-38", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", color=green, community=0, file="FailedState.cs"];
m18_18 [label="_context.BackgroundJob.Job = Job.FromExpression(() => StaticMethod())", span="39-39", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", color=green, community=0, file="FailedState.cs"];
m18_19 [label="var performer = CreatePerformer()", span="40-40", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", file="FailedState.cs"];
m18_20 [label="performer.Perform(_context.Object)", span="42-42", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", file="FailedState.cs"];
m18_21 [label="Assert.True(_methodInvoked)", span="44-44", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", file="FailedState.cs"];
m18_22 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", span="36-36", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeStaticMethods()", file="FailedState.cs"];
m18_121 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="FailedState.cs"];
m18_113 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", span="158-158", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="FailedState.cs"];
m18_115 [label="_activator.Setup(x => x.ActivateJob(It.IsAny<Type>())).Throws(exception)", span="162-162", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="FailedState.cs"];
m18_116 [label="_context.BackgroundJob.Job = Job.FromExpression(() => InstanceMethod())", span="164-164", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="FailedState.cs"];
m18_117 [label="var performer = CreatePerformer()", span="165-165", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="FailedState.cs"];
m18_118 [label="Assert.Throws<InvalidOperationException>(\r\n                () => performer.Perform(_context.Object))", span="168-169", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="FailedState.cs"];
m18_114 [label="var exception = new InvalidOperationException()", span="161-161", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="FailedState.cs"];
m18_119 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", span="158-158", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="FailedState.cs"];
m18_122 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="FailedState.cs"];
m18_235 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="FailedState.cs"];
m18_149 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", span="184-184", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="FailedState.cs"];
m18_152 [label="_context.BackgroundJob.Job = new Job(type, method, new object[] { ''sdfa'' })", span="188-188", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="FailedState.cs"];
m18_153 [label="var performer = CreatePerformer()", span="189-189", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="FailedState.cs"];
m18_154 [label="var exception = Assert.Throws<JobPerformanceException>(\r\n                () => performer.Perform(_context.Object))", span="191-192", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="FailedState.cs"];
m18_150 [label="var type = typeof(JobFacts)", span="186-186", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="FailedState.cs"];
m18_151 [label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="187-187", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="FailedState.cs"];
m18_155 [label="Assert.NotNull(exception.InnerException)", span="194-194", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="FailedState.cs"];
m18_156 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", span="184-184", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="FailedState.cs"];
m18_253 [label="Entry CoreBackgroundJobPerformer.cstr", span="", cluster="CoreBackgroundJobPerformer.cstr", file="FailedState.cs"];
m18_43 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", span="60-60", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="FailedState.cs"];
m18_45 [label="_context.BackgroundJob.Job = Job.FromExpression<Disposable>(x => x.Method())", span="63-63", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="FailedState.cs"];
m18_46 [label="var performer = CreatePerformer()", span="64-64", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="FailedState.cs"];
m18_47 [label="performer.Perform(_context.Object)", span="66-66", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="FailedState.cs"];
m18_44 [label="_disposed = false", span="62-62", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="FailedState.cs"];
m18_48 [label="Assert.True(_disposed)", span="68-68", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="FailedState.cs"];
m18_49 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", span="60-60", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="FailedState.cs"];
m18_133 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="173-173", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="FailedState.cs"];
m18_134 [label="_activator.Setup(x => x.ActivateJob(It.IsNotNull<Type>())).Returns(null)", span="175-175", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="FailedState.cs"];
m18_135 [label="_context.BackgroundJob.Job = Job.FromExpression(() => InstanceMethod())", span="176-176", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="FailedState.cs"];
m18_136 [label="var performer = CreatePerformer()", span="177-177", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="FailedState.cs"];
m18_137 [label="Assert.Throws<InvalidOperationException>(\r\n                () => performer.Perform(_context.Object))", span="179-180", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="FailedState.cs"];
m18_138 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="173-173", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="FailedState.cs"];
m18_12 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="FailedState.cs"];
m18_27 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="FailedState.cs"];
m18_28 [label="StaticMethod()", span="39-39", cluster="lambda expression", color=green, community=0, file="FailedState.cs"];
m18_29 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="FailedState.cs"];
m18_62 [label="MethodWithArguments(''hello'', 5)", span="76-76", cluster="lambda expression", file="FailedState.cs"];
m18_99 [label="MethodWithDateTimeArgument(SomeDateTime)", span="132-132", cluster="lambda expression", file="FailedState.cs"];
m18_128 [label="InstanceMethod()", span="164-164", cluster="lambda expression", file="FailedState.cs"];
m18_131 [label="performer.Perform(_context.Object)", span="169-169", cluster="lambda expression", file="FailedState.cs"];
m18_144 [label="InstanceMethod()", span="176-176", cluster="lambda expression", file="FailedState.cs"];
m18_147 [label="performer.Perform(_context.Object)", span="180-180", cluster="lambda expression", file="FailedState.cs"];
m18_160 [label="performer.Perform(_context.Object)", span="192-192", cluster="lambda expression", file="FailedState.cs"];
m18_174 [label="performer.Perform(_context.Object)", span="205-205", cluster="lambda expression", file="FailedState.cs"];
m18_188 [label="performer.Perform(_context.Object)", span="217-217", cluster="lambda expression", file="FailedState.cs"];
m18_205 [label="performer.Perform(_context.Object)", span="233-233", cluster="lambda expression", file="FailedState.cs"];
m18_39 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="FailedState.cs"];
m18_50 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="FailedState.cs"];
m18_61 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="FailedState.cs"];
m18_63 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="FailedState.cs"];
m18_98 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="FailedState.cs"];
m18_100 [label="Exit lambda expression", span="132-132", cluster="lambda expression", file="FailedState.cs"];
m18_109 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="FailedState.cs"];
m18_123 [label="Entry lambda expression", span="162-162", cluster="lambda expression", file="FailedState.cs"];
m18_127 [label="Entry lambda expression", span="164-164", cluster="lambda expression", file="FailedState.cs"];
m18_129 [label="Exit lambda expression", span="164-164", cluster="lambda expression", file="FailedState.cs"];
m18_130 [label="Entry lambda expression", span="169-169", cluster="lambda expression", file="FailedState.cs"];
m18_132 [label="Exit lambda expression", span="169-169", cluster="lambda expression", file="FailedState.cs"];
m18_140 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="FailedState.cs"];
m18_143 [label="Entry lambda expression", span="176-176", cluster="lambda expression", file="FailedState.cs"];
m18_145 [label="Exit lambda expression", span="176-176", cluster="lambda expression", file="FailedState.cs"];
m18_146 [label="Entry lambda expression", span="180-180", cluster="lambda expression", file="FailedState.cs"];
m18_148 [label="Exit lambda expression", span="180-180", cluster="lambda expression", file="FailedState.cs"];
m18_159 [label="Entry lambda expression", span="192-192", cluster="lambda expression", file="FailedState.cs"];
m18_161 [label="Exit lambda expression", span="192-192", cluster="lambda expression", file="FailedState.cs"];
m18_169 [label="Entry lambda expression", span="201-201", cluster="lambda expression", file="FailedState.cs"];
m18_173 [label="Entry lambda expression", span="205-205", cluster="lambda expression", file="FailedState.cs"];
m18_175 [label="Exit lambda expression", span="205-205", cluster="lambda expression", file="FailedState.cs"];
m18_183 [label="Entry lambda expression", span="213-213", cluster="lambda expression", file="FailedState.cs"];
m18_187 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="FailedState.cs"];
m18_189 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="FailedState.cs"];
m18_196 [label="Entry lambda expression", span="227-227", cluster="lambda expression", file="FailedState.cs"];
m18_200 [label="Entry lambda expression", span="228-228", cluster="lambda expression", file="FailedState.cs"];
m18_204 [label="Entry lambda expression", span="233-233", cluster="lambda expression", file="FailedState.cs"];
m18_206 [label="Exit lambda expression", span="233-233", cluster="lambda expression", file="FailedState.cs"];
m18_213 [label="Entry lambda expression", span="239-239", cluster="lambda expression", file="FailedState.cs"];
m18_41 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="FailedState.cs"];
m18_40 [label="x.InstanceMethod()", span="51-51", cluster="lambda expression", file="FailedState.cs"];
m18_52 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="FailedState.cs"];
m18_51 [label="x.Method()", span="63-63", cluster="lambda expression", file="FailedState.cs"];
m18_110 [label="NullArgumentMethod(null)", span="147-147", cluster="lambda expression", file="FailedState.cs"];
m18_111 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="FailedState.cs"];
m18_125 [label="Exit lambda expression", span="162-162", cluster="lambda expression", file="FailedState.cs"];
m18_124 [label="x.ActivateJob(It.IsAny<Type>())", span="162-162", cluster="lambda expression", file="FailedState.cs"];
m18_141 [label="x.ActivateJob(It.IsNotNull<Type>())", span="175-175", cluster="lambda expression", file="FailedState.cs"];
m18_142 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="FailedState.cs"];
m18_171 [label="Exit lambda expression", span="201-201", cluster="lambda expression", file="FailedState.cs"];
m18_170 [label="x.Method()", span="201-201", cluster="lambda expression", file="FailedState.cs"];
m18_185 [label="Exit lambda expression", span="213-213", cluster="lambda expression", file="FailedState.cs"];
m18_184 [label="ExceptionMethod()", span="213-213", cluster="lambda expression", file="FailedState.cs"];
m18_198 [label="Exit lambda expression", span="227-227", cluster="lambda expression", file="FailedState.cs"];
m18_197 [label="CancelableJob(JobCancellationToken.Null)", span="227-227", cluster="lambda expression", file="FailedState.cs"];
m18_202 [label="Exit lambda expression", span="228-228", cluster="lambda expression", file="FailedState.cs"];
m18_201 [label="x.ThrowIfCancellationRequested()", span="228-228", cluster="lambda expression", file="FailedState.cs"];
m18_215 [label="Exit lambda expression", span="239-239", cluster="lambda expression", file="FailedState.cs"];
m18_214 [label="x.FunctionReturningValue()", span="239-239", cluster="lambda expression", file="FailedState.cs"];
m18_13 [label="new CoreBackgroundJobPerformer(null)", span="30-30", cluster="lambda expression", file="FailedState.cs"];
m18_14 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="FailedState.cs"];
m18_216 [label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", span="571-571", cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", file="FailedState.cs"];
m18_126 [label="Entry Unk.ActivateJob", span="", cluster="Unk.ActivateJob", file="FailedState.cs"];
m18_80 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="108-108", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="FailedState.cs"];
m18_85 [label="_context.BackgroundJob.Job = new Job(type, method, new[] { convertedDate })", span="117-117", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="FailedState.cs"];
m18_86 [label="var performer = CreatePerformer()", span="118-118", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="FailedState.cs"];
m18_87 [label="performer.Perform(_context.Object)", span="121-121", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="FailedState.cs"];
m18_82 [label="var convertedDate = SomeDateTime.ToString(''MM/dd/yyyy HH:mm:ss.ffff'')", span="112-112", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="FailedState.cs"];
m18_83 [label="var type = typeof(CoreBackgroundJobPerformerFacts)", span="114-114", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="FailedState.cs"];
m18_84 [label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="115-115", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="FailedState.cs"];
m18_88 [label="Assert.True(_methodInvoked)", span="124-124", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="FailedState.cs"];
m18_81 [label="_methodInvoked = false", span="111-111", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="FailedState.cs"];
m18_89 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="108-108", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="FailedState.cs"];
m18_4 [label="Entry Mock<JobActivator>.cstr", span="", cluster="Mock<JobActivator>.cstr", file="FailedState.cs"];
m18_172 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", span="267-267", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", file="FailedState.cs"];
m18_224 [label="_methodInvoked = true", span="269-269", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", file="FailedState.cs"];
m18_225 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", span="267-267", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", file="FailedState.cs"];
m18_238 [label="Entry Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", span="24-24", cluster="Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", file="FailedState.cs"];
m18_31 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", span="48-48", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="FailedState.cs"];
m18_33 [label="_context.BackgroundJob.Job = Job.FromExpression<CoreBackgroundJobPerformerFacts>(x => x.InstanceMethod())", span="51-51", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="FailedState.cs"];
m18_34 [label="var performer = CreatePerformer()", span="52-52", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="FailedState.cs"];
m18_35 [label="performer.Perform(_context.Object)", span="54-54", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="FailedState.cs"];
m18_32 [label="_methodInvoked = false", span="50-50", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="FailedState.cs"];
m18_36 [label="Assert.True(_methodInvoked)", span="56-56", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="FailedState.cs"];
m18_37 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", span="48-48", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="FailedState.cs"];
m18_26 [label="Entry Unk.True", span="", cluster="Unk.True", file="FailedState.cs"];
m18_176 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", span="211-211", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="FailedState.cs"];
m18_177 [label="_context.BackgroundJob.Job = Job.FromExpression(() => ExceptionMethod())", span="213-213", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="FailedState.cs"];
m18_178 [label="var performer = CreatePerformer()", span="214-214", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="FailedState.cs"];
m18_179 [label="var thrownException = Assert.Throws<JobPerformanceException>(\r\n                () => performer.Perform(_context.Object))", span="216-217", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="FailedState.cs"];
m18_180 [label="Assert.IsType<InvalidOperationException>(thrownException.InnerException)", span="219-219", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="FailedState.cs"];
m18_181 [label="Assert.Equal(''exception'', thrownException.InnerException.Message)", span="220-220", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="FailedState.cs"];
m18_182 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", span="211-211", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="FailedState.cs"];
m18_30 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", span="301-301", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", file="FailedState.cs"];
m18_242 [label="_methodInvoked = true", span="303-303", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", file="FailedState.cs"];
m18_243 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", span="301-301", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", file="FailedState.cs"];
m18_139 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="FailedState.cs"];
m18_112 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", span="283-283", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", file="FailedState.cs"];
m18_232 [label="_methodInvoked = true", span="285-285", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", file="FailedState.cs"];
m18_233 [label="Assert.Null(argument)", span="286-286", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", file="FailedState.cs"];
m18_234 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", span="283-283", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", file="FailedState.cs"];
m18_199 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="289-289", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="FailedState.cs"];
m18_236 [label="token.ThrowIfCancellationRequested()", span="291-291", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="FailedState.cs"];
m18_237 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="289-289", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="FailedState.cs"];
m18_5 [label="Entry Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", span="12-12", cluster="Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", file="FailedState.cs"];
m18_226 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", span="272-272", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", file="FailedState.cs"];
m18_227 [label="throw new InvalidOperationException();", span="274-274", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", file="FailedState.cs"];
m18_228 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", span="272-272", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", file="FailedState.cs"];
m18_42 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", span="247-247", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", file="FailedState.cs"];
m18_217 [label="_methodInvoked = true", span="249-249", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", file="FailedState.cs"];
m18_218 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", span="247-247", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", file="FailedState.cs"];
m18_23 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="232-232", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="FailedState.cs"];
m18_254 [label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", span="", file="FailedState.cs"];
m18_255 [label=performer, span="", file="FailedState.cs"];
m18_256 [label=performer, span="", file="FailedState.cs"];
m18_257 [label=performer, span="", file="FailedState.cs"];
m18_258 [label=performer, span="", file="FailedState.cs"];
m18_259 [label=performer, span="", file="FailedState.cs"];
m18_260 [label=performer, span="", file="FailedState.cs"];
m19_36 [label="state == null", span="103-103", cluster="HangFire.BackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="FailedStateFacts.cs"];
m19_4 [label="Entry Unk.GetSortedSetCount", span="", cluster="Unk.GetSortedSetCount", file="FailedStateFacts.cs"];
m19_5 [label="Entry HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="FailedStateFacts.cs"];
m19_291 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="FailedStateFacts.cs"];
m19_30 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", span="46-46", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="FailedStateFacts.cs"];
m19_133 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="FailedStateFacts.cs"];
m19_43 [label="Entry HangFire.BackgroundJobClient.Dispose()", span="113-113", cluster="HangFire.BackgroundJobClient.Dispose()", file="FailedStateFacts.cs"];
m19_53 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' }),\r\n                            x => jobs.Add(job.Key, x))", span="103-107", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="FailedStateFacts.cs"];
m19_54 [label="pipeline.QueueCommand(\r\n                            x => x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State''),\r\n                            x => states.Add(job.Key, x))", span="109-113", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="FailedStateFacts.cs"];
m19_50 [label="var pipeline = Redis.CreatePipeline()", span="97-97", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="FailedStateFacts.cs"];
m19_48 [label="var jobs = new Dictionary<string, List<string>>()", span="94-94", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="FailedStateFacts.cs"];
m19_52 [label="var job = scheduledJob", span="101-101", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="FailedStateFacts.cs"];
m19_49 [label="var states = new Dictionary<string, string>()", span="95-95", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="FailedStateFacts.cs"];
m19_51 [label=scheduledJobs, span="99-99", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="FailedStateFacts.cs"];
m19_55 [label="pipeline.Flush()", span="116-116", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="FailedStateFacts.cs"];
m19_46 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="FailedStateFacts.cs"];
m19_56 [label="return scheduledJobs.ToDictionary(\r\n                    job => job.Key,\r\n                    job => new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="119-129", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="FailedStateFacts.cs"];
m19_45 [label="Exit HangFire.BackgroundJobClient.Dispose()", span="113-113", cluster="HangFire.BackgroundJobClient.Dispose()", file="FailedStateFacts.cs"];
m19_47 [label="HangFire.BackgroundJobClient", span="", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="FailedStateFacts.cs"];
m19_44 [label="_connection.Dispose()", span="115-115", cluster="HangFire.BackgroundJobClient.Dispose()", file="FailedStateFacts.cs"];
m19_57 [label="Exit HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="FailedStateFacts.cs"];
m19_38 [label="var stateMachine = _stateMachineFactory.Create(_connection)", span="105-105", cluster="HangFire.BackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="FailedStateFacts.cs"];
m19_214 [label="Entry HangFire.Web.DequeuedJobDto.DequeuedJobDto()", span="5-5", cluster="HangFire.Web.DequeuedJobDto.DequeuedJobDto()", file="FailedStateFacts.cs"];
m19_386 [label="Entry HangFire.Web.StatisticsDto.StatisticsDto()", span="2-2", cluster="HangFire.Web.StatisticsDto.StatisticsDto()", file="FailedStateFacts.cs"];
m19_29 [label="Exit HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="81-81", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="FailedStateFacts.cs"];
m19_359 [label="Entry KeyValuePair<string, T>.cstr", span="", cluster="KeyValuePair<string, T>.cstr", file="FailedStateFacts.cs"];
m19_31 [label="Entry HangFire.Client.IJobCreationProcess.Run(HangFire.Client.CreateContext)", span="28-28", cluster="HangFire.Client.IJobCreationProcess.Run(HangFire.Client.CreateContext)", file="FailedStateFacts.cs"];
m19_33 [label="new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }", span="66-76", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_34 [label="Exit lambda expression", span="66-76", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_39 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="FailedStateFacts.cs"];
m19_35 [label="Entry HangFire.Web.ProcessingJobDto.ProcessingJobDto()", span="5-5", cluster="HangFire.Web.ProcessingJobDto.ProcessingJobDto()", file="FailedStateFacts.cs"];
m19_37 [label="Entry HangFire.JobHelper.TryToGetQueue(string)", span="9-9", cluster="HangFire.JobHelper.TryToGetQueue(string)", file="FailedStateFacts.cs"];
m19_40 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_197 [label="Entry HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", span="5-5", cluster="HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", file="FailedStateFacts.cs"];
m19_60 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="FailedStateFacts.cs"];
m19_76 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="FailedStateFacts.cs"];
m19_23 [label="throw new ArgumentNullException(''state'');", span="84-84", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="FailedStateFacts.cs"];
m19_26 [label="return context.JobId;", span="91-91", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="FailedStateFacts.cs"];
m19_25 [label="_process.Run(context)", span="89-89", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="FailedStateFacts.cs"];
m19_24 [label="var context = new CreateContext(_connection, _stateMachineFactory, job, state)", span="88-88", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="FailedStateFacts.cs"];
m19_27 [label=Exception, span="93-93", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="FailedStateFacts.cs"];
m19_134 [label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="60-60", cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="FailedStateFacts.cs"];
m19_257 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="FailedStateFacts.cs"];
m19_17 [label="return Redis.GetSortedSetCount(''hangfire:failed'');", span="40-40", cluster="HangFire.Web.JobStorage.FailedCount()", file="FailedStateFacts.cs", color=green, community=0];
m19_173 [label="Entry HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="502-502", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="FailedStateFacts.cs"];
m19_331 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="520-522", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="FailedStateFacts.cs"];
m19_333 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="526-528", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="FailedStateFacts.cs"];
m19_328 [label="var pipeline = redis.CreatePipeline()", span="514-514", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="FailedStateFacts.cs"];
m19_326 [label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="511-511", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="FailedStateFacts.cs"];
m19_330 [label="var id = jobId", span="518-518", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="FailedStateFacts.cs"];
m19_332 [label="stateProperties != null", span="524-524", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="FailedStateFacts.cs"];
m19_327 [label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="512-512", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="FailedStateFacts.cs"];
m19_329 [label=jobIds, span="516-516", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="FailedStateFacts.cs"];
m19_334 [label="pipeline.Flush()", span="532-532", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="FailedStateFacts.cs"];
m19_324 [label="jobIds.Count == 0", span="509-509", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="FailedStateFacts.cs"];
m19_335 [label="return jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State)))\r\n                .ToList();", span="535-545", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="FailedStateFacts.cs"];
m19_325 [label="return new List<KeyValuePair<string, T>>();", span="509-509", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="FailedStateFacts.cs"];
m19_336 [label="Exit HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="502-502", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="FailedStateFacts.cs"];
m19_361 [label="Entry Unk.selector", span="", cluster="Unk.selector", file="FailedStateFacts.cs"];
m19_0 [label="Entry HangFire.Web.JobStorage.ScheduledCount()", span="12-12", cluster="HangFire.Web.JobStorage.ScheduledCount()", file="FailedStateFacts.cs"];
m19_1 [label=Redis, span="14-14", cluster="HangFire.Web.JobStorage.ScheduledCount()", file="FailedStateFacts.cs"];
m19_345 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="FailedStateFacts.cs"];
m19_11 [label="process == null", span="73-73", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="FailedStateFacts.cs"];
m19_13 [label="_connection = storage.GetConnection()", span="75-75", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="FailedStateFacts.cs"];
m19_12 [label="throw new ArgumentNullException(''process'');", span="73-73", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="FailedStateFacts.cs"];
m19_14 [label="_stateMachineFactory = stateMachineFactory", span="76-76", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="FailedStateFacts.cs"];
m19_219 [label="Entry HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="441-441", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_278 [label="var result = new Dictionary<DateTime, long>()", span="455-455", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_273 [label="dates.Add(endDate)", span="448-448", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_277 [label="var valuesMap = redis.GetValuesMap(keys)", span="453-453", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_279 [label="var i = 0", span="456-456", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_284 [label="result.Add(dates[i], value)", span="464-464", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_286 [label="return result;", span="467-467", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_276 [label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="452-452", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_269 [label="var endDate = DateTime.UtcNow", span="444-444", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_270 [label="var dates = new List<DateTime>()", span="445-445", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_272 [label="i < 24", span="446-446", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_274 [label="endDate = endDate.AddHours(-1)", span="449-449", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_282 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="459-459", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_280 [label="i < dates.Count", span="456-456", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_285 [label="i++", span="456-456", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_283 [label="value = 0", span="461-461", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_271 [label="var i = 0", span="446-446", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_275 [label="i++", span="446-446", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_281 [label="long value", span="458-458", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_287 [label="Exit HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="441-441", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_232 [label="Entry Unk.TryToGetQueue", span="", cluster="Unk.TryToGetQueue", file="FailedStateFacts.cs"];
m19_42 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_58 [label="Entry Unk.GetRangeWithScoresFromSortedSet", span="", cluster="Unk.GetRangeWithScoresFromSortedSet", file="FailedStateFacts.cs"];
m19_132 [label="Entry HangFire.Web.ServerDto.ServerDto()", span="5-5", cluster="HangFire.Web.ServerDto.ServerDto()", file="FailedStateFacts.cs"];
m19_234 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="FailedStateFacts.cs"];
m19_258 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="FailedStateFacts.cs"];
m19_236 [label="Entry HangFire.Web.JobStorage.EnqueueScheduled(string)", span="394-394", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="FailedStateFacts.cs"];
m19_238 [label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="398-398", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="FailedStateFacts.cs"];
m19_237 [label=Redis, span="396-396", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="FailedStateFacts.cs"];
m19_239 [label="var queue = JobHelper.TryToGetQueue(jobType)", span="399-399", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="FailedStateFacts.cs"];
m19_242 [label="return JobState.Apply(\r\n                    Redis,\r\n                    jobId,\r\n                    new EnqueuedState(''The job has been enqueued by a user.'', queue),\r\n                    ScheduledState.Name);", span="406-410", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="FailedStateFacts.cs"];
m19_240 [label="String.IsNullOrEmpty(queue)", span="401-401", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="FailedStateFacts.cs"];
m19_241 [label="return false;", span="403-403", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="FailedStateFacts.cs"];
m19_243 [label="Exit HangFire.Web.JobStorage.EnqueueScheduled(string)", span="394-394", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="FailedStateFacts.cs"];
m19_174 [label="Entry HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4", cluster="HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="FailedStateFacts.cs"];
m19_317 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="FailedStateFacts.cs"];
m19_41 [label="x.Value.StartedAt", span="76-76", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_360 [label="Entry Unk.TrueForAll", span="", cluster="Unk.TrueForAll", file="FailedStateFacts.cs"];
m19_401 [label="x.GetSortedSetCount(''hangfire:schedule'')", span="575-575", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_407 [label="x.GetSortedSetCount(''hangfire:processing'')", span="579-579", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_421 [label="x.GetSortedSetCount(''hangfire:failed'')", span="587-587", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_400 [label="Entry lambda expression", span="575-575", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_402 [label="Exit lambda expression", span="575-575", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_406 [label="Entry lambda expression", span="579-579", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_408 [label="Exit lambda expression", span="579-579", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_420 [label="Entry lambda expression", span="587-587", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_422 [label="Exit lambda expression", span="587-587", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_403 [label="Entry lambda expression", span="576-576", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_409 [label="Entry lambda expression", span="580-580", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_423 [label="Entry lambda expression", span="588-588", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_392 [label="stats.Servers = x", span="568-568", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_398 [label="stats.Queues = x", span="572-572", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_404 [label="stats.Scheduled = x", span="576-576", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_410 [label="stats.Processing = x", span="580-580", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_417 [label="stats.Succeeded = long.Parse(x ?? ''0'')", span="584-584", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_424 [label="stats.Failed = x", span="588-588", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_430 [label="stats.Enqueued += x", span="595-595", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_394 [label="Entry lambda expression", span="571-571", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_397 [label="Entry lambda expression", span="572-572", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_405 [label="Exit lambda expression", span="576-576", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_412 [label="Entry lambda expression", span="583-583", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_416 [label="Entry lambda expression", span="584-584", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_411 [label="Exit lambda expression", span="580-580", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_425 [label="Exit lambda expression", span="588-588", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_387 [label="Entry lambda expression", span="567-567", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_391 [label="Entry lambda expression", span="568-568", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_393 [label="Exit lambda expression", span="568-568", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_399 [label="Exit lambda expression", span="572-572", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_418 [label="Exit lambda expression", span="584-584", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_426 [label="Entry lambda expression", span="594-594", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_429 [label="Entry lambda expression", span="595-595", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_431 [label="Exit lambda expression", span="595-595", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_396 [label="Exit lambda expression", span="571-571", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_395 [label="x.GetSetCount(''hangfire:queues'')", span="571-571", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_64 [label="Entry lambda expression", span="104-106", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_69 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_73 [label="Entry lambda expression", span="110-112", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_77 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_116 [label="Entry lambda expression", span="170-172", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_119 [label="Entry lambda expression", span="173-173", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_122 [label="Entry lambda expression", span="176-177", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_126 [label="Entry lambda expression", span="178-178", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_176 [label="Entry lambda expression", span="264-265", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_179 [label="Entry lambda expression", span="266-266", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_182 [label="Entry lambda expression", span="269-269", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_185 [label="Entry lambda expression", span="270-270", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_188 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_191 [label="Entry lambda expression", span="274-274", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_338 [label="Entry lambda expression", span="521-521", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_341 [label="Entry lambda expression", span="522-522", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_346 [label="Entry lambda expression", span="527-527", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_349 [label="Entry lambda expression", span="528-528", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_414 [label="Exit lambda expression", span="583-583", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_413 [label="x.GetValue(''hangfire:stats:succeeded'')", span="583-583", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_427 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="594-594", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_389 [label="Exit lambda expression", span="567-567", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_388 [label="x.GetSetCount(''hangfire:servers'')", span="567-567", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_428 [label="Exit lambda expression", span="594-594", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_70 [label="jobs.Add(job.Key, x)", span="107-107", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_84 [label="new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="121-129", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_65 [label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' })", span="104-106", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_74 [label="x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State'')", span="110-112", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_78 [label="states.Add(job.Key, x)", span="113-113", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_66 [label="Exit lambda expression", span="104-106", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_71 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_75 [label="Exit lambda expression", span="110-112", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_79 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_120 [label="servers.Add(name, x)", span="173-173", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_130 [label="new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }", span="184-191", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_117 [label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="170-172", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_123 [label="x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name))", span="176-177", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_127 [label="queues.Add(name, x)", span="178-178", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_118 [label="Exit lambda expression", span="170-172", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_121 [label="Exit lambda expression", span="173-173", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_124 [label="Exit lambda expression", span="176-177", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_128 [label="Exit lambda expression", span="178-178", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_177 [label="x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="264-265", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_183 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="269-269", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_189 [label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="273-273", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_178 [label="Exit lambda expression", span="264-265", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_181 [label="Exit lambda expression", span="266-266", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_180 [label="firstJobIds = x", span="266-266", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_194 [label="Entry lambda expression", span="284-290", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_184 [label="Exit lambda expression", span="269-269", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_187 [label="Exit lambda expression", span="270-270", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_186 [label="length = x", span="270-270", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_190 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_193 [label="Exit lambda expression", span="274-274", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_192 [label="dequeued = x", span="274-274", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_339 [label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties)", span="521-521", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_347 [label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="527-527", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_357 [label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State))", span="542-544", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_342 [label="!jobs.ContainsKey(id)", span="522-522", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_343 [label="jobs.Add(id, x)", span="522-522", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_354 [label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="536-541", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_350 [label="!states.ContainsKey(id)", span="528-528", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_351 [label="states.Add(id, x)", span="528-528", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_340 [label="Exit lambda expression", span="521-521", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_344 [label="Exit lambda expression", span="522-522", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_348 [label="Exit lambda expression", span="527-527", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_352 [label="Exit lambda expression", span="528-528", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_80 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_83 [label="Entry lambda expression", span="121-129", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_85 [label="Exit lambda expression", span="121-129", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_129 [label="Entry lambda expression", span="184-191", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_131 [label="Exit lambda expression", span="184-191", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_196 [label="Exit lambda expression", span="284-290", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_195 [label="new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        }", span="284-290", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_353 [label="Entry lambda expression", span="536-541", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_356 [label="Entry lambda expression", span="542-544", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_358 [label="Exit lambda expression", span="542-544", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_362 [label="Entry lambda expression", span="544-544", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_355 [label="Exit lambda expression", span="536-541", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_322 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="484-484", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_82 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_81 [label="job.Key", span="120-120", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_142 [label="new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="209-219", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_152 [label="new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="237-244", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_204 [label="new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="320-326", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_212 [label="new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    }", span="344-352", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_364 [label="Exit lambda expression", span="544-544", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_363 [label="y == null", span="544-544", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_321 [label="Entry lambda expression", span="484-484", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_323 [label="Exit lambda expression", span="484-484", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_259 [label="Entry lambda expression", span="435-435", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_263 [label="Entry lambda expression", span="435-435", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_266 [label="Entry lambda expression", span="435-435", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_32 [label="Entry HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="34-34", cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="FailedStateFacts.cs"];
m19_141 [label="Entry lambda expression", span="209-219", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_143 [label="Exit lambda expression", span="209-219", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_151 [label="Entry lambda expression", span="237-244", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_153 [label="Exit lambda expression", span="237-244", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_203 [label="Entry lambda expression", span="320-326", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_205 [label="Exit lambda expression", span="320-326", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_211 [label="Entry lambda expression", span="344-352", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_213 [label="Exit lambda expression", span="344-352", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_293 [label="Entry lambda expression", span="452-452", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_318 [label="Entry lambda expression", span="483-483", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_294 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="452-452", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_260 [label="!hiddenProperties.Contains(x.Key)", span="435-435", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_261 [label="Exit lambda expression", span="435-435", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_265 [label="Exit lambda expression", span="435-435", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_264 [label="x.Key", span="435-435", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_268 [label="Exit lambda expression", span="435-435", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_267 [label="x.Value", span="435-435", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_295 [label="Exit lambda expression", span="452-452", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_320 [label="Exit lambda expression", span="483-483", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_319 [label="x.ToString(''yyyy-MM-dd'')", span="483-483", cluster="lambda expression", file="FailedStateFacts.cs"];
m19_28 [label="throw new CreateJobFailedException(''Job creation process has bee failed. See inner exception for details'', ex);", span="95-95", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="FailedStateFacts.cs"];
m19_175 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="FailedStateFacts.cs"];
m19_115 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="FailedStateFacts.cs"];
m19_67 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="FailedStateFacts.cs"];
m19_220 [label="Entry HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="FailedStateFacts.cs"];
m19_222 [label="return GetHourlyTimelineStats(Redis, ''failed'');", span="368-368", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="FailedStateFacts.cs"];
m19_221 [label=Redis, span="366-366", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="FailedStateFacts.cs"];
m19_223 [label="Exit HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="FailedStateFacts.cs"];
m19_61 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="FailedStateFacts.cs"];
m19_135 [label="Entry HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="FailedStateFacts.cs"];
m19_138 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    failedJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'' },\r\n                    (job, state) => new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="204-219", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="FailedStateFacts.cs"];
m19_137 [label="var failedJobIds = Redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1)", span="199-202", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="FailedStateFacts.cs"];
m19_136 [label=Redis, span="197-197", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="FailedStateFacts.cs"];
m19_139 [label="Exit HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="FailedStateFacts.cs"];
m19_2 [label="Entry HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", span="49-49", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", file="FailedStateFacts.cs"];
m19_3 [label="Exit HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", span="49-49", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", file="FailedStateFacts.cs"];
m19_144 [label="Entry HangFire.Web.FailedJobDto.FailedJobDto()", span="5-5", cluster="HangFire.Web.FailedJobDto.FailedJobDto()", file="FailedStateFacts.cs"];
m19_87 [label="Entry HangFire.JobHelper.FromTimestamp(long)", span="50-50", cluster="HangFire.JobHelper.FromTimestamp(long)", file="FailedStateFacts.cs"];
m19_296 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="FailedStateFacts.cs"];
m19_145 [label="Entry HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="FailedStateFacts.cs"];
m19_147 [label="var succeededJobIds = Redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1)", span="227-230", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="FailedStateFacts.cs"];
m19_146 [label=Redis, span="225-225", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="FailedStateFacts.cs"];
m19_148 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    succeededJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''SucceededAt'', ''State'' },\r\n                    (job, state) => new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="232-244", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="FailedStateFacts.cs"];
m19_149 [label="Exit HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="FailedStateFacts.cs"];
m19_172 [label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span="", cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="FailedStateFacts.cs"];
m19_290 [label="Entry Unk.ElementAt", span="", cluster="Unk.ElementAt", file="FailedStateFacts.cs"];
m19_150 [label="Entry Unk.GetRangeFromList", span="", cluster="Unk.GetRangeFromList", file="FailedStateFacts.cs"];
m19_155 [label="Entry HangFire.Web.JobStorage.Queues()", span="248-248", cluster="HangFire.Web.JobStorage.Queues()", file="FailedStateFacts.cs"];
m19_164 [label="pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x)", span="263-266", cluster="HangFire.Web.JobStorage.Queues()", file="FailedStateFacts.cs"];
m19_165 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x)", span="268-270", cluster="HangFire.Web.JobStorage.Queues()", file="FailedStateFacts.cs"];
m19_166 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => dequeued = x)", span="272-274", cluster="HangFire.Web.JobStorage.Queues()", file="FailedStateFacts.cs"];
m19_163 [label="var pipeline = Redis.CreatePipeline()", span="261-261", cluster="HangFire.Web.JobStorage.Queues()", file="FailedStateFacts.cs"];
m19_159 [label=queues, span="255-255", cluster="HangFire.Web.JobStorage.Queues()", file="FailedStateFacts.cs"];
m19_168 [label="var jobs = GetJobsWithProperties(\r\n                        Redis,\r\n                        firstJobIds,\r\n                        new[] { ''Type'', ''Args'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, state) => new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="279-290", cluster="HangFire.Web.JobStorage.Queues()", file="FailedStateFacts.cs"];
m19_169 [label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Dequeued = dequeued\r\n                    })", span="292-298", cluster="HangFire.Web.JobStorage.Queues()", file="FailedStateFacts.cs"];
m19_167 [label="pipeline.Flush()", span="276-276", cluster="HangFire.Web.JobStorage.Queues()", file="FailedStateFacts.cs"];
m19_157 [label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="252-252", cluster="HangFire.Web.JobStorage.Queues()", file="FailedStateFacts.cs"];
m19_162 [label="long dequeued = 0", span="259-259", cluster="HangFire.Web.JobStorage.Queues()", file="FailedStateFacts.cs"];
m19_158 [label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="253-253", cluster="HangFire.Web.JobStorage.Queues()", file="FailedStateFacts.cs"];
m19_160 [label="IList<string> firstJobIds = null", span="257-257", cluster="HangFire.Web.JobStorage.Queues()", file="FailedStateFacts.cs"];
m19_170 [label="return result;", span="301-301", cluster="HangFire.Web.JobStorage.Queues()", file="FailedStateFacts.cs"];
m19_156 [label=Redis, span="250-250", cluster="HangFire.Web.JobStorage.Queues()", file="FailedStateFacts.cs"];
m19_161 [label="long length = 0", span="258-258", cluster="HangFire.Web.JobStorage.Queues()", file="FailedStateFacts.cs"];
m19_171 [label="Exit HangFire.Web.JobStorage.Queues()", span="248-248", cluster="HangFire.Web.JobStorage.Queues()", file="FailedStateFacts.cs"];
m19_88 [label="Entry HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="FailedStateFacts.cs"];
m19_90 [label="return GetTimelineStats(Redis, ''succeeded'');", span="137-137", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="FailedStateFacts.cs"];
m19_89 [label=Redis, span="135-135", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="FailedStateFacts.cs"];
m19_91 [label="Exit HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="FailedStateFacts.cs"];
m19_154 [label="Entry HangFire.Web.SucceededJobDto.SucceededJobDto()", span="5-5", cluster="HangFire.Web.SucceededJobDto.SucceededJobDto()", file="FailedStateFacts.cs"];
m19_419 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="FailedStateFacts.cs"];
m19_62 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="FailedStateFacts.cs"];
m19_72 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="FailedStateFacts.cs"];
m19_369 [label="Entry HangFire.Web.JobStorage.GetStatistics()", span="556-556", cluster="HangFire.Web.JobStorage.GetStatistics()", file="FailedStateFacts.cs"];
m19_376 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x)", span="574-576", cluster="HangFire.Web.JobStorage.GetStatistics()", file="FailedStateFacts.cs"];
m19_377 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x)", span="578-580", cluster="HangFire.Web.JobStorage.GetStatistics()", file="FailedStateFacts.cs"];
m19_379 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x)", span="586-588", cluster="HangFire.Web.JobStorage.GetStatistics()", file="FailedStateFacts.cs"];
m19_371 [label="var stats = new StatisticsDto()", span="560-560", cluster="HangFire.Web.JobStorage.GetStatistics()", file="FailedStateFacts.cs"];
m19_375 [label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x)", span="570-572", cluster="HangFire.Web.JobStorage.GetStatistics()", file="FailedStateFacts.cs"];
m19_373 [label="var pipeline = Redis.CreatePipeline()", span="564-564", cluster="HangFire.Web.JobStorage.GetStatistics()", file="FailedStateFacts.cs"];
m19_378 [label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''))", span="582-584", cluster="HangFire.Web.JobStorage.GetStatistics()", file="FailedStateFacts.cs"];
m19_380 [label=queues, span="590-590", cluster="HangFire.Web.JobStorage.GetStatistics()", file="FailedStateFacts.cs"];
m19_370 [label=Redis, span="558-558", cluster="HangFire.Web.JobStorage.GetStatistics()", file="FailedStateFacts.cs"];
m19_372 [label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="562-562", cluster="HangFire.Web.JobStorage.GetStatistics()", file="FailedStateFacts.cs"];
m19_374 [label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x)", span="566-568", cluster="HangFire.Web.JobStorage.GetStatistics()", file="FailedStateFacts.cs"];
m19_382 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", span="593-595", cluster="HangFire.Web.JobStorage.GetStatistics()", file="FailedStateFacts.cs"];
m19_384 [label="return stats;", span="601-601", cluster="HangFire.Web.JobStorage.GetStatistics()", file="FailedStateFacts.cs"];
m19_383 [label="pipeline.Flush()", span="598-598", cluster="HangFire.Web.JobStorage.GetStatistics()", file="FailedStateFacts.cs"];
m19_381 [label="var queueName = queue", span="592-592", cluster="HangFire.Web.JobStorage.GetStatistics()", file="FailedStateFacts.cs"];
m19_385 [label="Exit HangFire.Web.JobStorage.GetStatistics()", span="556-556", cluster="HangFire.Web.JobStorage.GetStatistics()", file="FailedStateFacts.cs"];
m19_97 [label="Entry HangFire.Web.JobStorage.Servers()", span="149-149", cluster="HangFire.Web.JobStorage.Servers()", file="FailedStateFacts.cs"];
m19_107 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x))", span="169-173", cluster="HangFire.Web.JobStorage.Servers()", file="FailedStateFacts.cs"];
m19_108 [label="pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x))", span="175-178", cluster="HangFire.Web.JobStorage.Servers()", file="FailedStateFacts.cs"];
m19_104 [label="var pipeline = Redis.CreatePipeline()", span="163-163", cluster="HangFire.Web.JobStorage.Servers()", file="FailedStateFacts.cs"];
m19_102 [label="var servers = new Dictionary<string, List<string>>()", span="160-160", cluster="HangFire.Web.JobStorage.Servers()", file="FailedStateFacts.cs"];
m19_106 [label="var name = serverName", span="167-167", cluster="HangFire.Web.JobStorage.Servers()", file="FailedStateFacts.cs"];
m19_103 [label="var queues = new Dictionary<string, List<string>>()", span="161-161", cluster="HangFire.Web.JobStorage.Servers()", file="FailedStateFacts.cs"];
m19_105 [label=serverNames, span="165-165", cluster="HangFire.Web.JobStorage.Servers()", file="FailedStateFacts.cs"];
m19_99 [label="var serverNames = Redis.GetAllItemsFromSet(''hangfire:servers'')", span="153-153", cluster="HangFire.Web.JobStorage.Servers()", file="FailedStateFacts.cs"];
m19_109 [label="pipeline.Flush()", span="181-181", cluster="HangFire.Web.JobStorage.Servers()", file="FailedStateFacts.cs"];
m19_100 [label="serverNames.Count == 0", span="155-155", cluster="HangFire.Web.JobStorage.Servers()", file="FailedStateFacts.cs"];
m19_110 [label="return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }).ToList();", span="184-191", cluster="HangFire.Web.JobStorage.Servers()", file="FailedStateFacts.cs"];
m19_98 [label=Redis, span="151-151", cluster="HangFire.Web.JobStorage.Servers()", file="FailedStateFacts.cs"];
m19_101 [label="return new List<ServerDto>();", span="157-157", cluster="HangFire.Web.JobStorage.Servers()", file="FailedStateFacts.cs"];
m19_111 [label="Exit HangFire.Web.JobStorage.Servers()", span="149-149", cluster="HangFire.Web.JobStorage.Servers()", file="FailedStateFacts.cs"];
m19_365 [label="Entry HangFire.Web.JobStorage.SucceededListCount()", span="548-548", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="FailedStateFacts.cs"];
m19_367 [label="return Redis.GetListCount(''hangfire:succeeded'');", span="552-552", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="FailedStateFacts.cs"];
m19_366 [label=Redis, span="550-550", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="FailedStateFacts.cs"];
m19_368 [label="Exit HangFire.Web.JobStorage.SucceededListCount()", span="548-548", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="FailedStateFacts.cs"];
m19_215 [label="Entry HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="FailedStateFacts.cs"];
m19_217 [label="return GetHourlyTimelineStats(Redis, ''succeeded'');", span="360-360", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="FailedStateFacts.cs"];
m19_216 [label=Redis, span="358-358", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="FailedStateFacts.cs"];
m19_218 [label="Exit HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="FailedStateFacts.cs"];
m19_235 [label="Entry HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", span="51-51", cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", file="FailedStateFacts.cs"];
m19_288 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="FailedStateFacts.cs"];
m19_92 [label="Entry HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="470-470", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_307 [label="var result = new Dictionary<DateTime, long>()", span="488-488", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_302 [label="dates.Add(endDate)", span="479-479", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_306 [label="var valuesMap = redis.GetValuesMap(keys)", span="486-486", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_308 [label="var i = 0", span="489-489", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_313 [label="result.Add(dates[i], value)", span="496-496", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_315 [label="return result;", span="499-499", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_305 [label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="484-484", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_304 [label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="483-483", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_298 [label="var endDate = DateTime.UtcNow.Date", span="473-473", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_301 [label="startDate <= endDate", span="477-477", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_300 [label="var dates = new List<DateTime>()", span="475-475", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_303 [label="endDate = endDate.AddDays(-1)", span="480-480", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_311 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="492-492", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_309 [label="i < stringDates.Count", span="489-489", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_314 [label="i++", span="489-489", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_312 [label="value = 0", span="494-494", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_299 [label="var startDate = endDate.AddDays(-7)", span="474-474", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_310 [label="long value", span="491-491", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_316 [label="Exit HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="470-470", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="FailedStateFacts.cs"];
m19_15 [label="_process = process", span="77-77", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="FailedStateFacts.cs"];
m19_16 [label="Exit HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", span="66-66", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", color=green, community=0, file="FailedStateFacts.cs"];
m19_18 [label="Entry HangFire.JobStorage.GetConnection()", span="56-56", cluster="HangFire.JobStorage.GetConnection()", file="FailedStateFacts.cs"];
m19_255 [label="Entry HangFire.Web.JobDetailsDto.JobDetailsDto()", span="4-4", cluster="HangFire.Web.JobDetailsDto.JobDetailsDto()", file="FailedStateFacts.cs"];
m19_244 [label="Entry HangFire.Web.JobStorage.JobDetails(string)", span="414-414", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="FailedStateFacts.cs"];
m19_252 [label="return new JobDetailsDto\r\n                {\r\n                    Type = job[''Type''],\r\n                    Arguments = JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']),\r\n                    State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                    Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = history\r\n                };", span="430-437", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="FailedStateFacts.cs"];
m19_251 [label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", span="426-428", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="FailedStateFacts.cs"];
m19_250 [label="var historyList = Redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="423-424", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="FailedStateFacts.cs"];
m19_246 [label="var job = Redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="418-418", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="FailedStateFacts.cs"];
m19_249 [label="var hiddenProperties = new[] { ''Type'', ''Args'', ''State'' }", span="421-421", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="FailedStateFacts.cs"];
m19_245 [label=Redis, span="416-416", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="FailedStateFacts.cs"];
m19_247 [label="job.Count == 0", span="419-419", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="FailedStateFacts.cs"];
m19_248 [label="return null;", span="419-419", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="FailedStateFacts.cs"];
m19_253 [label="Exit HangFire.Web.JobStorage.JobDetails(string)", span="414-414", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="FailedStateFacts.cs"];
m19_292 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="FailedStateFacts.cs"];
m19_7 [label="storage == null", span="71-71", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="FailedStateFacts.cs"];
m19_6 [label="Entry HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", span="66-66", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="FailedStateFacts.cs"];
m19_8 [label="throw new ArgumentNullException(''storage'');", span="71-71", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="FailedStateFacts.cs"];
m19_297 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="FailedStateFacts.cs"];
m19_254 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="FailedStateFacts.cs"];
m19_63 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="FailedStateFacts.cs"];
m19_337 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="FailedStateFacts.cs"];
m19_390 [label="Entry Unk.GetSetCount", span="", cluster="Unk.GetSetCount", file="FailedStateFacts.cs"];
m19_206 [label="Entry HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="FailedStateFacts.cs"];
m19_208 [label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1)", span="335-337", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="FailedStateFacts.cs"];
m19_207 [label=Redis, span="333-333", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="FailedStateFacts.cs"];
m19_209 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'', ''State'', ''CreatedAt'', ''Fetched'', ''Checked'' },\r\n                    null,\r\n                    (job, state) => new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    });", span="339-352", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="FailedStateFacts.cs"];
m19_210 [label="Exit HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="FailedStateFacts.cs"];
m19_9 [label="stateMachineFactory == null", span="72-72", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="FailedStateFacts.cs"];
m19_10 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="FailedStateFacts.cs"];
m19_19 [label="Entry HangFire.Web.JobStorage.ProcessingCount()", span="44-44", cluster="HangFire.Web.JobStorage.ProcessingCount()", file="FailedStateFacts.cs"];
m19_20 [label=Redis, span="46-46", cluster="HangFire.Web.JobStorage.ProcessingCount()", file="FailedStateFacts.cs"];
m19_22 [label="Exit HangFire.Web.JobStorage.ProcessingCount()", span="44-44", cluster="HangFire.Web.JobStorage.ProcessingCount()", file="FailedStateFacts.cs"];
m19_21 [label="return Redis.GetSortedSetCount(''hangfire:processing'');", span="48-48", cluster="HangFire.Web.JobStorage.ProcessingCount()", file="FailedStateFacts.cs"];
m19_93 [label="Entry HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="FailedStateFacts.cs"];
m19_95 [label="return GetTimelineStats(Redis, ''failed'');", span="145-145", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="FailedStateFacts.cs"];
m19_94 [label=Redis, span="143-143", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="FailedStateFacts.cs"];
m19_96 [label="Exit HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="FailedStateFacts.cs"];
m19_256 [label="Entry Unk.>", span="", cluster="Unk.>", file="FailedStateFacts.cs"];
m19_86 [label="Entry HangFire.Web.ScheduleDto.ScheduleDto()", span="5-5", cluster="HangFire.Web.ScheduleDto.ScheduleDto()", file="FailedStateFacts.cs"];
m19_59 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FailedStateFacts.cs"];
m19_233 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="FailedStateFacts.cs"];
m19_289 [label="Entry Unk.GetValuesMap", span="", cluster="Unk.GetValuesMap", file="FailedStateFacts.cs"];
m19_125 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="FailedStateFacts.cs"];
m19_262 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="FailedStateFacts.cs"];
m19_114 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="FailedStateFacts.cs"];
m19_112 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="FailedStateFacts.cs"];
m19_140 [label="Entry Unk.GetRangeFromSortedSetDesc", span="", cluster="Unk.GetRangeFromSortedSetDesc", file="FailedStateFacts.cs"];
m19_415 [label="Entry Unk.GetValue", span="", cluster="Unk.GetValue", file="FailedStateFacts.cs"];
m19_68 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="FailedStateFacts.cs"];
m19_224 [label="Entry HangFire.Web.JobStorage.RetryJob(string)", span="372-372", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="FailedStateFacts.cs"];
m19_226 [label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="376-376", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="FailedStateFacts.cs"];
m19_225 [label=Redis, span="374-374", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="FailedStateFacts.cs"];
m19_227 [label="var queue = JobHelper.TryToGetQueue(jobType)", span="378-378", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="FailedStateFacts.cs"];
m19_230 [label="return JobState.Apply(\r\n                    Redis,\r\n                    jobId,\r\n                    new EnqueuedState(''The job has been retried by a user.'', queue),\r\n                    FailedState.Name);", span="386-390", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="FailedStateFacts.cs"];
m19_228 [label="String.IsNullOrEmpty(queue)", span="379-379", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="FailedStateFacts.cs"];
m19_229 [label="return false;", span="381-381", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="FailedStateFacts.cs"];
m19_231 [label="Exit HangFire.Web.JobStorage.RetryJob(string)", span="372-372", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="FailedStateFacts.cs"];
m19_198 [label="Entry HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="FailedStateFacts.cs"];
m19_200 [label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1)", span="310-313", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="FailedStateFacts.cs"];
m19_199 [label=Redis, span="308-308", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="FailedStateFacts.cs"];
m19_201 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, state) => new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="315-326", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="FailedStateFacts.cs"];
m19_202 [label="Exit HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="FailedStateFacts.cs"];
m19_448 [label=stats, span="", file="FailedStateFacts.cs"];
m19_449 [label=queueName, span="", file="FailedStateFacts.cs"];
m19_432 [label=job, span="", file="FailedStateFacts.cs"];
m19_433 [label=jobs, span="", file="FailedStateFacts.cs"];
m19_434 [label=states, span="", file="FailedStateFacts.cs"];
m19_435 [label=name, span="", file="FailedStateFacts.cs"];
m19_436 [label=servers, span="", file="FailedStateFacts.cs"];
m19_437 [label=queues, span="", file="FailedStateFacts.cs"];
m19_438 [label=queue, span="", file="FailedStateFacts.cs"];
m19_442 [label="string[]", span="", file="FailedStateFacts.cs"];
m19_443 [label=id, span="", file="FailedStateFacts.cs"];
m19_445 [label="string[]", span="", file="FailedStateFacts.cs"];
m19_447 [label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span="", file="FailedStateFacts.cs"];
m19_444 [label=jobs, span="", file="FailedStateFacts.cs"];
m19_446 [label=states, span="", file="FailedStateFacts.cs"];
m19_441 [label=string, span="", file="FailedStateFacts.cs"];
m19_440 [label=string, span="", file="FailedStateFacts.cs"];
m19_439 [label=hiddenProperties, span="", file="FailedStateFacts.cs"];
m20_12 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="FetchedJobsWatcherFacts.cs"];
m20_70 [label="Entry Unk.FromNullableStringTimestamp", span="", cluster="Unk.FromNullableStringTimestamp", file="FetchedJobsWatcherFacts.cs"];
m20_0 [label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", span="17-17", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="FetchedJobsWatcherFacts.cs"];
m20_1 [label="_storage = new RedisStorage(RedisUtils.GetHostAndPort(), RedisUtils.GetDb())", span="19-19", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="FetchedJobsWatcherFacts.cs"];
m20_2 [label="_token = new CancellationToken(true)", span="20-20", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="FetchedJobsWatcherFacts.cs"];
m20_3 [label="_stateMachine = new Mock<IStateMachine>()", span="22-22", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="FetchedJobsWatcherFacts.cs"];
m20_4 [label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="23-23", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="FetchedJobsWatcherFacts.cs"];
m20_5 [label="_stateMachineFactory.Setup(x => x.Create(It.IsNotNull<IStorageConnection>()))\r\n                .Returns(_stateMachine.Object)", span="25-26", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="FetchedJobsWatcherFacts.cs"];
m20_6 [label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", span="17-17", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="FetchedJobsWatcherFacts.cs"];
m20_61 [label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", span="74-74", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_62 [label="var redis = RedisUtils.CreateClient()", span="76-76", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_63 [label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="79-79", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_64 [label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="80-80", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_67 [label="Assert.NotNull(JobHelper.FromNullableStringTimestamp(\r\n                    redis.GetValueFromHash(''hangfire:job:my-job'', ''Checked'')))", span="87-88", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_65 [label="var watcher = CreateWatcher()", span="82-82", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_66 [label="watcher.Execute(_token)", span="85-85", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_68 [label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", span="74-74", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_24 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="FetchedJobsWatcherFacts.cs"];
m20_52 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="FetchedJobsWatcherFacts.cs"];
m20_48 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="FetchedJobsWatcherFacts.cs"];
m20_29 [label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="39-39", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="FetchedJobsWatcherFacts.cs"];
m20_30 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new FetchedJobsWatcher(_storage, null))", span="41-42", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="FetchedJobsWatcherFacts.cs"];
m20_31 [label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="44-44", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="FetchedJobsWatcherFacts.cs"];
m20_32 [label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="39-39", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="FetchedJobsWatcherFacts.cs"];
m20_41 [label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Fetched'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow.AddDays(-1)))", span="55-56", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m20_37 [label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", span="48-48", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m20_38 [label="var redis = RedisUtils.CreateClient()", span="50-50", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m20_39 [label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="53-53", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m20_40 [label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="54-54", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m20_45 [label="Assert.Equal(0, redis.GetListCount(''hangfire:queue:my-queue:dequeued''))", span="69-69", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m20_42 [label="var watcher = CreateWatcher()", span="58-58", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m20_43 [label="watcher.Execute(_token)", span="61-61", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m20_44 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                    ''my-job'', \r\n                    It.IsAny<EnqueuedState>(),\r\n                    new[] { EnqueuedState.StateName, ProcessingState.StateName }))", span="64-67", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m20_46 [label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", span="48-48", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="FetchedJobsWatcherFacts.cs"];
m20_18 [label="Entry Unk.>", span="", cluster="Unk.>", file="FetchedJobsWatcherFacts.cs"];
m20_9 [label="Entry HangFire.Redis.Tests.RedisUtils.GetDb()", span="37-37", cluster="HangFire.Redis.Tests.RedisUtils.GetDb()", file="FetchedJobsWatcherFacts.cs"];
m20_56 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="FetchedJobsWatcherFacts.cs"];
m20_50 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="FetchedJobsWatcherFacts.cs"];
m20_54 [label="Entry HangFire.Redis.FetchedJobsWatcher.Execute(System.Threading.CancellationToken)", span="52-52", cluster="HangFire.Redis.FetchedJobsWatcher.Execute(System.Threading.CancellationToken)", file="FetchedJobsWatcherFacts.cs"];
m20_36 [label="Entry HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage, HangFire.States.IStateMachineFactory)", span="33-33", cluster="HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage, HangFire.States.IStateMachineFactory)", file="FetchedJobsWatcherFacts.cs"];
m20_71 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="FetchedJobsWatcherFacts.cs"];
m20_76 [label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Checked'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow.AddDays(-1)))", span="100-101", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_72 [label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", span="93-93", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_73 [label="var redis = RedisUtils.CreateClient()", span="95-95", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_74 [label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="98-98", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_75 [label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="99-99", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_77 [label="var watcher = CreateWatcher()", span="103-103", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_78 [label="watcher.Execute(_token)", span="106-106", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_79 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                    ''my-job'', It.IsAny<EnqueuedState>(), It.IsAny<string[]>()))", span="109-110", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_80 [label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", span="93-93", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_13 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="FetchedJobsWatcherFacts.cs"];
m20_49 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="FetchedJobsWatcherFacts.cs"];
m20_28 [label="Entry FetchedJobsWatcher.cstr", span="", cluster="FetchedJobsWatcher.cstr", file="FetchedJobsWatcherFacts.cs"];
m20_53 [label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", span="139-139", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", file="FetchedJobsWatcherFacts.cs"];
m20_97 [label="return new FetchedJobsWatcher(_storage, _stateMachineFactory.Object);", span="141-141", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", file="FetchedJobsWatcherFacts.cs"];
m20_98 [label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", span="139-139", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", file="FetchedJobsWatcherFacts.cs"];
m20_60 [label="Entry Unk.TryToChangeState", span="", cluster="Unk.TryToChangeState", file="FetchedJobsWatcherFacts.cs"];
m20_94 [label="Entry lambda expression", span="134-134", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m20_15 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m20_16 [label="x.Create(It.IsNotNull<IStorageConnection>())", span="25-25", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m20_17 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m20_25 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m20_26 [label="new FetchedJobsWatcher(null, _stateMachineFactory.Object)", span="33-33", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m20_27 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m20_33 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m20_34 [label="new FetchedJobsWatcher(_storage, null)", span="42-42", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m20_35 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m20_57 [label="Entry lambda expression", span="64-67", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m20_58 [label="x.TryToChangeState(\r\n                    ''my-job'', \r\n                    It.IsAny<EnqueuedState>(),\r\n                    new[] { EnqueuedState.StateName, ProcessingState.StateName })", span="64-67", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m20_59 [label="Exit lambda expression", span="64-67", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m20_81 [label="Entry lambda expression", span="109-110", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m20_82 [label="x.TryToChangeState(\r\n                    ''my-job'', It.IsAny<EnqueuedState>(), It.IsAny<string[]>())", span="109-110", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m20_83 [label="Exit lambda expression", span="109-110", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m20_95 [label="x.TryToChangeState(It.IsAny<string>(), It.IsAny<State>(), It.IsAny<string[]>())", span="134-134", cluster="lambda expression", color=red, community=0, file="FetchedJobsWatcherFacts.cs"];
m20_96 [label="Exit lambda expression", span="134-134", cluster="lambda expression", file="FetchedJobsWatcherFacts.cs"];
m20_8 [label="Entry HangFire.Redis.Tests.RedisUtils.GetHostAndPort()", span="20-20", cluster="HangFire.Redis.Tests.RedisUtils.GetHostAndPort()", file="FetchedJobsWatcherFacts.cs"];
m20_51 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="FetchedJobsWatcherFacts.cs"];
m20_47 [label="Entry HangFire.Redis.Tests.RedisUtils.CreateClient()", span="15-15", cluster="HangFire.Redis.Tests.RedisUtils.CreateClient()", file="FetchedJobsWatcherFacts.cs"];
m20_10 [label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="FetchedJobsWatcherFacts.cs"];
m20_7 [label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="41-41", cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="FetchedJobsWatcherFacts.cs"];
m20_69 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="FetchedJobsWatcherFacts.cs"];
m20_11 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="FetchedJobsWatcherFacts.cs"];
m20_89 [label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Fetched'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="124-125", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_84 [label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", span="115-115", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_85 [label="var redis = RedisUtils.CreateClient()", span="117-117", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_86 [label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="120-120", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_87 [label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="121-121", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_88 [label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Checked'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow.AddDays(-1)))", span="122-123", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_90 [label="var watcher = CreateWatcher()", span="127-127", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_91 [label="watcher.Execute(_token)", span="130-130", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_92 [label="_stateMachine.Verify(\r\n                    x => x.TryToChangeState(It.IsAny<string>(), It.IsAny<State>(), It.IsAny<string[]>()),\r\n                    Times.Never)", span="133-135", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", color=red, community=0, file="FetchedJobsWatcherFacts.cs"];
m20_93 [label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", span="115-115", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="FetchedJobsWatcherFacts.cs"];
m20_19 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="FetchedJobsWatcherFacts.cs"];
m20_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="FetchedJobsWatcherFacts.cs"];
m20_20 [label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="30-30", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsWatcherFacts.cs"];
m20_21 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new FetchedJobsWatcher(null, _stateMachineFactory.Object))", span="32-33", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsWatcherFacts.cs"];
m20_22 [label="Assert.Equal(''storage'', exception.ParamName)", span="35-35", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsWatcherFacts.cs"];
m20_23 [label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="30-30", cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsWatcherFacts.cs"];
m20_55 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="FetchedJobsWatcherFacts.cs"];
m20_99 [label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", span="", file="FetchedJobsWatcherFacts.cs"];
m21_0 [label="Entry HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="41-41", cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="IBackgroundJobClient.cs"];
m21_1 [label="Exit HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="41-41", cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="IBackgroundJobClient.cs"];
m23_0 [label="Entry HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="24-24", cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m23_1 [label="Exit HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="24-24", cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m23_22 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="IWriteOnlyTransaction.cs"];
m23_23 [label="Exit HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="IWriteOnlyTransaction.cs"];
m23_26 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="45-45", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="IWriteOnlyTransaction.cs"];
m23_27 [label="Exit HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="45-45", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="IWriteOnlyTransaction.cs"];
m23_2 [label="Entry HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="25-25", cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="IWriteOnlyTransaction.cs"];
m23_3 [label="Exit HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="25-25", cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="IWriteOnlyTransaction.cs"];
m23_18 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="39-39", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="IWriteOnlyTransaction.cs"];
m23_19 [label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="39-39", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="IWriteOnlyTransaction.cs"];
m23_28 [label="Entry HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="46-46", cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="IWriteOnlyTransaction.cs"];
m23_29 [label="Exit HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="46-46", cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="IWriteOnlyTransaction.cs"];
m23_8 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="30-30", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="IWriteOnlyTransaction.cs"];
m23_9 [label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="30-30", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="IWriteOnlyTransaction.cs"];
m23_12 [label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="34-34", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m23_13 [label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="34-34", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m23_30 [label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="48-48", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="IWriteOnlyTransaction.cs"];
m23_31 [label="Exit HangFire.Storage.IWriteOnlyTransaction.Commit()", span="48-48", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="IWriteOnlyTransaction.cs"];
m23_10 [label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="IWriteOnlyTransaction.cs"];
m23_11 [label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="IWriteOnlyTransaction.cs"];
m23_20 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="40-40", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="IWriteOnlyTransaction.cs"];
m23_21 [label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="40-40", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="IWriteOnlyTransaction.cs"];
m23_14 [label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="35-35", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="IWriteOnlyTransaction.cs"];
m23_15 [label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="35-35", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="IWriteOnlyTransaction.cs"];
m23_4 [label="Entry HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="26-26", cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="IWriteOnlyTransaction.cs"];
m23_5 [label="Exit HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="26-26", cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="IWriteOnlyTransaction.cs"];
m23_6 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="27-27", cluster="HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="IWriteOnlyTransaction.cs"];
m23_7 [label="Exit HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="27-27", cluster="HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="IWriteOnlyTransaction.cs"];
m23_16 [label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="36-36", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m23_17 [label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="36-36", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m23_24 [label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="44-44", cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="IWriteOnlyTransaction.cs"];
m23_25 [label="Exit HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="44-44", cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="IWriteOnlyTransaction.cs"];
m24_72 [label="Entry Unk.OnClientException", span="", cluster="Unk.OnClientException", file="JobCreationProcessFacts.cs"];
m24_11 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="JobCreationProcessFacts.cs"];
m24_10 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="JobCreationProcessFacts.cs"];
m24_0 [label="Entry Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", span="23-23", cluster="Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", file="JobCreationProcessFacts.cs"];
m24_3 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)", color=green, community=0, file="JobCreationProcessFacts.cs"];
m24_2 [label="Exit Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", span="23-23", cluster="Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", file="JobCreationProcessFacts.cs"];
m24_4 [label="Hangfire.Server.ServerSupervisorOptions", span="", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m24_6 [label="_context = new Mock<CreateContext>(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="25-26", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m24_1 [label="ShutdownTimeout = TimeSpan.FromMilliseconds(Timeout.Infinite)", span="25-25", cluster="Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", file="JobCreationProcessFacts.cs"];
m24_5 [label="_filters = new List<object>()", span="24-24", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m24_7 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", span="17-17", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobCreationProcessFacts.cs"];
m24_25 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="JobCreationProcessFacts.cs"];
m24_13 [label="Entry Mock<CreateContext>.cstr", span="", cluster="Mock<CreateContext>.cstr", file="JobCreationProcessFacts.cs"];
m24_97 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m24_98 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="104-104", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m24_101 [label="_filters.Add(filter.Object)", span="109-109", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m24_102 [label="var process = CreateProcess()", span="111-111", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m24_103 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="114-114", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m24_99 [label="var filter = new Mock<IClientExceptionFilter>()", span="105-105", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m24_100 [label="filter.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>()))\r\n                .Callback((ClientExceptionContext x) => x.ExceptionHandled = true)", span="106-107", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m24_104 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="JobCreationProcessFacts.cs"];
m24_106 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="JobCreationProcessFacts.cs"];
m24_41 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs"];
m24_42 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="53-53", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs"];
m24_43 [label="var process = CreateProcess()", span="54-54", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs"];
m24_44 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="56-57", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs"];
m24_45 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobCreationProcessFacts.cs"];
m24_251 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m24_254 [label="_filters.Add(outerFilter.Object)", span="250-250", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m24_255 [label="_filters.Add(innerFilter.Object)", span="251-251", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m24_257 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="254-254", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m24_258 [label="var process = CreateProcess()", span="256-256", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m24_259 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="259-260", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m24_252 [label="var outerFilter = new Mock<IClientFilter>()", span="247-247", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m24_253 [label="var innerFilter = new Mock<IClientFilter>()", span="248-248", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m24_256 [label="var exception = new InvalidOperationException()", span="253-253", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m24_260 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))", span="262-262", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m24_261 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobCreationProcessFacts.cs"];
m24_35 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="JobCreationProcessFacts.cs"];
m24_237 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="JobCreationProcessFacts.cs"];
m24_53 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m24_55 [label="_filters.Add(filter.Object)", span="64-64", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m24_56 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="66-66", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m24_57 [label="var process = CreateProcess()", span="67-67", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m24_58 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="69-70", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m24_54 [label="var filter = new Mock<IClientExceptionFilter>()", span="63-63", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m24_59 [label="filter.Verify(x => x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>()))", span="72-73", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m24_60 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobCreationProcessFacts.cs"];
m24_24 [label="Entry Unk.>", span="", cluster="Unk.>", file="JobCreationProcessFacts.cs"];
m24_61 [label="Entry Mock<IClientExceptionFilter>.cstr", span="", cluster="Mock<IClientExceptionFilter>.cstr", file="JobCreationProcessFacts.cs"];
m24_29 [label="Entry HangFire.Client.JobCreationProcess.Run(HangFire.Client.CreateContext)", span="45-45", cluster="HangFire.Client.JobCreationProcess.Run(HangFire.Client.CreateContext)", file="JobCreationProcessFacts.cs"];
m24_119 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m24_121 [label="_filters.Add(filter.Object)", span="122-122", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m24_123 [label="_context.Setup(x => x.CreateJob()).InSequence()", span="125-125", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m24_125 [label="var process = CreateProcess()", span="128-128", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m24_126 [label="process.Run(_context.Object)", span="131-131", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m24_120 [label="var filter = new Mock<IClientFilter>()", span="121-121", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m24_122 [label="filter.Setup(x => x.OnCreating(It.IsNotNull<CreatingContext>())).InSequence()", span="124-124", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m24_124 [label="filter.Setup(x => x.OnCreated(It.IsNotNull<CreatedContext>())).InSequence()", span="126-126", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m24_127 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m24_18 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs"];
m24_19 [label="var process = CreateProcess()", span="32-32", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs"];
m24_20 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(null))", span="34-35", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs"];
m24_21 [label="Assert.Equal(''context'', exception.ParamName)", span="37-37", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs"];
m24_22 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobCreationProcessFacts.cs"];
m24_164 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m24_166 [label="_filters.Add(filter.Object)", span="164-164", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m24_168 [label="var process = CreateProcess()", span="169-169", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m24_169 [label="process.Run(_context.Object)", span="172-172", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m24_170 [label="_context.Verify(x => x.CreateJob(), Times.Never)", span="175-175", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m24_165 [label="var filter = new Mock<IClientFilter>()", span="163-163", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m24_167 [label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext x) => x.Canceled = true)", span="166-167", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m24_171 [label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="176-176", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m24_172 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="JobCreationProcessFacts.cs"];
m24_23 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobCreationProcessFacts.cs"];
m24_328 [label="return new JobCreationProcess(_filters);", span="314-314", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobCreationProcessFacts.cs"];
m24_329 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobCreationProcessFacts.cs"];
m24_139 [label="Entry Unk.OnCreated", span="", cluster="Unk.OnCreated", file="JobCreationProcessFacts.cs"];
m24_228 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m24_230 [label="_filters.Add(filter.Object)", span="227-227", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m24_232 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="230-230", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m24_233 [label="var process = CreateProcess()", span="232-232", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m24_234 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="235-236", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m24_229 [label="var filter = new Mock<IClientFilter>()", span="226-226", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m24_231 [label="var exception = new InvalidOperationException()", span="229-229", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m24_235 [label="filter.Verify(x => x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception)))", span="239-240", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m24_236 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobCreationProcessFacts.cs"];
m24_62 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="JobCreationProcessFacts.cs"];
m24_84 [label="Entry Unk.InSequence", span="", cluster="Unk.InSequence", file="JobCreationProcessFacts.cs"];
m24_330 [label="Entry HangFire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39", cluster="HangFire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="JobCreationProcessFacts.cs"];
m24_185 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m24_188 [label="_filters.Add(outerFilter.Object)", span="186-186", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m24_189 [label="_filters.Add(innerFilter.Object)", span="187-187", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m24_191 [label="var process = CreateProcess()", span="192-192", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m24_192 [label="process.Run(_context.Object)", span="195-195", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m24_186 [label="var outerFilter = new Mock<IClientFilter>()", span="183-183", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m24_187 [label="var innerFilter = new Mock<IClientFilter>()", span="184-184", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m24_190 [label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext context) => context.Canceled = true)", span="189-190", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m24_193 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Canceled)))", span="198-198", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m24_194 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobCreationProcessFacts.cs"];
m24_46 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="JobCreationProcessFacts.cs"];
m24_238 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="JobCreationProcessFacts.cs"];
m24_73 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m24_78 [label="_filters.Add(filter1.Object)", span="86-86", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m24_79 [label="_filters.Add(filter2.Object)", span="87-87", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m24_80 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="89-89", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m24_81 [label="var process = CreateProcess()", span="91-91", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m24_82 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="94-95", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m24_74 [label="var filter1 = new Mock<IClientExceptionFilter>()", span="80-80", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m24_77 [label="filter1.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="84-84", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m24_75 [label="var filter2 = new Mock<IClientExceptionFilter>()", span="81-81", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m24_76 [label="filter2.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="83-83", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m24_83 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobCreationProcessFacts.cs"];
m24_30 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobCreationProcessFacts.cs"];
m24_31 [label="var process = CreateProcess()", span="43-43", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobCreationProcessFacts.cs"];
m24_32 [label="process.Run(_context.Object)", span="45-45", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobCreationProcessFacts.cs"];
m24_33 [label="_context.Verify(x => x.CreateJob(), Times.Once)", span="47-47", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobCreationProcessFacts.cs"];
m24_34 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="JobCreationProcessFacts.cs"];
m24_324 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_14 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_15 [label="TestMethod()", span="20-20", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_51 [label="process.Run(_context.Object)", span="57-57", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_67 [label="process.Run(_context.Object)", span="70-70", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_95 [label="process.Run(_context.Object)", span="95-95", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_117 [label="process.Run(_context.Object)", span="114-114", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_220 [label="process.Run(_context.Object)", span="215-215", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_243 [label="process.Run(_context.Object)", span="236-236", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_266 [label="process.Run(_context.Object)", span="260-260", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_296 [label="process.Run(_context.Object)", span="281-281", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_319 [label="process.Run(_context.Object)", span="302-302", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_16 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_27 [label="process.Run(null)", span="35-35", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_37 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_47 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_50 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_52 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_63 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_66 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_68 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_91 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_94 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_96 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_107 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_116 [label="Entry lambda expression", span="114-114", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_118 [label="Exit lambda expression", span="114-114", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_133 [label="Entry lambda expression", span="125-125", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_179 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_219 [label="Entry lambda expression", span="215-215", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_221 [label="Exit lambda expression", span="215-215", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_222 [label="Entry lambda expression", span="218-218", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_239 [label="Entry lambda expression", span="230-230", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_242 [label="Entry lambda expression", span="236-236", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_244 [label="Exit lambda expression", span="236-236", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_262 [label="Entry lambda expression", span="254-254", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_265 [label="Entry lambda expression", span="260-260", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_267 [label="Exit lambda expression", span="260-260", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_283 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_295 [label="Entry lambda expression", span="281-281", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_297 [label="Exit lambda expression", span="281-281", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_309 [label="Entry lambda expression", span="294-294", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_318 [label="Entry lambda expression", span="302-302", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_320 [label="Exit lambda expression", span="302-302", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_26 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_28 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_39 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_38 [label="x.CreateJob()", span="47-47", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_70 [label="x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>())", span="72-73", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_86 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="83-83", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_89 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="84-84", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_111 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="106-106", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_130 [label="x.OnCreating(It.IsNotNull<CreatingContext>())", span="124-124", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_137 [label="x.OnCreated(It.IsNotNull<CreatedContext>())", span="126-126", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_153 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="146-146", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_156 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="147-147", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_159 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="148-148", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_162 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="149-149", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_174 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="166-166", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_183 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="176-176", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_196 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="189-189", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_202 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Canceled))", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_217 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="208-208", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_226 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="219-219", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_246 [label="x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception))", span="239-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_269 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_287 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_313 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="296-296", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_322 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null))", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_49 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_48 [label="x.CreateJob()", span="53-53", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_65 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_64 [label="x.CreateJob()", span="66-66", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_69 [label="Entry lambda expression", span="72-73", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_88 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_93 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_92 [label="x.CreateJob()", span="89-89", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_109 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_108 [label="x.CreateJob()", span="104-104", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_110 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_113 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_129 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_136 [label="Entry lambda expression", span="126-126", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_135 [label="Exit lambda expression", span="125-125", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_134 [label="x.CreateJob()", span="125-125", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_152 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_161 [label="Entry lambda expression", span="149-149", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_173 [label="Entry lambda expression", span="166-166", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_176 [label="Entry lambda expression", span="167-167", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_182 [label="Entry lambda expression", span="176-176", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_181 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_180 [label="x.CreateJob()", span="175-175", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_195 [label="Entry lambda expression", span="189-189", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_198 [label="Entry lambda expression", span="190-190", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_201 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_216 [label="Entry lambda expression", span="208-208", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_225 [label="Entry lambda expression", span="219-219", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_224 [label="Exit lambda expression", span="218-218", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_223 [label="x.CreateJob()", span="218-218", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_249 [label="context.Exception == exception", span="240-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_241 [label="Exit lambda expression", span="230-230", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_240 [label="x.CreateJob()", span="230-230", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_245 [label="Entry lambda expression", span="239-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_272 [label="context.Exception == exception", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_264 [label="Exit lambda expression", span="254-254", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_263 [label="x.CreateJob()", span="254-254", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_268 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_290 [label="context.Exception == exception", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_286 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_292 [label="Entry lambda expression", span="276-276", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_285 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_284 [label="x.CreateJob()", span="273-273", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_312 [label="Entry lambda expression", span="296-296", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_315 [label="Entry lambda expression", span="297-297", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_311 [label="Exit lambda expression", span="294-294", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_310 [label="x.CreateJob()", span="294-294", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_321 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_85 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_155 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_158 [label="Entry lambda expression", span="148-148", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_71 [label="Exit lambda expression", span="72-73", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_87 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_90 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_112 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_131 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_138 [label="Exit lambda expression", span="126-126", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_154 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_157 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_160 [label="Exit lambda expression", span="148-148", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_163 [label="Exit lambda expression", span="149-149", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_175 [label="Exit lambda expression", span="166-166", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_184 [label="Exit lambda expression", span="176-176", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_197 [label="Exit lambda expression", span="189-189", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_203 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_204 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_218 [label="Exit lambda expression", span="208-208", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_227 [label="Exit lambda expression", span="219-219", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_247 [label="Exit lambda expression", span="239-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_248 [label="Entry lambda expression", span="240-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_270 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_271 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_288 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_289 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_314 [label="Exit lambda expression", span="296-296", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_323 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_115 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_114 [label="x.ExceptionHandled = true", span="107-107", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_178 [label="Exit lambda expression", span="167-167", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_177 [label="x.Canceled = true", span="167-167", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_200 [label="Exit lambda expression", span="190-190", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_199 [label="context.Canceled = true", span="190-190", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_250 [label="Exit lambda expression", span="240-240", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_273 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_291 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_294 [label="Exit lambda expression", span="276-276", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_293 [label="x.ExceptionHandled = true", span="276-276", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_317 [label="Exit lambda expression", span="297-297", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_316 [label="x.ExceptionHandled = true", span="297-297", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_206 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_205 [label="context.Canceled", span="198-198", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_325 [label="context.Exception != null", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_326 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="JobCreationProcessFacts.cs"];
m24_36 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="JobCreationProcessFacts.cs"];
m24_207 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m24_209 [label="_filters.Add(filter.Object)", span="206-206", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m24_211 [label="var process = CreateProcess()", span="211-211", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m24_212 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="214-215", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m24_213 [label="_context.Verify(x => x.CreateJob(), Times.Never)", span="218-218", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m24_208 [label="var filter = new Mock<IClientFilter>()", span="205-205", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m24_210 [label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Throws<InvalidOperationException>()", span="208-209", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m24_214 [label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="219-219", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m24_215 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobCreationProcessFacts.cs"];
m24_298 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m24_301 [label="_filters.Add(outerFilter.Object)", span="291-291", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m24_302 [label="_filters.Add(innerFilter.Object)", span="292-292", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m24_303 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="294-294", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m24_305 [label="var process = CreateProcess()", span="299-299", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m24_306 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="302-302", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m24_299 [label="var outerFilter = new Mock<IClientFilter>()", span="288-288", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m24_300 [label="var innerFilter = new Mock<IClientFilter>()", span="289-289", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m24_304 [label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>()))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="296-297", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m24_307 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null)))", span="305-305", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m24_308 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobCreationProcessFacts.cs"];
m24_132 [label="Entry Unk.OnCreating", span="", cluster="Unk.OnCreating", file="JobCreationProcessFacts.cs"];
m24_274 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m24_276 [label="_filters.Add(filter.Object)", span="270-270", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m24_278 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="273-273", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m24_280 [label="var process = CreateProcess()", span="278-278", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m24_281 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="281-281", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m24_275 [label="var filter = new Mock<IClientFilter>()", span="269-269", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m24_277 [label="var exception = new InvalidOperationException()", span="272-272", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m24_279 [label="filter.Setup(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="275-276", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m24_282 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="JobCreationProcessFacts.cs"];
m24_105 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="JobCreationProcessFacts.cs"];
m24_9 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobCreationProcessFacts.cs"];
m24_17 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="JobCreationProcessFacts.cs"];
m24_327 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="JobCreationProcessFacts.cs"];
m24_128 [label="Entry Mock<IClientFilter>.cstr", span="", cluster="Mock<IClientFilter>.cstr", file="JobCreationProcessFacts.cs"];
m24_40 [label="Entry Unk.CreateJob", span="", cluster="Unk.CreateJob", file="JobCreationProcessFacts.cs"];
m24_8 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="JobCreationProcessFacts.cs"];
m24_140 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m24_143 [label="_filters.Add(outerFilter.Object)", span="143-143", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m24_144 [label="_filters.Add(innerFilter.Object)", span="144-144", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m24_149 [label="var process = CreateProcess()", span="151-151", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m24_150 [label="process.Run(_context.Object)", span="154-154", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m24_141 [label="var outerFilter = new Mock<IClientFilter>()", span="140-140", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m24_142 [label="var innerFilter = new Mock<IClientFilter>()", span="141-141", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m24_145 [label="outerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="146-146", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m24_148 [label="outerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="149-149", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m24_146 [label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="147-147", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m24_147 [label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="148-148", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m24_151 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobCreationProcessFacts.cs"];
m24_331 [label="HangFire.Core.Tests.Client.JobCreationProcessFacts", span="", file="JobCreationProcessFacts.cs"];
m24_333 [label=process, span="", file="JobCreationProcessFacts.cs"];
m24_334 [label=process, span="", file="JobCreationProcessFacts.cs"];
m24_335 [label=process, span="", file="JobCreationProcessFacts.cs"];
m24_336 [label=process, span="", file="JobCreationProcessFacts.cs"];
m24_337 [label=process, span="", file="JobCreationProcessFacts.cs"];
m24_338 [label=process, span="", file="JobCreationProcessFacts.cs"];
m24_340 [label=process, span="", file="JobCreationProcessFacts.cs"];
m24_343 [label=process, span="", file="JobCreationProcessFacts.cs"];
m24_344 [label=process, span="", file="JobCreationProcessFacts.cs"];
m24_332 [label=process, span="", file="JobCreationProcessFacts.cs"];
m24_339 [label=exception, span="", file="JobCreationProcessFacts.cs"];
m24_341 [label=exception, span="", file="JobCreationProcessFacts.cs"];
m24_342 [label=exception, span="", file="JobCreationProcessFacts.cs"];
m25_139 [label="Entry HangFire.PreserveCultureAttribute.PreserveCultureAttribute()", span="26-26", cluster="HangFire.PreserveCultureAttribute.PreserveCultureAttribute()", file="PreserveCultureAttributeFacts.cs"];
m25_20 [label="Entry HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", span="27-27", cluster="HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", file="PreserveCultureAttributeFacts.cs"];
m25_16 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="PreserveCultureAttributeFacts.cs"];
m25_27 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.Sample()", span="145-145", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.Sample()", file="PreserveCultureAttributeFacts.cs"];
m25_136 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.Sample()", span="145-145", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.Sample()", file="PreserveCultureAttributeFacts.cs"];
m25_28 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", span="42-42", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", file="PreserveCultureAttributeFacts.cs"];
m25_29 [label="var filter = CreateFilter()", span="44-44", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", file="PreserveCultureAttributeFacts.cs"];
m25_30 [label="Assert.Throws<ArgumentNullException>(\r\n                () => filter.OnCreating(null))", span="46-47", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", file="PreserveCultureAttributeFacts.cs"];
m25_31 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", span="42-42", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", file="PreserveCultureAttributeFacts.cs"];
m25_48 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="PreserveCultureAttributeFacts.cs"];
m25_70 [label="Entry HangFire.PreserveCultureAttribute.OnPerforming(HangFire.Server.PerformingContext)", span="42-42", cluster="HangFire.PreserveCultureAttribute.OnPerforming(HangFire.Server.PerformingContext)", file="PreserveCultureAttributeFacts.cs"];
m25_53 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="PreserveCultureAttributeFacts.cs"];
m25_49 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", span="64-64", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", file="PreserveCultureAttributeFacts.cs"];
m25_50 [label="var filter = CreateFilter()", span="66-66", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", file="PreserveCultureAttributeFacts.cs"];
m25_51 [label="Assert.DoesNotThrow(() => filter.OnCreated(null))", span="68-68", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", file="PreserveCultureAttributeFacts.cs"];
m25_52 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", span="64-64", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", file="PreserveCultureAttributeFacts.cs"];
m25_102 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", span="112-112", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="PreserveCultureAttributeFacts.cs"];
m25_103 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentCulture'')).Returns(''\''ru-RU\'''')", span="114-114", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="PreserveCultureAttributeFacts.cs"];
m25_104 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentUICulture'')).Returns(''\''ru-RU\'''')", span="115-115", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="PreserveCultureAttributeFacts.cs"];
m25_105 [label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''en-US'')", span="117-117", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="PreserveCultureAttributeFacts.cs"];
m25_106 [label="Thread.CurrentThread.CurrentUICulture = CultureInfo.GetCultureInfo(''en-US'')", span="118-118", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="PreserveCultureAttributeFacts.cs"];
m25_107 [label="var filter = CreateFilter()", span="120-120", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="PreserveCultureAttributeFacts.cs"];
m25_108 [label="filter.OnPerforming(_performingContext)", span="121-121", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="PreserveCultureAttributeFacts.cs"];
m25_109 [label="filter.OnPerformed(_performedContext)", span="122-122", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="PreserveCultureAttributeFacts.cs"];
m25_110 [label="Assert.Equal(''en-US'', Thread.CurrentThread.CurrentCulture.Name)", span="124-124", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="PreserveCultureAttributeFacts.cs"];
m25_111 [label="Assert.Equal(''en-US'', Thread.CurrentThread.CurrentUICulture.Name)", span="125-125", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="PreserveCultureAttributeFacts.cs"];
m25_112 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", span="112-112", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="PreserveCultureAttributeFacts.cs"];
m25_33 [label="Entry Unk.>", span="", cluster="Unk.>", file="PreserveCultureAttributeFacts.cs"];
m25_119 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", span="129-129", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="PreserveCultureAttributeFacts.cs"];
m25_120 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentCulture'')).Returns((string)null)", span="131-131", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="PreserveCultureAttributeFacts.cs"];
m25_121 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentUICulture'')).Returns((string)null)", span="132-132", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="PreserveCultureAttributeFacts.cs"];
m25_122 [label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''en-US'')", span="134-134", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="PreserveCultureAttributeFacts.cs"];
m25_123 [label="Thread.CurrentThread.CurrentUICulture = CultureInfo.GetCultureInfo(''en-US'')", span="135-135", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="PreserveCultureAttributeFacts.cs"];
m25_124 [label="var filter = CreateFilter()", span="137-137", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="PreserveCultureAttributeFacts.cs"];
m25_125 [label="filter.OnPerforming(_performingContext)", span="138-138", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="PreserveCultureAttributeFacts.cs"];
m25_126 [label="filter.OnPerformed(_performedContext)", span="139-139", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="PreserveCultureAttributeFacts.cs"];
m25_127 [label="Assert.Equal(''en-US'', Thread.CurrentThread.CurrentCulture.Name)", span="141-141", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="PreserveCultureAttributeFacts.cs"];
m25_128 [label="Assert.Equal(''en-US'', Thread.CurrentThread.CurrentUICulture.Name)", span="142-142", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="PreserveCultureAttributeFacts.cs"];
m25_129 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", span="129-129", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="PreserveCultureAttributeFacts.cs"];
m25_19 [label="Entry HangFire.Client.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="26-26", cluster="HangFire.Client.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="PreserveCultureAttributeFacts.cs"];
m25_18 [label="Entry HangFire.Client.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="24-24", cluster="HangFire.Client.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="PreserveCultureAttributeFacts.cs"];
m25_37 [label="Entry HangFire.PreserveCultureAttribute.OnCreating(HangFire.Client.CreatingContext)", span="28-28", cluster="HangFire.PreserveCultureAttribute.OnCreating(HangFire.Client.CreatingContext)", file="PreserveCultureAttributeFacts.cs"];
m25_57 [label="Entry HangFire.PreserveCultureAttribute.OnCreated(HangFire.Client.CreatedContext)", span="38-38", cluster="HangFire.PreserveCultureAttribute.OnCreated(HangFire.Client.CreatedContext)", file="PreserveCultureAttributeFacts.cs"];
m25_58 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", span="72-72", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="PreserveCultureAttributeFacts.cs"];
m25_59 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentCulture'')).Returns(''\''ru-RU\'''')", span="74-74", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="PreserveCultureAttributeFacts.cs"];
m25_60 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentUICulture'')).Returns(''\''ru-RU\'''')", span="75-75", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="PreserveCultureAttributeFacts.cs"];
m25_61 [label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''en-US'')", span="77-77", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="PreserveCultureAttributeFacts.cs"];
m25_62 [label="Thread.CurrentThread.CurrentUICulture = CultureInfo.GetCultureInfo(''en-US'')", span="78-78", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="PreserveCultureAttributeFacts.cs"];
m25_63 [label="var filter = CreateFilter()", span="80-80", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="PreserveCultureAttributeFacts.cs"];
m25_64 [label="filter.OnPerforming(_performingContext)", span="81-81", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="PreserveCultureAttributeFacts.cs"];
m25_65 [label="Assert.Equal(''ru-RU'', Thread.CurrentThread.CurrentCulture.Name)", span="83-83", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="PreserveCultureAttributeFacts.cs"];
m25_66 [label="Assert.Equal(''ru-RU'', Thread.CurrentThread.CurrentUICulture.Name)", span="84-84", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="PreserveCultureAttributeFacts.cs"];
m25_67 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", span="72-72", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="PreserveCultureAttributeFacts.cs"];
m25_101 [label="Entry HangFire.PreserveCultureAttribute.OnPerformed(HangFire.Server.PerformedContext)", span="62-62", cluster="HangFire.PreserveCultureAttribute.OnPerformed(HangFire.Server.PerformedContext)", file="PreserveCultureAttributeFacts.cs"];
m25_0 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", span="22-22", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="PreserveCultureAttributeFacts.cs"];
m25_1 [label="_connection = new Mock<IStorageConnection>()", span="24-24", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="PreserveCultureAttributeFacts.cs"];
m25_2 [label="var job = Job.FromExpression(() => Sample())", span="25-25", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="PreserveCultureAttributeFacts.cs"];
m25_3 [label="var state = new Mock<State>()", span="26-26", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", color=red, community=0, file="PreserveCultureAttributeFacts.cs"];
m25_5 [label="var createContext = new CreateContext(\r\n                _connection.Object, stateMachineFactory.Object, job, state.Object)", span="29-30", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="PreserveCultureAttributeFacts.cs"];
m25_9 [label="var performContext = new PerformContext(workerContext, _connection.Object, JobId, job)", span="36-36", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="PreserveCultureAttributeFacts.cs"];
m25_4 [label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="27-27", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="PreserveCultureAttributeFacts.cs"];
m25_6 [label="_creatingContext = new CreatingContext(createContext)", span="31-31", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="PreserveCultureAttributeFacts.cs"];
m25_7 [label="_createdContext = new CreatedContext(createContext, false, null)", span="32-32", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="PreserveCultureAttributeFacts.cs"];
m25_8 [label="var workerContext = new WorkerContext(''server'', new string[0], 1)", span="34-34", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="PreserveCultureAttributeFacts.cs"];
m25_10 [label="_performingContext = new PerformingContext(performContext)", span="37-37", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="PreserveCultureAttributeFacts.cs"];
m25_11 [label="_performedContext = new PerformedContext(performContext, false, null)", span="38-38", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="PreserveCultureAttributeFacts.cs"];
m25_12 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", span="22-22", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="PreserveCultureAttributeFacts.cs"];
m25_38 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", span="51-51", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="PreserveCultureAttributeFacts.cs"];
m25_39 [label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''ru-RU'')", span="53-53", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="PreserveCultureAttributeFacts.cs"];
m25_40 [label="Thread.CurrentThread.CurrentUICulture = CultureInfo.GetCultureInfo(''ru-RU'')", span="54-54", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="PreserveCultureAttributeFacts.cs"];
m25_41 [label="var filter = CreateFilter()", span="56-56", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="PreserveCultureAttributeFacts.cs"];
m25_42 [label="filter.OnCreating(_creatingContext)", span="57-57", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="PreserveCultureAttributeFacts.cs"];
m25_43 [label="Assert.Equal(''ru-RU'', _creatingContext.GetJobParameter<string>(''CurrentCulture''))", span="59-59", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="PreserveCultureAttributeFacts.cs"];
m25_44 [label="Assert.Equal(''ru-RU'', _creatingContext.GetJobParameter<string>(''CurrentUICulture''))", span="60-60", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="PreserveCultureAttributeFacts.cs"];
m25_45 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", span="51-51", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="PreserveCultureAttributeFacts.cs"];
m25_23 [label="Entry HangFire.Server.PerformedContext.PerformedContext(HangFire.Server.PerformContext, bool, System.Exception)", span="26-26", cluster="HangFire.Server.PerformedContext.PerformedContext(HangFire.Server.PerformContext, bool, System.Exception)", file="PreserveCultureAttributeFacts.cs"];
m25_74 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="PreserveCultureAttributeFacts.cs"];
m25_32 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.CreateFilter()", span="147-147", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.CreateFilter()", file="PreserveCultureAttributeFacts.cs"];
m25_137 [label="return new PreserveCultureAttribute();", span="149-149", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.CreateFilter()", file="PreserveCultureAttributeFacts.cs"];
m25_138 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.CreateFilter()", span="147-147", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.CreateFilter()", file="PreserveCultureAttributeFacts.cs"];
m25_15 [label="Entry Mock<State>.cstr", span="", cluster="Mock<State>.cstr", file="PreserveCultureAttributeFacts.cs"];
m25_68 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="PreserveCultureAttributeFacts.cs"];
m25_22 [label="Entry HangFire.Server.PerformingContext.PerformingContext(HangFire.Server.PerformContext)", span="24-24", cluster="HangFire.Server.PerformingContext.PerformingContext(HangFire.Server.PerformContext)", file="PreserveCultureAttributeFacts.cs"];
m25_78 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", span="88-88", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", file="PreserveCultureAttributeFacts.cs"];
m25_79 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentCulture'')).Returns((string)null)", span="90-90", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", file="PreserveCultureAttributeFacts.cs"];
m25_80 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentUICulture'')).Returns((string)null)", span="91-91", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", file="PreserveCultureAttributeFacts.cs"];
m25_81 [label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''en-US'')", span="93-93", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", file="PreserveCultureAttributeFacts.cs"];
m25_82 [label="Thread.CurrentThread.CurrentUICulture = CultureInfo.GetCultureInfo(''en-US'')", span="94-94", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", file="PreserveCultureAttributeFacts.cs"];
m25_83 [label="var filter = CreateFilter()", span="96-96", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", file="PreserveCultureAttributeFacts.cs"];
m25_84 [label="filter.OnPerforming(_performingContext)", span="97-97", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", file="PreserveCultureAttributeFacts.cs"];
m25_85 [label="Assert.Equal(''en-US'', Thread.CurrentThread.CurrentCulture.Name)", span="99-99", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", file="PreserveCultureAttributeFacts.cs"];
m25_86 [label="Assert.Equal(''en-US'', Thread.CurrentThread.CurrentUICulture.Name)", span="100-100", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", file="PreserveCultureAttributeFacts.cs"];
m25_87 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", span="88-88", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", file="PreserveCultureAttributeFacts.cs"];
m25_94 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", span="104-104", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", file="PreserveCultureAttributeFacts.cs"];
m25_95 [label="var filter = CreateFilter()", span="106-106", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", file="PreserveCultureAttributeFacts.cs"];
m25_96 [label="Assert.Throws<ArgumentNullException>(() => filter.OnPerformed(null))", span="108-108", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", file="PreserveCultureAttributeFacts.cs"];
m25_97 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", span="104-104", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", file="PreserveCultureAttributeFacts.cs"];
m25_133 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_24 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_25 [label="Sample()", span="25-25", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_26 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_35 [label="filter.OnCreating(null)", span="47-47", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_34 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_36 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_55 [label="filter.OnCreated(null)", span="68-68", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_54 [label="Entry lambda expression", span="68-68", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_56 [label="Exit lambda expression", span="68-68", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_71 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_75 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_72 [label="x.GetJobParameter(JobId, ''CurrentCulture'')", span="74-74", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_73 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_76 [label="x.GetJobParameter(JobId, ''CurrentUICulture'')", span="75-75", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_77 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_88 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_91 [label="Entry lambda expression", span="91-91", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_89 [label="x.GetJobParameter(JobId, ''CurrentCulture'')", span="90-90", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_90 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_92 [label="x.GetJobParameter(JobId, ''CurrentUICulture'')", span="91-91", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_93 [label="Exit lambda expression", span="91-91", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_99 [label="filter.OnPerformed(null)", span="108-108", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_98 [label="Entry lambda expression", span="108-108", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_100 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_113 [label="Entry lambda expression", span="114-114", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_116 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_114 [label="x.GetJobParameter(JobId, ''CurrentCulture'')", span="114-114", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_115 [label="Exit lambda expression", span="114-114", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_117 [label="x.GetJobParameter(JobId, ''CurrentUICulture'')", span="115-115", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_118 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_130 [label="Entry lambda expression", span="131-131", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_131 [label="x.GetJobParameter(JobId, ''CurrentCulture'')", span="131-131", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_132 [label="Exit lambda expression", span="131-131", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_134 [label="x.GetJobParameter(JobId, ''CurrentUICulture'')", span="132-132", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_135 [label="Exit lambda expression", span="132-132", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m25_17 [label="Entry CreateContext.cstr", span="", cluster="CreateContext.cstr", file="PreserveCultureAttributeFacts.cs"];
m25_47 [label="Entry HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="PreserveCultureAttributeFacts.cs"];
m25_14 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="PreserveCultureAttributeFacts.cs"];
m25_69 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="PreserveCultureAttributeFacts.cs"];
m25_46 [label="Entry System.Globalization.CultureInfo.GetCultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.GetCultureInfo(string)", file="PreserveCultureAttributeFacts.cs"];
m25_13 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="PreserveCultureAttributeFacts.cs"];
m25_21 [label="Entry PerformContext.cstr", span="", cluster="PerformContext.cstr", file="PreserveCultureAttributeFacts.cs"];
m25_140 [label="HangFire.Core.Tests.PreserveCultureAttributeFacts", span="", file="PreserveCultureAttributeFacts.cs"];
m25_141 [label=filter, span="", file="PreserveCultureAttributeFacts.cs"];
m25_142 [label=filter, span="", file="PreserveCultureAttributeFacts.cs"];
m25_143 [label=filter, span="", file="PreserveCultureAttributeFacts.cs"];
m26_11 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ProcessingState.cs"];
m26_8 [label="Entry HangFire.States.ProcessingState.SerializeData()", span="39-39", cluster="HangFire.States.ProcessingState.SerializeData()", file="ProcessingState.cs"];
m26_9 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''StartedAt'', JobHelper.ToStringTimestamp(StartedAt) },\r\n                { ''ServerName'', ServerName }\r\n            };", span="41-45", cluster="HangFire.States.ProcessingState.SerializeData()", file="ProcessingState.cs"];
m26_10 [label="Exit HangFire.States.ProcessingState.SerializeData()", span="39-39", cluster="HangFire.States.ProcessingState.SerializeData()", file="ProcessingState.cs"];
m26_6 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="ProcessingState.cs"];
m26_0 [label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="26-26", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingState.cs"];
m26_1 [label="String.IsNullOrWhiteSpace(serverName)", span="28-28", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingState.cs"];
m26_3 [label="ServerName = serverName", span="30-30", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingState.cs"];
m26_2 [label="throw new ArgumentNullException(''serverName'');", span="28-28", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingState.cs"];
m26_4 [label="StartedAt = DateTime.UtcNow", span="31-31", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingState.cs"];
m26_5 [label="Exit HangFire.States.ProcessingState.ProcessingState(string)", span="26-26", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingState.cs"];
m26_12 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ProcessingState.cs"];
m26_13 [label="HangFire.States.ProcessingState", span="", file="ProcessingState.cs"];
m27_268 [label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", span="451-451", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="ProcessingStateFacts.cs"];
m27_269 [label="var serializedHistory = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="453-454", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="ProcessingStateFacts.cs"];
m27_272 [label="i < table.RowCount", span="457-457", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="ProcessingStateFacts.cs"];
m27_273 [label="Assert.AreEqual(table.Rows[i][''State''], history[i][''State''])", span="459-459", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="ProcessingStateFacts.cs"];
m27_270 [label="var history = serializedHistory.Select(JobHelper.FromJson<Dictionary<string, string>>).ToList()", span="455-455", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="ProcessingStateFacts.cs"];
m27_271 [label="var i = 0", span="457-457", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="ProcessingStateFacts.cs"];
m27_274 [label="i++", span="457-457", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="ProcessingStateFacts.cs"];
m27_275 [label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", span="451-451", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="ProcessingStateFacts.cs"];
m27_19 [label="Entry HangFire.Tests.States.StateSteps.GivenTheEnqueuedState()", span="76-76", cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueuedState()", file="ProcessingStateFacts.cs"];
m27_20 [label="_state = new EnqueuedState\r\n            {\r\n                Reason = ''SomeReason''\r\n            }", span="78-81", cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueuedState()", file="ProcessingStateFacts.cs"];
m27_21 [label="Exit HangFire.Tests.States.StateSteps.GivenTheEnqueuedState()", span="76-76", cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueuedState()", file="ProcessingStateFacts.cs"];
m27_22 [label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="25-25", cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="ProcessingStateFacts.cs"];
m27_23 [label="Entry HangFire.Tests.States.StateSteps.GivenAState(string)", span="85-85", cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="ProcessingStateFacts.cs"];
m27_24 [label="var mock = new Mock<JobState>()", span="87-87", cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="ProcessingStateFacts.cs"];
m27_176 [label="Entry HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="310-310", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="ProcessingStateFacts.cs"];
m27_177 [label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:processing'', JobSteps.DefaultJobId)", span="312-312", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="ProcessingStateFacts.cs"];
m27_178 [label="var timestamp = JobHelper.FromTimestamp((long)score)", span="313-313", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="ProcessingStateFacts.cs"];
m27_179 [label="Assert.IsTrue(timestamp > DateTime.UtcNow.AddSeconds(-1))", span="315-315", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="ProcessingStateFacts.cs"];
m27_180 [label="Assert.IsTrue(timestamp < DateTime.UtcNow.AddSeconds(1))", span="316-316", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="ProcessingStateFacts.cs"];
m27_181 [label="Exit HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="310-310", cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="ProcessingStateFacts.cs"];
m27_0 [label="Entry HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="42-42", cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="ProcessingStateFacts.cs"];
m27_1 [label="_state = new SucceededState { Reason = ''SomeReason'' }", span="44-44", cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="ProcessingStateFacts.cs"];
m27_2 [label="Exit HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="42-42", cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="ProcessingStateFacts.cs"];
m27_160 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="285-285", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="ProcessingStateFacts.cs"];
m27_161 [label="Assert.AreEqual(1, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="287-287", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="ProcessingStateFacts.cs"];
m27_162 [label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:failed'', JobSteps.DefaultJobId))", span="288-288", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="ProcessingStateFacts.cs"];
m27_163 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="285-285", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="ProcessingStateFacts.cs"];
m27_114 [label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", span="202-202", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="ProcessingStateFacts.cs"];
m27_115 [label="var stateMachine = new StateMachine(\r\n                new RedisConnection(Redis.Storage, Redis.Client), _handlers, _filters)", span="205-206", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="ProcessingStateFacts.cs"];
m27_116 [label="stateMachine.ChangeState(JobSteps.DefaultJobId, _stateMocks[state].Object, allowedState)", span="207-207", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="ProcessingStateFacts.cs"];
m27_117 [label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", span="202-202", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="ProcessingStateFacts.cs"];
m27_31 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ProcessingStateFacts.cs"];
m27_185 [label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="320-320", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="ProcessingStateFacts.cs"];
m27_186 [label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="322-322", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="ProcessingStateFacts.cs"];
m27_187 [label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:schedule'', JobSteps.DefaultJobId)", span="323-323", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="ProcessingStateFacts.cs"];
m27_188 [label="var timestamp = JobHelper.FromTimestamp((long) score)", span="324-324", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="ProcessingStateFacts.cs"];
m27_189 [label="Assert.IsTrue(timestamp >= DateTime.UtcNow.Date.AddDays(1))", span="326-326", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="ProcessingStateFacts.cs"];
m27_190 [label="Assert.IsTrue(timestamp < DateTime.UtcNow.Date.AddDays(2))", span="327-327", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="ProcessingStateFacts.cs"];
m27_191 [label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="320-320", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="ProcessingStateFacts.cs"];
m27_121 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="ProcessingStateFacts.cs"];
m27_175 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="ProcessingStateFacts.cs"];
m27_72 [label="Entry HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", span="123-123", cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="ProcessingStateFacts.cs"];
m27_73 [label="Given(String.Format(''a '{0}' state'', state))", span="125-125", cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="ProcessingStateFacts.cs"];
m27_74 [label="_filters.Add(\r\n                new TestStateChangingFilter(name, _stateChangingResults, _stateMocks[state].Object))", span="127-128", cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="ProcessingStateFacts.cs"];
m27_75 [label="Exit HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", span="123-123", cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="ProcessingStateFacts.cs"];
m27_159 [label="Entry HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", span="10-10", cluster="HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateFacts.cs"];
m27_221 [label="Entry HangFire.Tests.States.StateSteps.ThenTheStateWasNotAppliedToTheJob(string)", span="380-380", cluster="HangFire.Tests.States.StateSteps.ThenTheStateWasNotAppliedToTheJob(string)", file="ProcessingStateFacts.cs"];
m27_222 [label="Assert.Inconclusive(''Re-write this test for the corresponding handler'')", span="385-385", cluster="HangFire.Tests.States.StateSteps.ThenTheStateWasNotAppliedToTheJob(string)", file="ProcessingStateFacts.cs"];
m27_223 [label="Exit HangFire.Tests.States.StateSteps.ThenTheStateWasNotAppliedToTheJob(string)", span="380-380", cluster="HangFire.Tests.States.StateSteps.ThenTheStateWasNotAppliedToTheJob(string)", file="ProcessingStateFacts.cs"];
m27_113 [label="Entry Unk.ChangeState", span="", cluster="Unk.ChangeState", file="ProcessingStateFacts.cs"];
m27_231 [label="Entry Unk.Unapply", span="", cluster="Unk.Unapply", file="ProcessingStateFacts.cs"];
m27_126 [label="Entry Unk.ForEach", span="", cluster="Unk.ForEach", file="ProcessingStateFacts.cs"];
m27_217 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="ProcessingStateFacts.cs"];
m27_48 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="ProcessingStateFacts.cs"];
m27_192 [label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="331-331", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="ProcessingStateFacts.cs"];
m27_193 [label="Assert.IsFalse(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="333-333", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="ProcessingStateFacts.cs"];
m27_194 [label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="331-331", cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="ProcessingStateFacts.cs"];
m27_90 [label="Entry HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", span="27-27", cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="ProcessingStateFacts.cs"];
m27_257 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="ProcessingStateFacts.cs"];
m27_241 [label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", span="404-404", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="ProcessingStateFacts.cs"];
m27_242 [label="var entry = Redis.Client.RemoveStartFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="406-407", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="ProcessingStateFacts.cs"];
m27_243 [label="Assert.IsNotNull(entry)", span="408-408", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="ProcessingStateFacts.cs"];
m27_244 [label="var history = JobHelper.FromJson<Dictionary<string, string>>(entry)", span="410-410", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="ProcessingStateFacts.cs"];
m27_245 [label="Assert.IsNotNull(history, entry)", span="411-411", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="ProcessingStateFacts.cs"];
m27_247 [label="Assert.IsTrue(history.ContainsKey(property.Key))", span="415-415", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="ProcessingStateFacts.cs"];
m27_248 [label="Assert.AreEqual(property.Value, history[property.Key])", span="416-416", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="ProcessingStateFacts.cs"];
m27_246 [label=_stateProperties, span="413-413", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="ProcessingStateFacts.cs"];
m27_249 [label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", span="404-404", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="ProcessingStateFacts.cs"];
m27_8 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ProcessingStateFacts.cs"];
m27_9 [label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="27-27", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="ProcessingStateFacts.cs"];
m27_10 [label="Entry HangFire.Tests.States.StateSteps.GivenTheProcessingState()", span="58-58", cluster="HangFire.Tests.States.StateSteps.GivenTheProcessingState()", file="ProcessingStateFacts.cs"];
m27_144 [label="Entry HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="252-252", cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="ProcessingStateFacts.cs"];
m27_145 [label="var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="254-259", cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="ProcessingStateFacts.cs"];
m27_146 [label="keys.ForEach(x =>\r\n            {\r\n                var ttl = Redis.Client.GetTimeToLive(x);\r\n                Assert.IsTrue(\r\n                    ttl.Seconds == -1,\r\n                    ''TTL for the '{0}' key is '{1}''', x, ttl);\r\n            })", span="261-267", cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="ProcessingStateFacts.cs"];
m27_147 [label="Exit HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="252-252", cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="ProcessingStateFacts.cs"];
m27_14 [label="Entry HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", span="67-67", cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", file="ProcessingStateFacts.cs"];
m27_15 [label="_state = new ScheduledState(DateTime.UtcNow.AddDays(1))\r\n            {\r\n                Reason = ''SomeReason''\r\n            }", span="69-72", cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", file="ProcessingStateFacts.cs"];
m27_16 [label="Exit HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", span="67-67", cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", file="ProcessingStateFacts.cs"];
m27_17 [label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="27-27", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ProcessingStateFacts.cs"];
m27_143 [label="Entry Unk.PopItemFromList", span="", cluster="Unk.PopItemFromList", file="ProcessingStateFacts.cs"];
m27_158 [label="Entry HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", span="26-26", cluster="HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", file="ProcessingStateFacts.cs"];
m27_76 [label="Entry TestStateChangingFilter.cstr", span="", cluster="TestStateChangingFilter.cstr", file="ProcessingStateFacts.cs"];
m27_7 [label="Exit HangFire.Tests.States.StateSteps.GivenTheFailedState()", span="48-48", cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="ProcessingStateFacts.cs"];
m27_13 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_29 [label="Assert.False(state.IsFinal)", span="46-46", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="ProcessingStateFacts.cs", color=green, community=0];
m27_250 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="ProcessingStateFacts.cs"];
m27_118 [label="Entry HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="211-211", cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="ProcessingStateFacts.cs"];
m27_119 [label="Assert.AreEqual(name, _state.StateName)", span="213-213", cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="ProcessingStateFacts.cs"];
m27_120 [label="Exit HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="211-211", cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="ProcessingStateFacts.cs"];
m27_67 [label="Entry HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", span="117-117", cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", file="ProcessingStateFacts.cs"];
m27_68 [label="_filters.Add(new TestStateChangingFilter(name, _stateChangingResults))", span="119-119", cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", file="ProcessingStateFacts.cs"];
m27_69 [label="Exit HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", span="117-117", cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", file="ProcessingStateFacts.cs"];
m27_11 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_12 [label="new ProcessingState(String.Empty)", span="20-20", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_18 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ProcessingStateFacts.cs"];
m27_87 [label="Entry RedisWriteOnlyTransaction.cstr", span="", cluster="RedisWriteOnlyTransaction.cstr", file="ProcessingStateFacts.cs"];
m27_41 [label="Entry Unk.GetProperties", span="", cluster="Unk.GetProperties", file="ProcessingStateFacts.cs"];
m27_224 [label="Entry HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", span="389-389", cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="ProcessingStateFacts.cs"];
m27_225 [label="_oldStateDescriptorMock.Verify(\r\n                x => x.Unapply(It.Is<StateApplyingContext>(y => y.JobId == JobSteps.DefaultJobId)))", span="391-392", cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="ProcessingStateFacts.cs"];
m27_226 [label="Exit HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", span="389-389", cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="ProcessingStateFacts.cs"];
m27_256 [label="Exit HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", span="421-421", cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="ProcessingStateFacts.cs"];
m27_251 [label="Entry HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", span="421-421", cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="ProcessingStateFacts.cs"];
m27_252 [label="var stateEntry = Redis.Client.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId))", span="423-424", cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="ProcessingStateFacts.cs"];
m27_253 [label=_stateProperties, span="426-426", cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="ProcessingStateFacts.cs"];
m27_254 [label="Assert.IsTrue(stateEntry.ContainsKey(property.Key))", span="428-428", cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="ProcessingStateFacts.cs"];
m27_255 [label="Assert.AreEqual(property.Value, stateEntry[property.Key])", span="429-429", cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="ProcessingStateFacts.cs"];
m27_25 [label="mock.Setup(x => x.StateName).Returns(state)", span="88-88", cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="ProcessingStateFacts.cs"];
m27_81 [label="Entry HangFire.Tests.States.StateSteps.WhenIApplyIt()", span="138-138", cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="ProcessingStateFacts.cs"];
m27_82 [label="var transaction = \r\n                new RedisWriteOnlyTransaction(Redis.Client.CreateTransaction())", span="140-141", cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="ProcessingStateFacts.cs"];
m27_83 [label="var context = new StateApplyingContext(\r\n                    new StateContext(JobSteps.DefaultJobId, _defaultData),\r\n                    transaction)", span="143-145", cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="ProcessingStateFacts.cs"];
m27_85 [label="transaction.Commit()", span="150-150", cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="ProcessingStateFacts.cs"];
m27_84 [label="Assert.Inconclusive(''Re-write this test for the corresponding handler'')", span="148-148", cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="ProcessingStateFacts.cs"];
m27_86 [label="Exit HangFire.Tests.States.StateSteps.WhenIApplyIt()", span="138-138", cluster="HangFire.Tests.States.StateSteps.WhenIApplyIt()", file="ProcessingStateFacts.cs"];
m27_91 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="32-32", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="ProcessingStateFacts.cs"];
m27_258 [label="Entry HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", span="434-434", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="ProcessingStateFacts.cs"];
m27_259 [label="Assert.AreEqual(table.RowCount, _stateChangingResults.Count)", span="436-436", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="ProcessingStateFacts.cs"];
m27_261 [label="i < table.RowCount", span="438-438", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="ProcessingStateFacts.cs"];
m27_262 [label="Assert.AreEqual(table.Rows[i][''Filter''], _stateChangingResults[i])", span="440-440", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="ProcessingStateFacts.cs"];
m27_260 [label="var i = 0", span="438-438", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="ProcessingStateFacts.cs"];
m27_263 [label="i++", span="438-438", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="ProcessingStateFacts.cs"];
m27_264 [label="Exit HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", span="434-434", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="ProcessingStateFacts.cs"];
m27_34 [label="Entry lambda expression", span="88-88", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_37 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_35 [label="x.StateName", span="88-88", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_36 [label="Exit lambda expression", span="88-88", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_38 [label="x.GetProperties(It.IsAny<JobMethod>())", span="89-89", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_39 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_50 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_53 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_56 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_51 [label="x[''Name'']", span="100-100", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_52 [label="Exit lambda expression", span="100-100", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_54 [label="x[''Value'']", span="100-100", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_55 [label="Exit lambda expression", span="100-100", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_57 [label="x.GetProperties(It.IsAny<JobMethod>())", span="101-101", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_58 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_127 [label="Entry lambda expression", span="226-232", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_128 [label="var ttl = Redis.Client.GetTimeToLive(x)", span="228-228", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_129 [label="Assert.IsTrue(\r\n                        ttl.TotalSeconds > 0,\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl)", span="229-231", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_130 [label="Exit lambda expression", span="226-232", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_148 [label="Entry lambda expression", span="261-267", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_149 [label="var ttl = Redis.Client.GetTimeToLive(x)", span="263-263", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_150 [label="Assert.IsTrue(\r\n                    ttl.Seconds == -1,\r\n                    ''TTL for the '{0}' key is '{1}''', x, ttl)", span="264-266", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_151 [label="Exit lambda expression", span="261-267", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_228 [label="Entry lambda expression", span="392-392", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_229 [label="x.Unapply(It.Is<StateApplyingContext>(y => y.JobId == JobSteps.DefaultJobId))", span="392-392", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_230 [label="Exit lambda expression", span="392-392", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_232 [label="Entry lambda expression", span="392-392", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_233 [label="y.JobId == JobSteps.DefaultJobId", span="392-392", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_234 [label="Exit lambda expression", span="392-392", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_238 [label="Entry lambda expression", span="399-399", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_239 [label="x.Unapply(It.IsAny<StateApplyingContext>())", span="399-399", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_240 [label="Exit lambda expression", span="399-399", cluster="lambda expression", file="ProcessingStateFacts.cs"];
m27_5 [label="_failedException = new InvalidOperationException(''Hello'')", span="50-50", cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="ProcessingStateFacts.cs"];
m27_4 [label="Entry HangFire.Tests.States.StateSteps.GivenTheFailedState()", span="48-48", cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="ProcessingStateFacts.cs"];
m27_6 [label="_state = new FailedState(_failedException)\r\n            {\r\n                Reason = ''SomeReason''\r\n            }", span="51-54", cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="ProcessingStateFacts.cs"];
m27_198 [label="Entry Unk.SetContainsItem", span="", cluster="Unk.SetContainsItem", file="ProcessingStateFacts.cs"];
m27_59 [label="Entry HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", span="106-106", cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="ProcessingStateFacts.cs"];
m27_60 [label="Given(''a job'')", span="108-108", cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="ProcessingStateFacts.cs"];
m27_61 [label="Given(''its state is Old'')", span="109-109", cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="ProcessingStateFacts.cs"];
m27_62 [label="_oldStateDescriptorMock = new Mock<JobStateHandler>()", span="111-111", cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="ProcessingStateFacts.cs"];
m27_63 [label="Assert.Inconclusive(''Rewrite'')", span="113-113", cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="ProcessingStateFacts.cs"];
m27_64 [label="Exit HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", span="106-106", cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="ProcessingStateFacts.cs"];
m27_70 [label="Entry HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", span="14-14", cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="ProcessingStateFacts.cs"];
m27_278 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="ProcessingStateFacts.cs"];
m27_172 [label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="304-304", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="ProcessingStateFacts.cs"];
m27_173 [label="Assert.IsFalse(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="306-306", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="ProcessingStateFacts.cs"];
m27_174 [label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="304-304", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="ProcessingStateFacts.cs"];
m27_102 [label="Entry HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", span="15-15", cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="ProcessingStateFacts.cs"];
m27_33 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="ProcessingStateFacts.cs"];
m27_88 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="ProcessingStateFacts.cs"];
m27_101 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="ProcessingStateFacts.cs"];
m27_104 [label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", span="185-185", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", file="ProcessingStateFacts.cs"];
m27_105 [label="When(String.Format(\r\n                ''I change the state of the '{0}' job to the '{1}''',\r\n                JobSteps.DefaultJobId,\r\n                state))", span="187-190", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", file="ProcessingStateFacts.cs"];
m27_106 [label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", span="185-185", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", file="ProcessingStateFacts.cs"];
m27_131 [label="Entry Unk.GetTimeToLive", span="", cluster="Unk.GetTimeToLive", file="ProcessingStateFacts.cs"];
m27_71 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ProcessingStateFacts.cs"];
m27_77 [label="Entry HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", span="132-132", cluster="HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", file="ProcessingStateFacts.cs"];
m27_78 [label="_filters.Add(new TestStateChangedFilter(name, _stateAppliedResults))", span="134-134", cluster="HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", file="ProcessingStateFacts.cs"];
m27_79 [label="Exit HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", span="132-132", cluster="HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", file="ProcessingStateFacts.cs"];
m27_42 [label="Entry HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", span="96-96", cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="ProcessingStateFacts.cs"];
m27_43 [label="Given(String.Format(''a '{0}' state'', state))", span="98-98", cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="ProcessingStateFacts.cs"];
m27_44 [label="_stateProperties = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="100-100", cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="ProcessingStateFacts.cs"];
m27_45 [label="_stateMocks[state].Setup(x => x.GetProperties(It.IsAny<JobMethod>()))\r\n                .Returns(_stateProperties)", span="101-102", cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="ProcessingStateFacts.cs"];
m27_46 [label="Exit HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", span="96-96", cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="ProcessingStateFacts.cs"];
m27_235 [label="Entry HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", span="396-396", cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="ProcessingStateFacts.cs"];
m27_236 [label="_oldStateDescriptorMock.Verify(\r\n                x => x.Unapply(It.IsAny<StateApplyingContext>()),\r\n                Times.Never)", span="398-400", cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="ProcessingStateFacts.cs"];
m27_237 [label="Exit HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", span="396-396", cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="ProcessingStateFacts.cs"];
m27_216 [label="Entry Unk.RemoveStartFromList", span="", cluster="Unk.RemoveStartFromList", file="ProcessingStateFacts.cs"];
m27_199 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="343-343", cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="ProcessingStateFacts.cs"];
m27_200 [label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId))", span="345-345", cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="ProcessingStateFacts.cs"];
m27_201 [label="Assert.AreEqual(state, job[''State''])", span="346-346", cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="ProcessingStateFacts.cs"];
m27_202 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="343-343", cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="ProcessingStateFacts.cs"];
m27_65 [label="Entry Mock<JobStateHandler>.cstr", span="", cluster="Mock<JobStateHandler>.cstr", file="ProcessingStateFacts.cs"];
m27_133 [label="Entry HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="236-236", cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="ProcessingStateFacts.cs"];
m27_134 [label="Assert.AreEqual(\r\n                changeType == ''increase'' ? ''1'' : ''0'',\r\n                Redis.Client.GetValue(String.Format(''hangfire:stats:succeeded'')))", span="238-240", cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="ProcessingStateFacts.cs"];
m27_135 [label="Exit HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="236-236", cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="ProcessingStateFacts.cs"];
m27_80 [label="Entry HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", span="14-14", cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="ProcessingStateFacts.cs"];
m27_265 [label="Entry HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", span="445-445", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="ProcessingStateFacts.cs"];
m27_266 [label="Assert.AreEqual(0, _stateChangingResults.Count)", span="447-447", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="ProcessingStateFacts.cs"];
m27_267 [label="Exit HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", span="445-445", cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="ProcessingStateFacts.cs"];
m27_27 [label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", span="42-42", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="ProcessingStateFacts.cs"];
m27_26 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ProcessingStateFacts.cs"];
m27_28 [label="var state = new ProcessingState(''server'')", span="44-44", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="ProcessingStateFacts.cs", color=green, community=0];
m27_30 [label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", span="42-42", cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="ProcessingStateFacts.cs"];
m27_218 [label="Entry HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", span="371-371", cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", file="ProcessingStateFacts.cs"];
m27_219 [label="Assert.Inconclusive(''Re-write this test for the corresponding handler'')", span="376-376", cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", file="ProcessingStateFacts.cs"];
m27_220 [label="Exit HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", span="371-371", cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", file="ProcessingStateFacts.cs"];
m27_195 [label="Entry HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="337-337", cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="ProcessingStateFacts.cs"];
m27_196 [label="Assert.IsTrue(Redis.Client.SetContainsItem(''hangfire:queues'', queue))", span="339-339", cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="ProcessingStateFacts.cs"];
m27_197 [label="Exit HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="337-337", cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="ProcessingStateFacts.cs"];
m27_169 [label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="298-298", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="ProcessingStateFacts.cs"];
m27_170 [label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="300-300", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="ProcessingStateFacts.cs"];
m27_171 [label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="298-298", cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="ProcessingStateFacts.cs"];
m27_164 [label="Entry Unk.GetSortedSetCount", span="", cluster="Unk.GetSortedSetCount", file="ProcessingStateFacts.cs"];
m27_227 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ProcessingStateFacts.cs"];
m27_138 [label="Entry HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="244-244", cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="ProcessingStateFacts.cs"];
m27_139 [label="Assert.AreEqual(1, Redis.Client.GetListCount(''hangfire:succeeded''))", span="246-246", cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="ProcessingStateFacts.cs"];
m27_140 [label="Assert.AreEqual(JobSteps.DefaultJobId, Redis.Client.PopItemFromList(\r\n                ''hangfire:succeeded''))", span="247-248", cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="ProcessingStateFacts.cs"];
m27_141 [label="Exit HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="244-244", cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="ProcessingStateFacts.cs"];
m27_166 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="292-292", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="ProcessingStateFacts.cs"];
m27_167 [label="Assert.AreEqual(0, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="294-294", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="ProcessingStateFacts.cs"];
m27_168 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="292-292", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="ProcessingStateFacts.cs"];
m27_207 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="350-350", cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="ProcessingStateFacts.cs"];
m27_204 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="350-350", cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="ProcessingStateFacts.cs"];
m27_205 [label="var stateEntry = Redis.Client.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId))", span="352-353", cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="ProcessingStateFacts.cs"];
m27_206 [label="DictionaryAssert.ContainsFollowingItems(table, stateEntry)", span="354-354", cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="ProcessingStateFacts.cs"];
m27_165 [label="Entry Unk.SortedSetContainsItem", span="", cluster="Unk.SortedSetContainsItem", file="ProcessingStateFacts.cs"];
m27_184 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="ProcessingStateFacts.cs"];
m27_136 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="ProcessingStateFacts.cs"];
m27_122 [label="Entry HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="217-217", cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="ProcessingStateFacts.cs"];
m27_123 [label="var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="219-224", cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="ProcessingStateFacts.cs"];
m27_124 [label="keys.ForEach(x =>\r\n                {\r\n                    var ttl = Redis.Client.GetTimeToLive(x);\r\n                    Assert.IsTrue(\r\n                        ttl.TotalSeconds > 0,\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl);\r\n                })", span="226-232", cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="ProcessingStateFacts.cs"];
m27_125 [label="Exit HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="217-217", cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="ProcessingStateFacts.cs"];
m27_49 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="ProcessingStateFacts.cs"];
m27_132 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="ProcessingStateFacts.cs"];
m27_203 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="ProcessingStateFacts.cs"];
m27_183 [label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="41-41", cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="ProcessingStateFacts.cs"];
m27_47 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ProcessingStateFacts.cs"];
m27_215 [label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="358-358", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="ProcessingStateFacts.cs"];
m27_209 [label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="358-358", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="ProcessingStateFacts.cs"];
m27_210 [label="var entry = Redis.Client.RemoveStartFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="360-361", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="ProcessingStateFacts.cs"];
m27_214 [label="DictionaryAssert.ContainsFollowingItems(table, history)", span="367-367", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="ProcessingStateFacts.cs"];
m27_211 [label="Assert.IsNotNull(entry)", span="362-362", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="ProcessingStateFacts.cs"];
m27_212 [label="var history = JobHelper.FromJson<Dictionary<string, string>>(entry)", span="364-364", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="ProcessingStateFacts.cs"];
m27_213 [label="Assert.IsNotNull(history, entry)", span="365-365", cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="ProcessingStateFacts.cs"];
m27_66 [label="Entry Unk.Inconclusive", span="", cluster="Unk.Inconclusive", file="ProcessingStateFacts.cs"];
m27_3 [label="Entry HangFire.States.SucceededState.SucceededState()", span="23-23", cluster="HangFire.States.SucceededState.SucceededState()", file="ProcessingStateFacts.cs"];
m27_40 [label="Entry Unk.>", span="", cluster="Unk.>", file="ProcessingStateFacts.cs"];
m27_182 [label="Entry Unk.GetItemScoreInSortedSet", span="", cluster="Unk.GetItemScoreInSortedSet", file="ProcessingStateFacts.cs"];
m27_142 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="ProcessingStateFacts.cs"];
m27_32 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ProcessingStateFacts.cs"];
m27_108 [label="Entry Unk.When", span="", cluster="Unk.When", file="ProcessingStateFacts.cs"];
m27_152 [label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="271-271", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="ProcessingStateFacts.cs"];
m27_153 [label="Assert.AreEqual(0, Redis.Client.GetListCount(''hangfire:succeeded''))", span="273-273", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="ProcessingStateFacts.cs"];
m27_154 [label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="271-271", cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="ProcessingStateFacts.cs"];
m27_89 [label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ProcessingStateFacts.cs"];
m27_155 [label="Entry HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="277-277", cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="ProcessingStateFacts.cs"];
m27_156 [label="DictionaryAssert.ContainsFollowingItems(\r\n                table,\r\n                _state.GetProperties(_defaultData))", span="279-281", cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="ProcessingStateFacts.cs"];
m27_157 [label="Exit HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="277-277", cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="ProcessingStateFacts.cs"];
m27_276 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="ProcessingStateFacts.cs"];
m27_109 [label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", span="194-194", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="ProcessingStateFacts.cs"];
m27_110 [label="var stateMachine = new StateMachine(\r\n                new RedisConnection(Redis.Storage, Redis.Client), _handlers, _filters)", span="196-197", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="ProcessingStateFacts.cs"];
m27_111 [label="stateMachine.ChangeState(jobId, _stateMocks[state].Object)", span="198-198", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="ProcessingStateFacts.cs"];
m27_112 [label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", span="194-194", cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="ProcessingStateFacts.cs"];
m27_277 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ProcessingStateFacts.cs"];
m27_103 [label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ProcessingStateFacts.cs"];
m27_97 [label="Entry HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="177-177", cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="ProcessingStateFacts.cs"];
m27_98 [label="var stateMachine = new StateMachine(\r\n                new RedisConnection(Redis.Storage, Redis.Client), _handlers, _filters)", span="179-180", cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="ProcessingStateFacts.cs"];
m27_99 [label="stateMachine.ChangeState(JobSteps.DefaultJobId, _state)", span="181-181", cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="ProcessingStateFacts.cs"];
m27_100 [label="Exit HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="177-177", cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="ProcessingStateFacts.cs"];
m27_137 [label="Entry Unk.GetValue", span="", cluster="Unk.GetValue", file="ProcessingStateFacts.cs"];
m27_92 [label="Entry HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", span="155-155", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="ProcessingStateFacts.cs"];
m27_93 [label="var transaction =\r\n                new RedisWriteOnlyTransaction(Redis.Client.CreateTransaction())", span="157-158", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="ProcessingStateFacts.cs"];
m27_94 [label="Assert.Inconclusive(''Rewrite it.'')", span="170-170", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="ProcessingStateFacts.cs"];
m27_95 [label="transaction.Commit()", span="172-172", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="ProcessingStateFacts.cs"];
m27_96 [label="Exit HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", span="155-155", cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="ProcessingStateFacts.cs"];
m27_208 [label="Entry Unk.ContainsFollowingItems", span="", cluster="Unk.ContainsFollowingItems", file="ProcessingStateFacts.cs"];
m27_279 [label="Entry HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", span="464-464", cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="ProcessingStateFacts.cs"];
m27_280 [label="Assert.AreEqual(table.RowCount, _stateAppliedResults.Count)", span="466-466", cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="ProcessingStateFacts.cs"];
m27_282 [label="i < table.RowCount", span="468-468", cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="ProcessingStateFacts.cs"];
m27_283 [label="Assert.AreEqual(table.Rows[i][''Method''], _stateAppliedResults[i])", span="470-470", cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="ProcessingStateFacts.cs"];
m27_281 [label="var i = 0", span="468-468", cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="ProcessingStateFacts.cs"];
m27_284 [label="i++", span="468-468", cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="ProcessingStateFacts.cs"];
m27_285 [label="Exit HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", span="464-464", cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="ProcessingStateFacts.cs"];
m27_286 [label="HangFire.Tests.States.StateSteps", span="", file="ProcessingStateFacts.cs"];
m29_4 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="RedisStorageOptions.cs"];
m29_0 [label="Entry HangFire.Redis.RedisStorageOptions.RedisStorageOptions()", span="22-22", cluster="HangFire.Redis.RedisStorageOptions.RedisStorageOptions()", file="RedisStorageOptions.cs"];
m29_1 [label="PollInterval = TimeSpan.FromSeconds(15)", span="24-24", cluster="HangFire.Redis.RedisStorageOptions.RedisStorageOptions()", color=red, community=0, file="RedisStorageOptions.cs"];
m29_2 [label="ConnectionPoolSize = 50", span="25-25", cluster="HangFire.Redis.RedisStorageOptions.RedisStorageOptions()", file="RedisStorageOptions.cs"];
m29_3 [label="Exit HangFire.Redis.RedisStorageOptions.RedisStorageOptions()", span="22-22", cluster="HangFire.Redis.RedisStorageOptions.RedisStorageOptions()", file="RedisStorageOptions.cs"];
m29_5 [label="HangFire.Redis.RedisStorageOptions", span="", file="RedisStorageOptions.cs"];
m30_6 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisWriteOnlyTransaction.cs"];
m30_24 [label="Entry Unk.EnqueueItemOnList", span="", cluster="Unk.EnqueueItemOnList", file="RedisWriteOnlyTransaction.cs"];
m30_8 [label="Entry HangFire.States.EnqueuedState.Apply(IRedisTransaction)", span="29-29", cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs"];
m30_9 [label="transaction == null", span="31-31", cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs"];
m30_11 [label="transaction.QueueCommand(x => x.AddItemToSet(''hangfire:queues'', Queue))", span="33-33", cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs"];
m30_12 [label="transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', Queue), JobId))", span="34-35", cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs"];
m30_10 [label="throw new ArgumentNullException(''transaction'');", span="31-31", cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs"];
m30_13 [label="Exit HangFire.States.EnqueuedState.Apply(IRedisTransaction)", span="29-29", cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs"];
m30_23 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RedisWriteOnlyTransaction.cs"];
m30_0 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="RedisWriteOnlyTransaction.cs"];
m30_1 [label="Queue = queue", span="13-13", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="RedisWriteOnlyTransaction.cs"];
m30_2 [label="Exit HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="RedisWriteOnlyTransaction.cs"];
m30_15 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="RedisWriteOnlyTransaction.cs"];
m30_3 [label="Entry HangFire.States.EnqueuedState.GetProperties()", span="20-20", cluster="HangFire.States.EnqueuedState.GetProperties()", file="RedisWriteOnlyTransaction.cs"];
m30_4 [label="return new Dictionary<string, string>\r\n                {\r\n                    { ''EnqueuedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''Queue'', Queue }\r\n                };", span="22-26", cluster="HangFire.States.EnqueuedState.GetProperties()", file="RedisWriteOnlyTransaction.cs"];
m30_5 [label="Exit HangFire.States.EnqueuedState.GetProperties()", span="20-20", cluster="HangFire.States.EnqueuedState.GetProperties()", file="RedisWriteOnlyTransaction.cs"];
m30_19 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="RedisWriteOnlyTransaction.cs"];
m30_20 [label="Entry lambda expression", span="34-35", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m30_16 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m30_17 [label="x.AddItemToSet(''hangfire:queues'', Queue)", span="33-33", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m30_18 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m30_21 [label="x.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', Queue), JobId)", span="34-35", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m30_22 [label="Exit lambda expression", span="34-35", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m30_7 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="RedisWriteOnlyTransaction.cs"];
m30_25 [label="HangFire.States.EnqueuedState", span="", file="RedisWriteOnlyTransaction.cs"];
m31_64 [label="Entry System.Random.Next(int, int)", span="0-0", cluster="System.Random.Next(int, int)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_60 [label="Entry System.Random.Random(int)", span="0-0", cluster="System.Random.Random(int)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_41 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="RedisWriteOnlyTransactionFacts.cs"];
m31_10 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_63 [label="Entry System.Math.Pow(double, double)", span="0-0", cluster="System.Math.Pow(double, double)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_32 [label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22", cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_33 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_34 [label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", span="95-95", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_42 [label=i, span="97-97", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", color=green, community=0, file="RedisWriteOnlyTransactionFacts.cs"];
m31_43 [label=0, span="99-99", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_45 [label=1, span="101-101", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_47 [label=2, span="103-103", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_44 [label="return LogLevel.Debug;", span="100-100", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_46 [label="return LogLevel.Info;", span="102-102", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_48 [label="return LogLevel.Warn;", span="104-104", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_50 [label="return LogLevel.Error;", span="107-107", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_49 [label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", span="95-95", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_66 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_12 [label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", span="52-52", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_13 [label="ExecuteWithAutomaticRetry(cancellationToken)", span="54-54", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_14 [label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", span="52-52", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_0 [label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", span="31-31", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_1 [label="innerComponent == null", span="33-33", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_3 [label="_innerComponent = innerComponent", span="35-35", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_2 [label="throw new ArgumentNullException(''innerComponent'');", span="33-33", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_4 [label="_logger = LogProvider.GetLogger(_innerComponent.GetType())", span="36-36", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_5 [label="MaxRetryAttempts = DefaultMaxRetryAttempts", span="38-38", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_6 [label="MaxAttemptDelay = DefaultMaxAttemptDelay", span="39-39", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_7 [label="DelayCallback = GetBackOffMultiplier", span="40-40", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_8 [label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", span="31-31", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_37 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_35 [label="Entry Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="54-54", cluster="Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_15 [label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", span="57-57", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_16 [label="var i = 0", span="59-59", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_18 [label="_innerComponent.Execute(cancellationToken)", span="63-63", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_28 [label="cancellationToken.WaitHandle.WaitOne(nextTry)", span="89-89", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_17 [label="i <= MaxRetryAttempts", span="59-59", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_23 [label="i >= MaxRetryAttempts - 1", span="73-73", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_25 [label="var nextTry = DelayCallback(i)", span="75-75", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_26 [label="var logLevel = GetLogLevel(i)", span="76-76", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_27 [label="_logger.Log(\r\n                        logLevel,\r\n                        () => String.Format(\r\n                            ''Error occurred during execution of '{0}' component. Execution will be retried (attempt {1} of {2}) in {3} seconds.'',\r\n                            _innerComponent,\r\n                            i + 1,\r\n                            MaxRetryAttempts,\r\n                            nextTry),\r\n                        ex)", span="78-86", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_30 [label="i++", span="59-59", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_19 [label="return;", span="64-64", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_20 [label=OperationCanceledException, span="66-66", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_21 [label="throw;", span="68-68", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_22 [label=Exception, span="70-70", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=green, community=0, file="RedisWriteOnlyTransactionFacts.cs"];
m31_24 [label="throw;", span="73-73", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_29 [label="cancellationToken.ThrowIfCancellationRequested()", span="90-90", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_31 [label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", span="57-57", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_38 [label="Entry lambda expression", span="80-85", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_39 [label="String.Format(\r\n                            ''Error occurred during execution of '{0}' component. Execution will be retried (attempt {1} of {2}) in {3} seconds.'',\r\n                            _innerComponent,\r\n                            i + 1,\r\n                            MaxRetryAttempts,\r\n                            nextTry)", span="80-85", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_40 [label="Exit lambda expression", span="80-85", cluster="lambda expression", file="RedisWriteOnlyTransactionFacts.cs"];
m31_65 [label="Entry System.Math.Min(double, double)", span="0-0", cluster="System.Math.Min(double, double)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_51 [label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", span="110-110", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_52 [label="return _innerComponent.ToString();", span="112-112", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_53 [label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", span="110-110", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_11 [label="Entry Hangfire.Logging.LogProvider.GetLogger(System.Type)", span="353-353", cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_61 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_62 [label="Entry System.Guid.GetHashCode()", span="0-0", cluster="System.Guid.GetHashCode()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_36 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_55 [label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", span="115-115", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_56 [label="var rand = new Random(Guid.NewGuid().GetHashCode())", span="118-118", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_57 [label="var nextTry = rand.Next(\r\n                (int)Math.Pow(retryAttemptNumber, 2), (int)Math.Pow(retryAttemptNumber + 1, 2) + 1)", span="119-120", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_58 [label="return TimeSpan.FromSeconds(Math.Min(nextTry, MaxAttemptDelay.TotalSeconds));", span="122-122", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_59 [label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", span="115-115", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="RedisWriteOnlyTransactionFacts.cs"];
m31_54 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="RedisWriteOnlyTransactionFacts.cs"];
m31_67 [label="Hangfire.Server.AutomaticRetryServerComponentWrapper", span="", file="RedisWriteOnlyTransactionFacts.cs"];
m31_68 [label=i, span="", file="RedisWriteOnlyTransactionFacts.cs"];
m31_69 [label=nextTry, span="", file="RedisWriteOnlyTransactionFacts.cs"];
m33_23 [label="Entry HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenJobCreatorIsNull()", span="43-43", cluster="HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenJobCreatorIsNull()", file="ScheduledState.cs"];
m33_24 [label="new JobClient(_connectionMock.Object, null)", span="46-46", cluster="HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenJobCreatorIsNull()", file="ScheduledState.cs"];
m33_25 [label="Exit HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenJobCreatorIsNull()", span="43-43", cluster="HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenJobCreatorIsNull()", file="ScheduledState.cs"];
m33_40 [label="Entry HangFire.Tests.Client.JobClientTests.Method()", span="77-77", cluster="HangFire.Tests.Client.JobClientTests.Method()", file="ScheduledState.cs"];
m33_41 [label="Exit HangFire.Tests.Client.JobClientTests.Method()", span="77-77", cluster="HangFire.Tests.Client.JobClientTests.Method()", file="ScheduledState.cs"];
m33_0 [label="Entry HangFire.Tests.Client.JobClientTests.Initialize()", span="21-21", cluster="HangFire.Tests.Client.JobClientTests.Initialize()", file="ScheduledState.cs"];
m33_1 [label="_connectionMock = new Mock<IStorageConnection>()", span="23-23", cluster="HangFire.Tests.Client.JobClientTests.Initialize()", color=red, community=0, file="ScheduledState.cs"];
m33_2 [label="_connectionMock.Setup(x => x.Storage).Returns(new Mock<JobStorage>().Object)", span="24-24", cluster="HangFire.Tests.Client.JobClientTests.Initialize()", file="ScheduledState.cs"];
m33_3 [label="_creatorMock = new Mock<JobCreator>()", span="26-26", cluster="HangFire.Tests.Client.JobClientTests.Initialize()", file="ScheduledState.cs"];
m33_4 [label="_client = new JobClient(_connectionMock.Object, _creatorMock.Object)", span="27-27", cluster="HangFire.Tests.Client.JobClientTests.Initialize()", file="ScheduledState.cs"];
m33_5 [label="_stateMock = new Mock<JobState>()", span="28-28", cluster="HangFire.Tests.Client.JobClientTests.Initialize()", file="ScheduledState.cs"];
m33_6 [label="_method = new JobMethod(typeof(JobClientTests), typeof(JobClientTests).GetMethod(''Method''))", span="29-29", cluster="HangFire.Tests.Client.JobClientTests.Initialize()", file="ScheduledState.cs"];
m33_7 [label="Exit HangFire.Tests.Client.JobClientTests.Initialize()", span="21-21", cluster="HangFire.Tests.Client.JobClientTests.Initialize()", file="ScheduledState.cs"];
m33_14 [label="Entry Mock<JobState>.cstr", span="", cluster="Mock<JobState>.cstr", file="ScheduledState.cs"];
m33_16 [label="Entry System.Type.GetMethod(string)", span="0-0", cluster="System.Type.GetMethod(string)", file="ScheduledState.cs"];
m33_15 [label="Entry HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", span="48-48", cluster="HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", file="ScheduledState.cs"];
m33_13 [label="Entry JobClient.cstr", span="", cluster="JobClient.cstr", file="ScheduledState.cs"];
m33_33 [label="Entry HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenStateIsNull()", span="66-66", cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenStateIsNull()", file="ScheduledState.cs"];
m33_34 [label="_client.CreateJob(_method, new string[0], null)", span="68-68", cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenStateIsNull()", file="ScheduledState.cs"];
m33_35 [label="Exit HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenStateIsNull()", span="66-66", cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenStateIsNull()", file="ScheduledState.cs"];
m33_12 [label="Entry Mock<JobCreator>.cstr", span="", cluster="Mock<JobCreator>.cstr", file="ScheduledState.cs"];
m33_9 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ScheduledState.cs"];
m33_37 [label="Entry HangFire.Tests.Client.JobClientTests.CreateJob_CallsCreate_WithCorrectContext()", span="72-72", cluster="HangFire.Tests.Client.JobClientTests.CreateJob_CallsCreate_WithCorrectContext()", file="ScheduledState.cs"];
m33_38 [label="_client.CreateJob(_method, new[] { ''hello'', ''3'' }, _stateMock.Object)", span="74-74", cluster="HangFire.Tests.Client.JobClientTests.CreateJob_CallsCreate_WithCorrectContext()", file="ScheduledState.cs"];
m33_39 [label="Exit HangFire.Tests.Client.JobClientTests.CreateJob_CallsCreate_WithCorrectContext()", span="72-72", cluster="HangFire.Tests.Client.JobClientTests.CreateJob_CallsCreate_WithCorrectContext()", file="ScheduledState.cs"];
m33_20 [label="Entry HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenClientManagerIsNull()", span="34-34", cluster="HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenClientManagerIsNull()", file="ScheduledState.cs"];
m33_21 [label="new JobClient(null, _creatorMock.Object)", span="37-37", cluster="HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenClientManagerIsNull()", file="ScheduledState.cs"];
m33_22 [label="Exit HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenClientManagerIsNull()", span="34-34", cluster="HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenClientManagerIsNull()", file="ScheduledState.cs"];
m33_30 [label="Entry HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenArgumentsIsNull()", span="59-59", cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenArgumentsIsNull()", file="ScheduledState.cs"];
m33_31 [label="_client.CreateJob(_method, null, _stateMock.Object)", span="61-61", cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenArgumentsIsNull()", file="ScheduledState.cs"];
m33_32 [label="Exit HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenArgumentsIsNull()", span="59-59", cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenArgumentsIsNull()", file="ScheduledState.cs"];
m33_17 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="ScheduledState.cs"];
m33_18 [label="x.Storage", span="24-24", cluster="lambda expression", file="ScheduledState.cs"];
m33_19 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="ScheduledState.cs"];
m33_36 [label="Entry HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", span="75-75", cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="ScheduledState.cs"];
m33_42 [label="Entry HangFire.Tests.Client.JobClientTests.MethodWithReferenceParameter(ref string)", span="81-81", cluster="HangFire.Tests.Client.JobClientTests.MethodWithReferenceParameter(ref string)", file="ScheduledState.cs"];
m33_43 [label="Exit HangFire.Tests.Client.JobClientTests.MethodWithReferenceParameter(ref string)", span="81-81", cluster="HangFire.Tests.Client.JobClientTests.MethodWithReferenceParameter(ref string)", file="ScheduledState.cs"];
m33_11 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ScheduledState.cs"];
m33_29 [label="Entry Unk.CreateJob", span="", cluster="Unk.CreateJob", file="ScheduledState.cs"];
m33_44 [label="Entry HangFire.Tests.Client.JobClientTests.MethodWithOutputParameter(out string)", span="85-85", cluster="HangFire.Tests.Client.JobClientTests.MethodWithOutputParameter(out string)", file="ScheduledState.cs"];
m33_45 [label="a = ''hello''", span="87-87", cluster="HangFire.Tests.Client.JobClientTests.MethodWithOutputParameter(out string)", file="ScheduledState.cs"];
m33_46 [label="Exit HangFire.Tests.Client.JobClientTests.MethodWithOutputParameter(out string)", span="85-85", cluster="HangFire.Tests.Client.JobClientTests.MethodWithOutputParameter(out string)", file="ScheduledState.cs"];
m33_8 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="ScheduledState.cs"];
m33_10 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="ScheduledState.cs"];
m33_26 [label="Entry HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenJobMethodIsNull()", span="52-52", cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenJobMethodIsNull()", file="ScheduledState.cs"];
m33_27 [label="_client.CreateJob(null, new string[0], _stateMock.Object)", span="54-54", cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenJobMethodIsNull()", file="ScheduledState.cs"];
m33_28 [label="Exit HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenJobMethodIsNull()", span="52-52", cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenJobMethodIsNull()", file="ScheduledState.cs"];
m33_47 [label="HangFire.Tests.Client.JobClientTests", span="", file="ScheduledState.cs"];
m34_60 [label="Entry HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", span="69-69", cluster="HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", file="ScheduledStateFacts.cs"];
m34_27 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ScheduledStateFacts.cs"];
m34_28 [label="Entry HangFire.Client.CreateContext.SetJobParameter(string, object)", span="95-95", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="ScheduledStateFacts.cs"];
m34_59 [label="Entry HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", span="64-64", cluster="HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", file="ScheduledStateFacts.cs"];
m34_32 [label="Entry HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", span="77-77", cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="ScheduledStateFacts.cs"];
m34_33 [label="Assert.IsNotNull(filterContext)", span="79-79", cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="ScheduledStateFacts.cs"];
m34_34 [label="Assert.IsNotNull(filterContext.Items)", span="80-80", cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="ScheduledStateFacts.cs"];
m34_35 [label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnCreated'') \r\n                + (filterContext.Canceled ? '' (with the canceled flag set)'' : null))", span="82-83", cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="ScheduledStateFacts.cs"];
m34_38 [label="filterContext.SetJobParameter(parameter.Key, parameter.Value)", span="89-89", cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="ScheduledStateFacts.cs"];
m34_41 [label="Assert.AreEqual(\r\n                        parameter.Value,\r\n                        filterContext.GetJobParameter<string>(parameter.Key))", span="97-99", cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="ScheduledStateFacts.cs"];
m34_43 [label="filterContext.ExceptionHandled = true", span="105-105", cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="ScheduledStateFacts.cs"];
m34_36 [label="_setOnPostMethodParameters != null", span="85-85", cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="ScheduledStateFacts.cs"];
m34_37 [label=_setOnPostMethodParameters, span="87-87", cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="ScheduledStateFacts.cs"];
m34_39 [label="_readParameters != null", span="93-93", cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="ScheduledStateFacts.cs"];
m34_40 [label=_readParameters, span="95-95", cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="ScheduledStateFacts.cs"];
m34_42 [label=_handlesException, span="103-103", cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="ScheduledStateFacts.cs"];
m34_44 [label="Exit HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", span="77-77", cluster="HangFire.Tests.TestFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="ScheduledStateFacts.cs"];
m34_29 [label="Entry HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="128-128", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="ScheduledStateFacts.cs"];
m34_30 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="ScheduledStateFacts.cs"];
m34_31 [label="Entry System.Exception.Exception()", span="0-0", cluster="System.Exception.Exception()", file="ScheduledStateFacts.cs"];
m34_0 [label="Entry HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="21-21", cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledStateFacts.cs"];
m34_1 [label="_name = name", span="31-31", cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledStateFacts.cs"];
m34_2 [label="_results = results", span="32-32", cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledStateFacts.cs"];
m34_3 [label="_throwException = throwException", span="33-33", cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledStateFacts.cs"];
m34_4 [label="_cancelsTheCreation = cancelsTheCreation", span="34-34", cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledStateFacts.cs"];
m34_5 [label="_handlesException = handlesException", span="35-35", cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledStateFacts.cs"];
m34_6 [label="_setOnPreMethodParameters = setOnPreMethodParameters", span="36-36", cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledStateFacts.cs"];
m34_7 [label="_readParameters = readParameters", span="37-37", cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledStateFacts.cs"];
m34_8 [label="_setOnPostMethodParameters = setOnPostMethodParameters", span="38-38", cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledStateFacts.cs"];
m34_9 [label="Exit HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="21-21", cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledStateFacts.cs"];
m34_45 [label="Entry HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", span="109-109", cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="ScheduledStateFacts.cs"];
m34_46 [label="Assert.IsNotNull(filterContext)", span="111-111", cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="ScheduledStateFacts.cs"];
m34_48 [label="filterContext.Canceled = true", span="115-115", cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="ScheduledStateFacts.cs"];
m34_52 [label="filterContext.SetJobParameter(parameter.Key, parameter.Value)", span="124-124", cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="ScheduledStateFacts.cs"];
m34_55 [label="Assert.AreEqual(\r\n                        parameter.Value,\r\n                        filterContext.GetJobParameter<string>(parameter.Key))", span="132-134", cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="ScheduledStateFacts.cs"];
m34_47 [label=_cancelsTheCreation, span="113-113", cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="ScheduledStateFacts.cs"];
m34_49 [label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnPerforming''))", span="118-118", cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="ScheduledStateFacts.cs"];
m34_50 [label="_setOnPreMethodParameters != null", span="120-120", cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="ScheduledStateFacts.cs"];
m34_51 [label=_setOnPreMethodParameters, span="122-122", cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="ScheduledStateFacts.cs"];
m34_53 [label="_readParameters != null", span="128-128", cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="ScheduledStateFacts.cs"];
m34_54 [label=_readParameters, span="130-130", cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="ScheduledStateFacts.cs"];
m34_56 [label=_throwException, span="138-138", cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="ScheduledStateFacts.cs"];
m34_57 [label="throw new Exception();", span="140-140", cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="ScheduledStateFacts.cs"];
m34_58 [label="Exit HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", span="109-109", cluster="HangFire.Tests.TestFilter.OnPerforming(HangFire.Server.Filters.PerformingContext)", file="ScheduledStateFacts.cs"];
m34_61 [label="Entry HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", span="144-144", cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", file="ScheduledStateFacts.cs"];
m34_62 [label="Assert.IsNotNull(filterContext)", span="146-146", cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", file="ScheduledStateFacts.cs"];
m34_63 [label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnPerformed'')\r\n                + (filterContext.Canceled ? '' (with the canceled flag set)'' : null))", span="148-149", cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", file="ScheduledStateFacts.cs"];
m34_65 [label="filterContext.ExceptionHandled = true", span="153-153", cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", file="ScheduledStateFacts.cs"];
m34_64 [label=_handlesException, span="151-151", cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", file="ScheduledStateFacts.cs"];
m34_66 [label="Exit HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", span="144-144", cluster="HangFire.Tests.TestFilter.OnPerformed(HangFire.Server.Filters.PerformedContext)", file="ScheduledStateFacts.cs"];
m34_25 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="ScheduledStateFacts.cs"];
m34_10 [label="Entry HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", span="41-41", cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="ScheduledStateFacts.cs"];
m34_11 [label="Assert.IsNotNull(filterContext)", span="43-43", cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="ScheduledStateFacts.cs"];
m34_12 [label="Assert.IsNotNull(filterContext.Items)", span="44-44", cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="ScheduledStateFacts.cs"];
m34_14 [label="filterContext.Canceled = true", span="48-48", cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="ScheduledStateFacts.cs"];
m34_18 [label="filterContext.SetJobParameter(parameter.Key, parameter.Value)", span="57-57", cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="ScheduledStateFacts.cs"];
m34_21 [label="Assert.AreEqual(\r\n                        parameter.Value, \r\n                        filterContext.GetJobParameter<string>(parameter.Key))", span="65-67", cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="ScheduledStateFacts.cs"];
m34_13 [label=_cancelsTheCreation, span="46-46", cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="ScheduledStateFacts.cs"];
m34_15 [label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnCreating''))", span="51-51", cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="ScheduledStateFacts.cs"];
m34_16 [label="_setOnPreMethodParameters != null", span="53-53", cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="ScheduledStateFacts.cs"];
m34_17 [label=_setOnPreMethodParameters, span="55-55", cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="ScheduledStateFacts.cs"];
m34_19 [label="_readParameters != null", span="61-61", cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="ScheduledStateFacts.cs"];
m34_20 [label=_readParameters, span="63-63", cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="ScheduledStateFacts.cs"];
m34_22 [label=_throwException, span="71-71", cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="ScheduledStateFacts.cs"];
m34_23 [label="throw new Exception();", span="73-73", cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="ScheduledStateFacts.cs"];
m34_24 [label="Exit HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", span="41-41", cluster="HangFire.Tests.TestFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="ScheduledStateFacts.cs"];
m34_67 [label="HangFire.Tests.TestFilter", span="", file="ScheduledStateFacts.cs"];
m38_64 [label="Entry HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", span="33-33", cluster="HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", file="SqlServerStorage.cs"];
m38_59 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="SqlServerStorage.cs"];
m38_57 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="SqlServerStorage.cs"];
m38_65 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="SqlServerStorage.cs"];
m38_60 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="SqlServerStorage.cs"];
m38_58 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="SqlServerStorage.cs"];
m38_0 [label="Entry HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_1 [label="WriteLiteral(''\r\n'')", span="51-51", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_2 [label="Layout = new LayoutPage { Title = ''Scheduled Jobs'' }", span="62-62", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_3 [label="int from, perPage", span="64-64", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=red, community=0, file="SqlServerStorage.cs"];
m38_4 [label="int.TryParse(Request.QueryString[''from''], out from)", span="66-66", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=red, community=0, file="SqlServerStorage.cs"];
m38_5 [label="int.TryParse(Request.QueryString[''count''], out perPage)", span="67-67", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_9 [label="pager = new Pager(from, perPage, monitor.ScheduledCount())\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/scheduled'')\r\n        }", span="74-77", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_6 [label="Pager pager", span="69-69", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=red, community=0, file="SqlServerStorage.cs"];
m38_7 [label="JobList<ScheduledJobDto> scheduledJobs", span="70-70", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_8 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="72-72", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_10 [label="scheduledJobs = monitor.ScheduledJobs(pager.FromRecord, pager.RecordsPerPage)", span="79-79", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_12 [label="pager.TotalPageCount == 0", span="91-91", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_19 [label="Write(RenderPartial(new PerPageSelector(pager)))", span="151-151", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_55 [label="Write(RenderPartial(new Paginator(pager)))", span="383-383", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_11 [label="WriteLiteral(''\r\n'')", span="86-86", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_21 [label=scheduledJobs, span="176-176", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_13 [label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        There are no scheduled jobs.\r\n    </d'' +\r\n''iv>\r\n'')", span="97-98", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_14 [label="WriteLiteral(''    <div class=\''js-jobs-list\''>\r\n        <div class=\''btn-toolbar btn-toolbar-top\''>'' +\r\n''\r\n            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\r\n     '' +\r\n''               data-url=\'''')", span="110-112", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_15 [label="Write(Request.LinkTo(''/scheduled/enqueue''))", span="117-117", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_16 [label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Enqueueing...''''>\r\n                <span class=''''glyphicon glyphicon-play''''></span>\r\n                Enqueue now\r\n            </button>\r\n\r\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\r\n                    data-url='''''')", span="122-129", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_17 [label="Write(Request.LinkTo(''/scheduled/delete''))", span="134-134", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_18 [label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Deleting...''''\r\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\r\n                <span class=''''glyphicon glyphicon-remove''''></span>\r\n                Delete selected\r\n            </button>\r\n\r\n            '')", span="139-146", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_20 [label="WriteLiteral(@''\r\n        </div>\r\n\r\n        <table class=''''table''''>\r\n            <thead>\r\n                <tr>\r\n                    <th class=''''min-width''''>\r\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                    </th>\r\n                    <th class=''''min-width''''>Id</th>\r\n                    <th>Enqueue</th>\r\n                    <th>Job</th>\r\n                    <th class=''''align-right''''>Scheduled</th>\r\n                </tr>\r\n            </thead>\r\n'')", span="156-171", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_22 [label="WriteLiteral(''                <tr class=\''js-jobs-list-row '')", span="182-182", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_54 [label="WriteLiteral(''        </table>\r\n    </div>\r\n'')", span="371-371", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_23 [label="Write(!job.Value.InScheduledState ? ''obsolete-data'' : null)", span="187-187", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_24 [label="WriteLiteral('' '')", span="192-192", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_25 [label="Write(job.Value.InScheduledState ? ''hover'' : null)", span="197-197", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_26 [label="WriteLiteral(''\''>\r\n                    <td>\r\n'')", span="202-202", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_27 [label="job.Value.InScheduledState", span="207-207", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_28 [label="WriteLiteral(''                            <input type=\''checkbox\'' class=\''js-jobs-list-checkbox\'' '' +\r\n''name=\''jobs[]\'' value=\'''')", span="213-214", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_31 [label="WriteLiteral(''                    </td>\r\n                    <td class=\''min-width\''>\r\n          '' +\r\n''              <a href=\'''')", span="234-235", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_29 [label="Write(job.Key)", span="219-219", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_32 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="240-240", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_30 [label="WriteLiteral(''\'' />\r\n'')", span="224-224", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_33 [label="WriteLiteral(''\''>\r\n                            '')", span="245-245", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_34 [label="Write(HtmlHelper.JobId(job.Key))", span="250-250", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_35 [label="WriteLiteral(''\r\n                        </a>\r\n'')", span="255-255", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_36 [label="!job.Value.InScheduledState", span="260-260", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_37 [label="WriteLiteral(''                            <span title=\''Job\'s state has been changed while fetch'' +\r\n''ing data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="266-267", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_38 [label="WriteLiteral(''                    </td>\r\n                    <td class=\''min-width\''>\r\n          '' +\r\n''              <span data-moment=\'''')", span="277-278", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_39 [label="Write(JobHelper.ToStringTimestamp(job.Value.EnqueueAt))", span="283-283", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_40 [label="WriteLiteral(''\''>\r\n                            '')", span="288-288", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_41 [label="Write(job.Value.EnqueueAt)", span="293-293", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_42 [label="WriteLiteral(''\r\n                        </span>\r\n                    </td>\r\n                   '' +\r\n'' <td>\r\n                        <a class=\''job-method\'' href=\'''')", span="298-299", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_43 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="304-304", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_44 [label="WriteLiteral(''\''>\r\n                            '')", span="309-309", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_45 [label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="314-314", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_46 [label="WriteLiteral(''\r\n                        </a>\r\n                    </td>\r\n                    <t'' +\r\n''d class=\''align-right\''>\r\n'')", span="319-320", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_47 [label="job.Value.ScheduledAt != null", span="325-325", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_48 [label="WriteLiteral(''                            <span data-moment=\'''')", span="331-331", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_53 [label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", span="361-361", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_49 [label="Write(JobHelper.ToStringTimestamp(job.Value.ScheduledAt.Value))", span="336-336", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_50 [label="WriteLiteral(''\''>\r\n                                '')", span="341-341", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_51 [label="Write(job.Value.ScheduledAt)", span="346-346", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_52 [label="WriteLiteral(''\r\n                            </span>\r\n'')", span="351-351", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_56 [label="Exit HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerStorage.cs"];
m38_66 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="SqlServerStorage.cs"];
m38_68 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="SqlServerStorage.cs"];
m38_63 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="SqlServerStorage.cs"];
m38_71 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="SqlServerStorage.cs"];
m38_72 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="SqlServerStorage.cs"];
m38_62 [label="Entry HangFire.Storage.IMonitoringApi.ScheduledCount()", span="38-38", cluster="HangFire.Storage.IMonitoringApi.ScheduledCount()", file="SqlServerStorage.cs"];
m38_67 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="SqlServerStorage.cs"];
m38_70 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerStorage.cs"];
m38_61 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="SqlServerStorage.cs"];
m38_69 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="SqlServerStorage.cs"];
m38_73 [label="HangFire.Web.Pages.ScheduledJobsPage", span="", file="SqlServerStorage.cs"];
m39_4 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerStorageOptions.cs"];
m39_0 [label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m39_1 [label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="26-26", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m39_2 [label="PrepareSchemaIfNecessary = true", span="27-27", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs", color=green, community=0];
m39_3 [label="Exit HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m39_5 [label="HangFire.SqlServer.SqlServerStorageOptions", span="", file="SqlServerStorageOptions.cs"];
m40_42 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="51-51", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerWriteOnlyTransaction.cs"];
m40_43 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, _context, null, _supervisorFactory))", span="53-54", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerWriteOnlyTransaction.cs"];
m40_44 [label="Assert.Equal(''storage'', exception.ParamName)", span="56-56", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerWriteOnlyTransaction.cs"];
m40_45 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="51-51", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerWriteOnlyTransaction.cs"];
m40_69 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="79-79", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="SqlServerWriteOnlyTransaction.cs"];
m40_70 [label="var server = CreateServer()", span="81-81", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="SqlServerWriteOnlyTransaction.cs"];
m40_71 [label="server.Execute(_cts.Token)", span="83-83", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="SqlServerWriteOnlyTransaction.cs"];
m40_72 [label="_storage.Verify(x => x.GetConnection(), Times.Exactly(2))", span="85-85", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="SqlServerWriteOnlyTransaction.cs"];
m40_73 [label="_connection.Verify(x => x.Dispose(), Times.Exactly(2))", span="86-86", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="SqlServerWriteOnlyTransaction.cs"];
m40_74 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="79-79", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="SqlServerWriteOnlyTransaction.cs"];
m40_25 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="33-33", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerWriteOnlyTransaction.cs"];
m40_26 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(null, _context, _storage.Object, _supervisorFactory))", span="35-36", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerWriteOnlyTransaction.cs"];
m40_27 [label="Assert.Equal(''serverId'', exception.ParamName)", span="38-38", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerWriteOnlyTransaction.cs"];
m40_28 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="33-33", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerWriteOnlyTransaction.cs"];
m40_15 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)", file="SqlServerWriteOnlyTransaction.cs"];
m40_30 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="SqlServerWriteOnlyTransaction.cs"];
m40_109 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", span="119-119", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="SqlServerWriteOnlyTransaction.cs"];
m40_110 [label="_supervisor.Setup(x => x.Dispose()).Throws<InvalidOperationException>()", span="121-121", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="SqlServerWriteOnlyTransaction.cs"];
m40_111 [label="var server = CreateServer()", span="122-122", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="SqlServerWriteOnlyTransaction.cs"];
m40_112 [label="Assert.Throws<InvalidOperationException>(() => server.Execute(_cts.Token))", span="124-124", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="SqlServerWriteOnlyTransaction.cs"];
m40_113 [label="_connection.Verify(x => x.RemoveServer(It.IsAny<string>()))", span="126-126", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="SqlServerWriteOnlyTransaction.cs"];
m40_114 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", span="119-119", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="SqlServerWriteOnlyTransaction.cs"];
m40_92 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", span="99-99", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="SqlServerWriteOnlyTransaction.cs"];
m40_93 [label="var server = CreateServer()", span="101-101", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="SqlServerWriteOnlyTransaction.cs"];
m40_94 [label="server.Execute(_cts.Token)", span="103-103", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="SqlServerWriteOnlyTransaction.cs"];
m40_95 [label="_supervisor.Verify(x => x.Dispose())", span="105-105", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="SqlServerWriteOnlyTransaction.cs"];
m40_96 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", span="99-99", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="SqlServerWriteOnlyTransaction.cs"];
m40_11 [label="Entry Mock<IServerSupervisor>.cstr", span="", cluster="Mock<IServerSupervisor>.cstr", file="SqlServerWriteOnlyTransaction.cs"];
m40_0 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", span="20-20", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerWriteOnlyTransaction.cs"];
m40_1 [label="_context = new ServerContext()", span="22-22", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerWriteOnlyTransaction.cs"];
m40_2 [label="_storage = new Mock<JobStorage>()", span="23-23", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerWriteOnlyTransaction.cs"];
m40_3 [label="_supervisor = new Mock<IServerSupervisor>()", span="24-24", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerWriteOnlyTransaction.cs"];
m40_4 [label="_supervisorFactory = new Lazy<IServerSupervisor>(() => _supervisor.Object)", span="25-25", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerWriteOnlyTransaction.cs"];
m40_5 [label="_connection = new Mock<IStorageConnection>()", span="26-26", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerWriteOnlyTransaction.cs"];
m40_6 [label="_cts = new CancellationTokenSource(TimeSpan.FromMilliseconds(50))", span="27-27", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerWriteOnlyTransaction.cs"];
m40_7 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="29-29", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerWriteOnlyTransaction.cs"];
m40_8 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", span="20-20", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerWriteOnlyTransaction.cs"];
m40_50 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", span="60-60", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", file="SqlServerWriteOnlyTransaction.cs"];
m40_51 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, _context, _storage.Object, null))", span="62-63", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", file="SqlServerWriteOnlyTransaction.cs"];
m40_52 [label="Assert.Equal(''supervisorFactory'', exception.ParamName)", span="65-65", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", file="SqlServerWriteOnlyTransaction.cs"];
m40_53 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", span="60-60", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", file="SqlServerWriteOnlyTransaction.cs"];
m40_14 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m40_29 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerWriteOnlyTransaction.cs"];
m40_63 [label="Entry Hangfire.Server.ServerBootstrapper.Execute(System.Threading.CancellationToken)", span="56-56", cluster="Hangfire.Server.ServerBootstrapper.Execute(System.Threading.CancellationToken)", file="SqlServerWriteOnlyTransaction.cs"];
m40_12 [label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0", cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="SqlServerWriteOnlyTransaction.cs"];
m40_49 [label="Entry Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Lazy<Hangfire.Server.IServerSupervisor>)", span="34-34", cluster="Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Lazy<Hangfire.Server.IServerSupervisor>)", file="SqlServerWriteOnlyTransaction.cs"];
m40_62 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="129-129", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="SqlServerWriteOnlyTransaction.cs"];
m40_124 [label="return new ServerBootstrapper(ServerId, _context, _storage.Object, _supervisorFactory);", span="131-131", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="SqlServerWriteOnlyTransaction.cs"];
m40_125 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="129-129", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="SqlServerWriteOnlyTransaction.cs"];
m40_24 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="SqlServerWriteOnlyTransaction.cs"];
m40_100 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="109-109", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="SqlServerWriteOnlyTransaction.cs"];
m40_101 [label="var server = CreateServer()", span="111-111", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="SqlServerWriteOnlyTransaction.cs"];
m40_102 [label="server.Execute(_cts.Token)", span="113-113", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="SqlServerWriteOnlyTransaction.cs"];
m40_103 [label="_connection.Verify(x => x.RemoveServer(ServerId))", span="115-115", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="SqlServerWriteOnlyTransaction.cs"];
m40_104 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="109-109", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="SqlServerWriteOnlyTransaction.cs"];
m40_35 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="42-42", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="SqlServerWriteOnlyTransaction.cs"];
m40_36 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, null, _storage.Object, _supervisorFactory))", span="44-45", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="SqlServerWriteOnlyTransaction.cs"];
m40_37 [label="Assert.Equal(''context'', exception.ParamName)", span="47-47", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="SqlServerWriteOnlyTransaction.cs"];
m40_38 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="42-42", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="SqlServerWriteOnlyTransaction.cs"];
m40_16 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="SqlServerWriteOnlyTransaction.cs"];
m40_82 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="SqlServerWriteOnlyTransaction.cs"];
m40_57 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="69-69", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="SqlServerWriteOnlyTransaction.cs"];
m40_58 [label="var server = CreateServer()", span="71-71", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="SqlServerWriteOnlyTransaction.cs"];
m40_59 [label="server.Execute(_cts.Token)", span="73-73", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="SqlServerWriteOnlyTransaction.cs"];
m40_60 [label="_connection.Verify(x => x.AnnounceServer(ServerId, _context))", span="75-75", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="SqlServerWriteOnlyTransaction.cs"];
m40_61 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="69-69", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="SqlServerWriteOnlyTransaction.cs"];
m40_34 [label="Entry ServerBootstrapper.cstr", span="", cluster="ServerBootstrapper.cstr", file="SqlServerWriteOnlyTransaction.cs"];
m40_121 [label="Entry lambda expression", span="126-126", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_21 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_18 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_19 [label="_supervisor.Object", span="25-25", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_20 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_22 [label="x.GetConnection()", span="29-29", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_23 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_31 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_32 [label="new ServerBootstrapper(null, _context, _storage.Object, _supervisorFactory)", span="36-36", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_33 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_39 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_40 [label="new ServerBootstrapper(ServerId, null, _storage.Object, _supervisorFactory)", span="45-45", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_41 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_46 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_47 [label="new ServerBootstrapper(ServerId, _context, null, _supervisorFactory)", span="54-54", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_48 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_54 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_55 [label="new ServerBootstrapper(ServerId, _context, _storage.Object, null)", span="63-63", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_56 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_65 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_66 [label="x.AnnounceServer(ServerId, _context)", span="75-75", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_67 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_76 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_79 [label="Entry lambda expression", span="86-86", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_77 [label="x.GetConnection()", span="85-85", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_78 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_80 [label="x.Dispose()", span="86-86", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_81 [label="Exit lambda expression", span="86-86", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_88 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_89 [label="x.Start()", span="95-95", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_90 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_97 [label="Entry lambda expression", span="105-105", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_98 [label="x.Dispose()", span="105-105", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_99 [label="Exit lambda expression", span="105-105", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_105 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_106 [label="x.RemoveServer(ServerId)", span="115-115", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_107 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_115 [label="Entry lambda expression", span="121-121", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_119 [label="server.Execute(_cts.Token)", span="124-124", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_118 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_116 [label="x.Dispose()", span="121-121", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_117 [label="Exit lambda expression", span="121-121", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_120 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_122 [label="x.RemoveServer(It.IsAny<string>())", span="126-126", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_123 [label="Exit lambda expression", span="126-126", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m40_68 [label="Entry Unk.AnnounceServer", span="", cluster="Unk.AnnounceServer", file="SqlServerWriteOnlyTransaction.cs"];
m40_75 [label="Entry Unk.Exactly", span="", cluster="Unk.Exactly", file="SqlServerWriteOnlyTransaction.cs"];
m40_91 [label="Entry Unk.Start", span="", cluster="Unk.Start", file="SqlServerWriteOnlyTransaction.cs"];
m40_64 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="SqlServerWriteOnlyTransaction.cs"];
m40_108 [label="Entry Unk.RemoveServer", span="", cluster="Unk.RemoveServer", file="SqlServerWriteOnlyTransaction.cs"];
m40_17 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="SqlServerWriteOnlyTransaction.cs"];
m40_13 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="SqlServerWriteOnlyTransaction.cs"];
m40_10 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="SqlServerWriteOnlyTransaction.cs"];
m40_83 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", span="90-90", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", file="SqlServerWriteOnlyTransaction.cs"];
m40_84 [label="var server = CreateServer()", span="92-92", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", file="SqlServerWriteOnlyTransaction.cs"];
m40_85 [label="server.Execute(_cts.Token)", span="93-93", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", file="SqlServerWriteOnlyTransaction.cs"];
m40_86 [label="_supervisor.Verify(x => x.Start())", span="95-95", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", file="SqlServerWriteOnlyTransaction.cs"];
m40_87 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", span="90-90", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", file="SqlServerWriteOnlyTransaction.cs"];
m40_126 [label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", span="", file="SqlServerWriteOnlyTransaction.cs"];
m40_127 [label=server, span="", file="SqlServerWriteOnlyTransaction.cs"];
m41_0 [label="Entry HangFire.States.State.SerializeData()", span="27-27", cluster="HangFire.States.State.SerializeData()", file="State.cs"];
m41_1 [label="return new Dictionary<string, string>();", span="29-29", cluster="HangFire.States.State.SerializeData()", color=red, community=0, file="State.cs"];
m41_2 [label="Exit HangFire.States.State.SerializeData()", span="27-27", cluster="HangFire.States.State.SerializeData()", file="State.cs"];
m41_3 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="State.cs"];
m42_7 [label="Entry HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", span="18-18", cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", file="StateFacts.cs"];
m42_8 [label="var stateMock = new Mock<State>()", span="20-20", cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", color=red, community=0, file="StateFacts.cs"];
m42_9 [label="stateMock.CallBase = true", span="21-21", cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", color=red, community=0, file="StateFacts.cs"];
m42_10 [label="Assert.Empty(stateMock.Object.SerializeData())", span="23-23", cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", color=red, community=0, file="StateFacts.cs"];
m42_11 [label="Exit HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", span="18-18", cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", file="StateFacts.cs"];
m42_5 [label="Entry Mock<State>.cstr", span="", cluster="Mock<State>.cstr", file="StateFacts.cs"];
m42_6 [label="Entry Unk.False", span="", cluster="Unk.False", file="StateFacts.cs"];
m42_13 [label="Entry Unk.Empty", span="", cluster="Unk.Empty", file="StateFacts.cs"];
m42_12 [label="Entry Unk.SerializeData", span="", cluster="Unk.SerializeData", file="StateFacts.cs"];
m42_0 [label="Entry HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", span="9-9", cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", file="StateFacts.cs"];
m42_1 [label="var stateMock = new Mock<State>()", span="11-11", cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", color=red, community=0, file="StateFacts.cs"];
m42_2 [label="stateMock.CallBase = true", span="12-12", cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", color=red, community=0, file="StateFacts.cs"];
m42_3 [label="Assert.False(stateMock.Object.ExpireJobOnApply)", span="14-14", cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", color=red, community=0, file="StateFacts.cs"];
m42_4 [label="Exit HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", span="9-9", cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", file="StateFacts.cs"];
m43_10 [label="Entry Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", span="43-43", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", file="StateMachine.cs"];
m43_11 [label="var owinContext = new OwinContext(context.OwinEnvironment)", span="45-45", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", file="StateMachine.cs"];
m43_12 [label="owinContext.Response.ContentType = _contentType", span="47-47", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", file="StateMachine.cs"];
m43_13 [label="owinContext.Response.Expires = DateTime.Now.AddYears(1)", span="48-48", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", file="StateMachine.cs"];
m43_14 [label="WriteResponse(owinContext.Response)", span="50-50", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", file="StateMachine.cs"];
m43_15 [label="return Task.FromResult(true);", span="52-52", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", file="StateMachine.cs"];
m43_16 [label="Exit Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", span="43-43", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", file="StateMachine.cs"];
m43_20 [label="Entry System.Threading.Tasks.Task.FromResult<TResult>(TResult)", span="0-0", cluster="System.Threading.Tasks.Task.FromResult<TResult>(TResult)", file="StateMachine.cs"];
m43_35 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="StateMachine.cs"];
m43_19 [label="Entry Unk.WriteResponse", span="", cluster="Unk.WriteResponse", file="StateMachine.cs"];
m43_37 [label="Entry System.Math.Min(long, long)", span="0-0", cluster="System.Math.Min(long, long)", file="StateMachine.cs"];
m43_36 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="StateMachine.cs"];
m43_18 [label="Entry System.DateTime.AddYears(int)", span="0-0", cluster="System.DateTime.AddYears(int)", file="StateMachine.cs"];
m43_24 [label="Entry Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", span="60-60", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="StateMachine.cs"];
m43_25 [label="var inputStream = assembly.GetManifestResourceStream(resourceName)", span="62-62", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="StateMachine.cs"];
m43_27 [label="throw new ArgumentException(string.Format(\r\n                        @''Resource with name {0} not found in assembly {1}.'',\r\n                        resourceName, assembly));", span="66-68", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="StateMachine.cs"];
m43_31 [label="response.Write(buffer, 0, readLength)", span="75-75", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="StateMachine.cs"];
m43_26 [label="inputStream == null", span="64-64", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="StateMachine.cs"];
m43_28 [label="var buffer = new byte[Math.Min(inputStream.Length, 4096)]", span="71-71", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="StateMachine.cs"];
m43_29 [label="var readLength = inputStream.Read(buffer, 0, buffer.Length)", span="72-72", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="StateMachine.cs"];
m43_32 [label="readLength = inputStream.Read(buffer, 0, buffer.Length)", span="76-76", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="StateMachine.cs"];
m43_30 [label="readLength > 0", span="73-73", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", color=red, community=0, file="StateMachine.cs"];
m43_33 [label="Exit Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", span="60-60", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="StateMachine.cs"];
m43_38 [label="Entry System.IO.Stream.Read(byte[], int, int)", span="0-0", cluster="System.IO.Stream.Read(byte[], int, int)", file="StateMachine.cs"];
m43_0 [label="Entry Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", span="30-30", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="StateMachine.cs"];
m43_1 [label="contentType == null", span="35-35", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="StateMachine.cs"];
m43_3 [label="assembly == null", span="36-36", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="StateMachine.cs"];
m43_5 [label="_assembly = assembly", span="38-38", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="StateMachine.cs"];
m43_6 [label="_resourceName = resourceName", span="39-39", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="StateMachine.cs"];
m43_7 [label="_contentType = contentType", span="40-40", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="StateMachine.cs"];
m43_2 [label="throw new ArgumentNullException(''contentType'');", span="35-35", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="StateMachine.cs"];
m43_4 [label="throw new ArgumentNullException(''assembly'');", span="36-36", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="StateMachine.cs"];
m43_8 [label="Exit Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", span="30-30", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="StateMachine.cs"];
m43_17 [label="Entry OwinContext.cstr", span="", cluster="OwinContext.cstr", file="StateMachine.cs"];
m43_34 [label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0", cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="StateMachine.cs"];
m43_39 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="StateMachine.cs"];
m43_21 [label="Entry Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", span="55-55", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", file="StateMachine.cs"];
m43_22 [label="WriteResource(response, _assembly, _resourceName)", span="57-57", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", file="StateMachine.cs"];
m43_23 [label="Exit Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", span="55-55", cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", file="StateMachine.cs"];
m43_40 [label="Hangfire.Dashboard.EmbeddedResourceDispatcher", span="", file="StateMachine.cs"];
m44_12 [label="Entry Unk.>", span="", cluster="Unk.>", file="StorageOptionsFacts.cs"];
m44_7 [label="Entry Unk.True", span="", cluster="Unk.True", file="StorageOptionsFacts.cs"];
m44_6 [label="Entry Unk.NotEqual", span="", cluster="Unk.NotEqual", file="StorageOptionsFacts.cs"];
m44_5 [label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="StorageOptionsFacts.cs"];
m44_23 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="StorageOptionsFacts.cs"];
m44_29 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="StorageOptionsFacts.cs"];
m44_16 [label="Entry HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsNegative()", span="24-24", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsNegative()", file="StorageOptionsFacts.cs"];
m44_17 [label="var options = new SqlServerStorageOptions()", span="26-26", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsNegative()", file="StorageOptionsFacts.cs"];
m44_18 [label="Assert.Throws<ArgumentException>(\r\n                () => options.QueuePollInterval = TimeSpan.FromSeconds(-1))", span="27-28", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsNegative()", file="StorageOptionsFacts.cs"];
m44_19 [label="Exit HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsNegative()", span="24-24", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsNegative()", file="StorageOptionsFacts.cs"];
m44_24 [label="Entry HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_SetsTheValue()", span="32-32", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_SetsTheValue()", file="StorageOptionsFacts.cs"];
m44_25 [label="var options = new SqlServerStorageOptions()", span="34-34", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_SetsTheValue()", file="StorageOptionsFacts.cs"];
m44_26 [label="options.QueuePollInterval = TimeSpan.FromSeconds(1)", span="35-35", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_SetsTheValue()", file="StorageOptionsFacts.cs"];
m44_27 [label="Assert.Equal(TimeSpan.FromSeconds(1), options.QueuePollInterval)", span="36-36", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_SetsTheValue()", file="StorageOptionsFacts.cs"];
m44_28 [label="Exit HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_SetsTheValue()", span="32-32", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_SetsTheValue()", file="StorageOptionsFacts.cs"];
m44_8 [label="Entry HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", span="16-16", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", file="StorageOptionsFacts.cs"];
m44_9 [label="var options = new SqlServerStorageOptions()", span="18-18", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", file="StorageOptionsFacts.cs"];
m44_10 [label="Assert.Throws<ArgumentException>(\r\n                () => options.QueuePollInterval = TimeSpan.Zero)", span="19-20", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", file="StorageOptionsFacts.cs"];
m44_11 [label="Exit HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", span="16-16", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", file="StorageOptionsFacts.cs"];
m44_20 [label="Entry lambda expression", span="28-28", cluster="lambda expression", file="StorageOptionsFacts.cs"];
m44_14 [label="options.QueuePollInterval = TimeSpan.Zero", span="20-20", cluster="lambda expression", file="StorageOptionsFacts.cs"];
m44_13 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="StorageOptionsFacts.cs"];
m44_15 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="StorageOptionsFacts.cs"];
m44_21 [label="options.QueuePollInterval = TimeSpan.FromSeconds(-1)", span="28-28", cluster="lambda expression", file="StorageOptionsFacts.cs"];
m44_22 [label="Exit lambda expression", span="28-28", cluster="lambda expression", file="StorageOptionsFacts.cs"];
m44_0 [label="Entry HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", span="8-8", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", file="StorageOptionsFacts.cs"];
m44_1 [label="var options = new SqlServerStorageOptions()", span="10-10", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", file="StorageOptionsFacts.cs"];
m44_2 [label="Assert.NotEqual(0, options.QueuePollInterval.TotalSeconds)", span="11-11", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", color=red, community=0, file="StorageOptionsFacts.cs"];
m44_3 [label="Assert.True(options.PrepareSchemaIfNecessary)", span="12-12", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", file="StorageOptionsFacts.cs"];
m44_4 [label="Exit HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", span="8-8", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", file="StorageOptionsFacts.cs"];
m44_30 [label=options, span="", file="StorageOptionsFacts.cs"];
m44_31 [label=options, span="", file="StorageOptionsFacts.cs"];
m45_6 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SucceededState.cs"];
m45_8 [label="Entry HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="54-54", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m45_9 [label="transaction.IncrementCounter(''stats:succeeded'')", span="56-56", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m45_10 [label="Exit HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="54-54", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m45_11 [label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="SucceededState.cs"];
m45_3 [label="Entry HangFire.States.SucceededState.SerializeData()", span="44-44", cluster="HangFire.States.SucceededState.SerializeData()", file="SucceededState.cs"];
m45_4 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''SucceededAt'',  JobHelper.ToStringTimestamp(SucceededAt)}\r\n            };", span="46-49", cluster="HangFire.States.SucceededState.SerializeData()", file="SucceededState.cs"];
m45_5 [label="Exit HangFire.States.SucceededState.SerializeData()", span="44-44", cluster="HangFire.States.SucceededState.SerializeData()", file="SucceededState.cs"];
m45_15 [label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="35-35", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="SucceededState.cs"];
m45_0 [label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27", cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededState.cs"];
m45_1 [label="SucceededAt = DateTime.UtcNow", span="29-29", cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededState.cs"];
m45_2 [label="Exit HangFire.States.SucceededState.SucceededState()", span="27-27", cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededState.cs"];
m45_7 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SucceededState.cs"];
m45_12 [label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="59-59", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m45_13 [label="transaction.DecrementCounter(''stats:succeeded'')", span="61-61", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m45_14 [label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="59-59", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m45_16 [label="HangFire.States.SucceededState", span="", file="SucceededState.cs"];
m46_6 [label="Entry HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", span="17-17", cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m46_7 [label="var state = new SucceededState()", span="19-19", cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m46_8 [label="var data = state.SerializeData()", span="21-21", cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m46_9 [label="Assert.Equal(JobHelper.ToStringTimestamp(state.SucceededAt), data[''SucceededAt''])", span="23-23", cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m46_10 [label="Exit HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", span="17-17", cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs"];
m46_13 [label="Entry HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", span="27-27", cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", file="SucceededStateFacts.cs"];
m46_15 [label="Assert.True(state.ExpireJobOnApply)", span="30-30", cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", color=red, community=0, file="SucceededStateFacts.cs"];
m46_14 [label="var state = new SucceededState()", span="29-29", cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", file="SucceededStateFacts.cs"];
m46_16 [label="Exit HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", span="27-27", cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", file="SucceededStateFacts.cs"];
m46_17 [label="Entry Unk.True", span="", cluster="Unk.True", file="SucceededStateFacts.cs"];
m46_5 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="SucceededStateFacts.cs"];
m46_0 [label="Entry HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", span="10-10", cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="SucceededStateFacts.cs"];
m46_1 [label="var state = new SucceededState()", span="12-12", cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="SucceededStateFacts.cs"];
m46_2 [label="Assert.Equal(SucceededState.StateName, state.Name)", span="13-13", cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="SucceededStateFacts.cs"];
m46_3 [label="Exit HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", span="10-10", cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="SucceededStateFacts.cs"];
m46_11 [label="Entry HangFire.States.SucceededState.SerializeData()", span="44-44", cluster="HangFire.States.SucceededState.SerializeData()", file="SucceededStateFacts.cs"];
m46_4 [label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27", cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededStateFacts.cs"];
m46_12 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SucceededStateFacts.cs"];
m48_219 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="267-267", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs"];
m48_220 [label="_connection.Setup(x => x.GetJobData(_processingJob.JobId))\r\n                .Returns(new JobData { LoadException = new JobLoadException() })", span="270-271", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs"];
m48_221 [label="var worker = CreateWorker()", span="273-273", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs"];
m48_222 [label="worker.Execute(_token)", span="276-276", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs"];
m48_223 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>()))", span="279-282", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs"];
m48_224 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="267-267", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs"];
m48_16 [label="Entry HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", span="27-27", cluster="HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", file="WorkerFacts.cs"];
m48_23 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="WorkerFacts.cs"];
m48_62 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="71-71", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="WorkerFacts.cs"];
m48_63 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(_context, null, _process.Object, _stateMachineFactory.Object))", span="73-74", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="WorkerFacts.cs"];
m48_64 [label="Assert.Equal(''storage'', exception.ParamName)", span="76-76", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="WorkerFacts.cs"];
m48_65 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="71-71", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="WorkerFacts.cs"];
m48_111 [label="Entry Unk.DeleteJobFromQueue", span="", cluster="Unk.DeleteJobFromQueue", file="WorkerFacts.cs"];
m48_57 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="WorkerFacts.cs"];
m48_90 [label="Entry HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", span="47-47", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="WorkerFacts.cs"];
m48_27 [label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken()", file="WorkerFacts.cs"];
m48_112 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="123-123", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs"];
m48_113 [label="_stateMachine\r\n                .Setup(x => x.TryToChangeState(\r\n                    _processingJob.JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>()))\r\n                .InSequence()\r\n                .Returns(true)", span="126-130", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs"];
m48_114 [label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .InSequence()", span="132-133", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs"];
m48_115 [label="_stateMachine\r\n                .Setup(x => x.TryToChangeState(\r\n                    _processingJob.JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>()))\r\n                .InSequence()\r\n                .Returns(true)", span="135-139", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs"];
m48_116 [label="var worker = CreateWorker()", span="141-141", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs"];
m48_117 [label="worker.Execute(_token)", span="144-144", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs"];
m48_118 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="123-123", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs"];
m48_225 [label="Entry HangFire.Common.JobLoadException.JobLoadException()", span="33-33", cluster="HangFire.Common.JobLoadException.JobLoadException()", file="WorkerFacts.cs"];
m48_126 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="WorkerFacts.cs"];
m48_183 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="225-225", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs"];
m48_184 [label="var exception = new InvalidOperationException()", span="228-228", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs"];
m48_185 [label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(exception)", span="229-231", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs"];
m48_188 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>()))", span="239-242", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs"];
m48_186 [label="var worker = CreateWorker()", span="233-233", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs"];
m48_187 [label="worker.Execute(_token)", span="236-236", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs"];
m48_189 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="225-225", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs"];
m48_190 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="WorkerFacts.cs"];
m48_209 [label="Entry HangFire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22", cluster="HangFire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="WorkerFacts.cs"];
m48_22 [label="Entry HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", span="22-22", cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="WorkerFacts.cs"];
m48_35 [label="Entry Unk.>", span="", cluster="Unk.>", file="WorkerFacts.cs"];
m48_52 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Method()", span="290-290", cluster="HangFire.Core.Tests.Server.WorkerFacts.Method()", file="WorkerFacts.cs"];
m48_234 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Method()", span="290-290", cluster="HangFire.Core.Tests.Server.WorkerFacts.Method()", file="WorkerFacts.cs"];
m48_172 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="212-212", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs"];
m48_173 [label="var worker = CreateWorker()", span="214-214", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs"];
m48_174 [label="worker.Execute(_token)", span="216-216", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs"];
m48_175 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName)))", span="218-221", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs"];
m48_176 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="212-212", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs"];
m48_31 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="WorkerFacts.cs"];
m48_18 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="WorkerFacts.cs"];
m48_119 [label="Entry Unk.InSequence", span="", cluster="Unk.InSequence", file="WorkerFacts.cs"];
m48_202 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="246-246", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs"];
m48_203 [label="var exception = new InvalidOperationException()", span="249-249", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs"];
m48_204 [label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(new JobPerformanceException(''hello'', exception))", span="250-252", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs"];
m48_207 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>()))", span="260-263", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs"];
m48_205 [label="var worker = CreateWorker()", span="254-254", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs"];
m48_206 [label="worker.Execute(_token)", span="257-257", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs"];
m48_208 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="246-246", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs"];
m48_141 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="163-163", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs"];
m48_142 [label="var worker = CreateWorker()", span="165-165", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs"];
m48_143 [label="worker.Execute(_token)", span="167-167", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs"];
m48_144 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName)))", span="169-174", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs"];
m48_145 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="163-163", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs"];
m48_0 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="24-24", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m48_1 [label="_queues = new[] { ''default'' }", span="26-26", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m48_2 [label="_context = new WorkerContext(''server'', _queues, 1)", span="27-27", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m48_3 [label="_process = new Mock<IJobPerformanceProcess>()", span="28-28", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m48_4 [label="_storage = new Mock<JobStorage>()", span="30-30", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m48_5 [label="_connection = new Mock<IStorageConnection>()", span="31-31", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m48_6 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="33-33", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m48_7 [label="_processingJob = new ProcessingJob(''my-job'', ''my-queue'')", span="35-35", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m48_8 [label="_connection.Setup(x => x.FetchNextJob(_queues, It.IsNotNull<CancellationToken>()))\r\n                .Returns(_processingJob)", span="37-38", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m48_9 [label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="40-40", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m48_10 [label="_stateMachine = new Mock<IStateMachine>()", span="41-41", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m48_11 [label="_stateMachineFactory.Setup(x => x.Create(_connection.Object))\r\n                .Returns(_stateMachine.Object)", span="43-44", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m48_12 [label="_stateMachine.Setup(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<State>(),\r\n                It.IsAny<string[]>())).Returns(true)", span="46-49", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=red, community=0, file="WorkerFacts.cs"];
m48_13 [label="_connection.Setup(x => x.GetJobData(_processingJob.JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    Job = Job.FromExpression(() => Method()),\r\n                })", span="51-55", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m48_14 [label="_token = new CancellationToken()", span="58-58", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m48_15 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="24-24", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs"];
m48_20 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="WorkerFacts.cs"];
m48_98 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="WorkerFacts.cs"];
m48_152 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="178-178", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs"];
m48_153 [label="_stateMachine\r\n                .Setup(x => x.TryToChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>()))\r\n                .Returns(false)", span="181-186", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs"];
m48_154 [label="var worker = CreateWorker()", span="188-188", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs"];
m48_155 [label="worker.Execute(_token)", span="191-191", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs"];
m48_156 [label="_process.Verify(\r\n                x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()),\r\n                Times.Never)", span="194-196", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs"];
m48_157 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="178-178", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs"];
m48_36 [label="Entry Unk.FetchNextJob", span="", cluster="Unk.FetchNextJob", file="WorkerFacts.cs"];
m48_83 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="98-98", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs"];
m48_84 [label="var worker = CreateWorker()", span="100-100", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs"];
m48_85 [label="worker.Execute(_token)", span="102-102", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs"];
m48_86 [label="_storage.Verify(x => x.GetConnection(), Times.Once)", span="104-104", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs"];
m48_87 [label="_connection.Verify(x => x.Dispose(), Times.Once)", span="105-105", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs"];
m48_88 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="98-98", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs"];
m48_191 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="WorkerFacts.cs"];
m48_44 [label="Entry Unk.TryToChangeState", span="", cluster="Unk.TryToChangeState", file="WorkerFacts.cs"];
m48_229 [label="Entry lambda expression", span="279-282", cluster="lambda expression", file="WorkerFacts.cs"];
m48_28 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="WorkerFacts.cs"];
m48_32 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="WorkerFacts.cs"];
m48_37 [label="Entry lambda expression", span="43-43", cluster="lambda expression", file="WorkerFacts.cs"];
m48_41 [label="Entry lambda expression", span="46-49", cluster="lambda expression", file="WorkerFacts.cs"];
m48_45 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="WorkerFacts.cs"];
m48_49 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="WorkerFacts.cs"];
m48_29 [label="x.GetConnection()", span="33-33", cluster="lambda expression", file="WorkerFacts.cs"];
m48_30 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="WorkerFacts.cs"];
m48_33 [label="x.FetchNextJob(_queues, It.IsNotNull<CancellationToken>())", span="37-37", cluster="lambda expression", file="WorkerFacts.cs"];
m48_34 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="WorkerFacts.cs"];
m48_38 [label="x.Create(_connection.Object)", span="43-43", cluster="lambda expression", file="WorkerFacts.cs"];
m48_39 [label="Exit lambda expression", span="43-43", cluster="lambda expression", file="WorkerFacts.cs"];
m48_42 [label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<State>(),\r\n                It.IsAny<string[]>())", span="46-49", cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs"];
m48_43 [label="Exit lambda expression", span="46-49", cluster="lambda expression", file="WorkerFacts.cs"];
m48_46 [label="x.GetJobData(_processingJob.JobId)", span="51-51", cluster="lambda expression", file="WorkerFacts.cs"];
m48_47 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="WorkerFacts.cs"];
m48_50 [label="Method()", span="54-54", cluster="lambda expression", file="WorkerFacts.cs"];
m48_51 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="WorkerFacts.cs"];
m48_58 [label="Entry lambda expression", span="65-65", cluster="lambda expression", file="WorkerFacts.cs"];
m48_59 [label="new Worker(null, _storage.Object, _process.Object, _stateMachineFactory.Object)", span="65-65", cluster="lambda expression", file="WorkerFacts.cs"];
m48_60 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="WorkerFacts.cs"];
m48_66 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="WorkerFacts.cs"];
m48_67 [label="new Worker(_context, null, _process.Object, _stateMachineFactory.Object)", span="74-74", cluster="lambda expression", file="WorkerFacts.cs"];
m48_68 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="WorkerFacts.cs"];
m48_73 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="WorkerFacts.cs"];
m48_74 [label="new Worker(_context, _storage.Object, null, _stateMachineFactory.Object)", span="83-83", cluster="lambda expression", file="WorkerFacts.cs"];
m48_75 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="WorkerFacts.cs"];
m48_80 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="WorkerFacts.cs"];
m48_81 [label="new Worker(_context, _storage.Object, _process.Object, null)", span="92-92", cluster="lambda expression", file="WorkerFacts.cs"];
m48_82 [label="Exit lambda expression", span="92-92", cluster="lambda expression", file="WorkerFacts.cs"];
m48_92 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="WorkerFacts.cs"];
m48_95 [label="Entry lambda expression", span="105-105", cluster="lambda expression", file="WorkerFacts.cs"];
m48_93 [label="x.GetConnection()", span="104-104", cluster="lambda expression", file="WorkerFacts.cs"];
m48_94 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="WorkerFacts.cs"];
m48_96 [label="x.Dispose()", span="105-105", cluster="lambda expression", file="WorkerFacts.cs"];
m48_97 [label="Exit lambda expression", span="105-105", cluster="lambda expression", file="WorkerFacts.cs"];
m48_105 [label="Entry lambda expression", span="116-116", cluster="lambda expression", file="WorkerFacts.cs"];
m48_108 [label="Entry lambda expression", span="119-119", cluster="lambda expression", file="WorkerFacts.cs"];
m48_106 [label="x.FetchNextJob(_queues, _token)", span="116-116", cluster="lambda expression", file="WorkerFacts.cs"];
m48_107 [label="Exit lambda expression", span="116-116", cluster="lambda expression", file="WorkerFacts.cs"];
m48_109 [label="x.DeleteJobFromQueue(_processingJob.JobId, _processingJob.Queue)", span="119-119", cluster="lambda expression", file="WorkerFacts.cs"];
m48_110 [label="Exit lambda expression", span="119-119", cluster="lambda expression", file="WorkerFacts.cs"];
m48_120 [label="Entry lambda expression", span="127-128", cluster="lambda expression", file="WorkerFacts.cs"];
m48_123 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="WorkerFacts.cs"];
m48_127 [label="Entry lambda expression", span="136-137", cluster="lambda expression", file="WorkerFacts.cs"];
m48_121 [label="x.TryToChangeState(\r\n                    _processingJob.JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>())", span="127-128", cluster="lambda expression", file="WorkerFacts.cs"];
m48_122 [label="Exit lambda expression", span="127-128", cluster="lambda expression", file="WorkerFacts.cs"];
m48_124 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="132-132", cluster="lambda expression", file="WorkerFacts.cs"];
m48_125 [label="Exit lambda expression", span="132-132", cluster="lambda expression", file="WorkerFacts.cs"];
m48_128 [label="x.TryToChangeState(\r\n                    _processingJob.JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>())", span="136-137", cluster="lambda expression", file="WorkerFacts.cs"];
m48_129 [label="Exit lambda expression", span="136-137", cluster="lambda expression", file="WorkerFacts.cs"];
m48_135 [label="Entry lambda expression", span="156-159", cluster="lambda expression", file="WorkerFacts.cs"];
m48_136 [label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerName == _context.ServerName),\r\n                It.IsAny<string[]>())", span="156-159", cluster="lambda expression", file="WorkerFacts.cs"];
m48_137 [label="Exit lambda expression", span="156-159", cluster="lambda expression", file="WorkerFacts.cs"];
m48_138 [label="Entry lambda expression", span="158-158", cluster="lambda expression", file="WorkerFacts.cs"];
m48_139 [label="state.ServerName == _context.ServerName", span="158-158", cluster="lambda expression", file="WorkerFacts.cs"];
m48_140 [label="Exit lambda expression", span="158-158", cluster="lambda expression", file="WorkerFacts.cs"];
m48_146 [label="Entry lambda expression", span="169-174", cluster="lambda expression", file="WorkerFacts.cs"];
m48_147 [label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName))", span="169-174", cluster="lambda expression", file="WorkerFacts.cs"];
m48_148 [label="Exit lambda expression", span="169-174", cluster="lambda expression", file="WorkerFacts.cs"];
m48_149 [label="Entry lambda expression", span="173-174", cluster="lambda expression", file="WorkerFacts.cs"];
m48_150 [label="states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName", span="173-174", cluster="lambda expression", file="WorkerFacts.cs"];
m48_151 [label="Exit lambda expression", span="173-174", cluster="lambda expression", file="WorkerFacts.cs"];
m48_158 [label="Entry lambda expression", span="182-185", cluster="lambda expression", file="WorkerFacts.cs"];
m48_161 [label="Entry lambda expression", span="195-195", cluster="lambda expression", file="WorkerFacts.cs"];
m48_159 [label="x.TryToChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>())", span="182-185", cluster="lambda expression", file="WorkerFacts.cs"];
m48_160 [label="Exit lambda expression", span="182-185", cluster="lambda expression", file="WorkerFacts.cs"];
m48_162 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="195-195", cluster="lambda expression", file="WorkerFacts.cs"];
m48_163 [label="Exit lambda expression", span="195-195", cluster="lambda expression", file="WorkerFacts.cs"];
m48_169 [label="Entry lambda expression", span="206-208", cluster="lambda expression", file="WorkerFacts.cs"];
m48_170 [label="x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>())", span="206-208", cluster="lambda expression", file="WorkerFacts.cs"];
m48_171 [label="Exit lambda expression", span="206-208", cluster="lambda expression", file="WorkerFacts.cs"];
m48_177 [label="Entry lambda expression", span="218-221", cluster="lambda expression", file="WorkerFacts.cs"];
m48_178 [label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName))", span="218-221", cluster="lambda expression", file="WorkerFacts.cs"];
m48_179 [label="Exit lambda expression", span="218-221", cluster="lambda expression", file="WorkerFacts.cs"];
m48_180 [label="Entry lambda expression", span="221-221", cluster="lambda expression", file="WorkerFacts.cs"];
m48_181 [label="states.Length == 1 && states[0] == ProcessingState.StateName", span="221-221", cluster="lambda expression", file="WorkerFacts.cs"];
m48_182 [label="Exit lambda expression", span="221-221", cluster="lambda expression", file="WorkerFacts.cs"];
m48_196 [label="x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>())", span="239-242", cluster="lambda expression", file="WorkerFacts.cs"];
m48_199 [label="state.Exception == exception && state.Reason.Contains(''Internal'')", span="241-241", cluster="lambda expression", file="WorkerFacts.cs"];
m48_192 [label="Entry lambda expression", span="230-230", cluster="lambda expression", file="WorkerFacts.cs"];
m48_195 [label="Entry lambda expression", span="239-242", cluster="lambda expression", file="WorkerFacts.cs"];
m48_193 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="230-230", cluster="lambda expression", file="WorkerFacts.cs"];
m48_194 [label="Exit lambda expression", span="230-230", cluster="lambda expression", file="WorkerFacts.cs"];
m48_197 [label="Exit lambda expression", span="239-242", cluster="lambda expression", file="WorkerFacts.cs"];
m48_198 [label="Entry lambda expression", span="241-241", cluster="lambda expression", file="WorkerFacts.cs"];
m48_200 [label="Exit lambda expression", span="241-241", cluster="lambda expression", file="WorkerFacts.cs"];
m48_214 [label="x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>())", span="260-263", cluster="lambda expression", file="WorkerFacts.cs"];
m48_217 [label="state.Exception == exception && state.Reason == ''hello''", span="262-262", cluster="lambda expression", file="WorkerFacts.cs"];
m48_210 [label="Entry lambda expression", span="251-251", cluster="lambda expression", file="WorkerFacts.cs"];
m48_213 [label="Entry lambda expression", span="260-263", cluster="lambda expression", file="WorkerFacts.cs"];
m48_211 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="251-251", cluster="lambda expression", file="WorkerFacts.cs"];
m48_212 [label="Exit lambda expression", span="251-251", cluster="lambda expression", file="WorkerFacts.cs"];
m48_215 [label="Exit lambda expression", span="260-263", cluster="lambda expression", file="WorkerFacts.cs"];
m48_216 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="WorkerFacts.cs"];
m48_218 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="WorkerFacts.cs"];
m48_226 [label="Entry lambda expression", span="270-270", cluster="lambda expression", file="WorkerFacts.cs"];
m48_227 [label="x.GetJobData(_processingJob.JobId)", span="270-270", cluster="lambda expression", file="WorkerFacts.cs"];
m48_228 [label="Exit lambda expression", span="270-270", cluster="lambda expression", file="WorkerFacts.cs"];
m48_230 [label="x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>())", span="279-282", cluster="lambda expression", file="WorkerFacts.cs"];
m48_231 [label="Exit lambda expression", span="279-282", cluster="lambda expression", file="WorkerFacts.cs"];
m48_61 [label="Entry Worker.cstr", span="", cluster="Worker.cstr", file="WorkerFacts.cs"];
m48_130 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="150-150", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs"];
m48_131 [label="var worker = CreateWorker()", span="152-152", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs"];
m48_132 [label="worker.Execute(_token)", span="154-154", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs"];
m48_133 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerName == _context.ServerName),\r\n                It.IsAny<string[]>()))", span="156-159", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs"];
m48_134 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="150-150", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs"];
m48_99 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", span="109-109", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="WorkerFacts.cs"];
m48_100 [label="var worker = CreateWorker()", span="111-111", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="WorkerFacts.cs"];
m48_101 [label="worker.Execute(_token)", span="113-113", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="WorkerFacts.cs"];
m48_102 [label="_connection.Verify(\r\n                x => x.FetchNextJob(_queues, _token),\r\n                Times.Once)", span="115-117", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="WorkerFacts.cs"];
m48_103 [label="_connection.Verify(x => x.DeleteJobFromQueue(_processingJob.JobId, _processingJob.Queue))", span="119-119", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="WorkerFacts.cs"];
m48_104 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", span="109-109", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="WorkerFacts.cs"];
m48_76 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="89-89", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="WorkerFacts.cs"];
m48_77 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(_context, _storage.Object, _process.Object, null))", span="91-92", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="WorkerFacts.cs"];
m48_78 [label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="94-94", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="WorkerFacts.cs"];
m48_79 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="89-89", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="WorkerFacts.cs"];
m48_89 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="285-285", cluster="HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs"];
m48_232 [label="return new Worker(_context, _storage.Object, _process.Object, _stateMachineFactory.Object);", span="287-287", cluster="HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs"];
m48_233 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="285-285", cluster="HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs"];
m48_91 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="WorkerFacts.cs"];
m48_201 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="WorkerFacts.cs"];
m48_69 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="80-80", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="WorkerFacts.cs"];
m48_70 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(_context, _storage.Object, null, _stateMachineFactory.Object))", span="82-83", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="WorkerFacts.cs"];
m48_71 [label="Assert.Equal(''process'', exception.ParamName)", span="85-85", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="WorkerFacts.cs"];
m48_72 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="80-80", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="WorkerFacts.cs"];
m48_53 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="62-62", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs"];
m48_54 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(null, _storage.Object, _process.Object, _stateMachineFactory.Object))", span="64-65", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs"];
m48_55 [label="Assert.Equal(''context'', exception.ParamName)", span="67-67", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs"];
m48_56 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="62-62", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs"];
m48_25 [label="Entry HangFire.Storage.JobData.JobData()", span="20-20", cluster="HangFire.Storage.JobData.JobData()", file="WorkerFacts.cs"];
m48_24 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="WorkerFacts.cs"];
m48_26 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerFacts.cs"];
m48_40 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="WorkerFacts.cs"];
m48_21 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="WorkerFacts.cs"];
m48_19 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="WorkerFacts.cs"];
m48_48 [label="Entry Unk.GetJobData", span="", cluster="Unk.GetJobData", file="WorkerFacts.cs"];
m48_17 [label="Entry Mock<IJobPerformanceProcess>.cstr", span="", cluster="Mock<IJobPerformanceProcess>.cstr", file="WorkerFacts.cs"];
m48_164 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="200-200", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs"];
m48_165 [label="var worker = CreateWorker()", span="202-202", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs"];
m48_166 [label="worker.Execute(_token)", span="204-204", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs"];
m48_167 [label="_process.Verify(x => x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>()))", span="206-208", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs"];
m48_168 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="200-200", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs"];
m48_235 [label="HangFire.Core.Tests.Server.WorkerFacts", span="", file="WorkerFacts.cs"];
m48_236 [label=exception, span="", file="WorkerFacts.cs"];
m48_237 [label=exception, span="", file="WorkerFacts.cs"];
n80 -> n11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n80 -> n12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n80 -> n13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n80 -> n15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n80 -> n16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n80 -> n17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n80 -> n18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n80 -> n34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n80 -> n35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n80 -> n42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n80 -> n43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n80 -> n44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n80 -> n52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n80 -> n53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n80 -> n62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n80 -> n63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n80 -> n66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n80 -> n67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
n2 -> n3  [key=0, style=solid];
n3 -> n2  [key=0, style=bold, color=blue];
n4 -> n5  [key=0, style=solid];
n5 -> n4  [key=0, style=bold, color=blue];
n6 -> n7  [key=0, style=solid];
n6 -> n9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
n6 -> n11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
n6 -> n12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
n7 -> n8  [key=0, style=solid];
n7 -> n9  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n8 -> n19  [key=0, style=solid];
n8 -> n20  [key=2, style=dotted];
n10 -> n19  [key=0, style=solid];
n10 -> n20  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n21  [key=2, style=dotted];
n13 -> n22  [key=2, style=dotted];
n13 -> n23  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n24  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n25  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n26  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n27  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid];
n18 -> n28  [key=2, style=dotted];
n19 -> n6  [key=0, style=bold, color=blue];
n28 -> n42  [key=0, style=solid];
n29 -> n30  [key=0, style=solid];
n30 -> n29  [key=0, style=bold, color=blue];
n31 -> n32  [key=0, style=solid];
n32 -> n31  [key=0, style=bold, color=blue];
n33 -> n34  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n39  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n37  [key=0, style=solid];
n35 -> n40  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n36 -> n41  [key=2, style=dotted];
n37 -> n38  [key=0, style=solid];
n37 -> n24  [key=2, style=dotted];
n38 -> n33  [key=0, style=bold, color=blue];
n42 -> n43  [key=0, style=solid];
n42 -> n46  [key=2, style=dotted];
n43 -> n44  [key=0, style=solid];
n43 -> n47  [key=2, style=dotted];
n43 -> n48  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n44 -> n49  [key=2, style=dotted];
n44 -> n50  [key=2, style=dotted];
n48 -> n51  [key=0, style=solid];
n45 -> n28  [key=0, style=bold, color=blue];
n49 -> n76  [key=0, style=solid];
n51 -> n52  [key=0, style=solid];
n51 -> n56  [key=2, style=dotted];
n51 -> n53  [key=1, style=dashed, color=darkseagreen4, label=components];
n51 -> n54  [key=1, style=dashed, color=darkseagreen4, label=components];
n52 -> n53  [key=0, style=solid];
n52 -> n57  [key=2, style=dotted];
n52 -> n58  [key=2, style=dotted];
n52 -> n59  [key=2, style=dotted];
n53 -> n54  [key=0, style=solid];
n53 -> n60  [key=2, style=dotted];
n53 -> n58  [key=2, style=dotted];
n53 -> n59  [key=2, style=dotted];
n54 -> n55  [key=0, style=solid];
n57 -> n61  [key=0, style=solid];
n57 -> n63  [key=0, style=bold, color=crimson];
n57 -> n65  [key=0, style=bold, color=crimson];
n57 -> n66  [key=0, style=bold, color=crimson];
n57 -> n67  [key=0, style=bold, color=crimson];
n57 -> n68  [key=0, style=bold, color=crimson];
n55 -> n48  [key=0, style=bold, color=blue];
n61 -> n62  [key=0, style=solid];
n61 -> n63  [key=1, style=dashed, color=darkseagreen4, label=i];
n61 -> n64  [key=1, style=dashed, color=darkseagreen4, label=i];
n63 -> n64  [key=0, style=solid];
n63 -> n70  [key=2, style=dotted];
n63 -> n71  [key=2, style=dotted];
n65 -> n66  [key=0, style=solid];
n65 -> n72  [key=2, style=dotted];
n66 -> n67  [key=0, style=solid];
n66 -> n73  [key=2, style=dotted];
n67 -> n68  [key=0, style=solid];
n67 -> n74  [key=2, style=dotted];
n68 -> n69  [key=0, style=solid];
n68 -> n75  [key=2, style=dotted];
n62 -> n63  [key=0, style=solid];
n62 -> n65  [key=0, style=solid];
n64 -> n62  [key=0, style=solid];
n64 -> n64  [key=1, style=dashed, color=darkseagreen4, label=i];
n69 -> n57  [key=0, style=bold, color=blue];
n76 -> n77  [key=0, style=solid];
n76 -> n78  [key=2, style=dotted];
n76 -> n79  [key=2, style=dotted];
n77 -> n49  [key=0, style=bold, color=blue];
m0_52 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Common.JobHelperFacts"];
m0_52 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Common.JobHelperFacts"];
m0_52 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Common.JobHelperFacts"];
m0_52 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Common.JobHelperFacts"];
m0_52 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Common.JobHelperFacts"];
m0_52 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Common.JobHelperFacts"];
m0_52 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Common.JobHelperFacts"];
m0_52 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Common.JobHelperFacts"];
m0_52 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Common.JobHelperFacts"];
m0_52 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Common.JobHelperFacts"];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>"];
m0_18 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>"];
m0_18 -> m0_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString SidebarMenu"];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=0, style=solid];
m0_19 -> m0_17  [key=2, style=dotted];
m0_20 -> m0_22  [key=0, style=solid];
m0_20 -> n20  [key=2, style=dotted];
m0_20 -> m0_6  [key=2, style=dotted];
m0_20 -> m0_10  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_17  [key=2, style=dotted];
m0_21 -> m0_13  [key=2, style=dotted];
m0_21 -> m0_10  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m0_21 -> m0_18  [key=0, style=bold, color=blue];
m0_22 -> m0_18  [key=0, style=bold, color=blue];
m0_22 -> m0_11  [key=3, color=darkorchid, style=bold, label="Property variable int MaxRetryAttempts"];
m0_22 -> m0_23  [key=0, style=solid];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_56 -> m0_75  [key=3, color=darkorchid, style=bold, label="Parameter variable string jobId"];
m0_57 -> m0_58  [key=0, style=solid];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_51  [key=2, style=dotted];
m0_58 -> m0_60  [key=2, style=dotted];
m0_58 -> m0_61  [key=2, style=dotted];
m0_59 -> m0_56  [key=0, style=bold, color=blue];
m0_130 -> m0_131  [key=0, style=solid];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_134  [key=2, style=dotted];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_51  [key=2, style=dotted];
m0_133 -> m0_130  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m0_2 -> m0_5  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_4  [key=0, style=solid];
m0_2 -> n20  [key=2, style=dotted];
m0_2 -> m0_6  [key=2, style=dotted];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_4  [key=2, style=dotted];
m0_1 -> m0_3  [key=0, style=solid];
m0_1 -> m0_10  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m0_3 -> m0_0  [key=0, style=bold, color=blue];
m0_3 -> m0_4  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pager"];
m0_35 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pager"];
m0_35 -> m0_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString Paginator"];
m0_35 -> m0_32  [key=0, style=bold, color=blue];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_38  [key=0, style=solid];
m0_37 -> m0_39  [key=0, style=solid];
m0_37 -> n20  [key=2, style=dotted];
m0_37 -> m0_6  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_40  [key=2, style=dotted];
m0_38 -> m0_13  [key=2, style=dotted];
m0_38 -> m0_7  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m0_39 -> m0_35  [key=0, style=bold, color=blue];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_37  [key=2, style=dotted];
m0_39 -> m0_42  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_26  [key=2, style=dotted];
m0_23 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardMetric"];
m0_23 -> m0_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString BlockMetric"];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_10  [key=2, style=dotted];
m0_24 -> m0_26  [key=0, style=solid];
m0_25 -> m0_22  [key=0, style=bold, color=blue];
m0_25 -> m0_27  [key=0, style=solid];
m0_25 -> n20  [key=2, style=dotted];
m0_25 -> m0_6  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [key=2, style=dotted];
m0_10 -> m0_13  [key=2, style=dotted];
m0_10 -> m0_1  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan interval"];
m0_10 -> m0_21  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m0_7 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_7 -> m0_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString Breadcrumbs"];
m0_7 -> m0_7  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m0_7 -> m0_4  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=0, style=solid];
m0_9 -> n20  [key=2, style=dotted];
m0_9 -> m0_6  [key=2, style=dotted];
m0_11 -> m0_7  [key=0, style=bold, color=blue];
m0_11 -> m0_12  [key=0, style=solid, color=green];
m0_11 -> m0_11  [key=3, color=darkorchid, style=bold, label="Field variable int DefaultMaxRetryAttempts"];
m0_31 -> m0_33  [key=0, style=solid];
m0_31 -> n20  [key=2, style=dotted];
m0_31 -> m0_6  [key=2, style=dotted];
m0_122 -> m0_123  [key=0, style=solid];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_125  [key=2, style=dotted];
m0_123 -> m0_126  [key=2, style=dotted];
m0_123 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_124 -> m0_122  [key=0, style=bold, color=blue];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_51  [key=2, style=dotted];
m0_48 -> m0_52  [key=2, style=dotted];
m0_50 -> m0_10  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_47  [key=2, style=dotted];
m0_49 -> m0_37  [key=2, style=dotted];
m0_49 -> m0_13  [key=0, style=bold, color=blue];
m0_51 -> m0_48  [key=0, style=bold, color=blue];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_44  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString JobsSidebar"];
m0_14 -> m0_5  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_17  [key=2, style=dotted];
m0_15 -> m0_13  [key=2, style=dotted];
m0_15 -> m0_10  [key=2, style=dotted];
m0_16 -> m0_14  [key=0, style=bold, color=blue];
m0_16 -> m0_11  [key=0, style=bold, color=blue];
m0_143 -> m0_144  [key=0, style=solid];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_51  [key=2, style=dotted];
m0_144 -> m0_146  [key=2, style=dotted];
m0_145 -> m0_143  [key=0, style=bold, color=blue];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_28  [key=2, style=dotted];
m0_26 -> m0_13  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_50  [key=2, style=dotted];
m0_82 -> m0_147  [key=0, style=solid];
m0_82 -> m0_62  [key=3, color=darkorchid, style=bold, label="Parameter variable string text"];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_149  [key=2, style=dotted];
m0_148 -> m0_82  [key=0, style=bold, color=blue];
m0_53 -> m0_54  [key=0, style=solid];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_51  [key=2, style=dotted];
m0_55 -> m0_53  [key=0, style=bold, color=blue];
m0_4 -> m0_0  [key=0, style=bold, color=blue];
m0_27 -> m0_23  [key=0, style=bold, color=blue];
m0_27 -> m0_28  [key=0, style=solid];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString MomentTitle"];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_86  [key=2, style=dotted];
m0_88 -> m0_53  [key=2, style=dotted];
m0_89 -> m0_87  [key=0, style=bold, color=blue];
m0_6 -> m0_7  [key=0, style=solid];
m0_40 -> m0_10  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_41 -> m0_38  [key=0, style=bold, color=blue];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pager"];
m0_41 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pager"];
m0_41 -> m0_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString PerPageSelector"];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_137  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_135 -> m0_138  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_140  [key=2, style=dotted];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_141  [key=2, style=dotted];
m0_137 -> m0_142  [key=2, style=dotted];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_51  [key=2, style=dotted];
m0_139 -> m0_135  [key=0, style=bold, color=blue];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m0_62 -> m0_79  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.Common.Job job"];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_65  [key=0, style=solid];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_67  [key=2, style=dotted];
m0_64 -> m0_66  [key=0, style=solid];
m0_66 -> m0_62  [key=0, style=bold, color=blue];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_90 -> m0_95  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m0_90 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_93  [key=0, style=solid];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_96  [key=0, style=solid];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_117  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid, color=red];
m0_96 -> m0_118  [key=2, style=dotted];
m0_96 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m0_96 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m0_96 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m0_96 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m0_96 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m0_96 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m0_96 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m0_96 -> m0_104  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m0_96 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m0_96 -> m0_106  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m0_96 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m0_96 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m0_96 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m0_92 -> m0_115  [key=0, style=solid];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_116  [key=2, style=dotted];
m0_93 -> m0_95  [key=1, style=dashed, color=darkseagreen4, label=builder];
m0_93 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label=builder];
m0_93 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label=builder];
m0_93 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label=builder];
m0_93 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label=builder];
m0_93 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=builder];
m0_93 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label=builder];
m0_93 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label=builder];
m0_93 -> m0_111  [key=1, style=dashed, color=darkseagreen4, label=builder];
m0_93 -> m0_112  [key=1, style=dashed, color=darkseagreen4, label=builder];
m0_93 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label=builder];
m0_93 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label=builder];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_117  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_117  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_117  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_119  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_117  [key=2, style=dotted];
m0_108 -> m0_111  [key=0, style=solid];
m0_108 -> m0_117  [key=2, style=dotted];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_117  [key=2, style=dotted];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_113  [key=0, style=solid];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_117  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_120  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_121  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid, color=red];
m0_97 -> m0_99  [key=0, style=solid, color=red];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_101  [key=0, style=solid];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_103  [key=0, style=solid];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_111  [key=0, style=solid];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_109  [key=0, style=solid];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_108  [key=0, style=solid];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_111  [key=0, style=solid];
m0_115 -> m0_90  [key=0, style=bold, color=blue];
m0_12 -> m0_13  [key=0, style=solid, color=green];
m0_12 -> m0_17  [key=2, style=dotted, color=green];
m0_12 -> m0_14  [key=1, style=dashed, color=green, label=stringResult];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_34  [key=2, style=dotted];
m0_32 -> m0_13  [key=2, style=dotted];
m0_34 -> m0_10  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_37  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_36  [key=2, style=dotted];
m0_33 -> m0_29  [key=0, style=bold, color=blue];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardMetric"];
m0_29 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardMetric"];
m0_29 -> m0_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString InlineMetric"];
m0_29 -> m0_10  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_32  [key=0, style=solid];
m0_30 -> m0_27  [key=0, style=bold, color=blue];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString RelativeTime"];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_86  [key=2, style=dotted];
m0_84 -> m0_53  [key=2, style=dotted];
m0_85 -> m0_83  [key=0, style=bold, color=blue];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_31  [key=2, style=dotted];
m0_127 -> m0_128  [key=0, style=solid];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_128  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, string>"];
m0_129 -> m0_127  [key=0, style=bold, color=blue];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_68 -> m0_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString StateLabel"];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_71  [key=0, style=solid];
m0_69 -> m0_73  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_74  [key=2, style=dotted];
m0_71 -> m0_53  [key=2, style=dotted];
m0_70 -> m0_72  [key=0, style=solid];
m0_70 -> m0_53  [key=2, style=dotted];
m0_72 -> m0_68  [key=0, style=bold, color=blue];
m0_43 -> m0_45  [key=0, style=solid];
m0_43 -> n20  [key=2, style=dotted];
m0_43 -> m0_6  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_46  [key=2, style=dotted];
m0_44 -> m0_13  [key=2, style=dotted];
m0_44 -> m0_5  [key=2, style=dotted];
m0_44 -> m0_47  [key=2, style=dotted];
m0_45 -> m0_41  [key=0, style=bold, color=blue];
m0_45 -> m0_5  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_47  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString JobIdLink"];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_78  [key=2, style=dotted];
m0_76 -> m0_56  [key=2, style=dotted];
m0_76 -> m0_53  [key=2, style=dotted];
m0_77 -> m0_75  [key=0, style=bold, color=blue];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString JobNameLink"];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_78  [key=2, style=dotted];
m0_80 -> m0_62  [key=2, style=dotted];
m0_80 -> m0_82  [key=2, style=dotted];
m0_80 -> m0_53  [key=2, style=dotted];
m0_81 -> m0_79  [key=0, style=bold, color=blue];
m0_46 -> m0_43  [key=0, style=bold, color=blue];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_17  [key=2, style=dotted];
m0_13 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=intResult];
m0_13 -> m0_47  [key=0, style=solid];
m0_13 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m0_150 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m0_150 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m0_150 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m0_150 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m0_150 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m0_150 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m0_150 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m0_150 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m0_150 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m0_150 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m0_150 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m0_150 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m0_150 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m0_150 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m0_150 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m0_150 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.HtmlHelper"];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m1_19 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_24  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_30  [key=2, style=dotted];
m1_24 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=context];
m1_21 -> m1_29  [key=0, style=solid];
m1_21 -> n20  [key=2, style=dotted];
m1_23 -> m1_29  [key=0, style=solid];
m1_23 -> n20  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_31  [key=2, style=dotted];
m1_26 -> m1_29  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_32  [key=2, style=dotted];
m1_29 -> m1_19  [key=0, style=bold, color=blue];
m1_33 -> m1_34  [key=0, style=solid];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_36  [key=2, style=dotted];
m1_35 -> m1_33  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_4  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_2  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateMachineFactory"];
m1_6 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.IJobCreationProcess"];
m1_6 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobStorage"];
m1_6 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateMachineFactory"];
m1_6 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.IJobCreationProcess"];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_13  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_18  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_8 -> m1_16  [key=0, style=solid];
m1_8 -> n20  [key=2, style=dotted];
m1_10 -> m1_16  [key=0, style=solid];
m1_10 -> n20  [key=2, style=dotted];
m1_12 -> m1_16  [key=0, style=solid];
m1_12 -> n20  [key=2, style=dotted];
m1_16 -> m1_6  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m1_37 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobClient"];
m1_37 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobClient"];
m1_37 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobClient"];
m1_37 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobClient"];
m1_37 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobClient"];
m1_37 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobClient"];
m2_31 -> m2_32  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_21  [key=2, style=dotted];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_37  [key=2, style=dotted];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_23  [key=2, style=dotted];
m2_34 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_23  [key=2, style=dotted];
m2_35 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_36 -> m2_31  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid, color=red];
m2_1 -> m2_2  [key=0, style=solid, color=red];
m2_1 -> m2_5  [key=2, style=dotted, color=red];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_5  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> n56  [key=2, style=dotted];
m2_4 -> m2_0  [key=0, style=bold, color=blue];
m2_7 -> m2_8  [key=0, style=solid];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_10  [key=2, style=dotted];
m2_8 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_9 -> m2_7  [key=0, style=bold, color=blue];
m2_82 -> m2_83  [key=0, style=solid];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_21  [key=2, style=dotted];
m2_83 -> m2_85  [key=1, style=dashed, color=darkseagreen4, label=collection];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_87  [key=2, style=dotted];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_75  [key=2, style=dotted];
m2_86 -> m2_82  [key=0, style=bold, color=blue];
m2_88 -> m2_89  [key=0, style=solid];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_5  [key=2, style=dotted];
m2_89 -> m2_91  [key=1, style=dashed, color=darkseagreen4, label=element];
m2_89 -> m2_92  [key=1, style=dashed, color=darkseagreen4, label=element];
m2_89 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label=element];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_21  [key=2, style=dotted];
m2_90 -> m2_92  [key=1, style=dashed, color=darkseagreen4, label=collection];
m2_90 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label=collection];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_95  [key=2, style=dotted];
m2_91 -> m2_96  [key=2, style=dotted];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_81  [key=2, style=dotted];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_95  [key=2, style=dotted];
m2_93 -> m2_97  [key=2, style=dotted];
m2_94 -> m2_88  [key=0, style=bold, color=blue];
m2_21 -> m2_119  [key=0, style=solid];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_14  [key=2, style=dotted];
m2_120 -> m2_21  [key=0, style=bold, color=blue];
m2_45 -> m2_46  [key=0, style=solid];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_21  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_51  [key=2, style=dotted];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_23  [key=2, style=dotted];
m2_48 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_23  [key=2, style=dotted];
m2_49 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_50 -> m2_45  [key=0, style=bold, color=blue];
m2_106 -> m2_107  [key=0, style=solid];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_21  [key=2, style=dotted];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_96  [key=2, style=dotted];
m2_109 -> m2_106  [key=0, style=bold, color=blue];
m2_71 -> m2_72  [key=0, style=solid];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_21  [key=2, style=dotted];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_75  [key=2, style=dotted];
m2_74 -> m2_71  [key=0, style=bold, color=blue];
m2_98 -> m2_99  [key=0, style=solid];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_5  [key=2, style=dotted];
m2_99 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label=supervisor];
m2_99 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label=supervisor];
m2_99 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=supervisor];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_21  [key=2, style=dotted];
m2_100 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label=collection];
m2_100 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=collection];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_81  [key=2, style=dotted];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_105  [key=2, style=dotted];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_95  [key=2, style=dotted];
m2_103 -> m2_96  [key=2, style=dotted];
m2_104 -> m2_98  [key=0, style=bold, color=blue];
m2_76 -> m2_77  [key=0, style=solid];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_21  [key=2, style=dotted];
m2_77 -> m2_79  [key=1, style=dashed, color=darkseagreen4, label=collection];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_5  [key=2, style=dotted];
m2_78 -> m2_81  [key=2, style=dotted];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_75  [key=2, style=dotted];
m2_80 -> m2_76  [key=0, style=bold, color=blue];
m2_68 -> m2_69  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_14  [key=2, style=dotted];
m2_13 -> m2_11  [key=0, style=bold, color=blue];
m2_24 -> m2_25  [key=0, style=solid];
m2_28 -> m2_29  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_27  [key=2, style=dotted];
m2_26 -> m2_24  [key=0, style=bold, color=blue];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_27  [key=2, style=dotted];
m2_30 -> m2_28  [key=0, style=bold, color=blue];
m2_38 -> m2_39  [key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_41  [key=2, style=dotted];
m2_40 -> m2_38  [key=0, style=bold, color=blue];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_41  [key=2, style=dotted];
m2_44 -> m2_42  [key=0, style=bold, color=blue];
m2_52 -> m2_53  [key=0, style=solid];
m2_56 -> m2_57  [key=0, style=solid];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_55  [key=2, style=dotted];
m2_54 -> m2_52  [key=0, style=bold, color=blue];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_55  [key=2, style=dotted];
m2_58 -> m2_56  [key=0, style=bold, color=blue];
m2_65 -> m2_66  [key=0, style=solid];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_41  [key=2, style=dotted];
m2_67 -> m2_65  [key=0, style=bold, color=blue];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_41  [key=2, style=dotted];
m2_70 -> m2_68  [key=0, style=bold, color=blue];
m2_59 -> m2_60  [key=0, style=solid];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_21  [key=2, style=dotted];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_51  [key=2, style=dotted];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_23  [key=2, style=dotted];
m2_62 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_23  [key=2, style=dotted];
m2_63 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_64 -> m2_59  [key=0, style=bold, color=blue];
m2_110 -> m2_111  [key=0, style=solid];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_21  [key=2, style=dotted];
m2_111 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label=collection];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_114  [key=1, style=dashed, color=darkseagreen4, label=array];
m2_112 -> m2_115  [key=1, style=dashed, color=darkseagreen4, label=array];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_117  [key=2, style=dotted];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_118  [key=2, style=dotted];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_118  [key=2, style=dotted];
m2_116 -> m2_110  [key=0, style=bold, color=blue];
m2_15 -> m2_16  [key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_21  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_22  [key=2, style=dotted];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_23  [key=2, style=dotted];
m2_18 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_23  [key=2, style=dotted];
m2_19 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_20 -> m2_15  [key=0, style=bold, color=blue];
m2_121 -> m2_1  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_83  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_90  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_114  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m2_121 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_23 -> m3_19  [key=0, style=bold, color=blue];
m3_21 -> m3_17  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_119  [key=0, style=solid];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_24  [key=2, style=dotted];
m3_20 -> m3_15  [key=0, style=bold, color=blue];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_25  [key=2, style=dotted];
m3_22 -> m3_26  [key=2, style=dotted];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_23  [key=2, style=dotted];
m3_19 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_34  [key=2, style=dotted];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_21  [key=2, style=dotted];
m3_32 -> m3_27  [key=0, style=bold, color=blue];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_37  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_23  [key=2, style=dotted];
m3_34 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_23  [key=2, style=dotted];
m3_35 -> m3_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_36 -> m3_31  [key=0, style=bold, color=blue];
m3_36 -> m3_8  [key=2, style=dotted];
m3_36 -> m3_37  [key=0, style=solid];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_5  [key=2, style=dotted];
m3_1 -> m3_3  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_5  [key=2, style=dotted];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> n56  [key=2, style=dotted];
m3_4 -> m3_0  [key=0, style=bold, color=blue];
m3_4 -> m3_5  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_4  [key=0, style=bold, color=blue];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_10  [key=2, style=dotted];
m3_8 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_8 -> m3_44  [key=0, style=solid];
m3_9 -> m3_7  [key=0, style=bold, color=blue];
m3_9 -> m3_10  [key=0, style=solid];
m3_82 -> m3_83  [key=0, style=solid];
m3_83 -> m3_84  [key=0, style=solid];
m3_83 -> m3_21  [key=2, style=dotted];
m3_83 -> m3_85  [key=1, style=dashed, color=darkseagreen4, label=collection];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_87  [key=2, style=dotted];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_75  [key=2, style=dotted];
m3_86 -> m3_82  [key=0, style=bold, color=blue];
m3_88 -> m3_89  [key=0, style=solid];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_5  [key=2, style=dotted];
m3_89 -> m3_91  [key=1, style=dashed, color=darkseagreen4, label=element];
m3_89 -> m3_92  [key=1, style=dashed, color=darkseagreen4, label=element];
m3_89 -> m3_93  [key=1, style=dashed, color=darkseagreen4, label=element];
m3_90 -> m3_91  [key=0, style=solid];
m3_90 -> m3_21  [key=2, style=dotted];
m3_90 -> m3_92  [key=1, style=dashed, color=darkseagreen4, label=collection];
m3_90 -> m3_93  [key=1, style=dashed, color=darkseagreen4, label=collection];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_95  [key=2, style=dotted];
m3_91 -> m3_96  [key=2, style=dotted];
m3_92 -> m3_93  [key=0, style=solid];
m3_92 -> m3_81  [key=2, style=dotted];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_95  [key=2, style=dotted];
m3_93 -> m3_97  [key=2, style=dotted];
m3_94 -> m3_88  [key=0, style=bold, color=blue];
m3_41 -> m3_8  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid];
m3_119 -> m3_120  [key=0, style=solid];
m3_119 -> m3_14  [key=2, style=dotted];
m3_120 -> m3_21  [key=0, style=bold, color=blue];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_24  [key=2, style=dotted];
m3_44 -> m3_42  [key=0, style=bold, color=blue];
m3_45 -> m3_8  [key=0, style=bold, color=blue];
m3_45 -> m3_46  [key=0, style=solid];
m3_5 -> m3_8  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_27  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid, color=green];
m3_10 -> m3_8  [key=2, style=dotted];
m3_10 -> m3_13  [key=1, style=dashed, color=darkseagreen4, label=state];
m3_26 -> m3_24  [key=0, style=bold, color=blue];
m3_11 -> m3_12  [key=0, style=solid, color=green];
m3_11 -> m3_17  [key=2, style=dotted, color=green];
m3_11 -> m3_13  [key=1, style=dashed, color=green, label=data];
m3_11 -> m3_14  [key=1, style=dashed, color=green, label=data];
m3_11 -> m3_15  [key=1, style=dashed, color=green, label=data];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_3  [key=2, style=dotted];
m3_12 -> m3_14  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_18  [key=2, style=dotted];
m3_13 -> m3_3  [key=2, style=dotted];
m3_13 -> m3_11  [key=0, style=bold, color=blue];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_3  [key=2, style=dotted];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_3  [key=2, style=dotted];
m3_16 -> m3_9  [key=0, style=bold, color=blue];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_21  [key=2, style=dotted];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_38  [key=0, style=bold, color=blue];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_26  [key=2, style=dotted];
m3_43 -> m3_40  [key=0, style=bold, color=blue];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_41  [key=2, style=dotted];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_39  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_27 -> m3_28  [key=0, style=solid];
m3_30 -> m3_17  [key=2, style=dotted];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_28  [key=0, style=bold, color=blue];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_24  [key=2, style=dotted];
m3_29 -> m3_27  [key=2, style=dotted];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_33  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_21  [key=2, style=dotted];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_51  [key=2, style=dotted];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_23  [key=2, style=dotted];
m3_48 -> m3_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_23  [key=2, style=dotted];
m3_49 -> m3_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_50 -> m3_45  [key=0, style=bold, color=blue];
m3_106 -> m3_107  [key=0, style=solid];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_21  [key=2, style=dotted];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_96  [key=2, style=dotted];
m3_109 -> m3_106  [key=0, style=bold, color=blue];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_23  [key=2, style=dotted];
m3_18 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_71 -> m3_72  [key=0, style=solid];
m3_72 -> m3_73  [key=0, style=solid];
m3_72 -> m3_21  [key=2, style=dotted];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_75  [key=2, style=dotted];
m3_74 -> m3_71  [key=0, style=bold, color=blue];
m3_98 -> m3_99  [key=0, style=solid];
m3_99 -> m3_100  [key=0, style=solid];
m3_99 -> m3_5  [key=2, style=dotted];
m3_99 -> m3_101  [key=1, style=dashed, color=darkseagreen4, label=supervisor];
m3_99 -> m3_102  [key=1, style=dashed, color=darkseagreen4, label=supervisor];
m3_99 -> m3_103  [key=1, style=dashed, color=darkseagreen4, label=supervisor];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_21  [key=2, style=dotted];
m3_100 -> m3_102  [key=1, style=dashed, color=darkseagreen4, label=collection];
m3_100 -> m3_103  [key=1, style=dashed, color=darkseagreen4, label=collection];
m3_101 -> m3_102  [key=0, style=solid];
m3_101 -> m3_81  [key=2, style=dotted];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_105  [key=2, style=dotted];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_95  [key=2, style=dotted];
m3_103 -> m3_96  [key=2, style=dotted];
m3_104 -> m3_98  [key=0, style=bold, color=blue];
m3_6 -> m3_3  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_76 -> m3_77  [key=0, style=solid];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_21  [key=2, style=dotted];
m3_77 -> m3_79  [key=1, style=dashed, color=darkseagreen4, label=collection];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_5  [key=2, style=dotted];
m3_78 -> m3_81  [key=2, style=dotted];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_75  [key=2, style=dotted];
m3_80 -> m3_76  [key=0, style=bold, color=blue];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_22  [key=2, style=dotted];
m3_68 -> m3_69  [key=0, style=solid];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_35  [key=0, style=bold, color=blue];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_41  [key=2, style=dotted];
m3_52 -> m3_53  [key=0, style=solid];
m3_56 -> m3_57  [key=0, style=solid];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_55  [key=2, style=dotted];
m3_54 -> m3_52  [key=0, style=bold, color=blue];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_55  [key=2, style=dotted];
m3_58 -> m3_56  [key=0, style=bold, color=blue];
m3_65 -> m3_66  [key=0, style=solid];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_41  [key=2, style=dotted];
m3_67 -> m3_65  [key=0, style=bold, color=blue];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_41  [key=2, style=dotted];
m3_70 -> m3_68  [key=0, style=bold, color=blue];
m3_59 -> m3_60  [key=0, style=solid];
m3_60 -> m3_61  [key=0, style=solid];
m3_60 -> m3_21  [key=2, style=dotted];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_51  [key=2, style=dotted];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_23  [key=2, style=dotted];
m3_62 -> m3_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_23  [key=2, style=dotted];
m3_63 -> m3_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_64 -> m3_59  [key=0, style=bold, color=blue];
m3_110 -> m3_111  [key=0, style=solid];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> m3_21  [key=2, style=dotted];
m3_111 -> m3_113  [key=1, style=dashed, color=darkseagreen4, label=collection];
m3_112 -> m3_113  [key=0, style=solid];
m3_112 -> m3_114  [key=1, style=dashed, color=darkseagreen4, label=array];
m3_112 -> m3_115  [key=1, style=dashed, color=darkseagreen4, label=array];
m3_113 -> m3_114  [key=0, style=solid];
m3_113 -> m3_117  [key=2, style=dotted];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> m3_118  [key=2, style=dotted];
m3_115 -> m3_116  [key=0, style=solid];
m3_115 -> m3_118  [key=2, style=dotted];
m3_116 -> m3_110  [key=0, style=bold, color=blue];
m3_121 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_60  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_77  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_83  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_90  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_100  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_111  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_114  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m3_121 -> m3_119  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerSupervisorCollectionFacts"];
m4_5 -> m4_6  [key=0, style=solid];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> n23  [key=2, style=dotted];
m4_6 -> m4_4  [key=2, style=dotted];
m4_7 -> m4_5  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=2, style=dotted];
m4_1 -> m4_4  [key=2, style=dotted];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_17 -> m4_18  [key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_16  [key=2, style=dotted];
m4_19 -> m4_17  [key=0, style=bold, color=blue];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_3  [key=2, style=dotted];
m4_46 -> m4_25  [key=2, style=dotted];
m4_45 -> m4_46  [key=0, style=solid];
m4_47 -> m4_45  [key=0, style=bold, color=blue];
m4_12 -> m4_13  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_15  [key=2, style=dotted];
m4_13 -> m4_16  [key=2, style=dotted];
m4_14 -> m4_12  [key=0, style=bold, color=blue];
m4_9 -> m4_10  [key=0, style=solid];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> n23  [key=2, style=dotted];
m4_10 -> m4_4  [key=2, style=dotted];
m4_11 -> m4_9  [key=0, style=bold, color=blue];
m4_41 -> m4_42  [key=0, style=solid];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_3  [key=2, style=dotted];
m4_42 -> m4_26  [key=2, style=dotted];
m4_42 -> m4_44  [key=2, style=dotted];
m4_42 -> m4_29  [key=2, style=dotted];
m4_43 -> m4_41  [key=0, style=bold, color=blue];
m4_33 -> m4_34  [key=0, style=solid];
m4_30 -> m4_31  [key=0, style=solid];
m4_31 -> m4_32  [key=0, style=solid];
m4_32 -> m4_30  [key=0, style=bold, color=blue];
m4_34 -> m4_35  [key=0, style=solid];
m4_35 -> m4_33  [key=0, style=bold, color=blue];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_3  [key=2, style=dotted];
m4_21 -> m4_25  [key=2, style=dotted];
m4_16 -> m4_20  [key=0, style=solid];
m4_16 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_16 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_3  [key=2, style=dotted];
m4_20 -> m4_24  [key=2, style=dotted];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_3  [key=2, style=dotted];
m4_22 -> m4_26  [key=2, style=dotted];
m4_22 -> m4_27  [key=2, style=dotted];
m4_22 -> m4_28  [key=2, style=dotted];
m4_22 -> m4_29  [key=2, style=dotted];
m4_22 -> m4_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_22 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_23 -> m4_16  [key=0, style=bold, color=blue];
m4_36 -> m4_37  [key=0, style=solid];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_17  [key=2, style=dotted];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_3  [key=2, style=dotted];
m4_38 -> m4_40  [key=2, style=dotted];
m4_39 -> m4_36  [key=0, style=bold, color=blue];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_50  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_3  [key=2, style=dotted];
m4_49 -> m4_52  [key=2, style=dotted];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_53  [key=2, style=dotted];
m4_51 -> m4_48  [key=0, style=bold, color=blue];
m4_54 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobSteps"];
m4_54 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobSteps"];
m4_54 -> m4_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobSteps"];
m5_35 -> m5_36  [key=0, style=solid];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_7  [key=2, style=dotted];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_39  [key=2, style=dotted];
m5_37 -> m5_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_38 -> m5_35  [key=0, style=bold, color=blue];
m5_86 -> m5_87  [key=0, style=solid];
m5_87 -> m5_88  [key=0, style=solid];
m5_87 -> m5_83  [key=2, style=dotted];
m5_88 -> m5_89  [key=0, style=solid];
m5_88 -> m5_94  [key=2, style=dotted];
m5_88 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label=runners];
m5_89 -> m5_90  [key=0, style=solid];
m5_89 -> n58  [key=2, style=dotted];
m5_89 -> m5_96  [key=2, style=dotted];
m5_89 -> m5_97  [key=2, style=dotted];
m5_89 -> m5_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_90 -> m5_91  [key=0, style=solid];
m5_90 -> m5_98  [key=2, style=dotted];
m5_90 -> n58  [key=2, style=dotted];
m5_90 -> m5_99  [key=2, style=dotted];
m5_90 -> m5_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_90 -> m5_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_90 -> m5_92  [key=1, style=dashed, color=darkseagreen4, label=componentTypes];
m5_91 -> m5_92  [key=0, style=solid];
m5_91 -> m5_96  [key=2, style=dotted];
m5_92 -> m5_93  [key=0, style=solid];
m5_92 -> m5_96  [key=2, style=dotted];
m5_93 -> m5_86  [key=0, style=bold, color=blue];
m5_83 -> m5_127  [key=0, style=solid];
m5_127 -> m5_128  [key=0, style=solid];
m5_127 -> m5_26  [key=2, style=dotted];
m5_128 -> m5_83  [key=0, style=bold, color=blue];
m5_61 -> m5_62  [key=0, style=solid];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> m5_65  [key=2, style=dotted];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_57  [key=2, style=dotted];
m5_63 -> m5_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_64 -> m5_61  [key=0, style=bold, color=blue];
m5_69 -> m5_70  [key=0, style=solid];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_73  [key=2, style=dotted];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_57  [key=2, style=dotted];
m5_71 -> m5_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_72 -> m5_69  [key=0, style=bold, color=blue];
m5_111 -> m5_112  [key=0, style=solid];
m5_112 -> m5_113  [key=0, style=solid];
m5_112 -> m5_119  [key=2, style=dotted];
m5_112 -> m5_117  [key=1, style=dashed, color=darkseagreen4, label=storageComponent];
m5_113 -> m5_114  [key=0, style=solid];
m5_113 -> m5_11  [key=2, style=dotted];
m5_113 -> m5_12  [key=2, style=dotted];
m5_113 -> m5_120  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_117 -> m5_118  [key=0, style=solid];
m5_117 -> m5_96  [key=2, style=dotted];
m5_114 -> m5_115  [key=0, style=solid];
m5_114 -> m5_83  [key=2, style=dotted];
m5_115 -> m5_116  [key=0, style=solid];
m5_115 -> m5_94  [key=2, style=dotted];
m5_116 -> m5_117  [key=0, style=solid];
m5_116 -> m5_98  [key=2, style=dotted];
m5_116 -> n58  [key=2, style=dotted];
m5_116 -> m5_99  [key=2, style=dotted];
m5_116 -> m5_124  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_118 -> m5_111  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_7  [key=2, style=dotted];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_8  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_9  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_10  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_11  [key=2, style=dotted];
m5_5 -> m5_12  [key=2, style=dotted];
m5_5 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_6 -> m5_0  [key=0, style=bold, color=blue];
m5_44 -> m5_45  [key=0, style=solid];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> m5_7  [key=2, style=dotted];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_39  [key=2, style=dotted];
m5_46 -> m5_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_47 -> m5_44  [key=0, style=bold, color=blue];
m5_77 -> m5_78  [key=0, style=solid];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_83  [key=2, style=dotted];
m5_79 -> m5_80  [key=0, style=solid];
m5_79 -> m5_84  [key=2, style=dotted];
m5_79 -> m5_81  [key=1, style=dashed, color=darkseagreen4, label=runner];
m5_80 -> m5_81  [key=0, style=solid];
m5_80 -> m5_85  [key=2, style=dotted];
m5_81 -> m5_82  [key=0, style=solid];
m5_81 -> m5_21  [key=2, style=dotted];
m5_82 -> m5_77  [key=0, style=bold, color=blue];
m5_52 -> m5_53  [key=0, style=solid];
m5_53 -> m5_54  [key=0, style=solid];
m5_53 -> m5_56  [key=2, style=dotted];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_57  [key=2, style=dotted];
m5_54 -> m5_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_55 -> m5_52  [key=0, style=bold, color=blue];
m5_17 -> m5_18  [key=0, style=solid];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_21  [key=2, style=dotted];
m5_18 -> m5_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_22  [key=2, style=dotted];
m5_20 -> m5_17  [key=0, style=bold, color=blue];
m5_124 -> m5_125  [key=0, style=solid];
m5_13 -> m5_14  [key=0, style=solid];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_16  [key=2, style=dotted];
m5_15 -> m5_13  [key=0, style=bold, color=blue];
m5_23 -> m5_24  [key=0, style=solid];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_26  [key=2, style=dotted];
m5_25 -> m5_23  [key=0, style=bold, color=blue];
m5_31 -> m5_32  [key=0, style=solid];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_34  [key=2, style=dotted];
m5_33 -> m5_31  [key=0, style=bold, color=blue];
m5_40 -> m5_41  [key=0, style=solid];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_43  [key=2, style=dotted];
m5_42 -> m5_40  [key=0, style=bold, color=blue];
m5_48 -> m5_49  [key=0, style=solid];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_51  [key=2, style=dotted];
m5_50 -> m5_48  [key=0, style=bold, color=blue];
m5_58 -> m5_59  [key=0, style=solid];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_56  [key=2, style=dotted];
m5_60 -> m5_58  [key=0, style=bold, color=blue];
m5_66 -> m5_67  [key=0, style=solid];
m5_67 -> m5_68  [key=0, style=solid];
m5_67 -> m5_65  [key=2, style=dotted];
m5_68 -> m5_66  [key=0, style=bold, color=blue];
m5_74 -> m5_75  [key=0, style=solid];
m5_75 -> m5_76  [key=0, style=solid];
m5_75 -> m5_73  [key=2, style=dotted];
m5_76 -> m5_74  [key=0, style=bold, color=blue];
m5_100 -> m5_101  [key=0, style=solid];
m5_104 -> m5_105  [key=0, style=solid];
m5_107 -> m5_108  [key=0, style=solid];
m5_101 -> m5_102  [key=0, style=solid];
m5_101 -> m5_103  [key=2, style=dotted];
m5_102 -> m5_100  [key=0, style=bold, color=blue];
m5_105 -> m5_106  [key=0, style=solid];
m5_106 -> m5_104  [key=0, style=bold, color=blue];
m5_108 -> m5_109  [key=0, style=solid];
m5_108 -> m5_110  [key=2, style=dotted];
m5_109 -> m5_107  [key=0, style=bold, color=blue];
m5_120 -> m5_121  [key=0, style=solid];
m5_121 -> m5_122  [key=0, style=solid];
m5_121 -> m5_123  [key=2, style=dotted];
m5_122 -> m5_120  [key=0, style=bold, color=blue];
m5_125 -> m5_126  [key=0, style=solid];
m5_126 -> m5_124  [key=0, style=bold, color=blue];
m5_27 -> m5_28  [key=0, style=solid];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_21  [key=2, style=dotted];
m5_28 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_22  [key=2, style=dotted];
m5_30 -> m5_27  [key=0, style=bold, color=blue];
m5_129 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobServerFacts"];
m5_129 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobServerFacts"];
m5_129 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobServerFacts"];
m5_129 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobServerFacts"];
m5_129 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobServerFacts"];
m5_129 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobServerFacts"];
m5_129 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobServerFacts"];
m5_129 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobServerFacts"];
m5_129 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobServerFacts"];
m5_129 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobServerFacts"];
m5_129 -> m5_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobServerFacts"];
m5_129 -> m5_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobServerFacts"];
m5_129 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobServerFacts"];
m5_129 -> m5_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobServerFacts"];
m5_129 -> m5_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobServerFacts"];
m5_129 -> m5_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobServerFacts"];
m5_129 -> m5_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobServerFacts"];
m5_129 -> m5_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobServerFacts"];
m5_129 -> m5_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobServerFacts"];
m5_129 -> m5_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobServerFacts"];
m5_129 -> m5_114  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobServerFacts"];
m5_129 -> m5_127  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobServerFacts"];
m6_0 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m6_0 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m6_0 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m6_0 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m6_0 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m6_5 -> m6_6  [key=0, style=solid, color=green];
m6_5 -> m6_8  [key=0, style=solid, color=green];
m6_5 -> m6_0  [key=0, style=bold, color=blue];
m6_4 -> m6_5  [key=0, style=solid, color=green];
m6_4 -> m6_18  [key=2, style=dotted];
m6_4 -> m6_19  [key=2, style=dotted];
m6_4 -> m6_6  [key=2, style=dotted];
m6_3 -> m6_5  [key=1, style=dashed, color=green, label=value];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label=row];
m6_3 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label=value];
m6_3 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label=value];
m6_3 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label=value];
m6_3 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label=value];
m6_3 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label=value];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_20  [key=2, style=dotted];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_11  [key=0, style=solid];
m6_2 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_2 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label=row];
m6_2 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_2 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_2 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_2 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_13  [key=0, style=solid];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_16  [key=0, style=solid];
m6_13 -> m6_25  [key=2, style=dotted];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_26  [key=2, style=dotted];
m6_16 -> m6_1  [key=0, style=solid];
m6_16 -> m6_28  [key=2, style=dotted];
m6_7 -> m6_19  [key=2, style=dotted];
m6_7 -> m6_1  [key=0, style=solid];
m6_7 -> m6_21  [key=2, style=dotted];
m6_7 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m6_7 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m6_7 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m6_9 -> m6_20  [key=2, style=dotted];
m6_9 -> m6_10  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_17  [key=0, style=solid];
m6_12 -> m6_1  [key=0, style=solid];
m6_12 -> m6_23  [key=2, style=dotted];
m6_12 -> m6_24  [key=2, style=dotted];
m6_15 -> m6_1  [key=0, style=solid];
m6_15 -> m6_27  [key=2, style=dotted];
m6_15 -> m6_28  [key=2, style=dotted];
m6_10 -> m6_19  [key=2, style=dotted];
m6_10 -> m6_1  [key=0, style=solid];
m6_10 -> m6_22  [key=2, style=dotted];
m6_17 -> m6_0  [key=0, style=bold, color=blue];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_42  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m8_22 -> m8_53  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_25  [key=2, style=dotted];
m8_24 -> m8_22  [key=0, style=bold, color=blue];
m8_38 -> m8_39  [key=0, style=solid];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_18  [key=2, style=dotted];
m8_40 -> m8_38  [key=0, style=bold, color=blue];
m8_36 -> m8_37  [key=0, style=solid];
m8_37 -> m8_36  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_16  [key=3, color=darkorchid, style=bold, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext"];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_5  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_6  [key=2, style=dotted];
m8_2 -> m8_7  [key=2, style=dotted];
m8_2 -> m8_10  [key=3, color=darkorchid, style=bold, label="Field variable Hangfire.SqlServer.SqlServerStorage _storage"];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_8  [key=2, style=dotted];
m8_3 -> m8_11  [key=3, color=darkorchid, style=bold, label="Field variable IDbConnection _connection"];
m8_4 -> m8_0  [key=0, style=bold, color=blue];
m8_18 -> m8_19  [key=0, style=solid];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_21  [key=2, style=dotted];
m8_20 -> m8_18  [key=0, style=bold, color=blue];
m8_26 -> m8_27  [key=0, style=solid];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_29  [key=2, style=dotted];
m8_28 -> m8_26  [key=0, style=bold, color=blue];
m8_41 -> m8_42  [key=0, style=solid];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_49  [key=2, style=dotted];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_22  [key=2, style=dotted];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_30  [key=2, style=dotted];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_50  [key=2, style=dotted];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_51  [key=2, style=dotted];
m8_47 -> m8_48  [key=0, style=solid];
m8_47 -> m8_26  [key=2, style=dotted];
m8_48 -> m8_41  [key=0, style=bold, color=blue];
m8_52 -> m8_53  [key=0, style=solid];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_49  [key=2, style=dotted];
m8_54 -> m8_55  [key=0, style=solid];
m8_54 -> m8_22  [key=2, style=dotted];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> m8_30  [key=2, style=dotted];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_50  [key=2, style=dotted];
m8_57 -> m8_58  [key=0, style=solid];
m8_57 -> m8_35  [key=2, style=dotted];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_51  [key=2, style=dotted];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_26  [key=2, style=dotted];
m8_60 -> m8_52  [key=0, style=bold, color=blue];
m8_9 -> m8_10  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_13  [key=2, style=dotted];
m8_11 -> m8_12  [key=0, style=solid];
m8_12 -> m8_9  [key=0, style=bold, color=blue];
m8_30 -> m8_31  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_34  [key=2, style=dotted];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_35  [key=2, style=dotted];
m8_33 -> m8_30  [key=0, style=bold, color=blue];
m8_14 -> m8_15  [key=0, style=solid];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_17  [key=0, style=solid];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_0  [key=2, style=dotted];
m8_17 -> m8_14  [key=0, style=bold, color=blue];
m8_61 -> m8_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m8_61 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m8_61 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m8_61 -> m8_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m8_61 -> m8_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m8_61 -> m8_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m8_61 -> m8_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.FailedStateFeature"];
m9_89 -> m9_90  [key=0, style=solid];
m9_90 -> m9_91  [key=0, style=solid];
m9_90 -> m9_92  [key=2, style=dotted];
m9_91 -> m9_89  [key=0, style=bold, color=blue];
m9_105 -> m9_106  [key=0, style=solid];
m9_105 -> m9_109  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_106 -> m9_107  [key=0, style=solid];
m9_106 -> m9_26  [key=2, style=dotted];
m9_106 -> m9_108  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_107 -> m9_105  [key=0, style=bold, color=blue];
m9_92 -> m9_93  [key=0, style=solid];
m9_92 -> m9_94  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_92 -> m9_97  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_93 -> m9_94  [key=0, style=solid];
m9_93 -> m9_97  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m9_94 -> m9_95  [key=0, style=solid];
m9_94 -> m9_26  [key=2, style=dotted];
m9_94 -> m9_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_95 -> m9_92  [key=0, style=bold, color=blue];
m9_71 -> m9_72  [key=0, style=solid];
m9_71 -> m9_75  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_72 -> m9_73  [key=0, style=solid];
m9_72 -> m9_26  [key=2, style=dotted];
m9_72 -> m9_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_73 -> m9_71  [key=0, style=bold, color=blue];
m9_47 -> m9_48  [key=0, style=solid];
m9_47 -> m9_49  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_47 -> m9_52  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_48 -> m9_49  [key=0, style=solid];
m9_48 -> m9_52  [key=1, style=dashed, color=darkseagreen4, label=addStateSql];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_26  [key=2, style=dotted];
m9_49 -> m9_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_50 -> m9_47  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.PersistentJobQueueProviderCollection"];
m9_0 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m9_0 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.PersistentJobQueueProviderCollection"];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=0, style=solid];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_5  [key=0, style=solid];
m9_5 -> m9_6  [key=0, style=solid];
m9_6 -> m9_7  [key=0, style=solid];
m9_2 -> m9_7  [key=0, style=solid];
m9_2 -> n20  [key=2, style=dotted];
m9_4 -> m9_7  [key=0, style=solid];
m9_4 -> n20  [key=2, style=dotted];
m9_7 -> m9_0  [key=0, style=bold, color=blue];
m9_117 -> m9_118  [key=0, style=solid];
m9_117 -> m9_119  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_117 -> m9_122  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_118 -> m9_119  [key=0, style=solid];
m9_118 -> m9_122  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m9_119 -> m9_120  [key=0, style=solid];
m9_119 -> m9_26  [key=2, style=dotted];
m9_119 -> m9_121  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_120 -> m9_117  [key=0, style=bold, color=blue];
m9_26 -> m9_124  [key=0, style=solid];
m9_124 -> m9_125  [key=0, style=solid];
m9_124 -> m9_126  [key=2, style=dotted];
m9_125 -> m9_26  [key=0, style=bold, color=blue];
m9_38 -> m9_39  [key=0, style=solid];
m9_38 -> m9_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_38 -> m9_43  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_39 -> m9_40  [key=0, style=solid];
m9_39 -> m9_43  [key=1, style=dashed, color=darkseagreen4, label=addAndSetStateSql];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_26  [key=2, style=dotted];
m9_40 -> m9_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_41 -> m9_38  [key=0, style=bold, color=blue];
m9_77 -> m9_78  [key=0, style=solid];
m9_77 -> m9_81  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_78 -> m9_79  [key=0, style=solid];
m9_78 -> m9_26  [key=2, style=dotted];
m9_78 -> m9_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_79 -> m9_77  [key=0, style=bold, color=blue];
m9_83 -> m9_84  [key=0, style=solid];
m9_83 -> m9_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_84 -> m9_85  [key=0, style=solid];
m9_84 -> m9_26  [key=2, style=dotted];
m9_84 -> m9_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_85 -> m9_83  [key=0, style=bold, color=blue];
m9_99 -> m9_100  [key=0, style=solid];
m9_99 -> m9_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_100 -> m9_101  [key=0, style=solid];
m9_100 -> m9_26  [key=2, style=dotted];
m9_100 -> m9_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_101 -> m9_99  [key=0, style=bold, color=blue];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_26  [key=2, style=dotted];
m9_24 -> m9_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_25 -> m9_23  [key=0, style=bold, color=blue];
m9_111 -> m9_112  [key=0, style=solid];
m9_111 -> m9_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_112 -> m9_113  [key=0, style=solid];
m9_112 -> m9_26  [key=2, style=dotted];
m9_112 -> m9_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_113 -> m9_111  [key=0, style=bold, color=blue];
m9_11 -> m9_12  [key=0, style=solid];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_18  [key=2, style=dotted];
m9_12 -> m9_19  [key=2, style=dotted];
m9_12 -> m9_16  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_20  [key=2, style=dotted];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_22  [key=2, style=dotted];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_16  [key=0, style=solid];
m9_15 -> m9_14  [key=0, style=solid];
m9_15 -> m9_21  [key=2, style=dotted];
m9_17 -> m9_11  [key=0, style=bold, color=blue];
m9_121 -> m9_122  [key=0, style=solid];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_30  [key=2, style=dotted];
m9_28 -> m9_31  [key=2, style=dotted];
m9_27 -> m9_28  [key=0, style=solid];
m9_29 -> m9_27  [key=0, style=bold, color=blue];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_31  [key=2, style=dotted];
m9_35 -> m9_36  [key=0, style=solid];
m9_37 -> m9_35  [key=0, style=bold, color=blue];
m9_43 -> m9_44  [key=0, style=solid];
m9_43 -> m9_45  [key=2, style=dotted];
m9_43 -> m9_46  [key=2, style=dotted];
m9_43 -> m9_31  [key=2, style=dotted];
m9_42 -> m9_43  [key=0, style=solid];
m9_44 -> m9_42  [key=0, style=bold, color=blue];
m9_52 -> m9_53  [key=0, style=solid];
m9_52 -> m9_45  [key=2, style=dotted];
m9_52 -> m9_46  [key=2, style=dotted];
m9_52 -> m9_31  [key=2, style=dotted];
m9_51 -> m9_52  [key=0, style=solid];
m9_53 -> m9_51  [key=0, style=bold, color=blue];
m9_62 -> m9_63  [key=0, style=solid];
m9_62 -> m9_64  [key=2, style=dotted];
m9_61 -> m9_62  [key=0, style=solid];
m9_63 -> m9_61  [key=0, style=bold, color=blue];
m9_69 -> m9_70  [key=0, style=solid];
m9_69 -> m9_31  [key=2, style=dotted];
m9_68 -> m9_69  [key=0, style=solid];
m9_70 -> m9_68  [key=0, style=bold, color=blue];
m9_75 -> m9_76  [key=0, style=solid];
m9_75 -> m9_30  [key=2, style=dotted];
m9_75 -> m9_31  [key=2, style=dotted];
m9_74 -> m9_75  [key=0, style=solid];
m9_76 -> m9_74  [key=0, style=bold, color=blue];
m9_81 -> m9_82  [key=0, style=solid];
m9_81 -> m9_31  [key=2, style=dotted];
m9_80 -> m9_81  [key=0, style=solid];
m9_82 -> m9_80  [key=0, style=bold, color=blue];
m9_87 -> m9_88  [key=0, style=solid];
m9_87 -> m9_30  [key=2, style=dotted];
m9_87 -> m9_31  [key=2, style=dotted];
m9_86 -> m9_87  [key=0, style=solid];
m9_88 -> m9_86  [key=0, style=bold, color=blue];
m9_97 -> m9_98  [key=0, style=solid];
m9_97 -> m9_31  [key=2, style=dotted];
m9_96 -> m9_97  [key=0, style=solid];
m9_98 -> m9_96  [key=0, style=bold, color=blue];
m9_103 -> m9_104  [key=0, style=solid];
m9_103 -> m9_31  [key=2, style=dotted];
m9_102 -> m9_103  [key=0, style=solid];
m9_104 -> m9_102  [key=0, style=bold, color=blue];
m9_109 -> m9_110  [key=0, style=solid];
m9_109 -> m9_31  [key=2, style=dotted];
m9_108 -> m9_109  [key=0, style=solid];
m9_110 -> m9_108  [key=0, style=bold, color=blue];
m9_115 -> m9_116  [key=0, style=solid];
m9_115 -> m9_31  [key=2, style=dotted];
m9_114 -> m9_115  [key=0, style=solid];
m9_116 -> m9_114  [key=0, style=bold, color=blue];
m9_122 -> m9_123  [key=0, style=solid];
m9_122 -> m9_31  [key=2, style=dotted];
m9_123 -> m9_121  [key=0, style=bold, color=blue];
m9_54 -> m9_55  [key=0, style=solid];
m9_54 -> m9_57  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_54 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_55 -> m9_56  [key=0, style=solid];
m9_55 -> m9_59  [key=2, style=dotted];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_26  [key=2, style=dotted];
m9_57 -> m9_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_60  [key=2, style=dotted];
m9_56 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label=persistentQueue];
m9_58 -> m9_54  [key=0, style=bold, color=blue];
m9_65 -> m9_66  [key=0, style=solid];
m9_65 -> m9_69  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_66 -> m9_67  [key=0, style=solid];
m9_66 -> m9_26  [key=2, style=dotted];
m9_66 -> m9_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_67 -> m9_65  [key=0, style=bold, color=blue];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_26  [key=2, style=dotted];
m9_33 -> m9_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_34 -> m9_32  [key=0, style=bold, color=blue];
m9_9 -> m9_10  [key=0, style=solid];
m9_10 -> m9_9  [key=0, style=bold, color=blue];
m9_127 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m9_127 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m9_127 -> m9_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m9_127 -> m9_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m9_127 -> m9_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m9_127 -> m9_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m9_127 -> m9_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m9_127 -> m9_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m9_127 -> m9_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m9_127 -> m9_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m9_127 -> m9_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m9_127 -> m9_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m9_127 -> m9_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m9_127 -> m9_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m9_127 -> m9_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m9_127 -> m9_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m9_127 -> m9_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m9_127 -> m9_94  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m9_127 -> m9_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m9_127 -> m9_106  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m9_127 -> m9_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m9_127 -> m9_119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m9_127 -> m9_124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m9_128 -> m9_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_129 -> m9_28  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m9_130 -> m9_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_131 -> m9_43  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_132 -> m9_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IState"];
m9_133 -> m9_43  [key=1, style=dashed, color=darkseagreen4, label=addAndSetStateSql];
m9_134 -> m9_52  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_135 -> m9_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IState"];
m9_136 -> m9_52  [key=1, style=dashed, color=darkseagreen4, label=addStateSql];
m9_137 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_138 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_139 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label=persistentQueue];
m9_140 -> m9_69  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_141 -> m9_75  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_142 -> m9_75  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m9_143 -> m9_81  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_144 -> m9_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_145 -> m9_87  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m9_146 -> m9_97  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_147 -> m9_97  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_148 -> m9_97  [key=1, style=dashed, color=darkseagreen4, label=double];
m9_149 -> m9_97  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m9_150 -> m9_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_151 -> m9_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_152 -> m9_109  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_153 -> m9_109  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_154 -> m9_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_155 -> m9_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_156 -> m9_122  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_157 -> m9_122  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_158 -> m9_122  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_159 -> m9_122  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m10_45 -> m10_352  [key=0, style=solid];
m10_45 -> m10_353  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m10_45 -> m10_354  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>"];
m10_352 -> m10_353  [key=0, style=solid];
m10_353 -> m10_354  [key=0, style=solid];
m10_353 -> m10_78  [key=2, style=dotted];
m10_353 -> m10_87  [key=2, style=dotted];
m10_354 -> m10_355  [key=0, style=solid];
m10_354 -> m10_334  [key=2, style=dotted];
m10_355 -> m10_45  [key=0, style=bold, color=blue];
m10_27 -> m10_28  [key=0, style=solid];
m10_28 -> m10_29  [key=0, style=solid];
m10_28 -> m10_10  [key=2, style=dotted];
m10_28 -> m10_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_29 -> m10_27  [key=0, style=bold, color=blue];
m10_356 -> m10_357  [key=0, style=solid];
m10_356 -> m10_358  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>"];
m10_356 -> m10_361  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>"];
m10_357 -> m10_358  [key=0, style=solid];
m10_357 -> m10_365  [key=2, style=dotted];
m10_357 -> m10_362  [key=1, style=dashed, color=darkseagreen4, label=result];
m10_357 -> m10_363  [key=1, style=dashed, color=darkseagreen4, label=result];
m10_358 -> m10_359  [key=0, style=solid];
m10_358 -> m10_363  [key=0, style=solid];
m10_358 -> m10_361  [key=1, style=dashed, color=darkseagreen4, label=job];
m10_358 -> m10_362  [key=1, style=dashed, color=darkseagreen4, label=job];
m10_361 -> m10_362  [key=0, style=solid];
m10_361 -> m10_343  [key=2, style=dotted];
m10_361 -> m10_366  [key=2, style=dotted];
m10_362 -> m10_358  [key=0, style=solid];
m10_362 -> m10_367  [key=2, style=dotted];
m10_362 -> m10_368  [key=2, style=dotted];
m10_362 -> m10_90  [key=2, style=dotted];
m10_363 -> m10_364  [key=0, style=solid];
m10_363 -> m10_369  [key=2, style=dotted];
m10_359 -> m10_360  [key=0, style=solid];
m10_359 -> m10_350  [key=2, style=dotted];
m10_360 -> m10_361  [key=0, style=solid];
m10_360 -> m10_220  [key=2, style=dotted];
m10_364 -> m10_356  [key=0, style=bold, color=blue];
m10_14 -> m10_339  [key=0, style=solid];
m10_14 -> m10_340  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m10_339 -> m10_340  [key=0, style=solid];
m10_340 -> m10_341  [key=0, style=solid];
m10_340 -> m10_78  [key=2, style=dotted];
m10_340 -> m10_255  [key=2, style=dotted];
m10_341 -> m10_342  [key=0, style=solid];
m10_342 -> m10_14  [key=0, style=bold, color=blue];
m10_227 -> m10_228  [key=0, style=solid];
m10_228 -> m10_229  [key=0, style=solid];
m10_228 -> m10_10  [key=2, style=dotted];
m10_228 -> m10_230  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_229 -> m10_227  [key=0, style=bold, color=blue];
m10_10 -> m10_327  [key=0, style=solid];
m10_327 -> m10_328  [key=0, style=solid];
m10_327 -> m10_329  [key=2, style=dotted];
m10_328 -> m10_10  [key=0, style=bold, color=blue];
m10_186 -> m10_187  [key=0, style=solid];
m10_187 -> m10_188  [key=0, style=solid];
m10_187 -> m10_10  [key=2, style=dotted];
m10_187 -> m10_189  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_188 -> m10_186  [key=0, style=bold, color=blue];
m10_233 -> m10_234  [key=0, style=solid];
m10_234 -> m10_235  [key=0, style=solid];
m10_234 -> m10_243  [key=1, style=dashed, color=darkseagreen4, label=sql];
m10_235 -> m10_236  [key=0, style=solid];
m10_235 -> m10_10  [key=2, style=dotted];
m10_235 -> m10_241  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_235 -> m10_237  [key=1, style=dashed, color=darkseagreen4, label=statistics];
m10_236 -> m10_237  [key=0, style=solid];
m10_236 -> m10_239  [key=2, style=dotted];
m10_236 -> m10_240  [key=2, style=dotted];
m10_236 -> m10_256  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_237 -> m10_238  [key=0, style=solid];
m10_238 -> m10_233  [key=0, style=bold, color=blue];
m10_169 -> m10_170  [key=0, style=solid];
m10_169 -> m10_171  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_170 -> m10_171  [key=0, style=solid];
m10_170 -> m10_20  [key=2, style=dotted];
m10_171 -> m10_172  [key=0, style=solid];
m10_171 -> m10_174  [key=2, style=dotted];
m10_171 -> m10_176  [key=1, style=dashed, color=darkseagreen4, label=fetchedJobIds];
m10_172 -> m10_173  [key=0, style=solid];
m10_172 -> m10_10  [key=2, style=dotted];
m10_172 -> m10_175  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_173 -> m10_169  [key=0, style=bold, color=blue];
m10_185 -> m10_260  [key=0, style=solid];
m10_185 -> m10_267  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_185 -> m10_273  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_185 -> m10_268  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m10_260 -> m10_261  [key=0, style=solid];
m10_260 -> m10_264  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m10_260 -> m10_265  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m10_267 -> m10_268  [key=0, style=solid];
m10_267 -> m10_207  [key=2, style=dotted];
m10_267 -> m10_272  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_267 -> m10_277  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_268 -> m10_269  [key=0, style=solid];
m10_268 -> m10_271  [key=2, style=dotted];
m10_261 -> m10_262  [key=0, style=solid];
m10_261 -> n56  [key=2, style=dotted];
m10_261 -> m10_264  [key=1, style=dashed, color=darkseagreen4, label=dates];
m10_261 -> m10_267  [key=1, style=dashed, color=darkseagreen4, label=dates];
m10_264 -> m10_265  [key=0, style=solid];
m10_264 -> m10_90  [key=2, style=dotted];
m10_265 -> m10_266  [key=0, style=solid];
m10_265 -> m10_270  [key=2, style=dotted];
m10_265 -> m10_265  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m10_262 -> m10_263  [key=0, style=solid];
m10_262 -> m10_266  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_263 -> m10_264  [key=0, style=solid];
m10_263 -> m10_267  [key=0, style=solid];
m10_266 -> m10_263  [key=0, style=solid];
m10_266 -> m10_266  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_269 -> m10_185  [key=0, style=bold, color=blue];
m10_123 -> m10_124  [key=0, style=solid];
m10_124 -> m10_125  [key=0, style=solid];
m10_124 -> m10_133  [key=2, style=dotted];
m10_124 -> m10_134  [key=2, style=dotted];
m10_124 -> m10_135  [key=2, style=dotted];
m10_124 -> m10_136  [key=2, style=dotted];
m10_124 -> m10_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_124 -> m10_145  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_124 -> m10_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_124 -> m10_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_124 -> m10_126  [key=1, style=dashed, color=darkseagreen4, label=tuples];
m10_125 -> m10_126  [key=0, style=solid];
m10_125 -> m10_137  [key=2, style=dotted];
m10_125 -> m10_130  [key=1, style=dashed, color=darkseagreen4, label=result];
m10_125 -> m10_131  [key=1, style=dashed, color=darkseagreen4, label=result];
m10_126 -> m10_127  [key=0, style=solid];
m10_126 -> m10_131  [key=0, style=solid];
m10_126 -> m10_128  [key=1, style=dashed, color=darkseagreen4, label=tuple];
m10_126 -> m10_130  [key=1, style=dashed, color=darkseagreen4, label=tuple];
m10_130 -> m10_126  [key=0, style=solid];
m10_130 -> m10_140  [key=2, style=dotted];
m10_130 -> m10_90  [key=2, style=dotted];
m10_131 -> m10_132  [key=0, style=solid];
m10_127 -> m10_128  [key=0, style=solid];
m10_127 -> m10_138  [key=2, style=dotted];
m10_127 -> m10_129  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m10_127 -> m10_156  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m10_128 -> m10_129  [key=0, style=solid];
m10_128 -> m10_139  [key=2, style=dotted];
m10_128 -> m10_130  [key=1, style=dashed, color=darkseagreen4, label=counters];
m10_129 -> m10_130  [key=0, style=solid];
m10_129 -> m10_10  [key=2, style=dotted];
m10_129 -> m10_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_132 -> m10_123  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m10_0 -> m10_4  [key=1, style=dashed, color=darkseagreen4, label="int?"];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_4 -> m10_5  [key=0, style=solid];
m10_2 -> m10_5  [key=0, style=solid];
m10_2 -> m10_6  [key=2, style=dotted];
m10_5 -> m10_0  [key=0, style=bold, color=blue];
m10_113 -> m10_114  [key=0, style=solid];
m10_113 -> m10_117  [key=1, style=dashed, color=darkseagreen4, label=int];
m10_114 -> m10_115  [key=0, style=solid];
m10_114 -> m10_10  [key=2, style=dotted];
m10_114 -> m10_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_115 -> m10_113  [key=0, style=bold, color=blue];
m10_335 -> m10_336  [key=0, style=solid];
m10_11 -> m10_12  [key=0, style=solid];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_14  [key=2, style=dotted];
m10_13 -> m10_11  [key=0, style=bold, color=blue];
m10_30 -> m10_31  [key=0, style=solid];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_14  [key=2, style=dotted];
m10_32 -> m10_30  [key=0, style=bold, color=blue];
m10_36 -> m10_37  [key=0, style=solid];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_14  [key=2, style=dotted];
m10_38 -> m10_36  [key=0, style=bold, color=blue];
m10_43 -> m10_44  [key=0, style=solid, color=red];
m10_43 -> m10_45  [key=2, style=dotted, color=red];
m10_43 -> m10_46  [key=1, style=dashed, color=red, label="lambda expression"];
m10_42 -> m10_43  [key=0, style=solid, color=red];
m10_44 -> m10_42  [key=0, style=bold, color=blue];
m10_46 -> m10_47  [key=0, style=solid, color=red];
m10_47 -> m10_48  [key=0, style=solid, color=red];
m10_47 -> m10_49  [key=2, style=dotted, color=red];
m10_47 -> m10_50  [key=2, style=dotted, color=red];
m10_47 -> m10_51  [key=2, style=dotted, color=red];
m10_48 -> m10_46  [key=0, style=bold, color=blue];
m10_56 -> m10_57  [key=0, style=solid];
m10_56 -> m10_45  [key=2, style=dotted];
m10_56 -> m10_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_55 -> m10_56  [key=0, style=solid];
m10_57 -> m10_55  [key=0, style=bold, color=blue];
m10_58 -> m10_59  [key=0, style=solid];
m10_59 -> m10_60  [key=0, style=solid];
m10_59 -> m10_61  [key=2, style=dotted];
m10_59 -> m10_51  [key=2, style=dotted];
m10_60 -> m10_58  [key=0, style=bold, color=blue];
m10_65 -> m10_66  [key=0, style=solid];
m10_66 -> m10_67  [key=0, style=solid];
m10_66 -> m10_68  [key=2, style=dotted];
m10_67 -> m10_65  [key=0, style=bold, color=blue];
m10_72 -> m10_73  [key=0, style=solid];
m10_73 -> m10_74  [key=0, style=solid];
m10_73 -> m10_68  [key=2, style=dotted];
m10_74 -> m10_72  [key=0, style=bold, color=blue];
m10_79 -> m10_80  [key=0, style=solid];
m10_80 -> m10_81  [key=0, style=solid];
m10_80 -> m10_78  [key=2, style=dotted];
m10_80 -> m10_87  [key=2, style=dotted];
m10_80 -> m10_82  [key=1, style=dashed, color=darkseagreen4, label=servers];
m10_81 -> m10_82  [key=0, style=solid];
m10_81 -> n56  [key=2, style=dotted];
m10_81 -> m10_84  [key=1, style=dashed, color=darkseagreen4, label=result];
m10_81 -> m10_85  [key=1, style=dashed, color=darkseagreen4, label=result];
m10_82 -> m10_83  [key=0, style=solid];
m10_82 -> m10_85  [key=0, style=solid];
m10_82 -> m10_84  [key=1, style=dashed, color=darkseagreen4, label=server];
m10_84 -> m10_82  [key=0, style=solid];
m10_84 -> m10_89  [key=2, style=dotted];
m10_84 -> m10_90  [key=2, style=dotted];
m10_85 -> m10_86  [key=0, style=solid];
m10_83 -> m10_84  [key=0, style=solid];
m10_83 -> m10_78  [key=2, style=dotted];
m10_86 -> m10_79  [key=0, style=bold, color=blue];
m10_95 -> m10_96  [key=0, style=solid];
m10_95 -> m10_45  [key=2, style=dotted];
m10_95 -> m10_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_94 -> m10_95  [key=0, style=solid];
m10_96 -> m10_94  [key=0, style=bold, color=blue];
m10_97 -> m10_98  [key=0, style=solid];
m10_98 -> m10_99  [key=0, style=solid];
m10_98 -> m10_100  [key=2, style=dotted];
m10_98 -> m10_101  [key=2, style=dotted];
m10_99 -> m10_97  [key=0, style=bold, color=blue];
m10_106 -> m10_107  [key=0, style=solid];
m10_106 -> m10_45  [key=2, style=dotted];
m10_106 -> m10_108  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_105 -> m10_106  [key=0, style=solid];
m10_107 -> m10_105  [key=0, style=bold, color=blue];
m10_108 -> m10_109  [key=0, style=solid];
m10_109 -> m10_110  [key=0, style=solid];
m10_109 -> m10_111  [key=2, style=dotted];
m10_109 -> m10_50  [key=2, style=dotted];
m10_109 -> m10_112  [key=2, style=dotted];
m10_109 -> m10_101  [key=2, style=dotted];
m10_110 -> m10_108  [key=0, style=bold, color=blue];
m10_117 -> m10_118  [key=0, style=solid];
m10_117 -> m10_45  [key=2, style=dotted];
m10_117 -> m10_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_116 -> m10_117  [key=0, style=solid];
m10_118 -> m10_116  [key=0, style=bold, color=blue];
m10_119 -> m10_120  [key=0, style=solid];
m10_120 -> m10_121  [key=0, style=solid];
m10_120 -> m10_122  [key=2, style=dotted];
m10_120 -> m10_101  [key=2, style=dotted];
m10_121 -> m10_119  [key=0, style=bold, color=blue];
m10_141 -> m10_142  [key=0, style=solid];
m10_145 -> m10_146  [key=0, style=solid];
m10_149 -> m10_150  [key=0, style=solid];
m10_152 -> m10_153  [key=0, style=solid];
m10_156 -> m10_157  [key=0, style=solid];
m10_156 -> m10_158  [key=2, style=dotted];
m10_155 -> m10_156  [key=0, style=solid];
m10_142 -> m10_143  [key=0, style=solid];
m10_142 -> m10_144  [key=2, style=dotted];
m10_143 -> m10_141  [key=0, style=bold, color=blue];
m10_146 -> m10_147  [key=0, style=solid];
m10_146 -> m10_148  [key=2, style=dotted];
m10_147 -> m10_145  [key=0, style=bold, color=blue];
m10_150 -> m10_151  [key=0, style=solid];
m10_151 -> m10_149  [key=0, style=bold, color=blue];
m10_153 -> m10_154  [key=0, style=solid];
m10_154 -> m10_152  [key=0, style=bold, color=blue];
m10_157 -> m10_155  [key=0, style=bold, color=blue];
m10_166 -> m10_167  [key=0, style=solid];
m10_166 -> m10_168  [key=2, style=dotted];
m10_165 -> m10_166  [key=0, style=solid];
m10_167 -> m10_165  [key=0, style=bold, color=blue];
m10_176 -> m10_177  [key=0, style=solid];
m10_176 -> m10_178  [key=2, style=dotted];
m10_175 -> m10_176  [key=0, style=solid];
m10_177 -> m10_175  [key=0, style=bold, color=blue];
m10_182 -> m10_183  [key=0, style=solid];
m10_183 -> m10_184  [key=0, style=solid];
m10_183 -> m10_185  [key=2, style=dotted];
m10_184 -> m10_182  [key=0, style=bold, color=blue];
m10_189 -> m10_190  [key=0, style=solid];
m10_190 -> m10_191  [key=0, style=solid];
m10_190 -> m10_185  [key=2, style=dotted];
m10_191 -> m10_189  [key=0, style=bold, color=blue];
m10_197 -> m10_198  [key=0, style=solid];
m10_197 -> m10_205  [key=2, style=dotted];
m10_197 -> m10_201  [key=1, style=dashed, color=darkseagreen4, label=multi];
m10_197 -> m10_202  [key=1, style=dashed, color=darkseagreen4, label=multi];
m10_195 -> m10_196  [key=0, style=solid];
m10_195 -> m10_197  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m10_196 -> m10_197  [key=0, style=solid];
m10_198 -> m10_199  [key=0, style=solid];
m10_198 -> m10_78  [key=2, style=dotted];
m10_198 -> m10_206  [key=2, style=dotted];
m10_198 -> m10_203  [key=1, style=dashed, color=darkseagreen4, label=job];
m10_201 -> m10_202  [key=0, style=solid];
m10_201 -> m10_78  [key=2, style=dotted];
m10_201 -> m10_207  [key=2, style=dotted];
m10_201 -> m10_210  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_201 -> m10_213  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_201 -> m10_203  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m10_202 -> m10_203  [key=0, style=solid];
m10_202 -> m10_78  [key=2, style=dotted];
m10_202 -> m10_87  [key=2, style=dotted];
m10_202 -> m10_133  [key=2, style=dotted];
m10_202 -> m10_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_199 -> m10_200  [key=0, style=solid];
m10_199 -> m10_201  [key=0, style=solid];
m10_203 -> m10_204  [key=0, style=solid];
m10_203 -> m10_208  [key=2, style=dotted];
m10_203 -> m10_209  [key=2, style=dotted];
m10_200 -> m10_204  [key=0, style=solid];
m10_210 -> m10_211  [key=0, style=solid];
m10_213 -> m10_214  [key=0, style=solid];
m10_216 -> m10_217  [key=0, style=solid];
m10_204 -> m10_195  [key=0, style=bold, color=blue];
m10_211 -> m10_212  [key=0, style=solid];
m10_212 -> m10_210  [key=0, style=bold, color=blue];
m10_214 -> m10_215  [key=0, style=solid];
m10_215 -> m10_213  [key=0, style=bold, color=blue];
m10_217 -> m10_218  [key=0, style=solid];
m10_217 -> m10_219  [key=2, style=dotted];
m10_217 -> m10_220  [key=2, style=dotted];
m10_217 -> m10_78  [key=2, style=dotted];
m10_218 -> m10_216  [key=0, style=bold, color=blue];
m10_224 -> m10_225  [key=0, style=solid];
m10_225 -> m10_226  [key=0, style=solid];
m10_225 -> m10_14  [key=2, style=dotted];
m10_226 -> m10_224  [key=0, style=bold, color=blue];
m10_230 -> m10_231  [key=0, style=solid];
m10_231 -> m10_232  [key=0, style=solid];
m10_231 -> m10_14  [key=2, style=dotted];
m10_232 -> m10_230  [key=0, style=bold, color=blue];
m10_243 -> m10_244  [key=0, style=solid];
m10_243 -> m10_205  [key=2, style=dotted];
m10_243 -> m10_245  [key=1, style=dashed, color=darkseagreen4, label=multi];
m10_243 -> m10_246  [key=1, style=dashed, color=darkseagreen4, label=multi];
m10_243 -> m10_247  [key=1, style=dashed, color=darkseagreen4, label=multi];
m10_243 -> m10_248  [key=1, style=dashed, color=darkseagreen4, label=multi];
m10_243 -> m10_249  [key=1, style=dashed, color=darkseagreen4, label=multi];
m10_243 -> m10_250  [key=1, style=dashed, color=darkseagreen4, label=multi];
m10_243 -> m10_251  [key=1, style=dashed, color=darkseagreen4, label=multi];
m10_241 -> m10_242  [key=0, style=solid];
m10_241 -> m10_243  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m10_256 -> m10_257  [key=0, style=solid];
m10_242 -> m10_243  [key=0, style=solid];
m10_242 -> m10_254  [key=2, style=dotted];
m10_242 -> m10_244  [key=1, style=dashed, color=darkseagreen4, label=stats];
m10_242 -> m10_245  [key=1, style=dashed, color=darkseagreen4, label=stats];
m10_242 -> m10_246  [key=1, style=dashed, color=darkseagreen4, label=stats];
m10_242 -> m10_247  [key=1, style=dashed, color=darkseagreen4, label=stats];
m10_242 -> m10_248  [key=1, style=dashed, color=darkseagreen4, label=stats];
m10_242 -> m10_249  [key=1, style=dashed, color=darkseagreen4, label=stats];
m10_242 -> m10_250  [key=1, style=dashed, color=darkseagreen4, label=stats];
m10_242 -> m10_251  [key=1, style=dashed, color=darkseagreen4, label=stats];
m10_242 -> m10_252  [key=1, style=dashed, color=darkseagreen4, label=stats];
m10_244 -> m10_245  [key=0, style=solid];
m10_244 -> m10_78  [key=2, style=dotted];
m10_244 -> m10_255  [key=2, style=dotted];
m10_245 -> m10_246  [key=0, style=solid];
m10_245 -> m10_78  [key=2, style=dotted];
m10_245 -> m10_255  [key=2, style=dotted];
m10_246 -> m10_247  [key=0, style=solid];
m10_246 -> m10_78  [key=2, style=dotted];
m10_246 -> m10_255  [key=2, style=dotted];
m10_247 -> m10_248  [key=0, style=solid];
m10_247 -> m10_78  [key=2, style=dotted];
m10_247 -> m10_255  [key=2, style=dotted];
m10_248 -> m10_249  [key=0, style=solid];
m10_248 -> m10_78  [key=2, style=dotted];
m10_248 -> m10_255  [key=2, style=dotted];
m10_249 -> m10_250  [key=0, style=solid];
m10_249 -> m10_78  [key=2, style=dotted];
m10_249 -> m10_206  [key=2, style=dotted];
m10_250 -> m10_251  [key=0, style=solid];
m10_250 -> m10_78  [key=2, style=dotted];
m10_250 -> m10_206  [key=2, style=dotted];
m10_251 -> m10_252  [key=0, style=solid];
m10_251 -> m10_78  [key=2, style=dotted];
m10_251 -> m10_255  [key=2, style=dotted];
m10_252 -> m10_253  [key=0, style=solid];
m10_253 -> m10_241  [key=0, style=bold, color=blue];
m10_257 -> m10_258  [key=0, style=solid];
m10_257 -> m10_144  [key=2, style=dotted];
m10_257 -> m10_259  [key=2, style=dotted];
m10_258 -> m10_256  [key=0, style=bold, color=blue];
m10_273 -> m10_274  [key=0, style=solid];
m10_273 -> m10_275  [key=2, style=dotted];
m10_273 -> m10_276  [key=2, style=dotted];
m10_272 -> m10_273  [key=0, style=solid];
m10_277 -> m10_278  [key=0, style=solid];
m10_274 -> m10_272  [key=0, style=bold, color=blue];
m10_278 -> m10_279  [key=0, style=solid];
m10_279 -> m10_277  [key=0, style=bold, color=blue];
m10_292 -> m10_293  [key=0, style=solid];
m10_292 -> m10_275  [key=2, style=dotted];
m10_292 -> m10_276  [key=2, style=dotted];
m10_291 -> m10_292  [key=0, style=solid];
m10_294 -> m10_295  [key=0, style=solid];
m10_293 -> m10_291  [key=0, style=bold, color=blue];
m10_295 -> m10_296  [key=0, style=solid];
m10_296 -> m10_294  [key=0, style=bold, color=blue];
m10_316 -> m10_317  [key=0, style=solid];
m10_319 -> m10_320  [key=0, style=solid];
m10_317 -> m10_318  [key=0, style=solid];
m10_318 -> m10_316  [key=0, style=bold, color=blue];
m10_320 -> m10_321  [key=0, style=solid];
m10_321 -> m10_319  [key=0, style=bold, color=blue];
m10_336 -> m10_337  [key=0, style=solid];
m10_336 -> m10_338  [key=2, style=dotted];
m10_336 -> m10_101  [key=2, style=dotted];
m10_337 -> m10_335  [key=0, style=bold, color=blue];
m10_22 -> m10_23  [key=0, style=solid];
m10_22 -> m10_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_20  [key=2, style=dotted];
m10_24 -> m10_25  [key=0, style=solid];
m10_24 -> m10_21  [key=2, style=dotted];
m10_25 -> m10_26  [key=0, style=solid];
m10_26 -> m10_22  [key=0, style=bold, color=blue];
m10_102 -> m10_103  [key=0, style=solid];
m10_102 -> m10_106  [key=1, style=dashed, color=darkseagreen4, label=int];
m10_103 -> m10_104  [key=0, style=solid];
m10_103 -> m10_10  [key=2, style=dotted];
m10_103 -> m10_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_104 -> m10_102  [key=0, style=bold, color=blue];
m10_178 -> m10_370  [key=0, style=solid];
m10_178 -> m10_371  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m10_370 -> m10_371  [key=0, style=solid];
m10_371 -> m10_372  [key=0, style=solid];
m10_371 -> m10_78  [key=2, style=dotted];
m10_371 -> m10_87  [key=2, style=dotted];
m10_371 -> m10_373  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m10_372 -> m10_373  [key=0, style=solid];
m10_372 -> m10_377  [key=2, style=dotted];
m10_372 -> m10_374  [key=1, style=dashed, color=darkseagreen4, label=result];
m10_372 -> m10_375  [key=1, style=dashed, color=darkseagreen4, label=result];
m10_373 -> m10_374  [key=0, style=solid];
m10_373 -> m10_375  [key=0, style=solid];
m10_374 -> m10_373  [key=0, style=solid];
m10_374 -> m10_378  [key=2, style=dotted];
m10_374 -> m10_379  [key=2, style=dotted];
m10_374 -> m10_380  [key=2, style=dotted];
m10_374 -> m10_209  [key=2, style=dotted];
m10_374 -> m10_90  [key=2, style=dotted];
m10_375 -> m10_376  [key=0, style=solid];
m10_375 -> m10_369  [key=2, style=dotted];
m10_376 -> m10_178  [key=0, style=bold, color=blue];
m10_192 -> m10_193  [key=0, style=solid];
m10_192 -> m10_197  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_193 -> m10_194  [key=0, style=solid];
m10_193 -> m10_10  [key=2, style=dotted];
m10_193 -> m10_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_194 -> m10_192  [key=0, style=bold, color=blue];
m10_7 -> m10_8  [key=0, style=solid];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_10  [key=2, style=dotted];
m10_8 -> m10_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_9 -> m10_7  [key=0, style=bold, color=blue];
m10_168 -> m10_330  [key=0, style=solid];
m10_168 -> m10_331  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m10_330 -> m10_331  [key=0, style=solid];
m10_331 -> m10_332  [key=0, style=solid];
m10_331 -> m10_78  [key=2, style=dotted];
m10_331 -> m10_87  [key=2, style=dotted];
m10_332 -> m10_333  [key=0, style=solid];
m10_332 -> m10_334  [key=2, style=dotted];
m10_332 -> m10_335  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_333 -> m10_168  [key=0, style=bold, color=blue];
m10_221 -> m10_222  [key=0, style=solid];
m10_222 -> m10_223  [key=0, style=solid];
m10_222 -> m10_10  [key=2, style=dotted];
m10_222 -> m10_224  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_223 -> m10_221  [key=0, style=bold, color=blue];
m10_91 -> m10_92  [key=0, style=solid];
m10_91 -> m10_95  [key=1, style=dashed, color=darkseagreen4, label=int];
m10_92 -> m10_93  [key=0, style=solid];
m10_92 -> m10_10  [key=2, style=dotted];
m10_92 -> m10_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_93 -> m10_91  [key=0, style=bold, color=blue];
m10_343 -> m10_344  [key=0, style=solid];
m10_343 -> m10_345  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_344 -> m10_345  [key=0, style=solid];
m10_344 -> m10_350  [key=2, style=dotted];
m10_344 -> m10_346  [key=1, style=dashed, color=darkseagreen4, label=data];
m10_345 -> m10_346  [key=0, style=solid];
m10_346 -> m10_349  [key=0, style=solid];
m10_346 -> m10_351  [key=2, style=dotted];
m10_347 -> m10_348  [key=0, style=solid];
m10_348 -> m10_349  [key=0, style=solid];
m10_349 -> m10_343  [key=0, style=bold, color=blue];
m10_75 -> m10_76  [key=0, style=solid];
m10_76 -> m10_77  [key=0, style=solid];
m10_76 -> m10_78  [key=2, style=dotted];
m10_76 -> m10_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_77 -> m10_75  [key=0, style=bold, color=blue];
m10_20 -> m10_322  [key=0, style=solid];
m10_322 -> m10_323  [key=0, style=solid];
m10_322 -> m10_326  [key=2, style=dotted];
m10_323 -> m10_324  [key=0, style=solid];
m10_323 -> m10_144  [key=2, style=dotted];
m10_324 -> m10_325  [key=0, style=solid];
m10_325 -> m10_20  [key=0, style=bold, color=blue];
m10_39 -> m10_40  [key=0, style=solid, color=red];
m10_39 -> m10_43  [key=1, style=dashed, color=red, label=int];
m10_40 -> m10_41  [key=0, style=solid, color=red];
m10_40 -> m10_10  [key=2, style=dotted, color=red];
m10_40 -> m10_42  [key=1, style=dashed, color=red, label="lambda expression"];
m10_41 -> m10_39  [key=0, style=bold, color=blue];
m10_52 -> m10_53  [key=0, style=solid];
m10_52 -> m10_56  [key=1, style=dashed, color=darkseagreen4, label=int];
m10_53 -> m10_54  [key=0, style=solid];
m10_53 -> m10_10  [key=2, style=dotted];
m10_53 -> m10_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_54 -> m10_52  [key=0, style=bold, color=blue];
m10_69 -> m10_70  [key=0, style=solid];
m10_70 -> m10_71  [key=0, style=solid];
m10_70 -> m10_10  [key=2, style=dotted];
m10_70 -> m10_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_71 -> m10_69  [key=0, style=bold, color=blue];
m10_179 -> m10_180  [key=0, style=solid];
m10_180 -> m10_181  [key=0, style=solid];
m10_180 -> m10_10  [key=2, style=dotted];
m10_180 -> m10_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_181 -> m10_179  [key=0, style=bold, color=blue];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_20  [key=2, style=dotted];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_21  [key=2, style=dotted];
m10_18 -> m10_19  [key=0, style=solid];
m10_19 -> m10_15  [key=0, style=bold, color=blue];
m10_62 -> m10_63  [key=0, style=solid];
m10_63 -> m10_64  [key=0, style=solid];
m10_63 -> m10_10  [key=2, style=dotted];
m10_63 -> m10_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_64 -> m10_62  [key=0, style=bold, color=blue];
m10_68 -> m10_280  [key=0, style=solid];
m10_68 -> m10_287  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_68 -> m10_292  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_68 -> m10_288  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m10_280 -> m10_281  [key=0, style=solid];
m10_280 -> m10_284  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m10_280 -> m10_285  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m10_287 -> m10_288  [key=0, style=solid];
m10_287 -> m10_207  [key=2, style=dotted];
m10_287 -> m10_291  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_287 -> m10_294  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_288 -> m10_289  [key=0, style=solid];
m10_288 -> m10_271  [key=2, style=dotted];
m10_281 -> m10_282  [key=0, style=solid];
m10_281 -> n56  [key=2, style=dotted];
m10_281 -> m10_284  [key=1, style=dashed, color=darkseagreen4, label=dates];
m10_281 -> m10_287  [key=1, style=dashed, color=darkseagreen4, label=dates];
m10_284 -> m10_285  [key=0, style=solid];
m10_284 -> m10_90  [key=2, style=dotted];
m10_285 -> m10_286  [key=0, style=solid];
m10_285 -> m10_290  [key=2, style=dotted];
m10_285 -> m10_285  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m10_282 -> m10_283  [key=0, style=solid];
m10_282 -> m10_286  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_283 -> m10_284  [key=0, style=solid];
m10_283 -> m10_287  [key=0, style=solid];
m10_286 -> m10_283  [key=0, style=solid];
m10_286 -> m10_286  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_289 -> m10_68  [key=0, style=bold, color=blue];
m10_297 -> m10_298  [key=0, style=solid];
m10_297 -> m10_299  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m10_297 -> m10_300  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.DateTime>"];
m10_297 -> m10_305  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.DateTime>"];
m10_297 -> m10_306  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.DateTime>"];
m10_297 -> m10_307  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.DateTime>"];
m10_298 -> m10_299  [key=0, style=solid];
m10_299 -> m10_300  [key=0, style=solid];
m10_299 -> m10_311  [key=2, style=dotted];
m10_299 -> m10_207  [key=2, style=dotted];
m10_299 -> m10_316  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_299 -> m10_319  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_299 -> m10_301  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m10_299 -> m10_302  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m10_299 -> m10_306  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m10_300 -> m10_301  [key=0, style=solid];
m10_300 -> m10_303  [key=0, style=solid];
m10_300 -> m10_302  [key=1, style=dashed, color=darkseagreen4, label=key];
m10_305 -> m10_306  [key=0, style=solid];
m10_305 -> m10_309  [key=0, style=solid];
m10_306 -> m10_307  [key=0, style=solid];
m10_306 -> m10_315  [key=2, style=dotted];
m10_307 -> m10_308  [key=0, style=solid];
m10_307 -> m10_315  [key=2, style=dotted];
m10_307 -> m10_313  [key=2, style=dotted];
m10_301 -> m10_302  [key=0, style=solid];
m10_301 -> m10_300  [key=0, style=solid];
m10_301 -> m10_312  [key=2, style=dotted];
m10_302 -> m10_300  [key=0, style=solid];
m10_302 -> m10_313  [key=2, style=dotted];
m10_303 -> m10_304  [key=0, style=solid];
m10_303 -> m10_314  [key=2, style=dotted];
m10_303 -> m10_307  [key=1, style=dashed, color=darkseagreen4, label=result];
m10_303 -> m10_309  [key=1, style=dashed, color=darkseagreen4, label=result];
m10_304 -> m10_305  [key=0, style=solid];
m10_304 -> m10_306  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_304 -> m10_307  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_304 -> m10_308  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_309 -> m10_310  [key=0, style=solid];
m10_308 -> m10_305  [key=0, style=solid];
m10_308 -> m10_308  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_310 -> m10_297  [key=0, style=bold, color=blue];
m10_159 -> m10_160  [key=0, style=solid];
m10_159 -> m10_161  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_160 -> m10_161  [key=0, style=solid];
m10_160 -> m10_20  [key=2, style=dotted];
m10_161 -> m10_162  [key=0, style=solid];
m10_161 -> m10_164  [key=2, style=dotted];
m10_161 -> m10_166  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m10_162 -> m10_163  [key=0, style=solid];
m10_162 -> m10_10  [key=2, style=dotted];
m10_162 -> m10_165  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_163 -> m10_159  [key=0, style=bold, color=blue];
m10_33 -> m10_34  [key=0, style=solid];
m10_34 -> m10_35  [key=0, style=solid];
m10_34 -> m10_10  [key=2, style=dotted];
m10_34 -> m10_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_35 -> m10_33  [key=0, style=bold, color=blue];
m10_381 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_40  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_43  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_76  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_92  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_103  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_106  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_114  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_117  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_124  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_129  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_156  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_160  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_162  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_166  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_170  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_172  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_176  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_180  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_183  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_187  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_190  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_193  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_203  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_222  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_225  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_228  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_231  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_235  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_236  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_268  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_288  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_322  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_327  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_332  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_339  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_340  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_354  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_381 -> m10_374  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m10_382 -> m10_43  [key=1, style=dashed, color=red, label=int];
m10_383 -> m10_43  [key=1, style=dashed, color=red, label=int];
m10_384 -> m10_56  [key=1, style=dashed, color=darkseagreen4, label=int];
m10_385 -> m10_56  [key=1, style=dashed, color=darkseagreen4, label=int];
m10_386 -> m10_95  [key=1, style=dashed, color=darkseagreen4, label=int];
m10_387 -> m10_95  [key=1, style=dashed, color=darkseagreen4, label=int];
m10_388 -> m10_106  [key=1, style=dashed, color=darkseagreen4, label=int];
m10_389 -> m10_106  [key=1, style=dashed, color=darkseagreen4, label=int];
m10_390 -> m10_117  [key=1, style=dashed, color=darkseagreen4, label=int];
m10_391 -> m10_117  [key=1, style=dashed, color=darkseagreen4, label=int];
m10_392 -> m10_156  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m10_393 -> m10_166  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m10_394 -> m10_176  [key=1, style=dashed, color=darkseagreen4, label=fetchedJobIds];
m10_395 -> m10_197  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_396 -> m10_243  [key=1, style=dashed, color=darkseagreen4, label=sql];
m10_397 -> m10_273  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_398 -> m10_292  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobActivator"];
m11_1 -> m11_2  [key=0, style=solid, color=green];
m11_1 -> m11_3  [key=0, style=solid];
m11_1 -> m11_8  [key=2, style=dotted];
m11_1 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_10  [key=2, style=dotted];
m11_2 -> m11_4  [key=0, style=solid];
m11_2 -> n20  [key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid, color=green];
m11_2 -> m11_9  [key=2, style=dotted, color=green];
m11_4 -> m11_0  [key=0, style=bold, color=blue];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_11  [key=2, style=dotted];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_33  [key=0, style=solid];
m11_24 -> m11_35  [key=2, style=dotted];
m11_25 -> m11_22  [key=2, style=dotted];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_28  [key=2, style=dotted];
m11_26 -> m11_33  [key=0, style=solid];
m11_27 -> m11_24  [key=0, style=bold, color=blue];
m11_27 -> m11_28  [key=0, style=solid];
m11_110 -> m11_111  [key=0, style=solid];
m11_111 -> m11_112  [key=0, style=solid];
m11_111 -> m11_62  [key=2, style=dotted];
m11_111 -> m11_113  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_112 -> m11_113  [key=0, style=solid];
m11_112 -> m11_109  [key=2, style=dotted];
m11_112 -> m11_28  [key=2, style=dotted];
m11_113 -> m11_114  [key=0, style=solid];
m11_113 -> m11_109  [key=2, style=dotted];
m11_113 -> m11_28  [key=2, style=dotted];
m11_114 -> m11_110  [key=0, style=bold, color=blue];
m11_12 -> m11_10  [key=0, style=bold, color=blue];
m11_9 -> m11_6  [key=0, style=bold, color=blue];
m11_63 -> m11_61  [key=0, style=bold, color=blue];
m11_71 -> m11_90  [key=0, style=solid];
m11_71 -> m11_58  [key=2, style=dotted];
m11_180 -> m11_181  [key=0, style=solid];
m11_181 -> m11_182  [key=0, style=solid];
m11_181 -> m11_62  [key=2, style=dotted];
m11_181 -> m11_183  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_181 -> m11_186  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_183 -> m11_22  [key=2, style=dotted];
m11_183 -> m11_184  [key=0, style=solid];
m11_183 -> m11_185  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_182 -> m11_152  [key=2, style=dotted];
m11_182 -> m11_183  [key=0, style=solid];
m11_184 -> m11_180  [key=0, style=bold, color=blue];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_28  [key=2, style=dotted];
m11_50 -> m11_47  [key=0, style=bold, color=blue];
m11_98 -> m11_94  [key=0, style=bold, color=blue];
m11_196 -> m11_197  [key=0, style=solid];
m11_197 -> m11_198  [key=0, style=solid];
m11_197 -> m11_13  [key=2, style=dotted];
m11_197 -> m11_14  [key=2, style=dotted];
m11_197 -> m11_203  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_198 -> m11_199  [key=0, style=solid];
m11_198 -> m11_62  [key=2, style=dotted];
m11_198 -> m11_200  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_199 -> m11_152  [key=2, style=dotted];
m11_199 -> m11_200  [key=0, style=solid];
m11_200 -> m11_201  [key=0, style=solid];
m11_200 -> m11_71  [key=2, style=dotted];
m11_201 -> m11_28  [key=2, style=dotted];
m11_201 -> m11_202  [key=0, style=solid];
m11_202 -> m11_196  [key=0, style=bold, color=blue];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_36  [key=2, style=dotted];
m11_28 -> m11_30  [key=1, style=dashed, color=darkseagreen4, label=exceptionContext];
m11_10 -> m11_11  [key=0, style=solid];
m11_66 -> m11_67  [key=0, style=solid];
m11_67 -> m11_68  [key=0, style=solid];
m11_67 -> m11_62  [key=2, style=dotted];
m11_67 -> m11_69  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_67 -> m11_90  [key=0, style=solid];
m11_68 -> m11_69  [key=0, style=solid];
m11_68 -> m11_71  [key=2, style=dotted];
m11_69 -> m11_63  [key=2, style=dotted];
m11_69 -> m11_70  [key=0, style=solid];
m11_69 -> m11_90  [key=0, style=solid];
m11_69 -> m11_92  [key=2, style=dotted];
m11_70 -> m11_66  [key=0, style=bold, color=blue];
m11_70 -> m11_71  [key=0, style=solid];
m11_70 -> m11_72  [key=0, style=solid];
m11_90 -> m11_64  [key=0, style=bold, color=blue];
m11_158 -> m11_159  [key=0, style=solid];
m11_159 -> m11_160  [key=0, style=solid];
m11_159 -> m11_62  [key=2, style=dotted];
m11_159 -> m11_165  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_159 -> m11_161  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_159 -> m11_162  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_160 -> m11_161  [key=0, style=solid];
m11_160 -> m11_13  [key=2, style=dotted];
m11_160 -> m11_14  [key=2, style=dotted];
m11_160 -> m11_164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_161 -> m11_152  [key=2, style=dotted];
m11_161 -> m11_162  [key=0, style=solid];
m11_162 -> m11_163  [key=0, style=solid];
m11_162 -> m11_28  [key=2, style=dotted];
m11_163 -> m11_158  [key=0, style=bold, color=blue];
m11_91 -> m11_92  [key=0, style=solid];
m11_120 -> m11_121  [key=0, style=solid];
m11_121 -> m11_122  [key=0, style=solid];
m11_121 -> m11_62  [key=2, style=dotted];
m11_121 -> m11_123  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_121 -> m11_124  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_122 -> m11_123  [key=0, style=solid];
m11_122 -> m11_85  [key=2, style=dotted];
m11_123 -> m11_124  [key=0, style=solid];
m11_123 -> m11_85  [key=2, style=dotted];
m11_124 -> m11_125  [key=0, style=solid];
m11_124 -> m11_109  [key=2, style=dotted];
m11_124 -> m11_28  [key=2, style=dotted];
m11_125 -> m11_120  [key=0, style=bold, color=blue];
m11_22 -> m11_33  [key=0, style=solid];
m11_22 -> n20  [key=2, style=dotted];
m11_57 -> m11_58  [key=0, style=solid];
m11_57 -> m11_63  [key=2, style=dotted];
m11_41 -> m11_22  [key=2, style=dotted];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_34 -> m11_38  [key=0, style=solid];
m11_34 -> m11_22  [key=2, style=dotted];
m11_34 -> m11_35  [key=0, style=solid];
m11_34 -> m11_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_38 -> m11_39  [key=0, style=solid];
m11_38 -> m11_40  [key=2, style=dotted];
m11_38 -> m11_41  [key=2, style=dotted];
m11_38 -> m11_32  [key=2, style=dotted];
m11_39 -> m11_34  [key=0, style=bold, color=blue];
m11_39 -> m11_37  [key=0, style=bold, color=blue];
m11_167 -> m11_168  [key=0, style=solid];
m11_171 -> m11_172  [key=0, style=solid, color=green];
m11_171 -> m11_153  [key=2, style=dotted, color=green];
m11_171 -> m11_173  [key=1, style=dashed, color=green, label="lambda expression"];
m11_170 -> m11_171  [key=0, style=solid, color=green];
m11_170 -> m11_152  [key=2, style=dotted];
m11_168 -> m11_170  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_168 -> m11_169  [key=0, style=solid];
m11_168 -> m11_62  [key=2, style=dotted];
m11_169 -> m11_170  [key=0, style=solid];
m11_169 -> m11_85  [key=2, style=dotted];
m11_172 -> m11_167  [key=0, style=bold, color=blue];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m11_6 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m11_6 -> m11_13  [key=2, style=dotted];
m11_6 -> m11_14  [key=2, style=dotted];
m11_6 -> m11_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_9  [key=0, style=solid];
m11_7 -> m11_0  [key=0, style=bold, color=blue];
m11_8 -> m11_9  [key=0, style=solid];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_32  [key=2, style=dotted];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_12  [key=2, style=dotted];
m11_36 -> m11_8  [key=3, color=darkorchid, style=bold, label="Field variable System.Func<Hangfire.Common.Job, System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>> _getFiltersThunk"];
m11_36 -> m11_33  [key=0, style=bold, color=blue];
m11_51 -> m11_52  [key=0, style=solid];
m11_94 -> m11_95  [key=0, style=solid];
m11_95 -> m11_96  [key=0, style=solid];
m11_95 -> m11_62  [key=2, style=dotted];
m11_95 -> m11_97  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_95 -> m11_100  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_95 -> m11_50  [key=2, style=dotted];
m11_96 -> m11_97  [key=0, style=solid];
m11_96 -> m11_85  [key=2, style=dotted];
m11_96 -> m11_95  [key=0, style=solid];
m11_96 -> m11_98  [key=2, style=dotted];
m11_97 -> m11_98  [key=0, style=solid];
m11_97 -> m11_90  [key=2, style=dotted];
m11_97 -> m11_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_97 -> m11_37  [key=0, style=bold, color=blue];
m11_188 -> m11_189  [key=0, style=solid];
m11_189 -> m11_190  [key=0, style=solid];
m11_189 -> m11_62  [key=2, style=dotted];
m11_189 -> m11_191  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_189 -> m11_194  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_190 -> m11_152  [key=2, style=dotted];
m11_190 -> m11_191  [key=0, style=solid];
m11_191 -> m11_192  [key=0, style=solid];
m11_191 -> m11_90  [key=2, style=dotted];
m11_191 -> m11_193  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_192 -> m11_188  [key=0, style=bold, color=blue];
m11_33 -> m11_34  [key=0, style=solid];
m11_33 -> m11_18  [key=0, style=bold, color=blue];
m11_35 -> m11_36  [key=0, style=solid];
m11_35 -> m11_28  [key=2, style=dotted];
m11_35 -> m11_42  [key=0, style=solid];
m11_35 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m11_35 -> m11_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m11_35 -> m11_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m11_35 -> m11_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m11_35 -> m11_45  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>"];
m11_102 -> m11_103  [key=0, style=solid];
m11_102 -> m11_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IJobPerformer"];
m11_103 -> m11_104  [key=0, style=solid];
m11_103 -> m11_62  [key=2, style=dotted];
m11_103 -> m11_107  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_104 -> m11_22  [key=2, style=dotted];
m11_104 -> m11_105  [key=0, style=solid];
m11_104 -> m11_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_104 -> m11_62  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.Server.PerformedContext>"];
m11_105 -> m11_102  [key=0, style=bold, color=blue];
m11_105 -> m11_62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IServerFilter"];
m11_64 -> m11_65  [key=0, style=solid];
m11_64 -> m11_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformingContext"];
m11_64 -> m11_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformingContext"];
m11_64 -> m11_74  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.Server.PerformedContext>"];
m11_64 -> m11_77  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformingContext"];
m11_64 -> m11_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IServerFilter"];
m11_64 -> m11_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IServerFilter"];
m11_64 -> m11_73  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Server.PerformedContext InvokePerformFilter"];
m11_206 -> m11_207  [key=0, style=solid];
m11_207 -> m11_208  [key=0, style=solid];
m11_207 -> m11_62  [key=2, style=dotted];
m11_207 -> m11_209  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_210 -> m11_22  [key=2, style=dotted];
m11_210 -> m11_211  [key=0, style=solid];
m11_210 -> m11_212  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_208 -> m11_152  [key=2, style=dotted];
m11_208 -> m11_209  [key=0, style=solid];
m11_209 -> m11_210  [key=0, style=solid];
m11_209 -> m11_71  [key=2, style=dotted];
m11_209 -> m11_213  [key=1, style=dashed, color=darkseagreen4, label=contextCopy];
m11_211 -> m11_206  [key=0, style=bold, color=blue];
m11_58 -> m11_59  [key=0, style=solid];
m11_58 -> m11_63  [key=2, style=dotted];
m11_47 -> m11_48  [key=0, style=solid];
m11_48 -> m11_22  [key=2, style=dotted];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_48 -> m11_35  [key=0, style=bold, color=blue];
m11_72 -> m11_73  [key=0, style=solid];
m11_72 -> m11_72  [key=3, color=darkorchid, style=bold, label="Local variable bool wasError"];
m11_73 -> m11_74  [key=0, style=solid];
m11_73 -> m11_62  [key=2, style=dotted];
m11_73 -> m11_75  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_74 -> m11_75  [key=0, style=solid];
m11_74 -> m11_71  [key=2, style=dotted];
m11_74 -> m11_83  [key=0, style=solid];
m11_74 -> m11_93  [key=2, style=dotted];
m11_75 -> m11_63  [key=2, style=dotted];
m11_75 -> m11_76  [key=0, style=solid];
m11_76 -> m11_72  [key=0, style=bold, color=blue];
m11_76 -> m11_77  [key=0, style=solid];
m11_76 -> m11_83  [key=1, style=dashed, color=darkseagreen4, label=wasError];
m11_77 -> m11_78  [key=0, style=solid];
m11_77 -> m11_58  [key=2, style=dotted];
m11_77 -> m11_81  [key=1, style=dashed, color=darkseagreen4, label=postContext];
m11_77 -> m11_84  [key=1, style=dashed, color=darkseagreen4, label=postContext];
m11_77 -> m11_89  [key=1, style=dashed, color=darkseagreen4, label=postContext];
m11_78 -> m11_79  [key=0, style=solid];
m11_78 -> m11_62  [key=2, style=dotted];
m11_78 -> m11_83  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_78 -> m11_81  [key=0, style=solid];
m11_78 -> m11_94  [key=2, style=dotted];
m11_79 -> m11_22  [key=2, style=dotted];
m11_79 -> m11_80  [key=0, style=solid];
m11_79 -> m11_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_80 -> m11_81  [key=0, style=solid];
m11_80 -> m11_28  [key=2, style=dotted];
m11_80 -> m11_90  [key=0, style=solid];
m11_80 -> m11_92  [key=2, style=dotted];
m11_81 -> m11_77  [key=0, style=bold, color=blue];
m11_81 -> m11_82  [key=0, style=solid];
m11_81 -> m11_83  [key=0, style=solid];
m11_147 -> m11_148  [key=0, style=solid];
m11_148 -> m11_149  [key=0, style=solid];
m11_148 -> m11_62  [key=2, style=dotted];
m11_148 -> m11_150  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_148 -> m11_155  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_150 -> m11_153  [key=2, style=dotted];
m11_150 -> m11_151  [key=0, style=solid];
m11_150 -> m11_154  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_149 -> m11_150  [key=0, style=solid];
m11_149 -> m11_152  [key=2, style=dotted];
m11_151 -> m11_147  [key=0, style=bold, color=blue];
m11_65 -> m11_66  [key=0, style=solid];
m11_65 -> m11_68  [key=0, style=solid];
m11_65 -> m11_70  [key=0, style=solid];
m11_65 -> m11_91  [key=2, style=dotted];
m11_37 -> m11_95  [key=0, style=solid];
m11_37 -> m11_96  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerExceptionContext"];
m11_37 -> m11_38  [key=0, style=solid];
m11_62 -> m11_216  [key=0, style=solid];
m11_62 -> m11_63  [key=0, style=solid];
m11_62 -> m11_64  [key=2, style=dotted];
m11_216 -> m11_217  [key=0, style=solid];
m11_216 -> m11_32  [key=2, style=dotted];
m11_217 -> m11_62  [key=0, style=bold, color=blue];
m11_193 -> m11_194  [key=0, style=solid];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_13  [key=2, style=dotted];
m11_11 -> m11_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_14 -> m11_15  [key=0, style=solid];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_17  [key=2, style=dotted];
m11_16 -> m11_14  [key=0, style=bold, color=blue];
m11_16 -> m11_60  [key=0, style=solid];
m11_16 -> m11_18  [key=2, style=dotted];
m11_54 -> m11_55  [key=0, style=solid];
m11_54 -> m11_57  [key=2, style=dotted];
m11_54 -> m11_44  [key=1, style=dashed, color=darkseagreen4, label=result];
m11_54 -> m11_47  [key=1, style=dashed, color=darkseagreen4, label=result];
m11_54 -> m11_56  [key=1, style=dashed, color=darkseagreen4, label=result];
m11_55 -> m11_56  [key=0, style=solid];
m11_55 -> m11_58  [key=2, style=dotted];
m11_55 -> m11_62  [key=2, style=dotted];
m11_55 -> m11_57  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_55 -> m11_59  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_55 -> m11_60  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_59 -> m11_60  [key=0, style=solid];
m11_59 -> m11_45  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.Server.PerformedContext>"];
m11_59 -> m11_62  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.Server.PerformedContext>"];
m11_59 -> m11_64  [key=2, style=dotted];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_51  [key=0, style=bold, color=blue];
m11_56 -> m11_53  [key=0, style=bold, color=blue];
m11_56 -> m11_57  [key=0, style=solid];
m11_56 -> m11_63  [key=2, style=dotted];
m11_60 -> m11_59  [key=0, style=bold, color=blue];
m11_60 -> m11_15  [key=0, style=bold, color=blue];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_65  [key=2, style=dotted];
m11_61 -> m11_62  [key=0, style=solid];
m11_61 -> m11_54  [key=0, style=bold, color=blue];
m11_173 -> m11_174  [key=0, style=solid, color=green];
m11_174 -> m11_175  [key=0, style=solid, color=green];
m11_174 -> m11_22  [key=2, style=dotted, color=green];
m11_174 -> m11_157  [key=2, style=dotted, color=green];
m11_174 -> m11_176  [key=1, style=dashed, color=green, label="lambda expression"];
m11_175 -> m11_173  [key=0, style=bold, color=blue];
m11_176 -> m11_177  [key=0, style=solid];
m11_30 -> m11_31  [key=0, style=solid];
m11_30 -> m11_32  [key=2, style=dotted];
m11_45 -> m11_46  [key=0, style=solid];
m11_45 -> m11_32  [key=2, style=dotted];
m11_45 -> m11_50  [key=2, style=dotted];
m11_45 -> m11_51  [key=2, style=dotted];
m11_45 -> m11_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_204 -> m11_22  [key=2, style=dotted];
m11_204 -> m11_157  [key=2, style=dotted];
m11_204 -> m11_205  [key=0, style=solid];
m11_20 -> m11_22  [key=2, style=dotted];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_23  [key=2, style=dotted];
m11_20 -> m11_33  [key=0, style=solid];
m11_20 -> n20  [key=2, style=dotted];
m11_155 -> m11_22  [key=2, style=dotted];
m11_155 -> m11_157  [key=2, style=dotted];
m11_155 -> m11_156  [key=0, style=solid];
m11_165 -> m11_22  [key=2, style=dotted];
m11_165 -> m11_157  [key=2, style=dotted];
m11_165 -> m11_166  [key=0, style=solid];
m11_178 -> m11_176  [key=0, style=bold, color=blue];
m11_177 -> m11_178  [key=0, style=solid];
m11_177 -> m11_179  [key=2, style=dotted];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_21  [key=0, style=solid];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_37  [key=2, style=dotted];
m11_31 -> m11_29  [key=0, style=bold, color=blue];
m11_31 -> m11_33  [key=0, style=solid];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_44  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<Hangfire.Server.PerformedContext> continuation"];
m11_46 -> m11_44  [key=0, style=bold, color=blue];
m11_46 -> m11_47  [key=0, style=solid];
m11_46 -> m11_52  [key=2, style=dotted];
m11_83 -> m11_84  [key=0, style=solid];
m11_83 -> m11_85  [key=2, style=dotted];
m11_83 -> m11_89  [key=0, style=solid];
m11_92 -> m11_93  [key=0, style=solid];
m11_92 -> m11_85  [key=2, style=dotted];
m11_100 -> m11_101  [key=0, style=solid];
m11_100 -> m11_85  [key=2, style=dotted];
m11_100 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m11_107 -> m11_108  [key=0, style=solid];
m11_107 -> m11_109  [key=2, style=dotted];
m11_138 -> m11_139  [key=0, style=solid];
m11_138 -> m11_109  [key=2, style=dotted];
m11_154 -> m11_155  [key=0, style=solid];
m11_164 -> m11_165  [key=0, style=solid];
m11_186 -> m11_187  [key=0, style=solid];
m11_186 -> m11_85  [key=2, style=dotted];
m11_194 -> m11_195  [key=0, style=solid];
m11_194 -> m11_109  [key=2, style=dotted];
m11_203 -> m11_204  [key=0, style=solid];
m11_205 -> m11_203  [key=0, style=bold, color=blue];
m11_21 -> m11_19  [key=0, style=bold, color=blue];
m11_21 -> m11_22  [key=0, style=solid];
m11_21 -> m11_23  [key=0, style=solid];
m11_82 -> m11_83  [key=0, style=solid];
m11_82 -> m11_90  [key=0, style=solid];
m11_106 -> m11_107  [key=0, style=solid];
m11_137 -> m11_138  [key=0, style=solid];
m11_156 -> m11_154  [key=0, style=bold, color=blue];
m11_166 -> m11_164  [key=0, style=bold, color=blue];
m11_185 -> m11_186  [key=0, style=solid];
m11_212 -> m11_213  [key=0, style=solid];
m11_84 -> m11_82  [key=0, style=bold, color=blue];
m11_84 -> m11_85  [key=0, style=solid];
m11_84 -> m11_87  [key=0, style=solid];
m11_84 -> m11_89  [key=0, style=solid];
m11_84 -> m11_94  [key=2, style=dotted];
m11_93 -> m11_91  [key=0, style=bold, color=blue];
m11_99 -> m11_100  [key=0, style=solid];
m11_99 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DefaultJobPerformanceProcess"];
m11_99 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DefaultJobPerformanceProcess"];
m11_99 -> m11_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DefaultJobPerformanceProcess"];
m11_99 -> m11_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DefaultJobPerformanceProcess"];
m11_99 -> m11_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DefaultJobPerformanceProcess"];
m11_99 -> m11_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DefaultJobPerformanceProcess"];
m11_99 -> m11_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DefaultJobPerformanceProcess"];
m11_101 -> m11_99  [key=0, style=bold, color=blue];
m11_101 -> m11_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m11_101 -> m11_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m11_108 -> m11_106  [key=0, style=bold, color=blue];
m11_139 -> m11_137  [key=0, style=bold, color=blue];
m11_187 -> m11_185  [key=0, style=bold, color=blue];
m11_195 -> m11_193  [key=0, style=bold, color=blue];
m11_213 -> m11_85  [key=2, style=dotted];
m11_213 -> m11_214  [key=0, style=solid];
m11_214 -> m11_212  [key=0, style=bold, color=blue];
m11_89 -> m11_90  [key=0, style=solid];
m11_89 -> m11_86  [key=0, style=bold, color=blue];
m11_85 -> m11_86  [key=0, style=solid];
m11_87 -> m11_88  [key=0, style=solid];
m11_87 -> m11_62  [key=2, style=dotted];
m11_87 -> m11_92  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_86 -> m11_90  [key=0, style=solid];
m11_86 -> m11_87  [key=0, style=solid];
m11_88 -> m11_90  [key=0, style=solid];
m11_88 -> m11_92  [key=2, style=dotted];
m11_88 -> m11_89  [key=0, style=solid];
m11_88 -> m11_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_32 -> m11_33  [key=0, style=solid];
m11_115 -> m11_116  [key=0, style=solid];
m11_116 -> m11_117  [key=0, style=solid];
m11_116 -> m11_62  [key=2, style=dotted];
m11_116 -> m11_118  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_117 -> m11_118  [key=0, style=solid];
m11_117 -> m11_85  [key=2, style=dotted];
m11_118 -> m11_119  [key=0, style=solid];
m11_118 -> m11_109  [key=2, style=dotted];
m11_118 -> m11_28  [key=2, style=dotted];
m11_119 -> m11_115  [key=0, style=bold, color=blue];
m11_140 -> m11_141  [key=0, style=solid];
m11_141 -> m11_142  [key=0, style=solid];
m11_141 -> m11_62  [key=2, style=dotted];
m11_141 -> m11_143  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_142 -> m11_143  [key=0, style=solid];
m11_142 -> m11_85  [key=2, style=dotted];
m11_143 -> m11_144  [key=0, style=solid];
m11_143 -> m11_71  [key=2, style=dotted];
m11_144 -> m11_109  [key=2, style=dotted];
m11_144 -> m11_145  [key=0, style=solid];
m11_145 -> m11_28  [key=2, style=dotted];
m11_145 -> m11_146  [key=0, style=solid];
m11_146 -> m11_140  [key=0, style=bold, color=blue];
m11_40 -> m11_41  [key=0, style=solid];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_28  [key=2, style=dotted];
m11_42 -> m11_44  [key=1, style=dashed, color=darkseagreen4, label=result];
m11_42 -> m11_32  [key=3, color=darkorchid, style=bold, label="Local variable object result"];
m11_43 -> m11_40  [key=0, style=bold, color=blue];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_49  [key=2, style=dotted];
m11_43 -> m11_45  [key=1, style=dashed, color=darkseagreen4, label=preContext];
m11_43 -> m11_62  [key=1, style=dashed, color=darkseagreen4, label=preContext];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_34  [key=2, style=dotted];
m11_23 -> m11_29  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m11_126 -> m11_127  [key=0, style=solid];
m11_127 -> m11_128  [key=0, style=solid];
m11_127 -> m11_62  [key=2, style=dotted];
m11_127 -> m11_129  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_127 -> m11_130  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_128 -> m11_129  [key=0, style=solid];
m11_128 -> m11_85  [key=2, style=dotted];
m11_129 -> m11_130  [key=0, style=solid];
m11_129 -> m11_85  [key=2, style=dotted];
m11_130 -> m11_131  [key=0, style=solid];
m11_130 -> m11_109  [key=2, style=dotted];
m11_130 -> m11_28  [key=2, style=dotted];
m11_131 -> m11_126  [key=0, style=bold, color=blue];
m11_18 -> m11_19  [key=0, style=solid];
m11_18 -> m11_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IJobPerformer"];
m11_18 -> m11_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m11_18 -> m11_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m11_18 -> m11_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformContext"];
m11_18 -> m11_35  [key=3, color=darkorchid, style=bold, label="method methodReturn object Run"];
m11_18 -> m11_32  [key=3, color=darkorchid, style=bold, label="method methodReturn object Run"];
m11_18 -> m11_215  [key=0, style=solid];
m11_215 -> m11_18  [key=0, style=bold, color=blue];
m11_132 -> m11_133  [key=0, style=solid];
m11_133 -> m11_134  [key=0, style=solid];
m11_133 -> m11_62  [key=2, style=dotted];
m11_133 -> m11_135  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_133 -> m11_138  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_135 -> m11_22  [key=2, style=dotted];
m11_135 -> m11_136  [key=0, style=solid];
m11_135 -> m11_137  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_134 -> m11_135  [key=0, style=solid];
m11_134 -> m11_85  [key=2, style=dotted];
m11_136 -> m11_132  [key=0, style=bold, color=blue];
m11_218 -> m11_2  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_171  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_73  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_111  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_127  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_133  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_141  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_148  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_150  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_159  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_160  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_168  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_181  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_189  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_197  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_204  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_198  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_207  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_218 -> m11_216  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.CreateContextFacts"];
m11_224 -> m11_155  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_225 -> m11_165  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_219 -> m11_83  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_220 -> m11_92  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_221 -> m11_100  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_222 -> m11_107  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_223 -> m11_138  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_226 -> m11_186  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_227 -> m11_194  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_228 -> m11_213  [key=1, style=dashed, color=darkseagreen4, label=contextCopy];
m12_23 -> m12_24  [key=0, style=solid];
m12_23 -> m12_29  [key=0, style=solid];
m12_23 -> m12_26  [key=1, style=dashed, color=darkseagreen4, label=recurringJobId];
m12_23 -> m12_28  [key=1, style=dashed, color=darkseagreen4, label=recurringJobId];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_34  [key=2, style=dotted];
m12_21 -> m12_23  [key=1, style=dashed, color=darkseagreen4, label=recurringJobIds];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_23  [key=0, style=solid];
m12_26 -> m12_38  [key=2, style=dotted];
m12_41 -> m12_42  [key=0, style=solid];
m12_42 -> m12_43  [key=0, style=solid];
m12_43 -> m12_41  [key=0, style=bold, color=blue];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_35  [key=2, style=dotted];
m12_22 -> m12_26  [key=1, style=dashed, color=darkseagreen4, label=stateMachineFactory];
m12_76 -> m12_85  [key=0, style=solid];
m12_76 -> m12_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m12_85 -> m12_86  [key=0, style=solid];
m12_85 -> m12_89  [key=2, style=dotted];
m12_85 -> m12_87  [key=1, style=dashed, color=darkseagreen4, label=context];
m12_86 -> m12_87  [key=0, style=solid];
m12_86 -> m12_90  [key=2, style=dotted];
m12_87 -> m12_88  [key=0, style=solid];
m12_87 -> m12_91  [key=2, style=dotted];
m12_88 -> m12_76  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [key=0, style=bold, color=blue];
m12_1 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=2, style=dotted];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_5  [key=0, style=solid];
m12_17 -> m12_18  [key=0, style=solid];
m12_17 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m12_17 -> m12_26  [key=2, style=dotted];
m12_18 -> m12_19  [key=0, style=solid];
m12_18 -> m12_31  [key=2, style=dotted];
m12_18 -> m12_8  [key=0, style=bold, color=blue];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_40  [key=2, style=dotted];
m12_29 -> m12_27  [key=0, style=bold, color=blue];
m12_19 -> m12_20  [key=0, style=solid];
m12_19 -> m12_32  [key=2, style=dotted];
m12_19 -> m12_21  [key=1, style=dashed, color=darkseagreen4, label=connection];
m12_19 -> m12_24  [key=1, style=dashed, color=darkseagreen4, label=connection];
m12_19 -> m12_26  [key=1, style=dashed, color=darkseagreen4, label=connection];
m12_20 -> m12_21  [key=0, style=solid];
m12_20 -> m12_33  [key=2, style=dotted];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_36  [key=2, style=dotted];
m12_24 -> m12_37  [key=2, style=dotted];
m12_24 -> m12_26  [key=1, style=dashed, color=darkseagreen4, label=recurringJob];
m12_28 -> m12_23  [key=0, style=solid];
m12_28 -> m12_36  [key=2, style=dotted];
m12_28 -> m12_39  [key=2, style=dotted];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_30  [key=2, style=dotted];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_23  [key=0, style=solid];
m12_27 -> m12_28  [key=0, style=solid];
m12_30 -> m12_17  [key=0, style=bold, color=blue];
m12_30 -> m12_31  [key=0, style=solid];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_9  [key=0, style=solid];
m12_31 -> m12_30  [key=0, style=bold, color=blue];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_15  [key=0, style=solid];
m12_8 -> n20  [key=2, style=dotted];
m12_11 -> m12_12  [key=0, style=solid, color=green];
m12_11 -> m12_21  [key=2, style=dotted, color=green];
m12_11 -> m12_14  [key=1, style=dashed, color=green, label=state];
m12_10 -> m12_11  [key=0, style=solid, color=green];
m12_10 -> m12_20  [key=2, style=dotted];
m12_10 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_10 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_10 -> m12_15  [key=0, style=solid];
m12_10 -> n20  [key=2, style=dotted];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_22  [key=2, style=dotted];
m12_12 -> m12_15  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_12 -> m12_17  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_24  [key=2, style=dotted];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label=connection];
m12_9 -> m12_19  [key=2, style=dotted];
m12_9 -> m12_11  [key=0, style=solid];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_23  [key=2, style=dotted];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_7  [key=2, style=dotted];
m12_15 -> m12_17  [key=1, style=dashed, color=darkseagreen4, label=context];
m12_15 -> m12_2  [key=0, style=bold, color=blue];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_25  [key=2, style=dotted];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_47  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m12_44 -> m12_49  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m12_44 -> m12_51  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m12_44 -> m12_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m12_44 -> m12_57  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_44 -> m12_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m12_44 -> m12_63  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_65  [key=2, style=dotted];
m12_47 -> m12_48  [key=0, style=solid];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_68  [key=2, style=dotted];
m12_49 -> m12_69  [key=2, style=dotted];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_68  [key=2, style=dotted];
m12_51 -> m12_71  [key=2, style=dotted];
m12_51 -> m12_53  [key=1, style=dashed, color=darkseagreen4, label=lastExecutionTime];
m12_55 -> m12_56  [key=0, style=solid];
m12_55 -> m12_76  [key=2, style=dotted];
m12_55 -> m12_59  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m12_57 -> m12_58  [key=0, style=solid];
m12_57 -> m12_78  [key=2, style=dotted];
m12_61 -> m12_62  [key=0, style=solid];
m12_61 -> m12_64  [key=0, style=solid];
m12_61 -> m12_81  [key=2, style=dotted];
m12_61 -> m12_82  [key=2, style=dotted];
m12_63 -> m12_64  [key=0, style=solid];
m12_63 -> m12_83  [key=2, style=dotted];
m12_63 -> m12_84  [key=2, style=dotted];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_66  [key=2, style=dotted];
m12_46 -> m12_55  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_48 -> m12_49  [key=0, style=solid];
m12_48 -> m12_67  [key=2, style=dotted];
m12_48 -> m12_50  [key=1, style=dashed, color=darkseagreen4, label=cronSchedule];
m12_50 -> m12_51  [key=0, style=solid];
m12_50 -> m12_70  [key=2, style=dotted];
m12_50 -> m12_53  [key=1, style=dashed, color=darkseagreen4, label=instant];
m12_50 -> m12_57  [key=1, style=dashed, color=darkseagreen4, label=instant];
m12_50 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label=instant];
m12_50 -> m12_60  [key=1, style=dashed, color=darkseagreen4, label=instant];
m12_53 -> m12_54  [key=0, style=solid];
m12_53 -> m12_60  [key=0, style=solid];
m12_53 -> m12_73  [key=2, style=dotted];
m12_53 -> m12_74  [key=2, style=dotted];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_79  [key=2, style=dotted];
m12_58 -> m12_80  [key=2, style=dotted];
m12_60 -> m12_61  [key=0, style=solid];
m12_60 -> m12_79  [key=2, style=dotted];
m12_60 -> m12_80  [key=2, style=dotted];
m12_52 -> m12_53  [key=0, style=solid];
m12_52 -> m12_72  [key=2, style=dotted];
m12_52 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label=changedFields];
m12_52 -> m12_59  [key=1, style=dashed, color=darkseagreen4, label=changedFields];
m12_52 -> m12_60  [key=1, style=dashed, color=darkseagreen4, label=changedFields];
m12_52 -> m12_61  [key=1, style=dashed, color=darkseagreen4, label=changedFields];
m12_59 -> m12_60  [key=0, style=solid];
m12_59 -> m12_80  [key=2, style=dotted];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_75  [key=2, style=dotted];
m12_56 -> m12_57  [key=0, style=solid];
m12_56 -> m12_58  [key=0, style=solid];
m12_56 -> m12_77  [key=2, style=dotted];
m12_62 -> m12_63  [key=0, style=solid];
m12_64 -> m12_44  [key=0, style=bold, color=blue];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_15  [key=0, style=solid];
m12_4 -> n20  [key=2, style=dotted];
m12_5 -> m12_7  [key=2, style=dotted];
m12_5 -> m12_6  [key=0, style=solid];
m12_6 -> m12_4  [key=0, style=bold, color=blue];
m12_6 -> m12_15  [key=0, style=solid];
m12_6 -> n20  [key=2, style=dotted];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IJobCreationProcess"];
m12_2 -> m12_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IScheduleInstantFactory"];
m12_2 -> m12_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IThrottler"];
m12_2 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.JobStorage, Hangfire.States.IStateMachineFactory>"];
m12_2 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IJobCreationProcess"];
m12_2 -> m12_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IScheduleInstantFactory"];
m12_2 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IThrottler"];
m12_2 -> m12_0  [key=0, style=bold, color=blue];
m12_92 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m12_92 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m12_92 -> m12_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m12_92 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m12_92 -> m12_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m12_92 -> m12_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m12_92 -> m12_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m12_92 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m12_92 -> m12_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m12_92 -> m12_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m12_92 -> m12_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m13_8 -> m13_9  [key=0, style=solid];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_17  [key=2, style=dotted];
m13_9 -> m13_13  [key=1, style=dashed, color=darkseagreen4, label=connection];
m13_10 -> m13_11  [key=0, style=solid, color=green];
m13_10 -> m13_18  [key=2, style=dotted];
m13_10 -> m13_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_10 -> m13_13  [key=1, style=dashed, color=darkseagreen4, label=job];
m13_13 -> m13_14  [key=0, style=solid];
m13_13 -> m13_21  [key=2, style=dotted];
m13_11 -> m13_12  [key=0, style=solid, color=green];
m13_11 -> m13_19  [key=2, style=dotted, color=green];
m13_11 -> m13_13  [key=1, style=dashed, color=green, label=state];
m13_12 -> m13_13  [key=0, style=solid];
m13_12 -> m13_20  [key=2, style=dotted];
m13_14 -> m13_15  [key=0, style=solid];
m13_14 -> m13_7  [key=2, style=dotted];
m13_15 -> m13_16  [key=0, style=solid];
m13_15 -> m13_22  [key=2, style=dotted];
m13_16 -> m13_8  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_3  [key=2, style=dotted];
m13_1 -> m13_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_2 -> m13_0  [key=0, style=bold, color=blue];
m13_26 -> m13_27  [key=0, style=solid];
m13_27 -> m13_26  [key=0, style=bold, color=blue];
m13_23 -> m13_24  [key=0, style=solid];
m13_4 -> m13_5  [key=0, style=solid];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_7  [key=2, style=dotted];
m13_6 -> m13_4  [key=0, style=bold, color=blue];
m13_24 -> m13_25  [key=0, style=solid];
m13_24 -> m13_26  [key=2, style=dotted];
m13_25 -> m13_23  [key=0, style=bold, color=blue];
m14_66 -> m14_67  [key=0, style=solid];
m14_67 -> m14_37  [key=2, style=dotted];
m14_67 -> m14_68  [key=0, style=solid];
m14_68 -> m14_22  [key=2, style=dotted];
m14_68 -> m14_69  [key=0, style=solid];
m14_71 -> m14_72  [key=0, style=solid];
m14_71 -> m14_26  [key=2, style=dotted];
m14_69 -> m14_38  [key=2, style=dotted];
m14_69 -> m14_70  [key=0, style=solid];
m14_70 -> m14_71  [key=0, style=solid];
m14_70 -> m14_39  [key=2, style=dotted];
m14_72 -> m14_66  [key=0, style=bold, color=blue];
m14_36 -> m14_30  [key=0, style=bold, color=blue];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_35  [key=0, style=solid];
m14_22 -> n20  [key=2, style=dotted];
m14_23 -> m14_24  [key=0, style=solid, color=red];
m14_23 -> m14_25  [key=2, style=dotted];
m14_23 -> m14_36  [key=2, style=dotted, color=red];
m14_23 -> m14_28  [key=1, style=dashed, color=red, label=statesToAppend];
m14_23 -> m14_29  [key=1, style=dashed, color=red, label=statesToAppend];
m14_23 -> m14_31  [key=1, style=dashed, color=red, label=statesToAppend];
m14_24 -> m14_22  [key=0, style=bold, color=blue];
m14_24 -> m14_25  [key=0, style=solid];
m14_24 -> m14_29  [key=0, style=solid];
m14_24 -> m14_26  [key=1, style=dashed, color=darkseagreen4, label=filter];
m14_52 -> m14_53  [key=0, style=solid];
m14_53 -> m14_37  [key=2, style=dotted];
m14_53 -> m14_54  [key=0, style=solid];
m14_54 -> m14_22  [key=2, style=dotted];
m14_54 -> m14_55  [key=0, style=solid];
m14_57 -> m14_58  [key=0, style=solid];
m14_57 -> m14_26  [key=2, style=dotted];
m14_55 -> m14_38  [key=2, style=dotted];
m14_55 -> m14_56  [key=0, style=solid];
m14_56 -> m14_57  [key=0, style=solid];
m14_56 -> m14_39  [key=2, style=dotted];
m14_58 -> m14_52  [key=0, style=bold, color=blue];
m14_26 -> m14_27  [key=0, style=solid];
m14_26 -> m14_37  [key=2, style=dotted];
m14_27 -> m14_28  [key=0, style=solid];
m14_27 -> m14_29  [key=2, style=dotted];
m14_27 -> m14_24  [key=0, style=solid];
m14_28 -> m14_26  [key=0, style=bold, color=blue];
m14_28 -> m14_24  [key=0, style=solid];
m14_28 -> m14_38  [key=2, style=dotted];
m14_25 -> m14_26  [key=0, style=solid];
m14_25 -> m14_27  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m14_25 -> m14_28  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m14_59 -> m14_60  [key=0, style=solid];
m14_60 -> m14_37  [key=2, style=dotted];
m14_60 -> m14_61  [key=0, style=solid];
m14_61 -> m14_22  [key=2, style=dotted];
m14_61 -> m14_62  [key=0, style=solid];
m14_64 -> m14_65  [key=0, style=solid];
m14_64 -> m14_26  [key=2, style=dotted];
m14_62 -> m14_38  [key=2, style=dotted];
m14_62 -> m14_63  [key=0, style=solid];
m14_63 -> m14_64  [key=0, style=solid];
m14_63 -> m14_39  [key=2, style=dotted];
m14_65 -> m14_59  [key=0, style=bold, color=blue];
m14_29 -> m14_30  [key=0, style=solid];
m14_29 -> m14_34  [key=0, style=solid];
m14_41 -> m14_37  [key=2, style=dotted];
m14_41 -> m14_42  [key=0, style=solid];
m14_40 -> m14_41  [key=0, style=solid];
m14_30 -> m14_31  [key=0, style=solid];
m14_30 -> m14_39  [key=2, style=dotted];
m14_30 -> m14_32  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m14_30 -> m14_33  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m14_31 -> m14_11  [key=3, color=green, style=bold, label="Local variable HangFire.States.IState oldState"];
m14_31 -> m14_32  [key=0, style=solid];
m14_31 -> m14_37  [key=2, style=dotted];
m14_31 -> m14_33  [key=0, style=solid];
m14_32 -> m14_33  [key=0, style=solid];
m14_32 -> m14_22  [key=2, style=dotted];
m14_32 -> m14_31  [key=0, style=solid];
m14_32 -> m14_40  [key=2, style=dotted];
m14_33 -> m14_34  [key=0, style=solid];
m14_33 -> m14_38  [key=2, style=dotted];
m14_33 -> m14_41  [key=2, style=dotted];
m14_35 -> m14_36  [key=0, style=solid];
m14_35 -> m14_26  [key=2, style=dotted];
m14_35 -> m14_20  [key=0, style=bold, color=blue];
m14_34 -> m14_35  [key=0, style=solid];
m14_34 -> m14_39  [key=2, style=dotted];
m14_42 -> m14_22  [key=2, style=dotted];
m14_42 -> m14_43  [key=0, style=solid];
m14_42 -> m14_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ElectStateContext"];
m14_42 -> m14_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ElectStateContext"];
m14_42 -> m14_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ElectStateContext"];
m14_42 -> m14_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ElectStateContext"];
m14_42 -> m14_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ElectStateContext"];
m14_42 -> m14_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ElectStateContext"];
m14_42 -> m14_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ElectStateContext"];
m14_42 -> m14_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ElectStateContext"];
m14_42 -> m14_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ElectStateContext"];
m14_42 -> m14_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ElectStateContext"];
m14_42 -> m14_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ElectStateContext"];
m14_48 -> m14_49  [key=0, style=solid];
m14_48 -> m14_26  [key=2, style=dotted];
m14_43 -> m14_38  [key=2, style=dotted];
m14_43 -> m14_44  [key=0, style=solid];
m14_47 -> m14_48  [key=0, style=solid];
m14_47 -> m14_39  [key=2, style=dotted];
m14_44 -> m14_47  [key=1, style=dashed, color=darkseagreen4, label=table1];
m14_44 -> m14_45  [key=0, style=solid];
m14_44 -> m14_50  [key=2, style=dotted];
m14_44 -> m14_46  [key=1, style=dashed, color=darkseagreen4, label=table1];
m14_46 -> m14_47  [key=0, style=solid];
m14_46 -> m14_51  [key=2, style=dotted];
m14_45 -> m14_46  [key=0, style=solid];
m14_45 -> m14_51  [key=2, style=dotted];
m14_49 -> m14_40  [key=0, style=bold, color=blue];
m14_10 -> m14_11  [key=0, style=solid, color=green];
m14_10 -> m14_13  [key=2, style=dotted];
m14_11 -> m14_12  [key=0, style=solid, color=green];
m14_11 -> m14_13  [key=2, style=dotted];
m14_11 -> m14_14  [key=2, style=dotted];
m14_12 -> m14_10  [key=0, style=bold, color=blue];
m14_12 -> m14_9  [key=0, style=bold, color=blue];
m14_73 -> m14_74  [key=0, style=solid];
m14_74 -> m14_37  [key=2, style=dotted];
m14_74 -> m14_75  [key=0, style=solid];
m14_75 -> m14_22  [key=2, style=dotted];
m14_75 -> m14_76  [key=0, style=solid];
m14_78 -> m14_79  [key=0, style=solid];
m14_78 -> m14_26  [key=2, style=dotted];
m14_76 -> m14_38  [key=2, style=dotted];
m14_76 -> m14_77  [key=0, style=solid];
m14_77 -> m14_78  [key=0, style=solid];
m14_77 -> m14_39  [key=2, style=dotted];
m14_79 -> m14_73  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_0 -> m14_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m14_0 -> m14_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m14_0 -> m14_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_0 -> m14_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=0, style=solid];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_5  [key=0, style=solid];
m14_5 -> m14_6  [key=0, style=solid];
m14_6 -> m14_7  [key=0, style=solid];
m14_7 -> m14_8  [key=0, style=solid];
m14_2 -> m14_8  [key=0, style=solid];
m14_2 -> n20  [key=2, style=dotted];
m14_4 -> m14_8  [key=0, style=solid];
m14_4 -> n20  [key=2, style=dotted];
m14_8 -> m14_0  [key=0, style=bold, color=blue];
m14_15 -> m14_16  [key=0, style=solid];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_18  [key=2, style=dotted];
m14_16 -> m14_19  [key=2, style=dotted];
m14_17 -> m14_15  [key=0, style=bold, color=blue];
m14_9 -> m14_10  [key=0, style=solid];
m14_20 -> m14_21  [key=0, style=solid];
m14_20 -> m14_24  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>"];
m14_21 -> m14_22  [key=0, style=solid];
m14_21 -> m14_23  [key=0, style=solid, color=red];
m14_80 -> m14_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m14_80 -> m14_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m14_80 -> m14_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m14_80 -> m14_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m14_80 -> m14_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m14_80 -> m14_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m14_80 -> m14_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m14_80 -> m14_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m14_80 -> m14_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m14_80 -> m14_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m14_80 -> m14_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m14_80 -> m14_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_8  [key=2, style=dotted];
m15_1 -> m15_103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_2 -> m15_3  [key=0, style=solid, color=green];
m15_2 -> m15_9  [key=2, style=dotted];
m15_3 -> m15_0  [key=0, style=bold, color=blue];
m15_3 -> m15_4  [key=0, style=solid, color=green];
m15_3 -> m15_10  [key=2, style=dotted, color=green];
m15_55 -> m15_56  [key=0, style=solid];
m15_55 -> m15_70  [key=2, style=dotted];
m15_55 -> m15_76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_47 -> m15_48  [key=0, style=solid];
m15_47 -> m15_49  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m15_47 -> m15_51  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m15_47 -> m15_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m15_47 -> m15_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m15_47 -> m15_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m15_47 -> m15_56  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<HangFire.IStateAppliedFilter>"];
m15_47 -> m15_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m15_47 -> m15_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m15_47 -> m15_60  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<HangFire.IStateAppliedFilter>"];
m15_47 -> m15_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m15_47 -> m15_40  [key=0, style=bold, color=blue];
m15_48 -> m15_49  [key=0, style=solid];
m15_48 -> m15_42  [key=2, style=dotted];
m15_48 -> m15_64  [key=2, style=dotted];
m15_48 -> m15_52  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m15_48 -> m15_53  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m15_48 -> m15_54  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m15_48 -> m15_57  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m15_48 -> m15_149  [key=0, style=solid];
m15_49 -> m15_50  [key=0, style=solid];
m15_49 -> m15_51  [key=0, style=solid];
m15_49 -> m15_65  [key=2, style=dotted];
m15_51 -> m15_52  [key=0, style=solid];
m15_51 -> m15_66  [key=2, style=dotted];
m15_51 -> m15_54  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m15_51 -> m15_55  [key=1, style=dashed, color=darkseagreen4, label=context];
m15_51 -> m15_57  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m15_51 -> m15_58  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m15_51 -> m15_59  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m15_51 -> m15_61  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m15_51 -> m15_62  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m15_51 -> m15_48  [key=2, style=dotted];
m15_54 -> m15_55  [key=0, style=solid];
m15_54 -> m15_69  [key=2, style=dotted];
m15_56 -> m15_57  [key=0, style=solid];
m15_56 -> m15_58  [key=0, style=solid];
m15_56 -> m15_54  [key=0, style=bold, color=blue];
m15_58 -> m15_59  [key=0, style=solid, color=green];
m15_58 -> m15_72  [key=2, style=dotted];
m15_58 -> m15_48  [key=2, style=dotted];
m15_58 -> m15_60  [key=1, style=dashed, color=darkseagreen4, label=context];
m15_58 -> m15_61  [key=1, style=dashed, color=darkseagreen4, label=context];
m15_59 -> m15_60  [key=0, style=solid, color=green];
m15_59 -> m15_73  [key=2, style=dotted];
m15_59 -> m15_10  [key=2, style=dotted, color=green];
m15_59 -> m15_61  [key=1, style=dashed, color=green, label=newState];
m15_60 -> m15_61  [key=0, style=solid];
m15_60 -> m15_62  [key=0, style=solid];
m15_61 -> m15_60  [key=0, style=solid];
m15_61 -> m15_74  [key=2, style=dotted];
m15_61 -> m15_62  [key=0, style=solid];
m15_61 -> m15_49  [key=2, style=dotted];
m15_52 -> m15_53  [key=0, style=solid];
m15_52 -> m15_58  [key=0, style=solid];
m15_52 -> m15_67  [key=2, style=dotted];
m15_52 -> m15_27  [key=2, style=dotted];
m15_52 -> m15_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_53 -> m15_54  [key=0, style=solid];
m15_53 -> m15_55  [key=0, style=solid];
m15_53 -> m15_68  [key=2, style=dotted];
m15_53 -> m15_50  [key=0, style=bold, color=blue];
m15_57 -> m15_56  [key=0, style=solid];
m15_57 -> m15_71  [key=2, style=dotted];
m15_57 -> m15_58  [key=0, style=solid];
m15_50 -> m15_63  [key=0, style=solid];
m15_50 -> m15_51  [key=0, style=solid];
m15_62 -> m15_63  [key=0, style=solid];
m15_62 -> m15_75  [key=2, style=dotted];
m15_62 -> m15_57  [key=0, style=bold, color=blue];
m15_63 -> m15_47  [key=0, style=bold, color=blue];
m15_63 -> m15_64  [key=0, style=solid];
m15_107 -> m15_108  [key=0, style=solid];
m15_83 -> m15_84  [key=0, style=solid];
m15_83 -> m15_46  [key=0, style=bold, color=blue];
m15_84 -> m15_85  [key=0, style=solid];
m15_84 -> m15_48  [key=2, style=dotted];
m15_84 -> m15_86  [key=1, style=dashed, color=darkseagreen4, label=context];
m15_84 -> m15_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m15_84 -> m15_88  [key=1, style=dashed, color=darkseagreen4, label=bool];
m15_84 -> m15_89  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m15_84 -> m15_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m15_84 -> m15_90  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m15_84 -> m15_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m15_84 -> m15_91  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m15_84 -> m15_93  [key=1, style=dashed, color=red, label=IRedisTransaction];
m15_84 -> m15_104  [key=1, style=dashed, color=red, label="HangFire.States.JobState"];
m15_85 -> m15_86  [key=0, style=solid];
m15_85 -> m15_13  [key=2, style=dotted];
m15_85 -> m15_73  [key=2, style=dotted];
m15_85 -> m15_14  [key=2, style=dotted];
m15_85 -> m15_90  [key=1, style=dashed, color=darkseagreen4, label=properties];
m15_85 -> m15_6  [key=2, style=dotted];
m15_85 -> m15_87  [key=1, style=dashed, color=darkseagreen4, label=properties];
m15_85 -> m15_101  [key=1, style=dashed, color=darkseagreen4, label=properties];
m15_85 -> m15_91  [key=1, style=dashed, color=darkseagreen4, label=properties];
m15_85 -> m15_92  [key=1, style=dashed, color=darkseagreen4, label=properties];
m15_85 -> m15_93  [key=1, style=dashed, color=red, label=properties];
m15_85 -> m15_104  [key=1, style=dashed, color=red, label=properties];
m15_86 -> m15_87  [key=0, style=solid];
m15_86 -> m15_89  [key=2, style=dotted];
m15_86 -> m15_92  [key=1, style=dashed, color=darkseagreen4, label=now];
m15_87 -> m15_28  [key=2, style=dotted];
m15_87 -> m15_88  [key=0, style=solid];
m15_87 -> m15_23  [key=2, style=dotted];
m15_88 -> m15_83  [key=0, style=bold, color=blue];
m15_88 -> m15_89  [key=0, style=solid];
m15_88 -> m15_91  [key=0, style=solid];
m15_10 -> m15_11  [key=0, style=solid];
m15_99 -> m15_94  [key=0, style=bold, color=blue];
m15_12 -> m15_13  [key=0, style=solid];
m15_12 -> m15_18  [key=2, style=dotted];
m15_12 -> m15_17  [key=2, style=dotted];
m15_43 -> m15_44  [key=0, style=solid];
m15_43 -> m15_28  [key=2, style=dotted];
m15_75 -> m15_76  [key=0, style=solid];
m15_76 -> m15_77  [key=0, style=solid];
m15_76 -> m15_48  [key=2, style=dotted];
m15_78 -> m15_79  [key=0, style=solid];
m15_78 -> m15_69  [key=2, style=dotted];
m15_78 -> m15_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_78 -> m15_76  [key=0, style=bold, color=blue];
m15_77 -> m15_78  [key=0, style=solid];
m15_77 -> m15_68  [key=2, style=dotted];
m15_77 -> m15_42  [key=2, style=dotted];
m15_77 -> m15_79  [key=2, style=dotted];
m15_79 -> m15_75  [key=0, style=bold, color=blue];
m15_94 -> m15_95  [key=0, style=solid];
m15_94 -> m15_84  [key=0, style=bold, color=blue];
m15_95 -> m15_96  [key=0, style=solid];
m15_95 -> m15_48  [key=2, style=dotted];
m15_95 -> m15_97  [key=1, style=dashed, color=darkseagreen4, label=context];
m15_96 -> m15_97  [key=0, style=solid];
m15_96 -> m15_13  [key=2, style=dotted];
m15_96 -> m15_73  [key=2, style=dotted];
m15_96 -> m15_14  [key=2, style=dotted];
m15_96 -> m15_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_97 -> m15_98  [key=0, style=solid];
m15_97 -> m15_89  [key=2, style=dotted];
m15_97 -> m15_42  [key=2, style=dotted];
m15_97 -> m15_9  [key=2, style=dotted];
m15_97 -> m15_99  [key=2, style=dotted];
m15_98 -> m15_28  [key=2, style=dotted];
m15_98 -> m15_99  [key=0, style=solid];
m15_98 -> m15_96  [key=0, style=bold, color=blue];
m15_28 -> m15_38  [key=0, style=solid];
m15_28 -> n20  [key=2, style=dotted];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_16  [key=2, style=dotted];
m15_11 -> m15_17  [key=2, style=dotted];
m15_121 -> m15_122  [key=0, style=solid, color=green];
m15_122 -> m15_123  [key=0, style=solid, color=green];
m15_122 -> m15_10  [key=2, style=dotted, color=green];
m15_122 -> m15_124  [key=1, style=dashed, color=green, label=newState];
m15_122 -> m15_139  [key=1, style=dashed, color=green, label=newState];
m15_122 -> m15_127  [key=1, style=dashed, color=green, label=newState];
m15_123 -> m15_124  [key=0, style=solid];
m15_123 -> m15_131  [key=2, style=dotted];
m15_123 -> m15_126  [key=1, style=dashed, color=darkseagreen4, label=filter];
m15_124 -> m15_125  [key=0, style=solid];
m15_124 -> m15_13  [key=2, style=dotted];
m15_124 -> m15_132  [key=2, style=dotted];
m15_124 -> m15_134  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_124 -> m15_138  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_127 -> m15_128  [key=0, style=solid];
m15_127 -> m15_49  [key=2, style=dotted];
m15_125 -> m15_126  [key=0, style=solid];
m15_125 -> m15_48  [key=2, style=dotted];
m15_128 -> m15_129  [key=0, style=solid];
m15_128 -> m15_69  [key=2, style=dotted];
m15_128 -> m15_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_129 -> m15_130  [key=0, style=solid];
m15_129 -> m15_69  [key=2, style=dotted];
m15_129 -> m15_145  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_126 -> m15_127  [key=0, style=solid];
m15_126 -> m15_133  [key=2, style=dotted];
m15_130 -> m15_121  [key=0, style=bold, color=blue];
m15_111 -> m15_112  [key=0, style=solid];
m15_111 -> m15_101  [key=1, style=dashed, color=darkseagreen4, label=properties];
m15_111 -> m15_104  [key=1, style=dashed, color=red, label=properties];
m15_112 -> m15_113  [key=0, style=solid];
m15_112 -> m15_48  [key=2, style=dotted];
m15_114 -> m15_115  [key=0, style=solid];
m15_114 -> m15_49  [key=2, style=dotted];
m15_115 -> m15_116  [key=0, style=solid];
m15_115 -> m15_69  [key=2, style=dotted];
m15_115 -> m15_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_113 -> m15_114  [key=0, style=solid];
m15_113 -> m15_117  [key=2, style=dotted];
m15_113 -> m15_110  [key=2, style=dotted];
m15_116 -> m15_111  [key=0, style=bold, color=blue];
m15_42 -> m15_43  [key=0, style=solid];
m15_42 -> m15_28  [key=2, style=dotted];
m15_106 -> m15_103  [key=0, style=bold, color=blue];
m15_71 -> m15_73  [key=2, style=dotted];
m15_71 -> m15_72  [key=0, style=solid];
m15_71 -> m15_74  [key=2, style=dotted];
m15_27 -> m15_28  [key=0, style=solid];
m15_27 -> m15_29  [key=0, style=solid];
m15_19 -> m15_20  [key=0, style=solid];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_11  [key=2, style=dotted];
m15_5 -> m15_4  [key=0, style=bold, color=blue];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_12  [key=2, style=dotted];
m15_93 -> m15_94  [key=0, style=solid, color=red];
m15_93 -> m15_70  [key=2, style=dotted, color=red];
m15_93 -> m15_103  [key=1, style=dashed, color=red, label="lambda expression"];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_13  [key=2, style=dotted];
m15_6 -> m15_14  [key=2, style=dotted];
m15_6 -> m15_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_7 -> m15_0  [key=0, style=bold, color=blue];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_9  [key=2, style=dotted];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_19  [key=2, style=dotted];
m15_13 -> m15_17  [key=2, style=dotted];
m15_17 -> m15_21  [key=0, style=solid];
m15_21 -> m15_22  [key=0, style=solid];
m15_21 -> m15_23  [key=2, style=dotted];
m15_21 -> m15_19  [key=0, style=bold, color=blue];
m15_22 -> m15_17  [key=0, style=bold, color=blue];
m15_41 -> m15_42  [key=0, style=solid];
m15_41 -> m15_48  [key=2, style=dotted];
m15_41 -> m15_43  [key=1, style=dashed, color=darkseagreen4, label=context];
m15_41 -> m15_44  [key=1, style=dashed, color=darkseagreen4, label=context];
m15_41 -> m15_45  [key=1, style=dashed, color=darkseagreen4, label=context];
m15_41 -> m15_46  [key=1, style=dashed, color=darkseagreen4, label=context];
m15_103 -> m15_104  [key=0, style=solid, color=red];
m15_104 -> m15_105  [key=0, style=solid, color=red];
m15_104 -> m15_48  [key=2, style=dotted];
m15_104 -> m15_108  [key=1, style=dashed, color=darkseagreen4, label=context];
m15_104 -> m15_42  [key=2, style=dotted, color=red];
m15_104 -> m15_106  [key=2, style=dotted, color=red];
m15_104 -> m15_107  [key=2, style=dotted, color=red];
m15_105 -> m15_27  [key=2, style=dotted];
m15_105 -> m15_106  [key=0, style=solid];
m15_105 -> m15_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_105 -> m15_103  [key=0, style=bold, color=blue];
m15_40 -> m15_41  [key=0, style=solid];
m15_101 -> m15_102  [key=0, style=solid];
m15_101 -> m15_42  [key=2, style=dotted];
m15_101 -> m15_99  [key=2, style=dotted];
m15_101 -> m15_93  [key=2, style=dotted];
m15_100 -> m15_101  [key=0, style=solid];
m15_102 -> m15_100  [key=0, style=bold, color=blue];
m15_139 -> m15_140  [key=0, style=solid];
m15_30 -> m15_31  [key=0, style=solid];
m15_30 -> m15_32  [key=2, style=dotted];
m15_30 -> m15_42  [key=2, style=dotted];
m15_30 -> m15_43  [key=2, style=dotted];
m15_30 -> m15_44  [key=2, style=dotted];
m15_38 -> m15_39  [key=0, style=solid];
m15_38 -> m15_32  [key=2, style=dotted];
m15_38 -> m15_24  [key=0, style=bold, color=blue];
m15_142 -> m15_143  [key=0, style=solid];
m15_142 -> m15_144  [key=2, style=dotted];
m15_134 -> m15_135  [key=0, style=solid];
m15_138 -> m15_139  [key=0, style=solid];
m15_140 -> m15_138  [key=0, style=bold, color=blue];
m15_29 -> m15_30  [key=0, style=solid];
m15_29 -> m15_40  [key=2, style=dotted];
m15_29 -> m15_41  [key=2, style=dotted];
m15_29 -> m15_31  [key=1, style=dashed, color=darkseagreen4, label=changingFilters];
m15_31 -> m15_29  [key=0, style=bold, color=blue];
m15_31 -> m15_32  [key=0, style=solid];
m15_31 -> m15_36  [key=0, style=solid];
m15_31 -> m15_33  [key=1, style=dashed, color=darkseagreen4, label=filter];
m15_37 -> m15_38  [key=0, style=solid];
m15_37 -> m15_47  [key=2, style=dotted];
m15_39 -> m15_37  [key=0, style=bold, color=blue];
m15_70 -> m15_71  [key=0, style=solid];
m15_80 -> m15_81  [key=0, style=solid];
m15_80 -> m15_66  [key=2, style=dotted];
m15_80 -> m15_82  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m15_90 -> m15_91  [key=0, style=solid];
m15_90 -> m15_70  [key=2, style=dotted];
m15_90 -> m15_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_108 -> m15_109  [key=0, style=solid];
m15_108 -> m15_110  [key=2, style=dotted];
m15_108 -> m15_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m15_108 -> m15_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m15_118 -> m15_119  [key=0, style=solid];
m15_141 -> m15_142  [key=0, style=solid];
m15_143 -> m15_141  [key=0, style=bold, color=blue];
m15_145 -> m15_146  [key=0, style=solid];
m15_136 -> m15_134  [key=0, style=bold, color=blue];
m15_135 -> m15_27  [key=2, style=dotted];
m15_135 -> m15_136  [key=0, style=solid];
m15_135 -> m15_137  [key=2, style=dotted];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_22  [key=2, style=dotted];
m15_72 -> m15_70  [key=0, style=bold, color=blue];
m15_82 -> m15_80  [key=0, style=bold, color=blue];
m15_82 -> m15_83  [key=0, style=solid];
m15_82 -> m15_75  [key=2, style=dotted];
m15_81 -> m15_73  [key=2, style=dotted];
m15_81 -> m15_82  [key=0, style=solid];
m15_81 -> m15_74  [key=2, style=dotted];
m15_81 -> m15_72  [key=2, style=dotted];
m15_92 -> m15_90  [key=0, style=bold, color=blue];
m15_92 -> m15_93  [key=0, style=solid, color=red];
m15_92 -> m15_95  [key=2, style=dotted];
m15_92 -> m15_23  [key=2, style=dotted];
m15_91 -> m15_92  [key=0, style=solid];
m15_91 -> m15_93  [key=2, style=dotted];
m15_91 -> m15_23  [key=2, style=dotted];
m15_109 -> m15_107  [key=0, style=bold, color=blue];
m15_109 -> m15_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m15_120 -> m15_118  [key=0, style=bold, color=blue];
m15_119 -> m15_120  [key=0, style=solid];
m15_119 -> m15_22  [key=2, style=dotted];
m15_146 -> m15_147  [key=0, style=solid];
m15_146 -> m15_148  [key=2, style=dotted];
m15_147 -> m15_145  [key=0, style=bold, color=blue];
m15_14 -> m15_15  [key=0, style=solid];
m15_14 -> m15_20  [key=2, style=dotted];
m15_14 -> m15_17  [key=2, style=dotted];
m15_15 -> m15_10  [key=0, style=bold, color=blue];
m15_65 -> m15_66  [key=0, style=solid];
m15_65 -> m15_68  [key=2, style=dotted];
m15_64 -> m15_65  [key=0, style=solid];
m15_64 -> m15_48  [key=2, style=dotted];
m15_66 -> m15_67  [key=0, style=solid];
m15_66 -> m15_69  [key=2, style=dotted];
m15_66 -> m15_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_67 -> m15_63  [key=0, style=bold, color=blue];
m15_24 -> m15_25  [key=0, style=solid];
m15_24 -> m15_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m15_24 -> m15_30  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m15_24 -> m15_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m15_24 -> m15_33  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m15_24 -> m15_35  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m15_24 -> m15_37  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m15_24 -> m15_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_25 -> m15_26  [key=0, style=solid];
m15_25 -> m15_27  [key=0, style=solid];
m15_25 -> m15_28  [key=2, style=dotted];
m15_32 -> m15_33  [key=0, style=solid];
m15_32 -> m15_34  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m15_32 -> m15_35  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m15_33 -> m15_34  [key=0, style=solid];
m15_33 -> m15_45  [key=2, style=dotted];
m15_33 -> m15_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m15_33 -> m15_55  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m15_33 -> m15_82  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m15_35 -> m15_31  [key=0, style=solid];
m15_35 -> m15_46  [key=2, style=dotted];
m15_35 -> m15_36  [key=0, style=solid];
m15_35 -> m15_28  [key=2, style=dotted];
m15_26 -> m15_38  [key=0, style=solid];
m15_26 -> n20  [key=2, style=dotted];
m15_26 -> m15_23  [key=0, style=bold, color=blue];
m15_36 -> m15_37  [key=0, style=solid];
m15_36 -> m15_40  [key=2, style=dotted];
m15_36 -> m15_41  [key=2, style=dotted];
m15_36 -> m15_33  [key=0, style=bold, color=blue];
m15_34 -> m15_35  [key=0, style=solid];
m15_34 -> m15_31  [key=0, style=solid];
m15_34 -> m15_27  [key=2, style=dotted];
m15_34 -> m15_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_46 -> m15_80  [key=0, style=solid];
m15_46 -> m15_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m15_46 -> m15_47  [key=0, style=solid];
m15_46 -> m15_49  [key=2, style=dotted];
m15_45 -> m15_46  [key=0, style=solid];
m15_45 -> m15_28  [key=2, style=dotted];
m15_44 -> m15_45  [key=0, style=solid];
m15_44 -> m15_49  [key=2, style=dotted];
m15_8 -> m15_6  [key=0, style=bold, color=blue];
m15_23 -> m15_24  [key=0, style=solid];
m15_89 -> m15_90  [key=0, style=solid];
m15_89 -> m15_70  [key=2, style=dotted];
m15_89 -> m15_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_149 -> m15_150  [key=0, style=solid];
m15_149 -> m15_32  [key=2, style=dotted];
m15_150 -> m15_48  [key=0, style=bold, color=blue];
m15_110 -> m15_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m15_110 -> m15_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m15_110 -> m15_104  [key=1, style=dashed, color=red, label="HangFire.States.JobState"];
m15_151 -> m15_3  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_85  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_96  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_104  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_114  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_128  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_142  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_129  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_151 -> m15_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m15_154 -> m15_139  [key=1, style=dashed, color=darkseagreen4, label=newState];
m15_152 -> m15_55  [key=1, style=dashed, color=darkseagreen4, label=context];
m15_153 -> m15_108  [key=1, style=dashed, color=darkseagreen4, label=context];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_15  [key=1, style=dashed, color=darkseagreen4, label=enqueuedState];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> m16_19  [key=2, style=dotted];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_15  [key=0, style=solid];
m16_14 -> m16_16  [key=0, style=solid];
m16_14 -> m16_17  [key=2, style=dotted];
m16_14 -> m16_18  [key=2, style=dotted];
m16_16 -> m16_11  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_0  [key=0, style=bold, color=blue];
m16_20 -> m16_21  [key=0, style=solid];
m16_21 -> m16_20  [key=0, style=bold, color=blue];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_3 -> m16_4  [key=0, style=solid];
m16_4 -> m16_5  [key=0, style=solid];
m16_5 -> m16_2  [key=0, style=bold, color=blue];
m16_6 -> m16_7  [key=0, style=solid];
m16_7 -> m16_8  [key=0, style=solid];
m16_7 -> m16_9  [key=2, style=dotted];
m16_7 -> m16_10  [key=2, style=dotted];
m16_8 -> m16_6  [key=0, style=bold, color=blue];
m16_22 -> m16_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.EnqueuedState"];
m16_22 -> m16_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.EnqueuedState"];
m16_22 -> m16_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.EnqueuedState"];
m18_6 -> m18_7  [key=0, style=solid];
m18_7 -> m18_10  [key=2, style=dotted];
m18_7 -> m18_8  [key=0, style=solid];
m18_7 -> m18_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_8 -> m18_11  [key=2, style=dotted];
m18_8 -> m18_9  [key=0, style=solid];
m18_9 -> m18_6  [key=0, style=bold, color=blue];
m18_190 -> m18_191  [key=0, style=solid];
m18_191 -> m18_23  [key=2, style=dotted];
m18_191 -> m18_192  [key=0, style=solid];
m18_191 -> m18_196  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_192 -> m18_193  [key=0, style=solid];
m18_192 -> m18_121  [key=2, style=dotted];
m18_192 -> m18_10  [key=2, style=dotted];
m18_192 -> m18_200  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_193 -> m18_194  [key=0, style=solid];
m18_193 -> m18_24  [key=2, style=dotted];
m18_193 -> m18_205  [key=1, style=dashed, color=darkseagreen4, label=performer];
m18_194 -> m18_195  [key=0, style=solid];
m18_194 -> m18_10  [key=2, style=dotted];
m18_194 -> m18_204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_195 -> m18_190  [key=0, style=bold, color=blue];
m18_53 -> m18_219  [key=0, style=solid];
m18_219 -> m18_220  [key=0, style=solid];
m18_220 -> m18_53  [key=0, style=bold, color=blue];
m18_101 -> m18_239  [key=0, style=solid];
m18_101 -> m18_240  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m18_239 -> m18_240  [key=0, style=solid];
m18_240 -> m18_241  [key=0, style=solid];
m18_240 -> m18_11  [key=2, style=dotted];
m18_241 -> m18_101  [key=0, style=bold, color=blue];
m18_24 -> m18_251  [key=0, style=solid];
m18_251 -> m18_252  [key=0, style=solid];
m18_251 -> m18_253  [key=2, style=dotted];
m18_252 -> m18_24  [key=0, style=bold, color=blue];
m18_0 -> m18_1  [key=0, style=solid];
m18_2 -> m18_3  [key=0, style=solid, color=green];
m18_2 -> m18_5  [key=2, style=dotted, color=green];
m18_1 -> m18_2  [key=0, style=solid, color=green];
m18_1 -> m18_4  [key=2, style=dotted];
m18_3 -> m18_0  [key=0, style=bold, color=blue];
m18_91 -> m18_92  [key=0, style=solid];
m18_93 -> m18_23  [key=2, style=dotted];
m18_93 -> m18_94  [key=0, style=solid];
m18_93 -> m18_98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_94 -> m18_95  [key=0, style=solid];
m18_94 -> m18_24  [key=2, style=dotted];
m18_95 -> m18_96  [key=0, style=solid];
m18_95 -> m18_25  [key=2, style=dotted];
m18_92 -> m18_93  [key=0, style=solid];
m18_96 -> m18_97  [key=0, style=solid];
m18_96 -> m18_26  [key=2, style=dotted];
m18_97 -> m18_91  [key=0, style=bold, color=blue];
m18_207 -> m18_208  [key=0, style=solid];
m18_208 -> m18_209  [key=0, style=solid];
m18_208 -> m18_38  [key=2, style=dotted];
m18_208 -> m18_213  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_209 -> m18_210  [key=0, style=solid];
m18_209 -> m18_24  [key=2, style=dotted];
m18_210 -> m18_211  [key=0, style=solid];
m18_210 -> m18_25  [key=2, style=dotted];
m18_211 -> m18_212  [key=0, style=solid];
m18_211 -> m18_11  [key=2, style=dotted];
m18_212 -> m18_207  [key=0, style=bold, color=blue];
m18_186 -> m18_248  [key=0, style=solid];
m18_248 -> m18_249  [key=0, style=solid];
m18_248 -> m18_250  [key=2, style=dotted];
m18_249 -> m18_186  [key=0, style=bold, color=blue];
m18_102 -> m18_103  [key=0, style=solid];
m18_104 -> m18_23  [key=2, style=dotted];
m18_104 -> m18_105  [key=0, style=solid];
m18_104 -> m18_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_105 -> m18_106  [key=0, style=solid];
m18_105 -> m18_24  [key=2, style=dotted];
m18_106 -> m18_107  [key=0, style=solid];
m18_106 -> m18_25  [key=2, style=dotted];
m18_103 -> m18_104  [key=0, style=solid];
m18_107 -> m18_108  [key=0, style=solid];
m18_107 -> m18_26  [key=2, style=dotted];
m18_108 -> m18_102  [key=0, style=bold, color=blue];
m18_54 -> m18_55  [key=0, style=solid];
m18_56 -> m18_23  [key=2, style=dotted];
m18_56 -> m18_57  [key=0, style=solid];
m18_56 -> m18_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_57 -> m18_58  [key=0, style=solid];
m18_57 -> m18_24  [key=2, style=dotted];
m18_58 -> m18_59  [key=0, style=solid];
m18_58 -> m18_25  [key=2, style=dotted];
m18_55 -> m18_56  [key=0, style=solid];
m18_59 -> m18_60  [key=0, style=solid];
m18_59 -> m18_26  [key=2, style=dotted];
m18_60 -> m18_54  [key=0, style=bold, color=blue];
m18_64 -> m18_56  [key=3, color=darkorchid, style=bold, label="Parameter variable int intArg"];
m18_64 -> m18_244  [key=0, style=solid];
m18_64 -> m18_245  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_64 -> m18_246  [key=1, style=dashed, color=darkseagreen4, label=int];
m18_244 -> m18_245  [key=0, style=solid];
m18_245 -> m18_246  [key=0, style=solid];
m18_245 -> m18_11  [key=2, style=dotted];
m18_246 -> m18_247  [key=0, style=solid];
m18_246 -> m18_11  [key=2, style=dotted];
m18_247 -> m18_64  [key=0, style=bold, color=blue];
m18_65 -> m18_66  [key=0, style=solid];
m18_71 -> m18_72  [key=0, style=solid];
m18_71 -> m18_79  [key=2, style=dotted];
m18_72 -> m18_73  [key=0, style=solid];
m18_72 -> m18_24  [key=2, style=dotted];
m18_73 -> m18_74  [key=0, style=solid];
m18_73 -> m18_25  [key=2, style=dotted];
m18_68 -> m18_71  [key=1, style=dashed, color=darkseagreen4, label=convertedDate];
m18_68 -> m18_69  [key=0, style=solid];
m18_68 -> m18_77  [key=2, style=dotted];
m18_69 -> m18_71  [key=1, style=dashed, color=darkseagreen4, label=type];
m18_69 -> m18_70  [key=0, style=solid];
m18_70 -> m18_71  [key=0, style=solid];
m18_70 -> m18_78  [key=2, style=dotted];
m18_74 -> m18_75  [key=0, style=solid];
m18_74 -> m18_26  [key=2, style=dotted];
m18_67 -> m18_68  [key=0, style=solid];
m18_67 -> m18_76  [key=2, style=dotted];
m18_66 -> m18_67  [key=0, style=solid];
m18_75 -> m18_65  [key=0, style=bold, color=blue];
m18_162 -> m18_163  [key=0, style=solid];
m18_164 -> m18_165  [key=0, style=solid];
m18_164 -> m18_38  [key=2, style=dotted];
m18_164 -> m18_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_165 -> m18_166  [key=0, style=solid];
m18_165 -> m18_24  [key=2, style=dotted];
m18_165 -> m18_174  [key=1, style=dashed, color=darkseagreen4, label=performer];
m18_166 -> m18_167  [key=0, style=solid];
m18_166 -> m18_10  [key=2, style=dotted];
m18_166 -> m18_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_163 -> m18_164  [key=0, style=solid];
m18_167 -> m18_168  [key=0, style=solid];
m18_167 -> m18_26  [key=2, style=dotted];
m18_168 -> m18_162  [key=0, style=bold, color=blue];
m18_16 -> m18_17  [key=0, style=solid, color=green];
m18_17 -> m18_18  [key=0, style=solid, color=green];
m18_18 -> m18_19  [key=0, style=solid, color=green];
m18_18 -> m18_23  [key=2, style=dotted, color=green];
m18_18 -> m18_27  [key=1, style=dashed, color=green, label="lambda expression"];
m18_19 -> m18_20  [key=0, style=solid];
m18_19 -> m18_24  [key=2, style=dotted];
m18_20 -> m18_21  [key=0, style=solid];
m18_20 -> m18_25  [key=2, style=dotted];
m18_21 -> m18_22  [key=0, style=solid];
m18_21 -> m18_26  [key=2, style=dotted];
m18_22 -> m18_16  [key=0, style=bold, color=blue];
m18_113 -> m18_114  [key=0, style=solid];
m18_115 -> m18_116  [key=0, style=solid];
m18_115 -> m18_121  [key=2, style=dotted];
m18_115 -> m18_122  [key=2, style=dotted];
m18_115 -> m18_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_116 -> m18_23  [key=2, style=dotted];
m18_116 -> m18_117  [key=0, style=solid];
m18_116 -> m18_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_117 -> m18_118  [key=0, style=solid];
m18_117 -> m18_24  [key=2, style=dotted];
m18_117 -> m18_131  [key=1, style=dashed, color=darkseagreen4, label=performer];
m18_118 -> m18_119  [key=0, style=solid];
m18_118 -> m18_10  [key=2, style=dotted];
m18_118 -> m18_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_114 -> m18_115  [key=0, style=solid];
m18_114 -> m18_120  [key=2, style=dotted];
m18_119 -> m18_113  [key=0, style=bold, color=blue];
m18_149 -> m18_150  [key=0, style=solid];
m18_152 -> m18_153  [key=0, style=solid];
m18_152 -> m18_157  [key=2, style=dotted];
m18_153 -> m18_154  [key=0, style=solid];
m18_153 -> m18_24  [key=2, style=dotted];
m18_153 -> m18_160  [key=1, style=dashed, color=darkseagreen4, label=performer];
m18_154 -> m18_155  [key=0, style=solid];
m18_154 -> m18_10  [key=2, style=dotted];
m18_154 -> m18_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_150 -> m18_152  [key=1, style=dashed, color=darkseagreen4, label=type];
m18_150 -> m18_151  [key=0, style=solid];
m18_151 -> m18_152  [key=0, style=solid];
m18_151 -> m18_78  [key=2, style=dotted];
m18_155 -> m18_156  [key=0, style=solid];
m18_155 -> m18_158  [key=2, style=dotted];
m18_156 -> m18_149  [key=0, style=bold, color=blue];
m18_43 -> m18_44  [key=0, style=solid];
m18_45 -> m18_46  [key=0, style=solid];
m18_45 -> m18_38  [key=2, style=dotted];
m18_45 -> m18_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_46 -> m18_47  [key=0, style=solid];
m18_46 -> m18_24  [key=2, style=dotted];
m18_47 -> m18_48  [key=0, style=solid];
m18_47 -> m18_25  [key=2, style=dotted];
m18_44 -> m18_45  [key=0, style=solid];
m18_48 -> m18_49  [key=0, style=solid];
m18_48 -> m18_26  [key=2, style=dotted];
m18_49 -> m18_43  [key=0, style=bold, color=blue];
m18_133 -> m18_134  [key=0, style=solid];
m18_134 -> m18_135  [key=0, style=solid];
m18_134 -> m18_121  [key=2, style=dotted];
m18_134 -> m18_139  [key=2, style=dotted];
m18_134 -> m18_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_135 -> m18_23  [key=2, style=dotted];
m18_135 -> m18_136  [key=0, style=solid];
m18_135 -> m18_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_136 -> m18_137  [key=0, style=solid];
m18_136 -> m18_24  [key=2, style=dotted];
m18_136 -> m18_147  [key=1, style=dashed, color=darkseagreen4, label=performer];
m18_137 -> m18_138  [key=0, style=solid];
m18_137 -> m18_10  [key=2, style=dotted];
m18_137 -> m18_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_138 -> m18_133  [key=0, style=bold, color=blue];
m18_12 -> m18_13  [key=0, style=solid];
m18_27 -> m18_28  [key=0, style=solid, color=green];
m18_28 -> m18_29  [key=0, style=solid, color=green];
m18_28 -> m18_30  [key=2, style=dotted, color=green];
m18_29 -> m18_27  [key=0, style=bold, color=blue];
m18_62 -> m18_63  [key=0, style=solid];
m18_62 -> m18_64  [key=2, style=dotted];
m18_99 -> m18_100  [key=0, style=solid];
m18_99 -> m18_101  [key=2, style=dotted];
m18_128 -> m18_129  [key=0, style=solid];
m18_128 -> m18_42  [key=2, style=dotted];
m18_131 -> m18_132  [key=0, style=solid];
m18_131 -> m18_25  [key=2, style=dotted];
m18_144 -> m18_145  [key=0, style=solid];
m18_144 -> m18_42  [key=2, style=dotted];
m18_147 -> m18_148  [key=0, style=solid];
m18_147 -> m18_25  [key=2, style=dotted];
m18_160 -> m18_161  [key=0, style=solid];
m18_160 -> m18_25  [key=2, style=dotted];
m18_174 -> m18_175  [key=0, style=solid];
m18_174 -> m18_25  [key=2, style=dotted];
m18_188 -> m18_189  [key=0, style=solid];
m18_188 -> m18_25  [key=2, style=dotted];
m18_205 -> m18_206  [key=0, style=solid];
m18_205 -> m18_25  [key=2, style=dotted];
m18_39 -> m18_40  [key=0, style=solid];
m18_50 -> m18_51  [key=0, style=solid];
m18_61 -> m18_62  [key=0, style=solid];
m18_63 -> m18_61  [key=0, style=bold, color=blue];
m18_98 -> m18_99  [key=0, style=solid];
m18_100 -> m18_98  [key=0, style=bold, color=blue];
m18_109 -> m18_110  [key=0, style=solid];
m18_123 -> m18_124  [key=0, style=solid];
m18_127 -> m18_128  [key=0, style=solid];
m18_129 -> m18_127  [key=0, style=bold, color=blue];
m18_130 -> m18_131  [key=0, style=solid];
m18_132 -> m18_130  [key=0, style=bold, color=blue];
m18_140 -> m18_141  [key=0, style=solid];
m18_143 -> m18_144  [key=0, style=solid];
m18_145 -> m18_143  [key=0, style=bold, color=blue];
m18_146 -> m18_147  [key=0, style=solid];
m18_148 -> m18_146  [key=0, style=bold, color=blue];
m18_159 -> m18_160  [key=0, style=solid];
m18_161 -> m18_159  [key=0, style=bold, color=blue];
m18_169 -> m18_170  [key=0, style=solid];
m18_173 -> m18_174  [key=0, style=solid];
m18_175 -> m18_173  [key=0, style=bold, color=blue];
m18_183 -> m18_184  [key=0, style=solid];
m18_187 -> m18_188  [key=0, style=solid];
m18_189 -> m18_187  [key=0, style=bold, color=blue];
m18_196 -> m18_197  [key=0, style=solid];
m18_200 -> m18_201  [key=0, style=solid];
m18_204 -> m18_205  [key=0, style=solid];
m18_206 -> m18_204  [key=0, style=bold, color=blue];
m18_213 -> m18_214  [key=0, style=solid];
m18_41 -> m18_39  [key=0, style=bold, color=blue];
m18_40 -> m18_42  [key=2, style=dotted];
m18_40 -> m18_41  [key=0, style=solid];
m18_52 -> m18_50  [key=0, style=bold, color=blue];
m18_51 -> m18_52  [key=0, style=solid];
m18_51 -> m18_53  [key=2, style=dotted];
m18_110 -> m18_112  [key=2, style=dotted];
m18_110 -> m18_111  [key=0, style=solid];
m18_111 -> m18_109  [key=0, style=bold, color=blue];
m18_125 -> m18_123  [key=0, style=bold, color=blue];
m18_124 -> m18_10  [key=2, style=dotted];
m18_124 -> m18_125  [key=0, style=solid];
m18_124 -> m18_126  [key=2, style=dotted];
m18_141 -> m18_10  [key=2, style=dotted];
m18_141 -> m18_142  [key=0, style=solid];
m18_141 -> m18_126  [key=2, style=dotted];
m18_142 -> m18_140  [key=0, style=bold, color=blue];
m18_171 -> m18_169  [key=0, style=bold, color=blue];
m18_170 -> m18_171  [key=0, style=solid];
m18_170 -> m18_172  [key=2, style=dotted];
m18_185 -> m18_183  [key=0, style=bold, color=blue];
m18_184 -> m18_185  [key=0, style=solid];
m18_184 -> m18_186  [key=2, style=dotted];
m18_198 -> m18_196  [key=0, style=bold, color=blue];
m18_197 -> m18_198  [key=0, style=solid];
m18_197 -> m18_199  [key=2, style=dotted];
m18_202 -> m18_200  [key=0, style=bold, color=blue];
m18_201 -> m18_202  [key=0, style=solid];
m18_201 -> m18_203  [key=2, style=dotted];
m18_215 -> m18_213  [key=0, style=bold, color=blue];
m18_214 -> m18_215  [key=0, style=solid];
m18_214 -> m18_216  [key=2, style=dotted];
m18_13 -> m18_14  [key=0, style=solid];
m18_13 -> m18_15  [key=2, style=dotted];
m18_14 -> m18_12  [key=0, style=bold, color=blue];
m18_80 -> m18_81  [key=0, style=solid];
m18_85 -> m18_86  [key=0, style=solid];
m18_85 -> m18_79  [key=2, style=dotted];
m18_86 -> m18_87  [key=0, style=solid];
m18_86 -> m18_24  [key=2, style=dotted];
m18_87 -> m18_88  [key=0, style=solid];
m18_87 -> m18_25  [key=2, style=dotted];
m18_82 -> m18_85  [key=1, style=dashed, color=darkseagreen4, label=convertedDate];
m18_82 -> m18_83  [key=0, style=solid];
m18_82 -> m18_90  [key=2, style=dotted];
m18_83 -> m18_85  [key=1, style=dashed, color=darkseagreen4, label=type];
m18_83 -> m18_84  [key=0, style=solid];
m18_84 -> m18_85  [key=0, style=solid];
m18_84 -> m18_78  [key=2, style=dotted];
m18_88 -> m18_89  [key=0, style=solid];
m18_88 -> m18_26  [key=2, style=dotted];
m18_81 -> m18_82  [key=0, style=solid];
m18_89 -> m18_80  [key=0, style=bold, color=blue];
m18_172 -> m18_224  [key=0, style=solid];
m18_224 -> m18_225  [key=0, style=solid];
m18_225 -> m18_172  [key=0, style=bold, color=blue];
m18_31 -> m18_32  [key=0, style=solid];
m18_33 -> m18_34  [key=0, style=solid];
m18_33 -> m18_38  [key=2, style=dotted];
m18_33 -> m18_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_34 -> m18_35  [key=0, style=solid];
m18_34 -> m18_24  [key=2, style=dotted];
m18_35 -> m18_36  [key=0, style=solid];
m18_35 -> m18_25  [key=2, style=dotted];
m18_32 -> m18_33  [key=0, style=solid];
m18_36 -> m18_37  [key=0, style=solid];
m18_36 -> m18_26  [key=2, style=dotted];
m18_37 -> m18_31  [key=0, style=bold, color=blue];
m18_176 -> m18_177  [key=0, style=solid];
m18_177 -> m18_23  [key=2, style=dotted];
m18_177 -> m18_178  [key=0, style=solid];
m18_177 -> m18_183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_178 -> m18_179  [key=0, style=solid];
m18_178 -> m18_24  [key=2, style=dotted];
m18_178 -> m18_188  [key=1, style=dashed, color=darkseagreen4, label=performer];
m18_179 -> m18_180  [key=0, style=solid];
m18_179 -> m18_10  [key=2, style=dotted];
m18_179 -> m18_187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_179 -> m18_181  [key=1, style=dashed, color=darkseagreen4, label=thrownException];
m18_180 -> m18_10  [key=2, style=dotted];
m18_180 -> m18_181  [key=0, style=solid];
m18_181 -> m18_182  [key=0, style=solid];
m18_181 -> m18_11  [key=2, style=dotted];
m18_182 -> m18_176  [key=0, style=bold, color=blue];
m18_30 -> m18_242  [key=0, style=solid];
m18_242 -> m18_243  [key=0, style=solid];
m18_243 -> m18_30  [key=0, style=bold, color=blue];
m18_112 -> m18_104  [key=3, color=darkorchid, style=bold, label="Parameter variable string[] argument"];
m18_112 -> m18_232  [key=0, style=solid];
m18_112 -> m18_233  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m18_232 -> m18_233  [key=0, style=solid];
m18_233 -> m18_234  [key=0, style=solid];
m18_233 -> m18_235  [key=2, style=dotted];
m18_234 -> m18_112  [key=0, style=bold, color=blue];
m18_199 -> m18_236  [key=0, style=solid];
m18_236 -> m18_237  [key=0, style=solid];
m18_236 -> m18_238  [key=2, style=dotted];
m18_237 -> m18_199  [key=0, style=bold, color=blue];
m18_226 -> m18_227  [key=0, style=solid];
m18_227 -> m18_120  [key=2, style=dotted];
m18_227 -> m18_228  [key=0, style=solid];
m18_228 -> m18_226  [key=0, style=bold, color=blue];
m18_42 -> m18_217  [key=0, style=solid];
m18_217 -> m18_218  [key=0, style=solid];
m18_218 -> m18_42  [key=0, style=bold, color=blue];
m18_254 -> m18_2  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_18  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_45  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_85  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_93  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_99  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_104  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_105  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_106  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_116  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_128  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_117  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_118  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_131  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_134  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_135  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_144  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_136  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_137  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_147  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_152  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_153  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_154  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_160  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_164  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_165  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_166  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_174  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_177  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_178  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_188  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_191  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_192  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_193  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_194  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_205  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_208  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_209  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_210  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_254 -> m18_251  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m18_255 -> m18_131  [key=1, style=dashed, color=darkseagreen4, label=performer];
m18_256 -> m18_147  [key=1, style=dashed, color=darkseagreen4, label=performer];
m18_257 -> m18_160  [key=1, style=dashed, color=darkseagreen4, label=performer];
m18_258 -> m18_174  [key=1, style=dashed, color=darkseagreen4, label=performer];
m18_259 -> m18_188  [key=1, style=dashed, color=darkseagreen4, label=performer];
m18_260 -> m18_205  [key=1, style=dashed, color=darkseagreen4, label=performer];
m19_36 -> m19_37  [key=0, style=solid];
m19_36 -> m19_38  [key=0, style=solid];
m19_4 -> m19_5  [key=0, style=solid];
m19_5 -> m19_4  [key=0, style=bold, color=blue];
m19_5 -> m19_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_5 -> m19_6  [key=0, style=solid];
m19_43 -> m19_45  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_43 -> m19_44  [key=0, style=solid];
m19_53 -> m19_61  [key=2, style=dotted];
m19_53 -> m19_54  [key=0, style=solid];
m19_53 -> m19_64  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_53 -> m19_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_54 -> m19_61  [key=2, style=dotted];
m19_54 -> m19_51  [key=0, style=solid];
m19_54 -> m19_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_54 -> m19_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_50 -> m19_60  [key=2, style=dotted];
m19_50 -> m19_53  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m19_50 -> m19_54  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m19_50 -> m19_51  [key=0, style=solid];
m19_50 -> m19_55  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m19_48 -> m19_53  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m19_48 -> m19_49  [key=0, style=solid];
m19_48 -> m19_59  [key=2, style=dotted];
m19_48 -> m19_70  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m19_48 -> m19_56  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m19_48 -> m19_84  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m19_52 -> m19_53  [key=0, style=solid];
m19_52 -> m19_54  [key=1, style=dashed, color=darkseagreen4, label=job];
m19_52 -> m19_65  [key=1, style=dashed, color=darkseagreen4, label=job];
m19_52 -> m19_70  [key=1, style=dashed, color=darkseagreen4, label=job];
m19_52 -> m19_74  [key=1, style=dashed, color=darkseagreen4, label=job];
m19_52 -> m19_78  [key=1, style=dashed, color=darkseagreen4, label=job];
m19_49 -> m19_54  [key=1, style=dashed, color=darkseagreen4, label=states];
m19_49 -> m19_50  [key=0, style=solid];
m19_49 -> m19_59  [key=2, style=dotted];
m19_49 -> m19_78  [key=1, style=dashed, color=darkseagreen4, label=states];
m19_49 -> m19_56  [key=1, style=dashed, color=darkseagreen4, label=states];
m19_49 -> m19_84  [key=1, style=dashed, color=darkseagreen4, label=states];
m19_51 -> m19_52  [key=0, style=solid];
m19_51 -> m19_55  [key=0, style=solid];
m19_55 -> m19_62  [key=2, style=dotted];
m19_55 -> m19_56  [key=0, style=solid];
m19_46 -> m19_48  [key=0, style=solid];
m19_46 -> m19_47  [key=0, style=solid];
m19_56 -> m19_57  [key=0, style=solid];
m19_56 -> m19_63  [key=2, style=dotted];
m19_56 -> m19_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_56 -> m19_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_45 -> m19_51  [key=1, style=dashed, color=darkseagreen4, label=scheduledJobs];
m19_45 -> m19_46  [key=0, style=solid];
m19_45 -> m19_56  [key=1, style=dashed, color=darkseagreen4, label=scheduledJobs];
m19_45 -> m19_58  [key=2, style=dotted];
m19_45 -> m19_43  [key=0, style=bold, color=blue];
m19_47 -> m19_59  [key=2, style=dotted];
m19_47 -> m19_57  [key=0, style=solid];
m19_47 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobClient"];
m19_47 -> m19_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobClient"];
m19_47 -> m19_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobClient"];
m19_47 -> m19_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobClient"];
m19_47 -> m19_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobClient"];
m19_47 -> m19_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobClient"];
m19_47 -> m19_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobClient"];
m19_44 -> m19_45  [key=0, style=solid];
m19_44 -> m19_46  [key=2, style=dotted];
m19_57 -> m19_43  [key=0, style=bold, color=blue];
m19_38 -> m19_39  [key=0, style=solid];
m19_38 -> m19_41  [key=2, style=dotted];
m19_29 -> m19_19  [key=0, style=bold, color=blue];
m19_33 -> m19_34  [key=0, style=solid];
m19_33 -> m19_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IState"];
m19_33 -> m19_39  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_33 -> m19_37  [key=2, style=dotted];
m19_33 -> m19_38  [key=2, style=dotted];
m19_33 -> m19_35  [key=2, style=dotted];
m19_34 -> m19_35  [key=0, style=solid];
m19_34 -> m19_36  [key=0, style=solid];
m19_34 -> m19_32  [key=0, style=bold, color=blue];
m19_39 -> m19_40  [key=0, style=solid];
m19_39 -> m19_42  [key=2, style=dotted];
m19_35 -> m19_40  [key=0, style=solid];
m19_35 -> m19_17  [key=2, style=dotted];
m19_37 -> m19_40  [key=0, style=solid];
m19_37 -> m19_17  [key=2, style=dotted];
m19_40 -> m19_33  [key=0, style=bold, color=blue];
m19_40 -> m19_41  [key=0, style=solid];
m19_23 -> m19_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_23 -> m19_24  [key=0, style=solid];
m19_23 -> m19_29  [key=0, style=solid];
m19_23 -> m19_17  [key=2, style=dotted];
m19_26 -> m19_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_29  [key=2, style=dotted];
m19_26 -> m19_30  [key=2, style=dotted];
m19_26 -> m19_31  [key=2, style=dotted];
m19_26 -> m19_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_25 -> m19_26  [key=0, style=solid];
m19_25 -> m19_28  [key=2, style=dotted];
m19_25 -> m19_31  [key=2, style=dotted];
m19_24 -> m19_25  [key=0, style=solid];
m19_24 -> m19_30  [key=2, style=dotted];
m19_24 -> m19_26  [key=1, style=dashed, color=darkseagreen4, label=context];
m19_27 -> m19_23  [key=0, style=bold, color=blue];
m19_27 -> m19_28  [key=0, style=solid];
m19_17 -> m19_18  [key=0, style=solid, color=green];
m19_17 -> m19_4  [key=2, style=dotted, color=green];
m19_173 -> m19_331  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m19_173 -> m19_333  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m19_173 -> m19_328  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m19_173 -> m19_324  [key=0, style=solid];
m19_173 -> m19_326  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m19_173 -> m19_327  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m19_173 -> m19_329  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m19_173 -> m19_339  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m19_173 -> m19_332  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m19_173 -> m19_347  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m19_173 -> m19_335  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m19_173 -> m19_357  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m19_331 -> m19_61  [key=2, style=dotted];
m19_331 -> m19_332  [key=0, style=solid];
m19_331 -> m19_338  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_331 -> m19_341  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_333 -> m19_61  [key=2, style=dotted];
m19_333 -> m19_329  [key=0, style=solid];
m19_333 -> m19_346  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_333 -> m19_349  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_328 -> m19_60  [key=2, style=dotted];
m19_328 -> m19_331  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m19_328 -> m19_333  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m19_328 -> m19_329  [key=0, style=solid];
m19_328 -> m19_334  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m19_326 -> m19_331  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m19_326 -> m19_327  [key=0, style=solid];
m19_326 -> m19_337  [key=2, style=dotted];
m19_326 -> m19_342  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m19_326 -> m19_343  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m19_326 -> m19_335  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m19_326 -> m19_354  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m19_330 -> m19_331  [key=0, style=solid];
m19_330 -> m19_333  [key=1, style=dashed, color=darkseagreen4, label=id];
m19_330 -> m19_339  [key=1, style=dashed, color=darkseagreen4, label=id];
m19_330 -> m19_342  [key=1, style=dashed, color=darkseagreen4, label=id];
m19_330 -> m19_343  [key=1, style=dashed, color=darkseagreen4, label=id];
m19_330 -> m19_347  [key=1, style=dashed, color=darkseagreen4, label=id];
m19_330 -> m19_350  [key=1, style=dashed, color=darkseagreen4, label=id];
m19_330 -> m19_351  [key=1, style=dashed, color=darkseagreen4, label=id];
m19_332 -> m19_333  [key=0, style=solid];
m19_332 -> m19_329  [key=0, style=solid];
m19_327 -> m19_333  [key=1, style=dashed, color=darkseagreen4, label=states];
m19_327 -> m19_328  [key=0, style=solid];
m19_327 -> m19_337  [key=2, style=dotted];
m19_327 -> m19_350  [key=1, style=dashed, color=darkseagreen4, label=states];
m19_327 -> m19_351  [key=1, style=dashed, color=darkseagreen4, label=states];
m19_327 -> m19_335  [key=1, style=dashed, color=darkseagreen4, label=states];
m19_327 -> m19_354  [key=1, style=dashed, color=darkseagreen4, label=states];
m19_329 -> m19_330  [key=0, style=solid];
m19_329 -> m19_334  [key=0, style=solid];
m19_334 -> m19_62  [key=2, style=dotted];
m19_334 -> m19_335  [key=0, style=solid];
m19_324 -> m19_326  [key=0, style=solid];
m19_324 -> m19_325  [key=0, style=solid];
m19_335 -> m19_336  [key=0, style=solid];
m19_335 -> m19_114  [key=2, style=dotted];
m19_335 -> m19_115  [key=2, style=dotted];
m19_335 -> m19_353  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_335 -> m19_356  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_325 -> m19_336  [key=0, style=solid];
m19_325 -> n56  [key=2, style=dotted];
m19_336 -> m19_173  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_0  [key=0, style=bold, color=blue];
m19_1 -> m19_2  [key=0, style=solid];
m19_11 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_11 -> m19_12  [key=0, style=solid];
m19_13 -> m19_10  [key=2, style=dotted];
m19_13 -> m19_9  [key=2, style=dotted];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_18  [key=2, style=dotted];
m19_12 -> m19_13  [key=0, style=solid];
m19_12 -> m19_16  [key=0, style=solid];
m19_12 -> m19_17  [key=2, style=dotted];
m19_14 -> m19_11  [key=0, style=bold, color=blue];
m19_14 -> m19_15  [key=0, style=solid];
m19_219 -> m19_277  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m19_219 -> m19_276  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_219 -> m19_269  [key=0, style=solid];
m19_219 -> m19_294  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_278 -> m19_59  [key=2, style=dotted];
m19_278 -> m19_279  [key=0, style=solid];
m19_278 -> m19_284  [key=1, style=dashed, color=darkseagreen4, label=result];
m19_278 -> m19_286  [key=1, style=dashed, color=darkseagreen4, label=result];
m19_273 -> m19_175  [key=2, style=dotted];
m19_273 -> m19_274  [key=0, style=solid];
m19_277 -> m19_278  [key=0, style=solid];
m19_277 -> m19_289  [key=2, style=dotted];
m19_277 -> m19_282  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m19_279 -> m19_280  [key=0, style=solid];
m19_279 -> m19_282  [key=1, style=dashed, color=darkseagreen4, label=i];
m19_279 -> m19_284  [key=1, style=dashed, color=darkseagreen4, label=i];
m19_279 -> m19_285  [key=1, style=dashed, color=darkseagreen4, label=i];
m19_284 -> m19_285  [key=0, style=solid];
m19_284 -> m19_292  [key=2, style=dotted];
m19_286 -> m19_287  [key=0, style=solid];
m19_276 -> m19_114  [key=2, style=dotted];
m19_276 -> m19_115  [key=2, style=dotted];
m19_276 -> m19_277  [key=0, style=solid];
m19_276 -> m19_293  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_269 -> m19_273  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m19_269 -> m19_270  [key=0, style=solid];
m19_269 -> m19_274  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m19_270 -> m19_273  [key=1, style=dashed, color=darkseagreen4, label=dates];
m19_270 -> m19_284  [key=1, style=dashed, color=darkseagreen4, label=dates];
m19_270 -> n56  [key=2, style=dotted];
m19_270 -> m19_276  [key=1, style=dashed, color=darkseagreen4, label=dates];
m19_270 -> m19_271  [key=0, style=solid];
m19_270 -> m19_280  [key=1, style=dashed, color=darkseagreen4, label=dates];
m19_272 -> m19_273  [key=0, style=solid];
m19_272 -> m19_276  [key=0, style=solid];
m19_274 -> m19_274  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m19_274 -> m19_275  [key=0, style=solid];
m19_274 -> m19_288  [key=2, style=dotted];
m19_282 -> m19_284  [key=0, style=solid];
m19_282 -> m19_283  [key=0, style=solid];
m19_282 -> m19_290  [key=2, style=dotted];
m19_282 -> m19_291  [key=2, style=dotted];
m19_280 -> m19_286  [key=0, style=solid];
m19_280 -> m19_281  [key=0, style=solid];
m19_285 -> m19_280  [key=0, style=solid];
m19_285 -> m19_285  [key=1, style=dashed, color=darkseagreen4, label=i];
m19_283 -> m19_284  [key=0, style=solid];
m19_271 -> m19_272  [key=0, style=solid];
m19_271 -> m19_275  [key=1, style=dashed, color=darkseagreen4, label=i];
m19_275 -> m19_272  [key=0, style=solid];
m19_275 -> m19_275  [key=1, style=dashed, color=darkseagreen4, label=i];
m19_281 -> m19_282  [key=0, style=solid];
m19_287 -> m19_219  [key=0, style=bold, color=blue];
m19_42 -> m19_40  [key=0, style=bold, color=blue];
m19_236 -> m19_238  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_236 -> m19_237  [key=0, style=solid];
m19_236 -> m19_242  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_238 -> m19_76  [key=2, style=dotted];
m19_238 -> m19_9  [key=2, style=dotted];
m19_238 -> m19_239  [key=0, style=solid];
m19_237 -> m19_238  [key=0, style=solid];
m19_239 -> m19_240  [key=0, style=solid];
m19_239 -> m19_232  [key=2, style=dotted];
m19_239 -> m19_242  [key=1, style=dashed, color=darkseagreen4, label=queue];
m19_242 -> m19_243  [key=0, style=solid];
m19_242 -> m19_234  [key=2, style=dotted];
m19_242 -> m19_235  [key=2, style=dotted];
m19_240 -> m19_242  [key=0, style=solid];
m19_240 -> m19_241  [key=0, style=solid];
m19_240 -> m19_233  [key=2, style=dotted];
m19_241 -> m19_243  [key=0, style=solid];
m19_243 -> m19_236  [key=0, style=bold, color=blue];
m19_41 -> m19_42  [key=0, style=solid];
m19_41 -> m19_41  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, HangFire.Web.ProcessingJobDto>"];
m19_401 -> m19_4  [key=2, style=dotted];
m19_401 -> m19_402  [key=0, style=solid];
m19_407 -> m19_4  [key=2, style=dotted];
m19_407 -> m19_408  [key=0, style=solid];
m19_421 -> m19_4  [key=2, style=dotted];
m19_421 -> m19_422  [key=0, style=solid];
m19_400 -> m19_401  [key=0, style=solid];
m19_402 -> m19_400  [key=0, style=bold, color=blue];
m19_406 -> m19_407  [key=0, style=solid];
m19_408 -> m19_406  [key=0, style=bold, color=blue];
m19_420 -> m19_421  [key=0, style=solid];
m19_422 -> m19_420  [key=0, style=bold, color=blue];
m19_403 -> m19_404  [key=0, style=solid];
m19_409 -> m19_410  [key=0, style=solid];
m19_423 -> m19_424  [key=0, style=solid];
m19_392 -> m19_393  [key=0, style=solid];
m19_398 -> m19_399  [key=0, style=solid];
m19_404 -> m19_405  [key=0, style=solid];
m19_410 -> m19_411  [key=0, style=solid];
m19_417 -> m19_418  [key=0, style=solid];
m19_417 -> m19_419  [key=2, style=dotted];
m19_424 -> m19_425  [key=0, style=solid];
m19_430 -> m19_431  [key=0, style=solid];
m19_394 -> m19_395  [key=0, style=solid];
m19_397 -> m19_398  [key=0, style=solid];
m19_405 -> m19_403  [key=0, style=bold, color=blue];
m19_412 -> m19_413  [key=0, style=solid];
m19_416 -> m19_417  [key=0, style=solid];
m19_411 -> m19_409  [key=0, style=bold, color=blue];
m19_425 -> m19_423  [key=0, style=bold, color=blue];
m19_387 -> m19_388  [key=0, style=solid];
m19_391 -> m19_392  [key=0, style=solid];
m19_393 -> m19_391  [key=0, style=bold, color=blue];
m19_399 -> m19_397  [key=0, style=bold, color=blue];
m19_418 -> m19_416  [key=0, style=bold, color=blue];
m19_426 -> m19_427  [key=0, style=solid];
m19_429 -> m19_430  [key=0, style=solid];
m19_431 -> m19_429  [key=0, style=bold, color=blue];
m19_396 -> m19_394  [key=0, style=bold, color=blue];
m19_395 -> m19_396  [key=0, style=solid];
m19_395 -> m19_390  [key=2, style=dotted];
m19_64 -> m19_65  [key=0, style=solid];
m19_69 -> m19_70  [key=0, style=solid];
m19_73 -> m19_74  [key=0, style=solid];
m19_77 -> m19_78  [key=0, style=solid];
m19_116 -> m19_117  [key=0, style=solid];
m19_119 -> m19_120  [key=0, style=solid];
m19_122 -> m19_123  [key=0, style=solid];
m19_126 -> m19_127  [key=0, style=solid];
m19_176 -> m19_177  [key=0, style=solid];
m19_179 -> m19_180  [key=0, style=solid];
m19_182 -> m19_183  [key=0, style=solid];
m19_185 -> m19_186  [key=0, style=solid];
m19_188 -> m19_189  [key=0, style=solid];
m19_191 -> m19_192  [key=0, style=solid];
m19_338 -> m19_339  [key=0, style=solid];
m19_341 -> m19_342  [key=0, style=solid];
m19_341 -> m19_343  [key=1, style=dashed, color=darkseagreen4, label="?"];
m19_346 -> m19_347  [key=0, style=solid];
m19_349 -> m19_350  [key=0, style=solid];
m19_349 -> m19_351  [key=1, style=dashed, color=darkseagreen4, label="?"];
m19_414 -> m19_412  [key=0, style=bold, color=blue];
m19_413 -> m19_414  [key=0, style=solid];
m19_413 -> m19_415  [key=2, style=dotted];
m19_427 -> m19_428  [key=0, style=solid];
m19_427 -> m19_67  [key=2, style=dotted];
m19_427 -> m19_10  [key=2, style=dotted];
m19_389 -> m19_387  [key=0, style=bold, color=blue];
m19_388 -> m19_389  [key=0, style=solid];
m19_388 -> m19_390  [key=2, style=dotted];
m19_428 -> m19_426  [key=0, style=bold, color=blue];
m19_70 -> m19_71  [key=0, style=solid];
m19_70 -> m19_72  [key=2, style=dotted];
m19_84 -> m19_85  [key=0, style=solid];
m19_84 -> m19_86  [key=2, style=dotted];
m19_84 -> m19_87  [key=2, style=dotted];
m19_84 -> m19_36  [key=2, style=dotted];
m19_84 -> m19_37  [key=2, style=dotted];
m19_84 -> m19_39  [key=2, style=dotted];
m19_65 -> m19_66  [key=0, style=solid];
m19_65 -> m19_67  [key=2, style=dotted];
m19_65 -> m19_68  [key=2, style=dotted];
m19_74 -> m19_75  [key=0, style=solid];
m19_74 -> m19_67  [key=2, style=dotted];
m19_74 -> m19_76  [key=2, style=dotted];
m19_78 -> m19_79  [key=0, style=solid];
m19_78 -> m19_72  [key=2, style=dotted];
m19_66 -> m19_64  [key=0, style=bold, color=blue];
m19_71 -> m19_69  [key=0, style=bold, color=blue];
m19_75 -> m19_73  [key=0, style=bold, color=blue];
m19_79 -> m19_77  [key=0, style=bold, color=blue];
m19_120 -> m19_121  [key=0, style=solid];
m19_120 -> m19_72  [key=2, style=dotted];
m19_130 -> m19_131  [key=0, style=solid];
m19_130 -> m19_132  [key=2, style=dotted];
m19_130 -> m19_133  [key=2, style=dotted];
m19_130 -> m19_134  [key=2, style=dotted];
m19_130 -> m19_38  [key=2, style=dotted];
m19_117 -> m19_118  [key=0, style=solid];
m19_117 -> m19_67  [key=2, style=dotted];
m19_117 -> m19_68  [key=2, style=dotted];
m19_123 -> m19_124  [key=0, style=solid];
m19_123 -> m19_67  [key=2, style=dotted];
m19_123 -> m19_125  [key=2, style=dotted];
m19_127 -> m19_128  [key=0, style=solid];
m19_127 -> m19_72  [key=2, style=dotted];
m19_118 -> m19_116  [key=0, style=bold, color=blue];
m19_121 -> m19_119  [key=0, style=bold, color=blue];
m19_124 -> m19_122  [key=0, style=bold, color=blue];
m19_128 -> m19_126  [key=0, style=bold, color=blue];
m19_177 -> m19_178  [key=0, style=solid];
m19_177 -> m19_67  [key=2, style=dotted];
m19_177 -> m19_150  [key=2, style=dotted];
m19_183 -> m19_184  [key=0, style=solid];
m19_183 -> m19_67  [key=2, style=dotted];
m19_183 -> m19_10  [key=2, style=dotted];
m19_189 -> m19_190  [key=0, style=solid];
m19_189 -> m19_67  [key=2, style=dotted];
m19_189 -> m19_10  [key=2, style=dotted];
m19_178 -> m19_176  [key=0, style=bold, color=blue];
m19_181 -> m19_179  [key=0, style=bold, color=blue];
m19_180 -> m19_181  [key=0, style=solid];
m19_194 -> m19_195  [key=0, style=solid];
m19_184 -> m19_182  [key=0, style=bold, color=blue];
m19_187 -> m19_185  [key=0, style=bold, color=blue];
m19_186 -> m19_187  [key=0, style=solid];
m19_190 -> m19_188  [key=0, style=bold, color=blue];
m19_193 -> m19_191  [key=0, style=bold, color=blue];
m19_192 -> m19_193  [key=0, style=solid];
m19_339 -> m19_340  [key=0, style=solid];
m19_339 -> m19_9  [key=2, style=dotted];
m19_339 -> m19_68  [key=2, style=dotted];
m19_347 -> m19_348  [key=0, style=solid];
m19_347 -> m19_9  [key=2, style=dotted];
m19_347 -> m19_68  [key=2, style=dotted];
m19_357 -> m19_358  [key=0, style=solid];
m19_357 -> m19_359  [key=2, style=dotted];
m19_357 -> m19_360  [key=2, style=dotted];
m19_357 -> m19_361  [key=2, style=dotted];
m19_357 -> m19_362  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_342 -> m19_343  [key=0, style=solid];
m19_342 -> m19_344  [key=0, style=solid];
m19_342 -> m19_345  [key=2, style=dotted];
m19_343 -> m19_344  [key=0, style=solid];
m19_343 -> m19_72  [key=2, style=dotted];
m19_354 -> m19_355  [key=0, style=solid];
m19_354 -> m19_345  [key=2, style=dotted];
m19_350 -> m19_351  [key=0, style=solid];
m19_350 -> m19_352  [key=0, style=solid];
m19_350 -> m19_345  [key=2, style=dotted];
m19_351 -> m19_352  [key=0, style=solid];
m19_351 -> m19_72  [key=2, style=dotted];
m19_340 -> m19_338  [key=0, style=bold, color=blue];
m19_344 -> m19_341  [key=0, style=bold, color=blue];
m19_348 -> m19_346  [key=0, style=bold, color=blue];
m19_352 -> m19_349  [key=0, style=bold, color=blue];
m19_80 -> m19_81  [key=0, style=solid];
m19_83 -> m19_84  [key=0, style=solid];
m19_85 -> m19_83  [key=0, style=bold, color=blue];
m19_129 -> m19_130  [key=0, style=solid];
m19_131 -> m19_129  [key=0, style=bold, color=blue];
m19_196 -> m19_194  [key=0, style=bold, color=blue];
m19_195 -> m19_36  [key=2, style=dotted];
m19_195 -> m19_39  [key=2, style=dotted];
m19_195 -> m19_38  [key=2, style=dotted];
m19_195 -> m19_196  [key=0, style=solid];
m19_195 -> m19_197  [key=2, style=dotted];
m19_353 -> m19_354  [key=0, style=solid];
m19_356 -> m19_357  [key=0, style=solid];
m19_358 -> m19_356  [key=0, style=bold, color=blue];
m19_362 -> m19_363  [key=0, style=solid];
m19_355 -> m19_353  [key=0, style=bold, color=blue];
m19_322 -> m19_67  [key=2, style=dotted];
m19_322 -> m19_323  [key=0, style=solid];
m19_82 -> m19_80  [key=0, style=bold, color=blue];
m19_81 -> m19_82  [key=0, style=solid];
m19_142 -> m19_36  [key=2, style=dotted];
m19_142 -> m19_37  [key=2, style=dotted];
m19_142 -> m19_39  [key=2, style=dotted];
m19_142 -> m19_38  [key=2, style=dotted];
m19_142 -> m19_143  [key=0, style=solid];
m19_142 -> m19_144  [key=2, style=dotted];
m19_152 -> m19_36  [key=2, style=dotted];
m19_152 -> m19_37  [key=2, style=dotted];
m19_152 -> m19_39  [key=2, style=dotted];
m19_152 -> m19_38  [key=2, style=dotted];
m19_152 -> m19_153  [key=0, style=solid];
m19_152 -> m19_154  [key=2, style=dotted];
m19_204 -> m19_36  [key=2, style=dotted];
m19_204 -> m19_39  [key=2, style=dotted];
m19_204 -> m19_38  [key=2, style=dotted];
m19_204 -> m19_205  [key=0, style=solid];
m19_204 -> m19_197  [key=2, style=dotted];
m19_212 -> m19_36  [key=2, style=dotted];
m19_212 -> m19_38  [key=2, style=dotted];
m19_212 -> m19_213  [key=0, style=solid];
m19_212 -> m19_214  [key=2, style=dotted];
m19_364 -> m19_362  [key=0, style=bold, color=blue];
m19_363 -> m19_364  [key=0, style=solid];
m19_321 -> m19_322  [key=0, style=solid];
m19_323 -> m19_321  [key=0, style=bold, color=blue];
m19_259 -> m19_260  [key=0, style=solid];
m19_263 -> m19_264  [key=0, style=solid];
m19_266 -> m19_267  [key=0, style=solid];
m19_32 -> m19_33  [key=0, style=solid];
m19_141 -> m19_142  [key=0, style=solid];
m19_143 -> m19_141  [key=0, style=bold, color=blue];
m19_151 -> m19_152  [key=0, style=solid];
m19_153 -> m19_151  [key=0, style=bold, color=blue];
m19_203 -> m19_204  [key=0, style=solid];
m19_205 -> m19_203  [key=0, style=bold, color=blue];
m19_211 -> m19_212  [key=0, style=solid];
m19_213 -> m19_211  [key=0, style=bold, color=blue];
m19_293 -> m19_294  [key=0, style=solid];
m19_318 -> m19_319  [key=0, style=solid];
m19_294 -> m19_295  [key=0, style=solid];
m19_294 -> m19_296  [key=2, style=dotted];
m19_294 -> m19_297  [key=2, style=dotted];
m19_260 -> m19_261  [key=0, style=solid];
m19_260 -> m19_262  [key=2, style=dotted];
m19_261 -> m19_259  [key=0, style=bold, color=blue];
m19_265 -> m19_263  [key=0, style=bold, color=blue];
m19_264 -> m19_265  [key=0, style=solid];
m19_268 -> m19_266  [key=0, style=bold, color=blue];
m19_267 -> m19_268  [key=0, style=solid];
m19_295 -> m19_293  [key=0, style=bold, color=blue];
m19_320 -> m19_318  [key=0, style=bold, color=blue];
m19_319 -> m19_320  [key=0, style=solid];
m19_319 -> m19_296  [key=2, style=dotted];
m19_28 -> m19_29  [key=0, style=solid];
m19_28 -> m19_32  [key=2, style=dotted];
m19_220 -> m19_221  [key=0, style=solid];
m19_222 -> m19_219  [key=2, style=dotted];
m19_222 -> m19_223  [key=0, style=solid];
m19_221 -> m19_222  [key=0, style=solid];
m19_223 -> m19_220  [key=0, style=bold, color=blue];
m19_135 -> m19_137  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_135 -> m19_136  [key=0, style=solid];
m19_138 -> m19_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_138 -> m19_139  [key=0, style=solid];
m19_138 -> m19_29  [key=2, style=dotted];
m19_137 -> m19_138  [key=0, style=solid];
m19_137 -> m19_140  [key=2, style=dotted];
m19_136 -> m19_137  [key=0, style=solid];
m19_139 -> m19_135  [key=0, style=bold, color=blue];
m19_2 -> m19_4  [key=2, style=dotted];
m19_2 -> m19_3  [key=0, style=solid];
m19_3 -> m19_0  [key=0, style=bold, color=blue];
m19_3 -> m19_2  [key=0, style=bold, color=blue];
m19_145 -> m19_147  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_145 -> m19_146  [key=0, style=solid];
m19_147 -> m19_150  [key=2, style=dotted];
m19_147 -> m19_148  [key=0, style=solid];
m19_146 -> m19_147  [key=0, style=solid];
m19_148 -> m19_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_148 -> m19_149  [key=0, style=solid];
m19_148 -> m19_29  [key=2, style=dotted];
m19_149 -> m19_145  [key=0, style=bold, color=blue];
m19_155 -> m19_156  [key=0, style=solid];
m19_164 -> m19_61  [key=2, style=dotted];
m19_164 -> m19_165  [key=0, style=solid];
m19_164 -> m19_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_164 -> m19_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_164 -> m19_168  [key=1, style=dashed, color=darkseagreen4, label=firstJobIds];
m19_165 -> m19_61  [key=2, style=dotted];
m19_165 -> m19_166  [key=0, style=solid];
m19_165 -> m19_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_165 -> m19_185  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_165 -> m19_169  [key=1, style=dashed, color=darkseagreen4, label=length];
m19_166 -> m19_61  [key=2, style=dotted];
m19_166 -> m19_167  [key=0, style=solid];
m19_166 -> m19_188  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_166 -> m19_191  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_166 -> m19_169  [key=1, style=dashed, color=darkseagreen4, label=dequeued];
m19_163 -> m19_60  [key=2, style=dotted];
m19_163 -> m19_164  [key=0, style=solid];
m19_163 -> m19_165  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m19_163 -> m19_166  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m19_163 -> m19_167  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m19_159 -> m19_164  [key=1, style=dashed, color=darkseagreen4, label=queue];
m19_159 -> m19_165  [key=1, style=dashed, color=darkseagreen4, label=queue];
m19_159 -> m19_166  [key=1, style=dashed, color=darkseagreen4, label=queue];
m19_159 -> m19_160  [key=0, style=solid];
m19_159 -> m19_170  [key=0, style=solid];
m19_159 -> m19_177  [key=1, style=dashed, color=darkseagreen4, label=queue];
m19_159 -> m19_183  [key=1, style=dashed, color=darkseagreen4, label=queue];
m19_159 -> m19_189  [key=1, style=dashed, color=darkseagreen4, label=queue];
m19_159 -> m19_169  [key=1, style=dashed, color=darkseagreen4, label=queue];
m19_168 -> m19_169  [key=0, style=solid];
m19_168 -> m19_173  [key=2, style=dotted];
m19_168 -> m19_194  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_169 -> m19_159  [key=0, style=solid];
m19_169 -> m19_174  [key=2, style=dotted];
m19_169 -> m19_175  [key=2, style=dotted];
m19_167 -> m19_62  [key=2, style=dotted];
m19_167 -> m19_168  [key=0, style=solid];
m19_157 -> m19_112  [key=2, style=dotted];
m19_157 -> m19_159  [key=1, style=dashed, color=darkseagreen4, label=queues];
m19_157 -> m19_158  [key=0, style=solid];
m19_162 -> m19_163  [key=0, style=solid];
m19_158 -> m19_159  [key=0, style=solid];
m19_158 -> m19_169  [key=1, style=dashed, color=darkseagreen4, label=result];
m19_158 -> m19_172  [key=2, style=dotted];
m19_158 -> m19_170  [key=1, style=dashed, color=darkseagreen4, label=result];
m19_160 -> m19_161  [key=0, style=solid];
m19_170 -> m19_171  [key=0, style=solid];
m19_156 -> m19_157  [key=0, style=solid];
m19_161 -> m19_162  [key=0, style=solid];
m19_171 -> m19_155  [key=0, style=bold, color=blue];
m19_88 -> m19_89  [key=0, style=solid];
m19_90 -> m19_92  [key=2, style=dotted];
m19_90 -> m19_91  [key=0, style=solid];
m19_89 -> m19_90  [key=0, style=solid];
m19_91 -> m19_88  [key=0, style=bold, color=blue];
m19_369 -> m19_370  [key=0, style=solid];
m19_376 -> m19_400  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_376 -> m19_377  [key=0, style=solid];
m19_376 -> m19_61  [key=2, style=dotted];
m19_376 -> m19_403  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_377 -> m19_406  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_377 -> m19_378  [key=0, style=solid];
m19_377 -> m19_61  [key=2, style=dotted];
m19_377 -> m19_409  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_379 -> m19_420  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_379 -> m19_380  [key=0, style=solid];
m19_379 -> m19_61  [key=2, style=dotted];
m19_379 -> m19_423  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_371 -> m19_376  [key=1, style=dashed, color=darkseagreen4, label=stats];
m19_371 -> m19_377  [key=1, style=dashed, color=darkseagreen4, label=stats];
m19_371 -> m19_379  [key=1, style=dashed, color=darkseagreen4, label=stats];
m19_371 -> m19_372  [key=0, style=solid];
m19_371 -> m19_386  [key=2, style=dotted];
m19_371 -> m19_374  [key=1, style=dashed, color=darkseagreen4, label=stats];
m19_371 -> m19_392  [key=1, style=dashed, color=darkseagreen4, label=stats];
m19_371 -> m19_375  [key=1, style=dashed, color=darkseagreen4, label=stats];
m19_371 -> m19_398  [key=1, style=dashed, color=darkseagreen4, label=stats];
m19_371 -> m19_404  [key=1, style=dashed, color=darkseagreen4, label=stats];
m19_371 -> m19_410  [key=1, style=dashed, color=darkseagreen4, label=stats];
m19_371 -> m19_378  [key=1, style=dashed, color=darkseagreen4, label=stats];
m19_371 -> m19_417  [key=1, style=dashed, color=darkseagreen4, label=stats];
m19_371 -> m19_424  [key=1, style=dashed, color=darkseagreen4, label=stats];
m19_371 -> m19_382  [key=1, style=dashed, color=darkseagreen4, label=stats];
m19_371 -> m19_430  [key=1, style=dashed, color=darkseagreen4, label=stats];
m19_371 -> m19_384  [key=1, style=dashed, color=darkseagreen4, label=stats];
m19_375 -> m19_376  [key=0, style=solid];
m19_375 -> m19_61  [key=2, style=dotted];
m19_375 -> m19_394  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_375 -> m19_397  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_373 -> m19_376  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m19_373 -> m19_377  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m19_373 -> m19_379  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m19_373 -> m19_375  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m19_373 -> m19_374  [key=0, style=solid];
m19_373 -> m19_60  [key=2, style=dotted];
m19_373 -> m19_378  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m19_373 -> m19_382  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m19_373 -> m19_383  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m19_378 -> m19_379  [key=0, style=solid];
m19_378 -> m19_61  [key=2, style=dotted];
m19_378 -> m19_412  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_378 -> m19_416  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_380 -> m19_381  [key=0, style=solid];
m19_380 -> m19_383  [key=0, style=solid];
m19_370 -> m19_371  [key=0, style=solid];
m19_372 -> m19_373  [key=0, style=solid];
m19_372 -> m19_380  [key=1, style=dashed, color=darkseagreen4, label=queues];
m19_372 -> m19_112  [key=2, style=dotted];
m19_374 -> m19_375  [key=0, style=solid];
m19_374 -> m19_61  [key=2, style=dotted];
m19_374 -> m19_387  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_374 -> m19_391  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_382 -> m19_61  [key=2, style=dotted];
m19_382 -> m19_380  [key=0, style=solid];
m19_382 -> m19_426  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_382 -> m19_429  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_384 -> m19_385  [key=0, style=solid];
m19_383 -> m19_384  [key=0, style=solid];
m19_383 -> m19_62  [key=2, style=dotted];
m19_381 -> m19_382  [key=0, style=solid];
m19_381 -> m19_427  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m19_385 -> m19_369  [key=0, style=bold, color=blue];
m19_97 -> m19_98  [key=0, style=solid];
m19_107 -> m19_61  [key=2, style=dotted];
m19_107 -> m19_108  [key=0, style=solid];
m19_107 -> m19_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_107 -> m19_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_108 -> m19_61  [key=2, style=dotted];
m19_108 -> m19_105  [key=0, style=solid];
m19_108 -> m19_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_108 -> m19_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_104 -> m19_60  [key=2, style=dotted];
m19_104 -> m19_107  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m19_104 -> m19_108  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m19_104 -> m19_105  [key=0, style=solid];
m19_104 -> m19_109  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m19_102 -> m19_107  [key=1, style=dashed, color=darkseagreen4, label=servers];
m19_102 -> m19_103  [key=0, style=solid];
m19_102 -> m19_59  [key=2, style=dotted];
m19_102 -> m19_120  [key=1, style=dashed, color=darkseagreen4, label=servers];
m19_102 -> m19_110  [key=1, style=dashed, color=darkseagreen4, label=servers];
m19_102 -> m19_130  [key=1, style=dashed, color=darkseagreen4, label=servers];
m19_106 -> m19_107  [key=0, style=solid];
m19_106 -> m19_108  [key=1, style=dashed, color=darkseagreen4, label=name];
m19_106 -> m19_117  [key=1, style=dashed, color=darkseagreen4, label=name];
m19_106 -> m19_120  [key=1, style=dashed, color=darkseagreen4, label=name];
m19_106 -> m19_123  [key=1, style=dashed, color=darkseagreen4, label=name];
m19_106 -> m19_127  [key=1, style=dashed, color=darkseagreen4, label=name];
m19_103 -> m19_108  [key=1, style=dashed, color=darkseagreen4, label=queues];
m19_103 -> m19_104  [key=0, style=solid];
m19_103 -> m19_59  [key=2, style=dotted];
m19_103 -> m19_127  [key=1, style=dashed, color=darkseagreen4, label=queues];
m19_103 -> m19_110  [key=1, style=dashed, color=darkseagreen4, label=queues];
m19_103 -> m19_130  [key=1, style=dashed, color=darkseagreen4, label=queues];
m19_105 -> m19_106  [key=0, style=solid];
m19_105 -> m19_109  [key=0, style=solid];
m19_99 -> m19_112  [key=2, style=dotted];
m19_99 -> m19_105  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m19_99 -> m19_100  [key=0, style=solid];
m19_99 -> m19_110  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m19_109 -> m19_62  [key=2, style=dotted];
m19_109 -> m19_110  [key=0, style=solid];
m19_100 -> m19_102  [key=0, style=solid];
m19_100 -> m19_101  [key=0, style=solid];
m19_110 -> m19_111  [key=0, style=solid];
m19_110 -> m19_114  [key=2, style=dotted];
m19_110 -> m19_115  [key=2, style=dotted];
m19_110 -> m19_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_98 -> m19_99  [key=0, style=solid];
m19_101 -> m19_111  [key=0, style=solid];
m19_101 -> n56  [key=2, style=dotted];
m19_111 -> m19_97  [key=0, style=bold, color=blue];
m19_365 -> m19_366  [key=0, style=solid];
m19_367 -> m19_10  [key=2, style=dotted];
m19_367 -> m19_368  [key=0, style=solid];
m19_366 -> m19_367  [key=0, style=solid];
m19_368 -> m19_365  [key=0, style=bold, color=blue];
m19_215 -> m19_216  [key=0, style=solid];
m19_217 -> m19_219  [key=2, style=dotted];
m19_217 -> m19_218  [key=0, style=solid];
m19_216 -> m19_217  [key=0, style=solid];
m19_218 -> m19_215  [key=0, style=bold, color=blue];
m19_92 -> m19_322  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_92 -> m19_306  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m19_92 -> m19_305  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_92 -> m19_298  [key=0, style=solid];
m19_307 -> m19_59  [key=2, style=dotted];
m19_307 -> m19_308  [key=0, style=solid];
m19_307 -> m19_313  [key=1, style=dashed, color=darkseagreen4, label=result];
m19_307 -> m19_315  [key=1, style=dashed, color=darkseagreen4, label=result];
m19_302 -> m19_175  [key=2, style=dotted];
m19_302 -> m19_303  [key=0, style=solid];
m19_306 -> m19_307  [key=0, style=solid];
m19_306 -> m19_289  [key=2, style=dotted];
m19_306 -> m19_311  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m19_308 -> m19_309  [key=0, style=solid];
m19_308 -> m19_311  [key=1, style=dashed, color=darkseagreen4, label=i];
m19_308 -> m19_313  [key=1, style=dashed, color=darkseagreen4, label=i];
m19_308 -> m19_314  [key=1, style=dashed, color=darkseagreen4, label=i];
m19_313 -> m19_314  [key=0, style=solid];
m19_313 -> m19_292  [key=2, style=dotted];
m19_315 -> m19_316  [key=0, style=solid];
m19_305 -> m19_114  [key=2, style=dotted];
m19_305 -> m19_115  [key=2, style=dotted];
m19_305 -> m19_306  [key=0, style=solid];
m19_305 -> m19_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_304 -> m19_114  [key=2, style=dotted];
m19_304 -> m19_115  [key=2, style=dotted];
m19_304 -> m19_305  [key=0, style=solid];
m19_304 -> m19_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_304 -> m19_309  [key=1, style=dashed, color=darkseagreen4, label=stringDates];
m19_298 -> m19_302  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m19_298 -> m19_299  [key=0, style=solid];
m19_298 -> m19_301  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m19_298 -> m19_303  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m19_301 -> m19_302  [key=0, style=solid];
m19_301 -> m19_304  [key=0, style=solid];
m19_300 -> m19_302  [key=1, style=dashed, color=darkseagreen4, label=dates];
m19_300 -> m19_313  [key=1, style=dashed, color=darkseagreen4, label=dates];
m19_300 -> n56  [key=2, style=dotted];
m19_300 -> m19_304  [key=1, style=dashed, color=darkseagreen4, label=dates];
m19_300 -> m19_301  [key=0, style=solid];
m19_303 -> m19_301  [key=0, style=solid];
m19_303 -> m19_303  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m19_303 -> m19_317  [key=2, style=dotted];
m19_311 -> m19_313  [key=0, style=solid];
m19_311 -> m19_312  [key=0, style=solid];
m19_311 -> m19_290  [key=2, style=dotted];
m19_311 -> m19_291  [key=2, style=dotted];
m19_309 -> m19_315  [key=0, style=solid];
m19_309 -> m19_310  [key=0, style=solid];
m19_314 -> m19_309  [key=0, style=solid];
m19_314 -> m19_314  [key=1, style=dashed, color=darkseagreen4, label=i];
m19_312 -> m19_313  [key=0, style=solid];
m19_299 -> m19_301  [key=1, style=dashed, color=darkseagreen4, label=startDate];
m19_299 -> m19_300  [key=0, style=solid];
m19_299 -> m19_317  [key=2, style=dotted];
m19_310 -> m19_311  [key=0, style=solid];
m19_316 -> m19_92  [key=0, style=bold, color=blue];
m19_15 -> m19_16  [key=0, style=solid, color=green];
m19_16 -> m19_17  [key=0, style=solid, color=green];
m19_16 -> m19_6  [key=0, style=bold, color=blue];
m19_18 -> m19_15  [key=0, style=bold, color=blue];
m19_244 -> m19_250  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_244 -> m19_246  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_244 -> m19_245  [key=0, style=solid];
m19_252 -> m19_63  [key=2, style=dotted];
m19_252 -> m19_253  [key=0, style=solid];
m19_252 -> m19_255  [key=2, style=dotted];
m19_252 -> m19_256  [key=2, style=dotted];
m19_252 -> m19_257  [key=2, style=dotted];
m19_252 -> m19_258  [key=2, style=dotted];
m19_252 -> m19_259  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_252 -> m19_263  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_252 -> m19_266  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_251 -> m19_114  [key=2, style=dotted];
m19_251 -> m19_115  [key=2, style=dotted];
m19_251 -> m19_252  [key=0, style=solid];
m19_250 -> m19_125  [key=2, style=dotted];
m19_250 -> m19_9  [key=2, style=dotted];
m19_250 -> m19_251  [key=0, style=solid];
m19_246 -> m19_9  [key=2, style=dotted];
m19_246 -> m19_252  [key=1, style=dashed, color=darkseagreen4, label=job];
m19_246 -> m19_247  [key=0, style=solid];
m19_246 -> m19_254  [key=2, style=dotted];
m19_249 -> m19_252  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m19_249 -> m19_250  [key=0, style=solid];
m19_249 -> m19_260  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m19_245 -> m19_246  [key=0, style=solid];
m19_247 -> m19_249  [key=0, style=solid];
m19_247 -> m19_248  [key=0, style=solid];
m19_248 -> m19_253  [key=0, style=solid];
m19_253 -> m19_244  [key=0, style=bold, color=blue];
m19_7 -> m19_10  [key=2, style=dotted];
m19_7 -> m19_9  [key=2, style=dotted];
m19_7 -> m19_8  [key=0, style=solid];
m19_6 -> m19_7  [key=0, style=solid];
m19_6 -> m19_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateMachineFactory"];
m19_6 -> m19_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.IJobCreationProcess"];
m19_6 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobStorage"];
m19_6 -> m19_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateMachineFactory"];
m19_6 -> m19_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.IJobCreationProcess"];
m19_8 -> m19_5  [key=0, style=bold, color=blue];
m19_8 -> m19_16  [key=0, style=solid];
m19_8 -> m19_17  [key=2, style=dotted];
m19_206 -> m19_208  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_206 -> m19_207  [key=0, style=solid];
m19_208 -> m19_150  [key=2, style=dotted];
m19_208 -> m19_9  [key=2, style=dotted];
m19_208 -> m19_209  [key=0, style=solid];
m19_207 -> m19_208  [key=0, style=solid];
m19_209 -> m19_211  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_209 -> m19_210  [key=0, style=solid];
m19_209 -> m19_29  [key=2, style=dotted];
m19_210 -> m19_206  [key=0, style=bold, color=blue];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_11  [key=0, style=solid];
m19_10 -> m19_16  [key=0, style=solid];
m19_10 -> m19_17  [key=2, style=dotted];
m19_19 -> m19_20  [key=0, style=solid];
m19_19 -> m19_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IState"];
m19_19 -> m19_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m19_20 -> m19_21  [key=0, style=solid];
m19_20 -> m19_22  [key=0, style=solid];
m19_22 -> m19_23  [key=0, style=solid];
m19_22 -> m19_24  [key=0, style=solid];
m19_22 -> m19_19  [key=0, style=bold, color=blue];
m19_21 -> m19_29  [key=0, style=solid];
m19_21 -> m19_17  [key=2, style=dotted];
m19_21 -> m19_4  [key=2, style=dotted];
m19_21 -> m19_22  [key=0, style=solid];
m19_93 -> m19_94  [key=0, style=solid];
m19_95 -> m19_92  [key=2, style=dotted];
m19_95 -> m19_96  [key=0, style=solid];
m19_94 -> m19_95  [key=0, style=solid];
m19_96 -> m19_93  [key=0, style=bold, color=blue];
m19_224 -> m19_226  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_224 -> m19_225  [key=0, style=solid];
m19_224 -> m19_230  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_226 -> m19_76  [key=2, style=dotted];
m19_226 -> m19_9  [key=2, style=dotted];
m19_226 -> m19_227  [key=0, style=solid];
m19_225 -> m19_226  [key=0, style=solid];
m19_227 -> m19_228  [key=0, style=solid];
m19_227 -> m19_232  [key=2, style=dotted];
m19_227 -> m19_230  [key=1, style=dashed, color=darkseagreen4, label=queue];
m19_230 -> m19_231  [key=0, style=solid];
m19_230 -> m19_234  [key=2, style=dotted];
m19_230 -> m19_235  [key=2, style=dotted];
m19_228 -> m19_230  [key=0, style=solid];
m19_228 -> m19_229  [key=0, style=solid];
m19_228 -> m19_233  [key=2, style=dotted];
m19_229 -> m19_231  [key=0, style=solid];
m19_231 -> m19_224  [key=0, style=bold, color=blue];
m19_198 -> m19_200  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_198 -> m19_199  [key=0, style=solid];
m19_200 -> m19_150  [key=2, style=dotted];
m19_200 -> m19_9  [key=2, style=dotted];
m19_200 -> m19_201  [key=0, style=solid];
m19_199 -> m19_200  [key=0, style=solid];
m19_201 -> m19_203  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_201 -> m19_202  [key=0, style=solid];
m19_201 -> m19_29  [key=2, style=dotted];
m19_202 -> m19_198  [key=0, style=bold, color=blue];
m19_448 -> m19_392  [key=1, style=dashed, color=darkseagreen4, label=stats];
m19_448 -> m19_398  [key=1, style=dashed, color=darkseagreen4, label=stats];
m19_448 -> m19_404  [key=1, style=dashed, color=darkseagreen4, label=stats];
m19_448 -> m19_410  [key=1, style=dashed, color=darkseagreen4, label=stats];
m19_448 -> m19_417  [key=1, style=dashed, color=darkseagreen4, label=stats];
m19_448 -> m19_424  [key=1, style=dashed, color=darkseagreen4, label=stats];
m19_448 -> m19_430  [key=1, style=dashed, color=darkseagreen4, label=stats];
m19_449 -> m19_427  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m19_432 -> m19_70  [key=1, style=dashed, color=darkseagreen4, label=job];
m19_432 -> m19_65  [key=1, style=dashed, color=darkseagreen4, label=job];
m19_432 -> m19_74  [key=1, style=dashed, color=darkseagreen4, label=job];
m19_432 -> m19_78  [key=1, style=dashed, color=darkseagreen4, label=job];
m19_433 -> m19_70  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m19_433 -> m19_84  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m19_434 -> m19_84  [key=1, style=dashed, color=darkseagreen4, label=states];
m19_434 -> m19_78  [key=1, style=dashed, color=darkseagreen4, label=states];
m19_435 -> m19_120  [key=1, style=dashed, color=darkseagreen4, label=name];
m19_435 -> m19_117  [key=1, style=dashed, color=darkseagreen4, label=name];
m19_435 -> m19_123  [key=1, style=dashed, color=darkseagreen4, label=name];
m19_435 -> m19_127  [key=1, style=dashed, color=darkseagreen4, label=name];
m19_436 -> m19_120  [key=1, style=dashed, color=darkseagreen4, label=servers];
m19_436 -> m19_130  [key=1, style=dashed, color=darkseagreen4, label=servers];
m19_437 -> m19_130  [key=1, style=dashed, color=darkseagreen4, label=queues];
m19_437 -> m19_127  [key=1, style=dashed, color=darkseagreen4, label=queues];
m19_438 -> m19_177  [key=1, style=dashed, color=darkseagreen4, label=queue];
m19_438 -> m19_183  [key=1, style=dashed, color=darkseagreen4, label=queue];
m19_438 -> m19_189  [key=1, style=dashed, color=darkseagreen4, label=queue];
m19_442 -> m19_339  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m19_443 -> m19_339  [key=1, style=dashed, color=darkseagreen4, label=id];
m19_443 -> m19_347  [key=1, style=dashed, color=darkseagreen4, label=id];
m19_443 -> m19_342  [key=1, style=dashed, color=darkseagreen4, label=id];
m19_443 -> m19_343  [key=1, style=dashed, color=darkseagreen4, label=id];
m19_443 -> m19_350  [key=1, style=dashed, color=darkseagreen4, label=id];
m19_443 -> m19_351  [key=1, style=dashed, color=darkseagreen4, label=id];
m19_445 -> m19_347  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m19_447 -> m19_357  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m19_444 -> m19_342  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m19_444 -> m19_343  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m19_444 -> m19_354  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m19_446 -> m19_354  [key=1, style=dashed, color=darkseagreen4, label=states];
m19_446 -> m19_350  [key=1, style=dashed, color=darkseagreen4, label=states];
m19_446 -> m19_351  [key=1, style=dashed, color=darkseagreen4, label=states];
m19_441 -> m19_322  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_440 -> m19_294  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_439 -> m19_260  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_7  [key=2, style=dotted];
m20_1 -> m20_8  [key=2, style=dotted];
m20_1 -> m20_9  [key=2, style=dotted];
m20_2 -> m20_3  [key=0, style=solid];
m20_2 -> m20_10  [key=2, style=dotted];
m20_3 -> m20_4  [key=0, style=solid];
m20_3 -> m20_11  [key=2, style=dotted];
m20_4 -> m20_5  [key=0, style=solid];
m20_4 -> m20_12  [key=2, style=dotted];
m20_5 -> m20_6  [key=0, style=solid];
m20_5 -> m20_13  [key=2, style=dotted];
m20_5 -> m20_14  [key=2, style=dotted];
m20_5 -> m20_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_6 -> m20_0  [key=0, style=bold, color=blue];
m20_61 -> m20_62  [key=0, style=solid];
m20_62 -> m20_63  [key=0, style=solid];
m20_62 -> m20_47  [key=2, style=dotted];
m20_62 -> m20_64  [key=1, style=dashed, color=darkseagreen4, label=redis];
m20_62 -> m20_67  [key=1, style=dashed, color=darkseagreen4, label=redis];
m20_63 -> m20_64  [key=0, style=solid];
m20_63 -> m20_48  [key=2, style=dotted];
m20_64 -> m20_65  [key=0, style=solid];
m20_64 -> m20_49  [key=2, style=dotted];
m20_67 -> m20_68  [key=0, style=solid];
m20_67 -> m20_69  [key=2, style=dotted];
m20_67 -> m20_70  [key=2, style=dotted];
m20_67 -> m20_71  [key=2, style=dotted];
m20_65 -> m20_66  [key=0, style=solid];
m20_65 -> m20_53  [key=2, style=dotted];
m20_66 -> m20_67  [key=0, style=solid];
m20_66 -> m20_54  [key=2, style=dotted];
m20_68 -> m20_61  [key=0, style=bold, color=blue];
m20_29 -> m20_30  [key=0, style=solid];
m20_30 -> m20_31  [key=0, style=solid];
m20_30 -> m20_18  [key=2, style=dotted];
m20_30 -> m20_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_31 -> m20_32  [key=0, style=solid];
m20_31 -> m20_24  [key=2, style=dotted];
m20_32 -> m20_29  [key=0, style=bold, color=blue];
m20_41 -> m20_42  [key=0, style=solid];
m20_41 -> m20_50  [key=2, style=dotted];
m20_41 -> m20_51  [key=2, style=dotted];
m20_41 -> m20_52  [key=2, style=dotted];
m20_37 -> m20_38  [key=0, style=solid];
m20_38 -> m20_39  [key=0, style=solid];
m20_38 -> m20_47  [key=2, style=dotted];
m20_38 -> m20_40  [key=1, style=dashed, color=darkseagreen4, label=redis];
m20_38 -> m20_41  [key=1, style=dashed, color=darkseagreen4, label=redis];
m20_38 -> m20_45  [key=1, style=dashed, color=darkseagreen4, label=redis];
m20_39 -> m20_40  [key=0, style=solid];
m20_39 -> m20_48  [key=2, style=dotted];
m20_40 -> m20_41  [key=0, style=solid];
m20_40 -> m20_49  [key=2, style=dotted];
m20_45 -> m20_46  [key=0, style=solid];
m20_45 -> m20_56  [key=2, style=dotted];
m20_45 -> m20_24  [key=2, style=dotted];
m20_42 -> m20_43  [key=0, style=solid];
m20_42 -> m20_53  [key=2, style=dotted];
m20_43 -> m20_44  [key=0, style=solid];
m20_43 -> m20_54  [key=2, style=dotted];
m20_44 -> m20_45  [key=0, style=solid];
m20_44 -> m20_55  [key=2, style=dotted];
m20_44 -> m20_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_46 -> m20_37  [key=0, style=bold, color=blue];
m20_76 -> m20_77  [key=0, style=solid];
m20_76 -> m20_50  [key=2, style=dotted];
m20_76 -> m20_51  [key=2, style=dotted];
m20_76 -> m20_52  [key=2, style=dotted];
m20_72 -> m20_73  [key=0, style=solid];
m20_73 -> m20_74  [key=0, style=solid];
m20_73 -> m20_47  [key=2, style=dotted];
m20_73 -> m20_75  [key=1, style=dashed, color=darkseagreen4, label=redis];
m20_73 -> m20_76  [key=1, style=dashed, color=darkseagreen4, label=redis];
m20_74 -> m20_75  [key=0, style=solid];
m20_74 -> m20_48  [key=2, style=dotted];
m20_75 -> m20_76  [key=0, style=solid];
m20_75 -> m20_49  [key=2, style=dotted];
m20_77 -> m20_78  [key=0, style=solid];
m20_77 -> m20_53  [key=2, style=dotted];
m20_78 -> m20_79  [key=0, style=solid];
m20_78 -> m20_54  [key=2, style=dotted];
m20_79 -> m20_80  [key=0, style=solid];
m20_79 -> m20_55  [key=2, style=dotted];
m20_79 -> m20_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_80 -> m20_72  [key=0, style=bold, color=blue];
m20_53 -> m20_97  [key=0, style=solid];
m20_97 -> m20_98  [key=0, style=solid];
m20_97 -> m20_28  [key=2, style=dotted];
m20_98 -> m20_53  [key=0, style=bold, color=blue];
m20_94 -> m20_95  [key=0, style=solid, color=red];
m20_15 -> m20_16  [key=0, style=solid];
m20_16 -> m20_17  [key=0, style=solid];
m20_16 -> m20_18  [key=2, style=dotted];
m20_16 -> m20_19  [key=2, style=dotted];
m20_17 -> m20_15  [key=0, style=bold, color=blue];
m20_25 -> m20_26  [key=0, style=solid];
m20_26 -> m20_27  [key=0, style=solid];
m20_26 -> m20_28  [key=2, style=dotted];
m20_27 -> m20_25  [key=0, style=bold, color=blue];
m20_33 -> m20_34  [key=0, style=solid];
m20_34 -> m20_35  [key=0, style=solid];
m20_34 -> m20_36  [key=2, style=dotted];
m20_35 -> m20_33  [key=0, style=bold, color=blue];
m20_57 -> m20_58  [key=0, style=solid];
m20_58 -> m20_59  [key=0, style=solid];
m20_58 -> m20_18  [key=2, style=dotted];
m20_58 -> m20_60  [key=2, style=dotted];
m20_59 -> m20_57  [key=0, style=bold, color=blue];
m20_81 -> m20_82  [key=0, style=solid];
m20_82 -> m20_83  [key=0, style=solid];
m20_82 -> m20_18  [key=2, style=dotted];
m20_82 -> m20_60  [key=2, style=dotted];
m20_83 -> m20_81  [key=0, style=bold, color=blue];
m20_95 -> m20_96  [key=0, style=solid, color=red];
m20_95 -> m20_18  [key=2, style=dotted, color=red];
m20_95 -> m20_60  [key=2, style=dotted, color=red];
m20_96 -> m20_94  [key=0, style=bold, color=blue];
m20_89 -> m20_90  [key=0, style=solid];
m20_89 -> m20_51  [key=2, style=dotted];
m20_89 -> m20_52  [key=2, style=dotted];
m20_84 -> m20_85  [key=0, style=solid];
m20_85 -> m20_86  [key=0, style=solid];
m20_85 -> m20_47  [key=2, style=dotted];
m20_85 -> m20_87  [key=1, style=dashed, color=darkseagreen4, label=redis];
m20_85 -> m20_88  [key=1, style=dashed, color=darkseagreen4, label=redis];
m20_85 -> m20_89  [key=1, style=dashed, color=darkseagreen4, label=redis];
m20_86 -> m20_87  [key=0, style=solid];
m20_86 -> m20_48  [key=2, style=dotted];
m20_87 -> m20_88  [key=0, style=solid];
m20_87 -> m20_49  [key=2, style=dotted];
m20_88 -> m20_89  [key=0, style=solid];
m20_88 -> m20_50  [key=2, style=dotted];
m20_88 -> m20_51  [key=2, style=dotted];
m20_88 -> m20_52  [key=2, style=dotted];
m20_90 -> m20_91  [key=0, style=solid];
m20_90 -> m20_53  [key=2, style=dotted];
m20_91 -> m20_92  [key=0, style=solid, color=red];
m20_91 -> m20_54  [key=2, style=dotted];
m20_92 -> m20_93  [key=0, style=solid, color=red];
m20_92 -> m20_55  [key=2, style=dotted, color=red];
m20_92 -> m20_94  [key=1, style=dashed, color=red, label="lambda expression"];
m20_93 -> m20_84  [key=0, style=bold, color=blue];
m20_20 -> m20_21  [key=0, style=solid];
m20_21 -> m20_22  [key=0, style=solid];
m20_21 -> m20_18  [key=2, style=dotted];
m20_21 -> m20_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_22 -> m20_23  [key=0, style=solid];
m20_22 -> m20_24  [key=2, style=dotted];
m20_23 -> m20_20  [key=0, style=bold, color=blue];
m20_99 -> m20_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m20_99 -> m20_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m20_99 -> m20_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m20_99 -> m20_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m20_99 -> m20_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m20_99 -> m20_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m20_99 -> m20_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m20_99 -> m20_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m20_99 -> m20_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m20_99 -> m20_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m20_99 -> m20_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m20_99 -> m20_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m20_99 -> m20_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m20_99 -> m20_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m20_99 -> m20_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m20_99 -> m20_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m20_99 -> m20_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m20_99 -> m20_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m20_99 -> m20_91  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m20_99 -> m20_92  [key=1, style=dashed, color=red, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m20_99 -> m20_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts"];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_0  [key=0, style=bold, color=blue];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_0  [key=0, style=bold, color=blue];
m23_22 -> m23_23  [key=0, style=solid];
m23_23 -> m23_22  [key=0, style=bold, color=blue];
m23_26 -> m23_27  [key=0, style=solid];
m23_27 -> m23_26  [key=0, style=bold, color=blue];
m23_2 -> m23_3  [key=0, style=solid];
m23_3 -> m23_2  [key=0, style=bold, color=blue];
m23_18 -> m23_19  [key=0, style=solid];
m23_19 -> m23_18  [key=0, style=bold, color=blue];
m23_28 -> m23_29  [key=0, style=solid];
m23_29 -> m23_28  [key=0, style=bold, color=blue];
m23_8 -> m23_9  [key=0, style=solid];
m23_9 -> m23_8  [key=0, style=bold, color=blue];
m23_12 -> m23_13  [key=0, style=solid];
m23_13 -> m23_12  [key=0, style=bold, color=blue];
m23_30 -> m23_31  [key=0, style=solid];
m23_31 -> m23_30  [key=0, style=bold, color=blue];
m23_10 -> m23_11  [key=0, style=solid];
m23_11 -> m23_10  [key=0, style=bold, color=blue];
m23_20 -> m23_21  [key=0, style=solid];
m23_21 -> m23_20  [key=0, style=bold, color=blue];
m23_14 -> m23_15  [key=0, style=solid];
m23_15 -> m23_14  [key=0, style=bold, color=blue];
m23_4 -> m23_5  [key=0, style=solid];
m23_5 -> m23_4  [key=0, style=bold, color=blue];
m23_6 -> m23_7  [key=0, style=solid];
m23_7 -> m23_6  [key=0, style=bold, color=blue];
m23_16 -> m23_17  [key=0, style=solid];
m23_17 -> m23_16  [key=0, style=bold, color=blue];
m23_24 -> m23_25  [key=0, style=solid];
m23_25 -> m23_24  [key=0, style=bold, color=blue];
m24_0 -> m24_1  [key=0, style=solid];
m24_3 -> m24_4  [key=0, style=solid, color=green];
m24_3 -> m24_10  [key=2, style=dotted, color=green];
m24_3 -> m24_6  [key=1, style=dashed, color=green, label=state];
m24_2 -> m24_3  [key=0, style=solid, color=green];
m24_2 -> m24_9  [key=2, style=dotted];
m24_2 -> m24_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_2 -> m24_6  [key=1, style=dashed, color=darkseagreen4, label=job];
m24_2 -> m24_0  [key=0, style=bold, color=blue];
m24_4 -> m24_5  [key=0, style=solid];
m24_4 -> m24_11  [key=2, style=dotted];
m24_4 -> m24_6  [key=1, style=dashed, color=darkseagreen4, label=stateMachineFactory];
m24_4 -> m24_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerSupervisorOptions"];
m24_6 -> m24_7  [key=0, style=solid];
m24_6 -> m24_13  [key=2, style=dotted];
m24_1 -> m24_2  [key=0, style=solid];
m24_1 -> m24_6  [key=1, style=dashed, color=darkseagreen4, label=connection];
m24_1 -> m24_8  [key=2, style=dotted];
m24_1 -> m24_3  [key=2, style=dotted];
m24_5 -> m24_6  [key=0, style=solid];
m24_5 -> n56  [key=2, style=dotted];
m24_7 -> m24_0  [key=0, style=bold, color=blue];
m24_97 -> m24_98  [key=0, style=solid];
m24_98 -> m24_99  [key=0, style=solid];
m24_98 -> m24_46  [key=2, style=dotted];
m24_98 -> m24_24  [key=2, style=dotted];
m24_98 -> m24_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_101 -> m24_102  [key=0, style=solid];
m24_101 -> m24_62  [key=2, style=dotted];
m24_102 -> m24_103  [key=0, style=solid];
m24_102 -> m24_23  [key=2, style=dotted];
m24_102 -> m24_117  [key=1, style=dashed, color=darkseagreen4, label=process];
m24_103 -> m24_104  [key=0, style=solid];
m24_103 -> m24_106  [key=2, style=dotted];
m24_103 -> m24_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_99 -> m24_101  [key=1, style=dashed, color=darkseagreen4, label=filter];
m24_99 -> m24_100  [key=0, style=solid];
m24_99 -> m24_61  [key=2, style=dotted];
m24_100 -> m24_101  [key=0, style=solid];
m24_100 -> m24_46  [key=2, style=dotted];
m24_100 -> m24_105  [key=2, style=dotted];
m24_100 -> m24_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_100 -> m24_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_104 -> m24_97  [key=0, style=bold, color=blue];
m24_41 -> m24_42  [key=0, style=solid];
m24_42 -> m24_43  [key=0, style=solid];
m24_42 -> m24_46  [key=2, style=dotted];
m24_42 -> m24_24  [key=2, style=dotted];
m24_42 -> m24_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_43 -> m24_44  [key=0, style=solid];
m24_43 -> m24_23  [key=2, style=dotted];
m24_43 -> m24_51  [key=1, style=dashed, color=darkseagreen4, label=process];
m24_44 -> m24_45  [key=0, style=solid];
m24_44 -> m24_24  [key=2, style=dotted];
m24_44 -> m24_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_45 -> m24_41  [key=0, style=bold, color=blue];
m24_251 -> m24_252  [key=0, style=solid];
m24_254 -> m24_255  [key=0, style=solid];
m24_254 -> m24_62  [key=2, style=dotted];
m24_255 -> m24_256  [key=0, style=solid];
m24_255 -> m24_62  [key=2, style=dotted];
m24_257 -> m24_258  [key=0, style=solid];
m24_257 -> m24_46  [key=2, style=dotted];
m24_257 -> m24_238  [key=2, style=dotted];
m24_257 -> m24_262  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_258 -> m24_259  [key=0, style=solid];
m24_258 -> m24_23  [key=2, style=dotted];
m24_258 -> m24_266  [key=1, style=dashed, color=darkseagreen4, label=process];
m24_259 -> m24_260  [key=0, style=solid];
m24_259 -> m24_24  [key=2, style=dotted];
m24_259 -> m24_265  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_252 -> m24_254  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m24_252 -> m24_253  [key=0, style=solid];
m24_252 -> m24_128  [key=2, style=dotted];
m24_252 -> m24_260  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m24_253 -> m24_254  [key=0, style=solid];
m24_253 -> m24_255  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m24_253 -> m24_128  [key=2, style=dotted];
m24_256 -> m24_257  [key=0, style=solid];
m24_256 -> m24_237  [key=2, style=dotted];
m24_256 -> m24_260  [key=1, style=dashed, color=darkseagreen4, label=exception];
m24_256 -> m24_269  [key=1, style=dashed, color=darkseagreen4, label=exception];
m24_256 -> m24_272  [key=1, style=dashed, color=darkseagreen4, label=exception];
m24_260 -> m24_36  [key=2, style=dotted];
m24_260 -> m24_261  [key=0, style=solid];
m24_260 -> m24_268  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_261 -> m24_251  [key=0, style=bold, color=blue];
m24_53 -> m24_54  [key=0, style=solid];
m24_55 -> m24_56  [key=0, style=solid];
m24_55 -> m24_62  [key=2, style=dotted];
m24_56 -> m24_57  [key=0, style=solid];
m24_56 -> m24_46  [key=2, style=dotted];
m24_56 -> m24_24  [key=2, style=dotted];
m24_56 -> m24_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_57 -> m24_58  [key=0, style=solid];
m24_57 -> m24_23  [key=2, style=dotted];
m24_57 -> m24_67  [key=1, style=dashed, color=darkseagreen4, label=process];
m24_58 -> m24_59  [key=0, style=solid];
m24_58 -> m24_24  [key=2, style=dotted];
m24_58 -> m24_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_54 -> m24_55  [key=0, style=solid];
m24_54 -> m24_61  [key=2, style=dotted];
m24_54 -> m24_59  [key=1, style=dashed, color=darkseagreen4, label=filter];
m24_59 -> m24_36  [key=2, style=dotted];
m24_59 -> m24_60  [key=0, style=solid];
m24_59 -> m24_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_60 -> m24_53  [key=0, style=bold, color=blue];
m24_119 -> m24_120  [key=0, style=solid];
m24_121 -> m24_122  [key=0, style=solid];
m24_121 -> m24_62  [key=2, style=dotted];
m24_123 -> m24_124  [key=0, style=solid];
m24_123 -> m24_46  [key=2, style=dotted];
m24_123 -> m24_84  [key=2, style=dotted];
m24_123 -> m24_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_125 -> m24_126  [key=0, style=solid];
m24_125 -> m24_23  [key=2, style=dotted];
m24_126 -> m24_127  [key=0, style=solid];
m24_126 -> m24_35  [key=2, style=dotted];
m24_120 -> m24_121  [key=0, style=solid];
m24_120 -> m24_128  [key=2, style=dotted];
m24_120 -> m24_122  [key=1, style=dashed, color=darkseagreen4, label=filter];
m24_120 -> m24_124  [key=1, style=dashed, color=darkseagreen4, label=filter];
m24_122 -> m24_123  [key=0, style=solid];
m24_122 -> m24_46  [key=2, style=dotted];
m24_122 -> m24_84  [key=2, style=dotted];
m24_122 -> m24_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_124 -> m24_125  [key=0, style=solid];
m24_124 -> m24_46  [key=2, style=dotted];
m24_124 -> m24_84  [key=2, style=dotted];
m24_124 -> m24_136  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_127 -> m24_119  [key=0, style=bold, color=blue];
m24_18 -> m24_19  [key=0, style=solid];
m24_19 -> m24_20  [key=0, style=solid];
m24_19 -> m24_23  [key=2, style=dotted];
m24_19 -> m24_27  [key=1, style=dashed, color=darkseagreen4, label=process];
m24_20 -> m24_21  [key=0, style=solid];
m24_20 -> m24_24  [key=2, style=dotted];
m24_20 -> m24_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_21 -> m24_22  [key=0, style=solid];
m24_21 -> m24_25  [key=2, style=dotted];
m24_22 -> m24_18  [key=0, style=bold, color=blue];
m24_164 -> m24_165  [key=0, style=solid];
m24_166 -> m24_167  [key=0, style=solid];
m24_166 -> m24_62  [key=2, style=dotted];
m24_168 -> m24_169  [key=0, style=solid];
m24_168 -> m24_23  [key=2, style=dotted];
m24_169 -> m24_170  [key=0, style=solid];
m24_169 -> m24_35  [key=2, style=dotted];
m24_170 -> m24_171  [key=0, style=solid];
m24_170 -> m24_36  [key=2, style=dotted];
m24_170 -> m24_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_165 -> m24_166  [key=0, style=solid];
m24_165 -> m24_128  [key=2, style=dotted];
m24_165 -> m24_167  [key=1, style=dashed, color=darkseagreen4, label=filter];
m24_165 -> m24_171  [key=1, style=dashed, color=darkseagreen4, label=filter];
m24_167 -> m24_168  [key=0, style=solid];
m24_167 -> m24_46  [key=2, style=dotted];
m24_167 -> m24_105  [key=2, style=dotted];
m24_167 -> m24_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_167 -> m24_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_171 -> m24_36  [key=2, style=dotted];
m24_171 -> m24_172  [key=0, style=solid];
m24_171 -> m24_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_172 -> m24_164  [key=0, style=bold, color=blue];
m24_23 -> m24_328  [key=0, style=solid];
m24_328 -> m24_329  [key=0, style=solid];
m24_328 -> m24_330  [key=2, style=dotted];
m24_329 -> m24_23  [key=0, style=bold, color=blue];
m24_228 -> m24_229  [key=0, style=solid];
m24_230 -> m24_231  [key=0, style=solid];
m24_230 -> m24_62  [key=2, style=dotted];
m24_232 -> m24_233  [key=0, style=solid];
m24_232 -> m24_46  [key=2, style=dotted];
m24_232 -> m24_238  [key=2, style=dotted];
m24_232 -> m24_239  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_233 -> m24_234  [key=0, style=solid];
m24_233 -> m24_23  [key=2, style=dotted];
m24_233 -> m24_243  [key=1, style=dashed, color=darkseagreen4, label=process];
m24_234 -> m24_235  [key=0, style=solid];
m24_234 -> m24_24  [key=2, style=dotted];
m24_234 -> m24_242  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_229 -> m24_230  [key=0, style=solid];
m24_229 -> m24_128  [key=2, style=dotted];
m24_229 -> m24_235  [key=1, style=dashed, color=darkseagreen4, label=filter];
m24_231 -> m24_232  [key=0, style=solid];
m24_231 -> m24_237  [key=2, style=dotted];
m24_231 -> m24_235  [key=1, style=dashed, color=darkseagreen4, label=exception];
m24_231 -> m24_246  [key=1, style=dashed, color=darkseagreen4, label=exception];
m24_231 -> m24_249  [key=1, style=dashed, color=darkseagreen4, label=exception];
m24_235 -> m24_36  [key=2, style=dotted];
m24_235 -> m24_236  [key=0, style=solid];
m24_235 -> m24_245  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_236 -> m24_228  [key=0, style=bold, color=blue];
m24_185 -> m24_186  [key=0, style=solid];
m24_188 -> m24_189  [key=0, style=solid];
m24_188 -> m24_62  [key=2, style=dotted];
m24_189 -> m24_190  [key=0, style=solid];
m24_189 -> m24_62  [key=2, style=dotted];
m24_191 -> m24_192  [key=0, style=solid];
m24_191 -> m24_23  [key=2, style=dotted];
m24_192 -> m24_193  [key=0, style=solid];
m24_192 -> m24_35  [key=2, style=dotted];
m24_186 -> m24_188  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m24_186 -> m24_187  [key=0, style=solid];
m24_186 -> m24_128  [key=2, style=dotted];
m24_186 -> m24_193  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m24_187 -> m24_188  [key=0, style=solid];
m24_187 -> m24_189  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m24_187 -> m24_128  [key=2, style=dotted];
m24_187 -> m24_190  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m24_190 -> m24_191  [key=0, style=solid];
m24_190 -> m24_46  [key=2, style=dotted];
m24_190 -> m24_105  [key=2, style=dotted];
m24_190 -> m24_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_190 -> m24_198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_193 -> m24_36  [key=2, style=dotted];
m24_193 -> m24_194  [key=0, style=solid];
m24_193 -> m24_201  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_194 -> m24_185  [key=0, style=bold, color=blue];
m24_73 -> m24_74  [key=0, style=solid];
m24_78 -> m24_79  [key=0, style=solid];
m24_78 -> m24_62  [key=2, style=dotted];
m24_79 -> m24_80  [key=0, style=solid];
m24_79 -> m24_62  [key=2, style=dotted];
m24_80 -> m24_81  [key=0, style=solid];
m24_80 -> m24_46  [key=2, style=dotted];
m24_80 -> m24_24  [key=2, style=dotted];
m24_80 -> m24_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_81 -> m24_82  [key=0, style=solid];
m24_81 -> m24_23  [key=2, style=dotted];
m24_81 -> m24_95  [key=1, style=dashed, color=darkseagreen4, label=process];
m24_82 -> m24_83  [key=0, style=solid];
m24_82 -> m24_24  [key=2, style=dotted];
m24_82 -> m24_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_74 -> m24_78  [key=1, style=dashed, color=darkseagreen4, label=filter1];
m24_74 -> m24_75  [key=0, style=solid];
m24_74 -> m24_61  [key=2, style=dotted];
m24_74 -> m24_77  [key=1, style=dashed, color=darkseagreen4, label=filter1];
m24_77 -> m24_78  [key=0, style=solid];
m24_77 -> m24_46  [key=2, style=dotted];
m24_77 -> m24_84  [key=2, style=dotted];
m24_77 -> m24_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_75 -> m24_79  [key=1, style=dashed, color=darkseagreen4, label=filter2];
m24_75 -> m24_76  [key=0, style=solid];
m24_75 -> m24_61  [key=2, style=dotted];
m24_76 -> m24_46  [key=2, style=dotted];
m24_76 -> m24_77  [key=0, style=solid];
m24_76 -> m24_84  [key=2, style=dotted];
m24_76 -> m24_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_83 -> m24_73  [key=0, style=bold, color=blue];
m24_30 -> m24_31  [key=0, style=solid];
m24_31 -> m24_32  [key=0, style=solid];
m24_31 -> m24_23  [key=2, style=dotted];
m24_32 -> m24_33  [key=0, style=solid];
m24_32 -> m24_35  [key=2, style=dotted];
m24_33 -> m24_34  [key=0, style=solid];
m24_33 -> m24_36  [key=2, style=dotted];
m24_33 -> m24_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_34 -> m24_30  [key=0, style=bold, color=blue];
m24_324 -> m24_325  [key=0, style=solid];
m24_14 -> m24_15  [key=0, style=solid];
m24_15 -> m24_16  [key=0, style=solid];
m24_15 -> m24_17  [key=2, style=dotted];
m24_51 -> m24_52  [key=0, style=solid];
m24_51 -> m24_35  [key=2, style=dotted];
m24_67 -> m24_68  [key=0, style=solid];
m24_67 -> m24_35  [key=2, style=dotted];
m24_95 -> m24_96  [key=0, style=solid];
m24_95 -> m24_35  [key=2, style=dotted];
m24_117 -> m24_118  [key=0, style=solid];
m24_117 -> m24_35  [key=2, style=dotted];
m24_220 -> m24_221  [key=0, style=solid];
m24_220 -> m24_35  [key=2, style=dotted];
m24_243 -> m24_244  [key=0, style=solid];
m24_243 -> m24_35  [key=2, style=dotted];
m24_266 -> m24_267  [key=0, style=solid];
m24_266 -> m24_35  [key=2, style=dotted];
m24_296 -> m24_297  [key=0, style=solid];
m24_296 -> m24_35  [key=2, style=dotted];
m24_319 -> m24_320  [key=0, style=solid];
m24_319 -> m24_35  [key=2, style=dotted];
m24_16 -> m24_14  [key=0, style=bold, color=blue];
m24_27 -> m24_28  [key=0, style=solid];
m24_27 -> m24_29  [key=2, style=dotted];
m24_37 -> m24_38  [key=0, style=solid];
m24_47 -> m24_48  [key=0, style=solid];
m24_50 -> m24_51  [key=0, style=solid];
m24_52 -> m24_50  [key=0, style=bold, color=blue];
m24_63 -> m24_64  [key=0, style=solid];
m24_66 -> m24_67  [key=0, style=solid];
m24_68 -> m24_66  [key=0, style=bold, color=blue];
m24_91 -> m24_92  [key=0, style=solid];
m24_94 -> m24_95  [key=0, style=solid];
m24_96 -> m24_94  [key=0, style=bold, color=blue];
m24_107 -> m24_108  [key=0, style=solid];
m24_116 -> m24_117  [key=0, style=solid];
m24_118 -> m24_116  [key=0, style=bold, color=blue];
m24_133 -> m24_134  [key=0, style=solid];
m24_179 -> m24_180  [key=0, style=solid];
m24_219 -> m24_220  [key=0, style=solid];
m24_221 -> m24_219  [key=0, style=bold, color=blue];
m24_222 -> m24_223  [key=0, style=solid];
m24_239 -> m24_240  [key=0, style=solid];
m24_242 -> m24_243  [key=0, style=solid];
m24_244 -> m24_242  [key=0, style=bold, color=blue];
m24_262 -> m24_263  [key=0, style=solid];
m24_265 -> m24_266  [key=0, style=solid];
m24_267 -> m24_265  [key=0, style=bold, color=blue];
m24_283 -> m24_284  [key=0, style=solid];
m24_295 -> m24_296  [key=0, style=solid];
m24_297 -> m24_295  [key=0, style=bold, color=blue];
m24_309 -> m24_310  [key=0, style=solid];
m24_318 -> m24_319  [key=0, style=solid];
m24_320 -> m24_318  [key=0, style=bold, color=blue];
m24_26 -> m24_27  [key=0, style=solid];
m24_28 -> m24_26  [key=0, style=bold, color=blue];
m24_39 -> m24_37  [key=0, style=bold, color=blue];
m24_38 -> m24_39  [key=0, style=solid];
m24_38 -> m24_40  [key=2, style=dotted];
m24_70 -> m24_24  [key=2, style=dotted];
m24_70 -> m24_71  [key=0, style=solid];
m24_70 -> m24_72  [key=2, style=dotted];
m24_86 -> m24_24  [key=2, style=dotted];
m24_86 -> m24_87  [key=0, style=solid];
m24_86 -> m24_72  [key=2, style=dotted];
m24_89 -> m24_24  [key=2, style=dotted];
m24_89 -> m24_90  [key=0, style=solid];
m24_89 -> m24_72  [key=2, style=dotted];
m24_111 -> m24_24  [key=2, style=dotted];
m24_111 -> m24_112  [key=0, style=solid];
m24_111 -> m24_72  [key=2, style=dotted];
m24_130 -> m24_24  [key=2, style=dotted];
m24_130 -> m24_131  [key=0, style=solid];
m24_130 -> m24_132  [key=2, style=dotted];
m24_137 -> m24_24  [key=2, style=dotted];
m24_137 -> m24_138  [key=0, style=solid];
m24_137 -> m24_139  [key=2, style=dotted];
m24_153 -> m24_24  [key=2, style=dotted];
m24_153 -> m24_154  [key=0, style=solid];
m24_153 -> m24_132  [key=2, style=dotted];
m24_156 -> m24_24  [key=2, style=dotted];
m24_156 -> m24_157  [key=0, style=solid];
m24_156 -> m24_132  [key=2, style=dotted];
m24_159 -> m24_24  [key=2, style=dotted];
m24_159 -> m24_160  [key=0, style=solid];
m24_159 -> m24_139  [key=2, style=dotted];
m24_162 -> m24_24  [key=2, style=dotted];
m24_162 -> m24_163  [key=0, style=solid];
m24_162 -> m24_139  [key=2, style=dotted];
m24_174 -> m24_24  [key=2, style=dotted];
m24_174 -> m24_175  [key=0, style=solid];
m24_174 -> m24_132  [key=2, style=dotted];
m24_183 -> m24_24  [key=2, style=dotted];
m24_183 -> m24_184  [key=0, style=solid];
m24_183 -> m24_139  [key=2, style=dotted];
m24_196 -> m24_24  [key=2, style=dotted];
m24_196 -> m24_197  [key=0, style=solid];
m24_196 -> m24_132  [key=2, style=dotted];
m24_202 -> m24_24  [key=2, style=dotted];
m24_202 -> m24_203  [key=0, style=solid];
m24_202 -> m24_139  [key=2, style=dotted];
m24_202 -> m24_204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_217 -> m24_24  [key=2, style=dotted];
m24_217 -> m24_218  [key=0, style=solid];
m24_217 -> m24_132  [key=2, style=dotted];
m24_226 -> m24_24  [key=2, style=dotted];
m24_226 -> m24_227  [key=0, style=solid];
m24_226 -> m24_139  [key=2, style=dotted];
m24_246 -> m24_24  [key=2, style=dotted];
m24_246 -> m24_247  [key=0, style=solid];
m24_246 -> m24_139  [key=2, style=dotted];
m24_246 -> m24_248  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_269 -> m24_24  [key=2, style=dotted];
m24_269 -> m24_270  [key=0, style=solid];
m24_269 -> m24_139  [key=2, style=dotted];
m24_269 -> m24_271  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_287 -> m24_24  [key=2, style=dotted];
m24_287 -> m24_288  [key=0, style=solid];
m24_287 -> m24_139  [key=2, style=dotted];
m24_287 -> m24_289  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_313 -> m24_24  [key=2, style=dotted];
m24_313 -> m24_314  [key=0, style=solid];
m24_313 -> m24_139  [key=2, style=dotted];
m24_322 -> m24_24  [key=2, style=dotted];
m24_322 -> m24_323  [key=0, style=solid];
m24_322 -> m24_139  [key=2, style=dotted];
m24_322 -> m24_324  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_49 -> m24_47  [key=0, style=bold, color=blue];
m24_48 -> m24_49  [key=0, style=solid];
m24_48 -> m24_40  [key=2, style=dotted];
m24_65 -> m24_63  [key=0, style=bold, color=blue];
m24_64 -> m24_65  [key=0, style=solid];
m24_64 -> m24_40  [key=2, style=dotted];
m24_69 -> m24_70  [key=0, style=solid];
m24_88 -> m24_89  [key=0, style=solid];
m24_93 -> m24_91  [key=0, style=bold, color=blue];
m24_92 -> m24_93  [key=0, style=solid];
m24_92 -> m24_40  [key=2, style=dotted];
m24_109 -> m24_107  [key=0, style=bold, color=blue];
m24_108 -> m24_109  [key=0, style=solid];
m24_108 -> m24_40  [key=2, style=dotted];
m24_110 -> m24_111  [key=0, style=solid];
m24_113 -> m24_114  [key=0, style=solid];
m24_129 -> m24_130  [key=0, style=solid];
m24_136 -> m24_137  [key=0, style=solid];
m24_135 -> m24_133  [key=0, style=bold, color=blue];
m24_134 -> m24_135  [key=0, style=solid];
m24_134 -> m24_40  [key=2, style=dotted];
m24_152 -> m24_153  [key=0, style=solid];
m24_161 -> m24_162  [key=0, style=solid];
m24_173 -> m24_174  [key=0, style=solid];
m24_176 -> m24_177  [key=0, style=solid];
m24_182 -> m24_183  [key=0, style=solid];
m24_181 -> m24_179  [key=0, style=bold, color=blue];
m24_180 -> m24_181  [key=0, style=solid];
m24_180 -> m24_40  [key=2, style=dotted];
m24_195 -> m24_196  [key=0, style=solid];
m24_198 -> m24_199  [key=0, style=solid];
m24_201 -> m24_202  [key=0, style=solid];
m24_216 -> m24_217  [key=0, style=solid];
m24_225 -> m24_226  [key=0, style=solid];
m24_224 -> m24_222  [key=0, style=bold, color=blue];
m24_223 -> m24_224  [key=0, style=solid];
m24_223 -> m24_40  [key=2, style=dotted];
m24_249 -> m24_250  [key=0, style=solid];
m24_241 -> m24_239  [key=0, style=bold, color=blue];
m24_240 -> m24_241  [key=0, style=solid];
m24_240 -> m24_40  [key=2, style=dotted];
m24_245 -> m24_246  [key=0, style=solid];
m24_272 -> m24_273  [key=0, style=solid];
m24_264 -> m24_262  [key=0, style=bold, color=blue];
m24_263 -> m24_264  [key=0, style=solid];
m24_263 -> m24_40  [key=2, style=dotted];
m24_268 -> m24_269  [key=0, style=solid];
m24_290 -> m24_291  [key=0, style=solid];
m24_286 -> m24_287  [key=0, style=solid];
m24_292 -> m24_293  [key=0, style=solid];
m24_285 -> m24_283  [key=0, style=bold, color=blue];
m24_284 -> m24_285  [key=0, style=solid];
m24_284 -> m24_40  [key=2, style=dotted];
m24_312 -> m24_313  [key=0, style=solid];
m24_315 -> m24_316  [key=0, style=solid];
m24_311 -> m24_309  [key=0, style=bold, color=blue];
m24_310 -> m24_311  [key=0, style=solid];
m24_310 -> m24_40  [key=2, style=dotted];
m24_321 -> m24_322  [key=0, style=solid];
m24_85 -> m24_86  [key=0, style=solid];
m24_155 -> m24_156  [key=0, style=solid];
m24_158 -> m24_159  [key=0, style=solid];
m24_71 -> m24_69  [key=0, style=bold, color=blue];
m24_87 -> m24_85  [key=0, style=bold, color=blue];
m24_90 -> m24_88  [key=0, style=bold, color=blue];
m24_112 -> m24_110  [key=0, style=bold, color=blue];
m24_131 -> m24_129  [key=0, style=bold, color=blue];
m24_138 -> m24_136  [key=0, style=bold, color=blue];
m24_154 -> m24_152  [key=0, style=bold, color=blue];
m24_157 -> m24_155  [key=0, style=bold, color=blue];
m24_160 -> m24_158  [key=0, style=bold, color=blue];
m24_163 -> m24_161  [key=0, style=bold, color=blue];
m24_175 -> m24_173  [key=0, style=bold, color=blue];
m24_184 -> m24_182  [key=0, style=bold, color=blue];
m24_197 -> m24_195  [key=0, style=bold, color=blue];
m24_203 -> m24_201  [key=0, style=bold, color=blue];
m24_204 -> m24_205  [key=0, style=solid];
m24_218 -> m24_216  [key=0, style=bold, color=blue];
m24_227 -> m24_225  [key=0, style=bold, color=blue];
m24_247 -> m24_245  [key=0, style=bold, color=blue];
m24_248 -> m24_249  [key=0, style=solid];
m24_270 -> m24_268  [key=0, style=bold, color=blue];
m24_271 -> m24_272  [key=0, style=solid];
m24_288 -> m24_286  [key=0, style=bold, color=blue];
m24_289 -> m24_290  [key=0, style=solid];
m24_314 -> m24_312  [key=0, style=bold, color=blue];
m24_323 -> m24_321  [key=0, style=bold, color=blue];
m24_115 -> m24_113  [key=0, style=bold, color=blue];
m24_114 -> m24_115  [key=0, style=solid];
m24_178 -> m24_176  [key=0, style=bold, color=blue];
m24_177 -> m24_178  [key=0, style=solid];
m24_200 -> m24_198  [key=0, style=bold, color=blue];
m24_199 -> m24_200  [key=0, style=solid];
m24_250 -> m24_248  [key=0, style=bold, color=blue];
m24_273 -> m24_271  [key=0, style=bold, color=blue];
m24_291 -> m24_289  [key=0, style=bold, color=blue];
m24_294 -> m24_292  [key=0, style=bold, color=blue];
m24_293 -> m24_294  [key=0, style=solid];
m24_317 -> m24_315  [key=0, style=bold, color=blue];
m24_316 -> m24_317  [key=0, style=solid];
m24_206 -> m24_204  [key=0, style=bold, color=blue];
m24_205 -> m24_206  [key=0, style=solid];
m24_325 -> m24_326  [key=0, style=solid];
m24_326 -> m24_324  [key=0, style=bold, color=blue];
m24_207 -> m24_208  [key=0, style=solid];
m24_209 -> m24_210  [key=0, style=solid];
m24_209 -> m24_62  [key=2, style=dotted];
m24_211 -> m24_212  [key=0, style=solid];
m24_211 -> m24_23  [key=2, style=dotted];
m24_211 -> m24_220  [key=1, style=dashed, color=darkseagreen4, label=process];
m24_212 -> m24_213  [key=0, style=solid];
m24_212 -> m24_24  [key=2, style=dotted];
m24_212 -> m24_219  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_213 -> m24_214  [key=0, style=solid];
m24_213 -> m24_36  [key=2, style=dotted];
m24_213 -> m24_222  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_208 -> m24_209  [key=0, style=solid];
m24_208 -> m24_128  [key=2, style=dotted];
m24_208 -> m24_210  [key=1, style=dashed, color=darkseagreen4, label=filter];
m24_208 -> m24_214  [key=1, style=dashed, color=darkseagreen4, label=filter];
m24_210 -> m24_211  [key=0, style=solid];
m24_210 -> m24_46  [key=2, style=dotted];
m24_210 -> m24_24  [key=2, style=dotted];
m24_210 -> m24_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_214 -> m24_36  [key=2, style=dotted];
m24_214 -> m24_215  [key=0, style=solid];
m24_214 -> m24_225  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_215 -> m24_207  [key=0, style=bold, color=blue];
m24_298 -> m24_299  [key=0, style=solid];
m24_301 -> m24_302  [key=0, style=solid];
m24_301 -> m24_62  [key=2, style=dotted];
m24_302 -> m24_303  [key=0, style=solid];
m24_302 -> m24_62  [key=2, style=dotted];
m24_303 -> m24_304  [key=0, style=solid];
m24_303 -> m24_46  [key=2, style=dotted];
m24_303 -> m24_24  [key=2, style=dotted];
m24_303 -> m24_309  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_305 -> m24_306  [key=0, style=solid];
m24_305 -> m24_23  [key=2, style=dotted];
m24_305 -> m24_319  [key=1, style=dashed, color=darkseagreen4, label=process];
m24_306 -> m24_307  [key=0, style=solid];
m24_306 -> m24_106  [key=2, style=dotted];
m24_306 -> m24_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_299 -> m24_301  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m24_299 -> m24_300  [key=0, style=solid];
m24_299 -> m24_128  [key=2, style=dotted];
m24_299 -> m24_307  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m24_300 -> m24_301  [key=0, style=solid];
m24_300 -> m24_302  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m24_300 -> m24_128  [key=2, style=dotted];
m24_300 -> m24_304  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m24_304 -> m24_305  [key=0, style=solid];
m24_304 -> m24_46  [key=2, style=dotted];
m24_304 -> m24_105  [key=2, style=dotted];
m24_304 -> m24_312  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_304 -> m24_315  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_307 -> m24_36  [key=2, style=dotted];
m24_307 -> m24_308  [key=0, style=solid];
m24_307 -> m24_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_308 -> m24_298  [key=0, style=bold, color=blue];
m24_274 -> m24_275  [key=0, style=solid];
m24_276 -> m24_277  [key=0, style=solid];
m24_276 -> m24_62  [key=2, style=dotted];
m24_278 -> m24_279  [key=0, style=solid];
m24_278 -> m24_46  [key=2, style=dotted];
m24_278 -> m24_238  [key=2, style=dotted];
m24_278 -> m24_283  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_280 -> m24_281  [key=0, style=solid];
m24_280 -> m24_23  [key=2, style=dotted];
m24_280 -> m24_296  [key=1, style=dashed, color=darkseagreen4, label=process];
m24_281 -> m24_282  [key=0, style=solid];
m24_281 -> m24_106  [key=2, style=dotted];
m24_281 -> m24_295  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_275 -> m24_276  [key=0, style=solid];
m24_275 -> m24_128  [key=2, style=dotted];
m24_275 -> m24_279  [key=1, style=dashed, color=darkseagreen4, label=filter];
m24_277 -> m24_278  [key=0, style=solid];
m24_277 -> m24_237  [key=2, style=dotted];
m24_277 -> m24_279  [key=1, style=dashed, color=darkseagreen4, label=exception];
m24_277 -> m24_287  [key=1, style=dashed, color=darkseagreen4, label=exception];
m24_277 -> m24_290  [key=1, style=dashed, color=darkseagreen4, label=exception];
m24_279 -> m24_280  [key=0, style=solid];
m24_279 -> m24_46  [key=2, style=dotted];
m24_279 -> m24_105  [key=2, style=dotted];
m24_279 -> m24_286  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_279 -> m24_292  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_282 -> m24_274  [key=0, style=bold, color=blue];
m24_17 -> m24_327  [key=0, style=solid];
m24_327 -> m24_17  [key=0, style=bold, color=blue];
m24_140 -> m24_141  [key=0, style=solid];
m24_143 -> m24_144  [key=0, style=solid];
m24_143 -> m24_62  [key=2, style=dotted];
m24_144 -> m24_145  [key=0, style=solid];
m24_144 -> m24_62  [key=2, style=dotted];
m24_149 -> m24_150  [key=0, style=solid];
m24_149 -> m24_23  [key=2, style=dotted];
m24_150 -> m24_151  [key=0, style=solid];
m24_150 -> m24_35  [key=2, style=dotted];
m24_141 -> m24_143  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m24_141 -> m24_142  [key=0, style=solid];
m24_141 -> m24_128  [key=2, style=dotted];
m24_141 -> m24_145  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m24_141 -> m24_148  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m24_142 -> m24_143  [key=0, style=solid];
m24_142 -> m24_144  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m24_142 -> m24_128  [key=2, style=dotted];
m24_142 -> m24_146  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m24_142 -> m24_147  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m24_145 -> m24_46  [key=2, style=dotted];
m24_145 -> m24_84  [key=2, style=dotted];
m24_145 -> m24_146  [key=0, style=solid];
m24_145 -> m24_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_148 -> m24_149  [key=0, style=solid];
m24_148 -> m24_46  [key=2, style=dotted];
m24_148 -> m24_84  [key=2, style=dotted];
m24_148 -> m24_161  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_146 -> m24_46  [key=2, style=dotted];
m24_146 -> m24_84  [key=2, style=dotted];
m24_146 -> m24_147  [key=0, style=solid];
m24_146 -> m24_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_147 -> m24_46  [key=2, style=dotted];
m24_147 -> m24_84  [key=2, style=dotted];
m24_147 -> m24_148  [key=0, style=solid];
m24_147 -> m24_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_151 -> m24_140  [key=0, style=bold, color=blue];
m24_331 -> m24_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_82  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_98  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_102  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_123  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_126  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_143  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_144  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_150  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_166  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_168  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_169  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_170  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_188  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_189  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_191  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_192  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_209  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_211  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_212  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_220  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_213  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_230  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_232  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_233  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_234  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_243  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_254  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_255  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_257  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_258  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_259  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_266  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_276  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_278  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_280  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_281  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_296  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_301  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_302  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_303  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_305  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_306  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_319  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_331 -> m24_328  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m24_333 -> m24_51  [key=1, style=dashed, color=darkseagreen4, label=process];
m24_334 -> m24_67  [key=1, style=dashed, color=darkseagreen4, label=process];
m24_335 -> m24_95  [key=1, style=dashed, color=darkseagreen4, label=process];
m24_336 -> m24_117  [key=1, style=dashed, color=darkseagreen4, label=process];
m24_337 -> m24_220  [key=1, style=dashed, color=darkseagreen4, label=process];
m24_338 -> m24_243  [key=1, style=dashed, color=darkseagreen4, label=process];
m24_340 -> m24_266  [key=1, style=dashed, color=darkseagreen4, label=process];
m24_343 -> m24_296  [key=1, style=dashed, color=darkseagreen4, label=process];
m24_344 -> m24_319  [key=1, style=dashed, color=darkseagreen4, label=process];
m24_332 -> m24_27  [key=1, style=dashed, color=darkseagreen4, label=process];
m24_339 -> m24_246  [key=1, style=dashed, color=darkseagreen4, label=exception];
m24_339 -> m24_249  [key=1, style=dashed, color=darkseagreen4, label=exception];
m24_341 -> m24_269  [key=1, style=dashed, color=darkseagreen4, label=exception];
m24_341 -> m24_272  [key=1, style=dashed, color=darkseagreen4, label=exception];
m24_342 -> m24_287  [key=1, style=dashed, color=darkseagreen4, label=exception];
m24_342 -> m24_290  [key=1, style=dashed, color=darkseagreen4, label=exception];
m25_27 -> m25_136  [key=0, style=solid];
m25_136 -> m25_27  [key=0, style=bold, color=blue];
m25_28 -> m25_29  [key=0, style=solid];
m25_29 -> m25_30  [key=0, style=solid];
m25_29 -> m25_32  [key=2, style=dotted];
m25_29 -> m25_35  [key=1, style=dashed, color=darkseagreen4, label=filter];
m25_30 -> m25_31  [key=0, style=solid];
m25_30 -> m25_33  [key=2, style=dotted];
m25_30 -> m25_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_31 -> m25_28  [key=0, style=bold, color=blue];
m25_49 -> m25_50  [key=0, style=solid];
m25_50 -> m25_51  [key=0, style=solid];
m25_50 -> m25_32  [key=2, style=dotted];
m25_50 -> m25_55  [key=1, style=dashed, color=darkseagreen4, label=filter];
m25_51 -> m25_52  [key=0, style=solid];
m25_51 -> m25_53  [key=2, style=dotted];
m25_51 -> m25_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_52 -> m25_49  [key=0, style=bold, color=blue];
m25_102 -> m25_103  [key=0, style=solid];
m25_103 -> m25_104  [key=0, style=solid];
m25_103 -> m25_68  [key=2, style=dotted];
m25_103 -> m25_69  [key=2, style=dotted];
m25_103 -> m25_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_104 -> m25_105  [key=0, style=solid];
m25_104 -> m25_68  [key=2, style=dotted];
m25_104 -> m25_69  [key=2, style=dotted];
m25_104 -> m25_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_105 -> m25_106  [key=0, style=solid];
m25_105 -> m25_46  [key=2, style=dotted];
m25_106 -> m25_107  [key=0, style=solid];
m25_106 -> m25_46  [key=2, style=dotted];
m25_107 -> m25_108  [key=0, style=solid];
m25_107 -> m25_32  [key=2, style=dotted];
m25_107 -> m25_109  [key=1, style=dashed, color=darkseagreen4, label=filter];
m25_108 -> m25_109  [key=0, style=solid];
m25_108 -> m25_70  [key=2, style=dotted];
m25_109 -> m25_110  [key=0, style=solid];
m25_109 -> m25_101  [key=2, style=dotted];
m25_110 -> m25_111  [key=0, style=solid];
m25_110 -> m25_48  [key=2, style=dotted];
m25_111 -> m25_112  [key=0, style=solid];
m25_111 -> m25_48  [key=2, style=dotted];
m25_112 -> m25_102  [key=0, style=bold, color=blue];
m25_119 -> m25_120  [key=0, style=solid];
m25_120 -> m25_121  [key=0, style=solid];
m25_120 -> m25_68  [key=2, style=dotted];
m25_120 -> m25_69  [key=2, style=dotted];
m25_120 -> m25_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_121 -> m25_122  [key=0, style=solid];
m25_121 -> m25_68  [key=2, style=dotted];
m25_121 -> m25_69  [key=2, style=dotted];
m25_121 -> m25_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_122 -> m25_123  [key=0, style=solid];
m25_122 -> m25_46  [key=2, style=dotted];
m25_123 -> m25_124  [key=0, style=solid];
m25_123 -> m25_46  [key=2, style=dotted];
m25_124 -> m25_125  [key=0, style=solid];
m25_124 -> m25_32  [key=2, style=dotted];
m25_124 -> m25_126  [key=1, style=dashed, color=darkseagreen4, label=filter];
m25_125 -> m25_126  [key=0, style=solid];
m25_125 -> m25_70  [key=2, style=dotted];
m25_126 -> m25_127  [key=0, style=solid];
m25_126 -> m25_101  [key=2, style=dotted];
m25_127 -> m25_128  [key=0, style=solid];
m25_127 -> m25_48  [key=2, style=dotted];
m25_128 -> m25_129  [key=0, style=solid];
m25_128 -> m25_48  [key=2, style=dotted];
m25_129 -> m25_119  [key=0, style=bold, color=blue];
m25_58 -> m25_59  [key=0, style=solid];
m25_59 -> m25_60  [key=0, style=solid];
m25_59 -> m25_68  [key=2, style=dotted];
m25_59 -> m25_69  [key=2, style=dotted];
m25_59 -> m25_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_60 -> m25_61  [key=0, style=solid];
m25_60 -> m25_68  [key=2, style=dotted];
m25_60 -> m25_69  [key=2, style=dotted];
m25_60 -> m25_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_61 -> m25_62  [key=0, style=solid];
m25_61 -> m25_46  [key=2, style=dotted];
m25_62 -> m25_63  [key=0, style=solid];
m25_62 -> m25_46  [key=2, style=dotted];
m25_63 -> m25_64  [key=0, style=solid];
m25_63 -> m25_32  [key=2, style=dotted];
m25_64 -> m25_65  [key=0, style=solid];
m25_64 -> m25_70  [key=2, style=dotted];
m25_65 -> m25_66  [key=0, style=solid];
m25_65 -> m25_48  [key=2, style=dotted];
m25_66 -> m25_67  [key=0, style=solid];
m25_66 -> m25_48  [key=2, style=dotted];
m25_67 -> m25_58  [key=0, style=bold, color=blue];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_2  [key=0, style=solid];
m25_1 -> m25_13  [key=2, style=dotted];
m25_2 -> m25_3  [key=0, style=solid, color=red];
m25_2 -> m25_14  [key=2, style=dotted];
m25_2 -> m25_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_2 -> m25_5  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_2 -> m25_9  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_3 -> m25_4  [key=0, style=solid, color=red];
m25_3 -> m25_15  [key=2, style=dotted, color=red];
m25_3 -> m25_5  [key=1, style=dashed, color=red, label=state];
m25_5 -> m25_6  [key=0, style=solid];
m25_5 -> m25_17  [key=2, style=dotted];
m25_5 -> m25_7  [key=1, style=dashed, color=darkseagreen4, label=createContext];
m25_9 -> m25_10  [key=0, style=solid];
m25_9 -> m25_21  [key=2, style=dotted];
m25_9 -> m25_11  [key=1, style=dashed, color=darkseagreen4, label=performContext];
m25_4 -> m25_5  [key=0, style=solid];
m25_4 -> m25_16  [key=2, style=dotted];
m25_6 -> m25_7  [key=0, style=solid];
m25_6 -> m25_18  [key=2, style=dotted];
m25_7 -> m25_8  [key=0, style=solid];
m25_7 -> m25_19  [key=2, style=dotted];
m25_8 -> m25_9  [key=0, style=solid];
m25_8 -> m25_20  [key=2, style=dotted];
m25_10 -> m25_11  [key=0, style=solid];
m25_10 -> m25_22  [key=2, style=dotted];
m25_11 -> m25_12  [key=0, style=solid];
m25_11 -> m25_23  [key=2, style=dotted];
m25_12 -> m25_0  [key=0, style=bold, color=blue];
m25_38 -> m25_39  [key=0, style=solid];
m25_39 -> m25_40  [key=0, style=solid];
m25_39 -> m25_46  [key=2, style=dotted];
m25_40 -> m25_41  [key=0, style=solid];
m25_40 -> m25_46  [key=2, style=dotted];
m25_41 -> m25_42  [key=0, style=solid];
m25_41 -> m25_32  [key=2, style=dotted];
m25_42 -> m25_43  [key=0, style=solid];
m25_42 -> m25_37  [key=2, style=dotted];
m25_43 -> m25_44  [key=0, style=solid];
m25_43 -> m25_47  [key=2, style=dotted];
m25_43 -> m25_48  [key=2, style=dotted];
m25_44 -> m25_45  [key=0, style=solid];
m25_44 -> m25_47  [key=2, style=dotted];
m25_44 -> m25_48  [key=2, style=dotted];
m25_45 -> m25_38  [key=0, style=bold, color=blue];
m25_32 -> m25_137  [key=0, style=solid];
m25_137 -> m25_138  [key=0, style=solid];
m25_137 -> m25_139  [key=2, style=dotted];
m25_138 -> m25_32  [key=0, style=bold, color=blue];
m25_78 -> m25_79  [key=0, style=solid];
m25_79 -> m25_80  [key=0, style=solid];
m25_79 -> m25_68  [key=2, style=dotted];
m25_79 -> m25_69  [key=2, style=dotted];
m25_79 -> m25_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_80 -> m25_81  [key=0, style=solid];
m25_80 -> m25_68  [key=2, style=dotted];
m25_80 -> m25_69  [key=2, style=dotted];
m25_80 -> m25_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_81 -> m25_82  [key=0, style=solid];
m25_81 -> m25_46  [key=2, style=dotted];
m25_82 -> m25_83  [key=0, style=solid];
m25_82 -> m25_46  [key=2, style=dotted];
m25_83 -> m25_84  [key=0, style=solid];
m25_83 -> m25_32  [key=2, style=dotted];
m25_84 -> m25_85  [key=0, style=solid];
m25_84 -> m25_70  [key=2, style=dotted];
m25_85 -> m25_86  [key=0, style=solid];
m25_85 -> m25_48  [key=2, style=dotted];
m25_86 -> m25_87  [key=0, style=solid];
m25_86 -> m25_48  [key=2, style=dotted];
m25_87 -> m25_78  [key=0, style=bold, color=blue];
m25_94 -> m25_95  [key=0, style=solid];
m25_95 -> m25_96  [key=0, style=solid];
m25_95 -> m25_32  [key=2, style=dotted];
m25_95 -> m25_99  [key=1, style=dashed, color=darkseagreen4, label=filter];
m25_96 -> m25_97  [key=0, style=solid];
m25_96 -> m25_33  [key=2, style=dotted];
m25_96 -> m25_98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_97 -> m25_94  [key=0, style=bold, color=blue];
m25_133 -> m25_134  [key=0, style=solid];
m25_24 -> m25_25  [key=0, style=solid];
m25_25 -> m25_26  [key=0, style=solid];
m25_25 -> m25_27  [key=2, style=dotted];
m25_26 -> m25_24  [key=0, style=bold, color=blue];
m25_35 -> m25_36  [key=0, style=solid];
m25_35 -> m25_37  [key=2, style=dotted];
m25_34 -> m25_35  [key=0, style=solid];
m25_36 -> m25_34  [key=0, style=bold, color=blue];
m25_55 -> m25_56  [key=0, style=solid];
m25_55 -> m25_57  [key=2, style=dotted];
m25_54 -> m25_55  [key=0, style=solid];
m25_56 -> m25_54  [key=0, style=bold, color=blue];
m25_71 -> m25_72  [key=0, style=solid];
m25_75 -> m25_76  [key=0, style=solid];
m25_72 -> m25_73  [key=0, style=solid];
m25_72 -> m25_74  [key=2, style=dotted];
m25_73 -> m25_71  [key=0, style=bold, color=blue];
m25_76 -> m25_77  [key=0, style=solid];
m25_76 -> m25_74  [key=2, style=dotted];
m25_77 -> m25_75  [key=0, style=bold, color=blue];
m25_88 -> m25_89  [key=0, style=solid];
m25_91 -> m25_92  [key=0, style=solid];
m25_89 -> m25_90  [key=0, style=solid];
m25_89 -> m25_74  [key=2, style=dotted];
m25_90 -> m25_88  [key=0, style=bold, color=blue];
m25_92 -> m25_93  [key=0, style=solid];
m25_92 -> m25_74  [key=2, style=dotted];
m25_93 -> m25_91  [key=0, style=bold, color=blue];
m25_99 -> m25_100  [key=0, style=solid];
m25_99 -> m25_101  [key=2, style=dotted];
m25_98 -> m25_99  [key=0, style=solid];
m25_100 -> m25_98  [key=0, style=bold, color=blue];
m25_113 -> m25_114  [key=0, style=solid];
m25_116 -> m25_117  [key=0, style=solid];
m25_114 -> m25_115  [key=0, style=solid];
m25_114 -> m25_74  [key=2, style=dotted];
m25_115 -> m25_113  [key=0, style=bold, color=blue];
m25_117 -> m25_118  [key=0, style=solid];
m25_117 -> m25_74  [key=2, style=dotted];
m25_118 -> m25_116  [key=0, style=bold, color=blue];
m25_130 -> m25_131  [key=0, style=solid];
m25_131 -> m25_132  [key=0, style=solid];
m25_131 -> m25_74  [key=2, style=dotted];
m25_132 -> m25_130  [key=0, style=bold, color=blue];
m25_134 -> m25_135  [key=0, style=solid];
m25_134 -> m25_74  [key=2, style=dotted];
m25_135 -> m25_133  [key=0, style=bold, color=blue];
m25_140 -> m25_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_104  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_107  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_108  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_120  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_126  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_141 -> m25_35  [key=1, style=dashed, color=darkseagreen4, label=filter];
m25_142 -> m25_55  [key=1, style=dashed, color=darkseagreen4, label=filter];
m25_143 -> m25_99  [key=1, style=dashed, color=darkseagreen4, label=filter];
m26_8 -> m26_9  [key=0, style=solid];
m26_9 -> m26_10  [key=0, style=solid];
m26_9 -> m26_11  [key=2, style=dotted];
m26_9 -> m26_12  [key=2, style=dotted];
m26_10 -> m26_8  [key=0, style=bold, color=blue];
m26_0 -> m26_1  [key=0, style=solid];
m26_0 -> m26_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m26_1 -> m26_2  [key=0, style=solid];
m26_1 -> m26_3  [key=0, style=solid];
m26_1 -> m26_6  [key=2, style=dotted];
m26_3 -> m26_4  [key=0, style=solid];
m26_2 -> m26_5  [key=0, style=solid];
m26_2 -> n20  [key=2, style=dotted];
m26_4 -> m26_5  [key=0, style=solid];
m26_5 -> m26_0  [key=0, style=bold, color=blue];
m26_13 -> m26_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ProcessingState"];
m26_13 -> m26_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ProcessingState"];
m26_13 -> m26_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ProcessingState"];
m27_268 -> m27_269  [key=0, style=solid];
m27_268 -> m27_272  [key=1, style=dashed, color=darkseagreen4, label=Table];
m27_268 -> m27_273  [key=1, style=dashed, color=darkseagreen4, label=Table];
m27_269 -> m27_270  [key=0, style=solid];
m27_269 -> m27_47  [key=2, style=dotted];
m27_269 -> m27_276  [key=2, style=dotted];
m27_272 -> m27_273  [key=0, style=solid];
m27_272 -> m27_275  [key=0, style=solid];
m27_273 -> m27_274  [key=0, style=solid];
m27_273 -> m27_121  [key=2, style=dotted];
m27_270 -> m27_271  [key=0, style=solid];
m27_270 -> m27_277  [key=2, style=dotted];
m27_270 -> m27_278  [key=2, style=dotted];
m27_270 -> m27_273  [key=1, style=dashed, color=darkseagreen4, label=history];
m27_271 -> m27_272  [key=0, style=solid];
m27_271 -> m27_273  [key=1, style=dashed, color=darkseagreen4, label=i];
m27_271 -> m27_274  [key=1, style=dashed, color=darkseagreen4, label=i];
m27_274 -> m27_272  [key=0, style=solid];
m27_274 -> m27_274  [key=1, style=dashed, color=darkseagreen4, label=i];
m27_275 -> m27_268  [key=0, style=bold, color=blue];
m27_19 -> m27_20  [key=0, style=solid];
m27_20 -> m27_7  [key=2, style=dotted];
m27_20 -> m27_21  [key=0, style=solid];
m27_20 -> m27_22  [key=1, style=dashed, color=darkseagreen4, label=state];
m27_20 -> m27_23  [key=1, style=dashed, color=darkseagreen4, label=state];
m27_21 -> m27_22  [key=0, style=solid];
m27_21 -> m27_25  [key=2, style=dotted];
m27_21 -> m27_19  [key=0, style=bold, color=blue];
m27_22 -> m27_23  [key=0, style=solid];
m27_22 -> m27_26  [key=2, style=dotted];
m27_22 -> m27_18  [key=2, style=dotted];
m27_23 -> m27_24  [key=0, style=solid];
m27_23 -> m27_18  [key=2, style=dotted];
m27_23 -> m27_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_23 -> m27_27  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_24 -> m27_19  [key=0, style=bold, color=blue];
m27_24 -> m27_25  [key=0, style=solid];
m27_24 -> m27_29  [key=2, style=dotted];
m27_24 -> m27_26  [key=1, style=dashed, color=darkseagreen4, label=mock];
m27_24 -> m27_27  [key=1, style=dashed, color=darkseagreen4, label=mock];
m27_176 -> m27_177  [key=0, style=solid];
m27_177 -> m27_178  [key=0, style=solid];
m27_177 -> m27_182  [key=2, style=dotted];
m27_178 -> m27_179  [key=0, style=solid];
m27_178 -> m27_183  [key=2, style=dotted];
m27_178 -> m27_180  [key=1, style=dashed, color=darkseagreen4, label=timestamp];
m27_179 -> m27_180  [key=0, style=solid];
m27_179 -> m27_184  [key=2, style=dotted];
m27_179 -> m27_132  [key=2, style=dotted];
m27_180 -> m27_181  [key=0, style=solid];
m27_180 -> m27_184  [key=2, style=dotted];
m27_180 -> m27_132  [key=2, style=dotted];
m27_181 -> m27_176  [key=0, style=bold, color=blue];
m27_0 -> m27_1  [key=0, style=solid];
m27_1 -> m27_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_3  [key=2, style=dotted];
m27_2 -> m27_0  [key=0, style=bold, color=blue];
m27_160 -> m27_161  [key=0, style=solid];
m27_161 -> m27_162  [key=0, style=solid];
m27_161 -> m27_164  [key=2, style=dotted];
m27_161 -> m27_121  [key=2, style=dotted];
m27_162 -> m27_163  [key=0, style=solid];
m27_162 -> m27_165  [key=2, style=dotted];
m27_162 -> m27_132  [key=2, style=dotted];
m27_163 -> m27_160  [key=0, style=bold, color=blue];
m27_114 -> m27_115  [key=0, style=solid];
m27_114 -> m27_116  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_115 -> m27_116  [key=0, style=solid];
m27_115 -> m27_101  [key=2, style=dotted];
m27_115 -> m27_102  [key=2, style=dotted];
m27_116 -> m27_117  [key=0, style=solid];
m27_116 -> m27_113  [key=2, style=dotted];
m27_117 -> m27_114  [key=0, style=bold, color=blue];
m27_185 -> m27_186  [key=0, style=solid];
m27_186 -> m27_187  [key=0, style=solid];
m27_186 -> m27_165  [key=2, style=dotted];
m27_186 -> m27_132  [key=2, style=dotted];
m27_187 -> m27_188  [key=0, style=solid];
m27_187 -> m27_182  [key=2, style=dotted];
m27_188 -> m27_189  [key=0, style=solid];
m27_188 -> m27_183  [key=2, style=dotted];
m27_188 -> m27_190  [key=1, style=dashed, color=darkseagreen4, label=timestamp];
m27_189 -> m27_190  [key=0, style=solid];
m27_189 -> m27_18  [key=2, style=dotted];
m27_189 -> m27_132  [key=2, style=dotted];
m27_190 -> m27_191  [key=0, style=solid];
m27_190 -> m27_18  [key=2, style=dotted];
m27_190 -> m27_132  [key=2, style=dotted];
m27_191 -> m27_185  [key=0, style=bold, color=blue];
m27_72 -> m27_73  [key=0, style=solid];
m27_72 -> m27_74  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_73 -> m27_74  [key=0, style=solid];
m27_73 -> m27_47  [key=2, style=dotted];
m27_73 -> m27_48  [key=2, style=dotted];
m27_74 -> m27_75  [key=0, style=solid];
m27_74 -> m27_76  [key=2, style=dotted];
m27_74 -> m27_71  [key=2, style=dotted];
m27_75 -> m27_72  [key=0, style=bold, color=blue];
m27_221 -> m27_222  [key=0, style=solid];
m27_222 -> m27_223  [key=0, style=solid];
m27_222 -> m27_66  [key=2, style=dotted];
m27_223 -> m27_221  [key=0, style=bold, color=blue];
m27_192 -> m27_193  [key=0, style=solid];
m27_193 -> m27_194  [key=0, style=solid];
m27_193 -> m27_165  [key=2, style=dotted];
m27_193 -> m27_175  [key=2, style=dotted];
m27_194 -> m27_192  [key=0, style=bold, color=blue];
m27_241 -> m27_242  [key=0, style=solid];
m27_242 -> m27_243  [key=0, style=solid];
m27_242 -> m27_47  [key=2, style=dotted];
m27_242 -> m27_216  [key=2, style=dotted];
m27_242 -> m27_244  [key=1, style=dashed, color=darkseagreen4, label=entry];
m27_242 -> m27_245  [key=1, style=dashed, color=darkseagreen4, label=entry];
m27_243 -> m27_244  [key=0, style=solid];
m27_243 -> m27_217  [key=2, style=dotted];
m27_244 -> m27_245  [key=0, style=solid];
m27_244 -> m27_40  [key=2, style=dotted];
m27_244 -> m27_247  [key=1, style=dashed, color=darkseagreen4, label=history];
m27_244 -> m27_248  [key=1, style=dashed, color=darkseagreen4, label=history];
m27_245 -> m27_246  [key=0, style=solid];
m27_245 -> m27_217  [key=2, style=dotted];
m27_247 -> m27_248  [key=0, style=solid];
m27_247 -> m27_250  [key=2, style=dotted];
m27_247 -> m27_132  [key=2, style=dotted];
m27_247 -> m27_247  [key=1, style=dashed, color=darkseagreen4, label=property];
m27_248 -> m27_246  [key=0, style=solid];
m27_248 -> m27_121  [key=2, style=dotted];
m27_248 -> m27_248  [key=1, style=dashed, color=darkseagreen4, label=property];
m27_246 -> m27_247  [key=0, style=solid];
m27_246 -> m27_249  [key=0, style=solid];
m27_249 -> m27_241  [key=0, style=bold, color=blue];
m27_8 -> m27_9  [key=0, style=solid];
m27_9 -> m27_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_9 -> m27_10  [key=0, style=solid];
m27_9 -> m27_3  [key=2, style=dotted];
m27_10 -> m27_8  [key=0, style=bold, color=blue];
m27_10 -> m27_11  [key=0, style=solid];
m27_144 -> m27_145  [key=0, style=solid];
m27_145 -> m27_146  [key=0, style=solid];
m27_145 -> m27_47  [key=2, style=dotted];
m27_146 -> m27_147  [key=0, style=solid];
m27_146 -> m27_126  [key=2, style=dotted];
m27_146 -> m27_148  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_147 -> m27_144  [key=0, style=bold, color=blue];
m27_14 -> m27_15  [key=0, style=solid];
m27_15 -> m27_7  [key=2, style=dotted];
m27_15 -> m27_16  [key=0, style=solid];
m27_15 -> m27_17  [key=2, style=dotted];
m27_15 -> m27_18  [key=2, style=dotted];
m27_16 -> m27_17  [key=0, style=solid];
m27_16 -> m27_18  [key=2, style=dotted];
m27_16 -> m27_14  [key=0, style=bold, color=blue];
m27_17 -> m27_14  [key=0, style=bold, color=blue];
m27_7 -> m27_4  [key=0, style=bold, color=blue];
m27_13 -> m27_11  [key=0, style=bold, color=blue];
m27_29 -> m27_30  [key=0, style=solid, color=green];
m27_29 -> m27_31  [key=2, style=dotted, color=green];
m27_118 -> m27_119  [key=0, style=solid];
m27_119 -> m27_120  [key=0, style=solid];
m27_119 -> m27_121  [key=2, style=dotted];
m27_120 -> m27_118  [key=0, style=bold, color=blue];
m27_67 -> m27_68  [key=0, style=solid];
m27_68 -> m27_69  [key=0, style=solid];
m27_68 -> m27_70  [key=2, style=dotted];
m27_68 -> m27_71  [key=2, style=dotted];
m27_69 -> m27_67  [key=0, style=bold, color=blue];
m27_11 -> m27_12  [key=0, style=solid];
m27_11 -> m27_13  [key=2, style=dotted];
m27_12 -> m27_10  [key=0, style=bold, color=blue];
m27_12 -> m27_7  [key=2, style=dotted];
m27_12 -> m27_13  [key=0, style=solid];
m27_224 -> m27_225  [key=0, style=solid];
m27_225 -> m27_226  [key=0, style=solid];
m27_225 -> m27_227  [key=2, style=dotted];
m27_225 -> m27_228  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_226 -> m27_224  [key=0, style=bold, color=blue];
m27_256 -> m27_251  [key=0, style=bold, color=blue];
m27_251 -> m27_252  [key=0, style=solid];
m27_252 -> m27_253  [key=0, style=solid];
m27_252 -> m27_47  [key=2, style=dotted];
m27_252 -> m27_203  [key=2, style=dotted];
m27_252 -> m27_254  [key=1, style=dashed, color=darkseagreen4, label=stateEntry];
m27_252 -> m27_255  [key=1, style=dashed, color=darkseagreen4, label=stateEntry];
m27_253 -> m27_254  [key=0, style=solid];
m27_253 -> m27_256  [key=0, style=solid];
m27_254 -> m27_255  [key=0, style=solid];
m27_254 -> m27_257  [key=2, style=dotted];
m27_254 -> m27_132  [key=2, style=dotted];
m27_254 -> m27_254  [key=1, style=dashed, color=darkseagreen4, label=property];
m27_255 -> m27_253  [key=0, style=solid];
m27_255 -> m27_121  [key=2, style=dotted];
m27_255 -> m27_255  [key=1, style=dashed, color=darkseagreen4, label=property];
m27_25 -> m27_26  [key=0, style=solid];
m27_25 -> m27_30  [key=2, style=dotted];
m27_25 -> m27_31  [key=2, style=dotted];
m27_25 -> m27_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_81 -> m27_82  [key=0, style=solid];
m27_82 -> m27_83  [key=0, style=solid];
m27_82 -> m27_87  [key=2, style=dotted];
m27_82 -> m27_88  [key=2, style=dotted];
m27_82 -> m27_85  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m27_83 -> m27_84  [key=0, style=solid];
m27_83 -> m27_89  [key=2, style=dotted];
m27_83 -> m27_90  [key=2, style=dotted];
m27_85 -> m27_86  [key=0, style=solid];
m27_85 -> m27_91  [key=2, style=dotted];
m27_84 -> m27_85  [key=0, style=solid];
m27_84 -> m27_66  [key=2, style=dotted];
m27_86 -> m27_81  [key=0, style=bold, color=blue];
m27_258 -> m27_259  [key=0, style=solid];
m27_258 -> m27_261  [key=1, style=dashed, color=darkseagreen4, label=Table];
m27_258 -> m27_262  [key=1, style=dashed, color=darkseagreen4, label=Table];
m27_259 -> m27_260  [key=0, style=solid];
m27_259 -> m27_121  [key=2, style=dotted];
m27_261 -> m27_262  [key=0, style=solid];
m27_261 -> m27_264  [key=0, style=solid];
m27_262 -> m27_263  [key=0, style=solid];
m27_262 -> m27_121  [key=2, style=dotted];
m27_260 -> m27_261  [key=0, style=solid];
m27_260 -> m27_262  [key=1, style=dashed, color=darkseagreen4, label=i];
m27_260 -> m27_263  [key=1, style=dashed, color=darkseagreen4, label=i];
m27_263 -> m27_261  [key=0, style=solid];
m27_263 -> m27_263  [key=1, style=dashed, color=darkseagreen4, label=i];
m27_264 -> m27_258  [key=0, style=bold, color=blue];
m27_34 -> m27_35  [key=0, style=solid];
m27_37 -> m27_38  [key=0, style=solid];
m27_35 -> m27_36  [key=0, style=solid];
m27_36 -> m27_34  [key=0, style=bold, color=blue];
m27_38 -> m27_39  [key=0, style=solid];
m27_38 -> m27_40  [key=2, style=dotted];
m27_38 -> m27_41  [key=2, style=dotted];
m27_39 -> m27_37  [key=0, style=bold, color=blue];
m27_50 -> m27_51  [key=0, style=solid];
m27_53 -> m27_54  [key=0, style=solid];
m27_56 -> m27_57  [key=0, style=solid];
m27_51 -> m27_52  [key=0, style=solid];
m27_52 -> m27_50  [key=0, style=bold, color=blue];
m27_54 -> m27_55  [key=0, style=solid];
m27_55 -> m27_53  [key=0, style=bold, color=blue];
m27_57 -> m27_58  [key=0, style=solid];
m27_57 -> m27_40  [key=2, style=dotted];
m27_57 -> m27_41  [key=2, style=dotted];
m27_58 -> m27_56  [key=0, style=bold, color=blue];
m27_127 -> m27_128  [key=0, style=solid];
m27_127 -> m27_129  [key=1, style=dashed, color=darkseagreen4, label="?"];
m27_128 -> m27_129  [key=0, style=solid];
m27_128 -> m27_131  [key=2, style=dotted];
m27_129 -> m27_130  [key=0, style=solid];
m27_129 -> m27_132  [key=2, style=dotted];
m27_130 -> m27_127  [key=0, style=bold, color=blue];
m27_148 -> m27_149  [key=0, style=solid];
m27_148 -> m27_150  [key=1, style=dashed, color=darkseagreen4, label="?"];
m27_149 -> m27_150  [key=0, style=solid];
m27_149 -> m27_131  [key=2, style=dotted];
m27_150 -> m27_151  [key=0, style=solid];
m27_150 -> m27_132  [key=2, style=dotted];
m27_151 -> m27_148  [key=0, style=bold, color=blue];
m27_228 -> m27_229  [key=0, style=solid];
m27_229 -> m27_230  [key=0, style=solid];
m27_229 -> m27_40  [key=2, style=dotted];
m27_229 -> m27_231  [key=2, style=dotted];
m27_229 -> m27_232  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_230 -> m27_228  [key=0, style=bold, color=blue];
m27_232 -> m27_233  [key=0, style=solid];
m27_233 -> m27_234  [key=0, style=solid];
m27_234 -> m27_232  [key=0, style=bold, color=blue];
m27_238 -> m27_239  [key=0, style=solid];
m27_239 -> m27_240  [key=0, style=solid];
m27_239 -> m27_40  [key=2, style=dotted];
m27_239 -> m27_231  [key=2, style=dotted];
m27_240 -> m27_238  [key=0, style=bold, color=blue];
m27_5 -> m27_7  [key=2, style=dotted];
m27_5 -> m27_6  [key=0, style=solid];
m27_5 -> m27_8  [key=2, style=dotted];
m27_4 -> m27_5  [key=0, style=solid];
m27_6 -> m27_4  [key=0, style=bold, color=blue];
m27_6 -> m27_7  [key=0, style=solid];
m27_6 -> m27_9  [key=2, style=dotted];
m27_59 -> m27_60  [key=0, style=solid];
m27_60 -> m27_61  [key=0, style=solid];
m27_60 -> m27_48  [key=2, style=dotted];
m27_61 -> m27_62  [key=0, style=solid];
m27_61 -> m27_48  [key=2, style=dotted];
m27_62 -> m27_63  [key=0, style=solid];
m27_62 -> m27_65  [key=2, style=dotted];
m27_63 -> m27_64  [key=0, style=solid];
m27_63 -> m27_66  [key=2, style=dotted];
m27_64 -> m27_59  [key=0, style=bold, color=blue];
m27_172 -> m27_173  [key=0, style=solid];
m27_173 -> m27_174  [key=0, style=solid];
m27_173 -> m27_165  [key=2, style=dotted];
m27_173 -> m27_175  [key=2, style=dotted];
m27_174 -> m27_172  [key=0, style=bold, color=blue];
m27_104 -> m27_105  [key=0, style=solid];
m27_105 -> m27_106  [key=0, style=solid];
m27_105 -> n23  [key=2, style=dotted];
m27_105 -> m27_108  [key=2, style=dotted];
m27_106 -> m27_104  [key=0, style=bold, color=blue];
m27_77 -> m27_78  [key=0, style=solid];
m27_78 -> m27_79  [key=0, style=solid];
m27_78 -> m27_80  [key=2, style=dotted];
m27_78 -> m27_71  [key=2, style=dotted];
m27_79 -> m27_77  [key=0, style=bold, color=blue];
m27_42 -> m27_43  [key=0, style=solid];
m27_42 -> m27_44  [key=1, style=dashed, color=darkseagreen4, label=Table];
m27_42 -> m27_45  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_43 -> m27_44  [key=0, style=solid];
m27_43 -> m27_47  [key=2, style=dotted];
m27_43 -> m27_48  [key=2, style=dotted];
m27_44 -> m27_45  [key=0, style=solid];
m27_44 -> m27_49  [key=2, style=dotted];
m27_44 -> m27_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_44 -> m27_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_45 -> m27_46  [key=0, style=solid];
m27_45 -> m27_30  [key=2, style=dotted];
m27_45 -> m27_31  [key=2, style=dotted];
m27_45 -> m27_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_46 -> m27_42  [key=0, style=bold, color=blue];
m27_235 -> m27_236  [key=0, style=solid];
m27_236 -> m27_237  [key=0, style=solid];
m27_236 -> m27_227  [key=2, style=dotted];
m27_236 -> m27_238  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_237 -> m27_235  [key=0, style=bold, color=blue];
m27_199 -> m27_200  [key=0, style=solid];
m27_199 -> m27_201  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_200 -> m27_201  [key=0, style=solid];
m27_200 -> m27_47  [key=2, style=dotted];
m27_200 -> m27_203  [key=2, style=dotted];
m27_201 -> m27_202  [key=0, style=solid];
m27_201 -> m27_121  [key=2, style=dotted];
m27_202 -> m27_199  [key=0, style=bold, color=blue];
m27_133 -> m27_134  [key=0, style=solid];
m27_134 -> m27_135  [key=0, style=solid];
m27_134 -> m27_136  [key=2, style=dotted];
m27_134 -> m27_137  [key=2, style=dotted];
m27_134 -> m27_121  [key=2, style=dotted];
m27_135 -> m27_133  [key=0, style=bold, color=blue];
m27_265 -> m27_266  [key=0, style=solid];
m27_266 -> m27_267  [key=0, style=solid];
m27_266 -> m27_121  [key=2, style=dotted];
m27_267 -> m27_265  [key=0, style=bold, color=blue];
m27_27 -> m27_28  [key=0, style=solid, color=green];
m27_27 -> m27_33  [key=2, style=dotted];
m27_26 -> m27_27  [key=0, style=solid];
m27_26 -> m27_30  [key=2, style=dotted];
m27_26 -> m27_32  [key=2, style=dotted];
m27_26 -> m27_31  [key=2, style=dotted];
m27_26 -> m27_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_28 -> m27_23  [key=0, style=bold, color=blue];
m27_28 -> m27_29  [key=0, style=solid, color=green];
m27_28 -> m27_7  [key=2, style=dotted, color=green];
m27_30 -> m27_27  [key=0, style=bold, color=blue];
m27_218 -> m27_219  [key=0, style=solid];
m27_219 -> m27_220  [key=0, style=solid];
m27_219 -> m27_66  [key=2, style=dotted];
m27_220 -> m27_218  [key=0, style=bold, color=blue];
m27_195 -> m27_196  [key=0, style=solid];
m27_196 -> m27_197  [key=0, style=solid];
m27_196 -> m27_198  [key=2, style=dotted];
m27_196 -> m27_132  [key=2, style=dotted];
m27_197 -> m27_195  [key=0, style=bold, color=blue];
m27_169 -> m27_170  [key=0, style=solid];
m27_170 -> m27_171  [key=0, style=solid];
m27_170 -> m27_165  [key=2, style=dotted];
m27_170 -> m27_132  [key=2, style=dotted];
m27_171 -> m27_169  [key=0, style=bold, color=blue];
m27_138 -> m27_139  [key=0, style=solid];
m27_139 -> m27_140  [key=0, style=solid];
m27_139 -> m27_142  [key=2, style=dotted];
m27_139 -> m27_121  [key=2, style=dotted];
m27_140 -> m27_141  [key=0, style=solid];
m27_140 -> m27_143  [key=2, style=dotted];
m27_140 -> m27_121  [key=2, style=dotted];
m27_141 -> m27_138  [key=0, style=bold, color=blue];
m27_166 -> m27_167  [key=0, style=solid];
m27_167 -> m27_168  [key=0, style=solid];
m27_167 -> m27_164  [key=2, style=dotted];
m27_167 -> m27_121  [key=2, style=dotted];
m27_168 -> m27_166  [key=0, style=bold, color=blue];
m27_207 -> m27_204  [key=0, style=bold, color=blue];
m27_204 -> m27_205  [key=0, style=solid];
m27_204 -> m27_206  [key=1, style=dashed, color=darkseagreen4, label=Table];
m27_205 -> m27_206  [key=0, style=solid];
m27_205 -> m27_47  [key=2, style=dotted];
m27_205 -> m27_203  [key=2, style=dotted];
m27_206 -> m27_207  [key=0, style=solid];
m27_206 -> m27_208  [key=2, style=dotted];
m27_122 -> m27_123  [key=0, style=solid];
m27_123 -> m27_124  [key=0, style=solid];
m27_123 -> m27_47  [key=2, style=dotted];
m27_124 -> m27_125  [key=0, style=solid];
m27_124 -> m27_126  [key=2, style=dotted];
m27_124 -> m27_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_125 -> m27_122  [key=0, style=bold, color=blue];
m27_215 -> m27_209  [key=0, style=bold, color=blue];
m27_209 -> m27_210  [key=0, style=solid];
m27_209 -> m27_214  [key=1, style=dashed, color=darkseagreen4, label=Table];
m27_210 -> m27_211  [key=0, style=solid];
m27_210 -> m27_47  [key=2, style=dotted];
m27_210 -> m27_216  [key=2, style=dotted];
m27_210 -> m27_212  [key=1, style=dashed, color=darkseagreen4, label=entry];
m27_210 -> m27_213  [key=1, style=dashed, color=darkseagreen4, label=entry];
m27_214 -> m27_215  [key=0, style=solid];
m27_214 -> m27_159  [key=2, style=dotted];
m27_211 -> m27_212  [key=0, style=solid];
m27_211 -> m27_217  [key=2, style=dotted];
m27_212 -> m27_213  [key=0, style=solid];
m27_212 -> m27_40  [key=2, style=dotted];
m27_212 -> m27_214  [key=1, style=dashed, color=darkseagreen4, label=history];
m27_213 -> m27_214  [key=0, style=solid];
m27_213 -> m27_217  [key=2, style=dotted];
m27_152 -> m27_153  [key=0, style=solid];
m27_153 -> m27_154  [key=0, style=solid];
m27_153 -> m27_142  [key=2, style=dotted];
m27_153 -> m27_121  [key=2, style=dotted];
m27_154 -> m27_152  [key=0, style=bold, color=blue];
m27_155 -> m27_156  [key=0, style=solid];
m27_156 -> m27_157  [key=0, style=solid];
m27_156 -> m27_158  [key=2, style=dotted];
m27_156 -> m27_159  [key=2, style=dotted];
m27_157 -> m27_155  [key=0, style=bold, color=blue];
m27_109 -> m27_110  [key=0, style=solid];
m27_109 -> m27_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_110 -> m27_111  [key=0, style=solid];
m27_110 -> m27_101  [key=2, style=dotted];
m27_110 -> m27_102  [key=2, style=dotted];
m27_111 -> m27_112  [key=0, style=solid];
m27_111 -> m27_113  [key=2, style=dotted];
m27_112 -> m27_109  [key=0, style=bold, color=blue];
m27_97 -> m27_98  [key=0, style=solid];
m27_98 -> m27_99  [key=0, style=solid];
m27_98 -> m27_101  [key=2, style=dotted];
m27_98 -> m27_102  [key=2, style=dotted];
m27_99 -> m27_100  [key=0, style=solid];
m27_99 -> m27_103  [key=2, style=dotted];
m27_100 -> m27_97  [key=0, style=bold, color=blue];
m27_92 -> m27_93  [key=0, style=solid];
m27_93 -> m27_94  [key=0, style=solid];
m27_93 -> m27_87  [key=2, style=dotted];
m27_93 -> m27_88  [key=2, style=dotted];
m27_93 -> m27_95  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m27_94 -> m27_95  [key=0, style=solid];
m27_94 -> m27_66  [key=2, style=dotted];
m27_95 -> m27_96  [key=0, style=solid];
m27_95 -> m27_91  [key=2, style=dotted];
m27_96 -> m27_92  [key=0, style=bold, color=blue];
m27_279 -> m27_280  [key=0, style=solid];
m27_279 -> m27_282  [key=1, style=dashed, color=darkseagreen4, label=Table];
m27_279 -> m27_283  [key=1, style=dashed, color=darkseagreen4, label=Table];
m27_280 -> m27_281  [key=0, style=solid];
m27_280 -> m27_121  [key=2, style=dotted];
m27_282 -> m27_283  [key=0, style=solid];
m27_282 -> m27_285  [key=0, style=solid];
m27_283 -> m27_284  [key=0, style=solid];
m27_283 -> m27_121  [key=2, style=dotted];
m27_281 -> m27_282  [key=0, style=solid];
m27_281 -> m27_283  [key=1, style=dashed, color=darkseagreen4, label=i];
m27_281 -> m27_284  [key=1, style=dashed, color=darkseagreen4, label=i];
m27_284 -> m27_282  [key=0, style=solid];
m27_284 -> m27_284  [key=1, style=dashed, color=darkseagreen4, label=i];
m27_285 -> m27_279  [key=0, style=bold, color=blue];
m27_286 -> m27_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_98  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_99  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_110  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_111  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_156  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_225  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_236  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_246  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_253  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_259  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_262  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_266  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_280  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m27_286 -> m27_283  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.StateSteps"];
m29_0 -> m29_1  [key=0, style=solid, color=red];
m29_0 -> m29_2  [key=0, style=solid, color=green];
m29_1 -> m29_2  [key=0, style=solid, color=red];
m29_1 -> m29_4  [key=2, style=dotted, color=red];
m29_2 -> m29_3  [key=0, style=solid];
m29_3 -> m29_0  [key=0, style=bold, color=blue];
m29_5 -> m29_1  [key=1, style=dashed, color=red, label="HangFire.Redis.RedisStorageOptions"];
m29_5 -> m29_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageOptions"];
m30_8 -> m30_9  [key=0, style=solid];
m30_8 -> m30_11  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m30_8 -> m30_12  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m30_9 -> m30_10  [key=0, style=solid];
m30_9 -> m30_11  [key=0, style=solid];
m30_11 -> m30_12  [key=0, style=solid];
m30_11 -> m30_15  [key=2, style=dotted];
m30_11 -> m30_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_12 -> m30_13  [key=0, style=solid];
m30_12 -> m30_15  [key=2, style=dotted];
m30_12 -> m30_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_10 -> m30_13  [key=0, style=solid];
m30_10 -> n20  [key=2, style=dotted];
m30_13 -> m30_8  [key=0, style=bold, color=blue];
m30_0 -> m30_1  [key=0, style=solid];
m30_1 -> m30_2  [key=0, style=solid];
m30_2 -> m30_0  [key=0, style=bold, color=blue];
m30_3 -> m30_4  [key=0, style=solid];
m30_4 -> m30_5  [key=0, style=solid];
m30_4 -> m30_6  [key=2, style=dotted];
m30_4 -> m30_7  [key=2, style=dotted];
m30_5 -> m30_3  [key=0, style=bold, color=blue];
m30_20 -> m30_21  [key=0, style=solid];
m30_16 -> m30_17  [key=0, style=solid];
m30_17 -> m30_18  [key=0, style=solid];
m30_17 -> m30_19  [key=2, style=dotted];
m30_18 -> m30_16  [key=0, style=bold, color=blue];
m30_21 -> m30_22  [key=0, style=solid];
m30_21 -> m30_23  [key=2, style=dotted];
m30_21 -> m30_24  [key=2, style=dotted];
m30_22 -> m30_20  [key=0, style=bold, color=blue];
m30_25 -> m30_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.EnqueuedState"];
m30_25 -> m30_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.EnqueuedState"];
m30_25 -> m30_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.EnqueuedState"];
m30_25 -> m30_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.EnqueuedState"];
m30_25 -> m30_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.EnqueuedState"];
m30_25 -> m30_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.EnqueuedState"];
m31_34 -> m31_42  [key=0, style=solid, color=green];
m31_42 -> m31_43  [key=0, style=solid, color=green];
m31_42 -> m31_45  [key=0, style=solid, color=green];
m31_42 -> m31_47  [key=0, style=solid, color=green];
m31_43 -> m31_44  [key=0, style=solid];
m31_45 -> m31_46  [key=0, style=solid];
m31_47 -> m31_48  [key=0, style=solid];
m31_44 -> m31_49  [key=0, style=solid];
m31_46 -> m31_49  [key=0, style=solid];
m31_48 -> m31_49  [key=0, style=solid];
m31_50 -> m31_49  [key=0, style=solid];
m31_49 -> m31_34  [key=0, style=bold, color=blue];
m31_12 -> m31_13  [key=0, style=solid];
m31_13 -> m31_14  [key=0, style=solid];
m31_13 -> m31_15  [key=2, style=dotted];
m31_14 -> m31_12  [key=0, style=bold, color=blue];
m31_0 -> m31_1  [key=0, style=solid];
m31_0 -> m31_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IServerComponent"];
m31_1 -> m31_2  [key=0, style=solid];
m31_1 -> m31_3  [key=0, style=solid];
m31_3 -> m31_4  [key=0, style=solid];
m31_2 -> m31_8  [key=0, style=solid];
m31_2 -> n20  [key=2, style=dotted];
m31_4 -> m31_5  [key=0, style=solid];
m31_4 -> m31_10  [key=2, style=dotted];
m31_4 -> m31_11  [key=2, style=dotted];
m31_5 -> m31_6  [key=0, style=solid];
m31_6 -> m31_7  [key=0, style=solid];
m31_7 -> m31_8  [key=0, style=solid];
m31_8 -> m31_0  [key=0, style=bold, color=blue];
m31_15 -> m31_16  [key=0, style=solid];
m31_15 -> m31_18  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m31_15 -> m31_28  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m31_16 -> m31_17  [key=0, style=solid];
m31_16 -> m31_23  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_16 -> m31_25  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_16 -> m31_26  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_16 -> m31_27  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_16 -> m31_39  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_16 -> m31_30  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_18 -> m31_19  [key=0, style=solid];
m31_18 -> m31_32  [key=2, style=dotted];
m31_28 -> m31_29  [key=0, style=solid];
m31_28 -> m31_36  [key=2, style=dotted];
m31_28 -> m31_28  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m31_17 -> m31_18  [key=0, style=solid];
m31_17 -> m31_31  [key=0, style=solid];
m31_23 -> m31_24  [key=0, style=solid];
m31_23 -> m31_25  [key=0, style=solid];
m31_25 -> m31_26  [key=0, style=solid];
m31_25 -> m31_33  [key=2, style=dotted];
m31_25 -> m31_27  [key=1, style=dashed, color=darkseagreen4, label=nextTry];
m31_25 -> m31_39  [key=1, style=dashed, color=darkseagreen4, label=nextTry];
m31_25 -> m31_28  [key=1, style=dashed, color=darkseagreen4, label=nextTry];
m31_26 -> m31_27  [key=0, style=solid];
m31_26 -> m31_34  [key=2, style=dotted];
m31_27 -> m31_28  [key=0, style=solid];
m31_27 -> m31_35  [key=2, style=dotted];
m31_27 -> m31_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_30 -> m31_17  [key=0, style=solid];
m31_30 -> m31_30  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_19 -> m31_31  [key=0, style=solid];
m31_20 -> m31_21  [key=0, style=solid];
m31_21 -> m31_31  [key=0, style=solid];
m31_22 -> m31_23  [key=0, style=solid, color=green];
m31_24 -> m31_31  [key=0, style=solid];
m31_29 -> m31_30  [key=0, style=solid];
m31_29 -> m31_37  [key=2, style=dotted];
m31_29 -> m31_29  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m31_31 -> m31_15  [key=0, style=bold, color=blue];
m31_38 -> m31_39  [key=0, style=solid];
m31_39 -> m31_40  [key=0, style=solid];
m31_39 -> m31_41  [key=2, style=dotted];
m31_40 -> m31_38  [key=0, style=bold, color=blue];
m31_51 -> m31_52  [key=0, style=solid];
m31_52 -> m31_53  [key=0, style=solid];
m31_52 -> m31_54  [key=2, style=dotted];
m31_53 -> m31_51  [key=0, style=bold, color=blue];
m31_55 -> m31_56  [key=0, style=solid];
m31_55 -> m31_57  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_56 -> m31_57  [key=0, style=solid];
m31_56 -> m31_60  [key=2, style=dotted];
m31_56 -> m31_61  [key=2, style=dotted];
m31_56 -> m31_62  [key=2, style=dotted];
m31_57 -> m31_58  [key=0, style=solid];
m31_57 -> m31_63  [key=2, style=dotted];
m31_57 -> m31_64  [key=2, style=dotted];
m31_58 -> m31_59  [key=0, style=solid];
m31_58 -> m31_65  [key=2, style=dotted];
m31_58 -> m31_66  [key=2, style=dotted];
m31_59 -> m31_55  [key=0, style=bold, color=blue];
m31_67 -> m31_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m31_67 -> m31_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m31_67 -> m31_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m31_67 -> m31_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m31_67 -> m31_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m31_67 -> m31_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m31_67 -> m31_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m31_67 -> m31_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m31_67 -> m31_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m31_67 -> m31_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m31_67 -> m31_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m31_67 -> m31_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m31_67 -> m31_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m31_67 -> m31_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m31_68 -> m31_39  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_69 -> m31_39  [key=1, style=dashed, color=darkseagreen4, label=nextTry];
m33_23 -> m33_24  [key=0, style=solid];
m33_24 -> m33_25  [key=0, style=solid];
m33_24 -> m33_13  [key=2, style=dotted];
m33_25 -> m33_23  [key=0, style=bold, color=blue];
m33_40 -> m33_41  [key=0, style=solid];
m33_41 -> m33_40  [key=0, style=bold, color=blue];
m33_0 -> m33_1  [key=0, style=solid, color=red];
m33_1 -> m33_2  [key=0, style=solid, color=red];
m33_1 -> m33_8  [key=2, style=dotted, color=red];
m33_2 -> m33_3  [key=0, style=solid];
m33_2 -> m33_9  [key=2, style=dotted];
m33_2 -> m33_10  [key=2, style=dotted];
m33_2 -> m33_11  [key=2, style=dotted];
m33_2 -> m33_17  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_3 -> m33_4  [key=0, style=solid];
m33_3 -> m33_12  [key=2, style=dotted];
m33_4 -> m33_5  [key=0, style=solid];
m33_4 -> m33_13  [key=2, style=dotted];
m33_5 -> m33_6  [key=0, style=solid];
m33_5 -> m33_14  [key=2, style=dotted];
m33_6 -> m33_7  [key=0, style=solid];
m33_6 -> m33_15  [key=2, style=dotted];
m33_6 -> m33_16  [key=2, style=dotted];
m33_7 -> m33_0  [key=0, style=bold, color=blue];
m33_33 -> m33_34  [key=0, style=solid];
m33_34 -> m33_35  [key=0, style=solid];
m33_34 -> m33_36  [key=2, style=dotted];
m33_35 -> m33_33  [key=0, style=bold, color=blue];
m33_37 -> m33_38  [key=0, style=solid];
m33_38 -> m33_39  [key=0, style=solid];
m33_38 -> m33_29  [key=2, style=dotted];
m33_39 -> m33_37  [key=0, style=bold, color=blue];
m33_20 -> m33_21  [key=0, style=solid];
m33_21 -> m33_22  [key=0, style=solid];
m33_21 -> m33_13  [key=2, style=dotted];
m33_22 -> m33_20  [key=0, style=bold, color=blue];
m33_30 -> m33_31  [key=0, style=solid];
m33_31 -> m33_32  [key=0, style=solid];
m33_31 -> m33_29  [key=2, style=dotted];
m33_32 -> m33_30  [key=0, style=bold, color=blue];
m33_17 -> m33_18  [key=0, style=solid];
m33_18 -> m33_19  [key=0, style=solid];
m33_19 -> m33_17  [key=0, style=bold, color=blue];
m33_42 -> m33_43  [key=0, style=solid];
m33_43 -> m33_42  [key=0, style=bold, color=blue];
m33_44 -> m33_45  [key=0, style=solid];
m33_45 -> m33_46  [key=0, style=solid];
m33_46 -> m33_44  [key=0, style=bold, color=blue];
m33_26 -> m33_27  [key=0, style=solid];
m33_27 -> m33_28  [key=0, style=solid];
m33_27 -> m33_29  [key=2, style=dotted];
m33_28 -> m33_26  [key=0, style=bold, color=blue];
m33_47 -> m33_1  [key=1, style=dashed, color=red, label="HangFire.Tests.Client.JobClientTests"];
m33_47 -> m33_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientTests"];
m33_47 -> m33_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientTests"];
m33_47 -> m33_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientTests"];
m33_47 -> m33_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientTests"];
m33_47 -> m33_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientTests"];
m33_47 -> m33_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientTests"];
m33_47 -> m33_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientTests"];
m33_47 -> m33_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientTests"];
m33_47 -> m33_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientTests"];
m33_47 -> m33_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientTests"];
m33_47 -> m33_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Client.JobClientTests"];
m34_32 -> m34_33  [key=0, style=solid];
m34_32 -> m34_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.Filters.CreatedContext"];
m34_32 -> m34_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.Filters.CreatedContext"];
m34_32 -> m34_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.Filters.CreatedContext"];
m34_32 -> m34_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.Filters.CreatedContext"];
m34_32 -> m34_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.Filters.CreatedContext"];
m34_33 -> m34_34  [key=0, style=solid];
m34_33 -> m34_25  [key=2, style=dotted];
m34_34 -> m34_35  [key=0, style=solid];
m34_34 -> m34_25  [key=2, style=dotted];
m34_35 -> m34_36  [key=0, style=solid];
m34_35 -> n23  [key=2, style=dotted];
m34_35 -> m34_27  [key=2, style=dotted];
m34_38 -> m34_37  [key=0, style=solid];
m34_38 -> m34_28  [key=2, style=dotted];
m34_38 -> m34_38  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m34_41 -> m34_40  [key=0, style=solid];
m34_41 -> m34_29  [key=2, style=dotted];
m34_41 -> m34_30  [key=2, style=dotted];
m34_41 -> m34_41  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m34_43 -> m34_44  [key=0, style=solid];
m34_36 -> m34_37  [key=0, style=solid];
m34_36 -> m34_39  [key=0, style=solid];
m34_37 -> m34_38  [key=0, style=solid];
m34_37 -> m34_39  [key=0, style=solid];
m34_39 -> m34_40  [key=0, style=solid];
m34_39 -> m34_42  [key=0, style=solid];
m34_40 -> m34_41  [key=0, style=solid];
m34_40 -> m34_42  [key=0, style=solid];
m34_42 -> m34_43  [key=0, style=solid];
m34_42 -> m34_44  [key=0, style=solid];
m34_44 -> m34_32  [key=0, style=bold, color=blue];
m34_0 -> m34_1  [key=0, style=solid];
m34_0 -> m34_2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<string>"];
m34_0 -> m34_3  [key=1, style=dashed, color=darkseagreen4, label=bool];
m34_0 -> m34_4  [key=1, style=dashed, color=darkseagreen4, label=bool];
m34_0 -> m34_5  [key=1, style=dashed, color=darkseagreen4, label=bool];
m34_0 -> m34_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m34_0 -> m34_7  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m34_0 -> m34_8  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m34_1 -> m34_2  [key=0, style=solid];
m34_2 -> m34_3  [key=0, style=solid];
m34_3 -> m34_4  [key=0, style=solid];
m34_4 -> m34_5  [key=0, style=solid];
m34_5 -> m34_6  [key=0, style=solid];
m34_6 -> m34_7  [key=0, style=solid];
m34_7 -> m34_8  [key=0, style=solid];
m34_8 -> m34_9  [key=0, style=solid];
m34_9 -> m34_0  [key=0, style=bold, color=blue];
m34_45 -> m34_46  [key=0, style=solid];
m34_45 -> m34_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Filters.PerformingContext"];
m34_45 -> m34_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Filters.PerformingContext"];
m34_45 -> m34_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Filters.PerformingContext"];
m34_46 -> m34_47  [key=0, style=solid];
m34_46 -> m34_25  [key=2, style=dotted];
m34_48 -> m34_49  [key=0, style=solid];
m34_52 -> m34_51  [key=0, style=solid];
m34_52 -> m34_59  [key=2, style=dotted];
m34_52 -> m34_52  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m34_55 -> m34_54  [key=0, style=solid];
m34_55 -> m34_60  [key=2, style=dotted];
m34_55 -> m34_30  [key=2, style=dotted];
m34_55 -> m34_55  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m34_47 -> m34_48  [key=0, style=solid];
m34_47 -> m34_49  [key=0, style=solid];
m34_49 -> m34_50  [key=0, style=solid];
m34_49 -> n23  [key=2, style=dotted];
m34_49 -> m34_27  [key=2, style=dotted];
m34_50 -> m34_51  [key=0, style=solid];
m34_50 -> m34_53  [key=0, style=solid];
m34_51 -> m34_52  [key=0, style=solid];
m34_51 -> m34_53  [key=0, style=solid];
m34_53 -> m34_54  [key=0, style=solid];
m34_53 -> m34_56  [key=0, style=solid];
m34_54 -> m34_55  [key=0, style=solid];
m34_54 -> m34_56  [key=0, style=solid];
m34_56 -> m34_57  [key=0, style=solid];
m34_56 -> m34_58  [key=0, style=solid];
m34_57 -> m34_58  [key=0, style=solid];
m34_57 -> m34_31  [key=2, style=dotted];
m34_58 -> m34_45  [key=0, style=bold, color=blue];
m34_61 -> m34_62  [key=0, style=solid];
m34_61 -> m34_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Filters.PerformedContext"];
m34_61 -> m34_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Filters.PerformedContext"];
m34_62 -> m34_63  [key=0, style=solid];
m34_62 -> m34_25  [key=2, style=dotted];
m34_63 -> m34_64  [key=0, style=solid];
m34_63 -> n23  [key=2, style=dotted];
m34_63 -> m34_27  [key=2, style=dotted];
m34_65 -> m34_66  [key=0, style=solid];
m34_64 -> m34_65  [key=0, style=solid];
m34_64 -> m34_66  [key=0, style=solid];
m34_66 -> m34_61  [key=0, style=bold, color=blue];
m34_10 -> m34_11  [key=0, style=solid];
m34_10 -> m34_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.Filters.CreatingContext"];
m34_10 -> m34_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.Filters.CreatingContext"];
m34_10 -> m34_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.Filters.CreatingContext"];
m34_10 -> m34_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.Filters.CreatingContext"];
m34_11 -> m34_12  [key=0, style=solid];
m34_11 -> m34_25  [key=2, style=dotted];
m34_12 -> m34_13  [key=0, style=solid];
m34_12 -> m34_25  [key=2, style=dotted];
m34_14 -> m34_15  [key=0, style=solid];
m34_18 -> m34_17  [key=0, style=solid];
m34_18 -> m34_28  [key=2, style=dotted];
m34_18 -> m34_18  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m34_21 -> m34_20  [key=0, style=solid];
m34_21 -> m34_29  [key=2, style=dotted];
m34_21 -> m34_30  [key=2, style=dotted];
m34_21 -> m34_21  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m34_13 -> m34_14  [key=0, style=solid];
m34_13 -> m34_15  [key=0, style=solid];
m34_15 -> m34_16  [key=0, style=solid];
m34_15 -> n23  [key=2, style=dotted];
m34_15 -> m34_27  [key=2, style=dotted];
m34_16 -> m34_17  [key=0, style=solid];
m34_16 -> m34_19  [key=0, style=solid];
m34_17 -> m34_18  [key=0, style=solid];
m34_17 -> m34_19  [key=0, style=solid];
m34_19 -> m34_20  [key=0, style=solid];
m34_19 -> m34_22  [key=0, style=solid];
m34_20 -> m34_21  [key=0, style=solid];
m34_20 -> m34_22  [key=0, style=solid];
m34_22 -> m34_23  [key=0, style=solid];
m34_22 -> m34_24  [key=0, style=solid];
m34_23 -> m34_24  [key=0, style=solid];
m34_23 -> m34_31  [key=2, style=dotted];
m34_24 -> m34_10  [key=0, style=bold, color=blue];
m34_67 -> m34_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m34_67 -> m34_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestFilter"];
m38_0 -> m38_1  [key=0, style=solid];
m38_1 -> m38_2  [key=0, style=solid];
m38_1 -> m38_57  [key=2, style=dotted];
m38_2 -> m38_3  [key=0, style=solid, color=red];
m38_2 -> m38_58  [key=2, style=dotted];
m38_3 -> m38_4  [key=0, style=solid, color=red];
m38_4 -> m38_5  [key=0, style=solid, color=red];
m38_4 -> m38_59  [key=2, style=dotted, color=red];
m38_4 -> m38_9  [key=1, style=dashed, color=red, label=from];
m38_5 -> m38_6  [key=0, style=solid, color=red];
m38_5 -> m38_59  [key=2, style=dotted];
m38_5 -> m38_9  [key=1, style=dashed, color=darkseagreen4, label=perPage];
m38_5 -> m38_57  [key=3, color=green, style=bold, label="method methodReturn SqlConnection CreateAndOpenConnection"];
m38_9 -> m38_10  [key=0, style=solid];
m38_9 -> m38_61  [key=2, style=dotted];
m38_9 -> m38_62  [key=2, style=dotted];
m38_9 -> m38_63  [key=2, style=dotted];
m38_9 -> m38_12  [key=1, style=dashed, color=darkseagreen4, label=pager];
m38_9 -> m38_19  [key=1, style=dashed, color=darkseagreen4, label=pager];
m38_9 -> m38_55  [key=1, style=dashed, color=darkseagreen4, label=pager];
m38_6 -> m38_7  [key=0, style=solid, color=red];
m38_7 -> m38_8  [key=0, style=solid];
m38_8 -> m38_9  [key=0, style=solid];
m38_8 -> m38_60  [key=2, style=dotted];
m38_8 -> m38_10  [key=1, style=dashed, color=darkseagreen4, label=monitor];
m38_10 -> m38_11  [key=0, style=solid];
m38_10 -> m38_64  [key=2, style=dotted];
m38_10 -> m38_21  [key=1, style=dashed, color=darkseagreen4, label=scheduledJobs];
m38_12 -> m38_13  [key=0, style=solid];
m38_12 -> m38_14  [key=0, style=solid];
m38_19 -> m38_20  [key=0, style=solid];
m38_19 -> m38_66  [key=2, style=dotted];
m38_19 -> m38_67  [key=2, style=dotted];
m38_19 -> m38_68  [key=2, style=dotted];
m38_55 -> m38_56  [key=0, style=solid];
m38_55 -> m38_72  [key=2, style=dotted];
m38_55 -> m38_67  [key=2, style=dotted];
m38_55 -> m38_68  [key=2, style=dotted];
m38_11 -> m38_12  [key=0, style=solid];
m38_11 -> m38_57  [key=2, style=dotted];
m38_21 -> m38_22  [key=0, style=solid];
m38_21 -> m38_54  [key=0, style=solid];
m38_21 -> m38_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_13 -> m38_56  [key=0, style=solid];
m38_13 -> m38_57  [key=2, style=dotted];
m38_14 -> m38_15  [key=0, style=solid];
m38_14 -> m38_57  [key=2, style=dotted];
m38_15 -> m38_16  [key=0, style=solid];
m38_15 -> m38_63  [key=2, style=dotted];
m38_15 -> m38_65  [key=2, style=dotted];
m38_16 -> m38_17  [key=0, style=solid];
m38_16 -> m38_57  [key=2, style=dotted];
m38_17 -> m38_18  [key=0, style=solid];
m38_17 -> m38_63  [key=2, style=dotted];
m38_17 -> m38_65  [key=2, style=dotted];
m38_18 -> m38_19  [key=0, style=solid];
m38_18 -> m38_57  [key=2, style=dotted];
m38_20 -> m38_21  [key=0, style=solid];
m38_20 -> m38_57  [key=2, style=dotted];
m38_22 -> m38_23  [key=0, style=solid];
m38_22 -> m38_57  [key=2, style=dotted];
m38_54 -> m38_55  [key=0, style=solid];
m38_54 -> m38_57  [key=2, style=dotted];
m38_23 -> m38_24  [key=0, style=solid];
m38_23 -> m38_65  [key=2, style=dotted];
m38_23 -> m38_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_23 -> m38_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_24 -> m38_25  [key=0, style=solid];
m38_24 -> m38_57  [key=2, style=dotted];
m38_25 -> m38_26  [key=0, style=solid];
m38_25 -> m38_65  [key=2, style=dotted];
m38_25 -> m38_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_25 -> m38_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_26 -> m38_27  [key=0, style=solid];
m38_26 -> m38_57  [key=2, style=dotted];
m38_27 -> m38_28  [key=0, style=solid];
m38_27 -> m38_31  [key=0, style=solid];
m38_27 -> m38_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_27 -> m38_29  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_27 -> m38_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_28 -> m38_29  [key=0, style=solid];
m38_28 -> m38_57  [key=2, style=dotted];
m38_31 -> m38_32  [key=0, style=solid];
m38_31 -> m38_57  [key=2, style=dotted];
m38_29 -> m38_30  [key=0, style=solid];
m38_29 -> m38_65  [key=2, style=dotted];
m38_29 -> m38_29  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_29 -> m38_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_32 -> m38_33  [key=0, style=solid];
m38_32 -> m38_63  [key=2, style=dotted];
m38_32 -> m38_65  [key=2, style=dotted];
m38_32 -> m38_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_32 -> m38_34  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_30 -> m38_31  [key=0, style=solid];
m38_30 -> m38_57  [key=2, style=dotted];
m38_33 -> m38_34  [key=0, style=solid];
m38_33 -> m38_57  [key=2, style=dotted];
m38_34 -> m38_35  [key=0, style=solid];
m38_34 -> m38_69  [key=2, style=dotted];
m38_34 -> m38_68  [key=2, style=dotted];
m38_34 -> m38_34  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_34 -> m38_36  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_35 -> m38_36  [key=0, style=solid];
m38_35 -> m38_57  [key=2, style=dotted];
m38_36 -> m38_37  [key=0, style=solid];
m38_36 -> m38_38  [key=0, style=solid];
m38_36 -> m38_36  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_36 -> m38_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_37 -> m38_38  [key=0, style=solid];
m38_37 -> m38_57  [key=2, style=dotted];
m38_38 -> m38_39  [key=0, style=solid];
m38_38 -> m38_57  [key=2, style=dotted];
m38_39 -> m38_40  [key=0, style=solid];
m38_39 -> m38_70  [key=2, style=dotted];
m38_39 -> m38_65  [key=2, style=dotted];
m38_39 -> m38_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_39 -> m38_41  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_40 -> m38_41  [key=0, style=solid];
m38_40 -> m38_57  [key=2, style=dotted];
m38_41 -> m38_42  [key=0, style=solid];
m38_41 -> m38_65  [key=2, style=dotted];
m38_41 -> m38_41  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_41 -> m38_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_42 -> m38_43  [key=0, style=solid];
m38_42 -> m38_57  [key=2, style=dotted];
m38_43 -> m38_44  [key=0, style=solid];
m38_43 -> m38_63  [key=2, style=dotted];
m38_43 -> m38_65  [key=2, style=dotted];
m38_43 -> m38_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_43 -> m38_45  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_44 -> m38_45  [key=0, style=solid];
m38_44 -> m38_57  [key=2, style=dotted];
m38_45 -> m38_46  [key=0, style=solid];
m38_45 -> m38_71  [key=2, style=dotted];
m38_45 -> m38_68  [key=2, style=dotted];
m38_45 -> m38_45  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_45 -> m38_47  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_46 -> m38_47  [key=0, style=solid];
m38_46 -> m38_57  [key=2, style=dotted];
m38_47 -> m38_48  [key=0, style=solid];
m38_47 -> m38_53  [key=0, style=solid];
m38_47 -> m38_47  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_47 -> m38_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_48 -> m38_49  [key=0, style=solid];
m38_48 -> m38_57  [key=2, style=dotted];
m38_53 -> m38_21  [key=0, style=solid];
m38_53 -> m38_57  [key=2, style=dotted];
m38_49 -> m38_50  [key=0, style=solid];
m38_49 -> m38_70  [key=2, style=dotted];
m38_49 -> m38_65  [key=2, style=dotted];
m38_49 -> m38_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_49 -> m38_51  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_50 -> m38_51  [key=0, style=solid];
m38_50 -> m38_57  [key=2, style=dotted];
m38_51 -> m38_52  [key=0, style=solid];
m38_51 -> m38_65  [key=2, style=dotted];
m38_51 -> m38_51  [key=1, style=dashed, color=darkseagreen4, label=job];
m38_52 -> m38_53  [key=0, style=solid];
m38_52 -> m38_57  [key=2, style=dotted];
m38_56 -> m38_0  [key=0, style=bold, color=blue];
m38_69 -> m38_7  [key=3, color=darkorchid, style=bold, label="Local variable SqlConnection connection"];
m38_73 -> m38_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_4  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m38_73 -> m38_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m39_0 -> m39_1  [key=0, style=solid];
m39_1 -> m39_2  [key=0, style=solid, color=green];
m39_1 -> m39_4  [key=2, style=dotted];
m39_2 -> m39_3  [key=0, style=solid, color=green];
m39_3 -> m39_0  [key=0, style=bold, color=blue];
m39_5 -> m39_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorageOptions"];
m39_5 -> m39_2  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerStorageOptions"];
m40_42 -> m40_43  [key=0, style=solid];
m40_43 -> m40_44  [key=0, style=solid];
m40_43 -> m40_29  [key=2, style=dotted];
m40_43 -> m40_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m40_44 -> m40_45  [key=0, style=solid];
m40_44 -> m40_30  [key=2, style=dotted];
m40_45 -> m40_42  [key=0, style=bold, color=blue];
m40_69 -> m40_70  [key=0, style=solid];
m40_70 -> m40_71  [key=0, style=solid];
m40_70 -> m40_62  [key=2, style=dotted];
m40_71 -> m40_72  [key=0, style=solid];
m40_71 -> m40_63  [key=2, style=dotted];
m40_72 -> m40_73  [key=0, style=solid];
m40_72 -> m40_75  [key=2, style=dotted];
m40_72 -> m40_64  [key=2, style=dotted];
m40_72 -> m40_76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m40_73 -> m40_74  [key=0, style=solid];
m40_73 -> m40_75  [key=2, style=dotted];
m40_73 -> m40_64  [key=2, style=dotted];
m40_73 -> m40_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m40_74 -> m40_69  [key=0, style=bold, color=blue];
m40_25 -> m40_26  [key=0, style=solid];
m40_26 -> m40_27  [key=0, style=solid];
m40_26 -> m40_29  [key=2, style=dotted];
m40_26 -> m40_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m40_27 -> m40_28  [key=0, style=solid];
m40_27 -> m40_30  [key=2, style=dotted];
m40_28 -> m40_25  [key=0, style=bold, color=blue];
m40_109 -> m40_110  [key=0, style=solid];
m40_110 -> m40_111  [key=0, style=solid];
m40_110 -> m40_16  [key=2, style=dotted];
m40_110 -> m40_29  [key=2, style=dotted];
m40_110 -> m40_115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m40_111 -> m40_112  [key=0, style=solid];
m40_111 -> m40_62  [key=2, style=dotted];
m40_111 -> m40_119  [key=1, style=dashed, color=darkseagreen4, label=server];
m40_112 -> m40_113  [key=0, style=solid];
m40_112 -> m40_29  [key=2, style=dotted];
m40_112 -> m40_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m40_113 -> m40_114  [key=0, style=solid];
m40_113 -> m40_64  [key=2, style=dotted];
m40_113 -> m40_121  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m40_114 -> m40_109  [key=0, style=bold, color=blue];
m40_92 -> m40_93  [key=0, style=solid];
m40_93 -> m40_94  [key=0, style=solid];
m40_93 -> m40_62  [key=2, style=dotted];
m40_94 -> m40_95  [key=0, style=solid];
m40_94 -> m40_63  [key=2, style=dotted];
m40_95 -> m40_96  [key=0, style=solid];
m40_95 -> m40_64  [key=2, style=dotted];
m40_95 -> m40_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m40_96 -> m40_92  [key=0, style=bold, color=blue];
m40_0 -> m40_1  [key=0, style=solid];
m40_1 -> m40_2  [key=0, style=solid];
m40_1 -> n46  [key=2, style=dotted];
m40_2 -> m40_3  [key=0, style=solid];
m40_2 -> m40_10  [key=2, style=dotted];
m40_3 -> m40_4  [key=0, style=solid];
m40_3 -> m40_11  [key=2, style=dotted];
m40_4 -> m40_5  [key=0, style=solid];
m40_4 -> m40_12  [key=2, style=dotted];
m40_5 -> m40_6  [key=0, style=solid];
m40_5 -> m40_13  [key=2, style=dotted];
m40_6 -> m40_7  [key=0, style=solid];
m40_6 -> m40_14  [key=2, style=dotted];
m40_6 -> m40_15  [key=2, style=dotted];
m40_7 -> m40_8  [key=0, style=solid];
m40_7 -> m40_16  [key=2, style=dotted];
m40_7 -> m40_17  [key=2, style=dotted];
m40_7 -> m40_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m40_8 -> m40_0  [key=0, style=bold, color=blue];
m40_50 -> m40_51  [key=0, style=solid];
m40_51 -> m40_52  [key=0, style=solid];
m40_51 -> m40_29  [key=2, style=dotted];
m40_51 -> m40_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m40_52 -> m40_53  [key=0, style=solid];
m40_52 -> m40_30  [key=2, style=dotted];
m40_53 -> m40_50  [key=0, style=bold, color=blue];
m40_62 -> m40_124  [key=0, style=solid];
m40_124 -> m40_125  [key=0, style=solid];
m40_124 -> m40_34  [key=2, style=dotted];
m40_125 -> m40_62  [key=0, style=bold, color=blue];
m40_100 -> m40_101  [key=0, style=solid];
m40_101 -> m40_102  [key=0, style=solid];
m40_101 -> m40_62  [key=2, style=dotted];
m40_102 -> m40_103  [key=0, style=solid];
m40_102 -> m40_63  [key=2, style=dotted];
m40_103 -> m40_104  [key=0, style=solid];
m40_103 -> m40_64  [key=2, style=dotted];
m40_103 -> m40_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m40_104 -> m40_100  [key=0, style=bold, color=blue];
m40_35 -> m40_36  [key=0, style=solid];
m40_36 -> m40_37  [key=0, style=solid];
m40_36 -> m40_29  [key=2, style=dotted];
m40_36 -> m40_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m40_37 -> m40_38  [key=0, style=solid];
m40_37 -> m40_30  [key=2, style=dotted];
m40_38 -> m40_35  [key=0, style=bold, color=blue];
m40_57 -> m40_58  [key=0, style=solid];
m40_58 -> m40_59  [key=0, style=solid];
m40_58 -> m40_62  [key=2, style=dotted];
m40_59 -> m40_60  [key=0, style=solid];
m40_59 -> m40_63  [key=2, style=dotted];
m40_60 -> m40_61  [key=0, style=solid];
m40_60 -> m40_64  [key=2, style=dotted];
m40_60 -> m40_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m40_61 -> m40_57  [key=0, style=bold, color=blue];
m40_121 -> m40_122  [key=0, style=solid];
m40_21 -> m40_22  [key=0, style=solid];
m40_18 -> m40_19  [key=0, style=solid];
m40_19 -> m40_20  [key=0, style=solid];
m40_20 -> m40_18  [key=0, style=bold, color=blue];
m40_22 -> m40_23  [key=0, style=solid];
m40_22 -> m40_24  [key=2, style=dotted];
m40_23 -> m40_21  [key=0, style=bold, color=blue];
m40_31 -> m40_32  [key=0, style=solid];
m40_32 -> m40_33  [key=0, style=solid];
m40_32 -> m40_34  [key=2, style=dotted];
m40_33 -> m40_31  [key=0, style=bold, color=blue];
m40_39 -> m40_40  [key=0, style=solid];
m40_40 -> m40_41  [key=0, style=solid];
m40_40 -> m40_34  [key=2, style=dotted];
m40_41 -> m40_39  [key=0, style=bold, color=blue];
m40_46 -> m40_47  [key=0, style=solid];
m40_47 -> m40_48  [key=0, style=solid];
m40_47 -> m40_49  [key=2, style=dotted];
m40_48 -> m40_46  [key=0, style=bold, color=blue];
m40_54 -> m40_55  [key=0, style=solid];
m40_55 -> m40_56  [key=0, style=solid];
m40_55 -> m40_34  [key=2, style=dotted];
m40_56 -> m40_54  [key=0, style=bold, color=blue];
m40_65 -> m40_66  [key=0, style=solid];
m40_66 -> m40_67  [key=0, style=solid];
m40_66 -> m40_68  [key=2, style=dotted];
m40_67 -> m40_65  [key=0, style=bold, color=blue];
m40_76 -> m40_77  [key=0, style=solid];
m40_79 -> m40_80  [key=0, style=solid];
m40_77 -> m40_78  [key=0, style=solid];
m40_77 -> m40_24  [key=2, style=dotted];
m40_78 -> m40_76  [key=0, style=bold, color=blue];
m40_80 -> m40_81  [key=0, style=solid];
m40_80 -> m40_82  [key=2, style=dotted];
m40_81 -> m40_79  [key=0, style=bold, color=blue];
m40_88 -> m40_89  [key=0, style=solid];
m40_89 -> m40_90  [key=0, style=solid];
m40_89 -> m40_91  [key=2, style=dotted];
m40_90 -> m40_88  [key=0, style=bold, color=blue];
m40_97 -> m40_98  [key=0, style=solid];
m40_98 -> m40_99  [key=0, style=solid];
m40_98 -> m40_82  [key=2, style=dotted];
m40_99 -> m40_97  [key=0, style=bold, color=blue];
m40_105 -> m40_106  [key=0, style=solid];
m40_106 -> m40_107  [key=0, style=solid];
m40_106 -> m40_108  [key=2, style=dotted];
m40_107 -> m40_105  [key=0, style=bold, color=blue];
m40_115 -> m40_116  [key=0, style=solid];
m40_119 -> m40_120  [key=0, style=solid];
m40_119 -> m40_63  [key=2, style=dotted];
m40_118 -> m40_119  [key=0, style=solid];
m40_116 -> m40_117  [key=0, style=solid];
m40_116 -> m40_82  [key=2, style=dotted];
m40_117 -> m40_115  [key=0, style=bold, color=blue];
m40_120 -> m40_118  [key=0, style=bold, color=blue];
m40_122 -> m40_123  [key=0, style=solid];
m40_122 -> m40_29  [key=2, style=dotted];
m40_122 -> m40_108  [key=2, style=dotted];
m40_123 -> m40_121  [key=0, style=bold, color=blue];
m40_83 -> m40_84  [key=0, style=solid];
m40_84 -> m40_85  [key=0, style=solid];
m40_84 -> m40_62  [key=2, style=dotted];
m40_85 -> m40_86  [key=0, style=solid];
m40_85 -> m40_63  [key=2, style=dotted];
m40_86 -> m40_87  [key=0, style=solid];
m40_86 -> m40_64  [key=2, style=dotted];
m40_86 -> m40_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m40_87 -> m40_83  [key=0, style=bold, color=blue];
m40_126 -> m40_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_60  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_85  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_93  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_101  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_102  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_103  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_110  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_111  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_112  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_119  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_113  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_126 -> m40_124  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m40_127 -> m40_119  [key=1, style=dashed, color=darkseagreen4, label=server];
m41_0 -> m41_1  [key=0, style=solid, color=red];
m41_1 -> m41_2  [key=0, style=solid, color=red];
m41_1 -> m41_3  [key=2, style=dotted, color=red];
m41_2 -> m41_0  [key=0, style=bold, color=blue];
m42_7 -> m42_8  [key=0, style=solid, color=red];
m42_8 -> m42_9  [key=0, style=solid, color=red];
m42_8 -> m42_5  [key=2, style=dotted, color=red];
m42_9 -> m42_10  [key=0, style=solid, color=red];
m42_9 -> m42_9  [key=1, style=dashed, color=red, label=stateMock];
m42_10 -> m42_11  [key=0, style=solid, color=red];
m42_10 -> m42_12  [key=2, style=dotted, color=red];
m42_10 -> m42_13  [key=2, style=dotted, color=red];
m42_11 -> m42_7  [key=0, style=bold, color=blue];
m42_0 -> m42_1  [key=0, style=solid, color=red];
m42_1 -> m42_2  [key=0, style=solid, color=red];
m42_1 -> m42_5  [key=2, style=dotted, color=red];
m42_2 -> m42_3  [key=0, style=solid, color=red];
m42_2 -> m42_2  [key=1, style=dashed, color=red, label=stateMock];
m42_3 -> m42_4  [key=0, style=solid, color=red];
m42_3 -> m42_6  [key=2, style=dotted, color=red];
m42_4 -> m42_0  [key=0, style=bold, color=blue];
m43_10 -> m43_11  [key=0, style=solid];
m43_11 -> m43_12  [key=0, style=solid];
m43_11 -> m43_17  [key=2, style=dotted];
m43_12 -> m43_13  [key=0, style=solid];
m43_12 -> m43_12  [key=1, style=dashed, color=darkseagreen4, label=owinContext];
m43_13 -> m43_14  [key=0, style=solid];
m43_13 -> m43_18  [key=2, style=dotted];
m43_13 -> m43_13  [key=1, style=dashed, color=darkseagreen4, label=owinContext];
m43_14 -> m43_15  [key=0, style=solid];
m43_14 -> m43_19  [key=2, style=dotted];
m43_15 -> m43_16  [key=0, style=solid];
m43_15 -> m43_20  [key=2, style=dotted];
m43_16 -> m43_10  [key=0, style=bold, color=blue];
m43_24 -> m43_25  [key=0, style=solid];
m43_24 -> m43_27  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.Assembly"];
m43_24 -> m43_31  [key=1, style=dashed, color=darkseagreen4, label=IOwinResponse];
m43_24 -> m43_21  [key=3, color=darkorchid, style=bold, label="Parameter variable IOwinResponse response"];
m43_25 -> m43_26  [key=0, style=solid];
m43_25 -> m43_34  [key=2, style=dotted];
m43_25 -> m43_28  [key=1, style=dashed, color=darkseagreen4, label=inputStream];
m43_25 -> m43_29  [key=1, style=dashed, color=darkseagreen4, label=inputStream];
m43_25 -> m43_32  [key=1, style=dashed, color=darkseagreen4, label=inputStream];
m43_27 -> m43_33  [key=0, style=solid];
m43_27 -> m43_35  [key=2, style=dotted];
m43_27 -> m43_36  [key=2, style=dotted];
m43_31 -> m43_32  [key=0, style=solid];
m43_31 -> m43_39  [key=2, style=dotted];
m43_26 -> m43_27  [key=0, style=solid];
m43_26 -> m43_28  [key=0, style=solid];
m43_28 -> m43_29  [key=0, style=solid];
m43_28 -> m43_37  [key=2, style=dotted];
m43_28 -> m43_31  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m43_28 -> m43_32  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m43_29 -> m43_30  [key=0, style=solid, color=red];
m43_29 -> m43_38  [key=2, style=dotted];
m43_29 -> m43_31  [key=1, style=dashed, color=darkseagreen4, label=readLength];
m43_32 -> m43_30  [key=0, style=solid, color=red];
m43_32 -> m43_38  [key=2, style=dotted];
m43_30 -> m43_31  [key=0, style=solid, color=red];
m43_30 -> m43_33  [key=0, style=solid, color=red];
m43_33 -> m43_24  [key=0, style=bold, color=blue];
m43_0 -> m43_1  [key=0, style=solid];
m43_0 -> m43_3  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.Assembly"];
m43_0 -> m43_5  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.Assembly"];
m43_0 -> m43_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_0 -> m43_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_1 -> m43_2  [key=0, style=solid];
m43_1 -> m43_3  [key=0, style=solid];
m43_3 -> m43_4  [key=0, style=solid];
m43_3 -> m43_5  [key=0, style=solid];
m43_5 -> m43_6  [key=0, style=solid];
m43_6 -> m43_7  [key=0, style=solid];
m43_7 -> m43_8  [key=0, style=solid];
m43_2 -> m43_8  [key=0, style=solid];
m43_2 -> n20  [key=2, style=dotted];
m43_4 -> m43_8  [key=0, style=solid];
m43_4 -> n20  [key=2, style=dotted];
m43_8 -> m43_0  [key=0, style=bold, color=blue];
m43_21 -> m43_22  [key=0, style=solid];
m43_22 -> m43_23  [key=0, style=solid];
m43_22 -> m43_24  [key=2, style=dotted];
m43_23 -> m43_21  [key=0, style=bold, color=blue];
m43_40 -> m43_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.EmbeddedResourceDispatcher"];
m43_40 -> m43_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.EmbeddedResourceDispatcher"];
m43_40 -> m43_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.EmbeddedResourceDispatcher"];
m43_40 -> m43_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.EmbeddedResourceDispatcher"];
m43_40 -> m43_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.EmbeddedResourceDispatcher"];
m43_40 -> m43_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.EmbeddedResourceDispatcher"];
m44_16 -> m44_17  [key=0, style=solid];
m44_17 -> m44_18  [key=0, style=solid];
m44_17 -> m44_5  [key=2, style=dotted];
m44_17 -> m44_21  [key=1, style=dashed, color=darkseagreen4, label=options];
m44_18 -> m44_19  [key=0, style=solid];
m44_18 -> m44_12  [key=2, style=dotted];
m44_18 -> m44_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_19 -> m44_16  [key=0, style=bold, color=blue];
m44_24 -> m44_25  [key=0, style=solid];
m44_25 -> m44_26  [key=0, style=solid];
m44_25 -> m44_5  [key=2, style=dotted];
m44_25 -> m44_27  [key=1, style=dashed, color=darkseagreen4, label=options];
m44_26 -> m44_27  [key=0, style=solid];
m44_26 -> m44_23  [key=2, style=dotted];
m44_27 -> m44_28  [key=0, style=solid];
m44_27 -> m44_23  [key=2, style=dotted];
m44_27 -> m44_29  [key=2, style=dotted];
m44_28 -> m44_24  [key=0, style=bold, color=blue];
m44_8 -> m44_9  [key=0, style=solid];
m44_9 -> m44_10  [key=0, style=solid];
m44_9 -> m44_5  [key=2, style=dotted];
m44_9 -> m44_14  [key=1, style=dashed, color=darkseagreen4, label=options];
m44_10 -> m44_11  [key=0, style=solid];
m44_10 -> m44_12  [key=2, style=dotted];
m44_10 -> m44_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_11 -> m44_8  [key=0, style=bold, color=blue];
m44_20 -> m44_21  [key=0, style=solid];
m44_14 -> m44_15  [key=0, style=solid];
m44_13 -> m44_14  [key=0, style=solid];
m44_15 -> m44_13  [key=0, style=bold, color=blue];
m44_21 -> m44_22  [key=0, style=solid];
m44_21 -> m44_23  [key=2, style=dotted];
m44_22 -> m44_20  [key=0, style=bold, color=blue];
m44_0 -> m44_1  [key=0, style=solid];
m44_1 -> m44_2  [key=0, style=solid, color=red];
m44_1 -> m44_5  [key=2, style=dotted];
m44_1 -> m44_3  [key=1, style=dashed, color=darkseagreen4, label=options];
m44_2 -> m44_3  [key=0, style=solid, color=red];
m44_2 -> m44_6  [key=2, style=dotted, color=red];
m44_3 -> m44_4  [key=0, style=solid];
m44_3 -> m44_7  [key=2, style=dotted];
m44_4 -> m44_0  [key=0, style=bold, color=blue];
m44_30 -> m44_14  [key=1, style=dashed, color=darkseagreen4, label=options];
m44_31 -> m44_21  [key=1, style=dashed, color=darkseagreen4, label=options];
m45_8 -> m45_9  [key=0, style=solid];
m45_9 -> m45_10  [key=0, style=solid];
m45_9 -> m45_11  [key=2, style=dotted];
m45_10 -> m45_8  [key=0, style=bold, color=blue];
m45_3 -> m45_4  [key=0, style=solid];
m45_4 -> m45_5  [key=0, style=solid];
m45_4 -> m45_6  [key=2, style=dotted];
m45_4 -> m45_7  [key=2, style=dotted];
m45_5 -> m45_3  [key=0, style=bold, color=blue];
m45_0 -> m45_1  [key=0, style=solid];
m45_1 -> m45_2  [key=0, style=solid];
m45_2 -> m45_0  [key=0, style=bold, color=blue];
m45_12 -> m45_13  [key=0, style=solid];
m45_13 -> m45_14  [key=0, style=solid];
m45_13 -> m45_15  [key=2, style=dotted];
m45_14 -> m45_12  [key=0, style=bold, color=blue];
m45_16 -> m45_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m45_16 -> m45_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m46_6 -> m46_7  [key=0, style=solid];
m46_7 -> m46_8  [key=0, style=solid];
m46_7 -> m46_4  [key=2, style=dotted];
m46_7 -> m46_9  [key=1, style=dashed, color=darkseagreen4, label=state];
m46_8 -> m46_9  [key=0, style=solid];
m46_8 -> m46_11  [key=2, style=dotted];
m46_9 -> m46_10  [key=0, style=solid];
m46_9 -> m46_12  [key=2, style=dotted];
m46_9 -> m46_5  [key=2, style=dotted];
m46_10 -> m46_6  [key=0, style=bold, color=blue];
m46_13 -> m46_14  [key=0, style=solid];
m46_15 -> m46_16  [key=0, style=solid, color=red];
m46_15 -> m46_17  [key=2, style=dotted, color=red];
m46_14 -> m46_15  [key=0, style=solid, color=red];
m46_14 -> m46_4  [key=2, style=dotted];
m46_16 -> m46_13  [key=0, style=bold, color=blue];
m46_0 -> m46_1  [key=0, style=solid];
m46_1 -> m46_2  [key=0, style=solid];
m46_1 -> m46_4  [key=2, style=dotted];
m46_2 -> m46_3  [key=0, style=solid];
m46_2 -> m46_5  [key=2, style=dotted];
m46_3 -> m46_0  [key=0, style=bold, color=blue];
m48_219 -> m48_220  [key=0, style=solid];
m48_220 -> m48_221  [key=0, style=solid];
m48_220 -> m48_20  [key=2, style=dotted];
m48_220 -> m48_25  [key=2, style=dotted];
m48_220 -> m48_225  [key=2, style=dotted];
m48_220 -> m48_21  [key=2, style=dotted];
m48_220 -> m48_226  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_221 -> m48_222  [key=0, style=solid];
m48_221 -> m48_89  [key=2, style=dotted];
m48_222 -> m48_223  [key=0, style=solid];
m48_222 -> m48_90  [key=2, style=dotted];
m48_223 -> m48_224  [key=0, style=solid];
m48_223 -> m48_91  [key=2, style=dotted];
m48_223 -> m48_229  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_224 -> m48_219  [key=0, style=bold, color=blue];
m48_62 -> m48_63  [key=0, style=solid];
m48_63 -> m48_64  [key=0, style=solid];
m48_63 -> m48_35  [key=2, style=dotted];
m48_63 -> m48_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_64 -> m48_65  [key=0, style=solid];
m48_64 -> m48_57  [key=2, style=dotted];
m48_65 -> m48_62  [key=0, style=bold, color=blue];
m48_112 -> m48_113  [key=0, style=solid];
m48_113 -> m48_114  [key=0, style=solid];
m48_113 -> m48_20  [key=2, style=dotted];
m48_113 -> m48_119  [key=2, style=dotted];
m48_113 -> m48_21  [key=2, style=dotted];
m48_113 -> m48_120  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_114 -> m48_115  [key=0, style=solid];
m48_114 -> m48_20  [key=2, style=dotted];
m48_114 -> m48_119  [key=2, style=dotted];
m48_114 -> m48_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_115 -> m48_116  [key=0, style=solid];
m48_115 -> m48_20  [key=2, style=dotted];
m48_115 -> m48_119  [key=2, style=dotted];
m48_115 -> m48_21  [key=2, style=dotted];
m48_115 -> m48_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_116 -> m48_117  [key=0, style=solid];
m48_116 -> m48_89  [key=2, style=dotted];
m48_117 -> m48_118  [key=0, style=solid];
m48_117 -> m48_90  [key=2, style=dotted];
m48_118 -> m48_112  [key=0, style=bold, color=blue];
m48_183 -> m48_184  [key=0, style=solid];
m48_184 -> m48_185  [key=0, style=solid];
m48_184 -> m48_190  [key=2, style=dotted];
m48_184 -> m48_188  [key=1, style=dashed, color=darkseagreen4, label=exception];
m48_184 -> m48_196  [key=1, style=dashed, color=darkseagreen4, label=exception];
m48_184 -> m48_199  [key=1, style=dashed, color=darkseagreen4, label=exception];
m48_185 -> m48_186  [key=0, style=solid];
m48_185 -> m48_20  [key=2, style=dotted];
m48_185 -> m48_191  [key=2, style=dotted];
m48_185 -> m48_192  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_188 -> m48_189  [key=0, style=solid];
m48_188 -> m48_91  [key=2, style=dotted];
m48_188 -> m48_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_186 -> m48_187  [key=0, style=solid];
m48_186 -> m48_89  [key=2, style=dotted];
m48_187 -> m48_188  [key=0, style=solid];
m48_187 -> m48_90  [key=2, style=dotted];
m48_189 -> m48_183  [key=0, style=bold, color=blue];
m48_52 -> m48_234  [key=0, style=solid];
m48_234 -> m48_52  [key=0, style=bold, color=blue];
m48_172 -> m48_173  [key=0, style=solid];
m48_173 -> m48_174  [key=0, style=solid];
m48_173 -> m48_89  [key=2, style=dotted];
m48_174 -> m48_175  [key=0, style=solid];
m48_174 -> m48_90  [key=2, style=dotted];
m48_175 -> m48_176  [key=0, style=solid];
m48_175 -> m48_91  [key=2, style=dotted];
m48_175 -> m48_177  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_176 -> m48_172  [key=0, style=bold, color=blue];
m48_202 -> m48_203  [key=0, style=solid];
m48_203 -> m48_204  [key=0, style=solid];
m48_203 -> m48_190  [key=2, style=dotted];
m48_203 -> m48_207  [key=1, style=dashed, color=darkseagreen4, label=exception];
m48_203 -> m48_214  [key=1, style=dashed, color=darkseagreen4, label=exception];
m48_203 -> m48_217  [key=1, style=dashed, color=darkseagreen4, label=exception];
m48_204 -> m48_205  [key=0, style=solid];
m48_204 -> m48_20  [key=2, style=dotted];
m48_204 -> m48_209  [key=2, style=dotted];
m48_204 -> m48_191  [key=2, style=dotted];
m48_204 -> m48_210  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_207 -> m48_208  [key=0, style=solid];
m48_207 -> m48_91  [key=2, style=dotted];
m48_207 -> m48_213  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_205 -> m48_206  [key=0, style=solid];
m48_205 -> m48_89  [key=2, style=dotted];
m48_206 -> m48_207  [key=0, style=solid];
m48_206 -> m48_90  [key=2, style=dotted];
m48_208 -> m48_202  [key=0, style=bold, color=blue];
m48_141 -> m48_142  [key=0, style=solid];
m48_142 -> m48_143  [key=0, style=solid];
m48_142 -> m48_89  [key=2, style=dotted];
m48_143 -> m48_144  [key=0, style=solid];
m48_143 -> m48_90  [key=2, style=dotted];
m48_144 -> m48_145  [key=0, style=solid];
m48_144 -> m48_91  [key=2, style=dotted];
m48_144 -> m48_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_145 -> m48_141  [key=0, style=bold, color=blue];
m48_0 -> m48_1  [key=0, style=solid];
m48_1 -> m48_2  [key=0, style=solid];
m48_2 -> m48_3  [key=0, style=solid];
m48_2 -> m48_16  [key=2, style=dotted];
m48_3 -> m48_4  [key=0, style=solid];
m48_3 -> m48_17  [key=2, style=dotted];
m48_4 -> m48_5  [key=0, style=solid];
m48_4 -> m48_18  [key=2, style=dotted];
m48_5 -> m48_6  [key=0, style=solid];
m48_5 -> m48_19  [key=2, style=dotted];
m48_6 -> m48_7  [key=0, style=solid];
m48_6 -> m48_20  [key=2, style=dotted];
m48_6 -> m48_21  [key=2, style=dotted];
m48_6 -> m48_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_7 -> m48_8  [key=0, style=solid];
m48_7 -> m48_22  [key=2, style=dotted];
m48_8 -> m48_9  [key=0, style=solid];
m48_8 -> m48_20  [key=2, style=dotted];
m48_8 -> m48_21  [key=2, style=dotted];
m48_8 -> m48_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_9 -> m48_10  [key=0, style=solid];
m48_9 -> m48_23  [key=2, style=dotted];
m48_10 -> m48_11  [key=0, style=solid];
m48_10 -> m48_24  [key=2, style=dotted];
m48_11 -> m48_12  [key=0, style=solid, color=red];
m48_11 -> m48_20  [key=2, style=dotted];
m48_11 -> m48_21  [key=2, style=dotted];
m48_11 -> m48_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_12 -> m48_13  [key=0, style=solid, color=red];
m48_12 -> m48_20  [key=2, style=dotted, color=red];
m48_12 -> m48_21  [key=2, style=dotted, color=red];
m48_12 -> m48_41  [key=1, style=dashed, color=red, label="lambda expression"];
m48_13 -> m48_14  [key=0, style=solid];
m48_13 -> m48_20  [key=2, style=dotted];
m48_13 -> m48_25  [key=2, style=dotted];
m48_13 -> m48_26  [key=2, style=dotted];
m48_13 -> m48_21  [key=2, style=dotted];
m48_13 -> m48_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_13 -> m48_49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_14 -> m48_15  [key=0, style=solid];
m48_14 -> m48_27  [key=2, style=dotted];
m48_15 -> m48_0  [key=0, style=bold, color=blue];
m48_152 -> m48_153  [key=0, style=solid];
m48_153 -> m48_154  [key=0, style=solid];
m48_153 -> m48_20  [key=2, style=dotted];
m48_153 -> m48_21  [key=2, style=dotted];
m48_153 -> m48_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_154 -> m48_155  [key=0, style=solid];
m48_154 -> m48_89  [key=2, style=dotted];
m48_155 -> m48_156  [key=0, style=solid];
m48_155 -> m48_90  [key=2, style=dotted];
m48_156 -> m48_157  [key=0, style=solid];
m48_156 -> m48_91  [key=2, style=dotted];
m48_156 -> m48_161  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_157 -> m48_152  [key=0, style=bold, color=blue];
m48_83 -> m48_84  [key=0, style=solid];
m48_84 -> m48_85  [key=0, style=solid];
m48_84 -> m48_89  [key=2, style=dotted];
m48_85 -> m48_86  [key=0, style=solid];
m48_85 -> m48_90  [key=2, style=dotted];
m48_86 -> m48_87  [key=0, style=solid];
m48_86 -> m48_91  [key=2, style=dotted];
m48_86 -> m48_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_87 -> m48_88  [key=0, style=solid];
m48_87 -> m48_91  [key=2, style=dotted];
m48_87 -> m48_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_88 -> m48_83  [key=0, style=bold, color=blue];
m48_229 -> m48_230  [key=0, style=solid];
m48_28 -> m48_29  [key=0, style=solid];
m48_32 -> m48_33  [key=0, style=solid];
m48_37 -> m48_38  [key=0, style=solid];
m48_41 -> m48_42  [key=0, style=solid, color=red];
m48_45 -> m48_46  [key=0, style=solid];
m48_49 -> m48_50  [key=0, style=solid];
m48_29 -> m48_30  [key=0, style=solid];
m48_29 -> m48_31  [key=2, style=dotted];
m48_30 -> m48_28  [key=0, style=bold, color=blue];
m48_33 -> m48_34  [key=0, style=solid];
m48_33 -> m48_35  [key=2, style=dotted];
m48_33 -> m48_36  [key=2, style=dotted];
m48_34 -> m48_32  [key=0, style=bold, color=blue];
m48_38 -> m48_39  [key=0, style=solid];
m48_38 -> m48_40  [key=2, style=dotted];
m48_39 -> m48_37  [key=0, style=bold, color=blue];
m48_42 -> m48_43  [key=0, style=solid, color=red];
m48_42 -> m48_35  [key=2, style=dotted, color=red];
m48_42 -> m48_44  [key=2, style=dotted, color=red];
m48_43 -> m48_41  [key=0, style=bold, color=blue];
m48_46 -> m48_47  [key=0, style=solid];
m48_46 -> m48_48  [key=2, style=dotted];
m48_47 -> m48_45  [key=0, style=bold, color=blue];
m48_50 -> m48_51  [key=0, style=solid];
m48_50 -> m48_52  [key=2, style=dotted];
m48_51 -> m48_49  [key=0, style=bold, color=blue];
m48_58 -> m48_59  [key=0, style=solid];
m48_59 -> m48_60  [key=0, style=solid];
m48_59 -> m48_61  [key=2, style=dotted];
m48_60 -> m48_58  [key=0, style=bold, color=blue];
m48_66 -> m48_67  [key=0, style=solid];
m48_67 -> m48_68  [key=0, style=solid];
m48_67 -> m48_61  [key=2, style=dotted];
m48_68 -> m48_66  [key=0, style=bold, color=blue];
m48_73 -> m48_74  [key=0, style=solid];
m48_74 -> m48_75  [key=0, style=solid];
m48_74 -> m48_61  [key=2, style=dotted];
m48_75 -> m48_73  [key=0, style=bold, color=blue];
m48_80 -> m48_81  [key=0, style=solid];
m48_81 -> m48_82  [key=0, style=solid];
m48_81 -> m48_61  [key=2, style=dotted];
m48_82 -> m48_80  [key=0, style=bold, color=blue];
m48_92 -> m48_93  [key=0, style=solid];
m48_95 -> m48_96  [key=0, style=solid];
m48_93 -> m48_94  [key=0, style=solid];
m48_93 -> m48_31  [key=2, style=dotted];
m48_94 -> m48_92  [key=0, style=bold, color=blue];
m48_96 -> m48_97  [key=0, style=solid];
m48_96 -> m48_98  [key=2, style=dotted];
m48_97 -> m48_95  [key=0, style=bold, color=blue];
m48_105 -> m48_106  [key=0, style=solid];
m48_108 -> m48_109  [key=0, style=solid];
m48_106 -> m48_107  [key=0, style=solid];
m48_106 -> m48_36  [key=2, style=dotted];
m48_107 -> m48_105  [key=0, style=bold, color=blue];
m48_109 -> m48_110  [key=0, style=solid];
m48_109 -> m48_111  [key=2, style=dotted];
m48_110 -> m48_108  [key=0, style=bold, color=blue];
m48_120 -> m48_121  [key=0, style=solid];
m48_123 -> m48_124  [key=0, style=solid];
m48_127 -> m48_128  [key=0, style=solid];
m48_121 -> m48_122  [key=0, style=solid];
m48_121 -> m48_35  [key=2, style=dotted];
m48_121 -> m48_44  [key=2, style=dotted];
m48_122 -> m48_120  [key=0, style=bold, color=blue];
m48_124 -> m48_125  [key=0, style=solid];
m48_124 -> m48_35  [key=2, style=dotted];
m48_124 -> m48_126  [key=2, style=dotted];
m48_125 -> m48_123  [key=0, style=bold, color=blue];
m48_128 -> m48_129  [key=0, style=solid];
m48_128 -> m48_35  [key=2, style=dotted];
m48_128 -> m48_44  [key=2, style=dotted];
m48_129 -> m48_127  [key=0, style=bold, color=blue];
m48_135 -> m48_136  [key=0, style=solid];
m48_136 -> m48_137  [key=0, style=solid];
m48_136 -> m48_35  [key=2, style=dotted];
m48_136 -> m48_44  [key=2, style=dotted];
m48_136 -> m48_138  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_137 -> m48_135  [key=0, style=bold, color=blue];
m48_138 -> m48_139  [key=0, style=solid];
m48_139 -> m48_140  [key=0, style=solid];
m48_140 -> m48_138  [key=0, style=bold, color=blue];
m48_146 -> m48_147  [key=0, style=solid];
m48_147 -> m48_148  [key=0, style=solid];
m48_147 -> m48_35  [key=2, style=dotted];
m48_147 -> m48_44  [key=2, style=dotted];
m48_147 -> m48_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_148 -> m48_146  [key=0, style=bold, color=blue];
m48_149 -> m48_150  [key=0, style=solid];
m48_150 -> m48_151  [key=0, style=solid];
m48_151 -> m48_149  [key=0, style=bold, color=blue];
m48_158 -> m48_159  [key=0, style=solid];
m48_161 -> m48_162  [key=0, style=solid];
m48_159 -> m48_160  [key=0, style=solid];
m48_159 -> m48_35  [key=2, style=dotted];
m48_159 -> m48_44  [key=2, style=dotted];
m48_160 -> m48_158  [key=0, style=bold, color=blue];
m48_162 -> m48_163  [key=0, style=solid];
m48_162 -> m48_35  [key=2, style=dotted];
m48_162 -> m48_126  [key=2, style=dotted];
m48_163 -> m48_161  [key=0, style=bold, color=blue];
m48_169 -> m48_170  [key=0, style=solid];
m48_170 -> m48_171  [key=0, style=solid];
m48_170 -> m48_35  [key=2, style=dotted];
m48_170 -> m48_126  [key=2, style=dotted];
m48_171 -> m48_169  [key=0, style=bold, color=blue];
m48_177 -> m48_178  [key=0, style=solid];
m48_178 -> m48_179  [key=0, style=solid];
m48_178 -> m48_35  [key=2, style=dotted];
m48_178 -> m48_44  [key=2, style=dotted];
m48_178 -> m48_180  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_179 -> m48_177  [key=0, style=bold, color=blue];
m48_180 -> m48_181  [key=0, style=solid];
m48_181 -> m48_182  [key=0, style=solid];
m48_182 -> m48_180  [key=0, style=bold, color=blue];
m48_196 -> m48_197  [key=0, style=solid];
m48_196 -> m48_35  [key=2, style=dotted];
m48_196 -> m48_44  [key=2, style=dotted];
m48_196 -> m48_198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_199 -> m48_200  [key=0, style=solid];
m48_199 -> m48_201  [key=2, style=dotted];
m48_192 -> m48_193  [key=0, style=solid];
m48_195 -> m48_196  [key=0, style=solid];
m48_193 -> m48_194  [key=0, style=solid];
m48_193 -> m48_35  [key=2, style=dotted];
m48_193 -> m48_126  [key=2, style=dotted];
m48_194 -> m48_192  [key=0, style=bold, color=blue];
m48_197 -> m48_195  [key=0, style=bold, color=blue];
m48_198 -> m48_199  [key=0, style=solid];
m48_200 -> m48_198  [key=0, style=bold, color=blue];
m48_214 -> m48_215  [key=0, style=solid];
m48_214 -> m48_35  [key=2, style=dotted];
m48_214 -> m48_44  [key=2, style=dotted];
m48_214 -> m48_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_217 -> m48_218  [key=0, style=solid];
m48_210 -> m48_211  [key=0, style=solid];
m48_213 -> m48_214  [key=0, style=solid];
m48_211 -> m48_212  [key=0, style=solid];
m48_211 -> m48_35  [key=2, style=dotted];
m48_211 -> m48_126  [key=2, style=dotted];
m48_212 -> m48_210  [key=0, style=bold, color=blue];
m48_215 -> m48_213  [key=0, style=bold, color=blue];
m48_216 -> m48_217  [key=0, style=solid];
m48_218 -> m48_216  [key=0, style=bold, color=blue];
m48_226 -> m48_227  [key=0, style=solid];
m48_227 -> m48_228  [key=0, style=solid];
m48_227 -> m48_48  [key=2, style=dotted];
m48_228 -> m48_226  [key=0, style=bold, color=blue];
m48_230 -> m48_231  [key=0, style=solid];
m48_230 -> m48_35  [key=2, style=dotted];
m48_230 -> m48_44  [key=2, style=dotted];
m48_231 -> m48_229  [key=0, style=bold, color=blue];
m48_130 -> m48_131  [key=0, style=solid];
m48_131 -> m48_132  [key=0, style=solid];
m48_131 -> m48_89  [key=2, style=dotted];
m48_132 -> m48_133  [key=0, style=solid];
m48_132 -> m48_90  [key=2, style=dotted];
m48_133 -> m48_134  [key=0, style=solid];
m48_133 -> m48_91  [key=2, style=dotted];
m48_133 -> m48_135  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_134 -> m48_130  [key=0, style=bold, color=blue];
m48_99 -> m48_100  [key=0, style=solid];
m48_100 -> m48_101  [key=0, style=solid];
m48_100 -> m48_89  [key=2, style=dotted];
m48_101 -> m48_102  [key=0, style=solid];
m48_101 -> m48_90  [key=2, style=dotted];
m48_102 -> m48_103  [key=0, style=solid];
m48_102 -> m48_91  [key=2, style=dotted];
m48_102 -> m48_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_103 -> m48_104  [key=0, style=solid];
m48_103 -> m48_91  [key=2, style=dotted];
m48_103 -> m48_108  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_104 -> m48_99  [key=0, style=bold, color=blue];
m48_76 -> m48_77  [key=0, style=solid];
m48_77 -> m48_78  [key=0, style=solid];
m48_77 -> m48_35  [key=2, style=dotted];
m48_77 -> m48_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_78 -> m48_79  [key=0, style=solid];
m48_78 -> m48_57  [key=2, style=dotted];
m48_79 -> m48_76  [key=0, style=bold, color=blue];
m48_89 -> m48_232  [key=0, style=solid];
m48_232 -> m48_233  [key=0, style=solid];
m48_232 -> m48_61  [key=2, style=dotted];
m48_233 -> m48_89  [key=0, style=bold, color=blue];
m48_69 -> m48_70  [key=0, style=solid];
m48_70 -> m48_71  [key=0, style=solid];
m48_70 -> m48_35  [key=2, style=dotted];
m48_70 -> m48_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_71 -> m48_72  [key=0, style=solid];
m48_71 -> m48_57  [key=2, style=dotted];
m48_72 -> m48_69  [key=0, style=bold, color=blue];
m48_53 -> m48_54  [key=0, style=solid];
m48_54 -> m48_55  [key=0, style=solid];
m48_54 -> m48_35  [key=2, style=dotted];
m48_54 -> m48_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_55 -> m48_56  [key=0, style=solid];
m48_55 -> m48_57  [key=2, style=dotted];
m48_56 -> m48_53  [key=0, style=bold, color=blue];
m48_164 -> m48_165  [key=0, style=solid];
m48_165 -> m48_166  [key=0, style=solid];
m48_165 -> m48_89  [key=2, style=dotted];
m48_166 -> m48_167  [key=0, style=solid];
m48_166 -> m48_90  [key=2, style=dotted];
m48_167 -> m48_168  [key=0, style=solid];
m48_167 -> m48_91  [key=2, style=dotted];
m48_167 -> m48_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_168 -> m48_164  [key=0, style=bold, color=blue];
m48_235 -> m48_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_12  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_85  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_86  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_102  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_106  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_114  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_128  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_131  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_133  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_136  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_139  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_142  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_143  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_144  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_153  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_154  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_155  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_156  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_165  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_166  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_167  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_173  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_174  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_175  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_185  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_186  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_187  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_188  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_196  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_204  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_205  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_206  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_207  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_214  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_220  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_227  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_221  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_222  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_223  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_230  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_235 -> m48_232  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m48_236 -> m48_196  [key=1, style=dashed, color=darkseagreen4, label=exception];
m48_236 -> m48_199  [key=1, style=dashed, color=darkseagreen4, label=exception];
m48_237 -> m48_214  [key=1, style=dashed, color=darkseagreen4, label=exception];
m48_237 -> m48_217  [key=1, style=dashed, color=darkseagreen4, label=exception];
}
