digraph  {
n76 [label="HangFire.Tests.States.EnqueuedStateFeature", span=""];
n0 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)"];
n1 [label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)"];
n2 [label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Enqueued state'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)"];
n5 [label="Entry Unk.GetTestRunner", span="", cluster="Unk.GetTestRunner"];
n3 [label="testRunner.OnFeatureStart(featureInfo)", span="35-35", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)"];
n6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr"];
n7 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)"];
n4 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)"];
n8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart"];
n9 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()"];
n10 [label="testRunner.OnFeatureEnd()", span="41-41", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()"];
n11 [label="testRunner = null", span="42-42", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()"];
n13 [label="Entry Unk.OnFeatureEnd", span="", cluster="Unk.OnFeatureEnd"];
n12 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()"];
n14 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()"];
n15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Enqueued state''))", span="48-49", cluster="HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()"];
n16 [label="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(null)", span="51-51", cluster="HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()"];
n17 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()"];
n18 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()"];
n19 [label="testRunner.OnScenarioEnd()", span="58-58", cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()"];
n20 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()"];
n21 [label="Entry Unk.OnScenarioEnd", span="", cluster="Unk.OnScenarioEnd"];
n22 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)"];
n23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63", cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)"];
n24 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)"];
n25 [label="Entry Unk.OnScenarioStart", span="", cluster="Unk.OnScenarioStart"];
n26 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioCleanup()"];
n27 [label="testRunner.CollectScenarioErrors()", span="68-68", cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioCleanup()"];
n28 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioCleanup()"];
n29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors"];
n30 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", span="71-71", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()"];
n31 [label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()"];
n32 [label="testRunner.And(''the Enqueued state with the \'test\' value for the \'queue\' argument'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="77-77", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()"];
n34 [label="Entry Unk.Given", span="", cluster="Unk.Given"];
n33 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", span="71-71", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()"];
n35 [label="Entry Unk.And", span="", cluster="Unk.And"];
n36 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", span="85-85", cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()"];
n37 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State name is \'Enqueued\''', ((string[])(null)))", span="87-87", cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()"];
n38 [label="this.ScenarioSetup(scenarioInfo)", span="89-89", cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()"];
n43 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr"];
n39 [label="this.FeatureBackground()", span="91-91", cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()"];
n40 [label="testRunner.Then(''the state name is equal to \'Enqueued\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="93-93", cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()"];
n41 [label="this.ScenarioCleanup()", span="95-95", cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()"];
n44 [label="Entry Unk.Then", span="", cluster="Unk.Then"];
n42 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", span="85-85", cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()"];
n45 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", span="102-102", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()"];
n46 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It has the correct properties set'', ((string[])(null)))", span="104-104", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()"];
n47 [label="this.ScenarioSetup(scenarioInfo)", span="106-106", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()"];
n48 [label="this.FeatureBackground()", span="108-108", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()"];
n49 [label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="110-112", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()"];
n50 [label="table1.AddRow(new string[] {\r\n                        ''EnqueuedAt'',\r\n                        ''<UtcNow timestamp>''})", span="113-115", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()"];
n55 [label="Entry TechTalk.SpecFlow.Table.cstr", span="", cluster="TechTalk.SpecFlow.Table.cstr"];
n51 [label="table1.AddRow(new string[] {\r\n                        ''Queue'',\r\n                        ''test''})", span="116-118", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()"];
n52 [label="testRunner.Then(''properties table contains the following items:'', ((string)(null)), table1, ''Then '')", span="120-120", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()"];
n56 [label="Entry Unk.AddRow", span="", cluster="Unk.AddRow"];
n53 [label="this.ScenarioCleanup()", span="122-122", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()"];
n54 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", span="102-102", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()"];
n57 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", span="129-129", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()"];
n58 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying, it should enqueue the job to the given queue'', ((string[])(null)))", span="131-131", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()"];
n59 [label="this.ScenarioSetup(scenarioInfo)", span="133-133", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()"];
n60 [label="this.FeatureBackground()", span="135-135", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()"];
n61 [label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="137-137", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()"];
n62 [label="testRunner.Then(''the \'test\' queue contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="139-139", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()"];
n66 [label="Entry Unk.When", span="", cluster="Unk.When"];
n63 [label="testRunner.And(''the \'test\' queue was added to the queues set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="141-141", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()"];
n64 [label="this.ScenarioCleanup()", span="143-143", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()"];
n65 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", span="129-129", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()"];
n67 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", span="150-150", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()"];
n68 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying, it should not remove the job from the queue'', ((string[])(null)))", span="152-152", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()"];
n69 [label="this.ScenarioSetup(scenarioInfo)", span="154-154", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()"];
n70 [label="this.FeatureBackground()", span="156-156", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()"];
n71 [label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="158-158", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()"];
n72 [label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="160-160", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()"];
n73 [label="testRunner.Then(''the \'test\' queue still contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="162-162", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()"];
n74 [label="this.ScenarioCleanup()", span="164-164", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()"];
n75 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", span="150-150", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()"];
m0_45 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="CreateContextFacts.cs"];
m0_12 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="24-24", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="CreateContextFacts.cs"];
m0_13 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(null, _job, _state.Object))", span="26-27", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="CreateContextFacts.cs"];
m0_14 [label="Assert.Equal(''connection'', exception.ParamName)", span="29-29", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="CreateContextFacts.cs"];
m0_15 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="24-24", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="CreateContextFacts.cs"];
m0_16 [label="Entry Unk.>", span="", cluster="Unk.>", file="CreateContextFacts.cs"];
m0_36 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", span="52-52", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="CreateContextFacts.cs"];
m0_37 [label="var context = CreateContext()", span="54-54", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="CreateContextFacts.cs"];
m0_38 [label="Assert.Same(_connection.Object, context.Connection)", span="56-56", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="CreateContextFacts.cs"];
m0_39 [label="Assert.Same(_job, context.Job)", span="57-57", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="CreateContextFacts.cs"];
m0_40 [label="Assert.Same(_state.Object, context.InitialState)", span="58-58", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="CreateContextFacts.cs"];
m0_41 [label="Assert.NotNull(context.Items)", span="60-60", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="CreateContextFacts.cs"];
m0_42 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", span="52-52", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="CreateContextFacts.cs"];
m0_6 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="CreateContextFacts.cs"];
m0_44 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="CreateContextFacts.cs"];
m0_29 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", span="42-42", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="CreateContextFacts.cs"];
m0_30 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(\r\n                    _connection.Object, _job, null))", span="44-46", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", color=red, community=0, file="CreateContextFacts.cs"];
m0_31 [label="Assert.Equal(''initialState'', exception.ParamName)", span="48-48", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="CreateContextFacts.cs", color=red, community=0];
m0_0 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", span="16-16", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="CreateContextFacts.cs"];
m0_1 [label="_job = Job.FromExpression(() => Method())", span="18-18", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="CreateContextFacts.cs"];
m0_2 [label="_state = new Mock<IState>()", span="19-19", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="CreateContextFacts.cs"];
m0_3 [label="_connection = new Mock<IStorageConnection>()", span="20-20", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="CreateContextFacts.cs"];
m0_4 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", span="16-16", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="CreateContextFacts.cs"];
m0_51 [label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", span="30-30", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="CreateContextFacts.cs"];
m0_11 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Method()", span="72-72", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Method()", file="CreateContextFacts.cs"];
m0_52 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Method()", span="72-72", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Method()", file="CreateContextFacts.cs"];
m0_43 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", span="76-76", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", file="CreateContextFacts.cs"];
m0_53 [label="return new CreateContext(_connection.Object, _job, _state.Object);", span="78-78", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", file="CreateContextFacts.cs"];
m0_54 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", span="76-76", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", file="CreateContextFacts.cs"];
m0_17 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="CreateContextFacts.cs"];
m0_32 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="CreateContextFacts.cs"];
m0_22 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", span="33-33", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="CreateContextFacts.cs"];
m0_23 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(_connection.Object, null, _state.Object))", span="35-36", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="CreateContextFacts.cs"];
m0_24 [label="Assert.Equal(''job'', exception.ParamName)", span="38-38", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="CreateContextFacts.cs"];
m0_25 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", span="33-33", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="CreateContextFacts.cs"];
m0_46 [label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", span="64-64", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="CreateContextFacts.cs"];
m0_47 [label="var context = CreateContext()", span="66-66", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="CreateContextFacts.cs"];
m0_48 [label="var contextCopy = new CreateContext(context)", span="67-67", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="CreateContextFacts.cs"];
m0_49 [label="Assert.Same(context.Items, contextCopy.Items)", span="69-69", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="CreateContextFacts.cs"];
m0_50 [label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", span="64-64", cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="CreateContextFacts.cs"];
m0_7 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="CreateContextFacts.cs"];
m0_33 [label="Entry lambda expression", span="45-46", cluster="lambda expression", file="CreateContextFacts.cs"];
m0_8 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="CreateContextFacts.cs"];
m0_9 [label="Method()", span="18-18", cluster="lambda expression", file="CreateContextFacts.cs"];
m0_10 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="CreateContextFacts.cs"];
m0_18 [label="Entry lambda expression", span="27-27", cluster="lambda expression", file="CreateContextFacts.cs"];
m0_19 [label="new CreateContext(null, _job, _state.Object)", span="27-27", cluster="lambda expression", file="CreateContextFacts.cs"];
m0_20 [label="Exit lambda expression", span="27-27", cluster="lambda expression", file="CreateContextFacts.cs"];
m0_26 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="CreateContextFacts.cs"];
m0_27 [label="new CreateContext(_connection.Object, null, _state.Object)", span="36-36", cluster="lambda expression", file="CreateContextFacts.cs"];
m0_28 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="CreateContextFacts.cs"];
m0_34 [label="new CreateContext(_connection.Object, _job, null)", span="44-44", cluster="lambda expression", color=green, community=0, file="CreateContextFacts.cs"];
m0_35 [label="Exit lambda expression", span="45-46", cluster="lambda expression", file="CreateContextFacts.cs"];
m0_21 [label="Entry CreateContext.cstr", span="", cluster="CreateContext.cstr", file="CreateContextFacts.cs"];
m0_5 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="CreateContextFacts.cs"];
m0_55 [label="Hangfire.Core.Tests.Client.CreateContextFacts", span="", file="CreateContextFacts.cs"];
m1_6 [label="Exit HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions)", span="41-41", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions)", file="CreatingContext.cs"];
m1_7 [label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="53-53", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="CreatingContext.cs"];
m1_8 [label="HostingEnvironment.RegisterObject(this)", span="56-56", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="CreatingContext.cs"];
m1_117 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="118-118", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="CreatingContext.cs"];
m1_118 [label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="120-120", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="CreatingContext.cs"];
m1_119 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn))", span="121-121", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="CreatingContext.cs"];
m1_120 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="118-118", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="CreatingContext.cs"];
m1_57 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.Common.States.State)", span="79-79", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.Common.States.State)", file="CreatingContext.cs"];
m1_74 [label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                JobHelper.ToJson(storedData)))", span="88-90", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.Common.States.State)", file="CreatingContext.cs"];
m1_70 [label="var storedData = new Dictionary<string, string>(state.Serialize())", span="83-83", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.Common.States.State)", file="CreatingContext.cs"];
m1_73 [label="storedData.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="86-86", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.Common.States.State)", file="CreatingContext.cs"];
m1_71 [label="storedData.Add(''State'', state.Name)", span="84-84", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.Common.States.State)", file="CreatingContext.cs"];
m1_72 [label="storedData.Add(''Reason'', state.Reason)", span="85-85", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.Common.States.State)", file="CreatingContext.cs"];
m1_75 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.Common.States.State)", span="79-79", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.Common.States.State)", file="CreatingContext.cs"];
m1_147 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="142-142", cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="CreatingContext.cs"];
m1_148 [label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value))", span="144-145", cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="CreatingContext.cs"];
m1_149 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="142-142", cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="CreatingContext.cs"];
m1_81 [label="Entry Unk.EnqueueItemOnList", span="", cluster="Unk.EnqueueItemOnList", file="CreatingContext.cs"];
m1_56 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="CreatingContext.cs"];
m1_5 [label="HostingEnvironment.RegisterObject(this)", span="44-44", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions)", file="CreatingContext.cs"];
m1_4 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="13-13", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="CreatingContext.cs"];
m1_69 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="CreatingContext.cs"];
m1_100 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="107-107", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="CreatingContext.cs"];
m1_101 [label="_transaction.QueueCommand(x => x.IncrementValue(RedisStorage.Prefix + key))", span="109-109", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="CreatingContext.cs"];
m1_102 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn))", span="110-110", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="CreatingContext.cs"];
m1_103 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="107-107", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="CreatingContext.cs"];
m1_160 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="154-154", cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="CreatingContext.cs"];
m1_161 [label="_transaction.QueueCommand(x => x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt))", span="157-158", cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="CreatingContext.cs"];
m1_162 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="154-154", cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="CreatingContext.cs"];
m1_0 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="13-13", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="CreatingContext.cs"];
m1_1 [label="transaction == null", span="15-15", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="CreatingContext.cs"];
m1_2 [label="throw new ArgumentNullException(''transaction'');", span="15-15", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="CreatingContext.cs"];
m1_61 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="CreatingContext.cs"];
m1_89 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="CreatingContext.cs"];
m1_23 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="CreatingContext.cs"];
m1_46 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.State)", span="55-55", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.State)", file="CreatingContext.cs"];
m1_47 [label="_transaction.QueueCommand(x => x.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''State'',\r\n                state.Name))", span="57-60", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.State)", file="CreatingContext.cs"];
m1_48 [label="_transaction.QueueCommand(x => x.RemoveEntry(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId)))", span="62-63", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.State)", file="CreatingContext.cs"];
m1_51 [label="_transaction.QueueCommand(x => x.SetRangeInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                storedData))", span="72-74", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.State)", file="CreatingContext.cs"];
m1_52 [label="AddJobState(jobId, state)", span="76-76", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.State)", file="CreatingContext.cs"];
m1_49 [label="var storedData = new Dictionary<string, string>(state.Serialize())", span="69-69", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.State)", file="CreatingContext.cs"];
m1_50 [label="storedData.Add(''State'', state.Name)", span="70-70", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.State)", file="CreatingContext.cs"];
m1_53 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.State)", span="55-55", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.State)", file="CreatingContext.cs"];
m1_179 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="172-172", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="CreatingContext.cs"];
m1_180 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                RedisStorage.Prefix + key, expireIn))", span="174-175", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="CreatingContext.cs"];
m1_181 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="172-172", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="CreatingContext.cs"];
m1_65 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="CreatingContext.cs"];
m1_55 [label="Entry HangFire.Common.States.State.Serialize()", span="27-27", cluster="HangFire.Common.States.State.Serialize()", file="CreatingContext.cs"];
m1_16 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                expireIn))", span="36-38", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="CreatingContext.cs"];
m1_17 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                expireIn))", span="40-42", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="CreatingContext.cs"];
m1_18 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="30-30", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="CreatingContext.cs"];
m1_99 [label="Entry Unk.IncrementValue", span="", cluster="Unk.IncrementValue", file="CreatingContext.cs"];
m1_10 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="25-25", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="CreatingContext.cs"];
m1_11 [label="return _transaction.Commit();", span="27-27", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="CreatingContext.cs"];
m1_12 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="25-25", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="CreatingContext.cs"];
m1_13 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="CreatingContext.cs"];
m1_31 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="45-45", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="CreatingContext.cs"];
m1_32 [label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId)))", span="47-48", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="CreatingContext.cs"];
m1_33 [label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId)))", span="49-50", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="CreatingContext.cs"];
m1_34 [label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId)))", span="51-52", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="CreatingContext.cs"];
m1_35 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="45-45", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="CreatingContext.cs"];
m1_24 [label="Entry Unk.ExpireEntryIn", span="", cluster="Unk.ExpireEntryIn", file="CreatingContext.cs"];
m1_133 [label="Entry Unk.AddItemToSortedSet", span="", cluster="Unk.AddItemToSortedSet", file="CreatingContext.cs"];
m1_110 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="113-113", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="CreatingContext.cs"];
m1_111 [label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="115-115", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="CreatingContext.cs"];
m1_112 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="113-113", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="CreatingContext.cs"];
m1_127 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="124-124", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="CreatingContext.cs"];
m1_128 [label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="126-127", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="CreatingContext.cs"];
m1_129 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="124-124", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="CreatingContext.cs"];
m1_140 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="136-136", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="CreatingContext.cs"];
m1_141 [label="_transaction.QueueCommand(x => x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="138-139", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="CreatingContext.cs"];
m1_142 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="136-136", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="CreatingContext.cs"];
m1_54 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="CreatingContext.cs"];
m1_9 [label="Exit HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="53-53", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="CreatingContext.cs"];
m1_167 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", span="161-161", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", file="CreatingContext.cs"];
m1_168 [label="_transaction.QueueCommand(x => x.IncrementValue(\r\n                RedisStorage.Prefix + key))", span="163-164", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", file="CreatingContext.cs"];
m1_169 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", span="161-161", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", file="CreatingContext.cs"];
m1_182 [label="Entry lambda expression", span="174-175", cluster="lambda expression", file="CreatingContext.cs"];
m1_20 [label="Entry lambda expression", span="32-34", cluster="lambda expression", file="CreatingContext.cs"];
m1_21 [label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                expireIn)", span="32-34", cluster="lambda expression", color=green, community=0, file="CreatingContext.cs"];
m1_22 [label="Exit lambda expression", span="32-34", cluster="lambda expression", file="CreatingContext.cs"];
m1_26 [label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                expireIn)", span="36-38", cluster="lambda expression", file="CreatingContext.cs"];
m1_29 [label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                expireIn)", span="40-42", cluster="lambda expression", file="CreatingContext.cs"];
m1_25 [label="Entry lambda expression", span="36-38", cluster="lambda expression", file="CreatingContext.cs"];
m1_37 [label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId))", span="47-48", cluster="lambda expression", file="CreatingContext.cs"];
m1_41 [label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId))", span="49-50", cluster="lambda expression", file="CreatingContext.cs"];
m1_44 [label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId))", span="51-52", cluster="lambda expression", file="CreatingContext.cs"];
m1_59 [label="x.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''State'',\r\n                state.Name)", span="57-60", cluster="lambda expression", file="CreatingContext.cs"];
m1_63 [label="x.RemoveEntry(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId))", span="62-63", cluster="lambda expression", file="CreatingContext.cs"];
m1_67 [label="x.SetRangeInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                storedData)", span="72-74", cluster="lambda expression", file="CreatingContext.cs"];
m1_78 [label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                JobHelper.ToJson(storedData))", span="88-90", cluster="lambda expression", file="CreatingContext.cs"];
m1_91 [label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId)", span="98-99", cluster="lambda expression", file="CreatingContext.cs"];
m1_108 [label="x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn)", span="110-110", cluster="lambda expression", file="CreatingContext.cs"];
m1_125 [label="x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn)", span="121-121", cluster="lambda expression", file="CreatingContext.cs"];
m1_183 [label="x.ExpireEntryIn(\r\n                RedisStorage.Prefix + key, expireIn)", span="174-175", cluster="lambda expression", file="CreatingContext.cs"];
m1_28 [label="Entry lambda expression", span="40-42", cluster="lambda expression", file="CreatingContext.cs"];
m1_36 [label="Entry lambda expression", span="47-48", cluster="lambda expression", file="CreatingContext.cs"];
m1_40 [label="Entry lambda expression", span="49-50", cluster="lambda expression", file="CreatingContext.cs"];
m1_43 [label="Entry lambda expression", span="51-52", cluster="lambda expression", file="CreatingContext.cs"];
m1_58 [label="Entry lambda expression", span="57-60", cluster="lambda expression", file="CreatingContext.cs"];
m1_62 [label="Entry lambda expression", span="62-63", cluster="lambda expression", file="CreatingContext.cs"];
m1_66 [label="Entry lambda expression", span="72-74", cluster="lambda expression", file="CreatingContext.cs"];
m1_77 [label="Entry lambda expression", span="88-90", cluster="lambda expression", file="CreatingContext.cs"];
m1_86 [label="Entry lambda expression", span="95-96", cluster="lambda expression", file="CreatingContext.cs"];
m1_90 [label="Entry lambda expression", span="98-99", cluster="lambda expression", file="CreatingContext.cs"];
m1_96 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="CreatingContext.cs"];
m1_104 [label="Entry lambda expression", span="109-109", cluster="lambda expression", file="CreatingContext.cs"];
m1_107 [label="Entry lambda expression", span="110-110", cluster="lambda expression", file="CreatingContext.cs"];
m1_113 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="CreatingContext.cs"];
m1_121 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="CreatingContext.cs"];
m1_124 [label="Entry lambda expression", span="121-121", cluster="lambda expression", file="CreatingContext.cs"];
m1_130 [label="Entry lambda expression", span="126-127", cluster="lambda expression", file="CreatingContext.cs"];
m1_137 [label="Entry lambda expression", span="132-133", cluster="lambda expression", file="CreatingContext.cs"];
m1_143 [label="Entry lambda expression", span="138-139", cluster="lambda expression", file="CreatingContext.cs"];
m1_150 [label="Entry lambda expression", span="144-145", cluster="lambda expression", file="CreatingContext.cs"];
m1_156 [label="Entry lambda expression", span="150-151", cluster="lambda expression", file="CreatingContext.cs"];
m1_163 [label="Entry lambda expression", span="157-158", cluster="lambda expression", file="CreatingContext.cs"];
m1_170 [label="Entry lambda expression", span="163-164", cluster="lambda expression", file="CreatingContext.cs"];
m1_176 [label="Entry lambda expression", span="169-169", cluster="lambda expression", file="CreatingContext.cs"];
m1_27 [label="Exit lambda expression", span="36-38", cluster="lambda expression", file="CreatingContext.cs"];
m1_30 [label="Exit lambda expression", span="40-42", cluster="lambda expression", file="CreatingContext.cs"];
m1_38 [label="Exit lambda expression", span="47-48", cluster="lambda expression", file="CreatingContext.cs"];
m1_42 [label="Exit lambda expression", span="49-50", cluster="lambda expression", file="CreatingContext.cs"];
m1_45 [label="Exit lambda expression", span="51-52", cluster="lambda expression", file="CreatingContext.cs"];
m1_60 [label="Exit lambda expression", span="57-60", cluster="lambda expression", file="CreatingContext.cs"];
m1_64 [label="Exit lambda expression", span="62-63", cluster="lambda expression", file="CreatingContext.cs"];
m1_68 [label="Exit lambda expression", span="72-74", cluster="lambda expression", file="CreatingContext.cs"];
m1_79 [label="Exit lambda expression", span="88-90", cluster="lambda expression", file="CreatingContext.cs"];
m1_92 [label="Exit lambda expression", span="98-99", cluster="lambda expression", file="CreatingContext.cs"];
m1_109 [label="Exit lambda expression", span="110-110", cluster="lambda expression", file="CreatingContext.cs"];
m1_126 [label="Exit lambda expression", span="121-121", cluster="lambda expression", file="CreatingContext.cs"];
m1_184 [label="Exit lambda expression", span="174-175", cluster="lambda expression", file="CreatingContext.cs"];
m1_87 [label="x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue)", span="95-96", cluster="lambda expression", file="CreatingContext.cs"];
m1_88 [label="Exit lambda expression", span="95-96", cluster="lambda expression", file="CreatingContext.cs"];
m1_97 [label="x.IncrementValue(RedisStorage.Prefix + key)", span="104-104", cluster="lambda expression", file="CreatingContext.cs"];
m1_98 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="CreatingContext.cs"];
m1_105 [label="x.IncrementValue(RedisStorage.Prefix + key)", span="109-109", cluster="lambda expression", file="CreatingContext.cs"];
m1_106 [label="Exit lambda expression", span="109-109", cluster="lambda expression", file="CreatingContext.cs"];
m1_114 [label="x.DecrementValue(RedisStorage.Prefix + key)", span="115-115", cluster="lambda expression", file="CreatingContext.cs"];
m1_115 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="CreatingContext.cs"];
m1_122 [label="x.DecrementValue(RedisStorage.Prefix + key)", span="120-120", cluster="lambda expression", file="CreatingContext.cs"];
m1_123 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="CreatingContext.cs"];
m1_131 [label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="126-127", cluster="lambda expression", file="CreatingContext.cs"];
m1_132 [label="Exit lambda expression", span="126-127", cluster="lambda expression", file="CreatingContext.cs"];
m1_138 [label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score)", span="132-133", cluster="lambda expression", file="CreatingContext.cs"];
m1_139 [label="Exit lambda expression", span="132-133", cluster="lambda expression", file="CreatingContext.cs"];
m1_144 [label="x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="138-139", cluster="lambda expression", file="CreatingContext.cs"];
m1_145 [label="Exit lambda expression", span="138-139", cluster="lambda expression", file="CreatingContext.cs"];
m1_151 [label="x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value)", span="144-145", cluster="lambda expression", file="CreatingContext.cs"];
m1_152 [label="Exit lambda expression", span="144-145", cluster="lambda expression", file="CreatingContext.cs"];
m1_157 [label="x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value)", span="150-151", cluster="lambda expression", file="CreatingContext.cs"];
m1_158 [label="Exit lambda expression", span="150-151", cluster="lambda expression", file="CreatingContext.cs"];
m1_164 [label="x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt)", span="157-158", cluster="lambda expression", file="CreatingContext.cs"];
m1_165 [label="Exit lambda expression", span="157-158", cluster="lambda expression", file="CreatingContext.cs"];
m1_171 [label="x.IncrementValue(\r\n                RedisStorage.Prefix + key)", span="163-164", cluster="lambda expression", file="CreatingContext.cs"];
m1_172 [label="Exit lambda expression", span="163-164", cluster="lambda expression", file="CreatingContext.cs"];
m1_177 [label="x.DecrementValue(RedisStorage.Prefix + key)", span="169-169", cluster="lambda expression", file="CreatingContext.cs"];
m1_178 [label="Exit lambda expression", span="169-169", cluster="lambda expression", file="CreatingContext.cs"];
m1_134 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="130-130", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="CreatingContext.cs"];
m1_135 [label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score))", span="132-133", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="CreatingContext.cs"];
m1_136 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="130-130", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="CreatingContext.cs"];
m1_173 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", span="167-167", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", file="CreatingContext.cs"];
m1_174 [label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="169-169", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", file="CreatingContext.cs"];
m1_175 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", span="167-167", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", file="CreatingContext.cs"];
m1_76 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="CreatingContext.cs"];
m1_93 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="102-102", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="CreatingContext.cs"];
m1_94 [label="_transaction.QueueCommand(x => x.IncrementValue(RedisStorage.Prefix + key))", span="104-104", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="CreatingContext.cs"];
m1_95 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="102-102", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="CreatingContext.cs"];
m1_159 [label="Entry Unk.RemoveItemFromList", span="", cluster="Unk.RemoveItemFromList", file="CreatingContext.cs"];
m1_15 [label="Entry Unk.UnregisterObject", span="", cluster="Unk.UnregisterObject", color=green, community=0, file="CreatingContext.cs"];
m1_14 [label="Entry HangFire.BackgroundJobServer.Dispose()", span="76-76", cluster="HangFire.BackgroundJobServer.Dispose()", file="CreatingContext.cs"];
m1_82 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="93-93", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="CreatingContext.cs"];
m1_83 [label="_transaction.QueueCommand(x => x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue))", span="95-96", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="CreatingContext.cs"];
m1_84 [label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId))", span="98-99", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="CreatingContext.cs"];
m1_85 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="93-93", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="CreatingContext.cs"];
m1_80 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="CreatingContext.cs"];
m1_39 [label="Entry Unk.Persist", span="", cluster="Unk.Persist", file="CreatingContext.cs"];
m1_3 [label="_transaction = transaction", span="17-17", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="CreatingContext.cs"];
m1_19 [label="HangFire.Web.AspNetBackgroundJobServer", span="", cluster="Unk.QueueCommand", file="CreatingContext.cs"];
m1_116 [label="Entry Unk.DecrementValue", span="", cluster="Unk.DecrementValue", file="CreatingContext.cs"];
m1_166 [label="Entry Unk.TrimList", span="", cluster="Unk.TrimList", file="CreatingContext.cs"];
m1_153 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="148-148", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="CreatingContext.cs"];
m1_154 [label="_transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value))", span="150-151", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="CreatingContext.cs"];
m1_155 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="148-148", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="CreatingContext.cs"];
m1_146 [label="Entry Unk.RemoveItemFromSortedSet", span="", cluster="Unk.RemoveItemFromSortedSet", file="CreatingContext.cs"];
m1_185 [label="HangFire.Redis.RedisWriteOnlyTransaction", span="", file="CreatingContext.cs"];
m1_186 [label=string, span="", file="CreatingContext.cs"];
m1_187 [label="System.TimeSpan", span="", file="CreatingContext.cs"];
m1_188 [label=string, span="", file="CreatingContext.cs"];
m1_189 [label=string, span="", file="CreatingContext.cs"];
m1_190 [label="HangFire.Common.States.State", span="", file="CreatingContext.cs"];
m1_191 [label=storedData, span="", file="CreatingContext.cs"];
m1_192 [label=string, span="", file="CreatingContext.cs"];
m1_193 [label=storedData, span="", file="CreatingContext.cs"];
m1_194 [label=string, span="", file="CreatingContext.cs"];
m1_195 [label=string, span="", file="CreatingContext.cs"];
m1_197 [label=string, span="", file="CreatingContext.cs"];
m1_198 [label="System.TimeSpan", span="", file="CreatingContext.cs"];
m1_200 [label=string, span="", file="CreatingContext.cs"];
m1_201 [label="System.TimeSpan", span="", file="CreatingContext.cs"];
m1_218 [label=string, span="", file="CreatingContext.cs"];
m1_219 [label="System.TimeSpan", span="", file="CreatingContext.cs"];
m1_196 [label=string, span="", file="CreatingContext.cs"];
m1_199 [label=string, span="", file="CreatingContext.cs"];
m1_202 [label=string, span="", file="CreatingContext.cs"];
m1_203 [label=string, span="", file="CreatingContext.cs"];
m1_204 [label=string, span="", file="CreatingContext.cs"];
m1_205 [label=string, span="", file="CreatingContext.cs"];
m1_206 [label=double, span="", file="CreatingContext.cs"];
m1_207 [label=string, span="", file="CreatingContext.cs"];
m1_208 [label=string, span="", file="CreatingContext.cs"];
m1_209 [label=string, span="", file="CreatingContext.cs"];
m1_210 [label=string, span="", file="CreatingContext.cs"];
m1_211 [label=string, span="", file="CreatingContext.cs"];
m1_212 [label=string, span="", file="CreatingContext.cs"];
m1_213 [label=string, span="", file="CreatingContext.cs"];
m1_214 [label=int, span="", file="CreatingContext.cs"];
m1_215 [label=int, span="", file="CreatingContext.cs"];
m1_216 [label=string, span="", file="CreatingContext.cs"];
m1_217 [label=string, span="", file="CreatingContext.cs"];
m2_8 [label="Entry HangFire.States.EnqueuedState.Apply(IRedisTransaction, string)", span="29-29", cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction, string)", file="DefaultJobCreationProcess.cs"];
m2_9 [label="transaction.QueueCommand(x => x.AddItemToSet(''hangfire:queues'', Queue))", span="31-31", cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction, string)", file="DefaultJobCreationProcess.cs"];
m2_10 [label="transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', Queue), jobId))", span="32-33", cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction, string)", file="DefaultJobCreationProcess.cs"];
m2_11 [label="Exit HangFire.States.EnqueuedState.Apply(IRedisTransaction, string)", span="29-29", cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction, string)", file="DefaultJobCreationProcess.cs"];
m2_6 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DefaultJobCreationProcess.cs"];
m2_21 [label="Entry Unk.EnqueueItemOnList", span="", cluster="Unk.EnqueueItemOnList", file="DefaultJobCreationProcess.cs"];
m2_20 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="DefaultJobCreationProcess.cs"];
m2_12 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="DefaultJobCreationProcess.cs"];
m2_3 [label="Exit HangFire.Tests.CustomJob.Perform()", span="10-10", cluster="HangFire.Tests.CustomJob.Perform()", file="DefaultJobCreationProcess.cs"];
m2_4 [label="HangFire.Tests.CustomJob", span="", cluster="HangFire.States.EnqueuedState.GetProperties()", color=green, community=0, file="DefaultJobCreationProcess.cs"];
m2_5 [label="Exit HangFire.States.EnqueuedState.GetProperties()", span="20-20", cluster="HangFire.States.EnqueuedState.GetProperties()", file="DefaultJobCreationProcess.cs"];
m2_0 [label="Entry HangFire.Tests.CustomJob.Perform()", span="10-10", cluster="HangFire.Tests.CustomJob.Perform()", file="DefaultJobCreationProcess.cs"];
m2_1 [label="LastArticleId = ArticleId", span="12-12", cluster="HangFire.Tests.CustomJob.Perform()", file="DefaultJobCreationProcess.cs"];
m2_2 [label="LastAuthor = Author", span="13-13", cluster="HangFire.Tests.CustomJob.Perform()", file="DefaultJobCreationProcess.cs"];
m2_16 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="DefaultJobCreationProcess.cs"];
m2_17 [label="Entry lambda expression", span="32-33", cluster="lambda expression", file="DefaultJobCreationProcess.cs"];
m2_14 [label="x.AddItemToSet(''hangfire:queues'', Queue)", span="31-31", cluster="lambda expression", file="DefaultJobCreationProcess.cs"];
m2_18 [label="x.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', Queue), jobId)", span="32-33", cluster="lambda expression", file="DefaultJobCreationProcess.cs"];
m2_13 [label="Entry lambda expression", span="31-31", cluster="lambda expression", file="DefaultJobCreationProcess.cs"];
m2_15 [label="Exit lambda expression", span="31-31", cluster="lambda expression", file="DefaultJobCreationProcess.cs"];
m2_19 [label="Exit lambda expression", span="32-33", cluster="lambda expression", file="DefaultJobCreationProcess.cs"];
m2_7 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="51-51", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="DefaultJobCreationProcess.cs"];
m2_22 [label="HangFire.States.EnqueuedState", span="", file="DefaultJobCreationProcess.cs"];
m2_23 [label=string, span="", file="DefaultJobCreationProcess.cs"];
m3_0 [label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="22-22", cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="IStateMachine.cs"];
m3_1 [label="Exit Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="22-22", cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="IStateMachine.cs"];
m4_2 [label="Entry Hangfire.States.IStateMachineFactory.CreateProcess()", span="23-23", cluster="Hangfire.States.IStateMachineFactory.CreateProcess()", file="IStateMachineFactory.cs"];
m4_3 [label="Exit Hangfire.States.IStateMachineFactory.CreateProcess()", span="23-23", cluster="Hangfire.States.IStateMachineFactory.CreateProcess()", file="IStateMachineFactory.cs"];
m4_0 [label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22", cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="IStateMachineFactory.cs"];
m4_1 [label="Exit Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22", cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="IStateMachineFactory.cs"];
m5_9 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="StateMachine.cs"];
m5_10 [label="Entry RedisConnection.cstr", span="", cluster="RedisConnection.cstr", file="StateMachine.cs"];
m5_12 [label="x.CreateTransaction()", span="21-21", cluster="lambda expression", file="StateMachine.cs"];
m5_14 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="StateMachine.cs"];
m5_17 [label="Assert.Equal(''connection'', exception.ParamName)", span="32-32", cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachine.cs"];
m5_18 [label="Exit HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="27-27", cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachine.cs"];
m5_19 [label="Entry Unk.>", span="", cluster="Unk.>", file="StateMachine.cs"];
m5_11 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="StateMachine.cs"];
m5_13 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="StateMachine.cs"];
m5_15 [label="Entry HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="27-27", cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachine.cs"];
m5_16 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RedisProcessingJob(null, JobId, Queue))", span="29-30", cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachine.cs"];
m5_20 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="StateMachine.cs"];
m5_21 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="StateMachine.cs"];
m5_8 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="StateMachine.cs"];
m5_54 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="StateMachine.cs"];
m5_32 [label="throw new ArgumentException(''From states array should be null or non-empty.'', ''fromStates'');", span="69-69", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m5_34 [label="var jobData = _connection.GetJobData(jobId)", span="80-80", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m5_33 [label="_connection.AcquireDistributedJobLock(jobId, JobLockTimeout)", span="78-78", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m5_35 [label="jobData == null", span="82-82", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m5_25 [label="Entry Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="127-127", cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m5_27 [label="jobId == null", span="65-65", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", color=green, community=0, file="StateMachine.cs"];
m5_26 [label="Entry Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="62-62", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m5_28 [label="throw new ArgumentNullException(''jobId'');", span="65-65", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m5_52 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="StateMachine.cs"];
m5_67 [label="Entry Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", span="30-30", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", file="StateMachine.cs"];
m5_68 [label="Entry Hangfire.States.IStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", span="22-22", cluster="Hangfire.States.IStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="StateMachine.cs"];
m5_45 [label="var context = new StateContext(jobId, jobData.Job, jobData.CreatedAt)", span="120-120", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m5_46 [label="var stateChanged = ChangeState(context, toState, jobData.State)", span="121-121", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m5_48 [label="Exit Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="62-62", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m5_47 [label="return loadSucceeded && stateChanged;", span="123-123", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m5_49 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="StateMachine.cs"];
m5_22 [label="new RedisProcessingJob(null, JobId, Queue)", span="30-30", cluster="lambda expression", file="StateMachine.cs"];
m5_24 [label="Entry HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", span="25-25", cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", file="StateMachine.cs"];
m5_55 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="StateMachine.cs"];
m5_23 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="StateMachine.cs"];
m5_6 [label="_stateChangeProcess = stateChangeProcess", span="37-37", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m5_50 [label="Entry HangFire.Redis.RedisProcessingJob.Dispose()", span="40-40", cluster="HangFire.Redis.RedisProcessingJob.Dispose()", file="StateMachine.cs"];
m5_69 [label="Entry Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", span="24-24", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", file="StateMachine.cs"];
m5_44 [label="loadSucceeded = false", span="116-116", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m5_56 [label="var electStateContext = new ElectStateContext(context, _connection, this, toState, oldStateName)", span="131-131", cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m5_57 [label="_stateChangeProcess.ElectState(_connection, electStateContext)", span="132-132", cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m5_77 [label="Entry Hangfire.States.IStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext, bool)", span="23-23", cluster="Hangfire.States.IStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext, bool)", file="StateMachine.cs"];
m5_76 [label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27", cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", file="StateMachine.cs"];
m5_51 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="StateMachine.cs"];
m5_29 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="StateMachine.cs"];
m5_31 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="StateMachine.cs"];
m5_37 [label="new RedisProcessingJob(_redisConnection, JobId, null)", span="48-48", cluster="lambda expression", file="StateMachine.cs"];
m5_42 [label="Assert.Equal(Queue, processingJob.Queue)", span="59-59", cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="StateMachine.cs"];
m5_43 [label="Exit HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="54-54", cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="StateMachine.cs"];
m5_30 [label="new RedisProcessingJob(_redisConnection, null, Queue)", span="39-39", cluster="lambda expression", file="StateMachine.cs"];
m5_40 [label="var processingJob = CreateProcessingJob()", span="56-56", cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="StateMachine.cs"];
m5_36 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="StateMachine.cs"];
m5_38 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="StateMachine.cs"];
m5_39 [label="Entry HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="54-54", cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="StateMachine.cs"];
m5_41 [label="Assert.Equal(JobId, processingJob.JobId)", span="58-58", cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="StateMachine.cs"];
m5_7 [label="Exit Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", span="31-31", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m5_0 [label="Entry Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", span="31-31", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m5_1 [label="connection == null", span="33-33", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m5_2 [label="throw new ArgumentNullException(''connection'');", span="33-33", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m5_3 [label="stateChangeProcess == null", span="34-34", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m5_4 [label="throw new ArgumentNullException(''stateChangeProcess'');", span="34-34", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m5_5 [label="_connection = connection", span="36-36", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m5_78 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54", cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="StateMachine.cs"];
m5_53 [label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29", cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="StateMachine.cs"];
m5_58 [label="HangFire.Redis.Tests.RedisProcessingJobFacts", span="", cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m5_63 [label="var applyStateContext = new ApplyStateContext(context, failedState, oldStateName, Enumerable.Empty<IState>())", span="152-152", cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m5_59 [label="ApplyState(applyStateContext, true)", span="140-140", cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m5_60 [label="return true;", span="143-143", cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m5_61 [label=Exception, span="145-145", cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m5_62 [label="var failedState = new FailedState(ex)\r\n                {\r\n                    Reason = ''An exception occurred during the transition of job's state''\r\n                }", span="147-150", cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m5_64 [label="ApplyState(applyStateContext, false)", span="156-156", cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m5_65 [label="return false;", span="159-159", cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m5_66 [label="Exit Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="127-127", cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m5_70 [label="Entry Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", span="163-163", cluster="Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", file="StateMachine.cs"];
m5_72 [label="var transaction = _connection.CreateWriteTransaction()", span="165-165", cluster="Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", file="StateMachine.cs"];
m5_73 [label="_stateChangeProcess.ApplyState(transaction, context, useFilters)", span="167-167", cluster="Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", file="StateMachine.cs"];
m5_74 [label="transaction.Commit()", span="169-169", cluster="Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", file="StateMachine.cs"];
m5_75 [label="Exit Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", span="163-163", cluster="Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", file="StateMachine.cs"];
m5_71 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="StateMachine.cs"];
m5_79 [label="Hangfire.States.StateMachine", span="", file="StateMachine.cs"];
m6_7 [label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="79-79", cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="StateMachineFactory.cs"];
m6_32 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateMachineFactory.cs"];
m6_34 [label="Entry HangFire.BackgroundJob.CreateInternal(System.Type, System.Linq.Expressions.MethodCallExpression, HangFire.Common.States.JobState)", span="223-223", cluster="HangFire.BackgroundJob.CreateInternal(System.Type, System.Linq.Expressions.MethodCallExpression, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_54 [label="var arguments = GetArguments(callExpression)", span="225-225", cluster="HangFire.BackgroundJob.CreateInternal(System.Type, System.Linq.Expressions.MethodCallExpression, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_56 [label="var data = new JobMethod(type, callExpression.Method)", span="229-229", cluster="HangFire.BackgroundJob.CreateInternal(System.Type, System.Linq.Expressions.MethodCallExpression, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_57 [label="return client.CreateJob(data, arguments, state);", span="230-230", cluster="HangFire.BackgroundJob.CreateInternal(System.Type, System.Linq.Expressions.MethodCallExpression, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_55 [label="var client = ClientFactory()", span="227-227", cluster="HangFire.BackgroundJob.CreateInternal(System.Type, System.Linq.Expressions.MethodCallExpression, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_58 [label="Exit HangFire.BackgroundJob.CreateInternal(System.Type, System.Linq.Expressions.MethodCallExpression, HangFire.Common.States.JobState)", span="223-223", cluster="HangFire.BackgroundJob.CreateInternal(System.Type, System.Linq.Expressions.MethodCallExpression, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_21 [label="return Create(methodCall, CreateScheduledState(delay));", span="141-141", cluster="HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", file="StateMachineFactory.cs"];
m6_8 [label="return Create(methodCall, CreateEnqueuedState());", span="81-81", cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="StateMachineFactory.cs"];
m6_59 [label="Entry HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="234-234", cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateMachineFactory.cs"];
m6_63 [label="var arguments = callExpression.Arguments.Select(GetArgumentValue).ToArray()", span="236-236", cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateMachineFactory.cs"];
m6_64 [label="var serializedArguments = new List<string>(arguments.Length)", span="238-238", cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateMachineFactory.cs"];
m6_65 [label=arguments, span="239-239", cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateMachineFactory.cs"];
m6_70 [label="serializedArguments.Add(value)", span="253-253", cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateMachineFactory.cs"];
m6_71 [label="return serializedArguments.ToArray();", span="256-256", cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateMachineFactory.cs"];
m6_66 [label="string value = null", span="241-241", cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateMachineFactory.cs"];
m6_67 [label="argument != null", span="243-243", cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateMachineFactory.cs"];
m6_68 [label="var converter = TypeDescriptor.GetConverter(argument.GetType())", span="245-245", cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateMachineFactory.cs"];
m6_69 [label="value = converter.ConvertToInvariantString(argument)", span="246-246", cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateMachineFactory.cs"];
m6_72 [label="Exit HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="234-234", cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateMachineFactory.cs"];
m6_78 [label="Entry Unk.ConvertToInvariantString", span="", cluster="Unk.ConvertToInvariantString", file="StateMachineFactory.cs"];
m6_10 [label="Entry HangFire.BackgroundJob.CreateEnqueuedState()", span="208-208", cluster="HangFire.BackgroundJob.CreateEnqueuedState()", file="StateMachineFactory.cs"];
m6_62 [label="Entry HangFire.Client.IJobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", span="24-24", cluster="HangFire.Client.IJobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_0 [label="Entry HangFire.BackgroundJob.Perform()", span="35-35", cluster="HangFire.BackgroundJob.Perform()", file="StateMachineFactory.cs"];
m6_3 [label="new JobClient(JobStorage.Current.GetConnection())", span="38-38", cluster="lambda expression", file="StateMachineFactory.cs", color=red, community=0];
m6_4 [label="Exit lambda expression", span="38-38", cluster="lambda expression", file="StateMachineFactory.cs"];
m6_5 [label="Entry HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection)", span="41-41", cluster="HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection)", file="StateMachineFactory.cs"];
m6_1 [label="Exit HangFire.BackgroundJob.Perform()", span="35-35", cluster="HangFire.BackgroundJob.Perform()", file="StateMachineFactory.cs"];
m6_2 [label="Entry lambda expression", span="38-38", cluster="lambda expression", file="StateMachineFactory.cs"];
m6_6 [label="Entry HangFire.JobStorage.GetConnection()", span="45-45", cluster="HangFire.JobStorage.GetConnection()", file="StateMachineFactory.cs"];
m6_20 [label="Exit Hangfire.States.StateMachineFactory.CreateProcess()", span="42-42", cluster="Hangfire.States.StateMachineFactory.CreateProcess()", file="StateMachineFactory.cs"];
m6_22 [label="Hangfire.States.StateMachineFactory", span="", cluster="HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", file="StateMachineFactory.cs"];
m6_46 [label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="26-26", cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="StateMachineFactory.cs"];
m6_61 [label="Entry HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", span="48-48", cluster="HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", file="StateMachineFactory.cs"];
m6_12 [label="connection == null", span="36-36", cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs"];
m6_13 [label="throw new ArgumentNullException(''connection'');", span="36-36", cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs"];
m6_14 [label="var process = CreateProcess()", span="38-38", cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs", color=green, community=0];
m6_19 [label="return new DefaultStateChangeProcess(_handlers);", span="44-44", cluster="Hangfire.States.StateMachineFactory.CreateProcess()", file="StateMachineFactory.cs"];
m6_47 [label="return CreateScheduledState(DateTime.UtcNow.Add(delay));", span="215-215", cluster="HangFire.BackgroundJob.CreateScheduledState(System.TimeSpan)", file="StateMachineFactory.cs"];
m6_48 [label="Exit HangFire.BackgroundJob.CreateScheduledState(System.TimeSpan)", span="213-213", cluster="HangFire.BackgroundJob.CreateScheduledState(System.TimeSpan)", file="StateMachineFactory.cs"];
m6_44 [label="return new EnqueuedState();", span="210-210", cluster="HangFire.BackgroundJob.CreateEnqueuedState()", file="StateMachineFactory.cs"];
m6_45 [label="Exit HangFire.BackgroundJob.CreateEnqueuedState()", span="208-208", cluster="HangFire.BackgroundJob.CreateEnqueuedState()", file="StateMachineFactory.cs"];
m6_74 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="StateMachineFactory.cs"];
m6_11 [label="Entry HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", span="159-159", cluster="HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_15 [label="Entry HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", span="191-191", cluster="HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_16 [label="Entry HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="119-119", cluster="HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="StateMachineFactory.cs"];
m6_49 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="StateMachineFactory.cs"];
m6_50 [label="Entry HangFire.BackgroundJob.CreateScheduledState(System.DateTime)", span="218-218", cluster="HangFire.BackgroundJob.CreateScheduledState(System.DateTime)", file="StateMachineFactory.cs"];
m6_51 [label="return new ScheduledState(utcDateTime);", span="220-220", cluster="HangFire.BackgroundJob.CreateScheduledState(System.DateTime)", file="StateMachineFactory.cs"];
m6_52 [label="Exit HangFire.BackgroundJob.CreateScheduledState(System.DateTime)", span="218-218", cluster="HangFire.BackgroundJob.CreateScheduledState(System.DateTime)", file="StateMachineFactory.cs"];
m6_9 [label="Exit HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="79-79", cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="StateMachineFactory.cs"];
m6_80 [label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0", cluster="System.Collections.Generic.List<T>.ToArray()", file="StateMachineFactory.cs"];
m6_17 [label="return Create(methodCall, CreateScheduledState(delay));", span="121-121", cluster="HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="StateMachineFactory.cs"];
m6_18 [label="Entry Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", span="31-31", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachineFactory.cs"];
m6_81 [label="Entry HangFire.BackgroundJob.GetArgumentValue(System.Linq.Expressions.Expression)", span="259-259", cluster="HangFire.BackgroundJob.GetArgumentValue(System.Linq.Expressions.Expression)", file="StateMachineFactory.cs"];
m6_82 [label="var constantExpression = expression as ConstantExpression", span="261-261", cluster="HangFire.BackgroundJob.GetArgumentValue(System.Linq.Expressions.Expression)", file="StateMachineFactory.cs"];
m6_85 [label="return CachedExpressionCompiler.Evaluate(expression);", span="268-268", cluster="HangFire.BackgroundJob.GetArgumentValue(System.Linq.Expressions.Expression)", file="StateMachineFactory.cs"];
m6_83 [label="constantExpression != null", span="263-263", cluster="HangFire.BackgroundJob.GetArgumentValue(System.Linq.Expressions.Expression)", file="StateMachineFactory.cs"];
m6_84 [label="return constantExpression.Value;", span="265-265", cluster="HangFire.BackgroundJob.GetArgumentValue(System.Linq.Expressions.Expression)", file="StateMachineFactory.cs"];
m6_86 [label="Exit HangFire.BackgroundJob.GetArgumentValue(System.Linq.Expressions.Expression)", span="259-259", cluster="HangFire.BackgroundJob.GetArgumentValue(System.Linq.Expressions.Expression)", file="StateMachineFactory.cs"];
m6_23 [label="methodCall == null", span="161-161", cluster="HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_25 [label="state == null", span="162-162", cluster="HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_27 [label="var callExpression = methodCall.Body as MethodCallExpression", span="164-164", cluster="HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_30 [label="return CreateInternal(callExpression.Method.DeclaringType, callExpression, state);", span="172-172", cluster="HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_24 [label="throw new ArgumentNullException(''methodCall'');", span="161-161", cluster="HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_26 [label="throw new ArgumentNullException(''state'');", span="162-162", cluster="HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_28 [label="callExpression == null", span="165-165", cluster="HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_29 [label="throw new ArgumentException(''Должен указывать на метод'', ''methodCall'');", span="167-167", cluster="HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_31 [label="Exit HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", span="159-159", cluster="HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_73 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="StateMachineFactory.cs"];
m6_77 [label="Entry Unk.GetConverter", span="", cluster="Unk.GetConverter", file="StateMachineFactory.cs"];
m6_76 [label="Entry Unk.GetType", span="", cluster="Unk.GetType", file="StateMachineFactory.cs"];
m6_53 [label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="28-28", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="StateMachineFactory.cs"];
m6_33 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="StateMachineFactory.cs"];
m6_75 [label="Entry List<string>.cstr", span="", cluster="List<string>.cstr", file="StateMachineFactory.cs"];
m6_79 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="StateMachineFactory.cs"];
m6_35 [label="methodCall == null", span="193-193", cluster="HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_37 [label="state == null", span="194-194", cluster="HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_39 [label="var callExpression = methodCall.Body as MethodCallExpression", span="196-196", cluster="HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_42 [label="return CreateInternal(typeof(TJob), callExpression, state);", span="205-205", cluster="HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_36 [label="throw new ArgumentNullException(''methodCall'');", span="193-193", cluster="HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_38 [label="throw new ArgumentNullException(''state'');", span="194-194", cluster="HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_40 [label="callExpression == null", span="197-197", cluster="HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_41 [label="throw new ArgumentException(''Должен указывать на метод'', ''methodCall'');", span="199-199", cluster="HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_43 [label="Exit HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", span="191-191", cluster="HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", file="StateMachineFactory.cs"];
m6_87 [label="Entry HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", span="39-39", cluster="HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="StateMachineFactory.cs"];
m6_60 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="StateMachineFactory.cs"];
m7_97 [label="Entry Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="42-42", cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="StateMachineFacts.cs"];
m7_129 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", span="151-151", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", file="StateMachineFacts.cs"];
m7_130 [label="var stateMachine = CreateStateMachine()", span="153-153", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", file="StateMachineFacts.cs"];
m7_131 [label="Assert.Equal(JobId, stateMachine.CreateJob(_job, _parameters, _state.Object))", span="154-154", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", file="StateMachineFacts.cs"];
m7_132 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", span="151-151", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", file="StateMachineFacts.cs"];
m7_220 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", span="275-275", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="StateMachineFacts.cs"];
m7_221 [label="_process.Setup(x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true))\r\n                .Throws(new Exception())", span="278-279", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="StateMachineFacts.cs"];
m7_222 [label="var stateMachine = CreateStateMachine()", span="281-281", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="StateMachineFacts.cs"];
m7_223 [label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="284-284", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="StateMachineFacts.cs"];
m7_224 [label="_process.Verify(x => x.ApplyState(_transaction.Object, It.IsNotNull<ApplyStateContext>(), false))", span="287-287", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="StateMachineFacts.cs"];
m7_225 [label="Assert.False(result)", span="289-289", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="StateMachineFacts.cs"];
m7_226 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", span="275-275", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="StateMachineFacts.cs"];
m7_105 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="StateMachineFacts.cs"];
m7_17 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="StateMachineFacts.cs"];
m7_58 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", span="68-68", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="StateMachineFacts.cs"];
m7_59 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(_connection.Object, null))", span="70-71", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="StateMachineFacts.cs"];
m7_60 [label="Assert.Equal(''stateChangeProcess'', exception.ParamName)", span="73-73", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="StateMachineFacts.cs"];
m7_61 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", span="68-68", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="StateMachineFacts.cs"];
m7_71 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="StateMachineFacts.cs"];
m7_253 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", span="319-319", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m7_254 [label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = null,\r\n                    LoadException = new JobLoadException(''asd'', new Exception())\r\n                })", span="322-328", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m7_255 [label="_state.Setup(x => x.IgnoreJobLoadException).Returns(true)", span="330-330", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m7_256 [label="var stateMachine = CreateStateMachine()", span="332-332", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m7_257 [label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="335-335", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m7_258 [label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object),\r\n                true))", span="338-341", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m7_259 [label="Assert.True(result)", span="343-343", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m7_260 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", span="319-319", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m7_21 [label="Entry Mock<IWriteOnlyTransaction>.cstr", span="", cluster="Mock<IWriteOnlyTransaction>.cstr", file="StateMachineFacts.cs"];
m7_43 [label="Entry Unk.GetJobData", span="", cluster="Unk.GetJobData", file="StateMachineFacts.cs"];
m7_0 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="25-25", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m7_1 [label="_process = new Mock<IStateChangeProcess>()", span="27-27", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m7_53 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="StateMachineFacts.cs"];
m7_227 [label="Entry System.Exception.Exception()", span="0-0", cluster="System.Exception.Exception()", file="StateMachineFacts.cs"];
m7_2 [label="_job = Job.FromExpression(() => Console.WriteLine())", span="29-29", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m7_3 [label="_parameters = new Dictionary<string, string>()", span="30-30", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m7_4 [label="_state = new Mock<IState>()", span="31-31", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m7_5 [label="_state.Setup(x => x.Name).Returns(StateName)", span="32-32", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m7_6 [label="_connection = new Mock<IStorageConnection>()", span="34-34", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m7_7 [label="_transaction = new Mock<IWriteOnlyTransaction>()", span="35-35", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m7_8 [label="_connection.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="37-37", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m7_9 [label="_connection.Setup(x => x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>())).Returns(JobId)", span="39-43", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m7_10 [label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = _job\r\n                })", span="45-50", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m7_11 [label="_distributedLock = new Mock<IDisposable>()", span="52-52", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m7_12 [label="_connection\r\n                .Setup(x => x.AcquireDistributedLock(String.Format(''job:{0}:state-lock'', JobId), It.IsAny<TimeSpan>()))\r\n                .Returns(_distributedLock.Object)", span="53-55", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m7_13 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="25-25", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m7_301 [label="Entry Unk.ElectState", span="", cluster="Unk.ElectState", file="StateMachineFacts.cs"];
m7_47 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="StateMachineFacts.cs"];
m7_243 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="StateMachineFacts.cs"];
m7_151 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", span="180-180", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="StateMachineFacts.cs"];
m7_152 [label="var stateMachine = CreateStateMachine()", span="182-182", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="StateMachineFacts.cs"];
m7_153 [label="var exception = Assert.Throws<ArgumentException>(\r\n                () => stateMachine.ChangeState(JobId, _state.Object, new string[0]))", span="184-185", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="StateMachineFacts.cs"];
m7_154 [label="Assert.Equal(''fromStates'', exception.ParamName)", span="187-187", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="StateMachineFacts.cs"];
m7_155 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", span="180-180", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="StateMachineFacts.cs"];
m7_38 [label="Entry Unk.>", span="", cluster="Unk.>", file="StateMachineFacts.cs"];
m7_39 [label="Entry Unk.CreateExpiredJob", span="", cluster="Unk.CreateExpiredJob", file="StateMachineFacts.cs"];
m7_273 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", span="347-347", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="StateMachineFacts.cs"];
m7_274 [label="var machine = CreateStateMachine()", span="350-350", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="StateMachineFacts.cs"];
m7_275 [label="var result = machine.ChangeState(JobId, _state.Object, new[] { OldStateName })", span="353-353", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="StateMachineFacts.cs"];
m7_276 [label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object && ctx.OldStateName == OldStateName\r\n                    && ctx.Job == _job && ctx.JobId == JobId),\r\n                true))", span="356-360", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="StateMachineFacts.cs"];
m7_277 [label="_transaction.Verify(x => x.Commit())", span="362-362", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="StateMachineFacts.cs"];
m7_278 [label="Assert.True(result)", span="364-364", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="StateMachineFacts.cs"];
m7_279 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", span="347-347", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="StateMachineFacts.cs"];
m7_182 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", span="220-220", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="StateMachineFacts.cs"];
m7_183 [label="var stateMachine = CreateStateMachine()", span="223-223", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="StateMachineFacts.cs"];
m7_184 [label="stateMachine.ChangeState(JobId, _state.Object, null)", span="226-226", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="StateMachineFacts.cs"];
m7_185 [label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object && ctx.OldStateName == OldStateName),\r\n                true))", span="229-232", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="StateMachineFacts.cs"];
m7_186 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", span="220-220", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="StateMachineFacts.cs"];
m7_57 [label="Entry StateMachine.cstr", span="", cluster="StateMachine.cstr", file="StateMachineFacts.cs"];
m7_201 [label="Entry Unk.False", span="", cluster="Unk.False", file="StateMachineFacts.cs"];
m7_89 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="109-109", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs"];
m7_90 [label="var stateMachine = CreateStateMachine()", span="111-111", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs"];
m7_91 [label="var exception = Assert.Throws<ArgumentNullException> (\r\n                () => stateMachine.CreateJob(_job, _parameters, null))", span="113-114", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs"];
m7_92 [label="Assert.Equal(''state'', exception.ParamName)", span="116-116", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs"];
m7_93 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="109-109", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs"];
m7_49 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="59-59", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachineFacts.cs"];
m7_50 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(null, _process.Object))", span="61-62", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachineFacts.cs"];
m7_51 [label="Assert.Equal(''connection'', exception.ParamName)", span="64-64", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachineFacts.cs"];
m7_52 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="59-59", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachineFacts.cs"];
m7_117 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", span="137-137", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs"];
m7_118 [label="var stateMachine = CreateStateMachine()", span="139-139", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs"];
m7_119 [label="stateMachine.CreateJob(_job, _parameters, _state.Object)", span="141-141", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs"];
m7_120 [label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(sc => sc.JobId == JobId && sc.Job == _job\r\n                    && sc.NewState == _state.Object && sc.OldStateName == null),\r\n                true))", span="143-147", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs"];
m7_121 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", span="137-137", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs"];
m7_65 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", span="77-77", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", file="StateMachineFacts.cs"];
m7_66 [label="var stateMachine = CreateStateMachine()", span="79-79", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", color=green, community=0, file="StateMachineFacts.cs"];
m7_67 [label="var result = stateMachine.Process", span="81-81", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", color=green, community=0, file="StateMachineFacts.cs"];
m7_68 [label="Assert.Same(_process.Object, result)", span="83-83", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", color=green, community=0, file="StateMachineFacts.cs"];
m7_69 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", span="77-77", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", file="StateMachineFacts.cs"];
m7_27 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="StateMachineFacts.cs"];
m7_159 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", span="191-191", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs"];
m7_160 [label="var stateMachine = CreateStateMachine()", span="193-193", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs"];
m7_161 [label="stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="195-195", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs"];
m7_162 [label="_distributedLock.Verify(x => x.Dispose())", span="197-197", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs"];
m7_163 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", span="191-191", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs"];
m7_14 [label="Entry Mock<IStateChangeProcess>.cstr", span="", cluster="Mock<IStateChangeProcess>.cstr", file="StateMachineFacts.cs"];
m7_141 [label="Entry Unk.ChangeState", span="", cluster="Unk.ChangeState", file="StateMachineFacts.cs"];
m7_150 [label="Entry Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="64-64", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachineFacts.cs"];
m7_319 [label="Entry System.NotSupportedException.NotSupportedException()", span="0-0", cluster="System.NotSupportedException.NotSupportedException()", file="StateMachineFacts.cs"];
m7_70 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="412-412", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="StateMachineFacts.cs"];
m7_329 [label="return new StateMachine(\r\n                _connection.Object,\r\n                _process.Object);", span="414-416", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="StateMachineFacts.cs"];
m7_330 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="412-412", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="StateMachineFacts.cs"];
m7_16 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateMachineFacts.cs"];
m7_142 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", span="169-169", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs"];
m7_143 [label="var stateMachine = CreateStateMachine()", span="171-171", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs"];
m7_144 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.ChangeState(JobId, null, FromOldState))", span="173-174", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs"];
m7_145 [label="Assert.Equal(''toState'', exception.ParamName)", span="176-176", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs"];
m7_146 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", span="169-169", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs"];
m7_18 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="StateMachineFacts.cs"];
m7_311 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", span="389-389", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="StateMachineFacts.cs"];
m7_313 [label="_process.Setup(\r\n                x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true))\r\n                .Throws(exception)", span="394-396", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="StateMachineFacts.cs"];
m7_314 [label="var machine = CreateStateMachine()", span="398-398", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="StateMachineFacts.cs"];
m7_315 [label="var result = machine.ChangeState(JobId, _state.Object, new[] { OldStateName })", span="401-401", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="StateMachineFacts.cs"];
m7_316 [label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState is FailedState && ((FailedState)ctx.NewState).Exception == exception),\r\n                false))", span="404-407", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="StateMachineFacts.cs"];
m7_312 [label="var exception = new NotSupportedException()", span="392-392", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="StateMachineFacts.cs"];
m7_317 [label="Assert.False(result)", span="409-409", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="StateMachineFacts.cs"];
m7_318 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", span="389-389", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="StateMachineFacts.cs"];
m7_228 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="StateMachineFacts.cs"];
m7_167 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="StateMachineFacts.cs"];
m7_98 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", span="120-120", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m7_100 [label="_parameters.Add(''Name'', ''Value'')", span="123-123", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m7_101 [label="var stateMachine = CreateStateMachine()", span="125-125", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m7_102 [label="stateMachine.CreateJob(job, _parameters, _state.Object)", span="127-127", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m7_103 [label="_connection.Verify(x => x.CreateExpiredJob(\r\n				job,\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>()))", span="129-133", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m7_99 [label="var job = Job.FromExpression(() => Console.WriteLine(''SomeString''))", span="122-122", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m7_104 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", span="120-120", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m7_211 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="257-257", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs"];
m7_212 [label="var stateMachine = CreateStateMachine()", span="260-260", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs"];
m7_213 [label="var result = stateMachine.ChangeState(\r\n                JobId, _state.Object, new [] { ''AnotherState'' })", span="263-264", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs"];
m7_215 [label="_process.Verify(\r\n                x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>()),\r\n                Times.Never)", span="269-271", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs"];
m7_214 [label="Assert.False(result)", span="267-267", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs"];
m7_216 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="257-257", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs"];
m7_81 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", span="98-98", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs"];
m7_82 [label="var stateMachine = CreateStateMachine()", span="100-100", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs"];
m7_83 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateJob(_job, null, _state.Object))", span="102-103", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs"];
m7_84 [label="Assert.Equal(''parameters'', exception.ParamName)", span="105-105", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs"];
m7_85 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", span="98-98", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs"];
m7_48 [label="Entry Unk.AcquireDistributedLock", span="", cluster="Unk.AcquireDistributedLock", file="StateMachineFacts.cs"];
m7_72 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="87-87", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs"];
m7_73 [label="var stateMachine = CreateStateMachine()", span="89-89", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs"];
m7_74 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateJob(null, _parameters, _state.Object))", span="91-92", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs"];
m7_75 [label="Assert.Equal(''job'', exception.ParamName)", span="94-94", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs"];
m7_76 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="87-87", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs"];
m7_23 [label="Entry Mock<IDisposable>.cstr", span="", cluster="Mock<IDisposable>.cstr", file="StateMachineFacts.cs"];
m7_168 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", span="201-201", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="StateMachineFacts.cs"];
m7_169 [label="var stateMachine = CreateStateMachine()", span="204-204", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="StateMachineFacts.cs"];
m7_170 [label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="207-207", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="StateMachineFacts.cs"];
m7_171 [label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(sc => sc.JobId == JobId && sc.Job.Type.Name.Equals(''Console'')\r\n                    && sc.NewState == _state.Object && sc.OldStateName == OldStateName),\r\n                true))", span="210-214", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="StateMachineFacts.cs"];
m7_172 [label="Assert.True(result)", span="216-216", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="StateMachineFacts.cs"];
m7_173 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", span="201-201", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="StateMachineFacts.cs"];
m7_114 [label="Entry lambda expression", span="131-131", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_55 [label="new StateMachine(null, _process.Object)", span="62-62", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_63 [label="new StateMachine(_connection.Object, null)", span="71-71", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_78 [label="stateMachine.CreateJob(null, _parameters, _state.Object)", span="92-92", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_87 [label="stateMachine.CreateJob(_job, null, _state.Object)", span="103-103", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_95 [label="stateMachine.CreateJob(_job, _parameters, null)", span="114-114", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_123 [label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(sc => sc.JobId == JobId && sc.Job == _job\r\n                    && sc.NewState == _state.Object && sc.OldStateName == null),\r\n                true)", span="143-147", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_127 [label="sc.JobId == JobId && sc.Job == _job\r\n                    && sc.NewState == _state.Object && sc.OldStateName == null", span="145-146", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_139 [label="stateMachine.ChangeState(null, _state.Object, FromOldState)", span="163-163", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_157 [label="stateMachine.ChangeState(JobId, _state.Object, new string[0])", span="185-185", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_176 [label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(sc => sc.JobId == JobId && sc.Job.Type.Name.Equals(''Console'')\r\n                    && sc.NewState == _state.Object && sc.OldStateName == OldStateName),\r\n                true)", span="210-214", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_179 [label="sc.JobId == JobId && sc.Job.Type.Name.Equals(''Console'')\r\n                    && sc.NewState == _state.Object && sc.OldStateName == OldStateName", span="212-213", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_188 [label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object && ctx.OldStateName == OldStateName),\r\n                true)", span="229-232", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_191 [label="ctx.NewState == _state.Object && ctx.OldStateName == OldStateName", span="231-231", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_233 [label="x.ApplyState(_transaction.Object, It.IsNotNull<ApplyStateContext>(), false)", span="287-287", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_248 [label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.JobId == JobId && ctx.Job == null && ctx.NewState is FailedState),\r\n                true)", span="310-313", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_268 [label="x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object),\r\n                true)", span="338-341", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_271 [label="ctx.NewState == _state.Object", span="340-340", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_281 [label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object && ctx.OldStateName == OldStateName\r\n                    && ctx.Job == _job && ctx.JobId == JobId),\r\n                true)", span="356-360", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_284 [label="ctx.NewState == _state.Object && ctx.OldStateName == OldStateName\r\n                    && ctx.Job == _job && ctx.JobId == JobId", span="358-359", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_299 [label="x.ElectState(_connection.Object, It.IsAny<ElectStateContext>())", span="373-373", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_306 [label="x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == anotherState.Object),\r\n                true)", span="382-385", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_324 [label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState is FailedState && ((FailedState)ctx.NewState).Exception == exception),\r\n                false)", span="404-407", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_24 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_28 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_31 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_35 [label="Entry lambda expression", span="39-43", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_40 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_44 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_54 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_56 [label="Exit lambda expression", span="62-62", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_62 [label="Entry lambda expression", span="71-71", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_64 [label="Exit lambda expression", span="71-71", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_77 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_79 [label="Exit lambda expression", span="92-92", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_86 [label="Entry lambda expression", span="103-103", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_88 [label="Exit lambda expression", span="103-103", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_94 [label="Entry lambda expression", span="114-114", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_96 [label="Exit lambda expression", span="114-114", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_111 [label="Entry lambda expression", span="129-133", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_122 [label="Entry lambda expression", span="143-147", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_124 [label="Exit lambda expression", span="143-147", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_126 [label="Entry lambda expression", span="145-146", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_128 [label="Exit lambda expression", span="145-146", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_138 [label="Entry lambda expression", span="163-163", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_140 [label="Exit lambda expression", span="163-163", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_148 [label="stateMachine.ChangeState(JobId, null, FromOldState)", span="174-174", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_156 [label="Entry lambda expression", span="185-185", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_158 [label="Exit lambda expression", span="185-185", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_164 [label="Entry lambda expression", span="197-197", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_175 [label="Entry lambda expression", span="210-214", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_177 [label="Exit lambda expression", span="210-214", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_178 [label="Entry lambda expression", span="212-213", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_180 [label="Exit lambda expression", span="212-213", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_187 [label="Entry lambda expression", span="229-232", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_189 [label="Exit lambda expression", span="229-232", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_190 [label="Entry lambda expression", span="231-231", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_192 [label="Exit lambda expression", span="231-231", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_202 [label="Entry lambda expression", span="239-239", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_205 [label="Entry lambda expression", span="249-249", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_208 [label="Entry lambda expression", span="252-252", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_217 [label="Entry lambda expression", span="270-270", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_229 [label="Entry lambda expression", span="278-278", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_232 [label="Entry lambda expression", span="287-287", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_234 [label="Exit lambda expression", span="287-287", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_244 [label="Entry lambda expression", span="296-296", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_247 [label="Entry lambda expression", span="310-313", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_249 [label="Exit lambda expression", span="310-313", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_250 [label="Entry lambda expression", span="312-312", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_261 [label="Entry lambda expression", span="322-322", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_264 [label="Entry lambda expression", span="330-330", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_267 [label="Entry lambda expression", span="338-341", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_269 [label="Exit lambda expression", span="338-341", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_270 [label="Entry lambda expression", span="340-340", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_272 [label="Exit lambda expression", span="340-340", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_280 [label="Entry lambda expression", span="356-360", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_282 [label="Exit lambda expression", span="356-360", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_283 [label="Entry lambda expression", span="358-359", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_285 [label="Exit lambda expression", span="358-359", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_286 [label="Entry lambda expression", span="362-362", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_298 [label="Entry lambda expression", span="373-373", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_302 [label="Entry lambda expression", span="374-374", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_300 [label="Exit lambda expression", span="373-373", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_305 [label="Entry lambda expression", span="382-385", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_307 [label="Exit lambda expression", span="382-385", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_308 [label="Entry lambda expression", span="384-384", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_320 [label="Entry lambda expression", span="395-395", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_323 [label="Entry lambda expression", span="404-407", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_325 [label="Exit lambda expression", span="404-407", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_326 [label="Entry lambda expression", span="406-406", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_26 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_25 [label="Console.WriteLine()", span="29-29", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_30 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_29 [label="x.Name", span="32-32", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_33 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_32 [label="x.CreateWriteTransaction()", span="37-37", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_37 [label="Exit lambda expression", span="39-43", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_36 [label="x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>())", span="39-43", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_42 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_41 [label="x.GetJobData(JobId)", span="45-45", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_46 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_45 [label="x.AcquireDistributedLock(String.Format(''job:{0}:state-lock'', JobId), It.IsAny<TimeSpan>())", span="54-54", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_112 [label="x.CreateExpiredJob(\r\n				job,\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>())", span="129-133", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_203 [label="x.GetJobData(It.IsAny<string>())", span="239-239", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_209 [label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>())", span="252-252", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_218 [label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>())", span="270-270", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_230 [label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true)", span="278-278", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_321 [label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true)", span="395-395", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_107 [label="Entry lambda expression", span="122-122", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_113 [label="Exit lambda expression", span="129-133", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_147 [label="Entry lambda expression", span="174-174", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_149 [label="Exit lambda expression", span="174-174", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_166 [label="Exit lambda expression", span="197-197", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_165 [label="x.Dispose()", span="197-197", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_204 [label="Exit lambda expression", span="239-239", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_207 [label="Exit lambda expression", span="249-249", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_206 [label="x.GetJobData(JobId)", span="249-249", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_210 [label="Exit lambda expression", span="252-252", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_219 [label="Exit lambda expression", span="270-270", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_231 [label="Exit lambda expression", span="278-278", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_246 [label="Exit lambda expression", span="296-296", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_245 [label="x.GetJobData(JobId)", span="296-296", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_252 [label="Exit lambda expression", span="312-312", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_251 [label="ctx.JobId == JobId && ctx.Job == null && ctx.NewState is FailedState", span="312-312", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_263 [label="Exit lambda expression", span="322-322", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_262 [label="x.GetJobData(JobId)", span="322-322", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_266 [label="Exit lambda expression", span="330-330", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_265 [label="x.IgnoreJobLoadException", span="330-330", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_288 [label="Exit lambda expression", span="362-362", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_287 [label="x.Commit()", span="362-362", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_303 [label="context.CandidateState = anotherState.Object", span="374-374", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_309 [label="ctx.NewState == anotherState.Object", span="384-384", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_304 [label="Exit lambda expression", span="374-374", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_310 [label="Exit lambda expression", span="384-384", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_327 [label="ctx.NewState is FailedState && ((FailedState)ctx.NewState).Exception == exception", span="406-406", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_322 [label="Exit lambda expression", span="395-395", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_328 [label="Exit lambda expression", span="406-406", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_109 [label="Exit lambda expression", span="122-122", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_108 [label="Console.WriteLine(''SomeString'')", span="122-122", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_115 [label="d[''Name''] == ''Value''", span="131-131", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_116 [label="Exit lambda expression", span="131-131", cluster="lambda expression", file="StateMachineFacts.cs"];
m7_290 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", span="368-368", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="StateMachineFacts.cs"];
m7_292 [label="_process.Setup(x => x.ElectState(_connection.Object, It.IsAny<ElectStateContext>()))\r\n                .Callback((IStorageConnection connection, ElectStateContext context) => context.CandidateState = anotherState.Object)", span="373-374", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="StateMachineFacts.cs"];
m7_293 [label="var machine = CreateStateMachine()", span="376-376", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="StateMachineFacts.cs"];
m7_294 [label="machine.ChangeState(JobId, _state.Object, new[] { OldStateName })", span="379-379", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="StateMachineFacts.cs"];
m7_295 [label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == anotherState.Object),\r\n                true))", span="382-385", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="StateMachineFacts.cs"];
m7_291 [label="var anotherState = new Mock<IState>()", span="371-371", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="StateMachineFacts.cs"];
m7_296 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", span="368-368", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="StateMachineFacts.cs"];
m7_22 [label="Entry Hangfire.Storage.JobData.JobData()", span="21-21", cluster="Hangfire.Storage.JobData.JobData()", file="StateMachineFacts.cs"];
m7_106 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="StateMachineFacts.cs"];
m7_235 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="293-293", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m7_236 [label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = null,\r\n                    LoadException = new JobLoadException(''asd'', new InvalidOperationException())\r\n                })", span="296-302", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m7_237 [label="var stateMachine = CreateStateMachine()", span="304-304", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m7_238 [label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="307-307", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m7_239 [label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.JobId == JobId && ctx.Job == null && ctx.NewState is FailedState),\r\n                true))", span="310-313", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m7_240 [label="Assert.False(result)", span="315-315", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m7_241 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="293-293", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m7_289 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="StateMachineFacts.cs"];
m7_242 [label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="33-33", cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="StateMachineFacts.cs"];
m7_181 [label="Entry Unk.Equals", span="", cluster="Unk.Equals", file="StateMachineFacts.cs"];
m7_174 [label="Entry Unk.True", span="", cluster="Unk.True", file="StateMachineFacts.cs"];
m7_193 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", span="236-236", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m7_194 [label="_connection.Setup(x => x.GetJobData(It.IsAny<string>()))\r\n                .Returns((JobData)null)", span="239-240", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m7_195 [label="var stateMachine = CreateStateMachine()", span="242-242", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m7_196 [label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="245-245", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m7_198 [label="_connection.Verify(x => x.GetJobData(JobId))", span="249-249", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m7_199 [label="_process.Verify(\r\n                x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>()),\r\n                Times.Never)", span="251-253", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m7_197 [label="Assert.False(result)", span="248-248", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m7_200 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", span="236-236", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m7_297 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="StateMachineFacts.cs"];
m7_34 [label="Entry Unk.CreateWriteTransaction", span="", cluster="Unk.CreateWriteTransaction", file="StateMachineFacts.cs"];
m7_19 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="StateMachineFacts.cs"];
m7_80 [label="Entry Unk.CreateJob", span="", cluster="Unk.CreateJob", file="StateMachineFacts.cs"];
m7_110 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="StateMachineFacts.cs"];
m7_20 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="StateMachineFacts.cs"];
m7_133 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="158-158", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs"];
m7_134 [label="var stateMachine = CreateStateMachine()", span="160-160", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs"];
m7_135 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.ChangeState(null, _state.Object, FromOldState))", span="162-163", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs"];
m7_136 [label="Assert.Equal(''jobId'', exception.ParamName)", span="165-165", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs"];
m7_137 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="158-158", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs"];
m7_125 [label="Entry Unk.ApplyState", span="", cluster="Unk.ApplyState", file="StateMachineFacts.cs"];
m7_15 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateMachineFacts.cs"];
m7_331 [label="Hangfire.Core.Tests.States.StateMachineFacts", span="", file="StateMachineFacts.cs"];
m7_332 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m7_333 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m7_334 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m7_336 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m7_338 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m7_339 [label=anotherState, span="", file="StateMachineFacts.cs"];
m7_340 [label=exception, span="", file="StateMachineFacts.cs"];
m7_337 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m7_335 [label=job, span="", file="StateMachineFacts.cs"];
n76 -> n38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
n76 -> n39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
n76 -> n41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
n76 -> n47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
n76 -> n48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
n76 -> n53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
n76 -> n59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
n76 -> n60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
n76 -> n64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
n76 -> n69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
n76 -> n70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
n76 -> n74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
n0 -> n1  [key=0, style=solid];
n0 -> n16  [key=3, color=darkorchid, style=bold, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext"];
n1 -> n2  [key=0, style=solid];
n1 -> n5  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n6  [key=2, style=dotted];
n2 -> n7  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n8  [key=2, style=dotted];
n4 -> n0  [key=0, style=bold, color=blue];
n9 -> n10  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n10 -> n13  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n12 -> n9  [key=0, style=bold, color=blue];
n14 -> n15  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n17  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n16 -> n0  [key=2, style=dotted];
n17 -> n14  [key=0, style=bold, color=blue];
n18 -> n19  [key=0, style=solid];
n18 -> n18  [key=3, color=darkorchid, style=bold, label="Property variable System.Collections.Generic.IDictionary<string, object> Items"];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [key=2, style=dotted];
n20 -> n18  [key=0, style=bold, color=blue];
n22 -> n23  [key=0, style=solid];
n22 -> n37  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
n22 -> n46  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
n22 -> n58  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
n22 -> n68  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
n23 -> n24  [key=0, style=solid];
n23 -> n25  [key=2, style=dotted];
n24 -> n22  [key=0, style=bold, color=blue];
n26 -> n27  [key=0, style=solid];
n27 -> n28  [key=0, style=solid];
n27 -> n29  [key=2, style=dotted];
n28 -> n26  [key=0, style=bold, color=blue];
n30 -> n31  [key=0, style=solid];
n31 -> n32  [key=0, style=solid];
n31 -> n34  [key=2, style=dotted];
n32 -> n33  [key=0, style=solid];
n32 -> n35  [key=2, style=dotted];
n33 -> n30  [key=0, style=bold, color=blue];
n36 -> n37  [key=0, style=solid];
n37 -> n38  [key=0, style=solid];
n37 -> n43  [key=2, style=dotted];
n38 -> n39  [key=0, style=solid];
n38 -> n22  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n39 -> n30  [key=2, style=dotted];
n40 -> n41  [key=0, style=solid];
n40 -> n44  [key=2, style=dotted];
n41 -> n42  [key=0, style=solid];
n41 -> n26  [key=2, style=dotted];
n42 -> n36  [key=0, style=bold, color=blue];
n45 -> n46  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n46 -> n43  [key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n47 -> n22  [key=2, style=dotted];
n48 -> n49  [key=0, style=solid];
n48 -> n30  [key=2, style=dotted];
n49 -> n50  [key=0, style=solid];
n49 -> n55  [key=2, style=dotted];
n49 -> n51  [key=1, style=dashed, color=darkseagreen4, label=table1];
n49 -> n52  [key=1, style=dashed, color=darkseagreen4, label=table1];
n50 -> n51  [key=0, style=solid];
n50 -> n56  [key=2, style=dotted];
n51 -> n52  [key=0, style=solid];
n51 -> n56  [key=2, style=dotted];
n52 -> n53  [key=0, style=solid];
n52 -> n44  [key=2, style=dotted];
n53 -> n54  [key=0, style=solid];
n53 -> n26  [key=2, style=dotted];
n54 -> n45  [key=0, style=bold, color=blue];
n57 -> n58  [key=0, style=solid];
n58 -> n59  [key=0, style=solid];
n58 -> n43  [key=2, style=dotted];
n59 -> n60  [key=0, style=solid];
n59 -> n22  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n60 -> n30  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n61 -> n66  [key=2, style=dotted];
n62 -> n63  [key=0, style=solid];
n62 -> n44  [key=2, style=dotted];
n63 -> n64  [key=0, style=solid];
n63 -> n35  [key=2, style=dotted];
n64 -> n65  [key=0, style=solid];
n64 -> n26  [key=2, style=dotted];
n65 -> n57  [key=0, style=bold, color=blue];
n67 -> n68  [key=0, style=solid];
n68 -> n69  [key=0, style=solid];
n68 -> n43  [key=2, style=dotted];
n69 -> n70  [key=0, style=solid];
n69 -> n22  [key=2, style=dotted];
n70 -> n71  [key=0, style=solid];
n70 -> n30  [key=2, style=dotted];
n71 -> n72  [key=0, style=solid];
n71 -> n66  [key=2, style=dotted];
n72 -> n73  [key=0, style=solid];
n72 -> n35  [key=2, style=dotted];
n73 -> n74  [key=0, style=solid];
n73 -> n44  [key=2, style=dotted];
n74 -> n75  [key=0, style=solid];
n74 -> n26  [key=2, style=dotted];
n75 -> n67  [key=0, style=bold, color=blue];
m0_12 -> m0_13  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_16  [key=2, style=dotted];
m0_13 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_17  [key=2, style=dotted];
m0_15 -> m0_12  [key=0, style=bold, color=blue];
m0_36 -> m0_37  [key=0, style=solid];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_43  [key=2, style=dotted];
m0_37 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_37 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_37 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_44  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_44  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_44  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_45  [key=2, style=dotted];
m0_42 -> m0_36  [key=0, style=bold, color=blue];
m0_29 -> m0_30  [key=0, style=solid, color=red];
m0_30 -> m0_31  [key=0, style=solid, color=red];
m0_30 -> m0_32  [key=2, style=dotted, color=green];
m0_30 -> m0_33  [key=1, style=dashed, color=red, label="lambda expression"];
m0_30 -> m0_16  [key=2, style=dotted, color=red];
m0_31 -> m0_29  [key=0, style=bold, color=blue];
m0_31 -> m0_32  [key=0, style=solid, color=red];
m0_31 -> m0_17  [key=2, style=dotted, color=red];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_5  [key=2, style=dotted];
m0_1 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_6  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_7  [key=2, style=dotted];
m0_4 -> m0_0  [key=0, style=bold, color=blue];
m0_11 -> m0_52  [key=0, style=solid];
m0_52 -> m0_11  [key=0, style=bold, color=blue];
m0_43 -> m0_53  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_21  [key=2, style=dotted];
m0_54 -> m0_43  [key=0, style=bold, color=blue];
m0_32 -> m0_29  [key=0, style=bold, color=blue];
m0_22 -> m0_23  [key=0, style=solid];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_16  [key=2, style=dotted];
m0_23 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_17  [key=2, style=dotted];
m0_25 -> m0_22  [key=0, style=bold, color=blue];
m0_46 -> m0_47  [key=0, style=solid];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_43  [key=2, style=dotted];
m0_47 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_51  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_44  [key=2, style=dotted];
m0_50 -> m0_46  [key=0, style=bold, color=blue];
m0_33 -> m0_34  [key=0, style=solid, color=green];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=2, style=dotted];
m0_10 -> m0_8  [key=0, style=bold, color=blue];
m0_18 -> m0_19  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=2, style=dotted];
m0_20 -> m0_18  [key=0, style=bold, color=blue];
m0_26 -> m0_27  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_21  [key=2, style=dotted];
m0_28 -> m0_26  [key=0, style=bold, color=blue];
m0_34 -> m0_35  [key=0, style=solid, color=green];
m0_34 -> m0_21  [key=2, style=dotted, color=green];
m0_35 -> m0_33  [key=0, style=bold, color=blue];
m0_55 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_55 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_55 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_55 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_55 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_55 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_55 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_55 -> m0_30  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_55 -> m0_34  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_55 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_55 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_55 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_55 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_55 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m0_55 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreateContextFacts"];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_4  [key=0, style=bold, color=blue];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [key=2, style=dotted];
m1_8 -> m1_6  [key=0, style=bold, color=blue];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_3  [key=2, style=dotted];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_117 -> m1_125  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_117 -> m1_122  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_118 -> m1_19  [key=2, style=dotted];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_121  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_119 -> m1_19  [key=2, style=dotted];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_124  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_120 -> m1_117  [key=0, style=bold, color=blue];
m1_57 -> m1_74  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_57 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_57 -> m1_46  [key=3, color=darkorchid, style=bold, label="Parameter variable HangFire.Common.States.State state"];
m1_57 -> m1_70  [key=0, style=solid];
m1_57 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.State"];
m1_57 -> m1_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.State"];
m1_74 -> m1_19  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_70 -> m1_74  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m1_70 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_54  [key=2, style=dotted];
m1_70 -> m1_55  [key=2, style=dotted];
m1_70 -> m1_72  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m1_70 -> m1_73  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_76  [key=2, style=dotted];
m1_73 -> m1_56  [key=2, style=dotted];
m1_71 -> m1_56  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_56  [key=2, style=dotted];
m1_75 -> m1_57  [key=0, style=bold, color=blue];
m1_147 -> m1_148  [key=0, style=solid];
m1_147 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_148 -> m1_19  [key=2, style=dotted];
m1_148 -> m1_149  [key=0, style=solid];
m1_148 -> m1_150  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_149 -> m1_147  [key=0, style=bold, color=blue];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_3  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_0  [key=0, style=bold, color=blue];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_102  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_100 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_100 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_101 -> m1_19  [key=2, style=dotted];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_102 -> m1_19  [key=2, style=dotted];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_103 -> m1_100  [key=0, style=bold, color=blue];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_164  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_161 -> m1_19  [key=2, style=dotted];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_163  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_162 -> m1_160  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_2 -> m1_4  [key=0, style=solid];
m1_2 -> m1_5  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_46 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_46 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_46 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_46 -> m1_63  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_46 -> m1_67  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_46 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.State"];
m1_46 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.State"];
m1_47 -> m1_19  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_48 -> m1_19  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_51 -> m1_19  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_57  [key=2, style=dotted];
m1_49 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m1_49 -> m1_67  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_54  [key=2, style=dotted];
m1_49 -> m1_55  [key=2, style=dotted];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_56  [key=2, style=dotted];
m1_53 -> m1_46  [key=0, style=bold, color=blue];
m1_179 -> m1_180  [key=0, style=solid];
m1_179 -> m1_183  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_180 -> m1_19  [key=2, style=dotted];
m1_180 -> m1_181  [key=0, style=solid];
m1_180 -> m1_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_181 -> m1_179  [key=0, style=bold, color=blue];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_19  [key=2, style=dotted];
m1_16 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_10  [key=2, style=dotted];
m1_17 -> m1_19  [key=2, style=dotted];
m1_17 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_18 -> m1_16  [key=0, style=bold, color=blue];
m1_18 -> m1_14  [key=0, style=bold, color=blue];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_14  [key=2, style=dotted];
m1_11 -> m1_13  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_15  [key=2, style=dotted];
m1_12 -> m1_10  [key=0, style=bold, color=blue];
m1_13 -> m1_10  [key=0, style=bold, color=blue];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_31 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_31 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_31 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_31 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_32 -> m1_19  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_33 -> m1_19  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_34 -> m1_19  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_35 -> m1_31  [key=0, style=bold, color=blue];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_111 -> m1_19  [key=2, style=dotted];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_112 -> m1_110  [key=0, style=bold, color=blue];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_128 -> m1_19  [key=2, style=dotted];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_129 -> m1_127  [key=0, style=bold, color=blue];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_144  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_141 -> m1_19  [key=2, style=dotted];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_142 -> m1_140  [key=0, style=bold, color=blue];
m1_9 -> m1_7  [key=0, style=bold, color=blue];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_171  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_168 -> m1_19  [key=2, style=dotted];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_170  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_169 -> m1_167  [key=0, style=bold, color=blue];
m1_182 -> m1_183  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid, color=green];
m1_21 -> m1_22  [key=0, style=solid, color=green];
m1_21 -> m1_23  [key=2, style=dotted, color=green];
m1_21 -> m1_24  [key=2, style=dotted, color=green];
m1_22 -> m1_20  [key=0, style=bold, color=blue];
m1_26 -> m1_23  [key=2, style=dotted];
m1_26 -> m1_24  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_29 -> m1_23  [key=2, style=dotted];
m1_29 -> m1_24  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_25 -> m1_26  [key=0, style=solid];
m1_37 -> m1_23  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_39  [key=2, style=dotted];
m1_41 -> m1_23  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_39  [key=2, style=dotted];
m1_44 -> m1_23  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_39  [key=2, style=dotted];
m1_59 -> m1_23  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_61  [key=2, style=dotted];
m1_63 -> m1_23  [key=2, style=dotted];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_65  [key=2, style=dotted];
m1_67 -> m1_23  [key=2, style=dotted];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_69  [key=2, style=dotted];
m1_78 -> m1_23  [key=2, style=dotted];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_80  [key=2, style=dotted];
m1_78 -> m1_81  [key=2, style=dotted];
m1_91 -> m1_23  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_81  [key=2, style=dotted];
m1_108 -> m1_24  [key=2, style=dotted];
m1_108 -> m1_109  [key=0, style=solid];
m1_125 -> m1_24  [key=2, style=dotted];
m1_125 -> m1_126  [key=0, style=solid];
m1_183 -> m1_24  [key=2, style=dotted];
m1_183 -> m1_184  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_40 -> m1_41  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_58 -> m1_59  [key=0, style=solid];
m1_62 -> m1_63  [key=0, style=solid];
m1_66 -> m1_67  [key=0, style=solid];
m1_77 -> m1_78  [key=0, style=solid];
m1_86 -> m1_87  [key=0, style=solid];
m1_90 -> m1_91  [key=0, style=solid];
m1_96 -> m1_97  [key=0, style=solid];
m1_104 -> m1_105  [key=0, style=solid];
m1_107 -> m1_108  [key=0, style=solid];
m1_113 -> m1_114  [key=0, style=solid];
m1_121 -> m1_122  [key=0, style=solid];
m1_124 -> m1_125  [key=0, style=solid];
m1_130 -> m1_131  [key=0, style=solid];
m1_137 -> m1_138  [key=0, style=solid];
m1_143 -> m1_144  [key=0, style=solid];
m1_150 -> m1_151  [key=0, style=solid];
m1_156 -> m1_157  [key=0, style=solid];
m1_163 -> m1_164  [key=0, style=solid];
m1_170 -> m1_171  [key=0, style=solid];
m1_176 -> m1_177  [key=0, style=solid];
m1_27 -> m1_25  [key=0, style=bold, color=blue];
m1_30 -> m1_28  [key=0, style=bold, color=blue];
m1_38 -> m1_36  [key=0, style=bold, color=blue];
m1_42 -> m1_40  [key=0, style=bold, color=blue];
m1_45 -> m1_43  [key=0, style=bold, color=blue];
m1_60 -> m1_58  [key=0, style=bold, color=blue];
m1_64 -> m1_62  [key=0, style=bold, color=blue];
m1_68 -> m1_66  [key=0, style=bold, color=blue];
m1_79 -> m1_77  [key=0, style=bold, color=blue];
m1_92 -> m1_90  [key=0, style=bold, color=blue];
m1_109 -> m1_107  [key=0, style=bold, color=blue];
m1_126 -> m1_124  [key=0, style=bold, color=blue];
m1_184 -> m1_182  [key=0, style=bold, color=blue];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_89  [key=2, style=dotted];
m1_88 -> m1_86  [key=0, style=bold, color=blue];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_99  [key=2, style=dotted];
m1_98 -> m1_96  [key=0, style=bold, color=blue];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_99  [key=2, style=dotted];
m1_106 -> m1_104  [key=0, style=bold, color=blue];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_116  [key=2, style=dotted];
m1_115 -> m1_113  [key=0, style=bold, color=blue];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_116  [key=2, style=dotted];
m1_123 -> m1_121  [key=0, style=bold, color=blue];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_133  [key=2, style=dotted];
m1_132 -> m1_130  [key=0, style=bold, color=blue];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_133  [key=2, style=dotted];
m1_139 -> m1_137  [key=0, style=bold, color=blue];
m1_144 -> m1_145  [key=0, style=solid];
m1_144 -> m1_146  [key=2, style=dotted];
m1_145 -> m1_143  [key=0, style=bold, color=blue];
m1_151 -> m1_81  [key=2, style=dotted];
m1_151 -> m1_152  [key=0, style=solid];
m1_152 -> m1_150  [key=0, style=bold, color=blue];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_159  [key=2, style=dotted];
m1_158 -> m1_156  [key=0, style=bold, color=blue];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_166  [key=2, style=dotted];
m1_165 -> m1_163  [key=0, style=bold, color=blue];
m1_171 -> m1_172  [key=0, style=solid];
m1_171 -> m1_99  [key=2, style=dotted];
m1_172 -> m1_170  [key=0, style=bold, color=blue];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_116  [key=2, style=dotted];
m1_178 -> m1_176  [key=0, style=bold, color=blue];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_138  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_135 -> m1_19  [key=2, style=dotted];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_137  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_136 -> m1_134  [key=0, style=bold, color=blue];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_177  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_174 -> m1_19  [key=2, style=dotted];
m1_174 -> m1_175  [key=0, style=solid];
m1_174 -> m1_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_175 -> m1_173  [key=0, style=bold, color=blue];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_97  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_94 -> m1_19  [key=2, style=dotted];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_95 -> m1_93  [key=0, style=bold, color=blue];
m1_15 -> m1_16  [key=0, style=solid, color=green];
m1_15 -> m1_19  [key=2, style=dotted, color=green];
m1_15 -> m1_20  [key=1, style=dashed, color=green, label="lambda expression"];
m1_14 -> m1_15  [key=0, style=solid, color=green];
m1_14 -> m1_21  [key=1, style=dashed, color=green, label=string];
m1_14 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_14 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_14 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_14 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_82 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_82 -> m1_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_83 -> m1_19  [key=2, style=dotted];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_84 -> m1_19  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_85 -> m1_82  [key=0, style=bold, color=blue];
m1_3 -> m1_4  [key=0, style=solid];
m1_19 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.AspNetBackgroundJobServer"];
m1_19 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.AspNetBackgroundJobServer"];
m1_19 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.AspNetBackgroundJobServer"];
m1_19 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.AspNetBackgroundJobServer"];
m1_19 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.AspNetBackgroundJobServer"];
m1_19 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.AspNetBackgroundJobServer"];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_157  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_154 -> m1_19  [key=2, style=dotted];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_155 -> m1_153  [key=0, style=bold, color=blue];
m1_185 -> m1_15  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_102  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_128  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_135  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_141  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_148  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_154  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_161  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_168  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_174  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_185 -> m1_180  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m1_186 -> m1_21  [key=1, style=dashed, color=green, label=string];
m1_186 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_186 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_187 -> m1_21  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_187 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_187 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_188 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_188 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_188 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_189 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_189 -> m1_63  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_189 -> m1_67  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_190 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.State"];
m1_191 -> m1_67  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m1_192 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_193 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m1_194 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_194 -> m1_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_195 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_197 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_197 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_198 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_200 -> m1_125  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_200 -> m1_122  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_201 -> m1_125  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_218 -> m1_183  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_219 -> m1_183  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_196 -> m1_97  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_199 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_202 -> m1_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_203 -> m1_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_204 -> m1_138  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_205 -> m1_138  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_206 -> m1_138  [key=1, style=dashed, color=darkseagreen4, label=double];
m1_207 -> m1_144  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_208 -> m1_144  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_209 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_210 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_211 -> m1_157  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_212 -> m1_157  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_213 -> m1_164  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_214 -> m1_164  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_215 -> m1_164  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_216 -> m1_171  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_217 -> m1_177  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m2_8 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_12  [key=2, style=dotted];
m2_9 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_12  [key=2, style=dotted];
m2_10 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_11 -> m2_8  [key=0, style=bold, color=blue];
m2_3 -> m2_4  [key=0, style=solid, color=green];
m2_3 -> m2_0  [key=0, style=bold, color=blue];
m2_4 -> m2_5  [key=0, style=solid, color=green];
m2_4 -> m2_6  [key=2, style=dotted, color=green];
m2_4 -> m2_7  [key=2, style=dotted, color=green];
m2_4 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.CustomJob"];
m2_4 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.CustomJob"];
m2_5 -> m2_3  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_2 -> m2_3  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_16  [key=2, style=dotted];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_20  [key=2, style=dotted];
m2_18 -> m2_21  [key=2, style=dotted];
m2_13 -> m2_14  [key=0, style=solid];
m2_15 -> m2_13  [key=0, style=bold, color=blue];
m2_19 -> m2_17  [key=0, style=bold, color=blue];
m2_22 -> m2_4  [key=1, style=dashed, color=green, label="HangFire.States.EnqueuedState"];
m2_22 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.EnqueuedState"];
m2_22 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.EnqueuedState"];
m2_22 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.EnqueuedState"];
m2_22 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.EnqueuedState"];
m2_22 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.EnqueuedState"];
m2_23 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [key=0, style=bold, color=blue];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_2  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [key=0, style=bold, color=blue];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m5_9 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m5_9 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_9 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_9 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_12  [key=0, style=solid];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_14  [key=0, style=solid];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_16  [key=0, style=solid];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_22  [key=2, style=dotted];
m5_17 -> m5_23  [key=2, style=dotted];
m5_17 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_24  [key=2, style=dotted];
m5_18 -> m5_15  [key=0, style=bold, color=blue];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_25  [key=2, style=dotted];
m5_11 -> m5_21  [key=0, style=solid];
m5_11 -> m5_8  [key=2, style=dotted];
m5_11 -> m5_12  [key=0, style=solid];
m5_13 -> m5_21  [key=0, style=solid];
m5_13 -> m5_8  [key=2, style=dotted];
m5_13 -> m5_11  [key=0, style=bold, color=blue];
m5_15 -> m5_21  [key=0, style=solid];
m5_15 -> m5_8  [key=2, style=dotted];
m5_15 -> m5_16  [key=0, style=solid];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label=createdAt];
m5_16 -> m5_19  [key=2, style=dotted];
m5_16 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_20 -> m5_21  [key=0, style=solid];
m5_21 -> m5_9  [key=0, style=bold, color=blue];
m5_21 -> m5_22  [key=0, style=solid];
m5_54 -> m5_52  [key=0, style=bold, color=blue];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_48  [key=0, style=solid];
m5_32 -> m5_49  [key=2, style=dotted];
m5_34 -> m5_20  [key=2, style=dotted];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_51  [key=2, style=dotted];
m5_34 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m5_34 -> m5_40  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m5_34 -> m5_45  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m5_34 -> m5_46  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m5_33 -> m5_19  [key=2, style=dotted];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_33 -> m5_50  [key=2, style=dotted];
m5_35 -> m5_32  [key=0, style=bold, color=blue];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_37  [key=0, style=solid];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_56  [key=0, style=solid];
m5_25 -> m5_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateContext"];
m5_25 -> m5_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateContext"];
m5_25 -> m5_18  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.States.StateContext context"];
m5_25 -> m5_45  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.States.StateContext context"];
m5_25 -> m5_19  [key=3, color=darkorchid, style=bold, label="Parameter variable string oldStateName"];
m5_25 -> m5_39  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ChangeState"];
m5_25 -> m5_36  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ChangeState"];
m5_27 -> m5_28  [key=0, style=solid, color=green];
m5_27 -> m5_20  [key=2, style=dotted, color=green];
m5_27 -> m5_29  [key=0, style=solid];
m5_26 -> m5_27  [key=0, style=solid, color=green];
m5_26 -> m5_19  [key=2, style=dotted];
m5_26 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m5_26 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m5_26 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_26 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_26 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m5_26 -> m5_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m5_26 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m5_26 -> m5_45  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_26 -> m5_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m5_26 -> m5_36  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ChangeState"];
m5_28 -> m5_25  [key=0, style=bold, color=blue];
m5_28 -> m5_48  [key=0, style=solid];
m5_28 -> m5_8  [key=2, style=dotted];
m5_52 -> m5_53  [key=0, style=solid];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> m5_24  [key=2, style=dotted];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_44  [key=2, style=dotted];
m5_46 -> m5_25  [key=2, style=dotted];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_51  [key=2, style=dotted];
m5_48 -> m5_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_48 -> m5_26  [key=0, style=bold, color=blue];
m5_47 -> m5_48  [key=0, style=solid];
m5_47 -> m5_50  [key=2, style=dotted];
m5_49 -> m5_45  [key=0, style=bold, color=blue];
m5_22 -> m5_24  [key=2, style=dotted];
m5_22 -> m5_23  [key=0, style=solid];
m5_23 -> m5_21  [key=0, style=bold, color=blue];
m5_6 -> m5_7  [key=0, style=solid];
m5_44 -> m5_56  [key=0, style=solid];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_47  [key=1, style=dashed, color=darkseagreen4, label=loadSucceeded];
m5_56 -> m5_57  [key=0, style=solid];
m5_56 -> m5_24  [key=2, style=dotted];
m5_56 -> m5_67  [key=2, style=dotted];
m5_56 -> m5_58  [key=1, style=dashed, color=darkseagreen4, label=electStateContext];
m5_57 -> m5_44  [key=0, style=bold, color=blue];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_68  [key=2, style=dotted];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_31  [key=0, style=solid];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_33  [key=0, style=solid];
m5_31 -> m5_29  [key=0, style=bold, color=blue];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_39  [key=0, style=solid];
m5_37 -> m5_52  [key=2, style=dotted];
m5_37 -> m5_24  [key=2, style=dotted];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_45  [key=0, style=solid];
m5_42 -> m5_20  [key=2, style=dotted];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_54  [key=2, style=dotted];
m5_43 -> m5_55  [key=2, style=dotted];
m5_43 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m5_43 -> m5_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m5_43 -> m5_39  [key=0, style=bold, color=blue];
m5_30 -> m5_48  [key=0, style=solid];
m5_30 -> m5_8  [key=2, style=dotted];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_24  [key=2, style=dotted];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_45  [key=0, style=solid];
m5_40 -> m5_53  [key=2, style=dotted];
m5_40 -> m5_42  [key=1, style=dashed, color=darkseagreen4, label=processingJob];
m5_40 -> m5_44  [key=2, style=dotted];
m5_36 -> m5_48  [key=0, style=solid];
m5_36 -> m5_37  [key=0, style=solid];
m5_38 -> m5_48  [key=0, style=solid];
m5_38 -> m5_36  [key=0, style=bold, color=blue];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_47  [key=1, style=dashed, color=darkseagreen4, label=loadSucceeded];
m5_39 -> m5_39  [key=3, color=darkorchid, style=bold, label="Local variable bool loadSucceeded"];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_20  [key=2, style=dotted];
m5_7 -> m5_0  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateChangeProcess"];
m5_0 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m5_0 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateChangeProcess"];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_6  [key=2, style=dotted];
m5_1 -> m5_3  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_7  [key=2, style=dotted];
m5_2 -> m5_8  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_8  [key=2, style=dotted];
m5_3 -> m5_9  [key=2, style=dotted];
m5_3 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_3 -> m5_5  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_10  [key=2, style=dotted];
m5_4 -> m5_7  [key=0, style=solid];
m5_4 -> m5_8  [key=2, style=dotted];
m5_5 -> m5_0  [key=0, style=bold, color=blue];
m5_5 -> m5_6  [key=0, style=solid];
m5_53 -> m5_54  [key=0, style=solid];
m5_53 -> m5_55  [key=2, style=dotted];
m5_53 -> m5_0  [key=3, color=darkorchid, style=bold, label="Field variable Hangfire.States.IStateChangeProcess _stateChangeProcess"];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_69  [key=2, style=dotted];
m5_58 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisProcessingJobFacts"];
m5_58 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisProcessingJobFacts"];
m5_58 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisProcessingJobFacts"];
m5_58 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisProcessingJobFacts"];
m5_58 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisProcessingJobFacts"];
m5_58 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisProcessingJobFacts"];
m5_58 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisProcessingJobFacts"];
m5_58 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisProcessingJobFacts"];
m5_58 -> m5_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisProcessingJobFacts"];
m5_58 -> m5_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisProcessingJobFacts"];
m5_58 -> m5_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisProcessingJobFacts"];
m5_58 -> m5_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisProcessingJobFacts"];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_69  [key=2, style=dotted];
m5_63 -> m5_71  [key=2, style=dotted];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_70  [key=2, style=dotted];
m5_60 -> m5_66  [key=0, style=solid];
m5_61 -> m5_62  [key=0, style=solid];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> m5_54  [key=2, style=dotted];
m5_64 -> m5_65  [key=0, style=solid];
m5_64 -> m5_70  [key=2, style=dotted];
m5_65 -> m5_66  [key=0, style=solid];
m5_66 -> m5_25  [key=0, style=bold, color=blue];
m5_70 -> m5_72  [key=0, style=solid];
m5_70 -> m5_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ApplyStateContext"];
m5_70 -> m5_58  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.States.ApplyStateContext context"];
m5_70 -> m5_63  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.States.ApplyStateContext context"];
m5_70 -> m5_39  [key=3, color=darkorchid, style=bold, label="Parameter variable bool useFilters"];
m5_70 -> m5_36  [key=3, color=darkorchid, style=bold, label="Parameter variable bool useFilters"];
m5_72 -> m5_73  [key=0, style=solid];
m5_72 -> m5_76  [key=2, style=dotted];
m5_72 -> m5_74  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_77  [key=2, style=dotted];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_78  [key=2, style=dotted];
m5_75 -> m5_70  [key=0, style=bold, color=blue];
m5_79 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m5_79 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m5_79 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m5_79 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m5_79 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m5_79 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m5_79 -> m5_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m5_79 -> m5_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m5_79 -> m5_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m5_79 -> m5_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m5_79 -> m5_64  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m5_79 -> m5_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m5_79 -> m5_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m6_7 -> m6_8  [key=0, style=solid];
m6_34 -> m6_54  [key=0, style=solid];
m6_34 -> m6_56  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m6_34 -> m6_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m6_54 -> m6_55  [key=0, style=solid];
m6_54 -> m6_59  [key=2, style=dotted];
m6_54 -> m6_57  [key=1, style=dashed, color=darkseagreen4, label=arguments];
m6_56 -> m6_57  [key=0, style=solid];
m6_56 -> m6_61  [key=2, style=dotted];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_62  [key=2, style=dotted];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_60  [key=2, style=dotted];
m6_55 -> m6_57  [key=1, style=dashed, color=darkseagreen4, label=client];
m6_58 -> m6_34  [key=0, style=bold, color=blue];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_19  [key=2, style=dotted];
m6_21 -> m6_15  [key=2, style=dotted];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_10  [key=2, style=dotted];
m6_8 -> m6_11  [key=2, style=dotted];
m6_59 -> m6_63  [key=0, style=solid];
m6_63 -> m6_64  [key=0, style=solid];
m6_63 -> m6_73  [key=2, style=dotted];
m6_63 -> m6_74  [key=2, style=dotted];
m6_63 -> m6_65  [key=1, style=dashed, color=darkseagreen4, label=arguments];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_75  [key=2, style=dotted];
m6_64 -> m6_70  [key=1, style=dashed, color=darkseagreen4, label=serializedArguments];
m6_64 -> m6_71  [key=1, style=dashed, color=darkseagreen4, label=serializedArguments];
m6_65 -> m6_66  [key=0, style=solid];
m6_65 -> m6_71  [key=0, style=solid];
m6_65 -> m6_67  [key=1, style=dashed, color=darkseagreen4, label=argument];
m6_65 -> m6_68  [key=1, style=dashed, color=darkseagreen4, label=argument];
m6_65 -> m6_69  [key=1, style=dashed, color=darkseagreen4, label=argument];
m6_70 -> m6_65  [key=0, style=solid];
m6_70 -> m6_79  [key=2, style=dotted];
m6_71 -> m6_72  [key=0, style=solid];
m6_71 -> m6_80  [key=2, style=dotted];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_70  [key=1, style=dashed, color=darkseagreen4, label=value];
m6_67 -> m6_68  [key=0, style=solid];
m6_67 -> m6_70  [key=0, style=solid];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_76  [key=2, style=dotted];
m6_68 -> m6_77  [key=2, style=dotted];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_78  [key=2, style=dotted];
m6_72 -> m6_59  [key=0, style=bold, color=blue];
m6_10 -> m6_44  [key=0, style=solid];
m6_0 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m6_0 -> m6_1  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid, color=red];
m6_3 -> m6_8  [key=2, style=dotted];
m6_3 -> m6_5  [key=2, style=dotted, color=red];
m6_3 -> m6_6  [key=2, style=dotted, color=red];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_9  [key=2, style=dotted];
m6_4 -> m6_2  [key=0, style=bold, color=blue];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_10  [key=2, style=dotted];
m6_5 -> m6_9  [key=2, style=dotted];
m6_1 -> m6_3  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_0  [key=0, style=bold, color=blue];
m6_2 -> m6_6  [key=0, style=solid];
m6_2 -> m6_7  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid, color=red];
m6_6 -> m6_0  [key=0, style=bold, color=blue];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_17  [key=0, style=bold, color=blue];
m6_22 -> m6_20  [key=0, style=bold, color=blue];
m6_22 -> m6_14  [key=1, style=dashed, color=green, label="Hangfire.States.StateMachineFactory"];
m6_22 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachineFactory"];
m6_22 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachineFactory"];
m6_22 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachineFactory"];
m6_22 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachineFactory"];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_14  [key=0, style=solid, color=green];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_10  [key=2, style=dotted];
m6_13 -> m6_15  [key=2, style=dotted];
m6_13 -> m6_16  [key=0, style=solid];
m6_13 -> m6_7  [key=2, style=dotted];
m6_14 -> m6_12  [key=0, style=bold, color=blue];
m6_14 -> m6_15  [key=0, style=solid, color=green];
m6_14 -> m6_17  [key=2, style=dotted, color=green];
m6_19 -> m6_47  [key=0, style=solid];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_21  [key=2, style=dotted];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_49  [key=2, style=dotted];
m6_47 -> m6_50  [key=2, style=dotted];
m6_48 -> m6_19  [key=0, style=bold, color=blue];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_46  [key=2, style=dotted];
m6_45 -> m6_10  [key=0, style=bold, color=blue];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m6_11 -> m6_23  [key=0, style=solid];
m6_11 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m6_11 -> m6_27  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action>"];
m6_11 -> m6_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_18  [key=2, style=dotted];
m6_15 -> m6_35  [key=0, style=solid];
m6_15 -> m6_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m6_15 -> m6_39  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action<TJob>>"];
m6_15 -> m6_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m6_16 -> m6_11  [key=0, style=bold, color=blue];
m6_16 -> m6_17  [key=0, style=solid];
m6_50 -> m6_51  [key=0, style=solid];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_53  [key=2, style=dotted];
m6_52 -> m6_50  [key=0, style=bold, color=blue];
m6_9 -> m6_7  [key=0, style=bold, color=blue];
m6_17 -> m6_19  [key=0, style=solid];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_11  [key=2, style=dotted];
m6_18 -> m6_16  [key=0, style=bold, color=blue];
m6_81 -> m6_82  [key=0, style=solid];
m6_81 -> m6_85  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression"];
m6_82 -> m6_83  [key=0, style=solid];
m6_82 -> m6_84  [key=1, style=dashed, color=darkseagreen4, label=constantExpression];
m6_85 -> m6_86  [key=0, style=solid];
m6_85 -> m6_87  [key=2, style=dotted];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_85  [key=0, style=solid];
m6_84 -> m6_86  [key=0, style=solid];
m6_86 -> m6_81  [key=0, style=bold, color=blue];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_25  [key=0, style=solid];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_27  [key=0, style=solid];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_30  [key=1, style=dashed, color=darkseagreen4, label=callExpression];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_34  [key=2, style=dotted];
m6_24 -> m6_31  [key=0, style=solid];
m6_24 -> m6_32  [key=2, style=dotted];
m6_26 -> m6_31  [key=0, style=solid];
m6_26 -> m6_32  [key=2, style=dotted];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_30  [key=0, style=solid];
m6_29 -> m6_31  [key=0, style=solid];
m6_29 -> m6_33  [key=2, style=dotted];
m6_31 -> m6_11  [key=0, style=bold, color=blue];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_37  [key=0, style=solid];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_39  [key=0, style=solid];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_42  [key=1, style=dashed, color=darkseagreen4, label=callExpression];
m6_42 -> m6_43  [key=0, style=solid];
m6_42 -> m6_34  [key=2, style=dotted];
m6_36 -> m6_43  [key=0, style=solid];
m6_36 -> m6_32  [key=2, style=dotted];
m6_38 -> m6_43  [key=0, style=solid];
m6_38 -> m6_32  [key=2, style=dotted];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_42  [key=0, style=solid];
m6_41 -> m6_43  [key=0, style=solid];
m6_41 -> m6_33  [key=2, style=dotted];
m6_43 -> m6_15  [key=0, style=bold, color=blue];
m7_129 -> m7_130  [key=0, style=solid];
m7_130 -> m7_70  [key=2, style=dotted];
m7_130 -> m7_131  [key=0, style=solid];
m7_131 -> m7_132  [key=0, style=solid];
m7_131 -> m7_80  [key=2, style=dotted];
m7_131 -> m7_53  [key=2, style=dotted];
m7_132 -> m7_129  [key=0, style=bold, color=blue];
m7_220 -> m7_221  [key=0, style=solid];
m7_221 -> m7_222  [key=0, style=solid];
m7_221 -> m7_18  [key=2, style=dotted];
m7_221 -> m7_227  [key=2, style=dotted];
m7_221 -> m7_228  [key=2, style=dotted];
m7_221 -> m7_229  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_222 -> m7_70  [key=2, style=dotted];
m7_222 -> m7_223  [key=0, style=solid];
m7_223 -> m7_224  [key=0, style=solid];
m7_223 -> m7_141  [key=2, style=dotted];
m7_223 -> m7_225  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_224 -> m7_225  [key=0, style=solid];
m7_224 -> m7_106  [key=2, style=dotted];
m7_224 -> m7_232  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_225 -> m7_226  [key=0, style=solid];
m7_225 -> m7_201  [key=2, style=dotted];
m7_226 -> m7_220  [key=0, style=bold, color=blue];
m7_58 -> m7_59  [key=0, style=solid];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_38  [key=2, style=dotted];
m7_59 -> m7_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_53  [key=2, style=dotted];
m7_61 -> m7_58  [key=0, style=bold, color=blue];
m7_253 -> m7_254  [key=0, style=solid];
m7_254 -> m7_255  [key=0, style=solid];
m7_254 -> m7_18  [key=2, style=dotted];
m7_254 -> m7_22  [key=2, style=dotted];
m7_254 -> m7_242  [key=2, style=dotted];
m7_254 -> m7_227  [key=2, style=dotted];
m7_254 -> m7_19  [key=2, style=dotted];
m7_254 -> m7_261  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_255 -> m7_256  [key=0, style=solid];
m7_255 -> m7_18  [key=2, style=dotted];
m7_255 -> m7_19  [key=2, style=dotted];
m7_255 -> m7_264  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_256 -> m7_70  [key=2, style=dotted];
m7_256 -> m7_257  [key=0, style=solid];
m7_257 -> m7_258  [key=0, style=solid];
m7_257 -> m7_141  [key=2, style=dotted];
m7_257 -> m7_259  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_258 -> m7_259  [key=0, style=solid];
m7_258 -> m7_106  [key=2, style=dotted];
m7_258 -> m7_267  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_259 -> m7_260  [key=0, style=solid];
m7_259 -> m7_174  [key=2, style=dotted];
m7_260 -> m7_253  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [key=0, style=bold, color=blue];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_14  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_15  [key=2, style=dotted];
m7_2 -> m7_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_16  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_17  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_18  [key=2, style=dotted];
m7_5 -> m7_19  [key=2, style=dotted];
m7_5 -> m7_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_20  [key=2, style=dotted];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_21  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_18  [key=2, style=dotted];
m7_8 -> m7_19  [key=2, style=dotted];
m7_8 -> m7_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_18  [key=2, style=dotted];
m7_9 -> m7_19  [key=2, style=dotted];
m7_9 -> m7_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_18  [key=2, style=dotted];
m7_10 -> m7_22  [key=2, style=dotted];
m7_10 -> m7_19  [key=2, style=dotted];
m7_10 -> m7_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_23  [key=2, style=dotted];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_18  [key=2, style=dotted];
m7_12 -> m7_19  [key=2, style=dotted];
m7_12 -> m7_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_13 -> m7_0  [key=0, style=bold, color=blue];
m7_151 -> m7_152  [key=0, style=solid];
m7_152 -> m7_70  [key=2, style=dotted];
m7_152 -> m7_153  [key=0, style=solid];
m7_152 -> m7_157  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m7_153 -> m7_154  [key=0, style=solid];
m7_153 -> m7_38  [key=2, style=dotted];
m7_153 -> m7_156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_154 -> m7_53  [key=2, style=dotted];
m7_154 -> m7_155  [key=0, style=solid];
m7_155 -> m7_151  [key=0, style=bold, color=blue];
m7_273 -> m7_274  [key=0, style=solid];
m7_274 -> m7_70  [key=2, style=dotted];
m7_274 -> m7_275  [key=0, style=solid];
m7_275 -> m7_276  [key=0, style=solid];
m7_275 -> m7_141  [key=2, style=dotted];
m7_275 -> m7_278  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_276 -> m7_277  [key=0, style=solid];
m7_276 -> m7_106  [key=2, style=dotted];
m7_276 -> m7_280  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_277 -> m7_278  [key=0, style=solid];
m7_277 -> m7_106  [key=2, style=dotted];
m7_277 -> m7_286  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_278 -> m7_279  [key=0, style=solid];
m7_278 -> m7_174  [key=2, style=dotted];
m7_279 -> m7_273  [key=0, style=bold, color=blue];
m7_182 -> m7_183  [key=0, style=solid];
m7_183 -> m7_70  [key=2, style=dotted];
m7_183 -> m7_184  [key=0, style=solid];
m7_184 -> m7_185  [key=0, style=solid];
m7_184 -> m7_141  [key=2, style=dotted];
m7_185 -> m7_186  [key=0, style=solid];
m7_185 -> m7_106  [key=2, style=dotted];
m7_185 -> m7_187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_186 -> m7_182  [key=0, style=bold, color=blue];
m7_89 -> m7_90  [key=0, style=solid];
m7_90 -> m7_70  [key=2, style=dotted];
m7_90 -> m7_91  [key=0, style=solid];
m7_90 -> m7_95  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m7_91 -> m7_92  [key=0, style=solid];
m7_91 -> m7_38  [key=2, style=dotted];
m7_91 -> m7_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_92 -> m7_93  [key=0, style=solid];
m7_92 -> m7_53  [key=2, style=dotted];
m7_93 -> m7_89  [key=0, style=bold, color=blue];
m7_49 -> m7_50  [key=0, style=solid];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_38  [key=2, style=dotted];
m7_50 -> m7_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_53  [key=2, style=dotted];
m7_52 -> m7_49  [key=0, style=bold, color=blue];
m7_117 -> m7_118  [key=0, style=solid];
m7_118 -> m7_70  [key=2, style=dotted];
m7_118 -> m7_119  [key=0, style=solid];
m7_119 -> m7_120  [key=0, style=solid];
m7_119 -> m7_80  [key=2, style=dotted];
m7_120 -> m7_121  [key=0, style=solid];
m7_120 -> m7_106  [key=2, style=dotted];
m7_120 -> m7_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_121 -> m7_117  [key=0, style=bold, color=blue];
m7_65 -> m7_66  [key=0, style=solid, color=green];
m7_66 -> m7_67  [key=0, style=solid, color=green];
m7_66 -> m7_70  [key=2, style=dotted, color=green];
m7_67 -> m7_68  [key=0, style=solid, color=green];
m7_68 -> m7_69  [key=0, style=solid, color=green];
m7_68 -> m7_71  [key=2, style=dotted, color=green];
m7_69 -> m7_65  [key=0, style=bold, color=blue];
m7_159 -> m7_160  [key=0, style=solid];
m7_160 -> m7_70  [key=2, style=dotted];
m7_160 -> m7_161  [key=0, style=solid];
m7_161 -> m7_162  [key=0, style=solid];
m7_161 -> m7_141  [key=2, style=dotted];
m7_162 -> m7_163  [key=0, style=solid];
m7_162 -> m7_106  [key=2, style=dotted];
m7_162 -> m7_164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_163 -> m7_159  [key=0, style=bold, color=blue];
m7_70 -> m7_329  [key=0, style=solid];
m7_329 -> m7_330  [key=0, style=solid];
m7_329 -> m7_57  [key=2, style=dotted];
m7_330 -> m7_70  [key=0, style=bold, color=blue];
m7_142 -> m7_143  [key=0, style=solid];
m7_143 -> m7_70  [key=2, style=dotted];
m7_143 -> m7_144  [key=0, style=solid];
m7_143 -> m7_148  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m7_144 -> m7_38  [key=2, style=dotted];
m7_144 -> m7_145  [key=0, style=solid];
m7_144 -> m7_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_145 -> m7_53  [key=2, style=dotted];
m7_145 -> m7_146  [key=0, style=solid];
m7_146 -> m7_142  [key=0, style=bold, color=blue];
m7_311 -> m7_312  [key=0, style=solid];
m7_313 -> m7_314  [key=0, style=solid];
m7_313 -> m7_18  [key=2, style=dotted];
m7_313 -> m7_228  [key=2, style=dotted];
m7_313 -> m7_320  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_314 -> m7_70  [key=2, style=dotted];
m7_314 -> m7_315  [key=0, style=solid];
m7_315 -> m7_316  [key=0, style=solid];
m7_315 -> m7_141  [key=2, style=dotted];
m7_315 -> m7_317  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_316 -> m7_317  [key=0, style=solid];
m7_316 -> m7_106  [key=2, style=dotted];
m7_316 -> m7_323  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_312 -> m7_313  [key=0, style=solid];
m7_312 -> m7_316  [key=1, style=dashed, color=darkseagreen4, label=exception];
m7_312 -> m7_324  [key=1, style=dashed, color=darkseagreen4, label=exception];
m7_312 -> m7_319  [key=2, style=dotted];
m7_312 -> m7_327  [key=1, style=dashed, color=darkseagreen4, label=exception];
m7_317 -> m7_318  [key=0, style=solid];
m7_317 -> m7_201  [key=2, style=dotted];
m7_318 -> m7_311  [key=0, style=bold, color=blue];
m7_98 -> m7_99  [key=0, style=solid];
m7_100 -> m7_101  [key=0, style=solid];
m7_100 -> m7_105  [key=2, style=dotted];
m7_101 -> m7_70  [key=2, style=dotted];
m7_101 -> m7_102  [key=0, style=solid];
m7_102 -> m7_103  [key=0, style=solid];
m7_102 -> m7_80  [key=2, style=dotted];
m7_103 -> m7_104  [key=0, style=solid];
m7_103 -> m7_106  [key=2, style=dotted];
m7_103 -> m7_111  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_99 -> m7_100  [key=0, style=solid];
m7_99 -> m7_102  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_99 -> m7_103  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_99 -> m7_15  [key=2, style=dotted];
m7_99 -> m7_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_99 -> m7_112  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_104 -> m7_98  [key=0, style=bold, color=blue];
m7_211 -> m7_212  [key=0, style=solid];
m7_212 -> m7_70  [key=2, style=dotted];
m7_212 -> m7_213  [key=0, style=solid];
m7_213 -> m7_214  [key=0, style=solid];
m7_213 -> m7_141  [key=2, style=dotted];
m7_215 -> m7_216  [key=0, style=solid];
m7_215 -> m7_106  [key=2, style=dotted];
m7_215 -> m7_217  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_214 -> m7_215  [key=0, style=solid];
m7_214 -> m7_201  [key=2, style=dotted];
m7_216 -> m7_211  [key=0, style=bold, color=blue];
m7_81 -> m7_82  [key=0, style=solid];
m7_82 -> m7_70  [key=2, style=dotted];
m7_82 -> m7_83  [key=0, style=solid];
m7_82 -> m7_87  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_38  [key=2, style=dotted];
m7_83 -> m7_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_84 -> m7_85  [key=0, style=solid];
m7_84 -> m7_53  [key=2, style=dotted];
m7_85 -> m7_81  [key=0, style=bold, color=blue];
m7_72 -> m7_73  [key=0, style=solid];
m7_73 -> m7_70  [key=2, style=dotted];
m7_73 -> m7_74  [key=0, style=solid];
m7_73 -> m7_78  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_38  [key=2, style=dotted];
m7_74 -> m7_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_75 -> m7_76  [key=0, style=solid];
m7_75 -> m7_53  [key=2, style=dotted];
m7_76 -> m7_72  [key=0, style=bold, color=blue];
m7_168 -> m7_169  [key=0, style=solid];
m7_169 -> m7_70  [key=2, style=dotted];
m7_169 -> m7_170  [key=0, style=solid];
m7_170 -> m7_171  [key=0, style=solid];
m7_170 -> m7_141  [key=2, style=dotted];
m7_170 -> m7_172  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_171 -> m7_172  [key=0, style=solid];
m7_171 -> m7_106  [key=2, style=dotted];
m7_171 -> m7_175  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_172 -> m7_173  [key=0, style=solid];
m7_172 -> m7_174  [key=2, style=dotted];
m7_173 -> m7_168  [key=0, style=bold, color=blue];
m7_114 -> m7_115  [key=0, style=solid];
m7_55 -> m7_56  [key=0, style=solid];
m7_55 -> m7_57  [key=2, style=dotted];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_57  [key=2, style=dotted];
m7_78 -> m7_79  [key=0, style=solid];
m7_78 -> m7_80  [key=2, style=dotted];
m7_87 -> m7_88  [key=0, style=solid];
m7_87 -> m7_80  [key=2, style=dotted];
m7_95 -> m7_96  [key=0, style=solid];
m7_95 -> m7_97  [key=2, style=dotted];
m7_123 -> m7_124  [key=0, style=solid];
m7_123 -> m7_38  [key=2, style=dotted];
m7_123 -> m7_125  [key=2, style=dotted];
m7_123 -> m7_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_127 -> m7_128  [key=0, style=solid];
m7_139 -> m7_140  [key=0, style=solid];
m7_139 -> m7_141  [key=2, style=dotted];
m7_157 -> m7_158  [key=0, style=solid];
m7_157 -> m7_141  [key=2, style=dotted];
m7_176 -> m7_177  [key=0, style=solid];
m7_176 -> m7_38  [key=2, style=dotted];
m7_176 -> m7_125  [key=2, style=dotted];
m7_176 -> m7_178  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_179 -> m7_180  [key=0, style=solid];
m7_179 -> m7_181  [key=2, style=dotted];
m7_188 -> m7_189  [key=0, style=solid];
m7_188 -> m7_38  [key=2, style=dotted];
m7_188 -> m7_125  [key=2, style=dotted];
m7_188 -> m7_190  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_191 -> m7_192  [key=0, style=solid];
m7_233 -> m7_234  [key=0, style=solid];
m7_233 -> m7_38  [key=2, style=dotted];
m7_233 -> m7_125  [key=2, style=dotted];
m7_248 -> m7_249  [key=0, style=solid];
m7_248 -> m7_38  [key=2, style=dotted];
m7_248 -> m7_125  [key=2, style=dotted];
m7_248 -> m7_250  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_268 -> m7_269  [key=0, style=solid];
m7_268 -> m7_38  [key=2, style=dotted];
m7_268 -> m7_125  [key=2, style=dotted];
m7_268 -> m7_270  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_271 -> m7_272  [key=0, style=solid];
m7_281 -> m7_282  [key=0, style=solid];
m7_281 -> m7_38  [key=2, style=dotted];
m7_281 -> m7_125  [key=2, style=dotted];
m7_281 -> m7_283  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_284 -> m7_285  [key=0, style=solid];
m7_299 -> m7_300  [key=0, style=solid];
m7_299 -> m7_38  [key=2, style=dotted];
m7_299 -> m7_301  [key=2, style=dotted];
m7_306 -> m7_307  [key=0, style=solid];
m7_306 -> m7_38  [key=2, style=dotted];
m7_306 -> m7_125  [key=2, style=dotted];
m7_306 -> m7_308  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_324 -> m7_325  [key=0, style=solid];
m7_324 -> m7_38  [key=2, style=dotted];
m7_324 -> m7_125  [key=2, style=dotted];
m7_324 -> m7_326  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_24 -> m7_25  [key=0, style=solid];
m7_28 -> m7_29  [key=0, style=solid];
m7_31 -> m7_32  [key=0, style=solid];
m7_35 -> m7_36  [key=0, style=solid];
m7_40 -> m7_41  [key=0, style=solid];
m7_44 -> m7_45  [key=0, style=solid];
m7_54 -> m7_55  [key=0, style=solid];
m7_56 -> m7_54  [key=0, style=bold, color=blue];
m7_62 -> m7_63  [key=0, style=solid];
m7_64 -> m7_62  [key=0, style=bold, color=blue];
m7_77 -> m7_78  [key=0, style=solid];
m7_79 -> m7_77  [key=0, style=bold, color=blue];
m7_86 -> m7_87  [key=0, style=solid];
m7_88 -> m7_86  [key=0, style=bold, color=blue];
m7_94 -> m7_95  [key=0, style=solid];
m7_96 -> m7_94  [key=0, style=bold, color=blue];
m7_111 -> m7_112  [key=0, style=solid];
m7_122 -> m7_123  [key=0, style=solid];
m7_124 -> m7_122  [key=0, style=bold, color=blue];
m7_126 -> m7_127  [key=0, style=solid];
m7_128 -> m7_126  [key=0, style=bold, color=blue];
m7_138 -> m7_139  [key=0, style=solid];
m7_140 -> m7_138  [key=0, style=bold, color=blue];
m7_148 -> m7_149  [key=0, style=solid];
m7_148 -> m7_150  [key=2, style=dotted];
m7_156 -> m7_157  [key=0, style=solid];
m7_158 -> m7_156  [key=0, style=bold, color=blue];
m7_164 -> m7_165  [key=0, style=solid];
m7_175 -> m7_176  [key=0, style=solid];
m7_177 -> m7_175  [key=0, style=bold, color=blue];
m7_178 -> m7_179  [key=0, style=solid];
m7_180 -> m7_178  [key=0, style=bold, color=blue];
m7_187 -> m7_188  [key=0, style=solid];
m7_189 -> m7_187  [key=0, style=bold, color=blue];
m7_190 -> m7_191  [key=0, style=solid];
m7_192 -> m7_190  [key=0, style=bold, color=blue];
m7_202 -> m7_203  [key=0, style=solid];
m7_205 -> m7_206  [key=0, style=solid];
m7_208 -> m7_209  [key=0, style=solid];
m7_217 -> m7_218  [key=0, style=solid];
m7_229 -> m7_230  [key=0, style=solid];
m7_232 -> m7_233  [key=0, style=solid];
m7_234 -> m7_232  [key=0, style=bold, color=blue];
m7_244 -> m7_245  [key=0, style=solid];
m7_247 -> m7_248  [key=0, style=solid];
m7_249 -> m7_247  [key=0, style=bold, color=blue];
m7_250 -> m7_251  [key=0, style=solid];
m7_261 -> m7_262  [key=0, style=solid];
m7_264 -> m7_265  [key=0, style=solid];
m7_267 -> m7_268  [key=0, style=solid];
m7_269 -> m7_267  [key=0, style=bold, color=blue];
m7_270 -> m7_271  [key=0, style=solid];
m7_272 -> m7_270  [key=0, style=bold, color=blue];
m7_280 -> m7_281  [key=0, style=solid];
m7_282 -> m7_280  [key=0, style=bold, color=blue];
m7_283 -> m7_284  [key=0, style=solid];
m7_285 -> m7_283  [key=0, style=bold, color=blue];
m7_286 -> m7_287  [key=0, style=solid];
m7_298 -> m7_299  [key=0, style=solid];
m7_302 -> m7_303  [key=0, style=solid];
m7_300 -> m7_298  [key=0, style=bold, color=blue];
m7_305 -> m7_306  [key=0, style=solid];
m7_307 -> m7_305  [key=0, style=bold, color=blue];
m7_308 -> m7_309  [key=0, style=solid];
m7_320 -> m7_321  [key=0, style=solid];
m7_323 -> m7_324  [key=0, style=solid];
m7_325 -> m7_323  [key=0, style=bold, color=blue];
m7_326 -> m7_327  [key=0, style=solid];
m7_26 -> m7_24  [key=0, style=bold, color=blue];
m7_25 -> m7_26  [key=0, style=solid];
m7_25 -> m7_27  [key=2, style=dotted];
m7_30 -> m7_28  [key=0, style=bold, color=blue];
m7_29 -> m7_30  [key=0, style=solid];
m7_33 -> m7_31  [key=0, style=bold, color=blue];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_34  [key=2, style=dotted];
m7_37 -> m7_35  [key=0, style=bold, color=blue];
m7_36 -> m7_38  [key=2, style=dotted];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_39  [key=2, style=dotted];
m7_42 -> m7_40  [key=0, style=bold, color=blue];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_43  [key=2, style=dotted];
m7_46 -> m7_44  [key=0, style=bold, color=blue];
m7_45 -> m7_38  [key=2, style=dotted];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> m7_47  [key=2, style=dotted];
m7_45 -> m7_48  [key=2, style=dotted];
m7_112 -> m7_38  [key=2, style=dotted];
m7_112 -> m7_113  [key=0, style=solid];
m7_112 -> m7_39  [key=2, style=dotted];
m7_112 -> m7_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_203 -> m7_38  [key=2, style=dotted];
m7_203 -> m7_204  [key=0, style=solid];
m7_203 -> m7_43  [key=2, style=dotted];
m7_209 -> m7_38  [key=2, style=dotted];
m7_209 -> m7_125  [key=2, style=dotted];
m7_209 -> m7_210  [key=0, style=solid];
m7_218 -> m7_38  [key=2, style=dotted];
m7_218 -> m7_125  [key=2, style=dotted];
m7_218 -> m7_219  [key=0, style=solid];
m7_230 -> m7_38  [key=2, style=dotted];
m7_230 -> m7_125  [key=2, style=dotted];
m7_230 -> m7_231  [key=0, style=solid];
m7_321 -> m7_38  [key=2, style=dotted];
m7_321 -> m7_125  [key=2, style=dotted];
m7_321 -> m7_322  [key=0, style=solid];
m7_107 -> m7_108  [key=0, style=solid];
m7_113 -> m7_111  [key=0, style=bold, color=blue];
m7_147 -> m7_148  [key=0, style=solid];
m7_149 -> m7_147  [key=0, style=bold, color=blue];
m7_166 -> m7_164  [key=0, style=bold, color=blue];
m7_165 -> m7_166  [key=0, style=solid];
m7_165 -> m7_167  [key=2, style=dotted];
m7_204 -> m7_202  [key=0, style=bold, color=blue];
m7_207 -> m7_205  [key=0, style=bold, color=blue];
m7_206 -> m7_207  [key=0, style=solid];
m7_206 -> m7_43  [key=2, style=dotted];
m7_210 -> m7_208  [key=0, style=bold, color=blue];
m7_219 -> m7_217  [key=0, style=bold, color=blue];
m7_231 -> m7_229  [key=0, style=bold, color=blue];
m7_246 -> m7_244  [key=0, style=bold, color=blue];
m7_245 -> m7_246  [key=0, style=solid];
m7_245 -> m7_43  [key=2, style=dotted];
m7_252 -> m7_250  [key=0, style=bold, color=blue];
m7_251 -> m7_252  [key=0, style=solid];
m7_263 -> m7_261  [key=0, style=bold, color=blue];
m7_262 -> m7_263  [key=0, style=solid];
m7_262 -> m7_43  [key=2, style=dotted];
m7_266 -> m7_264  [key=0, style=bold, color=blue];
m7_265 -> m7_266  [key=0, style=solid];
m7_288 -> m7_286  [key=0, style=bold, color=blue];
m7_287 -> m7_288  [key=0, style=solid];
m7_287 -> m7_289  [key=2, style=dotted];
m7_303 -> m7_304  [key=0, style=solid];
m7_309 -> m7_310  [key=0, style=solid];
m7_304 -> m7_302  [key=0, style=bold, color=blue];
m7_310 -> m7_308  [key=0, style=bold, color=blue];
m7_327 -> m7_328  [key=0, style=solid];
m7_322 -> m7_320  [key=0, style=bold, color=blue];
m7_328 -> m7_326  [key=0, style=bold, color=blue];
m7_109 -> m7_107  [key=0, style=bold, color=blue];
m7_108 -> m7_109  [key=0, style=solid];
m7_108 -> m7_110  [key=2, style=dotted];
m7_115 -> m7_116  [key=0, style=solid];
m7_116 -> m7_114  [key=0, style=bold, color=blue];
m7_290 -> m7_291  [key=0, style=solid];
m7_292 -> m7_293  [key=0, style=solid];
m7_292 -> m7_18  [key=2, style=dotted];
m7_292 -> m7_297  [key=2, style=dotted];
m7_292 -> m7_298  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_292 -> m7_302  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_293 -> m7_70  [key=2, style=dotted];
m7_293 -> m7_294  [key=0, style=solid];
m7_294 -> m7_295  [key=0, style=solid];
m7_294 -> m7_141  [key=2, style=dotted];
m7_295 -> m7_296  [key=0, style=solid];
m7_295 -> m7_106  [key=2, style=dotted];
m7_295 -> m7_305  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_291 -> m7_292  [key=0, style=solid];
m7_291 -> m7_295  [key=1, style=dashed, color=darkseagreen4, label=anotherState];
m7_291 -> m7_306  [key=1, style=dashed, color=darkseagreen4, label=anotherState];
m7_291 -> m7_17  [key=2, style=dotted];
m7_291 -> m7_303  [key=1, style=dashed, color=darkseagreen4, label=anotherState];
m7_291 -> m7_309  [key=1, style=dashed, color=darkseagreen4, label=anotherState];
m7_296 -> m7_290  [key=0, style=bold, color=blue];
m7_235 -> m7_236  [key=0, style=solid];
m7_236 -> m7_237  [key=0, style=solid];
m7_236 -> m7_18  [key=2, style=dotted];
m7_236 -> m7_22  [key=2, style=dotted];
m7_236 -> m7_242  [key=2, style=dotted];
m7_236 -> m7_243  [key=2, style=dotted];
m7_236 -> m7_19  [key=2, style=dotted];
m7_236 -> m7_244  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_237 -> m7_70  [key=2, style=dotted];
m7_237 -> m7_238  [key=0, style=solid];
m7_238 -> m7_239  [key=0, style=solid];
m7_238 -> m7_141  [key=2, style=dotted];
m7_238 -> m7_240  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_239 -> m7_240  [key=0, style=solid];
m7_239 -> m7_106  [key=2, style=dotted];
m7_239 -> m7_247  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_240 -> m7_241  [key=0, style=solid];
m7_240 -> m7_201  [key=2, style=dotted];
m7_241 -> m7_235  [key=0, style=bold, color=blue];
m7_193 -> m7_194  [key=0, style=solid];
m7_194 -> m7_195  [key=0, style=solid];
m7_194 -> m7_18  [key=2, style=dotted];
m7_194 -> m7_19  [key=2, style=dotted];
m7_194 -> m7_202  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_195 -> m7_70  [key=2, style=dotted];
m7_195 -> m7_196  [key=0, style=solid];
m7_196 -> m7_197  [key=0, style=solid];
m7_196 -> m7_141  [key=2, style=dotted];
m7_198 -> m7_199  [key=0, style=solid];
m7_198 -> m7_106  [key=2, style=dotted];
m7_198 -> m7_205  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_199 -> m7_200  [key=0, style=solid];
m7_199 -> m7_106  [key=2, style=dotted];
m7_199 -> m7_208  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_197 -> m7_198  [key=0, style=solid];
m7_197 -> m7_201  [key=2, style=dotted];
m7_200 -> m7_193  [key=0, style=bold, color=blue];
m7_133 -> m7_134  [key=0, style=solid];
m7_134 -> m7_70  [key=2, style=dotted];
m7_134 -> m7_135  [key=0, style=solid];
m7_134 -> m7_139  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m7_135 -> m7_136  [key=0, style=solid];
m7_135 -> m7_38  [key=2, style=dotted];
m7_135 -> m7_138  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_136 -> m7_53  [key=2, style=dotted];
m7_136 -> m7_137  [key=0, style=solid];
m7_137 -> m7_133  [key=0, style=bold, color=blue];
m7_331 -> m7_66  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_68  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_74  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_83  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_90  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_91  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_100  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_101  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_102  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_103  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_118  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_119  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_120  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_123  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_127  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_130  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_131  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_134  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_135  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_139  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_143  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_152  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_153  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_157  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_160  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_161  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_162  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_169  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_170  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_171  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_176  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_183  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_184  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_185  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_188  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_191  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_194  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_195  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_196  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_198  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_199  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_212  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_213  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_215  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_221  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_222  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_223  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_224  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_233  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_236  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_237  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_238  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_239  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_248  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_254  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_255  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_256  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_257  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_258  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_268  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_271  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_274  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_275  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_276  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_281  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_284  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_277  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_292  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_299  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_293  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_294  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_295  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_306  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_313  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_314  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_315  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_316  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_324  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_331 -> m7_329  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m7_332 -> m7_78  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m7_333 -> m7_87  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m7_334 -> m7_95  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m7_336 -> m7_139  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m7_338 -> m7_157  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m7_339 -> m7_306  [key=1, style=dashed, color=darkseagreen4, label=anotherState];
m7_339 -> m7_303  [key=1, style=dashed, color=darkseagreen4, label=anotherState];
m7_339 -> m7_309  [key=1, style=dashed, color=darkseagreen4, label=anotherState];
m7_340 -> m7_324  [key=1, style=dashed, color=darkseagreen4, label=exception];
m7_340 -> m7_327  [key=1, style=dashed, color=darkseagreen4, label=exception];
m7_337 -> m7_148  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m7_335 -> m7_112  [key=1, style=dashed, color=darkseagreen4, label=job];
}
