digraph  {
n4 [label="Hangfire.Server.ServerWatchdogOptions", span=""];
n0 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", label="Entry Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="23-23"];
n1 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", label="ServerTimeout = ServerWatchdog.DefaultServerTimeout", span="25-25"];
n2 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", label="CheckInterval = ServerWatchdog.DefaultCheckInterval", span="26-26"];
n3 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", label="Exit Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="23-23"];
m0_0 [cluster="HangFire.Storage.IAtomicWriteTransaction.Commit()", file="IAtomicWriteTransaction.cs", label="Entry HangFire.Storage.IAtomicWriteTransaction.Commit()", span="13-13"];
m0_1 [cluster="HangFire.Storage.IAtomicWriteTransaction.Commit()", file="IAtomicWriteTransaction.cs", label="Exit HangFire.Storage.IAtomicWriteTransaction.Commit()", span="13-13"];
m1_0 [cluster="HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="IMonitoringApi.cs", label="Entry HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="11-11"];
m1_1 [cluster="HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="IMonitoringApi.cs", label="Exit HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="11-11"];
m2_2 [cluster="HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="9-9"];
m2_3 [cluster="HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="9-9"];
m2_6 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17"];
m2_7 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17"];
m2_0 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
m2_1 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
m2_12 [cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.Heartbeat(string)", span="25-25"];
m2_13 [cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.Heartbeat(string)", span="25-25"];
m2_8 [cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="23-23"];
m2_9 [cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="23-23"];
m2_4 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11"];
m2_5 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11"];
m2_10 [cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.RemoveServer(string)", span="24-24"];
m2_11 [cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.RemoveServer(string)", span="24-24"];
m2_14 [cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="26-26"];
m2_15 [cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="26-26"];
m3_6 [cluster="HangFire.Storage.IStoredJobs.Complete(HangFire.Server.JobPayload)", file="IStoredJobs.cs", label="Entry HangFire.Storage.IStoredJobs.Complete(HangFire.Server.JobPayload)", span="10-10"];
m3_7 [cluster="HangFire.Storage.IStoredJobs.Complete(HangFire.Server.JobPayload)", file="IStoredJobs.cs", label="Exit HangFire.Storage.IStoredJobs.Complete(HangFire.Server.JobPayload)", span="10-10"];
m3_4 [cluster="HangFire.Storage.IStoredJobs.GetParameter(string, string)", file="IStoredJobs.cs", label="Entry HangFire.Storage.IStoredJobs.GetParameter(string, string)", span="8-8"];
m3_5 [cluster="HangFire.Storage.IStoredJobs.GetParameter(string, string)", file="IStoredJobs.cs", label="Exit HangFire.Storage.IStoredJobs.GetParameter(string, string)", span="8-8"];
m3_2 [cluster="HangFire.Storage.IStoredJobs.SetParameter(string, string, string)", file="IStoredJobs.cs", label="Entry HangFire.Storage.IStoredJobs.SetParameter(string, string, string)", span="7-7"];
m3_3 [cluster="HangFire.Storage.IStoredJobs.SetParameter(string, string, string)", file="IStoredJobs.cs", label="Exit HangFire.Storage.IStoredJobs.SetParameter(string, string, string)", span="7-7"];
m3_0 [cluster="HangFire.Storage.IStoredJobs.GetStateAndInvocationData(string)", file="IStoredJobs.cs", label="Entry HangFire.Storage.IStoredJobs.GetStateAndInvocationData(string)", span="6-6"];
m3_1 [cluster="HangFire.Storage.IStoredJobs.GetStateAndInvocationData(string)", file="IStoredJobs.cs", label="Exit HangFire.Storage.IStoredJobs.GetStateAndInvocationData(string)", span="6-6"];
m4_0 [cluster="HangFire.Storage.IStoredSets.GetFirstByLowestScore(string, long, long)", file="IStoredSets.cs", label="Entry HangFire.Storage.IStoredSets.GetFirstByLowestScore(string, long, long)", span="4-4"];
m4_1 [cluster="HangFire.Storage.IStoredSets.GetFirstByLowestScore(string, long, long)", file="IStoredSets.cs", label="Exit HangFire.Storage.IStoredSets.GetFirstByLowestScore(string, long, long)", span="4-4"];
m5_0 [cluster="HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="IWriteableJobQueue.cs", label="Entry HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", span="4-4"];
m5_1 [cluster="HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="IWriteableJobQueue.cs", label="Exit HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", span="4-4"];
m6_0 [cluster="HangFire.Storage.IWriteableStoredCounters.Increment(string)", file="IWriteableStoredCounters.cs", label="Entry HangFire.Storage.IWriteableStoredCounters.Increment(string)", span="6-6"];
m6_1 [cluster="HangFire.Storage.IWriteableStoredCounters.Increment(string)", file="IWriteableStoredCounters.cs", label="Exit HangFire.Storage.IWriteableStoredCounters.Increment(string)", span="6-6"];
m6_4 [cluster="HangFire.Storage.IWriteableStoredCounters.Decrement(string)", file="IWriteableStoredCounters.cs", label="Entry HangFire.Storage.IWriteableStoredCounters.Decrement(string)", span="9-9"];
m6_5 [cluster="HangFire.Storage.IWriteableStoredCounters.Decrement(string)", file="IWriteableStoredCounters.cs", label="Exit HangFire.Storage.IWriteableStoredCounters.Decrement(string)", span="9-9"];
m6_6 [cluster="HangFire.Storage.IWriteableStoredCounters.Decrement(string, System.TimeSpan)", file="IWriteableStoredCounters.cs", label="Entry HangFire.Storage.IWriteableStoredCounters.Decrement(string, System.TimeSpan)", span="10-10"];
m6_7 [cluster="HangFire.Storage.IWriteableStoredCounters.Decrement(string, System.TimeSpan)", file="IWriteableStoredCounters.cs", label="Exit HangFire.Storage.IWriteableStoredCounters.Decrement(string, System.TimeSpan)", span="10-10"];
m6_2 [cluster="HangFire.Storage.IWriteableStoredCounters.Increment(string, System.TimeSpan)", file="IWriteableStoredCounters.cs", label="Entry HangFire.Storage.IWriteableStoredCounters.Increment(string, System.TimeSpan)", span="7-7"];
m6_3 [cluster="HangFire.Storage.IWriteableStoredCounters.Increment(string, System.TimeSpan)", file="IWriteableStoredCounters.cs", label="Exit HangFire.Storage.IWriteableStoredCounters.Increment(string, System.TimeSpan)", span="7-7"];
m7_10 [cluster="Unk.GetValue", file="IWriteableStoredJobs.cs", label="Entry Unk.GetValue", span=""];
m7_9 [cluster="string.Format(string, object, object)", file="IWriteableStoredJobs.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m7_0 [cluster="Hangfire.Sample.Highlighter.MultipleButtonAttribute.IsValidName(ControllerContext, string, System.Reflection.MethodInfo)", file="IWriteableStoredJobs.cs", label="Entry Hangfire.Sample.Highlighter.MultipleButtonAttribute.IsValidName(ControllerContext, string, System.Reflection.MethodInfo)", span="17-17"];
m7_1 [cluster="Hangfire.Sample.Highlighter.MultipleButtonAttribute.IsValidName(ControllerContext, string, System.Reflection.MethodInfo)", file="IWriteableStoredJobs.cs", label="var isValidName = false", span="19-19"];
m7_3 [cluster="Hangfire.Sample.Highlighter.MultipleButtonAttribute.IsValidName(ControllerContext, string, System.Reflection.MethodInfo)", file="IWriteableStoredJobs.cs", label="var value = controllerContext.Controller.ValueProvider.GetValue(keyValue)", span="21-21"];
m7_5 [cluster="Hangfire.Sample.Highlighter.MultipleButtonAttribute.IsValidName(ControllerContext, string, System.Reflection.MethodInfo)", file="IWriteableStoredJobs.cs", label="controllerContext.Controller.ControllerContext.RouteData.Values[Name] = Argument", span="25-25"];
m7_2 [cluster="Hangfire.Sample.Highlighter.MultipleButtonAttribute.IsValidName(ControllerContext, string, System.Reflection.MethodInfo)", file="IWriteableStoredJobs.cs", label="var keyValue = string.Format(''{0}:{1}'', Name, Argument)", span="20-20"];
m7_7 [cluster="Hangfire.Sample.Highlighter.MultipleButtonAttribute.IsValidName(ControllerContext, string, System.Reflection.MethodInfo)", file="IWriteableStoredJobs.cs", label="return isValidName;", span="29-29"];
m7_4 [cluster="Hangfire.Sample.Highlighter.MultipleButtonAttribute.IsValidName(ControllerContext, string, System.Reflection.MethodInfo)", file="IWriteableStoredJobs.cs", label="value != null", span="23-23"];
m7_6 [cluster="Hangfire.Sample.Highlighter.MultipleButtonAttribute.IsValidName(ControllerContext, string, System.Reflection.MethodInfo)", file="IWriteableStoredJobs.cs", label="isValidName = true", span="26-26"];
m7_8 [cluster="Hangfire.Sample.Highlighter.MultipleButtonAttribute.IsValidName(ControllerContext, string, System.Reflection.MethodInfo)", file="IWriteableStoredJobs.cs", label="Exit Hangfire.Sample.Highlighter.MultipleButtonAttribute.IsValidName(ControllerContext, string, System.Reflection.MethodInfo)", span="17-17"];
m7_11 [file="IWriteableStoredJobs.cs", label="Hangfire.Sample.Highlighter.MultipleButtonAttribute", span=""];
m8_0 [cluster="Hangfire.Dashboard.DashboardMetrics.DashboardMetrics()", file="IWriteableStoredLists.cs", label="Entry Hangfire.Dashboard.DashboardMetrics.DashboardMetrics()", span="28-28"];
m8_1 [cluster="Hangfire.Dashboard.DashboardMetrics.DashboardMetrics()", file="IWriteableStoredLists.cs", label="AddMetric(ServerCount)", span="30-30"];
m8_2 [cluster="Hangfire.Dashboard.DashboardMetrics.DashboardMetrics()", file="IWriteableStoredLists.cs", label="AddMetric(RecurringJobCount)", span="31-31"];
m8_3 [cluster="Hangfire.Dashboard.DashboardMetrics.DashboardMetrics()", file="IWriteableStoredLists.cs", label="AddMetric(RetriesCount)", span="32-32"];
m8_4 [cluster="Hangfire.Dashboard.DashboardMetrics.DashboardMetrics()", file="IWriteableStoredLists.cs", label="AddMetric(EnqueuedCountOrNull)", span="33-33"];
m8_5 [cluster="Hangfire.Dashboard.DashboardMetrics.DashboardMetrics()", file="IWriteableStoredLists.cs", label="AddMetric(FailedCountOrNull)", span="34-34"];
m8_6 [cluster="Hangfire.Dashboard.DashboardMetrics.DashboardMetrics()", file="IWriteableStoredLists.cs", label="AddMetric(EnqueuedAndQueueCount)", span="35-35"];
m8_7 [cluster="Hangfire.Dashboard.DashboardMetrics.DashboardMetrics()", file="IWriteableStoredLists.cs", label="AddMetric(ScheduledCount)", span="36-36"];
m8_8 [cluster="Hangfire.Dashboard.DashboardMetrics.DashboardMetrics()", file="IWriteableStoredLists.cs", label="AddMetric(ProcessingCount)", span="37-37"];
m8_9 [cluster="Hangfire.Dashboard.DashboardMetrics.DashboardMetrics()", file="IWriteableStoredLists.cs", label="AddMetric(SucceededCount)", span="38-38"];
m8_10 [cluster="Hangfire.Dashboard.DashboardMetrics.DashboardMetrics()", file="IWriteableStoredLists.cs", label="AddMetric(FailedCount)", span="39-39"];
m8_11 [cluster="Hangfire.Dashboard.DashboardMetrics.DashboardMetrics()", file="IWriteableStoredLists.cs", label="AddMetric(DeletedCount)", span="40-40"];
m8_12 [cluster="Hangfire.Dashboard.DashboardMetrics.DashboardMetrics()", file="IWriteableStoredLists.cs", label="Exit Hangfire.Dashboard.DashboardMetrics.DashboardMetrics()", span="28-28"];
m8_13 [cluster="Hangfire.Dashboard.DashboardMetrics.AddMetric(Hangfire.Dashboard.DashboardMetric)", file="IWriteableStoredLists.cs", label="Entry Hangfire.Dashboard.DashboardMetrics.AddMetric(Hangfire.Dashboard.DashboardMetric)", span="43-43"];
m8_14 [cluster="Hangfire.Dashboard.DashboardMetrics.AddMetric(Hangfire.Dashboard.DashboardMetric)", file="IWriteableStoredLists.cs", label="metric == null", span="45-45"];
m8_17 [cluster="Hangfire.Dashboard.DashboardMetrics.AddMetric(Hangfire.Dashboard.DashboardMetric)", file="IWriteableStoredLists.cs", label="Metrics[metric.Name] = metric", span="49-49"];
m8_15 [cluster="Hangfire.Dashboard.DashboardMetrics.AddMetric(Hangfire.Dashboard.DashboardMetric)", file="IWriteableStoredLists.cs", label="throw new ArgumentNullException(''metric'');", span="45-45"];
m8_16 [cluster="Hangfire.Dashboard.DashboardMetrics.AddMetric(Hangfire.Dashboard.DashboardMetric)", file="IWriteableStoredLists.cs", label=Metrics, span="47-47"];
m8_18 [cluster="Hangfire.Dashboard.DashboardMetrics.AddMetric(Hangfire.Dashboard.DashboardMetric)", file="IWriteableStoredLists.cs", label="Exit Hangfire.Dashboard.DashboardMetrics.AddMetric(Hangfire.Dashboard.DashboardMetric)", span="43-43"];
m8_19 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="IWriteableStoredLists.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m8_42 [cluster="Hangfire.JobStorage.GetConnection()", file="IWriteableStoredLists.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m8_50 [cluster="string.Format(string, object)", file="IWriteableStoredLists.cs", label="Entry string.Format(string, object)", span="0-0"];
m8_54 [cluster="string.Format(string, object, object)", file="IWriteableStoredLists.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m8_28 [cluster="Hangfire.Dashboard.Metric.Metric(string)", file="IWriteableStoredLists.cs", label="Entry Hangfire.Dashboard.Metric.Metric(string)", span="20-20"];
m8_24 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="IWriteableStoredLists.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m8_29 [cluster="long.ToString(string)", file="IWriteableStoredLists.cs", label="Entry long.ToString(string)", span="0-0"];
m8_20 [cluster="Hangfire.Dashboard.DashboardMetrics.GetMetrics()", file="IWriteableStoredLists.cs", label="Entry Hangfire.Dashboard.DashboardMetrics.GetMetrics()", span="53-53"];
m8_21 [cluster="Hangfire.Dashboard.DashboardMetrics.GetMetrics()", file="IWriteableStoredLists.cs", label=Metrics, span="55-55"];
m8_22 [cluster="Hangfire.Dashboard.DashboardMetrics.GetMetrics()", file="IWriteableStoredLists.cs", label="return Metrics.Values.ToList();", span="57-57"];
m8_23 [cluster="Hangfire.Dashboard.DashboardMetrics.GetMetrics()", file="IWriteableStoredLists.cs", label="Exit Hangfire.Dashboard.DashboardMetrics.GetMetrics()", span="53-53"];
m8_67 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="Entry lambda expression", span="168-168"];
m8_25 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="Entry lambda expression", span="64-71"];
m8_26 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="new Metric(page.Statistics.Servers.ToString(''N0''))\r\n            {\r\n                Style = page.Statistics.Servers == 0 ? MetricStyle.Warning : MetricStyle.Default,\r\n                Highlighted = page.Statistics.Servers == 0,\r\n                Title = page.Statistics.Servers == 0\r\n                    ? ''No active servers found. Jobs will not be processed.''\r\n                    : null\r\n            }", span="64-71"];
m8_27 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="Exit lambda expression", span="64-71"];
m8_30 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="Entry lambda expression", span="76-76"];
m8_31 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="new Metric(page.Statistics.Recurring.ToString(''N0''))", span="76-76"];
m8_32 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="Exit lambda expression", span="76-76"];
m8_33 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="Entry lambda expression", span="81-99"];
m8_34 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="long retryCount", span="83-83"];
m8_35 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="var connection = page.Storage.GetConnection()", span="84-84"];
m8_36 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="var storageConnection = connection as JobStorageConnection", span="86-86"];
m8_37 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="storageConnection == null", span="87-87"];
m8_39 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="retryCount = storageConnection.GetSetCount(''retries'')", span="92-92"];
m8_38 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="return null;", span="89-89"];
m8_40 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="return new Metric(retryCount.ToString(''N0''))\r\n                {\r\n                    Style = retryCount > 0 ? MetricStyle.Warning : MetricStyle.Default\r\n                };", span="95-98"];
m8_41 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="Exit lambda expression", span="81-99"];
m8_44 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="Entry lambda expression", span="103-109"];
m8_45 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="page.Statistics.Enqueued > 0 || page.Statistics.Failed == 0\r\n                ? new Metric(page.Statistics.Enqueued.ToString(''N0''))\r\n                {\r\n                    Style = page.Statistics.Enqueued > 0 ? MetricStyle.Info : MetricStyle.Default,\r\n                    Highlighted = page.Statistics.Enqueued > 0 && page.Statistics.Failed == 0\r\n                }\r\n                : null", span="103-109"];
m8_46 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="Exit lambda expression", span="103-109"];
m8_47 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="Entry lambda expression", span="113-121"];
m8_48 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="page.Statistics.Failed > 0\r\n                ? new Metric(page.Statistics.Failed.ToString(''N0''))\r\n                {\r\n                    Style = MetricStyle.Danger,\r\n                    Highlighted = true,\r\n                    Title =\r\n                        String.Format(''{0} failed job(s) found. Retry or delete them manually.'', page.Statistics.Failed)\r\n                }\r\n                : null", span="113-121"];
m8_49 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="Exit lambda expression", span="113-121"];
m8_51 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="Entry lambda expression", span="125-129"];
m8_52 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="new Metric(String.Format(''{0:N0} / {1:N0}'', page.Statistics.Enqueued, page.Statistics.Queues))\r\n            {\r\n                Style = page.Statistics.Enqueued > 0 ? MetricStyle.Info : MetricStyle.Default,\r\n                Highlighted = page.Statistics.Enqueued > 0\r\n            }", span="125-129"];
m8_53 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="Exit lambda expression", span="125-129"];
m8_55 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="Entry lambda expression", span="134-137"];
m8_56 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="new Metric(page.Statistics.Scheduled.ToString(''N0''))\r\n            {\r\n                Style = page.Statistics.Scheduled > 0 ? MetricStyle.Info : MetricStyle.Default\r\n            }", span="134-137"];
m8_57 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="Exit lambda expression", span="134-137"];
m8_58 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="Entry lambda expression", span="142-145"];
m8_59 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="new Metric(page.Statistics.Processing.ToString(''N0''))\r\n            {\r\n                Style = page.Statistics.Processing > 0 ? MetricStyle.Warning : MetricStyle.Default\r\n            }", span="142-145"];
m8_60 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="Exit lambda expression", span="142-145"];
m8_61 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="Entry lambda expression", span="150-153"];
m8_62 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="new Metric(page.Statistics.Succeeded.ToString(''N0''))\r\n            {\r\n                IntValue = page.Statistics.Succeeded\r\n            }", span="150-153"];
m8_63 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="Exit lambda expression", span="150-153"];
m8_64 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="Entry lambda expression", span="158-163"];
m8_65 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="new Metric(page.Statistics.Failed.ToString(''N0''))\r\n            {\r\n                IntValue = page.Statistics.Failed,\r\n                Style = page.Statistics.Failed > 0 ? MetricStyle.Danger : MetricStyle.Default,\r\n                Highlighted = page.Statistics.Failed > 0\r\n            }", span="158-163"];
m8_66 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="Exit lambda expression", span="158-163"];
m8_68 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="new Metric(page.Statistics.Deleted.ToString(''N0''))", span="168-168"];
m8_69 [cluster="lambda expression", file="IWriteableStoredLists.cs", label="Exit lambda expression", span="168-168"];
m8_43 [cluster="Hangfire.Storage.JobStorageConnection.GetSetCount(string)", file="IWriteableStoredLists.cs", label="Entry Hangfire.Storage.JobStorageConnection.GetSetCount(string)", span="53-53"];
m9_13 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="IWriteableStoredSets.cs", label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", span="51-51"];
m9_3 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", file="IWriteableStoredSets.cs", label="Entry HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", span="29-29"];
m9_4 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", file="IWriteableStoredSets.cs", label="BinaryExpressionFingerprint other = obj as BinaryExpressionFingerprint", span="31-31"];
m9_5 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", file="IWriteableStoredSets.cs", label="return (other != null)\r\n                   && Equals(this.Method, other.Method)\r\n                   && this.Equals(other);", span="32-34"];
m9_6 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", file="IWriteableStoredSets.cs", label="Exit HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", span="29-29"];
m9_8 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="IWriteableStoredSets.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30"];
m9_7 [cluster="object.Equals(object, object)", file="IWriteableStoredSets.cs", label="Entry object.Equals(object, object)", span="0-0"];
m9_14 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="IWriteableStoredSets.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="24-24"];
m9_9 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="IWriteableStoredSets.cs", label="Entry HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="37-37"];
m9_10 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="IWriteableStoredSets.cs", label="combiner.AddObject(Method)", span="39-39"];
m9_11 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="IWriteableStoredSets.cs", label="base.AddToHashCodeCombiner(combiner)", span="40-40"];
m9_12 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="IWriteableStoredSets.cs", label="Exit HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="37-37"];
m9_0 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="IWriteableStoredSets.cs", label="Entry HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", span="17-17"];
m9_1 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="IWriteableStoredSets.cs", label="Method = method", span="23-23"];
m9_2 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="IWriteableStoredSets.cs", label="Exit HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", span="17-17"];
m9_15 [file="IWriteableStoredSets.cs", label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint", span=""];
m10_4 [cluster="HangFire.Server.WorkerPool.WorkerPool(int, string)", file="IWriteableStoredValues.cs", label="Entry HangFire.Server.WorkerPool.WorkerPool(int, string)", span="16-16"];
m10_5 [cluster="HangFire.Server.WorkerPool.WorkerPool(int, string)", file="IWriteableStoredValues.cs", label="WorkersCount = workersCount", span="18-18"];
m10_6 [cluster="HangFire.Server.WorkerPool.WorkerPool(int, string)", file="IWriteableStoredValues.cs", label="Queue = queue", span="19-19"];
m10_7 [cluster="HangFire.Server.WorkerPool.WorkerPool(int, string)", file="IWriteableStoredValues.cs", label="Exit HangFire.Server.WorkerPool.WorkerPool(int, string)", span="16-16"];
m10_2 [cluster="HangFire.Server.WorkerPool.WorkerPool(int)", file="IWriteableStoredValues.cs", label="Entry HangFire.Server.WorkerPool.WorkerPool(int)", span="11-11"];
m10_3 [cluster="HangFire.Server.WorkerPool.WorkerPool(int)", file="IWriteableStoredValues.cs", label="Exit HangFire.Server.WorkerPool.WorkerPool(int)", span="11-11"];
m10_0 [cluster="HangFire.Server.WorkerPool.WorkerPool()", file="IWriteableStoredValues.cs", label="Entry HangFire.Server.WorkerPool.WorkerPool()", span="6-6"];
m10_1 [cluster="HangFire.Server.WorkerPool.WorkerPool()", file="IWriteableStoredValues.cs", label="Exit HangFire.Server.WorkerPool.WorkerPool()", span="6-6"];
m10_8 [file="IWriteableStoredValues.cs", label="HangFire.Server.WorkerPool", span=""];
m12_72 [cluster="Hangfire.Server.Worker.ToString()", file="JobClientSteps.cs", label="Entry Hangfire.Server.Worker.ToString()", span="188-188"];
m12_73 [cluster="Hangfire.Server.Worker.ToString()", file="JobClientSteps.cs", label="return $''{GetType().Name} #{_workerId.Substring(0, 8)}'';", span="190-190"];
m12_74 [cluster="Hangfire.Server.Worker.ToString()", file="JobClientSteps.cs", label="Exit Hangfire.Server.Worker.ToString()", span="188-188"];
m12_16 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobClientSteps.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m12_103 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="JobClientSteps.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m12_107 [cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="JobClientSteps.cs", label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="75-75"];
m12_65 [cluster="Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", file="JobClientSteps.cs", label="Entry Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", span="175-175"];
m12_66 [cluster="Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", file="JobClientSteps.cs", label="fetchedJob.Requeue()", span="179-179"];
m12_68 [cluster="Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", file="JobClientSteps.cs", label="Logger.WarnException($''Failed to immediately re-queue the background job '{fetchedJob.JobId}'. Next invocation may be delayed, if invisibility timeout is used'', ex)", span="183-183"];
m12_67 [cluster="Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", file="JobClientSteps.cs", label=Exception, span="181-181"];
m12_69 [cluster="Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", file="JobClientSteps.cs", label="Exit Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", span="175-175"];
m12_49 [cluster="Hangfire.JobStorage.GetConnection()", file="JobClientSteps.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m12_61 [cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", file="JobClientSteps.cs", label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", span="35-35"];
m12_64 [cluster="Hangfire.Logging.ILog.DebugException(string, System.Exception)", file="JobClientSteps.cs", label="Entry Hangfire.Logging.ILog.DebugException(string, System.Exception)", span="132-132"];
m12_75 [cluster="object.GetType()", file="JobClientSteps.cs", label="Entry object.GetType()", span="0-0"];
m12_62 [cluster="string.Format(string, object)", file="JobClientSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m12_56 [cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, System.Collections.Generic.IEnumerable<string>, System.Threading.CancellationToken)", file="JobClientSteps.cs", label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, System.Collections.Generic.IEnumerable<string>, System.Threading.CancellationToken)", span="45-45"];
m12_52 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", file="JobClientSteps.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", span="0-0"];
m12_71 [cluster="Hangfire.Logging.ILog.WarnException(string, System.Exception)", file="JobClientSteps.cs", label="Entry Hangfire.Logging.ILog.WarnException(string, System.Exception)", span="280-280"];
m12_60 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="JobClientSteps.cs", label="Entry Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", span="193-193"];
m12_77 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="JobClientSteps.cs", label="var jobData = connection.GetJobData(jobId)", span="197-197"];
m12_81 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="JobClientSteps.cs", label="var backgroundJob = new BackgroundJob(jobId, jobData.Job, jobData.CreatedAt)", span="209-209"];
m12_82 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="JobClientSteps.cs", label="var jobToken = new ServerJobCancellationToken(connection, jobId, context.ServerId, _workerId, context.CancellationToken)", span="211-211"];
m12_83 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="JobClientSteps.cs", label="var performContext = new PerformContext(connection, backgroundJob, jobToken)", span="212-212"];
m12_94 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="JobClientSteps.cs", label="ex is OperationCanceledException && context.IsShutdownRequested", span="238-238"];
m12_78 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="JobClientSteps.cs", label="jobData == null", span="198-198"];
m12_80 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="JobClientSteps.cs", label="jobData.EnsureLoaded()", span="207-207"];
m12_84 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="JobClientSteps.cs", label="var latency = (DateTime.UtcNow - jobData.CreatedAt).TotalMilliseconds", span="214-214"];
m12_79 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="JobClientSteps.cs", label="return null;", span="204-204"];
m12_86 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="JobClientSteps.cs", label="var result = _performer.Perform(performContext)", span="217-217"];
m12_85 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="JobClientSteps.cs", label="var duration = Stopwatch.StartNew()", span="215-215"];
m12_88 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="JobClientSteps.cs", label="return new SucceededState(result, (long) latency, duration.ElapsedMilliseconds);", span="220-220"];
m12_87 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="JobClientSteps.cs", label="duration.Stop()", span="218-218"];
m12_89 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="JobClientSteps.cs", label=JobAbortedException, span="222-222"];
m12_90 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="JobClientSteps.cs", label="return null;", span="227-227"];
m12_91 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="JobClientSteps.cs", label=JobPerformanceException, span="229-229"];
m12_92 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="JobClientSteps.cs", label="return new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                };", span="231-234"];
m12_93 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="JobClientSteps.cs", label=Exception, span="236-236"];
m12_95 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="JobClientSteps.cs", label="throw;", span="240-240"];
m12_96 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="JobClientSteps.cs", label="return new FailedState(ex)\r\n                {\r\n                    Reason = ''An exception occurred during processing of a background job.''\r\n                };", span="243-246"];
m12_97 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="JobClientSteps.cs", label="Exit Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", span="193-193"];
m12_105 [cluster="System.Diagnostics.Stopwatch.Stop()", file="JobClientSteps.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m12_106 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="JobClientSteps.cs", label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="51-51"];
m12_17 [cluster="Unk.nameof", file="JobClientSteps.cs", label="Entry Unk.nameof", span=""];
m12_98 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="JobClientSteps.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m12_20 [cluster="System.Guid.ToString()", file="JobClientSteps.cs", label="Entry System.Guid.ToString()", span="0-0"];
m12_76 [cluster="string.Substring(int, int)", file="JobClientSteps.cs", label="Entry string.Substring(int, int)", span="0-0"];
m12_51 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="JobClientSteps.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m12_59 [cluster="Hangfire.Storage.IFetchedJob.RemoveFromQueue()", file="JobClientSteps.cs", label="Entry Hangfire.Storage.IFetchedJob.RemoveFromQueue()", span="24-24"];
m12_70 [cluster="Hangfire.Storage.IFetchedJob.Requeue()", file="JobClientSteps.cs", label="Entry Hangfire.Storage.IFetchedJob.Requeue()", span="25-25"];
m12_99 [cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="JobClientSteps.cs", label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29"];
m12_0 [cluster="Hangfire.Server.Worker.Worker()", file="JobClientSteps.cs", label="Entry Hangfire.Server.Worker.Worker()", span="51-51"];
m12_1 [cluster="Hangfire.Server.Worker.Worker()", file="JobClientSteps.cs", label="Exit Hangfire.Server.Worker.Worker()", span="51-51"];
m12_2 [cluster="Hangfire.Server.Worker.Worker(params string[])", file="JobClientSteps.cs", label="Entry Hangfire.Server.Worker.Worker(params string[])", span="55-55"];
m12_3 [cluster="Hangfire.Server.Worker.Worker(params string[])", file="JobClientSteps.cs", label="Exit Hangfire.Server.Worker.Worker(params string[])", span="55-55"];
m12_55 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="JobClientSteps.cs", label="Entry Hangfire.States.ProcessingState.ProcessingState(string, string)", span="39-39"];
m12_58 [cluster="string.Equals(string, System.StringComparison)", file="JobClientSteps.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m12_63 [cluster="Hangfire.Logging.ILog.Info(string)", file="JobClientSteps.cs", label="Entry Hangfire.Logging.ILog.Info(string)", span="204-204"];
m12_19 [cluster="System.Guid.NewGuid()", file="JobClientSteps.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m12_4 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="JobClientSteps.cs", label="Entry Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", span="60-60"];
m12_5 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="JobClientSteps.cs", label="queues == null", span="65-65"];
m12_6 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="JobClientSteps.cs", label="throw new ArgumentNullException(nameof(queues));", span="65-65"];
m12_7 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="JobClientSteps.cs", label="performer == null", span="66-66"];
m12_8 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="JobClientSteps.cs", label="throw new ArgumentNullException(nameof(performer));", span="66-66"];
m12_9 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="JobClientSteps.cs", label="stateChanger == null", span="67-67"];
m12_10 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="JobClientSteps.cs", label="throw new ArgumentNullException(nameof(stateChanger));", span="67-67"];
m12_11 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="JobClientSteps.cs", label="_queues = queues.ToArray()", span="69-69"];
m12_12 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="JobClientSteps.cs", label="_performer = performer", span="70-70"];
m12_13 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="JobClientSteps.cs", label="_stateChanger = stateChanger", span="71-71"];
m12_14 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="JobClientSteps.cs", label="_workerId = Guid.NewGuid().ToString()", span="72-72"];
m12_15 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="JobClientSteps.cs", label="Exit Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", span="60-60"];
m12_50 [cluster="Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobClientSteps.cs", label="Entry Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="36-36"];
m12_57 [cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="JobClientSteps.cs", label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25"];
m12_104 [cluster="Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", file="JobClientSteps.cs", label="Entry Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", span="20-20"];
m12_54 [cluster="System.Console.WriteLine(object)", file="JobClientSteps.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m12_21 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="Entry Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="76-76"];
m12_22 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="context == null", span="78-78"];
m12_23 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="throw new ArgumentNullException(nameof(context));", span="78-78"];
m12_24 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="var connection = context.Storage.GetConnection()", span="80-80"];
m12_25 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="var fetchedJob = connection.FetchNextJob(_queues, context.CancellationToken)", span="81-81"];
m12_26 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="context.CancellationToken.ThrowIfCancellationRequested()", span="83-83"];
m12_28 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="var linkedCts = CancellationTokenSource.CreateLinkedTokenSource(\r\n                        context.CancellationToken,\r\n                        timeoutCts.Token)", span="88-90"];
m12_32 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="var processingState = new ProcessingState(context.ServerId, _workerId)", span="102-102"];
m12_33 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="var appliedState = _stateChanger.ChangeState(new StateChangeContext(\r\n                            context.Storage,\r\n                            connection,\r\n                            fetchedJob.JobId,\r\n                            processingState,\r\n                            new[] { EnqueuedState.StateName, ProcessingState.StateName },\r\n                            linkedCts.Token))", span="104-110"];
m12_35 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="context.CancellationToken.ThrowIfCancellationRequested()", span="118-118"];
m12_38 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="var state = PerformJob(context, connection, fetchedJob.JobId)", span="131-131"];
m12_40 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="_stateChanger.ChangeState(new StateChangeContext(\r\n                            context.Storage,\r\n                            connection,\r\n                            fetchedJob.JobId, \r\n                            state, \r\n                            ProcessingState.StateName))", span="136-141"];
m12_43 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="context.IsShutdownRequested", span="158-158"];
m12_36 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="fetchedJob.RemoveFromQueue()", span="121-121"];
m12_41 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="fetchedJob.RemoveFromQueue()", span="151-151"];
m12_44 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="Logger.Info(String.Format(\r\n                            ''Shutdown request requested while processing background job '{0}'. It will be re-queued.'',\r\n                            fetchedJob.JobId))", span="160-162"];
m12_46 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="Requeue(fetchedJob)", span="169-169"];
m12_27 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="var timeoutCts = new CancellationTokenSource(JobInitializationWaitTimeout)", span="87-87"];
m12_29 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label=Exception, span="96-96"];
m12_30 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="Console.WriteLine(e)", span="98-98"];
m12_31 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="throw;", span="99-99"];
m12_34 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="appliedState == null || !appliedState.Name.Equals(ProcessingState.StateName, StringComparison.OrdinalIgnoreCase)", span="114-114"];
m12_37 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="return;", span="122-122"];
m12_39 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="state != null", span="133-133"];
m12_42 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label=Exception, span="156-156"];
m12_45 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="Logger.DebugException(''An exception occurred while processing a job. It will be re-queued.'', ex)", span="166-166"];
m12_47 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="throw;", span="170-170"];
m12_48 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobClientSteps.cs", label="Exit Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="76-76"];
m12_18 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JobClientSteps.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m12_101 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, string, System.Threading.CancellationToken)", file="JobClientSteps.cs", label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, string, System.Threading.CancellationToken)", span="32-32"];
m12_102 [cluster="Hangfire.Server.PerformContext.PerformContext(Hangfire.Storage.IStorageConnection, Hangfire.BackgroundJob, Hangfire.IJobCancellationToken)", file="JobClientSteps.cs", label="Entry Hangfire.Server.PerformContext.PerformContext(Hangfire.Storage.IStorageConnection, Hangfire.BackgroundJob, Hangfire.IJobCancellationToken)", span="36-36"];
m12_100 [cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="JobClientSteps.cs", label="Entry Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", span="25-25"];
m12_53 [cluster="System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", file="JobClientSteps.cs", label="Entry System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", span="0-0"];
m12_108 [file="JobClientSteps.cs", label="Hangfire.Server.Worker", span=""];
m15_15 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetConnection()", span="49-49"];
m15_16 [cluster="HangFire.Redis.RedisStorage.GetConnection()", color=red, community=0, file="RedisStorage.cs", label="0: return new RedisStorageConnection(this, _pooledManager.GetClient());", span="51-51"];
m15_17 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetConnection()", span="49-49"];
m15_9 [cluster="RedisClientManagerConfig.cstr", file="RedisStorage.cs", label="Entry RedisClientManagerConfig.cstr", span=""];
m15_10 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetMonitoringApi()", span="44-44"];
m15_11 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="RedisStorage.cs", label="return new RedisMonitoringApi(_pooledManager.GetClient());", span="46-46"];
m15_12 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetMonitoringApi()", span="44-44"];
m15_14 [cluster="Unk.GetClient", file="RedisStorage.cs", label="Entry Unk.GetClient", span=""];
m15_0 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="21-21"];
m15_1 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="21-21"];
m15_19 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetComponents()", span="54-54"];
m15_20 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="yield return new SchedulePoller(this, _options.PollInterval);", span="56-56"];
m15_21 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="yield return new DequeuedJobsWatcher(this);", span="57-57"];
m15_22 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="yield return new ServerWatchdog(this);", span="58-58"];
m15_23 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetComponents()", span="54-54"];
m15_24 [cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="RedisStorage.cs", label="Entry HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34"];
m15_25 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", file="RedisStorage.cs", label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", span="39-39"];
m15_26 [cluster="HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="RedisStorage.cs", label="Entry HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="33-33"];
m15_27 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetStateHandlers()", span="61-61"];
m15_28 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="yield return new FailedStateHandler();", span="63-63"];
m15_29 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="yield return new ProcessingStateHandler();", span="64-64"];
m15_30 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="yield return new SucceededStateHandler();", span="65-65"];
m15_31 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetStateHandlers()", span="61-61"];
m15_8 [cluster="PooledRedisClientManager.cstr", file="RedisStorage.cs", label="Entry PooledRedisClientManager.cstr", span=""];
m15_38 [cluster="string.Format(string, object, object)", file="RedisStorage.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m15_13 [cluster="RedisMonitoringApi.cstr", file="RedisStorage.cs", label="Entry RedisMonitoringApi.cstr", span=""];
m15_35 [cluster="HangFire.Redis.RedisStorage.ToString()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.ToString()", span="68-68"];
m15_36 [cluster="HangFire.Redis.RedisStorage.ToString()", file="RedisStorage.cs", label="return String.Format(''redis://{0}/{1}'', _host, _db);", span="70-70"];
m15_37 [cluster="HangFire.Redis.RedisStorage.ToString()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.ToString()", span="68-68"];
m15_18 [cluster="RedisStorageConnection.cstr", file="RedisStorage.cs", label="Entry RedisStorageConnection.cstr", span=""];
m15_34 [cluster="HangFire.Redis.States.SucceededStateHandler.SucceededStateHandler()", file="RedisStorage.cs", label="Entry HangFire.Redis.States.SucceededStateHandler.SucceededStateHandler()", span="6-6"];
m15_2 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="26-26"];
m15_3 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="_host = host", span="28-28"];
m15_4 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="_db = db", span="29-29"];
m15_5 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="_options = options", span="30-30"];
m15_6 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="_pooledManager = new PooledRedisClientManager(\r\n                new []{ host },\r\n                new string[0],\r\n                new RedisClientManagerConfig\r\n                {\r\n                    DefaultDb = db,\r\n                    MaxWritePoolSize = _options.ConnectionPoolSize\r\n                })", span="32-39"];
m15_7 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="26-26"];
m15_33 [cluster="HangFire.Redis.States.ProcessingStateHandler.ProcessingStateHandler()", file="RedisStorage.cs", label="Entry HangFire.Redis.States.ProcessingStateHandler.ProcessingStateHandler()", span="8-8"];
m15_32 [cluster="HangFire.Redis.States.FailedStateHandler.FailedStateHandler()", file="RedisStorage.cs", label="Entry HangFire.Redis.States.FailedStateHandler.FailedStateHandler()", span="8-8"];
m15_39 [file="RedisStorage.cs", label="HangFire.Redis.RedisStorage", span=""];
m16_19 [cluster="string.Format(string, object)", file="RedisStorageConnection.cs", label="Entry string.Format(string, object)", span="0-0"];
m16_29 [cluster="Unk.SetEntry", file="RedisStorageConnection.cs", label="Entry Unk.SetEntry", span=""];
m16_20 [cluster="Unk.BlockingPopAndPushItemBetweenLists", file="RedisStorageConnection.cs", label="Entry Unk.BlockingPopAndPushItemBetweenLists", span=""];
m16_13 [cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisStorageConnection.cs", label="pipeline.QueueCommand(x => x.SetEntry(\r\n                    String.Format(''hangfire:job:{0}:fetched'', jobId),\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow)))", span="58-60"];
m16_5 [cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisStorageConnection.cs", label="Entry HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", span="24-24"];
m16_6 [cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisStorageConnection.cs", label="string jobId", span="26-26"];
m16_7 [cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", color=red, community=0, file="RedisStorageConnection.cs", label="0: cancellationToken.ThrowIfCancellationRequested()", span="30-30"];
m16_8 [cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisStorageConnection.cs", label="jobId = _redis.BlockingPopAndPushItemBetweenLists(\r\n                    String.Format(''hangfire:queue:{0}'', Queue),\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', Queue),\r\n                    _fetchTimeout)", span="32-35"];
m16_9 [cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisStorageConnection.cs", label="jobId == null", span="36-36"];
m16_14 [cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", color=red, community=0, file="RedisStorageConnection.cs", label="0: pipeline.QueueCommand(\r\n                    x => x.GetValuesFromHash(\r\n                        String.Format(''hangfire:job:{0}'', jobId),\r\n                        new[] { ''Type'', ''Args'' }),\r\n                    x => { jobType = x[0]; jobArgs = x[1]; })", span="62-66"];
m16_16 [cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisStorageConnection.cs", label="return new JobPayload(jobId, Queue, jobType, jobArgs);", span="75-75"];
m16_10 [cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisStorageConnection.cs", label="string jobArgs = null", span="53-53"];
m16_11 [cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisStorageConnection.cs", label="string jobType = null", span="54-54"];
m16_12 [cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisStorageConnection.cs", label="var pipeline = _redis.CreatePipeline()", span="56-56"];
m16_15 [cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisStorageConnection.cs", label="pipeline.Flush()", span="68-68"];
m16_17 [cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="RedisStorageConnection.cs", label="Exit HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", span="24-24"];
m16_28 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="RedisStorageConnection.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m16_57 [cluster="Unk.RemoveEntry", file="RedisStorageConnection.cs", label="Entry Unk.RemoveEntry", span=""];
m16_0 [cluster="HangFire.Server.JobFetcher.JobFetcher(string, System.TimeSpan?)", file="RedisStorageConnection.cs", label="Entry HangFire.Server.JobFetcher.JobFetcher(string, System.TimeSpan?)", span="13-13"];
m16_1 [cluster="HangFire.Server.JobFetcher.JobFetcher(string, System.TimeSpan?)", file="RedisStorageConnection.cs", label="Queue = queue", span="16-16"];
m16_2 [cluster="HangFire.Server.JobFetcher.JobFetcher(string, System.TimeSpan?)", color=red, community=0, file="RedisStorageConnection.cs", label="0: _fetchTimeout = fetchTimeout ?? TimeSpan.FromSeconds(5)", span="18-18"];
m16_3 [cluster="HangFire.Server.JobFetcher.JobFetcher(string, System.TimeSpan?)", file="RedisStorageConnection.cs", label="Exit HangFire.Server.JobFetcher.JobFetcher(string, System.TimeSpan?)", span="13-13"];
m16_4 [cluster="System.TimeSpan.FromSeconds(double)", file="RedisStorageConnection.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m16_23 [cluster="Unk.Flush", file="RedisStorageConnection.cs", label="Entry Unk.Flush", span=""];
m16_45 [cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="RedisStorageConnection.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:job:{0}:fetched'', jobId),\r\n                    String.Format(''hangfire:job:{0}:checked'', jobId)))", span="93-95"];
m16_42 [cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="RedisStorageConnection.cs", label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="83-83"];
m16_43 [cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="RedisStorageConnection.cs", label="var transaction = redis.CreateTransaction()", span="86-86"];
m16_44 [cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", color=red, community=0, file="RedisStorageConnection.cs", label="0: transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1))", span="88-91"];
m16_46 [cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="RedisStorageConnection.cs", label="transaction.Commit()", span="97-97"];
m16_47 [cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="RedisStorageConnection.cs", label="Exit HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="83-83"];
m16_18 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="RedisStorageConnection.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m16_24 [cluster="HangFire.Server.JobPayload.JobPayload(string, string, string, string)", file="RedisStorageConnection.cs", label="Entry HangFire.Server.JobPayload.JobPayload(string, string, string, string)", span="4-4"];
m16_41 [cluster="Unk.Dispose", file="RedisStorageConnection.cs", label="Entry Unk.Dispose", span=""];
m16_38 [cluster="HangFire.Server.JobFetcher.Dispose()", file="RedisStorageConnection.cs", label="Entry HangFire.Server.JobFetcher.Dispose()", span="78-78"];
m16_39 [cluster="HangFire.Server.JobFetcher.Dispose()", file="RedisStorageConnection.cs", label="_redis.Dispose()", span="80-80"];
m16_40 [cluster="HangFire.Server.JobFetcher.Dispose()", file="RedisStorageConnection.cs", label="Exit HangFire.Server.JobFetcher.Dispose()", span="78-78"];
m16_54 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="93-95"];
m16_26 [cluster="lambda expression", file="RedisStorageConnection.cs", label="x.SetEntry(\r\n                    String.Format(''hangfire:job:{0}:fetched'', jobId),\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="58-60"];
m16_31 [cluster="lambda expression", file="RedisStorageConnection.cs", label="x.GetValuesFromHash(\r\n                        String.Format(''hangfire:job:{0}'', jobId),\r\n                        new[] { ''Type'', ''Args'' })", span="63-65"];
m16_25 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="58-60"];
m16_30 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="63-65"];
m16_34 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="66-66"];
m16_27 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="58-60"];
m16_32 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="63-65"];
m16_35 [cluster="lambda expression", color=red, community=0, file="RedisStorageConnection.cs", label="0: jobType = x[0]", span="66-66"];
m16_36 [cluster="lambda expression", color=red, community=0, file="RedisStorageConnection.cs", label="0: jobArgs = x[1]", span="66-66"];
m16_37 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="66-66"];
m16_51 [cluster="lambda expression", color=red, community=0, file="RedisStorageConnection.cs", label="0: x.RemoveItemFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1)", span="88-91"];
m16_55 [cluster="lambda expression", file="RedisStorageConnection.cs", label="x.RemoveEntry(\r\n                    String.Format(''hangfire:job:{0}:fetched'', jobId),\r\n                    String.Format(''hangfire:job:{0}:checked'', jobId))", span="93-95"];
m16_50 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="88-91"];
m16_52 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="88-91"];
m16_56 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="93-95"];
m16_53 [cluster="Unk.RemoveItemFromList", file="RedisStorageConnection.cs", label="Entry Unk.RemoveItemFromList", span=""];
m16_21 [cluster="Unk.CreatePipeline", file="RedisStorageConnection.cs", label="Entry Unk.CreatePipeline", span=""];
m16_49 [cluster="Unk.Commit", file="RedisStorageConnection.cs", label="Entry Unk.Commit", span=""];
m16_33 [cluster="Unk.GetValuesFromHash", file="RedisStorageConnection.cs", label="Entry Unk.GetValuesFromHash", span=""];
m16_22 [cluster="Unk.QueueCommand", file="RedisStorageConnection.cs", label="Entry Unk.QueueCommand", span=""];
m16_48 [cluster="Unk.CreateTransaction", file="RedisStorageConnection.cs", label="Entry Unk.CreateTransaction", span=""];
m16_58 [file="RedisStorageConnection.cs", label="HangFire.Server.JobFetcher", span=""];
m16_59 [file="RedisStorageConnection.cs", label=jobId, span=""];
m16_60 [file="RedisStorageConnection.cs", label=string, span=""];
m16_61 [file="RedisStorageConnection.cs", label=string, span=""];
m17_32 [cluster="HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisStoredJobs.cs", label="Entry HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", span="179-179"];
m17_28 [cluster="Unk.GetValueFromHash", file="RedisStoredJobs.cs", label="Entry Unk.GetValueFromHash", span=""];
m17_3 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="Entry HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", span="18-18"];
m17_4 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="var jobData = _redis.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}'', id))", span="20-21"];
m17_5 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="jobData.Count == 0", span="23-23"];
m17_8 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="jobData.ContainsKey(''Type'')", span="26-26"];
m17_9 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="invocationData.Type = jobData[''Type'']", span="28-28"];
m17_10 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="jobData.ContainsKey(''Method'')", span="30-30"];
m17_11 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="invocationData.Method = jobData[''Method'']", span="32-32"];
m17_12 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="jobData.ContainsKey(''ParameterTypes'')", span="34-34"];
m17_13 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="invocationData.ParameterTypes = jobData[''ParameterTypes'']", span="36-36"];
m17_14 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="return new StateAndInvocationData\r\n            {\r\n                InvocationData = invocationData,\r\n                State = jobData.ContainsKey(''State'') ? jobData[''State''] : null,\r\n            };", span="39-43"];
m17_6 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="return null;", span="23-23"];
m17_7 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="var invocationData = new InvocationData()", span="25-25"];
m17_15 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="Exit HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", span="18-18"];
m17_29 [cluster="HangFire.Redis.RedisStoredJobs.Complete(HangFire.Server.JobPayload)", file="RedisStoredJobs.cs", label="Entry HangFire.Redis.RedisStoredJobs.Complete(HangFire.Server.JobPayload)", span="61-61"];
m17_30 [cluster="HangFire.Redis.RedisStoredJobs.Complete(HangFire.Server.JobPayload)", color=red, community=0, file="RedisStoredJobs.cs", label="0: RedisStorageConnection.RemoveFromDequeuedList(_redis, payload.Queue, payload.Id)", span="63-63"];
m17_31 [cluster="HangFire.Redis.RedisStoredJobs.Complete(HangFire.Server.JobPayload)", file="RedisStoredJobs.cs", label="Exit HangFire.Redis.RedisStoredJobs.Complete(HangFire.Server.JobPayload)", span="61-61"];
m17_17 [cluster="Unk.GetAllEntriesFromHash", file="RedisStoredJobs.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m17_0 [cluster="HangFire.Redis.RedisStoredJobs.RedisStoredJobs(IRedisClient)", file="RedisStoredJobs.cs", label="Entry HangFire.Redis.RedisStoredJobs.RedisStoredJobs(IRedisClient)", span="13-13"];
m17_1 [cluster="HangFire.Redis.RedisStoredJobs.RedisStoredJobs(IRedisClient)", file="RedisStoredJobs.cs", label="_redis = redis", span="15-15"];
m17_2 [cluster="HangFire.Redis.RedisStoredJobs.RedisStoredJobs(IRedisClient)", file="RedisStoredJobs.cs", label="Exit HangFire.Redis.RedisStoredJobs.RedisStoredJobs(IRedisClient)", span="13-13"];
m17_19 [cluster="Unk.ContainsKey", file="RedisStoredJobs.cs", label="Entry Unk.ContainsKey", span=""];
m17_24 [cluster="Unk.SetEntryInHash", file="RedisStoredJobs.cs", label="Entry Unk.SetEntryInHash", span=""];
m17_25 [cluster="HangFire.Redis.RedisStoredJobs.GetParameter(string, string)", file="RedisStoredJobs.cs", label="Entry HangFire.Redis.RedisStoredJobs.GetParameter(string, string)", span="54-54"];
m17_26 [cluster="HangFire.Redis.RedisStoredJobs.GetParameter(string, string)", file="RedisStoredJobs.cs", label="return _redis.GetValueFromHash(\r\n                String.Format(Prefix + ''job:{0}'', id),\r\n                name);", span="56-58"];
m17_27 [cluster="HangFire.Redis.RedisStoredJobs.GetParameter(string, string)", file="RedisStoredJobs.cs", label="Exit HangFire.Redis.RedisStoredJobs.GetParameter(string, string)", span="54-54"];
m17_22 [cluster="HangFire.Redis.RedisStoredJobs.SetParameter(string, string, string)", file="RedisStoredJobs.cs", label="_redis.SetEntryInHash(\r\n                String.Format(Prefix + ''job:{0}'', id),\r\n                name,\r\n                value)", span="48-51"];
m17_21 [cluster="HangFire.Redis.RedisStoredJobs.SetParameter(string, string, string)", file="RedisStoredJobs.cs", label="Entry HangFire.Redis.RedisStoredJobs.SetParameter(string, string, string)", span="46-46"];
m17_23 [cluster="HangFire.Redis.RedisStoredJobs.SetParameter(string, string, string)", file="RedisStoredJobs.cs", label="Exit HangFire.Redis.RedisStoredJobs.SetParameter(string, string, string)", span="46-46"];
m17_16 [cluster="string.Format(string, object)", file="RedisStoredJobs.cs", label="Entry string.Format(string, object)", span="0-0"];
m17_20 [cluster="HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", file="RedisStoredJobs.cs", label="Entry HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", span="2-2"];
m17_18 [cluster="HangFire.Storage.InvocationData.InvocationData()", file="RedisStoredJobs.cs", label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2"];
m17_33 [file="RedisStoredJobs.cs", label="HangFire.Redis.RedisStoredJobs", span=""];
m18_6 [cluster="Unk.GetRangeFromSortedSetByLowestScore", file="RedisStoredSets.cs", label="Entry Unk.GetRangeFromSortedSetByLowestScore", span=""];
m18_0 [cluster="HangFire.Redis.RedisStoredSets.RedisStoredSets(IRedisClient)", file="RedisStoredSets.cs", label="Entry HangFire.Redis.RedisStoredSets.RedisStoredSets(IRedisClient)", span="11-11"];
m18_1 [cluster="HangFire.Redis.RedisStoredSets.RedisStoredSets(IRedisClient)", file="RedisStoredSets.cs", label="_redis = redis", span="13-13"];
m18_2 [cluster="HangFire.Redis.RedisStoredSets.RedisStoredSets(IRedisClient)", file="RedisStoredSets.cs", label="Exit HangFire.Redis.RedisStoredSets.RedisStoredSets(IRedisClient)", span="11-11"];
m18_7 [cluster="Unk.FirstOrDefault", file="RedisStoredSets.cs", label="Entry Unk.FirstOrDefault", span=""];
m18_3 [cluster="HangFire.Redis.RedisStoredSets.GetFirstByLowestScore(string, long, long)", file="RedisStoredSets.cs", label="Entry HangFire.Redis.RedisStoredSets.GetFirstByLowestScore(string, long, long)", span="16-16"];
m18_4 [cluster="HangFire.Redis.RedisStoredSets.GetFirstByLowestScore(string, long, long)", file="RedisStoredSets.cs", label="return _redis.GetRangeFromSortedSetByLowestScore(\r\n                Prefix + key, fromScore, toScore, 0, 1)\r\n                .FirstOrDefault();", span="18-20"];
m18_5 [cluster="HangFire.Redis.RedisStoredSets.GetFirstByLowestScore(string, long, long)", file="RedisStoredSets.cs", label="Exit HangFire.Redis.RedisStoredSets.GetFirstByLowestScore(string, long, long)", span="16-16"];
m18_8 [file="RedisStoredSets.cs", label="HangFire.Redis.RedisStoredSets", span=""];
m20_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisWriteOnlyCounter.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m20_89 [cluster="Hangfire.ContinuationExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.Continuations.JobContinuationOptions)", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.ContinuationExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.Continuations.JobContinuationOptions)", span="130-130"];
m20_90 [cluster="Hangfire.ContinuationExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.Continuations.JobContinuationOptions)", file="RedisWriteOnlyCounter.cs", label="return ContinueWith(client, parentId, methodCall, new EnqueuedState(), options);", span="136-136"];
m20_91 [cluster="Hangfire.ContinuationExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.Continuations.JobContinuationOptions)", file="RedisWriteOnlyCounter.cs", label="Exit Hangfire.ContinuationExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.Continuations.JobContinuationOptions)", span="130-130"];
m20_19 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="RedisWriteOnlyCounter.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m20_30 [cluster="Hangfire.Continuations.AwaitingJobsPage.AwaitingJobsPage()", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.Continuations.AwaitingJobsPage.AwaitingJobsPage()", span="53-53"];
m20_85 [cluster="Hangfire.ContinuationExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.ContinuationExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="121-121"];
m20_86 [cluster="Hangfire.ContinuationExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="RedisWriteOnlyCounter.cs", label="return ContinueWith(client, parentId, methodCall, nextState, JobContinuationOptions.OnlyOnSucceededState);", span="127-127"];
m20_87 [cluster="Hangfire.ContinuationExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="RedisWriteOnlyCounter.cs", label="Exit Hangfire.ContinuationExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="121-121"];
m20_69 [cluster="string.StartsWith(string)", file="RedisWriteOnlyCounter.cs", label="Entry string.StartsWith(string)", span="0-0"];
m20_34 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="31-31"];
m20_54 [cluster="System.Text.StringBuilder.Append(string)", file="RedisWriteOnlyCounter.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m20_24 [cluster="Unk.Register", file="RedisWriteOnlyCounter.cs", label="Entry Unk.Register", span=""];
m20_58 [cluster="JsonSerializerSettings.cstr", file="RedisWriteOnlyCounter.cs", label="Entry JsonSerializerSettings.cstr", span=""];
m20_22 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AddBackgroundStateColor(string, string)", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.AddBackgroundStateColor(string, string)", span="59-59"];
m20_68 [cluster="Hangfire.Dashboard.UrlHelper.To(string)", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.Dashboard.UrlHelper.To(string)", span="33-33"];
m20_59 [cluster="Unk.>", file="RedisWriteOnlyCounter.cs", label="Entry Unk.>", span=""];
m20_99 [cluster="Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="41-41"];
m20_53 [cluster="System.Text.StringBuilder.StringBuilder()", file="RedisWriteOnlyCounter.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m20_18 [cluster="Hangfire.Continuations.AwaitingState.Handler.Handler()", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.Continuations.AwaitingState.Handler.Handler()", span="86-86"];
m20_61 [cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", span="391-391"];
m20_63 [cluster="System.Text.StringBuilder.ToString()", file="RedisWriteOnlyCounter.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m20_21 [cluster="Hangfire.Dashboard.RouteCollection.AddClientBatchCommand(string, System.Action<Hangfire.IBackgroundJobClient, string>)", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.Dashboard.RouteCollection.AddClientBatchCommand(string, System.Action<Hangfire.IBackgroundJobClient, string>)", span="61-61"];
m20_57 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="RedisWriteOnlyCounter.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
m20_39 [cluster="Hangfire.States.DeletedState.DeletedState()", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.States.DeletedState.DeletedState()", span="27-27"];
m20_20 [cluster="Hangfire.Dashboard.RouteCollection.AddRazorPage(string, System.Func<System.Text.RegularExpressions.Match, Hangfire.Dashboard.RazorPage>)", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.Dashboard.RouteCollection.AddRazorPage(string, System.Func<System.Text.RegularExpressions.Match, Hangfire.Dashboard.RazorPage>)", span="25-25"];
m20_88 [cluster="Hangfire.ContinuationExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.Continuations.JobContinuationOptions)", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.ContinuationExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.Continuations.JobContinuationOptions)", span="139-139"];
m20_93 [cluster="Hangfire.ContinuationExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.Continuations.JobContinuationOptions)", file="RedisWriteOnlyCounter.cs", label="throw new ArgumentNullException(''client'');", span="146-146"];
m20_92 [cluster="Hangfire.ContinuationExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.Continuations.JobContinuationOptions)", file="RedisWriteOnlyCounter.cs", label="client == null", span="146-146"];
m20_94 [cluster="Hangfire.ContinuationExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.Continuations.JobContinuationOptions)", file="RedisWriteOnlyCounter.cs", label="var state = new AwaitingState(parentId, nextState, options)", span="148-148"];
m20_95 [cluster="Hangfire.ContinuationExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.Continuations.JobContinuationOptions)", file="RedisWriteOnlyCounter.cs", label="return client.Create(Job.FromExpression(methodCall), state);", span="149-149"];
m20_96 [cluster="Hangfire.ContinuationExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.Continuations.JobContinuationOptions)", file="RedisWriteOnlyCounter.cs", label="Exit Hangfire.ContinuationExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.Continuations.JobContinuationOptions)", span="139-139"];
m20_17 [cluster="Hangfire.Common.GlobalJobFilterCollection.Add(object)", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.Common.GlobalJobFilterCollection.Add(object)", span="56-56"];
m20_25 [cluster="Hangfire.Dashboard.DashboardMetrics.AddMetric(Hangfire.Dashboard.DashboardMetric)", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.Dashboard.DashboardMetrics.AddMetric(Hangfire.Dashboard.DashboardMetric)", span="43-43"];
m20_60 [cluster="Unk.StateLabel", file="RedisWriteOnlyCounter.cs", label="Entry Unk.StateLabel", span=""];
m20_16 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", span="36-36"];
m20_82 [cluster="Hangfire.ContinuationExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.ContinuationExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", span="115-115"];
m20_83 [cluster="Hangfire.ContinuationExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", file="RedisWriteOnlyCounter.cs", label="return ContinueWith(client, parentId, methodCall, new EnqueuedState());", span="118-118"];
m20_84 [cluster="Hangfire.ContinuationExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", file="RedisWriteOnlyCounter.cs", label="Exit Hangfire.ContinuationExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", span="115-115"];
m20_0 [cluster="Hangfire.ContinuationExtensions.UseContinuations(Hangfire.IGlobalConfiguration)", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.ContinuationExtensions.UseContinuations(Hangfire.IGlobalConfiguration)", span="32-32"];
m20_1 [cluster="Hangfire.ContinuationExtensions.UseContinuations(Hangfire.IGlobalConfiguration)", color=green, community=0, file="RedisWriteOnlyCounter.cs", label="0: configuration == null", span="34-34"];
m20_2 [cluster="Hangfire.ContinuationExtensions.UseContinuations(Hangfire.IGlobalConfiguration)", color=green, community=0, file="RedisWriteOnlyCounter.cs", label="0: throw new ArgumentNullException(''configuration'');", span="34-34"];
m20_3 [cluster="Hangfire.ContinuationExtensions.UseContinuations(Hangfire.IGlobalConfiguration)", color=green, community=0, file="RedisWriteOnlyCounter.cs", label="0: GlobalJobFilters.Filters.Add(new ContinuationsSupportAttribute())", span="36-36"];
m20_4 [cluster="Hangfire.ContinuationExtensions.UseContinuations(Hangfire.IGlobalConfiguration)", color=green, community=0, file="RedisWriteOnlyCounter.cs", label="0: GlobalStateHandlers.Handlers.Add(new AwaitingState.Handler())", span="37-37"];
m20_5 [cluster="Hangfire.ContinuationExtensions.UseContinuations(Hangfire.IGlobalConfiguration)", color=green, community=0, file="RedisWriteOnlyCounter.cs", label="0: DashboardRoutes.Routes.AddRazorPage(''/jobs/awaiting'', x => new AwaitingJobsPage())", span="39-39"];
m20_6 [cluster="Hangfire.ContinuationExtensions.UseContinuations(Hangfire.IGlobalConfiguration)", file="RedisWriteOnlyCounter.cs", label="DashboardRoutes.Routes.AddClientBatchCommand(''/jobs/awaiting/enqueue'', (client, jobId) => client.ChangeState(\r\n                jobId, new EnqueuedState(), AwaitingState.StateName))", span="40-41"];
m20_13 [cluster="Hangfire.ContinuationExtensions.UseContinuations(Hangfire.IGlobalConfiguration)", file="RedisWriteOnlyCounter.cs", label="return configuration;", span="91-91"];
m20_7 [cluster="Hangfire.ContinuationExtensions.UseContinuations(Hangfire.IGlobalConfiguration)", file="RedisWriteOnlyCounter.cs", label="DashboardRoutes.Routes.AddClientBatchCommand(''/jobs/awaiting/delete'', (client, jobId) => client.ChangeState(\r\n                jobId, new DeletedState(), AwaitingState.StateName))", span="42-43"];
m20_12 [cluster="Hangfire.ContinuationExtensions.UseContinuations(Hangfire.IGlobalConfiguration)", file="RedisWriteOnlyCounter.cs", label="JobsSidebarMenu.Items.Add(page => new MenuItem(''Awaiting'', page.Url.To(''/jobs/awaiting''))\r\n            {\r\n                Active = page.RequestPath.StartsWith(''/jobs/awaiting''),\r\n                Metric = AwaitingCount\r\n            })", span="85-89"];
m20_8 [cluster="Hangfire.ContinuationExtensions.UseContinuations(Hangfire.IGlobalConfiguration)", file="RedisWriteOnlyCounter.cs", label="JobHistoryRenderer.AddBackgroundStateColor(AwaitingState.StateName, ''#F5F5F5'')", span="45-45"];
m20_11 [cluster="Hangfire.ContinuationExtensions.UseContinuations(Hangfire.IGlobalConfiguration)", file="RedisWriteOnlyCounter.cs", label="DashboardMetrics.AddMetric(AwaitingCount)", span="83-83"];
m20_9 [cluster="Hangfire.ContinuationExtensions.UseContinuations(Hangfire.IGlobalConfiguration)", file="RedisWriteOnlyCounter.cs", label="JobHistoryRenderer.AddForegroundStateColor(AwaitingState.StateName, ''#999'')", span="46-46"];
m20_10 [cluster="Hangfire.ContinuationExtensions.UseContinuations(Hangfire.IGlobalConfiguration)", file="RedisWriteOnlyCounter.cs", label="JobHistoryRenderer.Register(AwaitingState.StateName, (html, data) =>\r\n            {\r\n                var builder = new StringBuilder();\r\n\r\n                builder.Append(''<dl class=\''dl-horizontal\''>'');\r\n\r\n                if (data.ContainsKey(''ParentId''))\r\n                {\r\n                    builder.AppendFormat(\r\n                        ''<dt>Parent</dt><dd>{0}</dd>'',\r\n                        html.JobIdLink(data[''ParentId'']));\r\n                }\r\n\r\n                if (data.ContainsKey(''NextState''))\r\n                {\r\n                    var nextState = JsonConvert.DeserializeObject<IState>(\r\n                        data[''NextState''],\r\n                        new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All });\r\n\r\n                    builder.AppendFormat(\r\n                        ''<dt>Next State</dt><dd>{0}</dd>'',\r\n                        html.StateLabel(nextState.Name));\r\n                }\r\n\r\n                if (data.ContainsKey(''Options''))\r\n                {\r\n                    builder.AppendFormat(\r\n                        ''<dt>Options</dt><dd><code>{0}</code></dd>'',\r\n                        html.HtmlEncode(data[''Options'']));\r\n                }\r\n\r\n                builder.Append(''</dl>'');\r\n\r\n                return new NonEscapedString(builder.ToString());\r\n            })", span="47-81"];
m20_14 [cluster="Hangfire.ContinuationExtensions.UseContinuations(Hangfire.IGlobalConfiguration)", file="RedisWriteOnlyCounter.cs", label="Exit Hangfire.ContinuationExtensions.UseContinuations(Hangfire.IGlobalConfiguration)", span="32-32"];
m20_55 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="RedisWriteOnlyCounter.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m20_40 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="Entry lambda expression", span="47-81"];
m20_27 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="Entry lambda expression", span="39-39"];
m20_28 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyCounter.cs", label="0: new AwaitingJobsPage()", span="39-39"];
m20_29 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="Exit lambda expression", span="39-39"];
m20_31 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="Entry lambda expression", span="40-41"];
m20_36 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="Entry lambda expression", span="42-43"];
m20_33 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="Exit lambda expression", span="40-41"];
m20_32 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="client.ChangeState(\r\n                jobId, new EnqueuedState(), AwaitingState.StateName)", span="40-41"];
m20_64 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="Entry lambda expression", span="85-89"];
m20_38 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="Exit lambda expression", span="42-43"];
m20_37 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="client.ChangeState(\r\n                jobId, new DeletedState(), AwaitingState.StateName)", span="42-43"];
m20_66 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="Exit lambda expression", span="85-89"];
m20_65 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="new MenuItem(''Awaiting'', page.Url.To(''/jobs/awaiting''))\r\n            {\r\n                Active = page.RequestPath.StartsWith(''/jobs/awaiting''),\r\n                Metric = AwaitingCount\r\n            }", span="85-89"];
m20_41 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="var builder = new StringBuilder()", span="49-49"];
m20_43 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="data.ContainsKey(''ParentId'')", span="53-53"];
m20_44 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="builder.AppendFormat(\r\n                        ''<dt>Parent</dt><dd>{0}</dd>'',\r\n                        html.JobIdLink(data[''ParentId'']))", span="55-57"];
m20_45 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="data.ContainsKey(''NextState'')", span="60-60"];
m20_46 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="var nextState = JsonConvert.DeserializeObject<IState>(\r\n                        data[''NextState''],\r\n                        new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All })", span="62-64"];
m20_47 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="builder.AppendFormat(\r\n                        ''<dt>Next State</dt><dd>{0}</dd>'',\r\n                        html.StateLabel(nextState.Name))", span="66-68"];
m20_48 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="data.ContainsKey(''Options'')", span="71-71"];
m20_49 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="builder.AppendFormat(\r\n                        ''<dt>Options</dt><dd><code>{0}</code></dd>'',\r\n                        html.HtmlEncode(data[''Options'']))", span="73-75"];
m20_51 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="return new NonEscapedString(builder.ToString());", span="80-80"];
m20_42 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="builder.Append(''<dl class=\''dl-horizontal\''>'')", span="51-51"];
m20_50 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="builder.Append(''</dl>'')", span="78-78"];
m20_52 [cluster="lambda expression", file="RedisWriteOnlyCounter.cs", label="Exit lambda expression", span="47-81"];
m20_62 [cluster="Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", span="22-22"];
m20_23 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AddForegroundStateColor(string, string)", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.AddForegroundStateColor(string, string)", span="74-74"];
m20_56 [cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="139-139"];
m20_26 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RedisWriteOnlyCounter.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m20_35 [cluster="Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="54-54"];
m20_67 [cluster="Hangfire.Dashboard.MenuItem.MenuItem(string, string)", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.Dashboard.MenuItem.MenuItem(string, string)", span="23-23"];
m20_98 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149"];
m20_97 [cluster="Hangfire.Continuations.AwaitingState.AwaitingState(string, Hangfire.States.IState, Hangfire.Continuations.JobContinuationOptions)", file="RedisWriteOnlyCounter.cs", label="Entry Hangfire.Continuations.AwaitingState.AwaitingState(string, Hangfire.States.IState, Hangfire.Continuations.JobContinuationOptions)", span="41-41"];
m21_97 [cluster="System.Console.WriteLine(string, object)", file="RedisWriteOnlyJob.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m21_0 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="Entry ConsoleSample.Program.Main()", span="12-12"];
m21_1 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: LogManager.Adapter = new ConsoleOutLoggerFactoryAdapter(\r\n                LogLevel.Info, false, false, true, '''')", span="14-15"];
m21_2 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: var sqlServerStorage = new SqlServerStorage(\r\n                @''Server=.\sqlexpress;Database=HangFire.Sample;Trusted_Connection=True;'')", span="17-18"];
m21_3 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: sqlServerStorage.UseMsmqQueues(@''.\Private$\hangfire{0}'', ''default'', ''critical'')", span="19-19"];
m21_4 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: JobStorage.Current =\r\n                sqlServerStorage", span="21-22"];
m21_5 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: RecurringJob.AddOrUpdate(() => Console.WriteLine(''Hello, world!''), Cron.Minutely)", span="25-25"];
m21_6 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: var options = new BackgroundJobServerOptions\r\n            {\r\n                Queues = new[] { ''critical'', ''default'' }\r\n            }", span="27-30"];
m21_7 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: var server = new BackgroundJobServer(options)", span="32-32"];
m21_8 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: var count = 1", span="34-34"];
m21_13 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: server.Start()", span="47-47"];
m21_9 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: true", span="36-36"];
m21_47 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="var number = count++", span="106-106"];
m21_12 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: command.Equals(''start'', StringComparison.OrdinalIgnoreCase)", span="45-45"];
m21_14 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: command.StartsWith(''add'', StringComparison.OrdinalIgnoreCase)", span="50-50"];
m21_59 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="command.StartsWith(''fast'', StringComparison.OrdinalIgnoreCase)", span="126-126"];
m21_62 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="Console.WriteLine(''Jobs enqueued.'')", span="142-142"];
m21_64 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="Console.WriteLine(ex.Message)", span="146-146"];
m21_10 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: var command = Console.ReadLine()", span="38-38"];
m21_65 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="Console.WriteLine(''Press Enter to exit...'')", span="152-152"];
m21_11 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: command == null || command.Equals(''stop'', StringComparison.OrdinalIgnoreCase)", span="40-40"];
m21_15 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: var workCount = int.Parse(command.Substring(4))", span="54-54"];
m21_24 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: command.StartsWith(''static'', StringComparison.OrdinalIgnoreCase)", span="68-68"];
m21_25 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="var workCount = int.Parse(command.Substring(7))", span="72-72"];
m21_33 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="command.StartsWith(''error'', StringComparison.OrdinalIgnoreCase)", span="85-85"];
m21_34 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="var workCount = int.Parse(command.Substring(6))", span="87-87"];
m21_39 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="command.StartsWith(''args'', StringComparison.OrdinalIgnoreCase)", span="94-94"];
m21_40 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="var workCount = int.Parse(command.Substring(5))", span="96-96"];
m21_45 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="command.StartsWith(''in'', StringComparison.OrdinalIgnoreCase)", span="103-103"];
m21_46 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="var seconds = int.Parse(command.Substring(2))", span="105-105"];
m21_49 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="command.StartsWith(''cancelable'', StringComparison.OrdinalIgnoreCase)", span="110-110"];
m21_50 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="var iterations = int.Parse(command.Substring(11))", span="112-112"];
m21_52 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="command.StartsWith(''delete'', StringComparison.OrdinalIgnoreCase)", span="116-116"];
m21_53 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="var workCount = int.Parse(command.Substring(7))", span="118-118"];
m21_60 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="var workCount = int.Parse(command.Substring(5))", span="130-130"];
m21_16 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: var i = 0", span="55-55"];
m21_17 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: i < workCount", span="55-55"];
m21_21 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: Console.WriteLine(''Jobs enqueued.'')", span="60-60"];
m21_23 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: Console.WriteLine(ex.Message)", span="64-64"];
m21_18 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: var number = i", span="57-57"];
m21_20 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: i++", span="55-55"];
m21_19 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: BackgroundJob.Enqueue<Services>(x => x.Random(number))", span="58-58"];
m21_22 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: Exception", span="62-62"];
m21_48 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="BackgroundJob.Schedule<Services>(x => x.Random(number), TimeSpan.FromSeconds(seconds))", span="107-107"];
m21_55 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="i < workCount", span="119-119"];
m21_61 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="Parallel.For(0, workCount, i =>\r\n                            {\r\n                                if (i % 2 == 0)\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyCritical());\r\n                                }\r\n                                else\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyDefault());\r\n                                }\r\n                            })", span="131-141"];
m21_63 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label=Exception, span="144-144"];
m21_66 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="Console.ReadLine()", span="153-153"];
m21_26 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="var i = 0", span="73-73"];
m21_27 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="i < workCount", span="73-73"];
m21_30 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="Console.WriteLine(''Jobs enqueued.'')", span="77-77"];
m21_32 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="Console.WriteLine(ex.Message)", span="81-81"];
m21_35 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="var i = 0", span="88-88"];
m21_36 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="i < workCount", span="88-88"];
m21_41 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="var i = 0", span="97-97"];
m21_42 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="i < workCount", span="97-97"];
m21_51 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="BackgroundJob.Enqueue<Services>(x => x.Cancelable(iterations, JobCancellationToken.Null))", span="113-113"];
m21_54 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="var i = 0", span="119-119"];
m21_37 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="BackgroundJob.Enqueue<Services>(x => x.Error())", span="90-90"];
m21_43 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="BackgroundJob.Enqueue<Services>(x => x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow))", span="99-99"];
m21_56 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="var jobId = BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="121-121"];
m21_58 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="i++", span="119-119"];
m21_29 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="i++", span="73-73"];
m21_28 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="BackgroundJob.Enqueue(() => Console.WriteLine(''Hello, {0}!'', ''world''))", span="75-75"];
m21_31 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label=Exception, span="79-79"];
m21_38 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="i++", span="88-88"];
m21_44 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="i++", span="97-97"];
m21_57 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="BackgroundJob.Delete(jobId)", span="122-122"];
m21_67 [cluster="ConsoleSample.Program.Main()", file="RedisWriteOnlyJob.cs", label="Exit ConsoleSample.Program.Main()", span="12-12"];
m21_68 [cluster="ConsoleOutLoggerFactoryAdapter.cstr", file="RedisWriteOnlyJob.cs", label="Entry ConsoleOutLoggerFactoryAdapter.cstr", span=""];
m21_84 [cluster="HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="RedisWriteOnlyJob.cs", label="Entry HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="148-148"];
m21_127 [cluster="ConsoleSample.Services.EmptyCritical()", file="RedisWriteOnlyJob.cs", label="Entry ConsoleSample.Services.EmptyCritical()", span="16-16"];
m21_101 [cluster="ConsoleSample.Services.Error()", file="RedisWriteOnlyJob.cs", label="Entry ConsoleSample.Services.Error()", span="21-21"];
m21_70 [cluster="HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string, params string[])", file="RedisWriteOnlyJob.cs", label="Entry HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string, params string[])", span="28-28"];
m21_79 [cluster="int.Parse(string)", file="RedisWriteOnlyJob.cs", label="Entry int.Parse(string)", span="0-0"];
m21_83 [cluster="System.TimeSpan.FromSeconds(double)", file="RedisWriteOnlyJob.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m21_93 [cluster="ConsoleSample.Services.Random(int)", file="RedisWriteOnlyJob.cs", label="Entry ConsoleSample.Services.Random(int)", span="28-28"];
m21_85 [cluster="HangFire.BackgroundJob.Delete(string)", file="RedisWriteOnlyJob.cs", label="Entry HangFire.BackgroundJob.Delete(string)", span="164-164"];
m21_106 [cluster="System.Guid.ToString()", file="RedisWriteOnlyJob.cs", label="Entry System.Guid.ToString()", span="0-0"];
m21_71 [cluster="HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", file="RedisWriteOnlyJob.cs", label="Entry HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", span="35-35"];
m21_77 [cluster="string.StartsWith(string, System.StringComparison)", file="RedisWriteOnlyJob.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m21_73 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", file="RedisWriteOnlyJob.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", span="41-41"];
m21_107 [cluster="ConsoleSample.Services.Args(string, int, System.DateTime)", file="RedisWriteOnlyJob.cs", label="Entry ConsoleSample.Services.Args(string, int, System.DateTime)", span="64-64"];
m21_74 [cluster="System.Console.ReadLine()", file="RedisWriteOnlyJob.cs", label="Entry System.Console.ReadLine()", span="0-0"];
m21_80 [cluster="HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="RedisWriteOnlyJob.cs", label="Entry HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="78-78"];
m21_75 [cluster="string.Equals(string, System.StringComparison)", file="RedisWriteOnlyJob.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m21_94 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Entry lambda expression", span="75-75"];
m21_87 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Entry lambda expression", span="25-25"];
m21_91 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: x.Random(number)", span="58-58"];
m21_90 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Entry lambda expression", span="58-58"];
m21_92 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Exit lambda expression", span="58-58"];
m21_88 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: Console.WriteLine(''Hello, world!'')", span="25-25"];
m21_89 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Exit lambda expression", span="25-25"];
m21_109 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="x.Random(number)", span="107-107"];
m21_112 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="x.Cancelable(iterations, JobCancellationToken.Null)", span="113-113"];
m21_121 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="BackgroundJob.Enqueue<Services>(x => x.EmptyCritical())", span="135-135"];
m21_122 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="139-139"];
m21_108 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Entry lambda expression", span="107-107"];
m21_110 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Exit lambda expression", span="107-107"];
m21_119 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Entry lambda expression", span="131-141"];
m21_111 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Entry lambda expression", span="113-113"];
m21_113 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Exit lambda expression", span="113-113"];
m21_98 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Entry lambda expression", span="90-90"];
m21_102 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Entry lambda expression", span="99-99"];
m21_115 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Entry lambda expression", span="121-121"];
m21_120 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="i % 2 == 0", span="133-133"];
m21_123 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Exit lambda expression", span="131-141"];
m21_124 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Entry lambda expression", span="135-135"];
m21_128 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Entry lambda expression", span="139-139"];
m21_100 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Exit lambda expression", span="90-90"];
m21_99 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="x.Error()", span="90-90"];
m21_104 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Exit lambda expression", span="99-99"];
m21_103 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow)", span="99-99"];
m21_117 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Exit lambda expression", span="121-121"];
m21_116 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="x.EmptyDefault()", span="121-121"];
m21_126 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Exit lambda expression", span="135-135"];
m21_125 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="x.EmptyCritical()", span="135-135"];
m21_130 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Exit lambda expression", span="139-139"];
m21_129 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="x.EmptyDefault()", span="139-139"];
m21_95 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Console.WriteLine(''Hello, {0}!'', ''world'')", span="75-75"];
m21_96 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Exit lambda expression", span="75-75"];
m21_86 [cluster="System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", file="RedisWriteOnlyJob.cs", label="Entry System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", span="0-0"];
m21_105 [cluster="System.Guid.NewGuid()", file="RedisWriteOnlyJob.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m21_76 [cluster="HangFire.BackgroundJobServer.Start()", file="RedisWriteOnlyJob.cs", label="Entry HangFire.BackgroundJobServer.Start()", span="60-60"];
m21_69 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="RedisWriteOnlyJob.cs", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="32-32"];
m21_72 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="RedisWriteOnlyJob.cs", label="Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="29-29"];
m21_82 [cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="RedisWriteOnlyJob.cs", label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="60-60"];
m21_81 [cluster="System.Console.WriteLine(string)", file="RedisWriteOnlyJob.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m21_114 [cluster="ConsoleSample.Services.Cancelable(int, HangFire.IJobCancellationToken)", file="RedisWriteOnlyJob.cs", label="Entry ConsoleSample.Services.Cancelable(int, HangFire.IJobCancellationToken)", span="45-45"];
m21_118 [cluster="ConsoleSample.Services.EmptyDefault()", file="RedisWriteOnlyJob.cs", label="Entry ConsoleSample.Services.EmptyDefault()", span="11-11"];
m21_78 [cluster="string.Substring(int)", file="RedisWriteOnlyJob.cs", label="Entry string.Substring(int)", span="0-0"];
m21_131 [file="RedisWriteOnlyJob.cs", label=number, span=""];
m21_132 [file="RedisWriteOnlyJob.cs", label=number, span=""];
m21_133 [file="RedisWriteOnlyJob.cs", label=iterations, span=""];
m24_0 [cluster="Hangfire.Dashboard.Metric.Metric(string)", file="RedisWriteOnlySet.cs", label="Entry Hangfire.Dashboard.Metric.Metric(string)", span="20-20"];
m24_1 [cluster="Hangfire.Dashboard.Metric.Metric(string)", color=green, community=0, file="RedisWriteOnlySet.cs", label="0: Value = value", span="22-22"];
m24_2 [cluster="Hangfire.Dashboard.Metric.Metric(string)", file="RedisWriteOnlySet.cs", label="Exit Hangfire.Dashboard.Metric.Metric(string)", span="20-20"];
m24_17 [file="RedisWriteOnlySet.cs", label="Hangfire.Dashboard.Metric", span=""];
m25_22 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", span="37-37"];
m25_23 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: _transaction.Dispose()", span="39-39"];
m25_24 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", span="37-37"];
m25_14 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", span="10-10"];
m25_11 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisWriteOnlyTransaction.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m25_21 [cluster="Unk.Commit", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Commit", span=""];
m25_15 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", span="10-10"];
m25_25 [cluster="Unk.Dispose", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Dispose", span=""];
m25_16 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyJob.RedisWriteOnlyJob(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyJob.RedisWriteOnlyJob(IRedisTransaction)", span="12-12"];
m25_17 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyCounter.RedisWriteOnlyCounter(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyCounter.RedisWriteOnlyCounter(IRedisTransaction)", span="10-10"];
m25_18 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="32-32"];
m25_19 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: return _transaction.Commit();", span="34-34"];
m25_20 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="32-32"];
m25_13 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.RedisWriteOnlySet(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlySet.RedisWriteOnlySet(IRedisTransaction)", span="10-10"];
m25_12 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyValue.RedisWriteOnlyValue(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyValue.RedisWriteOnlyValue(IRedisTransaction)", span="10-10"];
m25_0 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="11-11"];
m25_1 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: transaction == null", span="13-13"];
m25_2 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: throw new ArgumentNullException(''transaction'');", span="13-13"];
m25_3 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: _transaction = transaction", span="15-15"];
m25_4 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: Values = new RedisWriteOnlyValue(transaction)", span="17-17"];
m25_5 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: Sets = new RedisWriteOnlySet(transaction)", span="18-18"];
m25_6 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: Lists = new RedisWriteOnlyList(transaction)", span="19-19"];
m25_7 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: Queues = new RedisWriteOnlyQueue(transaction)", span="20-20"];
m25_8 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: Jobs = new RedisWriteOnlyJob(transaction)", span="21-21"];
m25_9 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: Counters = new RedisWriteOnlyCounter(transaction)", span="22-22"];
m25_10 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="11-11"];
m25_26 [file="RedisWriteOnlyTransaction.cs", label="HangFire.Redis.RedisWriteOnlyTransaction", span=""];
m27_6 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", file="ServerWatchdog.cs", label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", span="48-48"];
m27_17 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", file="ServerWatchdog.cs", label="_combinedHash64 = ((_combinedHash64 << 5) + _combinedHash64) ^ i", span="50-50"];
m27_18 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", file="ServerWatchdog.cs", label="Exit HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", span="48-48"];
m27_16 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="ServerWatchdog.cs", label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", span="53-53"];
m27_19 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="ServerWatchdog.cs", label="int hashCode = (o != null) ? o.GetHashCode() : 0", span="55-55"];
m27_20 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="ServerWatchdog.cs", label="AddInt32(hashCode)", span="56-56"];
m27_21 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="ServerWatchdog.cs", label="Exit HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", span="53-53"];
m27_22 [cluster="object.GetHashCode()", file="ServerWatchdog.cs", label="Entry object.GetHashCode()", span="0-0"];
m27_5 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="ServerWatchdog.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="26-26"];
m27_0 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddFingerprint(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="ServerWatchdog.cs", label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddFingerprint(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="18-18"];
m27_1 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddFingerprint(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="ServerWatchdog.cs", label="fingerprint != null", span="20-20"];
m27_2 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddFingerprint(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="ServerWatchdog.cs", label="fingerprint.AddToHashCodeCombiner(this)", span="22-22"];
m27_3 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddFingerprint(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="ServerWatchdog.cs", label="AddInt32(0)", span="26-26"];
m27_4 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddFingerprint(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="ServerWatchdog.cs", label="Exit HangFire.Common.ExpressionUtil.HashCodeCombiner.AddFingerprint(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="18-18"];
m27_7 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddEnumerable(System.Collections.IEnumerable)", file="ServerWatchdog.cs", label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddEnumerable(System.Collections.IEnumerable)", span="30-30"];
m27_8 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddEnumerable(System.Collections.IEnumerable)", file="ServerWatchdog.cs", label="e == null", span="32-32"];
m27_11 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddEnumerable(System.Collections.IEnumerable)", file="ServerWatchdog.cs", label=e, span="39-39"];
m27_9 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddEnumerable(System.Collections.IEnumerable)", file="ServerWatchdog.cs", label="AddInt32(0)", span="34-34"];
m27_10 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddEnumerable(System.Collections.IEnumerable)", file="ServerWatchdog.cs", label="int count = 0", span="38-38"];
m27_13 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddEnumerable(System.Collections.IEnumerable)", file="ServerWatchdog.cs", label="count++", span="42-42"];
m27_14 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddEnumerable(System.Collections.IEnumerable)", file="ServerWatchdog.cs", label="AddInt32(count)", span="44-44"];
m27_12 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddEnumerable(System.Collections.IEnumerable)", file="ServerWatchdog.cs", label="AddObject(o)", span="41-41"];
m27_15 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddEnumerable(System.Collections.IEnumerable)", file="ServerWatchdog.cs", label="Exit HangFire.Common.ExpressionUtil.HashCodeCombiner.AddEnumerable(System.Collections.IEnumerable)", span="30-30"];
m27_23 [file="ServerWatchdog.cs", label="HangFire.Common.ExpressionUtil.HashCodeCombiner", span=""];
m29_13 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="SqlJobLock.cs", label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", span="53-53"];
m29_3 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", file="SqlJobLock.cs", label="Entry HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", span="30-30"];
m29_4 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", file="SqlJobLock.cs", label="BinaryExpressionFingerprint other = obj as BinaryExpressionFingerprint", span="32-32"];
m29_5 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", file="SqlJobLock.cs", label="return (other != null)\r\n                   && Equals(this.Method, other.Method)\r\n                   && this.Equals(other);", span="33-35"];
m29_6 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", file="SqlJobLock.cs", label="Exit HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", span="30-30"];
m29_8 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="SqlJobLock.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="32-32"];
m29_7 [cluster="object.Equals(object, object)", file="SqlJobLock.cs", label="Entry object.Equals(object, object)", span="0-0"];
m29_14 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="SqlJobLock.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="26-26"];
m29_9 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="SqlJobLock.cs", label="Entry HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="38-38"];
m29_10 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="SqlJobLock.cs", label="combiner.AddObject(Method)", span="40-40"];
m29_11 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="SqlJobLock.cs", label="base.AddToHashCodeCombiner(combiner)", span="41-41"];
m29_12 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="SqlJobLock.cs", label="Exit HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="38-38"];
m29_0 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="SqlJobLock.cs", label="Entry HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", span="18-18"];
m29_1 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="SqlJobLock.cs", label="Method = method", span="24-24"];
m29_2 [cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="SqlJobLock.cs", label="Exit HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", span="18-18"];
m29_15 [file="SqlJobLock.cs", label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint", span=""];
m32_12 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", file="SqlServerStorage.cs", label="return wasStopped;", span="38-38"];
m32_35 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetConnection()", span="69-69"];
m32_36 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", color=green, community=0, file="SqlServerStorage.cs", label="0: return new SqlStorageConnection(this, CreateAndOpenConnection());", span="71-71"];
m32_37 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetConnection()", span="69-69"];
m32_34 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", span="20-20"];
m32_26 [cluster="object.GetType()", file="SqlServerStorage.cs", label="Entry object.GetType()", span="0-0"];
m32_38 [cluster="HangFire.SqlServer.SqlStorageConnection.SqlStorageConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlStorageConnection.SqlStorageConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", span="17-17"];
m32_28 [cluster="string.Replace(string, string)", file="SqlServerStorage.cs", label="Entry string.Replace(string, string)", span="0-0"];
m32_24 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", span="89-89"];
m32_53 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="SqlServerStorage.cs", label="var connection = CreateAndOpenConnection()", span="91-91"];
m32_54 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="SqlServerStorage.cs", label="var edition = connection.Query<int>(''SELECT SERVERPROPERTY ( 'EngineEdition' )'').Single()", span="93-93"];
m32_55 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="SqlServerStorage.cs", label="return edition >= SqlEngineEdition.Standard && edition <= SqlEngineEdition.Express;", span="94-94"];
m32_56 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", span="89-89"];
m32_45 [cluster="HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="SqlServerStorage.cs", label="Entry HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="33-33"];
m32_57 [cluster="Unk.>", file="SqlServerStorage.cs", label="Entry Unk.>", span=""];
m32_16 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="throw new PlatformNotSupportedException(''The SQL Server edition of the target server is unsupported, e.g. SQL Azure.'');", span="50-50"];
m32_17 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="var script = GetStringResource(GetType().Assembly, ''HangFire.SqlServer.Install.sql'')", span="53-53"];
m32_18 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="script = script.Replace(''SET @TARGET_SCHEMA_VERSION = 2;'', ''SET @TARGET_SCHEMA_VERSION = '' + RequiredSchemaVersion + '';'')", span="54-54"];
m32_52 [cluster="Unk.Open", file="SqlServerStorage.cs", label="Entry Unk.Open", span=""];
m32_51 [cluster="SqlConnection.cstr", file="SqlServerStorage.cs", label="Entry SqlConnection.cstr", span=""];
m32_27 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", span="98-98"];
m32_59 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerStorage.cs", label="var stream = assembly.GetManifestResourceStream(resourceName)", span="100-100"];
m32_61 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerStorage.cs", label="return reader.ReadToEnd();", span="103-103"];
m32_60 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerStorage.cs", label="var reader = new StreamReader(stream)", span="101-101"];
m32_62 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", span="98-98"];
m32_2 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="30-30"];
m32_3 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="connectionString == null", span="32-32"];
m32_4 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="throw new ArgumentNullException(''connectionString'');", span="32-32"];
m32_5 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="options == null", span="33-33"];
m32_63 [cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="SqlServerStorage.cs", label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0"];
m32_31 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="64-64"];
m32_32 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs", label="return new SqlServerMonitoringApi(CreateAndOpenConnection());", span="66-66"];
m32_33 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="64-64"];
m32_44 [cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="SqlServerStorage.cs", label="Entry HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34"];
m32_14 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="Log.Debug(''Start installing HangFire SQL objects...'')", span="46-46"];
m32_7 [cluster="Unk.RegisterObject", file="SqlServerStorage.cs", label="Entry Unk.RegisterObject", span=""];
m32_8 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", file="SqlServerStorage.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.Stop()", span="30-30"];
m32_10 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", file="SqlServerStorage.cs", label=wasStopped, span="33-33"];
m32_9 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", file="SqlServerStorage.cs", label="var wasStopped = base.Stop()", span="32-32"];
m32_6 [cluster="HangFire.BackgroundJobServer.Start()", file="SqlServerStorage.cs", label="Entry HangFire.BackgroundJobServer.Start()", span="42-42"];
m32_11 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", file="SqlServerStorage.cs", label="HostingEnvironment.UnregisterObject(this)", span="35-35"];
m32_13 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", span="44-44"];
m32_39 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetComponents()", span="74-74"];
m32_40 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="yield return new SchedulePoller(this, _options.PollInterval);", span="76-76"];
m32_41 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="yield return new ServerWatchdog(this);", span="77-77"];
m32_42 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="yield return new ExpirationManager(this);", span="78-78"];
m32_43 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetComponents()", span="74-74"];
m32_64 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="SqlServerStorage.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m32_58 [cluster="Unk.Single", file="SqlServerStorage.cs", label="Entry Unk.Single", span=""];
m32_30 [cluster="Unk.Execute", file="SqlServerStorage.cs", label="Entry Unk.Execute", span=""];
m32_29 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="81-81"];
m32_47 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="var connection = new SqlConnection(_connectionString)", span="83-83"];
m32_48 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="connection.Open()", span="84-84"];
m32_49 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="return connection;", span="86-86"];
m32_50 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="81-81"];
m32_65 [cluster="System.IO.StreamReader.ReadToEnd()", file="SqlServerStorage.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m32_23 [cluster="Unk.Debug", file="SqlServerStorage.cs", label="Entry Unk.Debug", span=""];
m32_0 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params HangFire.Server.WorkerPool[])", file="SqlServerStorage.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params HangFire.Server.WorkerPool[])", span="11-11"];
m32_1 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params HangFire.Server.WorkerPool[])", file="SqlServerStorage.cs", label="Exit HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params HangFire.Server.WorkerPool[])", span="11-11"];
m32_46 [cluster="HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="27-27"];
m32_15 [cluster="Unk.UnregisterObject", file="SqlServerStorage.cs", label="Entry Unk.UnregisterObject", span=""];
m32_19 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="HangFire.Web.AspNetBackgroundJobServer", span=""];
m32_20 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="connection.Execute(script)", span="58-58"];
m32_21 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="Log.Debug(''HangFire SQL objects installed.'')", span="61-61"];
m32_22 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", span="44-44"];
m32_25 [cluster="System.PlatformNotSupportedException.PlatformNotSupportedException(string)", file="SqlServerStorage.cs", label="Entry System.PlatformNotSupportedException.PlatformNotSupportedException(string)", span="0-0"];
m32_66 [file="SqlServerStorage.cs", label="HangFire.SqlServer.SqlServerStorage", span=""];
m34_76 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="45-45"];
m34_64 [cluster="HangFire.RetryJobsFilter.RetryJobsFilter()", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.RetryJobsFilter.RetryJobsFilter()", span="6-6"];
m34_67 [cluster="HangFire.Server.WorkerPool.WorkerPool(int, string)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.Server.WorkerPool.WorkerPool(int, string)", span="16-16"];
m34_23 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="Entry ConsoleSample.Program.Main()", span="56-56"];
m34_54 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="Perform.In<ConsoleJob>(TimeSpan.FromSeconds(seconds), new { Number = count++ })", span="115-115"];
m34_32 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="Console.WriteLine(''HangFire Server has been started. Press Ctrl+C to exit...'')", span="73-73"];
m34_58 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="Console.WriteLine(''Press Enter to exit...'')", span="126-126"];
m34_43 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="Console.WriteLine(''Jobs enqueued.'')", span="95-95"];
m34_45 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="Console.WriteLine(ex.Message)", span="99-99"];
m34_57 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="Console.WriteLine(''Recurring job added'')", span="121-121"];
m34_33 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="var count = 1", span="75-75"];
m34_41 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="Perform.Async<ConsoleJob>(new { Number = count++ })", span="93-93"];
m34_53 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="var seconds = int.Parse(command.Substring(2))", span="114-114"];
m34_55 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="command.StartsWith(''recurring'', StringComparison.OrdinalIgnoreCase)", span="118-118"];
m34_31 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="server.Start()", span="71-71"];
m34_34 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label=true, span="77-77"];
m34_36 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="command == null || command.Equals(''stop'', StringComparison.OrdinalIgnoreCase)", span="81-81"];
m34_59 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="Console.ReadLine()", span="127-127"];
m34_40 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="i < workCount", span="91-91"];
m34_44 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label=Exception, span="97-97"];
m34_46 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="command.StartsWith(''error'', StringComparison.OrdinalIgnoreCase)", span="103-103"];
m34_56 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="Perform.Async<RecurringJob>()", span="120-120"];
m34_42 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="i++", span="91-91"];
m34_35 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="var command = Console.ReadLine()", span="79-79"];
m34_52 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="command.StartsWith(''in'', StringComparison.OrdinalIgnoreCase)", span="112-112"];
m34_30 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="var server = new BackgroundJobServer(\r\n                new WorkerPool(40, ''critical''),\r\n                new WorkerPool(20))", span="67-69"];
m34_37 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="command.StartsWith(''add'', StringComparison.OrdinalIgnoreCase)", span="86-86"];
m34_38 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="var workCount = int.Parse(command.Substring(4))", span="90-90"];
m34_39 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="var i = 0", span="91-91"];
m34_47 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="var workCount = int.Parse(command.Substring(6))", span="105-105"];
m34_50 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="Perform.Async<ErrorJob>(new { ArticleId = 2, Product = ''Casio Privia PX-850'' })", span="108-108"];
m34_49 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="i < workCount", span="106-106"];
m34_29 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="GlobalJobFilters.Filters.Add(new RecurringJobsFilter())", span="65-65"];
m34_48 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="var i = 0", span="106-106"];
m34_51 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="i++", span="106-106"];
m34_28 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="GlobalJobFilters.Filters.Add(new RetryJobsFilter())", span="64-64"];
m34_24 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="LogManager.LogFactory = new ConsoleLogFactory()", span="58-58"];
m34_27 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="GlobalJobFilters.Filters.Add(new HistoryStatisticsFilter())", span="63-63"];
m34_25 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="RedisFactory.Port = 6379", span="60-60"];
m34_26 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="RedisFactory.Db = 3", span="61-61"];
m34_60 [cluster="ConsoleSample.Program.Main()", file="SqlServerWriteOnlyJob.cs", label="Exit ConsoleSample.Program.Main()", span="56-56"];
m34_20 [cluster="ConsoleSample.RecurringJob.Perform()", file="SqlServerWriteOnlyJob.cs", label="Entry ConsoleSample.RecurringJob.Perform()", span="48-48"];
m34_21 [cluster="ConsoleSample.RecurringJob.Perform()", file="SqlServerWriteOnlyJob.cs", label="Console.WriteLine(''Performing recurring task...'')", span="50-50"];
m34_22 [cluster="ConsoleSample.RecurringJob.Perform()", file="SqlServerWriteOnlyJob.cs", label="Exit ConsoleSample.RecurringJob.Perform()", span="48-48"];
m34_10 [cluster="System.Exception.Exception()", file="SqlServerWriteOnlyJob.cs", label="Entry System.Exception.Exception()", span="0-0"];
m34_77 [cluster="HangFire.Perform.Async<TJob>()", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.Perform.Async<TJob>()", span="11-11"];
m34_66 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params HangFire.Server.WorkerPool[])", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(params HangFire.Server.WorkerPool[])", span="14-14"];
m34_75 [cluster="HangFire.Perform.Async<TJob>(object)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.Perform.Async<TJob>(object)", span="18-18"];
m34_19 [cluster="System.IO.FileLoadException.FileLoadException()", file="SqlServerWriteOnlyJob.cs", label="Entry System.IO.FileLoadException.FileLoadException()", span="0-0"];
m34_74 [cluster="int.Parse(string)", file="SqlServerWriteOnlyJob.cs", label="Entry int.Parse(string)", span="0-0"];
m34_11 [cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerWriteOnlyJob.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m34_62 [cluster="HangFire.HistoryStatisticsFilter.HistoryStatisticsFilter()", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.HistoryStatisticsFilter.HistoryStatisticsFilter()", span="6-6"];
m34_0 [cluster="ConsoleSample.ConsoleJob.Perform()", file="SqlServerWriteOnlyJob.cs", label="Entry ConsoleSample.ConsoleJob.Perform()", span="18-18"];
m34_1 [cluster="ConsoleSample.ConsoleJob.Perform()", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="0: int time", span="20-20"];
m34_2 [cluster="ConsoleSample.ConsoleJob.Perform()", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="0: _random", span="21-21"];
m34_3 [cluster="ConsoleSample.ConsoleJob.Perform()", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="0: time = _random.Next(10)", span="23-23"];
m34_4 [cluster="ConsoleSample.ConsoleJob.Perform()", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="0: time < 5", span="26-26"];
m34_6 [cluster="ConsoleSample.ConsoleJob.Perform()", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="0: Thread.Sleep(TimeSpan.FromSeconds(5 + time))", span="31-31"];
m34_5 [cluster="ConsoleSample.ConsoleJob.Perform()", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="0: throw new Exception();", span="28-28"];
m34_7 [cluster="ConsoleSample.ConsoleJob.Perform()", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="0: Console.WriteLine(''Finished task: '' + Number)", span="32-32"];
m34_8 [cluster="ConsoleSample.ConsoleJob.Perform()", file="SqlServerWriteOnlyJob.cs", label="Exit ConsoleSample.ConsoleJob.Perform()", span="18-18"];
m34_12 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="SqlServerWriteOnlyJob.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m34_72 [cluster="string.StartsWith(string, System.StringComparison)", file="SqlServerWriteOnlyJob.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m34_18 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="SqlServerWriteOnlyJob.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m34_65 [cluster="HangFire.RecurringJobsFilter.RecurringJobsFilter()", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.RecurringJobsFilter.RecurringJobsFilter()", span="18-18"];
m34_70 [cluster="System.Console.ReadLine()", file="SqlServerWriteOnlyJob.cs", label="Entry System.Console.ReadLine()", span="0-0"];
m34_9 [cluster="System.Random.Next(int)", file="SqlServerWriteOnlyJob.cs", label="Entry System.Random.Next(int)", span="0-0"];
m34_71 [cluster="string.Equals(string, System.StringComparison)", file="SqlServerWriteOnlyJob.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m34_68 [cluster="HangFire.Server.WorkerPool.WorkerPool(int)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.Server.WorkerPool.WorkerPool(int)", span="11-11"];
m34_69 [cluster="HangFire.BackgroundJobServer.Start()", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.BackgroundJobServer.Start()", span="42-42"];
m34_63 [cluster="HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", span="17-17"];
m34_13 [cluster="System.Console.WriteLine(string)", file="SqlServerWriteOnlyJob.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m34_14 [cluster="ConsoleSample.ErrorJob.Perform()", file="SqlServerWriteOnlyJob.cs", label="Entry ConsoleSample.ErrorJob.Perform()", span="38-38"];
m34_15 [cluster="ConsoleSample.ErrorJob.Perform()", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="0: Console.WriteLine(''Beginning error task...'')", span="40-40"];
m34_16 [cluster="ConsoleSample.ErrorJob.Perform()", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="0: throw new InvalidOperationException(null, new FileLoadException());", span="41-41"];
m34_17 [cluster="ConsoleSample.ErrorJob.Perform()", file="SqlServerWriteOnlyJob.cs", label="Exit ConsoleSample.ErrorJob.Perform()", span="38-38"];
m34_61 [cluster="ConsoleLogFactory.cstr", file="SqlServerWriteOnlyJob.cs", label="Entry ConsoleLogFactory.cstr", span=""];
m34_73 [cluster="string.Substring(int)", file="SqlServerWriteOnlyJob.cs", label="Entry string.Substring(int)", span="0-0"];
m34_78 [file="SqlServerWriteOnlyJob.cs", label="ConsoleSample.ConsoleJob", span=""];
m35_14 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerWriteOnlyList.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m35_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerWriteOnlyList.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m35_8 [cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction)", file="SqlServerWriteOnlyList.cs", label="Entry HangFire.States.ScheduledState.Apply(IRedisTransaction)", span="29-29"];
m35_9 [cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction)", color=green, community=0, file="SqlServerWriteOnlyList.cs", label="0: transaction == null", span="31-31"];
m35_10 [cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction)", color=green, community=0, file="SqlServerWriteOnlyList.cs", label="0: throw new ArgumentNullException(''transaction'');", span="31-31"];
m35_11 [cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction)", color=green, community=0, file="SqlServerWriteOnlyList.cs", label="0: var timestamp = JobHelper.ToTimestamp(EnqueueAt)", span="33-33"];
m35_12 [cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction)", color=green, community=0, file="SqlServerWriteOnlyList.cs", label="0: transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                ''hangfire:schedule'', JobId, timestamp))", span="35-36"];
m35_13 [cluster="HangFire.States.ScheduledState.Apply(IRedisTransaction)", file="SqlServerWriteOnlyList.cs", label="Exit HangFire.States.ScheduledState.Apply(IRedisTransaction)", span="29-29"];
m35_0 [cluster="HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", file="SqlServerWriteOnlyList.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", span="10-10"];
m35_1 [cluster="HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", color=green, community=0, file="SqlServerWriteOnlyList.cs", label="0: EnqueueAt = enqueueAt", span="13-13"];
m35_2 [cluster="HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", file="SqlServerWriteOnlyList.cs", label="Exit HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", span="10-10"];
m35_15 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="SqlServerWriteOnlyList.cs", label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="44-44"];
m35_16 [cluster="Unk.QueueCommand", file="SqlServerWriteOnlyList.cs", label="Entry Unk.QueueCommand", span=""];
m35_20 [cluster="Unk.AddItemToSortedSet", file="SqlServerWriteOnlyList.cs", label="Entry Unk.AddItemToSortedSet", span=""];
m35_3 [cluster="HangFire.States.ScheduledState.GetProperties()", file="SqlServerWriteOnlyList.cs", label="Entry HangFire.States.ScheduledState.GetProperties()", span="20-20"];
m35_4 [cluster="HangFire.States.ScheduledState.GetProperties()", color=green, community=0, file="SqlServerWriteOnlyList.cs", label="0: return new Dictionary<string, string>\r\n                {\r\n                    { ''ScheduledAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''EnqueueAt'', JobHelper.ToStringTimestamp(EnqueueAt) }\r\n                };", span="22-26"];
m35_5 [cluster="HangFire.States.ScheduledState.GetProperties()", file="SqlServerWriteOnlyList.cs", label="Exit HangFire.States.ScheduledState.GetProperties()", span="20-20"];
m35_17 [cluster="lambda expression", file="SqlServerWriteOnlyList.cs", label="Entry lambda expression", span="35-36"];
m35_18 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyList.cs", label="0: x.AddItemToSortedSet(\r\n                ''hangfire:schedule'', JobId, timestamp)", span="35-36"];
m35_19 [cluster="lambda expression", file="SqlServerWriteOnlyList.cs", label="Exit lambda expression", span="35-36"];
m35_7 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerWriteOnlyList.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m35_21 [file="SqlServerWriteOnlyList.cs", label="HangFire.States.ScheduledState", span=""];
m35_22 [file="SqlServerWriteOnlyList.cs", label=timestamp, span=""];
m36_0 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", span="10-10"];
m36_1 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", color=green, community=0, file="SqlServerWriteOnlyQueue.cs", label="0: transaction == null", span="12-12"];
m36_2 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", color=green, community=0, file="SqlServerWriteOnlyQueue.cs", label="0: throw new ArgumentNullException(''transaction'');", span="12-12"];
m36_3 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", color=green, community=0, file="SqlServerWriteOnlyQueue.cs", label="0: _transaction = transaction", span="14-14"];
m36_4 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", span="10-10"];
m36_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerWriteOnlyQueue.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m36_10 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="38-38"];
m36_14 [cluster="Unk.Execute", file="SqlServerWriteOnlyQueue.cs", label="Entry Unk.Execute", span=""];
m36_6 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", file="SqlServerWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", span="17-17"];
m36_7 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", color=green, community=1, file="SqlServerWriteOnlyQueue.cs", label="0: string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue)''", span="19-21"];
m36_8 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", color=green, community=1, file="SqlServerWriteOnlyQueue.cs", label="0: _transaction.QueueCommand(x => x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue }))", span="23-25"];
m36_9 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", file="SqlServerWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", span="17-17"];
m36_11 [cluster="lambda expression", file="SqlServerWriteOnlyQueue.cs", label="Entry lambda expression", span="23-25"];
m36_12 [cluster="lambda expression", color=green, community=1, file="SqlServerWriteOnlyQueue.cs", label="0: x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue })", span="23-25"];
m36_13 [cluster="lambda expression", file="SqlServerWriteOnlyQueue.cs", label="Exit lambda expression", span="23-25"];
m36_15 [file="SqlServerWriteOnlyQueue.cs", label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue", span=""];
m36_16 [file="SqlServerWriteOnlyQueue.cs", label=string, span=""];
m36_17 [file="SqlServerWriteOnlyQueue.cs", label=string, span=""];
m36_18 [file="SqlServerWriteOnlyQueue.cs", label=enqueueJobSql, span=""];
m37_22 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.Func<string>)", file="SqlServerWriteOnlySet.cs", label="Entry HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.Func<string>)", span="48-48"];
m37_23 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.Func<string>)", file="SqlServerWriteOnlySet.cs", label="AddOrUpdate(methodCall, cronExpression())", span="50-50"];
m37_24 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.Func<string>)", file="SqlServerWriteOnlySet.cs", label="Exit HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.Func<string>)", span="48-48"];
m37_11 [cluster="HangFire.RecurringJobManager.AddOrUpdate(string, HangFire.Common.Job, string)", file="SqlServerWriteOnlySet.cs", label="Entry HangFire.RecurringJobManager.AddOrUpdate(string, HangFire.Common.Job, string)", span="54-54"];
m37_10 [cluster="HangFire.RecurringJob.GetRecurringJobId(HangFire.Common.Job)", file="SqlServerWriteOnlySet.cs", label="Entry HangFire.RecurringJob.GetRecurringJobId(HangFire.Common.Job)", span="53-53"];
m37_25 [cluster="HangFire.RecurringJob.GetRecurringJobId(HangFire.Common.Job)", file="SqlServerWriteOnlySet.cs", label="return String.Format(''{0}.{1}'', job.Type.Name, job.Method.Name);", span="55-55"];
m37_26 [cluster="HangFire.RecurringJob.GetRecurringJobId(HangFire.Common.Job)", file="SqlServerWriteOnlySet.cs", label="Exit HangFire.RecurringJob.GetRecurringJobId(HangFire.Common.Job)", span="53-53"];
m37_27 [cluster="string.Format(string, object, object)", file="SqlServerWriteOnlySet.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m37_9 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SqlServerWriteOnlySet.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="117-117"];
m37_4 [cluster="HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, string)", file="SqlServerWriteOnlySet.cs", label="Entry HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, string)", span="27-27"];
m37_5 [cluster="HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, string)", color=green, community=0, file="SqlServerWriteOnlySet.cs", label="0: var job = Job.FromExpression(methodCall)", span="29-29"];
m37_6 [cluster="HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, string)", color=green, community=0, file="SqlServerWriteOnlySet.cs", label="0: var id = GetRecurringJobId(job)", span="30-30"];
m37_7 [cluster="HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, string)", color=green, community=0, file="SqlServerWriteOnlySet.cs", label="0: Instance.Value.AddOrUpdate(id, job, cronExpression)", span="32-32"];
m37_8 [cluster="HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, string)", file="SqlServerWriteOnlySet.cs", label="Exit HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, string)", span="27-27"];
m37_16 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", file="SqlServerWriteOnlySet.cs", label="Entry HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", span="40-40"];
m37_17 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", color=green, community=0, file="SqlServerWriteOnlySet.cs", label="0: var job = Job.FromExpression(methodCall)", span="42-42"];
m37_18 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", color=green, community=0, file="SqlServerWriteOnlySet.cs", label="0: var id = GetRecurringJobId(job)", span="43-43"];
m37_19 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", file="SqlServerWriteOnlySet.cs", label="Instance.Value.AddOrUpdate(id, job, cronExpression)", span="45-45"];
m37_20 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", file="SqlServerWriteOnlySet.cs", label="Exit HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", span="40-40"];
m37_3 [cluster="HangFire.RecurringJobManager.RecurringJobManager()", file="SqlServerWriteOnlySet.cs", label="Entry HangFire.RecurringJobManager.RecurringJobManager()", span="35-35"];
m37_0 [cluster="lambda expression", file="SqlServerWriteOnlySet.cs", label="Entry lambda expression", span="25-25"];
m37_1 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlySet.cs", label="0: new RecurringJobManager()", span="25-25"];
m37_2 [cluster="lambda expression", file="SqlServerWriteOnlySet.cs", label="Exit lambda expression", span="25-25"];
m37_15 [cluster="System.Func<TResult>.Invoke()", file="SqlServerWriteOnlySet.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m37_12 [cluster="HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", file="SqlServerWriteOnlySet.cs", label="Entry HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", span="35-35"];
m37_13 [cluster="HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", color=green, community=0, file="SqlServerWriteOnlySet.cs", label="0: AddOrUpdate(methodCall, cronExpression())", span="37-37"];
m37_14 [cluster="HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", file="SqlServerWriteOnlySet.cs", label="Exit HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", span="35-35"];
m37_21 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="SqlServerWriteOnlySet.cs", label="Entry HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="144-144"];
m39_34 [cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerWriteOnlyValue.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m39_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerWriteOnlyValue.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m39_11 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyValue.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="38-38"];
m39_17 [cluster="Unk.Execute", file="SqlServerWriteOnlyValue.cs", label="Entry Unk.Execute", span=""];
m39_28 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.ExpireIn(string, System.TimeSpan)", file="SqlServerWriteOnlyValue.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.ExpireIn(string, System.TimeSpan)", span="61-61"];
m39_29 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.ExpireIn(string, System.TimeSpan)", color=green, community=1, file="SqlServerWriteOnlyValue.cs", label="0: _transaction.QueueCommand(x => x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key }))", span="63-65"];
m39_30 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.ExpireIn(string, System.TimeSpan)", file="SqlServerWriteOnlyValue.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.ExpireIn(string, System.TimeSpan)", span="61-61"];
m39_6 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Increment(string)", file="SqlServerWriteOnlyValue.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Increment(string)", span="17-17"];
m39_7 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Increment(string)", color=green, community=1, file="SqlServerWriteOnlyValue.cs", label="0: string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="19-24"];
m39_8 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Increment(string)", color=green, community=1, file="SqlServerWriteOnlyValue.cs", label="0: string updateSql = @''\r\nupdate HangFire.Value set IntValue = IntValue + 1 where [Key] = @key''", span="25-26"];
m39_9 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Increment(string)", color=green, community=1, file="SqlServerWriteOnlyValue.cs", label="0: _transaction.QueueCommand(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="28-36"];
m39_10 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Increment(string)", file="SqlServerWriteOnlyValue.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Increment(string)", span="17-17"];
m39_0 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyValue.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", span="10-10"];
m39_1 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", color=green, community=0, file="SqlServerWriteOnlyValue.cs", label="0: transaction == null", span="12-12"];
m39_2 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", color=green, community=0, file="SqlServerWriteOnlyValue.cs", label="0: throw new ArgumentNullException(''transaction'');", span="12-12"];
m39_3 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", color=green, community=0, file="SqlServerWriteOnlyValue.cs", label="0: _transaction = transaction", span="14-14"];
m39_4 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyValue.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", span="10-10"];
m39_31 [cluster="lambda expression", file="SqlServerWriteOnlyValue.cs", label="Entry lambda expression", span="63-65"];
m39_15 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyValue.cs", label="0: x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="34-34"];
m39_12 [cluster="lambda expression", file="SqlServerWriteOnlyValue.cs", label="Entry lambda expression", span="28-36"];
m39_13 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyValue.cs", label="0: var affectedRows = x.Execute(updateSql, new { key })", span="30-30"];
m39_14 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyValue.cs", label="0: affectedRows == 0", span="32-32"];
m39_16 [cluster="lambda expression", file="SqlServerWriteOnlyValue.cs", label="Exit lambda expression", span="28-36"];
m39_26 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyValue.cs", label="0: x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="56-56"];
m39_23 [cluster="lambda expression", file="SqlServerWriteOnlyValue.cs", label="Entry lambda expression", span="50-58"];
m39_24 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyValue.cs", label="0: var affectedRows = x.Execute(updateSql, new { key })", span="52-52"];
m39_25 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyValue.cs", label="0: affectedRows == 0", span="54-54"];
m39_27 [cluster="lambda expression", file="SqlServerWriteOnlyValue.cs", label="Exit lambda expression", span="50-58"];
m39_32 [cluster="lambda expression", color=green, community=1, file="SqlServerWriteOnlyValue.cs", label="0: x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key })", span="63-65"];
m39_33 [cluster="lambda expression", file="SqlServerWriteOnlyValue.cs", label="Exit lambda expression", span="63-65"];
m39_18 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Decrement(string)", file="SqlServerWriteOnlyValue.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Decrement(string)", span="39-39"];
m39_19 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Decrement(string)", color=green, community=1, file="SqlServerWriteOnlyValue.cs", label="0: string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="41-46"];
m39_20 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Decrement(string)", color=green, community=1, file="SqlServerWriteOnlyValue.cs", label="0: string updateSql = @''\r\nupdate HangFire.Value set IntValue = IntValue - 1 where [Key] = @key''", span="47-48"];
m39_21 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Decrement(string)", color=green, community=1, file="SqlServerWriteOnlyValue.cs", label="0: _transaction.QueueCommand(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="50-58"];
m39_22 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Decrement(string)", file="SqlServerWriteOnlyValue.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Decrement(string)", span="39-39"];
m39_35 [file="SqlServerWriteOnlyValue.cs", label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue", span=""];
m39_36 [file="SqlServerWriteOnlyValue.cs", label=string, span=""];
m39_37 [file="SqlServerWriteOnlyValue.cs", label=updateSql, span=""];
m39_38 [file="SqlServerWriteOnlyValue.cs", label=insertSql, span=""];
m39_39 [file="SqlServerWriteOnlyValue.cs", label=string, span=""];
m39_40 [file="SqlServerWriteOnlyValue.cs", label=updateSql, span=""];
m39_41 [file="SqlServerWriteOnlyValue.cs", label=insertSql, span=""];
m39_42 [file="SqlServerWriteOnlyValue.cs", label=string, span=""];
m39_43 [file="SqlServerWriteOnlyValue.cs", label="System.TimeSpan", span=""];
m40_1 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="SqlStorageConnection.cs", label="handler == null", span="29-29"];
m40_2 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="SqlStorageConnection.cs", label="throw new ArgumentNullException(''handler'');", span="29-29"];
m40_11 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SqlStorageConnection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m40_9 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlStorageConnection.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m40_12 [cluster="System.Collections.Generic.List<T>.List()", file="SqlStorageConnection.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m40_13 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="SqlStorageConnection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m40_10 [cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlStorageConnection.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m40_21 [cluster="System.Collections.Generic.List<T>.ToArray()", file="SqlStorageConnection.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m40_14 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SqlStorageConnection.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m40_15 [cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", file="SqlStorageConnection.cs", label="Entry HangFire.States.StateHandlerCollection.GetHandlers(string)", span="40-40"];
m40_16 [cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", color=green, community=0, file="SqlStorageConnection.cs", label="0: stateName == null || !_handlers.ContainsKey(stateName)", span="42-42"];
m40_17 [cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", color=green, community=0, file="SqlStorageConnection.cs", label="0: return Enumerable.Empty<IStateHandler>();", span="44-44"];
m40_18 [cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", color=green, community=0, file="SqlStorageConnection.cs", label="0: return _handlers[stateName].ToArray();", span="47-47"];
m40_19 [cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", file="SqlStorageConnection.cs", label="Exit HangFire.States.StateHandlerCollection.GetHandlers(string)", span="40-40"];
m40_0 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="SqlStorageConnection.cs", label="Entry HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", span="27-27"];
m40_3 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", color=green, community=0, file="SqlStorageConnection.cs", label="0: handler.StateName == null", span="30-30"];
m40_4 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", color=green, community=0, file="SqlStorageConnection.cs", label="0: Hangfire.Server.ServerWatchdogOptions", span=""];
m40_5 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", color=green, community=0, file="SqlStorageConnection.cs", label="0: !_handlers.ContainsKey(handler.StateName)", span="32-32"];
m40_6 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="SqlStorageConnection.cs", label="_handlers.Add(handler.StateName, new List<IStateHandler>())", span="34-34"];
m40_7 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="SqlStorageConnection.cs", label="_handlers[handler.StateName].Add(handler)", span="37-37"];
m40_8 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="SqlStorageConnection.cs", label="Exit HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", span="27-27"];
m40_20 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="SqlStorageConnection.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m40_22 [file="SqlStorageConnection.cs", label="HangFire.States.StateHandlerCollection", span=""];
m41_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlStoredJobs.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m41_31 [cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlStoredJobs.cs", label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28"];
m41_66 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="SqlStoredJobs.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44"];
m41_81 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="SqlStoredJobs.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m41_30 [cluster="Hangfire.JobStorage.GetConnection()", file="SqlStoredJobs.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m41_83 [cluster="string.Format(string, object, object)", file="SqlStoredJobs.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m41_38 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="SqlStoredJobs.cs", label="Entry Hangfire.Server.RecurringJobScheduler.ToString()", span="100-100"];
m41_39 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="SqlStoredJobs.cs", label="return GetType().Name;", span="102-102"];
m41_40 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="SqlStoredJobs.cs", label="Exit Hangfire.Server.RecurringJobScheduler.ToString()", span="100-100"];
m41_75 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="SqlStoredJobs.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87"];
m41_70 [cluster="Unk._instantFactory", file="SqlStoredJobs.cs", label="Entry Unk._instantFactory", span=""];
m41_73 [cluster="Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime?)", file="SqlStoredJobs.cs", label="Entry Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime?)", span="25-25"];
m41_82 [cluster="Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlStoredJobs.cs", label="Entry Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="61-61"];
m41_41 [cluster="object.GetType()", file="SqlStoredJobs.cs", label="Entry object.GetType()", span="0-0"];
m41_33 [cluster="string.Format(string, object)", file="SqlStoredJobs.cs", label="Entry string.Format(string, object)", span="0-0"];
m41_2 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess)", file="SqlStoredJobs.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess)", span="43-43"];
m41_3 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess)", file="SqlStoredJobs.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess)", span="43-43"];
m41_68 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SqlStoredJobs.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m41_0 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="SqlStoredJobs.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="38-38"];
m41_1 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="SqlStoredJobs.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="38-38"];
m41_36 [cluster="Hangfire.Logging.ILog.WarnException(string, System.Exception)", file="SqlStoredJobs.cs", label="Entry Hangfire.Logging.ILog.WarnException(string, System.Exception)", span="278-278"];
m41_69 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="SqlStoredJobs.cs", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
m41_74 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="SqlStoredJobs.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m41_77 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="SqlStoredJobs.cs", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="37-37"];
m41_78 [cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="SqlStoredJobs.cs", label="Entry Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", span="32-32"];
m41_67 [cluster="Unk.Parse", file="SqlStoredJobs.cs", label="Entry Unk.Parse", span=""];
m41_29 [cluster="Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", file="SqlStoredJobs.cs", label="Entry Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", span="22-22"];
m41_72 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlStoredJobs.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m41_80 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="SqlStoredJobs.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m41_65 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="SqlStoredJobs.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m41_76 [cluster="string.IsNullOrEmpty(string)", file="SqlStoredJobs.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m41_71 [cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="SqlStoredJobs.cs", label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73"];
m41_16 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlStoredJobs.cs", label="Entry Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="63-63"];
m41_17 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlStoredJobs.cs", label="_throttler.Throttle(context.CancellationToken)", span="65-65"];
m41_18 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlStoredJobs.cs", label="var connection = context.Storage.GetConnection()", span="67-67"];
m41_24 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlStoredJobs.cs", label="TryScheduleJob(context.Storage, connection, recurringJobId, recurringJob)", span="84-84"];
m41_27 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlStoredJobs.cs", label="_throttler.Delay(context.CancellationToken)", span="96-96"];
m41_19 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlStoredJobs.cs", label="connection.AcquireDistributedLock(''recurring-jobs:lock'', LockTimeout)", span="68-68"];
m41_20 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlStoredJobs.cs", label="var recurringJobIds = connection.GetAllItemsFromSet(''recurring-jobs'')", span="70-70"];
m41_22 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlStoredJobs.cs", label="var recurringJob = connection.GetAllEntriesFromHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId))", span="74-75"];
m41_21 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlStoredJobs.cs", label=recurringJobIds, span="72-72"];
m41_26 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlStoredJobs.cs", label="Logger.WarnException(\r\n                            String.Format(\r\n                                ''Recurring job '{0}' can not be scheduled due to job load exception.'',\r\n                                recurringJobId),\r\n                            ex)", span="88-92"];
m41_23 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlStoredJobs.cs", label="recurringJob == null", span="77-77"];
m41_25 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlStoredJobs.cs", label=JobLoadException, span="86-86"];
m41_28 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlStoredJobs.cs", label="Exit Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="63-63"];
m41_37 [cluster="Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", file="SqlStoredJobs.cs", label="Entry Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", span="23-23"];
m41_32 [cluster="Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="SqlStoredJobs.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55"];
m41_35 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label="Entry Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", span="105-105"];
m41_42 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label="var serializedJob = JobHelper.FromJson<InvocationData>(recurringJob[''Job''])", span="111-111"];
m41_44 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label="var cron = recurringJob[''Cron'']", span="113-113"];
m41_46 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label="var timeZone = recurringJob.ContainsKey(''TimeZoneId'')\r\n                    ? TimeZoneInfo.FindSystemTimeZoneById(recurringJob[''TimeZoneId''])\r\n                    : TimeZoneInfo.Utc", span="118-120"];
m41_48 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label="var lastExecutionTime = recurringJob.ContainsKey(''LastExecution'')\r\n                    ? JobHelper.DeserializeDateTime(recurringJob[''LastExecution''])\r\n                    : (DateTime?)null", span="124-126"];
m41_52 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label="recurringJob.ContainsKey(''Queue'') && !String.IsNullOrEmpty(recurringJob[''Queue''])", span="133-133"];
m41_53 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label="state.Queue = recurringJob[''Queue'']", span="135-135"];
m41_54 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label="var context = new CreateContext(storage, connection, job, state)", span="138-138"];
m41_57 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label="Logger.DebugFormat(\r\n                            ''Recurring job '{0}' execution at '{1}' has been canceled.'',\r\n                            recurringJobId,\r\n                            instant.NowInstant)", span="143-146"];
m41_61 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label="connection.SetRangeInHash(\r\n                    String.Format(''recurring-job:{0}'', recurringJobId),\r\n                    changedFields)", span="155-157"];
m41_63 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label="Logger.ErrorException(\r\n                    String.Format(''Recurring job '{0}' was not triggered: {1}.'', recurringJobId, ex.Message),\r\n                    ex)", span="161-163"];
m41_43 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label="var job = serializedJob.Deserialize()", span="112-112"];
m41_45 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label="var cronSchedule = CrontabSchedule.Parse(cron)", span="114-114"];
m41_47 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label="var instant = _instantFactory(cronSchedule, timeZone)", span="122-122"];
m41_50 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label="instant.GetNextInstants(lastExecutionTime).Any()", span="130-130"];
m41_58 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label="changedFields.Add(''LastExecution'', JobHelper.SerializeDateTime(instant.NowInstant))", span="149-149"];
m41_60 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label="changedFields.Add(''NextExecution'', JobHelper.SerializeDateTime(instant.NextInstant))", span="153-153"];
m41_49 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label="var changedFields = new Dictionary<string, string>()", span="128-128"];
m41_59 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label="changedFields.Add(''LastJobId'', jobId ?? String.Empty)", span="150-150"];
m41_51 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label="var state = new EnqueuedState { Reason = ''Triggered by recurring job scheduler'' }", span="132-132"];
m41_55 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label="var jobId = _creationProcess.Run(context)", span="139-139"];
m41_56 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label="String.IsNullOrEmpty(jobId)", span="141-141"];
m41_62 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label=TimeZoneNotFoundException, span="159-159"];
m41_64 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlStoredJobs.cs", label="Exit Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", span="105-105"];
m41_34 [cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="SqlStoredJobs.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
m41_79 [cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="SqlStoredJobs.cs", label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122"];
m41_84 [cluster="Hangfire.Logging.ILog.ErrorException(string, System.Exception)", file="SqlStoredJobs.cs", label="Entry Hangfire.Logging.ILog.ErrorException(string, System.Exception)", span="159-159"];
m41_4 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="SqlStoredJobs.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", span="49-49"];
m41_5 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="SqlStoredJobs.cs", label="creationProcess == null", span="54-54"];
m41_7 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="SqlStoredJobs.cs", label="instantFactory == null", span="55-55"];
m41_9 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="SqlStoredJobs.cs", label="throttler == null", span="56-56"];
m41_11 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="SqlStoredJobs.cs", label="_creationProcess = creationProcess", span="58-58"];
m41_12 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="SqlStoredJobs.cs", label="_instantFactory = instantFactory", span="59-59"];
m41_13 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="SqlStoredJobs.cs", label="_throttler = throttler", span="60-60"];
m41_6 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="SqlStoredJobs.cs", label="throw new ArgumentNullException(''creationProcess'');", span="54-54"];
m41_8 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="SqlStoredJobs.cs", label="throw new ArgumentNullException(''instantFactory'');", span="55-55"];
m41_10 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="SqlStoredJobs.cs", label="throw new ArgumentNullException(''throttler'');", span="56-56"];
m41_14 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="SqlStoredJobs.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", span="49-49"];
m41_85 [file="SqlStoredJobs.cs", label="Hangfire.Server.RecurringJobScheduler", span=""];
m42_7 [cluster="Unk.SingleOrDefault", file="SqlStoredSets.cs", label="Entry Unk.SingleOrDefault", span=""];
m42_6 [cluster="Unk.>", file="SqlStoredSets.cs", label="Entry Unk.>", span=""];
m42_3 [cluster="HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", file="SqlStoredSets.cs", label="Entry HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", span="16-16"];
m42_4 [cluster="HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", file="SqlStoredSets.cs", label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="18-21"];
m42_5 [cluster="HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", file="SqlStoredSets.cs", label="Exit HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", span="16-16"];
m42_0 [cluster="HangFire.SqlServer.SqlStoredSets.SqlStoredSets(SqlConnection)", file="SqlStoredSets.cs", label="Entry HangFire.SqlServer.SqlStoredSets.SqlStoredSets(SqlConnection)", span="11-11"];
m42_1 [cluster="HangFire.SqlServer.SqlStoredSets.SqlStoredSets(SqlConnection)", file="SqlStoredSets.cs", label="_connection = connection", span="13-13"];
m42_2 [cluster="HangFire.SqlServer.SqlStoredSets.SqlStoredSets(SqlConnection)", file="SqlStoredSets.cs", label="Exit HangFire.SqlServer.SqlStoredSets.SqlStoredSets(SqlConnection)", span="11-11"];
m42_8 [file="SqlStoredSets.cs", label="HangFire.SqlServer.SqlStoredSets", span=""];
m43_27 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", span="65-65"];
m43_28 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: _commandQueue.Enqueue(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="67-69"];
m43_29 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", span="65-65"];
m43_3 [cluster="HangFire.SqlServer.SqlWriteTransaction.Dispose()", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.Dispose()", span="24-24"];
m43_4 [cluster="HangFire.SqlServer.SqlWriteTransaction.Dispose()", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.Dispose()", span="24-24"];
m43_34 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Persist(string)", span="72-72"];
m43_35 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Persist(string)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: _commandQueue.Enqueue(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="74-76"];
m43_36 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Persist(string)", span="72-72"];
m43_53 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", span="94-94"];
m43_54 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: _commandQueue.Enqueue(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="96-98"];
m43_55 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", span="94-94"];
m43_22 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="SqlWriteTransaction.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m43_117 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Increment(string)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Increment(string)", span="189-189"];
m43_118 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Increment(string)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: _commandQueue.Enqueue(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="191-193"];
m43_119 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Increment(string)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Increment(string)", span="189-189"];
m43_0 [cluster="HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", span="19-19"];
m43_1 [cluster="HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", color=red, community=0, file="SqlWriteTransaction.cs", label="0: _connection = connection", span="21-21"];
m43_2 [cluster="HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", span="19-19"];
m43_62 [cluster="HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", file="SqlWriteTransaction.cs", label="Entry HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", span="5-5"];
m43_105 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Decrement(string)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Decrement(string)", span="175-175"];
m43_106 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Decrement(string)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: _commandQueue.Enqueue(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="177-179"];
m43_107 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Decrement(string)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Decrement(string)", span="175-175"];
m43_18 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", span="54-54"];
m43_19 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue)''", span="56-58"];
m43_20 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: _commandQueue.Enqueue(x => x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue }))", span="60-62"];
m43_21 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", span="54-54"];
m43_82 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", span="134-134"];
m43_83 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num from HangFire.List)\r\ndelete from cte where row_num not between @start and @end''", span="136-139"];
m43_84 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: _commandQueue.Enqueue(x => x.Execute(\r\n                trimSql, \r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="141-143"];
m43_85 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", span="134-134"];
m43_5 [cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.Commit()", span="35-35"];
m43_6 [cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", color=red, community=1, file="SqlWriteTransaction.cs", label="0: var transaction = new TransactionScope(\r\n                TransactionScopeOption.RequiresNew,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.ReadCommitted })", span="37-39"];
m43_7 [cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", color=red, community=0, file="SqlWriteTransaction.cs", label="0: _connection.EnlistTransaction(Transaction.Current)", span="41-41"];
m43_10 [cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", color=red, community=0, file="SqlWriteTransaction.cs", label="0: transaction.Complete()", span="48-48"];
m43_8 [cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", color=red, community=0, file="SqlWriteTransaction.cs", label="0: _commandQueue", span="43-43"];
m43_9 [cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", color=red, community=0, file="SqlWriteTransaction.cs", label="0: command(_connection)", span="45-45"];
m43_11 [cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", color=red, community=0, file="SqlWriteTransaction.cs", label="0: return true;", span="51-51"];
m43_12 [cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.Commit()", span="35-35"];
m43_15 [cluster="Unk.EnlistTransaction", file="SqlWriteTransaction.cs", label="Entry Unk.EnlistTransaction", span=""];
m43_16 [cluster="System.Action<T>.Invoke(T)", file="SqlWriteTransaction.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m43_13 [cluster="TransactionScope.cstr", file="SqlWriteTransaction.cs", label="Entry TransactionScope.cstr", span=""];
m43_70 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", span="120-120"];
m43_71 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: _commandQueue.Enqueue(x => x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="122-124"];
m43_72 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", span="120-120"];
m43_76 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", span="127-127"];
m43_77 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: _commandQueue.Enqueue(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="129-131"];
m43_78 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", span="127-127"];
m43_59 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string)", span="101-101"];
m43_60 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string)", color=red, community=0, file="SqlWriteTransaction.cs", label="0: ((IWriteableStoredSets)this).Add(key, value, 0.0)", span="103-103"];
m43_61 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string)", span="101-101"];
m43_17 [cluster="Unk.Complete", file="SqlWriteTransaction.cs", label="Entry Unk.Complete", span=""];
m43_33 [cluster="System.DateTime.Add(System.TimeSpan)", file="SqlWriteTransaction.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m43_133 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", span="218-218"];
m43_134 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: _commandQueue.Enqueue(x => x.Execute(\r\n                @''update HangFire.Value with (xlock) set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key }))", span="220-222"];
m43_135 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", span="218-218"];
m43_47 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="86-86"];
m43_48 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: _commandQueue.Enqueue(x => x.Execute(\r\n                @''insert into HangFire.JobHistory (JobId, CreatedAt, Data) ''\r\n                + @''values (@jobId, @createdAt, @data)'',\r\n                new { jobId = jobId, createdAt = DateTime.UtcNow, data = JobHelper.ToJson(properties) }))", span="88-91"];
m43_49 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="86-86"];
m43_99 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Increment(string, System.TimeSpan)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Increment(string, System.TimeSpan)", span="168-168"];
m43_100 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Increment(string, System.TimeSpan)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: _commandQueue.Enqueue(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="170-172"];
m43_101 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Increment(string, System.TimeSpan)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Increment(string, System.TimeSpan)", span="168-168"];
m43_14 [cluster="TransactionOptions.cstr", file="SqlWriteTransaction.cs", label="Entry TransactionOptions.cstr", span=""];
m43_136 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="220-222"];
m43_24 [cluster="lambda expression", color=red, community=1, file="SqlWriteTransaction.cs", label="0: x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue })", span="60-62"];
m43_23 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="60-62"];
m43_25 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="60-62"];
m43_31 [cluster="lambda expression", color=red, community=1, file="SqlWriteTransaction.cs", label="0: x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="67-69"];
m43_30 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="67-69"];
m43_32 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="67-69"];
m43_38 [cluster="lambda expression", color=red, community=1, file="SqlWriteTransaction.cs", label="0: x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="74-76"];
m43_37 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="74-76"];
m43_39 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="74-76"];
m43_44 [cluster="lambda expression", color=red, community=1, file="SqlWriteTransaction.cs", label="0: x.Execute(\r\n                @''update HangFire.Job set State = @name, StateData = @data where Id = @id'',\r\n                new { name = state, data = JobHelper.ToJson(stateProperties), id = jobId })", span="81-83"];
m43_43 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="81-83"];
m43_45 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="81-83"];
m43_51 [cluster="lambda expression", color=red, community=1, file="SqlWriteTransaction.cs", label="0: x.Execute(\r\n                @''insert into HangFire.JobHistory (JobId, CreatedAt, Data) ''\r\n                + @''values (@jobId, @createdAt, @data)'',\r\n                new { jobId = jobId, createdAt = DateTime.UtcNow, data = JobHelper.ToJson(properties) })", span="88-91"];
m43_50 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="88-91"];
m43_52 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="88-91"];
m43_57 [cluster="lambda expression", color=red, community=1, file="SqlWriteTransaction.cs", label="0: x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="96-98"];
m43_56 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="96-98"];
m43_58 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="96-98"];
m43_68 [cluster="lambda expression", color=red, community=1, file="SqlWriteTransaction.cs", label="0: x.Execute(\r\n                addSql, \r\n                new { key, value, score })", span="115-117"];
m43_67 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="115-117"];
m43_69 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="115-117"];
m43_74 [cluster="lambda expression", color=red, community=1, file="SqlWriteTransaction.cs", label="0: x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="122-124"];
m43_73 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="122-124"];
m43_75 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="122-124"];
m43_80 [cluster="lambda expression", color=red, community=1, file="SqlWriteTransaction.cs", label="0: x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="129-131"];
m43_79 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="129-131"];
m43_81 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="129-131"];
m43_87 [cluster="lambda expression", color=red, community=1, file="SqlWriteTransaction.cs", label="0: x.Execute(\r\n                trimSql, \r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="141-143"];
m43_86 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="141-143"];
m43_88 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="141-143"];
m43_95 [cluster="lambda expression", color=red, community=0, file="SqlWriteTransaction.cs", label="0: var affectedRows = x.Execute(updateSql, new { key })", span="159-159"];
m43_97 [cluster="lambda expression", color=red, community=0, file="SqlWriteTransaction.cs", label="0: x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="163-163"];
m43_94 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="157-165"];
m43_96 [cluster="lambda expression", color=red, community=0, file="SqlWriteTransaction.cs", label="0: affectedRows == 0", span="161-161"];
m43_98 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="157-165"];
m43_103 [cluster="lambda expression", color=red, community=1, file="SqlWriteTransaction.cs", label="0: x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="170-172"];
m43_102 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="170-172"];
m43_104 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="170-172"];
m43_109 [cluster="lambda expression", color=red, community=1, file="SqlWriteTransaction.cs", label="0: x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="177-179"];
m43_108 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="177-179"];
m43_110 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="177-179"];
m43_115 [cluster="lambda expression", color=red, community=1, file="SqlWriteTransaction.cs", label="0: x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="184-186"];
m43_114 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="184-186"];
m43_116 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="184-186"];
m43_121 [cluster="lambda expression", color=red, community=1, file="SqlWriteTransaction.cs", label="0: x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="191-193"];
m43_120 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="191-193"];
m43_122 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="191-193"];
m43_129 [cluster="lambda expression", color=red, community=0, file="SqlWriteTransaction.cs", label="0: var affectedRows = x.Execute(updateSql, new { key })", span="209-209"];
m43_131 [cluster="lambda expression", color=red, community=0, file="SqlWriteTransaction.cs", label="0: x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="213-213"];
m43_128 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="207-215"];
m43_130 [cluster="lambda expression", color=red, community=0, file="SqlWriteTransaction.cs", label="0: affectedRows == 0", span="211-211"];
m43_132 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="207-215"];
m43_137 [cluster="lambda expression", color=red, community=1, file="SqlWriteTransaction.cs", label="0: x.Execute(\r\n                @''update HangFire.Value with (xlock) set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key })", span="220-222"];
m43_138 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="220-222"];
m43_40 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="79-79"];
m43_41 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: _commandQueue.Enqueue(x => x.Execute(\r\n                @''update HangFire.Job set State = @name, StateData = @data where Id = @id'',\r\n                new { name = state, data = JobHelper.ToJson(stateProperties), id = jobId }))", span="81-83"];
m43_42 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="79-79"];
m43_123 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", span="196-196"];
m43_124 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="198-203"];
m43_126 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: _commandQueue.Enqueue(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="207-215"];
m43_125 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: string updateSql = @''\r\nupdate HangFire.Value with (xlock) set IntValue = IntValue - 1 where [Key] = @key''", span="204-205"];
m43_127 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", span="196-196"];
m43_46 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlWriteTransaction.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m43_63 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", span="106-106"];
m43_64 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: string addSql = @''\r\nmerge HangFire.[Set] as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="108-113"];
m43_65 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: _commandQueue.Enqueue(x => x.Execute(\r\n                addSql, \r\n                new { key, value, score }))", span="115-117"];
m43_66 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", span="106-106"];
m43_89 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", span="146-146"];
m43_90 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="148-153"];
m43_92 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: _commandQueue.Enqueue(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="157-165"];
m43_91 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: string updateSql = @''\r\nupdate HangFire.Value with (xlock) set IntValue = IntValue + 1 where [Key] = @key''", span="154-155"];
m43_93 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", span="146-146"];
m43_26 [cluster="Unk.Execute", file="SqlWriteTransaction.cs", label="Entry Unk.Execute", span=""];
m43_111 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Decrement(string, System.TimeSpan)", file="SqlWriteTransaction.cs", label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Decrement(string, System.TimeSpan)", span="182-182"];
m43_112 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Decrement(string, System.TimeSpan)", color=red, community=1, file="SqlWriteTransaction.cs", label="0: _commandQueue.Enqueue(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="184-186"];
m43_113 [cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Decrement(string, System.TimeSpan)", file="SqlWriteTransaction.cs", label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Decrement(string, System.TimeSpan)", span="182-182"];
m43_139 [file="SqlWriteTransaction.cs", label="HangFire.SqlServer.SqlWriteTransaction", span=""];
m43_140 [file="SqlWriteTransaction.cs", label=string, span=""];
m43_141 [file="SqlWriteTransaction.cs", label=string, span=""];
m43_142 [file="SqlWriteTransaction.cs", label=enqueueJobSql, span=""];
m43_143 [file="SqlWriteTransaction.cs", label=string, span=""];
m43_144 [file="SqlWriteTransaction.cs", label="System.TimeSpan", span=""];
m43_145 [file="SqlWriteTransaction.cs", label=string, span=""];
m43_146 [file="SqlWriteTransaction.cs", label=string, span=""];
m43_147 [file="SqlWriteTransaction.cs", label=string, span=""];
m43_148 [file="SqlWriteTransaction.cs", label="System.Collections.Generic.Dictionary<string, string>", span=""];
m43_149 [file="SqlWriteTransaction.cs", label=string, span=""];
m43_150 [file="SqlWriteTransaction.cs", label="System.Collections.Generic.Dictionary<string, string>", span=""];
m43_151 [file="SqlWriteTransaction.cs", label=string, span=""];
m43_152 [file="SqlWriteTransaction.cs", label=string, span=""];
m43_153 [file="SqlWriteTransaction.cs", label=string, span=""];
m43_154 [file="SqlWriteTransaction.cs", label=string, span=""];
m43_155 [file="SqlWriteTransaction.cs", label=double, span=""];
m43_156 [file="SqlWriteTransaction.cs", label=addSql, span=""];
m43_157 [file="SqlWriteTransaction.cs", label=string, span=""];
m43_158 [file="SqlWriteTransaction.cs", label=string, span=""];
m43_159 [file="SqlWriteTransaction.cs", label=string, span=""];
m43_160 [file="SqlWriteTransaction.cs", label=string, span=""];
m43_161 [file="SqlWriteTransaction.cs", label=int, span=""];
m43_162 [file="SqlWriteTransaction.cs", label=int, span=""];
m43_163 [file="SqlWriteTransaction.cs", label=trimSql, span=""];
m43_164 [file="SqlWriteTransaction.cs", label=string, span=""];
m43_165 [file="SqlWriteTransaction.cs", label=updateSql, span=""];
m43_166 [file="SqlWriteTransaction.cs", label=insertSql, span=""];
m43_167 [file="SqlWriteTransaction.cs", label=string, span=""];
m43_168 [file="SqlWriteTransaction.cs", label="System.TimeSpan", span=""];
m43_169 [file="SqlWriteTransaction.cs", label=string, span=""];
m43_170 [file="SqlWriteTransaction.cs", label=string, span=""];
m43_171 [file="SqlWriteTransaction.cs", label="System.TimeSpan", span=""];
m43_172 [file="SqlWriteTransaction.cs", label=string, span=""];
m43_173 [file="SqlWriteTransaction.cs", label=string, span=""];
m43_174 [file="SqlWriteTransaction.cs", label=updateSql, span=""];
m43_175 [file="SqlWriteTransaction.cs", label=insertSql, span=""];
m43_176 [file="SqlWriteTransaction.cs", label=string, span=""];
m43_177 [file="SqlWriteTransaction.cs", label="System.TimeSpan", span=""];
m44_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateApplyingContext.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m44_0 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", file="StateApplyingContext.cs", label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", span="23-23"];
m44_1 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", file="StateApplyingContext.cs", label="transaction == null", span="27-27"];
m44_3 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", file="StateApplyingContext.cs", label="Transaction = transaction", span="29-29"];
m44_2 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", file="StateApplyingContext.cs", label="throw new ArgumentNullException(''transaction'');", span="27-27"];
m44_4 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", file="StateApplyingContext.cs", label="Exit HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", span="23-23"];
m44_6 [file="StateApplyingContext.cs", label="HangFire.Common.States.StateApplyingContext", span=""];
m45_0 [cluster="Hangfire.Dashboard.Metric.Metric(string)", file="StateMachine.cs", label="Entry Hangfire.Dashboard.Metric.Metric(string)", span="20-20"];
m45_1 [cluster="Hangfire.Dashboard.Metric.Metric(string)", file="StateMachine.cs", label="Value = value", span="22-22"];
m45_2 [cluster="Hangfire.Dashboard.Metric.Metric(string)", file="StateMachine.cs", label="Exit Hangfire.Dashboard.Metric.Metric(string)", span="20-20"];
m45_3 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="StateMachine.cs", label="Entry Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", span="43-43"];
m45_4 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="StateMachine.cs", label=style, span="45-45"];
m45_5 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="StateMachine.cs", label="MetricStyle.Default", span="47-47"];
m45_7 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="StateMachine.cs", label="MetricStyle.Info", span="48-48"];
m45_9 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="StateMachine.cs", label="MetricStyle.Success", span="49-49"];
m45_11 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="StateMachine.cs", label="MetricStyle.Warning", span="50-50"];
m45_13 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="StateMachine.cs", label="MetricStyle.Danger", span="51-51"];
m45_15 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="StateMachine.cs", label="return ''metric-null'';", span="52-52"];
m45_6 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="StateMachine.cs", label="return ''metric-default'';", span="47-47"];
m45_8 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="StateMachine.cs", label="return ''metric-info'';", span="48-48"];
m45_10 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="StateMachine.cs", label="return ''metric-success'';", span="49-49"];
m45_12 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="StateMachine.cs", label="return ''metric-warning'';", span="50-50"];
m45_14 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="StateMachine.cs", label="return ''metric-danger'';", span="51-51"];
m45_16 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="StateMachine.cs", label="Exit Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", span="43-43"];
m45_17 [file="StateMachine.cs", label="Hangfire.Dashboard.Metric", span=""];
m46_8 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", file="StateSteps.cs", label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", span="48-48"];
m46_9 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="StateSteps.cs", label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", span="53-53"];
m46_14 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(object)", file="StateSteps.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(object)", span="39-39"];
m46_15 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(object)", file="StateSteps.cs", label="return Equals(obj as ExpressionFingerprint);", span="41-41"];
m46_16 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(object)", file="StateSteps.cs", label="Exit HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(object)", span="39-39"];
m46_10 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="StateSteps.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="32-32"];
m46_11 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="StateSteps.cs", label="return (other != null)\r\n                   && (this.NodeType == other.NodeType)\r\n                   && Equals(this.Type, other.Type);", span="34-36"];
m46_12 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="StateSteps.cs", label="Exit HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="32-32"];
m46_4 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="StateSteps.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="26-26"];
m46_5 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="StateSteps.cs", label="combiner.AddInt32((int)NodeType)", span="28-28"];
m46_6 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="StateSteps.cs", label="combiner.AddObject(Type)", span="29-29"];
m46_7 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="StateSteps.cs", label="Exit HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="26-26"];
m46_0 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.ExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="StateSteps.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.ExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="14-14"];
m46_1 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.ExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="StateSteps.cs", label="NodeType = nodeType", span="16-16"];
m46_2 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.ExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="StateSteps.cs", label="Type = type", span="17-17"];
m46_3 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.ExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="StateSteps.cs", label="Exit HangFire.Common.ExpressionUtil.ExpressionFingerprint.ExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="14-14"];
m46_13 [cluster="object.Equals(object, object)", file="StateSteps.cs", label="Entry object.Equals(object, object)", span="0-0"];
m46_17 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.GetHashCode()", file="StateSteps.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.GetHashCode()", span="44-44"];
m46_18 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.GetHashCode()", file="StateSteps.cs", label="HashCodeCombiner combiner = new HashCodeCombiner()", span="46-46"];
m46_19 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.GetHashCode()", file="StateSteps.cs", label="AddToHashCodeCombiner(combiner)", span="47-47"];
m46_20 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.GetHashCode()", file="StateSteps.cs", label="return combiner.CombinedHash;", span="48-48"];
m46_21 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.GetHashCode()", file="StateSteps.cs", label="Exit HangFire.Common.ExpressionUtil.ExpressionFingerprint.GetHashCode()", span="44-44"];
m46_22 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.HashCodeCombiner()", file="StateSteps.cs", label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.HashCodeCombiner()", span="9-9"];
m46_23 [file="StateSteps.cs", label="HangFire.Common.ExpressionUtil.ExpressionFingerprint", span=""];
n4 -> n1  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdogOptions", style=dashed];
n4 -> n2  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdogOptions", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n3 -> n0  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [color=blue, key=0, style=bold];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_2  [color=blue, key=0, style=bold];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_6  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [color=blue, key=0, style=bold];
m2_12 -> m2_13  [key=0, style=solid];
m2_13 -> m2_12  [color=blue, key=0, style=bold];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_8  [color=blue, key=0, style=bold];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_4  [color=blue, key=0, style=bold];
m2_10 -> m2_11  [key=0, style=solid];
m2_11 -> m2_10  [color=blue, key=0, style=bold];
m2_14 -> m2_15  [key=0, style=solid];
m2_15 -> m2_14  [color=blue, key=0, style=bold];
m3_6 -> m3_7  [key=0, style=solid];
m3_7 -> m3_6  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_4  [color=blue, key=0, style=bold];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_2  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [color=blue, key=0, style=bold];
m6_4 -> m6_5  [key=0, style=solid];
m6_5 -> m6_4  [color=blue, key=0, style=bold];
m6_6 -> m6_7  [key=0, style=solid];
m6_7 -> m6_6  [color=blue, key=0, style=bold];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_2  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_3  [color=darkseagreen4, key=1, label=ControllerContext, style=dashed];
m7_0 -> m7_5  [color=darkseagreen4, key=1, label=ControllerContext, style=dashed];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_7  [color=darkseagreen4, key=1, label=isValidName, style=dashed];
m7_1 -> m7_1  [color=darkorchid, key=3, label="Local variable bool isValidName", style=bold];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_10  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_9  [key=2, style=dotted];
m7_7 -> m7_8  [key=0, style=solid];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_7  [key=0, style=solid];
m7_6 -> m7_7  [key=0, style=solid];
m7_8 -> m7_0  [color=blue, key=0, style=bold];
m7_11 -> m7_2  [color=darkseagreen4, key=1, label="Hangfire.Sample.Highlighter.MultipleButtonAttribute", style=dashed];
m7_11 -> m7_5  [color=darkseagreen4, key=1, label="Hangfire.Sample.Highlighter.MultipleButtonAttribute", style=dashed];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_13  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_13  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_13  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_13  [key=2, style=dotted];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_13  [key=2, style=dotted];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_13  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_13  [key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_13  [key=2, style=dotted];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_13  [key=2, style=dotted];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_13  [key=2, style=dotted];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_13  [key=2, style=dotted];
m8_12 -> m8_0  [color=blue, key=0, style=bold];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_17  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMetric", style=dashed];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_16  [key=0, style=solid];
m8_17 -> m8_18  [key=0, style=solid];
m8_15 -> m8_18  [key=0, style=solid];
m8_15 -> m8_19  [key=2, style=dotted];
m8_16 -> m8_17  [key=0, style=solid];
m8_18 -> m8_13  [color=blue, key=0, style=bold];
m8_20 -> m8_21  [key=0, style=solid];
m8_21 -> m8_22  [key=0, style=solid];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_24  [key=2, style=dotted];
m8_23 -> m8_20  [color=blue, key=0, style=bold];
m8_67 -> m8_68  [key=0, style=solid];
m8_25 -> m8_26  [key=0, style=solid];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_28  [key=2, style=dotted];
m8_26 -> m8_29  [key=2, style=dotted];
m8_27 -> m8_25  [color=blue, key=0, style=bold];
m8_30 -> m8_31  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_28  [key=2, style=dotted];
m8_31 -> m8_29  [key=2, style=dotted];
m8_32 -> m8_30  [color=blue, key=0, style=bold];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_35  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m8_34 -> m8_35  [key=0, style=solid];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_42  [key=2, style=dotted];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_39  [color=darkseagreen4, key=1, label=storageConnection, style=dashed];
m8_37 -> m8_38  [key=0, style=solid];
m8_37 -> m8_39  [key=0, style=solid];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_43  [key=2, style=dotted];
m8_38 -> m8_41  [key=0, style=solid];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_28  [key=2, style=dotted];
m8_40 -> m8_29  [key=2, style=dotted];
m8_41 -> m8_33  [color=blue, key=0, style=bold];
m8_44 -> m8_45  [key=0, style=solid];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_28  [key=2, style=dotted];
m8_45 -> m8_29  [key=2, style=dotted];
m8_46 -> m8_44  [color=blue, key=0, style=bold];
m8_47 -> m8_48  [key=0, style=solid];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_28  [key=2, style=dotted];
m8_48 -> m8_29  [key=2, style=dotted];
m8_48 -> m8_50  [key=2, style=dotted];
m8_49 -> m8_47  [color=blue, key=0, style=bold];
m8_51 -> m8_52  [key=0, style=solid];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_28  [key=2, style=dotted];
m8_52 -> m8_54  [key=2, style=dotted];
m8_53 -> m8_51  [color=blue, key=0, style=bold];
m8_55 -> m8_56  [key=0, style=solid];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_28  [key=2, style=dotted];
m8_56 -> m8_29  [key=2, style=dotted];
m8_57 -> m8_55  [color=blue, key=0, style=bold];
m8_58 -> m8_59  [key=0, style=solid];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_28  [key=2, style=dotted];
m8_59 -> m8_29  [key=2, style=dotted];
m8_60 -> m8_58  [color=blue, key=0, style=bold];
m8_61 -> m8_62  [key=0, style=solid];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_28  [key=2, style=dotted];
m8_62 -> m8_29  [key=2, style=dotted];
m8_63 -> m8_61  [color=blue, key=0, style=bold];
m8_64 -> m8_65  [key=0, style=solid];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_28  [key=2, style=dotted];
m8_65 -> m8_29  [key=2, style=dotted];
m8_66 -> m8_64  [color=blue, key=0, style=bold];
m8_68 -> m8_69  [key=0, style=solid];
m8_68 -> m8_28  [key=2, style=dotted];
m8_68 -> m8_29  [key=2, style=dotted];
m8_69 -> m8_67  [color=blue, key=0, style=bold];
m9_3 -> m9_4  [key=0, style=solid];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_7  [key=2, style=dotted];
m9_5 -> m9_8  [key=2, style=dotted];
m9_6 -> m9_3  [color=blue, key=0, style=bold];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_11  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_13  [key=2, style=dotted];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_14  [key=2, style=dotted];
m9_12 -> m9_9  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_2 -> m9_0  [color=blue, key=0, style=bold];
m9_15 -> m9_1  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint", style=dashed];
m9_15 -> m9_5  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint", style=dashed];
m9_15 -> m9_10  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint", style=dashed];
m9_15 -> m9_11  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint", style=dashed];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_5 -> m10_6  [key=0, style=solid];
m10_6 -> m10_7  [key=0, style=solid];
m10_7 -> m10_4  [color=blue, key=0, style=bold];
m10_2 -> m10_3  [key=0, style=solid];
m10_3 -> m10_2  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [color=blue, key=0, style=bold];
m10_8 -> m10_5  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m10_8 -> m10_6  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m12_72 -> m12_73  [key=0, style=solid];
m12_73 -> m12_74  [key=0, style=solid];
m12_73 -> m12_75  [key=2, style=dotted];
m12_73 -> m12_76  [key=2, style=dotted];
m12_74 -> m12_72  [color=blue, key=0, style=bold];
m12_65 -> m12_66  [key=0, style=solid];
m12_65 -> m12_68  [color=darkseagreen4, key=1, label="Hangfire.Storage.IFetchedJob", style=dashed];
m12_65 -> m12_25  [color=darkorchid, key=3, label="Parameter variable Hangfire.Storage.IFetchedJob fetchedJob", style=bold];
m12_66 -> m12_67  [key=0, style=solid];
m12_66 -> m12_69  [key=0, style=solid];
m12_66 -> m12_70  [key=2, style=dotted];
m12_68 -> m12_69  [key=0, style=solid];
m12_68 -> m12_71  [key=2, style=dotted];
m12_67 -> m12_68  [key=0, style=solid];
m12_69 -> m12_65  [color=blue, key=0, style=bold];
m12_60 -> m12_77  [key=0, style=solid];
m12_60 -> m12_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_60 -> m12_82  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m12_60 -> m12_83  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m12_60 -> m12_94  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m12_60 -> m12_21  [color=darkorchid, key=3, label="Parameter variable Hangfire.Server.BackgroundProcessContext context", style=bold];
m12_60 -> m12_24  [color=darkorchid, key=3, label="Parameter variable Hangfire.Storage.IStorageConnection connection", style=bold];
m12_60 -> m12_63  [color=darkorchid, key=3, label="method methodReturn Hangfire.States.IState PerformJob", style=bold];
m12_77 -> m12_78  [key=0, style=solid];
m12_77 -> m12_98  [key=2, style=dotted];
m12_77 -> m12_80  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m12_77 -> m12_81  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m12_77 -> m12_84  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m12_81 -> m12_82  [key=0, style=solid];
m12_81 -> m12_100  [key=2, style=dotted];
m12_81 -> m12_83  [color=darkseagreen4, key=1, label=backgroundJob, style=dashed];
m12_82 -> m12_83  [key=0, style=solid];
m12_82 -> m12_101  [key=2, style=dotted];
m12_83 -> m12_84  [key=0, style=solid];
m12_83 -> m12_102  [key=2, style=dotted];
m12_83 -> m12_86  [color=darkseagreen4, key=1, label=performContext, style=dashed];
m12_94 -> m12_95  [key=0, style=solid];
m12_94 -> m12_96  [key=0, style=solid];
m12_78 -> m12_79  [key=0, style=solid];
m12_78 -> m12_80  [key=0, style=solid];
m12_80 -> m12_81  [key=0, style=solid];
m12_80 -> m12_99  [key=2, style=dotted];
m12_84 -> m12_85  [key=0, style=solid];
m12_84 -> m12_88  [color=darkseagreen4, key=1, label=latency, style=dashed];
m12_79 -> m12_97  [key=0, style=solid];
m12_86 -> m12_87  [key=0, style=solid];
m12_86 -> m12_104  [key=2, style=dotted];
m12_86 -> m12_88  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_85 -> m12_86  [key=0, style=solid];
m12_85 -> m12_103  [key=2, style=dotted];
m12_85 -> m12_87  [color=darkseagreen4, key=1, label=duration, style=dashed];
m12_85 -> m12_88  [color=darkseagreen4, key=1, label=duration, style=dashed];
m12_88 -> m12_97  [key=0, style=solid];
m12_88 -> m12_106  [key=2, style=dotted];
m12_87 -> m12_88  [key=0, style=solid];
m12_87 -> m12_105  [key=2, style=dotted];
m12_89 -> m12_90  [key=0, style=solid];
m12_90 -> m12_97  [key=0, style=solid];
m12_91 -> m12_92  [key=0, style=solid];
m12_92 -> m12_97  [key=0, style=solid];
m12_92 -> m12_107  [key=2, style=dotted];
m12_93 -> m12_94  [key=0, style=solid];
m12_95 -> m12_97  [key=0, style=solid];
m12_96 -> m12_97  [key=0, style=solid];
m12_96 -> m12_107  [key=2, style=dotted];
m12_97 -> m12_60  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [color=blue, key=0, style=bold];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_2  [color=blue, key=0, style=bold];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m12_4 -> m12_7  [color=darkseagreen4, key=1, label="Hangfire.Server.IBackgroundJobPerformer", style=dashed];
m12_4 -> m12_8  [color=darkseagreen4, key=1, label="Hangfire.Server.IBackgroundJobPerformer", style=dashed];
m12_4 -> m12_9  [color=darkseagreen4, key=1, label="Hangfire.States.IBackgroundJobStateChanger", style=dashed];
m12_4 -> m12_10  [color=darkseagreen4, key=1, label="Hangfire.States.IBackgroundJobStateChanger", style=dashed];
m12_4 -> m12_11  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m12_4 -> m12_12  [color=darkseagreen4, key=1, label="Hangfire.Server.IBackgroundJobPerformer", style=dashed];
m12_4 -> m12_13  [color=darkseagreen4, key=1, label="Hangfire.States.IBackgroundJobStateChanger", style=dashed];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_7  [key=0, style=solid];
m12_6 -> m12_15  [key=0, style=solid];
m12_6 -> m12_16  [key=2, style=dotted];
m12_6 -> m12_17  [key=2, style=dotted];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_9  [key=0, style=solid];
m12_8 -> m12_15  [key=0, style=solid];
m12_8 -> m12_16  [key=2, style=dotted];
m12_8 -> m12_17  [key=2, style=dotted];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_11  [key=0, style=solid];
m12_10 -> m12_15  [key=0, style=solid];
m12_10 -> m12_16  [key=2, style=dotted];
m12_10 -> m12_17  [key=2, style=dotted];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_18  [key=2, style=dotted];
m12_12 -> m12_13  [key=0, style=solid];
m12_13 -> m12_14  [key=0, style=solid];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_19  [key=2, style=dotted];
m12_14 -> m12_20  [key=2, style=dotted];
m12_15 -> m12_4  [color=blue, key=0, style=bold];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_23  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m12_21 -> m12_24  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m12_21 -> m12_25  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m12_21 -> m12_26  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m12_21 -> m12_28  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m12_21 -> m12_32  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m12_21 -> m12_33  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m12_21 -> m12_35  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m12_21 -> m12_38  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m12_21 -> m12_40  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m12_21 -> m12_43  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_24  [key=0, style=solid];
m12_23 -> m12_48  [key=0, style=solid];
m12_23 -> m12_16  [key=2, style=dotted];
m12_23 -> m12_17  [key=2, style=dotted];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_49  [key=2, style=dotted];
m12_24 -> m12_33  [color=darkseagreen4, key=1, label=connection, style=dashed];
m12_24 -> m12_38  [color=darkseagreen4, key=1, label=connection, style=dashed];
m12_24 -> m12_40  [color=darkseagreen4, key=1, label=connection, style=dashed];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_50  [key=2, style=dotted];
m12_25 -> m12_33  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m12_25 -> m12_36  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m12_25 -> m12_38  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m12_25 -> m12_40  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m12_25 -> m12_41  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m12_25 -> m12_44  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m12_25 -> m12_46  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_51  [key=2, style=dotted];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_32  [key=0, style=solid];
m12_28 -> m12_53  [key=2, style=dotted];
m12_28 -> m12_33  [color=darkseagreen4, key=1, label=linkedCts, style=dashed];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_55  [key=2, style=dotted];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_56  [key=2, style=dotted];
m12_33 -> m12_57  [key=2, style=dotted];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_51  [key=2, style=dotted];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_60  [key=2, style=dotted];
m12_38 -> m12_40  [color=darkseagreen4, key=1, label=state, style=dashed];
m12_40 -> m12_41  [key=0, style=solid];
m12_40 -> m12_61  [key=2, style=dotted];
m12_40 -> m12_57  [key=2, style=dotted];
m12_43 -> m12_44  [key=0, style=solid];
m12_43 -> m12_45  [key=0, style=solid];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_59  [key=2, style=dotted];
m12_41 -> m12_42  [key=0, style=solid];
m12_41 -> m12_48  [key=0, style=solid];
m12_41 -> m12_59  [key=2, style=dotted];
m12_44 -> m12_46  [key=0, style=solid];
m12_44 -> m12_62  [key=2, style=dotted];
m12_44 -> m12_63  [key=2, style=dotted];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_65  [key=2, style=dotted];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_52  [key=2, style=dotted];
m12_29 -> m12_30  [key=0, style=solid];
m12_30 -> m12_31  [key=0, style=solid];
m12_30 -> m12_54  [key=2, style=dotted];
m12_31 -> m12_48  [key=0, style=solid];
m12_34 -> m12_35  [key=0, style=solid];
m12_34 -> m12_38  [key=0, style=solid];
m12_34 -> m12_58  [key=2, style=dotted];
m12_37 -> m12_48  [key=0, style=solid];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_41  [key=0, style=solid];
m12_42 -> m12_43  [key=0, style=solid];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_64  [key=2, style=dotted];
m12_47 -> m12_48  [key=0, style=solid];
m12_48 -> m12_21  [color=blue, key=0, style=bold];
m12_108 -> m12_11  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m12_108 -> m12_12  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m12_108 -> m12_13  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m12_108 -> m12_14  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m12_108 -> m12_25  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m12_108 -> m12_32  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m12_108 -> m12_33  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m12_108 -> m12_38  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m12_108 -> m12_40  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m12_108 -> m12_73  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m12_108 -> m12_82  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m12_108 -> m12_86  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m15_15 -> m15_16  [color=red, key=0, style=solid];
m15_16 -> m15_17  [color=red, key=0, style=solid];
m15_16 -> m15_18  [color=red, key=2, style=dotted];
m15_16 -> m15_14  [color=red, key=2, style=dotted];
m15_17 -> m15_15  [color=blue, key=0, style=bold];
m15_10 -> m15_11  [key=0, style=solid];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_13  [key=2, style=dotted];
m15_11 -> m15_14  [key=2, style=dotted];
m15_12 -> m15_10  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_0  [color=blue, key=0, style=bold];
m15_19 -> m15_20  [key=0, style=solid];
m15_19 -> m15_21  [color=crimson, key=0, style=bold];
m15_19 -> m15_22  [color=crimson, key=0, style=bold];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_24  [key=2, style=dotted];
m15_21 -> m15_22  [key=0, style=solid];
m15_21 -> m15_25  [key=2, style=dotted];
m15_22 -> m15_23  [key=0, style=solid];
m15_22 -> m15_26  [key=2, style=dotted];
m15_23 -> m15_19  [color=blue, key=0, style=bold];
m15_27 -> m15_28  [key=0, style=solid];
m15_27 -> m15_29  [color=crimson, key=0, style=bold];
m15_27 -> m15_30  [color=crimson, key=0, style=bold];
m15_28 -> m15_29  [key=0, style=solid];
m15_28 -> m15_32  [key=2, style=dotted];
m15_29 -> m15_30  [key=0, style=solid];
m15_29 -> m15_33  [key=2, style=dotted];
m15_30 -> m15_31  [key=0, style=solid];
m15_30 -> m15_34  [key=2, style=dotted];
m15_31 -> m15_27  [color=blue, key=0, style=bold];
m15_35 -> m15_36  [key=0, style=solid];
m15_36 -> m15_37  [key=0, style=solid];
m15_36 -> m15_38  [key=2, style=dotted];
m15_37 -> m15_35  [color=blue, key=0, style=bold];
m15_2 -> m15_3  [key=0, style=solid];
m15_2 -> m15_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m15_2 -> m15_5  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorageOptions", style=dashed];
m15_2 -> m15_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_3 -> m15_4  [key=0, style=solid];
m15_4 -> m15_5  [key=0, style=solid];
m15_5 -> m15_6  [key=0, style=solid];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_8  [key=2, style=dotted];
m15_6 -> m15_9  [key=2, style=dotted];
m15_7 -> m15_2  [color=blue, key=0, style=bold];
m15_39 -> m15_3  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m15_39 -> m15_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m15_39 -> m15_5  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m15_39 -> m15_6  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m15_39 -> m15_11  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m15_39 -> m15_16  [color=red, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m15_39 -> m15_20  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m15_39 -> m15_21  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m15_39 -> m15_22  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m15_39 -> m15_36  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m16_13 -> m16_14  [color=red, key=0, style=solid];
m16_13 -> m16_22  [key=2, style=dotted];
m16_13 -> m16_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_7  [color=red, key=1, label="System.Threading.CancellationToken", style=dashed];
m16_6 -> m16_7  [color=red, key=0, style=solid];
m16_7 -> m16_8  [color=red, key=0, style=solid];
m16_7 -> m16_18  [color=red, key=2, style=dotted];
m16_7 -> m16_7  [color=red, key=1, label="System.Threading.CancellationToken", style=dashed];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_19  [key=2, style=dotted];
m16_8 -> m16_20  [key=2, style=dotted];
m16_8 -> m16_13  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_8 -> m16_26  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_8 -> m16_14  [color=red, key=1, label=jobId, style=dashed];
m16_8 -> m16_31  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_8 -> m16_16  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_9 -> m16_6  [key=0, style=solid];
m16_9 -> m16_10  [key=0, style=solid];
m16_14 -> m16_15  [color=red, key=0, style=solid];
m16_14 -> m16_22  [color=red, key=2, style=dotted];
m16_14 -> m16_30  [color=red, key=1, label="lambda expression", style=dashed];
m16_14 -> m16_34  [color=red, key=1, label="lambda expression", style=dashed];
m16_14 -> m16_16  [color=red, key=1, label=jobArgs, style=dashed];
m16_16 -> m16_17  [key=0, style=solid];
m16_16 -> m16_24  [key=2, style=dotted];
m16_10 -> m16_11  [key=0, style=solid];
m16_11 -> m16_12  [key=0, style=solid];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_21  [key=2, style=dotted];
m16_12 -> m16_14  [color=red, key=1, label=pipeline, style=dashed];
m16_12 -> m16_15  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> m16_23  [key=2, style=dotted];
m16_17 -> m16_5  [color=blue, key=0, style=bold];
m16_0 -> m16_1  [key=0, style=solid];
m16_0 -> m16_2  [color=red, key=1, label="System.TimeSpan?", style=dashed];
m16_1 -> m16_2  [color=red, key=0, style=solid];
m16_2 -> m16_3  [color=red, key=0, style=solid];
m16_2 -> m16_4  [color=red, key=2, style=dotted];
m16_3 -> m16_0  [color=blue, key=0, style=bold];
m16_45 -> m16_46  [key=0, style=solid];
m16_45 -> m16_22  [key=2, style=dotted];
m16_45 -> m16_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_42 -> m16_43  [key=0, style=solid];
m16_42 -> m16_44  [color=red, key=1, label=string, style=dashed];
m16_42 -> m16_51  [color=red, key=1, label=string, style=dashed];
m16_42 -> m16_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_42 -> m16_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_43 -> m16_44  [color=red, key=0, style=solid];
m16_43 -> m16_48  [key=2, style=dotted];
m16_43 -> m16_45  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m16_43 -> m16_46  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m16_44 -> m16_45  [color=red, key=0, style=solid];
m16_44 -> m16_22  [color=red, key=2, style=dotted];
m16_44 -> m16_50  [color=red, key=1, label="lambda expression", style=dashed];
m16_46 -> m16_47  [key=0, style=solid];
m16_46 -> m16_49  [key=2, style=dotted];
m16_47 -> m16_42  [color=blue, key=0, style=bold];
m16_38 -> m16_39  [key=0, style=solid];
m16_39 -> m16_40  [key=0, style=solid];
m16_39 -> m16_41  [key=2, style=dotted];
m16_40 -> m16_38  [color=blue, key=0, style=bold];
m16_54 -> m16_55  [key=0, style=solid];
m16_26 -> m16_27  [key=0, style=solid];
m16_26 -> m16_19  [key=2, style=dotted];
m16_26 -> m16_28  [key=2, style=dotted];
m16_26 -> m16_29  [key=2, style=dotted];
m16_31 -> m16_32  [key=0, style=solid];
m16_31 -> m16_19  [key=2, style=dotted];
m16_31 -> m16_33  [key=2, style=dotted];
m16_25 -> m16_26  [key=0, style=solid];
m16_30 -> m16_31  [key=0, style=solid];
m16_34 -> m16_35  [color=red, key=0, style=solid];
m16_34 -> m16_36  [color=red, key=1, label="?", style=dashed];
m16_27 -> m16_25  [color=blue, key=0, style=bold];
m16_32 -> m16_30  [color=blue, key=0, style=bold];
m16_35 -> m16_36  [color=red, key=0, style=solid];
m16_35 -> m16_37  [color=red, key=1, label=jobType, style=dashed];
m16_36 -> m16_37  [color=red, key=0, style=solid];
m16_37 -> m16_34  [color=blue, key=0, style=bold];
m16_51 -> m16_52  [color=red, key=0, style=solid];
m16_51 -> m16_19  [color=red, key=2, style=dotted];
m16_51 -> m16_53  [color=red, key=2, style=dotted];
m16_55 -> m16_56  [key=0, style=solid];
m16_55 -> m16_19  [key=2, style=dotted];
m16_55 -> m16_57  [key=2, style=dotted];
m16_50 -> m16_51  [color=red, key=0, style=solid];
m16_52 -> m16_50  [color=blue, key=0, style=bold];
m16_56 -> m16_54  [color=blue, key=0, style=bold];
m16_58 -> m16_1  [color=darkseagreen4, key=1, label="HangFire.Server.JobFetcher", style=dashed];
m16_58 -> m16_2  [color=red, key=1, label="HangFire.Server.JobFetcher", style=dashed];
m16_58 -> m16_8  [color=darkseagreen4, key=1, label="HangFire.Server.JobFetcher", style=dashed];
m16_58 -> m16_12  [color=darkseagreen4, key=1, label="HangFire.Server.JobFetcher", style=dashed];
m16_58 -> m16_16  [color=darkseagreen4, key=1, label="HangFire.Server.JobFetcher", style=dashed];
m16_58 -> m16_39  [color=darkseagreen4, key=1, label="HangFire.Server.JobFetcher", style=dashed];
m16_59 -> m16_26  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_59 -> m16_31  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_60 -> m16_51  [color=red, key=1, label=string, style=dashed];
m16_60 -> m16_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_61 -> m16_51  [color=red, key=1, label=string, style=dashed];
m17_3 -> m17_4  [key=0, style=solid];
m17_3 -> m17_5  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.StateAndInvocationData GetStateAndInvocationData", style=bold];
m17_4 -> m17_5  [key=0, style=solid];
m17_4 -> m17_16  [key=2, style=dotted];
m17_4 -> m17_17  [key=2, style=dotted];
m17_4 -> m17_8  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m17_4 -> m17_9  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m17_4 -> m17_10  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m17_4 -> m17_11  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m17_4 -> m17_12  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m17_4 -> m17_13  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m17_4 -> m17_14  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m17_5 -> m17_6  [key=0, style=solid];
m17_5 -> m17_7  [key=0, style=solid];
m17_8 -> m17_9  [key=0, style=solid];
m17_8 -> m17_10  [key=0, style=solid];
m17_8 -> m17_19  [key=2, style=dotted];
m17_9 -> m17_10  [key=0, style=solid];
m17_10 -> m17_11  [key=0, style=solid];
m17_10 -> m17_12  [key=0, style=solid];
m17_10 -> m17_19  [key=2, style=dotted];
m17_11 -> m17_12  [key=0, style=solid];
m17_12 -> m17_13  [key=0, style=solid];
m17_12 -> m17_14  [key=0, style=solid];
m17_12 -> m17_19  [key=2, style=dotted];
m17_13 -> m17_14  [key=0, style=solid];
m17_14 -> m17_15  [key=0, style=solid];
m17_14 -> m17_20  [key=2, style=dotted];
m17_14 -> m17_19  [key=2, style=dotted];
m17_6 -> m17_15  [key=0, style=solid];
m17_7 -> m17_8  [key=0, style=solid];
m17_7 -> m17_18  [key=2, style=dotted];
m17_7 -> m17_9  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m17_7 -> m17_11  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m17_7 -> m17_13  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m17_7 -> m17_14  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m17_15 -> m17_3  [color=blue, key=0, style=bold];
m17_29 -> m17_30  [color=red, key=0, style=solid];
m17_30 -> m17_31  [color=red, key=0, style=solid];
m17_30 -> m17_32  [color=red, key=2, style=dotted];
m17_31 -> m17_29  [color=blue, key=0, style=bold];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_2  [key=0, style=solid];
m17_2 -> m17_0  [color=blue, key=0, style=bold];
m17_25 -> m17_26  [key=0, style=solid];
m17_26 -> m17_27  [key=0, style=solid];
m17_26 -> m17_16  [key=2, style=dotted];
m17_26 -> m17_28  [key=2, style=dotted];
m17_27 -> m17_25  [color=blue, key=0, style=bold];
m17_22 -> m17_23  [key=0, style=solid];
m17_22 -> m17_16  [key=2, style=dotted];
m17_22 -> m17_24  [key=2, style=dotted];
m17_21 -> m17_22  [key=0, style=solid];
m17_23 -> m17_21  [color=blue, key=0, style=bold];
m17_33 -> m17_1  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredJobs", style=dashed];
m17_33 -> m17_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredJobs", style=dashed];
m17_33 -> m17_22  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredJobs", style=dashed];
m17_33 -> m17_26  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredJobs", style=dashed];
m17_33 -> m17_30  [color=red, key=1, label="HangFire.Redis.RedisStoredJobs", style=dashed];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_2  [key=0, style=solid];
m18_2 -> m18_0  [color=blue, key=0, style=bold];
m18_3 -> m18_4  [key=0, style=solid];
m18_4 -> m18_5  [key=0, style=solid];
m18_4 -> m18_6  [key=2, style=dotted];
m18_4 -> m18_7  [key=2, style=dotted];
m18_5 -> m18_3  [color=blue, key=0, style=bold];
m18_8 -> m18_1  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredSets", style=dashed];
m18_8 -> m18_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredSets", style=dashed];
m20_89 -> m20_90  [key=0, style=solid];
m20_90 -> m20_88  [key=2, style=dotted];
m20_90 -> m20_34  [key=2, style=dotted];
m20_90 -> m20_91  [key=0, style=solid];
m20_91 -> m20_89  [color=blue, key=0, style=bold];
m20_85 -> m20_86  [key=0, style=solid];
m20_86 -> m20_88  [key=2, style=dotted];
m20_86 -> m20_87  [key=0, style=solid];
m20_87 -> m20_85  [color=blue, key=0, style=bold];
m20_88 -> m20_92  [key=0, style=solid];
m20_88 -> m20_94  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_88 -> m20_95  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m20_93 -> m20_15  [key=2, style=dotted];
m20_93 -> m20_96  [key=0, style=solid];
m20_92 -> m20_93  [key=0, style=solid];
m20_92 -> m20_94  [key=0, style=solid];
m20_94 -> m20_95  [key=0, style=solid];
m20_94 -> m20_97  [key=2, style=dotted];
m20_95 -> m20_96  [key=0, style=solid];
m20_95 -> m20_98  [key=2, style=dotted];
m20_95 -> m20_99  [key=2, style=dotted];
m20_96 -> m20_88  [color=blue, key=0, style=bold];
m20_82 -> m20_83  [key=0, style=solid];
m20_83 -> m20_34  [key=2, style=dotted];
m20_83 -> m20_84  [key=0, style=solid];
m20_83 -> m20_85  [key=2, style=dotted];
m20_84 -> m20_82  [color=blue, key=0, style=bold];
m20_0 -> m20_1  [color=green, key=0, style=solid];
m20_0 -> m20_13  [color=darkseagreen4, key=1, label="Hangfire.IGlobalConfiguration", style=dashed];
m20_1 -> m20_2  [color=green, key=0, style=solid];
m20_1 -> m20_3  [color=green, key=0, style=solid];
m20_2 -> m20_14  [color=green, key=0, style=solid];
m20_2 -> m20_15  [color=green, key=2, style=dotted];
m20_3 -> m20_4  [color=green, key=0, style=solid];
m20_3 -> m20_16  [color=green, key=2, style=dotted];
m20_3 -> m20_17  [color=green, key=2, style=dotted];
m20_4 -> m20_5  [color=green, key=0, style=solid];
m20_4 -> m20_18  [color=green, key=2, style=dotted];
m20_4 -> m20_19  [color=green, key=2, style=dotted];
m20_5 -> m20_6  [color=green, key=0, style=solid];
m20_5 -> m20_20  [color=green, key=2, style=dotted];
m20_5 -> m20_27  [color=green, key=1, label="lambda expression", style=dashed];
m20_6 -> m20_7  [key=0, style=solid];
m20_6 -> m20_21  [key=2, style=dotted];
m20_6 -> m20_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_13 -> m20_14  [key=0, style=solid];
m20_7 -> m20_8  [key=0, style=solid];
m20_7 -> m20_21  [key=2, style=dotted];
m20_7 -> m20_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_12 -> m20_13  [key=0, style=solid];
m20_12 -> m20_26  [key=2, style=dotted];
m20_12 -> m20_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_8 -> m20_9  [key=0, style=solid];
m20_8 -> m20_22  [key=2, style=dotted];
m20_11 -> m20_12  [key=0, style=solid];
m20_11 -> m20_25  [key=2, style=dotted];
m20_9 -> m20_10  [key=0, style=solid];
m20_9 -> m20_23  [key=2, style=dotted];
m20_10 -> m20_11  [key=0, style=solid];
m20_10 -> m20_24  [key=2, style=dotted];
m20_10 -> m20_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_14 -> m20_0  [color=blue, key=0, style=bold];
m20_40 -> m20_41  [key=0, style=solid];
m20_40 -> m20_43  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m20_40 -> m20_44  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m20_40 -> m20_45  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m20_40 -> m20_46  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m20_40 -> m20_47  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m20_40 -> m20_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m20_40 -> m20_49  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m20_27 -> m20_28  [color=green, key=0, style=solid];
m20_28 -> m20_29  [color=green, key=0, style=solid];
m20_28 -> m20_30  [color=green, key=2, style=dotted];
m20_29 -> m20_27  [color=blue, key=0, style=bold];
m20_31 -> m20_32  [key=0, style=solid];
m20_36 -> m20_37  [key=0, style=solid];
m20_33 -> m20_31  [color=blue, key=0, style=bold];
m20_32 -> m20_33  [key=0, style=solid];
m20_32 -> m20_34  [key=2, style=dotted];
m20_32 -> m20_35  [key=2, style=dotted];
m20_64 -> m20_65  [key=0, style=solid];
m20_38 -> m20_36  [color=blue, key=0, style=bold];
m20_37 -> m20_38  [key=0, style=solid];
m20_37 -> m20_39  [key=2, style=dotted];
m20_37 -> m20_35  [key=2, style=dotted];
m20_66 -> m20_64  [color=blue, key=0, style=bold];
m20_65 -> m20_66  [key=0, style=solid];
m20_65 -> m20_67  [key=2, style=dotted];
m20_65 -> m20_68  [key=2, style=dotted];
m20_65 -> m20_69  [key=2, style=dotted];
m20_41 -> m20_42  [key=0, style=solid];
m20_41 -> m20_53  [key=2, style=dotted];
m20_41 -> m20_44  [color=darkseagreen4, key=1, label=builder, style=dashed];
m20_41 -> m20_47  [color=darkseagreen4, key=1, label=builder, style=dashed];
m20_41 -> m20_49  [color=darkseagreen4, key=1, label=builder, style=dashed];
m20_41 -> m20_50  [color=darkseagreen4, key=1, label=builder, style=dashed];
m20_41 -> m20_51  [color=darkseagreen4, key=1, label=builder, style=dashed];
m20_43 -> m20_44  [key=0, style=solid];
m20_43 -> m20_45  [key=0, style=solid];
m20_43 -> m20_55  [key=2, style=dotted];
m20_44 -> m20_45  [key=0, style=solid];
m20_44 -> m20_56  [key=2, style=dotted];
m20_44 -> m20_57  [key=2, style=dotted];
m20_45 -> m20_46  [key=0, style=solid];
m20_45 -> m20_48  [key=0, style=solid];
m20_45 -> m20_55  [key=2, style=dotted];
m20_46 -> m20_47  [key=0, style=solid];
m20_46 -> m20_58  [key=2, style=dotted];
m20_46 -> m20_59  [key=2, style=dotted];
m20_47 -> m20_48  [key=0, style=solid];
m20_47 -> m20_60  [key=2, style=dotted];
m20_47 -> m20_57  [key=2, style=dotted];
m20_48 -> m20_49  [key=0, style=solid];
m20_48 -> m20_50  [key=0, style=solid];
m20_48 -> m20_55  [key=2, style=dotted];
m20_49 -> m20_50  [key=0, style=solid];
m20_49 -> m20_61  [key=2, style=dotted];
m20_49 -> m20_57  [key=2, style=dotted];
m20_51 -> m20_52  [key=0, style=solid];
m20_51 -> m20_62  [key=2, style=dotted];
m20_51 -> m20_63  [key=2, style=dotted];
m20_42 -> m20_43  [key=0, style=solid];
m20_42 -> m20_54  [key=2, style=dotted];
m20_50 -> m20_51  [key=0, style=solid];
m20_50 -> m20_54  [key=2, style=dotted];
m20_52 -> m20_40  [color=blue, key=0, style=bold];
m21_0 -> m21_1  [color=green, key=0, style=solid];
m21_1 -> m21_2  [color=green, key=0, style=solid];
m21_1 -> m21_68  [color=green, key=2, style=dotted];
m21_2 -> m21_3  [color=green, key=0, style=solid];
m21_2 -> m21_69  [color=green, key=2, style=dotted];
m21_2 -> m21_4  [color=green, key=1, label=sqlServerStorage, style=dashed];
m21_3 -> m21_4  [color=green, key=0, style=solid];
m21_3 -> m21_70  [color=green, key=2, style=dotted];
m21_4 -> m21_5  [color=green, key=0, style=solid];
m21_5 -> m21_6  [color=green, key=0, style=solid];
m21_5 -> m21_71  [color=green, key=2, style=dotted];
m21_5 -> m21_87  [color=green, key=1, label="lambda expression", style=dashed];
m21_6 -> m21_7  [color=green, key=0, style=solid];
m21_6 -> m21_72  [color=green, key=2, style=dotted];
m21_7 -> m21_8  [color=green, key=0, style=solid];
m21_7 -> m21_73  [color=green, key=2, style=dotted];
m21_7 -> m21_13  [color=green, key=1, label=server, style=dashed];
m21_8 -> m21_9  [color=green, key=0, style=solid];
m21_8 -> m21_47  [color=green, key=1, label=count, style=dashed];
m21_13 -> m21_14  [color=green, key=0, style=solid];
m21_13 -> m21_76  [color=green, key=2, style=dotted];
m21_9 -> m21_10  [color=green, key=0, style=solid];
m21_9 -> m21_65  [color=green, key=0, style=solid];
m21_47 -> m21_47  [color=darkseagreen4, key=1, label=count, style=dashed];
m21_47 -> m21_48  [key=0, style=solid];
m21_47 -> m21_109  [color=darkseagreen4, key=1, label=number, style=dashed];
m21_12 -> m21_13  [color=green, key=0, style=solid];
m21_12 -> m21_14  [color=green, key=0, style=solid];
m21_12 -> m21_75  [color=green, key=2, style=dotted];
m21_14 -> m21_15  [color=green, key=0, style=solid];
m21_14 -> m21_24  [color=green, key=0, style=solid];
m21_14 -> m21_77  [color=green, key=2, style=dotted];
m21_59 -> m21_9  [color=green, key=0, style=solid];
m21_59 -> m21_60  [key=0, style=solid];
m21_59 -> m21_77  [key=2, style=dotted];
m21_62 -> m21_9  [color=green, key=0, style=solid];
m21_62 -> m21_63  [key=0, style=solid];
m21_62 -> m21_81  [key=2, style=dotted];
m21_64 -> m21_9  [color=green, key=0, style=solid];
m21_64 -> m21_81  [key=2, style=dotted];
m21_10 -> m21_11  [color=green, key=0, style=solid];
m21_10 -> m21_74  [color=green, key=2, style=dotted];
m21_10 -> m21_12  [color=green, key=1, label=command, style=dashed];
m21_10 -> m21_14  [color=green, key=1, label=command, style=dashed];
m21_10 -> m21_15  [color=green, key=1, label=command, style=dashed];
m21_10 -> m21_24  [color=green, key=1, label=command, style=dashed];
m21_10 -> m21_25  [color=green, key=1, label=command, style=dashed];
m21_10 -> m21_33  [color=green, key=1, label=command, style=dashed];
m21_10 -> m21_34  [color=green, key=1, label=command, style=dashed];
m21_10 -> m21_39  [color=green, key=1, label=command, style=dashed];
m21_10 -> m21_40  [color=green, key=1, label=command, style=dashed];
m21_10 -> m21_45  [color=green, key=1, label=command, style=dashed];
m21_10 -> m21_46  [color=green, key=1, label=command, style=dashed];
m21_10 -> m21_49  [color=green, key=1, label=command, style=dashed];
m21_10 -> m21_50  [color=green, key=1, label=command, style=dashed];
m21_10 -> m21_52  [color=green, key=1, label=command, style=dashed];
m21_10 -> m21_53  [color=green, key=1, label=command, style=dashed];
m21_10 -> m21_59  [color=green, key=1, label=command, style=dashed];
m21_10 -> m21_60  [color=green, key=1, label=command, style=dashed];
m21_65 -> m21_66  [key=0, style=solid];
m21_65 -> m21_81  [key=2, style=dotted];
m21_11 -> m21_12  [color=green, key=0, style=solid];
m21_11 -> m21_65  [color=green, key=0, style=solid];
m21_11 -> m21_75  [color=green, key=2, style=dotted];
m21_15 -> m21_16  [color=green, key=0, style=solid];
m21_15 -> m21_78  [color=green, key=2, style=dotted];
m21_15 -> m21_79  [color=green, key=2, style=dotted];
m21_15 -> m21_17  [color=green, key=1, label=workCount, style=dashed];
m21_24 -> m21_25  [color=green, key=0, style=solid];
m21_24 -> m21_33  [color=green, key=0, style=solid];
m21_24 -> m21_77  [color=green, key=2, style=dotted];
m21_25 -> m21_26  [key=0, style=solid];
m21_25 -> m21_78  [key=2, style=dotted];
m21_25 -> m21_79  [key=2, style=dotted];
m21_25 -> m21_27  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m21_33 -> m21_34  [key=0, style=solid];
m21_33 -> m21_39  [key=0, style=solid];
m21_33 -> m21_77  [key=2, style=dotted];
m21_34 -> m21_35  [key=0, style=solid];
m21_34 -> m21_78  [key=2, style=dotted];
m21_34 -> m21_79  [key=2, style=dotted];
m21_34 -> m21_36  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m21_39 -> m21_40  [key=0, style=solid];
m21_39 -> m21_45  [key=0, style=solid];
m21_39 -> m21_77  [key=2, style=dotted];
m21_40 -> m21_41  [key=0, style=solid];
m21_40 -> m21_78  [key=2, style=dotted];
m21_40 -> m21_79  [key=2, style=dotted];
m21_40 -> m21_42  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m21_45 -> m21_46  [key=0, style=solid];
m21_45 -> m21_49  [key=0, style=solid];
m21_45 -> m21_77  [key=2, style=dotted];
m21_46 -> m21_47  [key=0, style=solid];
m21_46 -> m21_78  [key=2, style=dotted];
m21_46 -> m21_79  [key=2, style=dotted];
m21_46 -> m21_48  [color=darkseagreen4, key=1, label=seconds, style=dashed];
m21_49 -> m21_50  [key=0, style=solid];
m21_49 -> m21_52  [key=0, style=solid];
m21_49 -> m21_77  [key=2, style=dotted];
m21_50 -> m21_51  [key=0, style=solid];
m21_50 -> m21_78  [key=2, style=dotted];
m21_50 -> m21_79  [key=2, style=dotted];
m21_50 -> m21_112  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m21_52 -> m21_59  [key=0, style=solid];
m21_52 -> m21_53  [key=0, style=solid];
m21_52 -> m21_77  [key=2, style=dotted];
m21_53 -> m21_54  [key=0, style=solid];
m21_53 -> m21_78  [key=2, style=dotted];
m21_53 -> m21_79  [key=2, style=dotted];
m21_53 -> m21_55  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m21_60 -> m21_61  [key=0, style=solid];
m21_60 -> m21_78  [key=2, style=dotted];
m21_60 -> m21_79  [key=2, style=dotted];
m21_16 -> m21_17  [color=green, key=0, style=solid];
m21_16 -> m21_18  [color=green, key=1, label=i, style=dashed];
m21_16 -> m21_20  [color=green, key=1, label=i, style=dashed];
m21_17 -> m21_18  [color=green, key=0, style=solid];
m21_17 -> m21_21  [color=green, key=0, style=solid];
m21_21 -> m21_24  [color=green, key=0, style=solid];
m21_21 -> m21_22  [color=green, key=0, style=solid];
m21_21 -> m21_81  [color=green, key=2, style=dotted];
m21_23 -> m21_24  [color=green, key=0, style=solid];
m21_23 -> m21_81  [color=green, key=2, style=dotted];
m21_18 -> m21_19  [color=green, key=0, style=solid];
m21_18 -> m21_91  [color=green, key=1, label=number, style=dashed];
m21_20 -> m21_17  [color=green, key=0, style=solid];
m21_20 -> m21_20  [color=green, key=1, label=i, style=dashed];
m21_19 -> m21_20  [color=green, key=0, style=solid];
m21_19 -> m21_80  [color=green, key=2, style=dotted];
m21_19 -> m21_90  [color=green, key=1, label="lambda expression", style=dashed];
m21_22 -> m21_23  [color=green, key=0, style=solid];
m21_48 -> m21_49  [key=0, style=solid];
m21_48 -> m21_83  [key=2, style=dotted];
m21_48 -> m21_84  [key=2, style=dotted];
m21_48 -> m21_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_55 -> m21_59  [key=0, style=solid];
m21_55 -> m21_56  [key=0, style=solid];
m21_61 -> m21_62  [key=0, style=solid];
m21_61 -> m21_86  [key=2, style=dotted];
m21_61 -> m21_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_63 -> m21_64  [key=0, style=solid];
m21_66 -> m21_74  [key=2, style=dotted];
m21_66 -> m21_67  [key=0, style=solid];
m21_26 -> m21_27  [key=0, style=solid];
m21_26 -> m21_29  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_27 -> m21_28  [key=0, style=solid];
m21_27 -> m21_30  [key=0, style=solid];
m21_30 -> m21_33  [key=0, style=solid];
m21_30 -> m21_81  [key=2, style=dotted];
m21_30 -> m21_31  [key=0, style=solid];
m21_32 -> m21_33  [key=0, style=solid];
m21_32 -> m21_81  [key=2, style=dotted];
m21_35 -> m21_36  [key=0, style=solid];
m21_35 -> m21_38  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_36 -> m21_39  [key=0, style=solid];
m21_36 -> m21_37  [key=0, style=solid];
m21_41 -> m21_42  [key=0, style=solid];
m21_41 -> m21_44  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_42 -> m21_45  [key=0, style=solid];
m21_42 -> m21_43  [key=0, style=solid];
m21_51 -> m21_52  [key=0, style=solid];
m21_51 -> m21_80  [key=2, style=dotted];
m21_51 -> m21_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_54 -> m21_55  [key=0, style=solid];
m21_54 -> m21_58  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_37 -> m21_80  [key=2, style=dotted];
m21_37 -> m21_38  [key=0, style=solid];
m21_37 -> m21_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_43 -> m21_80  [key=2, style=dotted];
m21_43 -> m21_44  [key=0, style=solid];
m21_43 -> m21_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_56 -> m21_80  [key=2, style=dotted];
m21_56 -> m21_57  [key=0, style=solid];
m21_56 -> m21_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_58 -> m21_55  [key=0, style=solid];
m21_58 -> m21_58  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_29 -> m21_27  [key=0, style=solid];
m21_29 -> m21_29  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_28 -> m21_29  [key=0, style=solid];
m21_28 -> m21_82  [key=2, style=dotted];
m21_28 -> m21_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_31 -> m21_32  [key=0, style=solid];
m21_38 -> m21_36  [key=0, style=solid];
m21_38 -> m21_38  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_44 -> m21_42  [key=0, style=solid];
m21_44 -> m21_44  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_57 -> m21_58  [key=0, style=solid];
m21_57 -> m21_85  [key=2, style=dotted];
m21_67 -> m21_0  [color=blue, key=0, style=bold];
m21_94 -> m21_95  [key=0, style=solid];
m21_87 -> m21_88  [color=green, key=0, style=solid];
m21_91 -> m21_92  [color=green, key=0, style=solid];
m21_91 -> m21_93  [color=green, key=2, style=dotted];
m21_90 -> m21_91  [color=green, key=0, style=solid];
m21_92 -> m21_90  [color=blue, key=0, style=bold];
m21_88 -> m21_89  [color=green, key=0, style=solid];
m21_88 -> m21_81  [color=green, key=2, style=dotted];
m21_89 -> m21_87  [color=blue, key=0, style=bold];
m21_109 -> m21_93  [key=2, style=dotted];
m21_109 -> m21_110  [key=0, style=solid];
m21_112 -> m21_113  [key=0, style=solid];
m21_112 -> m21_114  [key=2, style=dotted];
m21_121 -> m21_80  [key=2, style=dotted];
m21_121 -> m21_123  [key=0, style=solid];
m21_121 -> m21_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_122 -> m21_80  [key=2, style=dotted];
m21_122 -> m21_123  [key=0, style=solid];
m21_122 -> m21_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_108 -> m21_109  [key=0, style=solid];
m21_110 -> m21_108  [color=blue, key=0, style=bold];
m21_119 -> m21_120  [key=0, style=solid];
m21_111 -> m21_112  [key=0, style=solid];
m21_113 -> m21_111  [color=blue, key=0, style=bold];
m21_98 -> m21_99  [key=0, style=solid];
m21_102 -> m21_103  [key=0, style=solid];
m21_115 -> m21_116  [key=0, style=solid];
m21_120 -> m21_121  [key=0, style=solid];
m21_120 -> m21_122  [key=0, style=solid];
m21_123 -> m21_119  [color=blue, key=0, style=bold];
m21_124 -> m21_125  [key=0, style=solid];
m21_128 -> m21_129  [key=0, style=solid];
m21_100 -> m21_98  [color=blue, key=0, style=bold];
m21_99 -> m21_100  [key=0, style=solid];
m21_99 -> m21_101  [key=2, style=dotted];
m21_104 -> m21_102  [color=blue, key=0, style=bold];
m21_103 -> m21_104  [key=0, style=solid];
m21_103 -> m21_105  [key=2, style=dotted];
m21_103 -> m21_106  [key=2, style=dotted];
m21_103 -> m21_107  [key=2, style=dotted];
m21_117 -> m21_115  [color=blue, key=0, style=bold];
m21_116 -> m21_117  [key=0, style=solid];
m21_116 -> m21_118  [key=2, style=dotted];
m21_126 -> m21_124  [color=blue, key=0, style=bold];
m21_125 -> m21_126  [key=0, style=solid];
m21_125 -> m21_127  [key=2, style=dotted];
m21_130 -> m21_128  [color=blue, key=0, style=bold];
m21_129 -> m21_130  [key=0, style=solid];
m21_129 -> m21_118  [key=2, style=dotted];
m21_95 -> m21_96  [key=0, style=solid];
m21_95 -> m21_97  [key=2, style=dotted];
m21_96 -> m21_94  [color=blue, key=0, style=bold];
m21_131 -> m21_91  [color=green, key=1, label=number, style=dashed];
m21_132 -> m21_109  [color=darkseagreen4, key=1, label=number, style=dashed];
m21_133 -> m21_112  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m24_0 -> m24_1  [color=green, key=0, style=solid];
m24_1 -> m24_2  [color=green, key=0, style=solid];
m24_2 -> m24_0  [color=blue, key=0, style=bold];
m24_17 -> m24_1  [color=green, key=1, label="Hangfire.Dashboard.Metric", style=dashed];
m25_22 -> m25_23  [color=green, key=0, style=solid];
m25_23 -> m25_24  [color=green, key=0, style=solid];
m25_23 -> m25_25  [color=green, key=2, style=dotted];
m25_24 -> m25_22  [color=blue, key=0, style=bold];
m25_18 -> m25_19  [color=green, key=0, style=solid];
m25_19 -> m25_20  [color=green, key=0, style=solid];
m25_19 -> m25_21  [color=green, key=2, style=dotted];
m25_20 -> m25_18  [color=blue, key=0, style=bold];
m25_0 -> m25_1  [color=green, key=0, style=solid];
m25_0 -> m25_3  [color=green, key=1, label=IRedisTransaction, style=dashed];
m25_0 -> m25_4  [color=green, key=1, label=IRedisTransaction, style=dashed];
m25_0 -> m25_5  [color=green, key=1, label=IRedisTransaction, style=dashed];
m25_0 -> m25_6  [color=green, key=1, label=IRedisTransaction, style=dashed];
m25_0 -> m25_7  [color=green, key=1, label=IRedisTransaction, style=dashed];
m25_0 -> m25_8  [color=green, key=1, label=IRedisTransaction, style=dashed];
m25_0 -> m25_9  [color=green, key=1, label=IRedisTransaction, style=dashed];
m25_1 -> m25_2  [color=green, key=0, style=solid];
m25_1 -> m25_3  [color=green, key=0, style=solid];
m25_2 -> m25_10  [color=green, key=0, style=solid];
m25_2 -> m25_11  [color=green, key=2, style=dotted];
m25_3 -> m25_4  [color=green, key=0, style=solid];
m25_4 -> m25_5  [color=green, key=0, style=solid];
m25_4 -> m25_12  [color=green, key=2, style=dotted];
m25_5 -> m25_6  [color=green, key=0, style=solid];
m25_5 -> m25_13  [color=green, key=2, style=dotted];
m25_6 -> m25_7  [color=green, key=0, style=solid];
m25_6 -> m25_14  [color=green, key=2, style=dotted];
m25_7 -> m25_8  [color=green, key=0, style=solid];
m25_7 -> m25_15  [color=green, key=2, style=dotted];
m25_8 -> m25_9  [color=green, key=0, style=solid];
m25_8 -> m25_16  [color=green, key=2, style=dotted];
m25_9 -> m25_10  [color=green, key=0, style=solid];
m25_9 -> m25_17  [color=green, key=2, style=dotted];
m25_10 -> m25_0  [color=blue, key=0, style=bold];
m25_26 -> m25_3  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m25_26 -> m25_4  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m25_26 -> m25_5  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m25_26 -> m25_6  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m25_26 -> m25_7  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m25_26 -> m25_8  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m25_26 -> m25_9  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m25_26 -> m25_19  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m25_26 -> m25_23  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m27_6 -> m27_17  [key=0, style=solid];
m27_6 -> m27_3  [color=darkorchid, key=3, label="Parameter variable int i", style=bold];
m27_6 -> m27_10  [color=darkorchid, key=3, label="Parameter variable int i", style=bold];
m27_6 -> m27_19  [color=darkorchid, key=3, label="Parameter variable int i", style=bold];
m27_17 -> m27_18  [key=0, style=solid];
m27_18 -> m27_6  [color=blue, key=0, style=bold];
m27_16 -> m27_19  [key=0, style=solid];
m27_16 -> m27_11  [color=darkorchid, key=3, label="Parameter variable object o", style=bold];
m27_19 -> m27_20  [key=0, style=solid];
m27_19 -> m27_22  [key=2, style=dotted];
m27_20 -> m27_21  [key=0, style=solid];
m27_20 -> m27_6  [key=2, style=dotted];
m27_21 -> m27_16  [color=blue, key=0, style=bold];
m27_0 -> m27_1  [key=0, style=solid];
m27_0 -> m27_2  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.ExpressionFingerprint", style=dashed];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_3  [key=0, style=solid];
m27_2 -> m27_4  [key=0, style=solid];
m27_2 -> m27_5  [key=2, style=dotted];
m27_3 -> m27_4  [key=0, style=solid];
m27_3 -> m27_6  [key=2, style=dotted];
m27_4 -> m27_0  [color=blue, key=0, style=bold];
m27_7 -> m27_8  [key=0, style=solid];
m27_7 -> m27_11  [color=darkseagreen4, key=1, label="System.Collections.IEnumerable", style=dashed];
m27_8 -> m27_9  [key=0, style=solid];
m27_8 -> m27_10  [key=0, style=solid];
m27_11 -> m27_12  [key=0, style=solid];
m27_11 -> m27_14  [key=0, style=solid];
m27_9 -> m27_15  [key=0, style=solid];
m27_9 -> m27_6  [key=2, style=dotted];
m27_10 -> m27_11  [key=0, style=solid];
m27_10 -> m27_13  [color=darkseagreen4, key=1, label=count, style=dashed];
m27_10 -> m27_14  [color=darkseagreen4, key=1, label=count, style=dashed];
m27_10 -> m27_3  [color=darkorchid, key=3, label="Local variable int count", style=bold];
m27_13 -> m27_11  [key=0, style=solid];
m27_13 -> m27_13  [color=darkseagreen4, key=1, label=count, style=dashed];
m27_13 -> m27_14  [color=darkseagreen4, key=1, label=count, style=dashed];
m27_14 -> m27_15  [key=0, style=solid];
m27_14 -> m27_6  [key=2, style=dotted];
m27_12 -> m27_13  [key=0, style=solid];
m27_12 -> m27_16  [key=2, style=dotted];
m27_15 -> m27_7  [color=blue, key=0, style=bold];
m27_23 -> m27_2  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m27_23 -> m27_3  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m27_23 -> m27_9  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m27_23 -> m27_12  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m27_23 -> m27_14  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m27_23 -> m27_17  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m27_23 -> m27_20  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m29_3 -> m29_4  [key=0, style=solid];
m29_4 -> m29_5  [key=0, style=solid];
m29_5 -> m29_6  [key=0, style=solid];
m29_5 -> m29_7  [key=2, style=dotted];
m29_5 -> m29_8  [key=2, style=dotted];
m29_6 -> m29_3  [color=blue, key=0, style=bold];
m29_9 -> m29_10  [key=0, style=solid];
m29_9 -> m29_11  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m29_10 -> m29_11  [key=0, style=solid];
m29_10 -> m29_13  [key=2, style=dotted];
m29_11 -> m29_12  [key=0, style=solid];
m29_11 -> m29_14  [key=2, style=dotted];
m29_12 -> m29_9  [color=blue, key=0, style=bold];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_2  [key=0, style=solid];
m29_2 -> m29_0  [color=blue, key=0, style=bold];
m29_15 -> m29_1  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint", style=dashed];
m29_15 -> m29_5  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint", style=dashed];
m29_15 -> m29_10  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint", style=dashed];
m29_15 -> m29_11  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint", style=dashed];
m32_12 -> m32_13  [key=0, style=solid];
m32_35 -> m32_36  [color=green, key=0, style=solid];
m32_36 -> m32_37  [color=green, key=0, style=solid];
m32_36 -> m32_38  [color=green, key=2, style=dotted];
m32_36 -> m32_29  [color=green, key=2, style=dotted];
m32_37 -> m32_35  [color=blue, key=0, style=bold];
m32_24 -> m32_53  [key=0, style=solid];
m32_53 -> m32_29  [key=2, style=dotted];
m32_53 -> m32_54  [key=0, style=solid];
m32_54 -> m32_55  [key=0, style=solid];
m32_54 -> m32_57  [key=2, style=dotted];
m32_54 -> m32_58  [key=2, style=dotted];
m32_55 -> m32_56  [key=0, style=solid];
m32_56 -> m32_24  [color=blue, key=0, style=bold];
m32_16 -> m32_17  [key=0, style=solid];
m32_16 -> m32_22  [key=0, style=solid];
m32_16 -> m32_25  [key=2, style=dotted];
m32_17 -> m32_18  [key=0, style=solid];
m32_17 -> m32_8  [key=2, style=dotted];
m32_17 -> m32_26  [key=2, style=dotted];
m32_17 -> m32_27  [key=2, style=dotted];
m32_18 -> m32_16  [color=blue, key=0, style=bold];
m32_18 -> m32_19  [key=0, style=solid];
m32_18 -> m32_18  [color=darkseagreen4, key=1, label=script, style=dashed];
m32_18 -> m32_28  [key=2, style=dotted];
m32_18 -> m32_20  [color=darkseagreen4, key=1, label=script, style=dashed];
m32_27 -> m32_17  [color=darkorchid, key=3, label="Parameter variable string resourceName", style=bold];
m32_27 -> m32_59  [key=0, style=solid];
m32_59 -> m32_60  [key=0, style=solid];
m32_59 -> m32_63  [key=2, style=dotted];
m32_61 -> m32_62  [key=0, style=solid];
m32_61 -> m32_65  [key=2, style=dotted];
m32_60 -> m32_61  [key=0, style=solid];
m32_60 -> m32_64  [key=2, style=dotted];
m32_62 -> m32_27  [color=blue, key=0, style=bold];
m32_2 -> m32_3  [key=0, style=solid];
m32_2 -> m32_7  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m32_2 -> m32_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_2 -> m32_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m32_2 -> m32_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m32_3 -> m32_4  [key=0, style=solid];
m32_3 -> m32_6  [key=2, style=dotted];
m32_3 -> m32_8  [color=darkorchid, key=3, label="Field variable HangFire.SqlServer.SqlServerStorageOptions _options", style=bold];
m32_3 -> m32_5  [key=0, style=solid];
m32_4 -> m32_5  [key=0, style=solid];
m32_4 -> m32_7  [key=2, style=dotted];
m32_4 -> m32_8  [color=darkorchid, key=3, label="Field variable string _connectionString", style=bold];
m32_4 -> m32_11  [key=0, style=solid];
m32_4 -> m32_12  [key=2, style=dotted];
m32_5 -> m32_2  [color=blue, key=0, style=bold];
m32_5 -> m32_7  [key=0, style=solid];
m32_5 -> m32_6  [key=0, style=solid];
m32_31 -> m32_32  [key=0, style=solid];
m32_32 -> m32_29  [key=2, style=dotted];
m32_32 -> m32_33  [key=0, style=solid];
m32_32 -> m32_34  [key=2, style=dotted];
m32_33 -> m32_31  [color=blue, key=0, style=bold];
m32_14 -> m32_15  [key=0, style=solid];
m32_14 -> m32_23  [key=2, style=dotted];
m32_7 -> m32_8  [key=0, style=solid];
m32_8 -> m32_9  [key=0, style=solid];
m32_10 -> m32_11  [key=0, style=solid];
m32_10 -> m32_13  [key=2, style=dotted];
m32_10 -> m32_12  [key=0, style=solid];
m32_9 -> m32_10  [key=0, style=solid];
m32_9 -> m32_11  [key=0, style=solid];
m32_9 -> m32_14  [key=2, style=dotted];
m32_9 -> m32_12  [color=darkseagreen4, key=1, label=wasStopped, style=dashed];
m32_6 -> m32_11  [key=0, style=solid];
m32_6 -> m32_12  [key=2, style=dotted];
m32_11 -> m32_2  [color=blue, key=0, style=bold];
m32_11 -> m32_12  [key=0, style=solid];
m32_11 -> m32_15  [key=2, style=dotted];
m32_13 -> m32_8  [color=blue, key=0, style=bold];
m32_13 -> m32_14  [key=0, style=solid];
m32_39 -> m32_40  [key=0, style=solid];
m32_39 -> m32_41  [color=crimson, key=0, style=bold];
m32_39 -> m32_42  [color=crimson, key=0, style=bold];
m32_40 -> m32_41  [key=0, style=solid];
m32_40 -> m32_44  [key=2, style=dotted];
m32_41 -> m32_42  [key=0, style=solid];
m32_41 -> m32_45  [key=2, style=dotted];
m32_42 -> m32_43  [key=0, style=solid];
m32_42 -> m32_46  [key=2, style=dotted];
m32_43 -> m32_39  [color=blue, key=0, style=bold];
m32_29 -> m32_47  [key=0, style=solid];
m32_47 -> m32_48  [key=0, style=solid];
m32_47 -> m32_51  [key=2, style=dotted];
m32_47 -> m32_49  [color=darkseagreen4, key=1, label=connection, style=dashed];
m32_48 -> m32_49  [key=0, style=solid];
m32_48 -> m32_52  [key=2, style=dotted];
m32_49 -> m32_50  [key=0, style=solid];
m32_50 -> m32_29  [color=blue, key=0, style=bold];
m32_0 -> m32_1  [key=0, style=solid];
m32_1 -> m32_0  [color=blue, key=0, style=bold];
m32_15 -> m32_16  [key=0, style=solid];
m32_15 -> m32_17  [key=0, style=solid];
m32_15 -> m32_24  [key=2, style=dotted];
m32_19 -> m32_29  [key=2, style=dotted];
m32_19 -> m32_20  [key=0, style=solid];
m32_19 -> m32_3  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
m32_19 -> m32_4  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
m32_19 -> m32_9  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
m32_19 -> m32_11  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
m32_19 -> m32_17  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
m32_20 -> m32_21  [key=0, style=solid];
m32_20 -> m32_30  [key=2, style=dotted];
m32_21 -> m32_22  [key=0, style=solid];
m32_21 -> m32_23  [key=2, style=dotted];
m32_22 -> m32_13  [color=blue, key=0, style=bold];
m32_66 -> m32_36  [color=green, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m32_66 -> m32_7  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m32_66 -> m32_8  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m32_66 -> m32_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m32_66 -> m32_15  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m32_66 -> m32_17  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m32_66 -> m32_19  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m32_66 -> m32_32  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m32_66 -> m32_40  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m32_66 -> m32_41  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m32_66 -> m32_42  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m32_66 -> m32_47  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m32_66 -> m32_53  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m34_23 -> m34_24  [key=0, style=solid];
m34_54 -> m34_11  [key=2, style=dotted];
m34_54 -> m34_54  [color=darkseagreen4, key=1, label=count, style=dashed];
m34_54 -> m34_55  [key=0, style=solid];
m34_54 -> m34_76  [key=2, style=dotted];
m34_32 -> m34_13  [key=2, style=dotted];
m34_32 -> m34_33  [key=0, style=solid];
m34_58 -> m34_13  [key=2, style=dotted];
m34_58 -> m34_59  [key=0, style=solid];
m34_43 -> m34_13  [key=2, style=dotted];
m34_43 -> m34_44  [key=0, style=solid];
m34_43 -> m34_46  [key=0, style=solid];
m34_45 -> m34_13  [key=2, style=dotted];
m34_45 -> m34_46  [key=0, style=solid];
m34_57 -> m34_13  [key=2, style=dotted];
m34_57 -> m34_34  [key=0, style=solid];
m34_33 -> m34_54  [color=darkseagreen4, key=1, label=count, style=dashed];
m34_33 -> m34_34  [key=0, style=solid];
m34_33 -> m34_41  [color=darkseagreen4, key=1, label=count, style=dashed];
m34_41 -> m34_54  [color=darkseagreen4, key=1, label=count, style=dashed];
m34_41 -> m34_41  [color=darkseagreen4, key=1, label=count, style=dashed];
m34_41 -> m34_42  [key=0, style=solid];
m34_41 -> m34_75  [key=2, style=dotted];
m34_53 -> m34_54  [key=0, style=solid];
m34_53 -> m34_73  [key=2, style=dotted];
m34_53 -> m34_74  [key=2, style=dotted];
m34_55 -> m34_56  [key=0, style=solid];
m34_55 -> m34_34  [key=0, style=solid];
m34_55 -> m34_72  [key=2, style=dotted];
m34_31 -> m34_32  [key=0, style=solid];
m34_31 -> m34_69  [key=2, style=dotted];
m34_34 -> m34_58  [key=0, style=solid];
m34_34 -> m34_35  [key=0, style=solid];
m34_36 -> m34_58  [key=0, style=solid];
m34_36 -> m34_37  [key=0, style=solid];
m34_36 -> m34_71  [key=2, style=dotted];
m34_59 -> m34_60  [key=0, style=solid];
m34_59 -> m34_70  [key=2, style=dotted];
m34_40 -> m34_43  [key=0, style=solid];
m34_40 -> m34_41  [key=0, style=solid];
m34_44 -> m34_45  [key=0, style=solid];
m34_46 -> m34_47  [key=0, style=solid];
m34_46 -> m34_52  [key=0, style=solid];
m34_46 -> m34_72  [key=2, style=dotted];
m34_56 -> m34_57  [key=0, style=solid];
m34_56 -> m34_77  [key=2, style=dotted];
m34_42 -> m34_40  [key=0, style=solid];
m34_42 -> m34_42  [color=darkseagreen4, key=1, label=i, style=dashed];
m34_35 -> m34_53  [color=darkseagreen4, key=1, label=command, style=dashed];
m34_35 -> m34_55  [color=darkseagreen4, key=1, label=command, style=dashed];
m34_35 -> m34_36  [key=0, style=solid];
m34_35 -> m34_46  [color=darkseagreen4, key=1, label=command, style=dashed];
m34_35 -> m34_70  [key=2, style=dotted];
m34_35 -> m34_37  [color=darkseagreen4, key=1, label=command, style=dashed];
m34_35 -> m34_38  [color=darkseagreen4, key=1, label=command, style=dashed];
m34_35 -> m34_47  [color=darkseagreen4, key=1, label=command, style=dashed];
m34_35 -> m34_52  [color=darkseagreen4, key=1, label=command, style=dashed];
m34_52 -> m34_53  [key=0, style=solid];
m34_52 -> m34_55  [key=0, style=solid];
m34_52 -> m34_72  [key=2, style=dotted];
m34_30 -> m34_31  [key=0, style=solid];
m34_30 -> m34_66  [key=2, style=dotted];
m34_30 -> m34_67  [key=2, style=dotted];
m34_30 -> m34_68  [key=2, style=dotted];
m34_37 -> m34_46  [key=0, style=solid];
m34_37 -> m34_72  [key=2, style=dotted];
m34_37 -> m34_38  [key=0, style=solid];
m34_38 -> m34_40  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m34_38 -> m34_73  [key=2, style=dotted];
m34_38 -> m34_74  [key=2, style=dotted];
m34_38 -> m34_39  [key=0, style=solid];
m34_39 -> m34_40  [key=0, style=solid];
m34_39 -> m34_42  [color=darkseagreen4, key=1, label=i, style=dashed];
m34_47 -> m34_73  [key=2, style=dotted];
m34_47 -> m34_74  [key=2, style=dotted];
m34_47 -> m34_48  [key=0, style=solid];
m34_47 -> m34_49  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m34_50 -> m34_75  [key=2, style=dotted];
m34_50 -> m34_51  [key=0, style=solid];
m34_49 -> m34_52  [key=0, style=solid];
m34_49 -> m34_50  [key=0, style=solid];
m34_29 -> m34_30  [key=0, style=solid];
m34_29 -> m34_65  [key=2, style=dotted];
m34_29 -> m34_63  [key=2, style=dotted];
m34_48 -> m34_49  [key=0, style=solid];
m34_48 -> m34_51  [color=darkseagreen4, key=1, label=i, style=dashed];
m34_51 -> m34_49  [key=0, style=solid];
m34_51 -> m34_51  [color=darkseagreen4, key=1, label=i, style=dashed];
m34_28 -> m34_29  [key=0, style=solid];
m34_28 -> m34_64  [key=2, style=dotted];
m34_28 -> m34_63  [key=2, style=dotted];
m34_24 -> m34_25  [key=0, style=solid];
m34_24 -> m34_61  [key=2, style=dotted];
m34_27 -> m34_28  [key=0, style=solid];
m34_27 -> m34_63  [key=2, style=dotted];
m34_27 -> m34_62  [key=2, style=dotted];
m34_25 -> m34_26  [key=0, style=solid];
m34_26 -> m34_27  [key=0, style=solid];
m34_60 -> m34_23  [color=blue, key=0, style=bold];
m34_20 -> m34_21  [key=0, style=solid];
m34_21 -> m34_13  [key=2, style=dotted];
m34_21 -> m34_22  [key=0, style=solid];
m34_22 -> m34_20  [color=blue, key=0, style=bold];
m34_0 -> m34_1  [color=green, key=0, style=solid];
m34_1 -> m34_2  [color=green, key=0, style=solid];
m34_2 -> m34_3  [color=green, key=0, style=solid];
m34_3 -> m34_4  [color=green, key=0, style=solid];
m34_3 -> m34_9  [color=green, key=2, style=dotted];
m34_3 -> m34_6  [color=green, key=1, label=time, style=dashed];
m34_4 -> m34_5  [color=green, key=0, style=solid];
m34_4 -> m34_6  [color=green, key=0, style=solid];
m34_6 -> m34_7  [color=green, key=0, style=solid];
m34_6 -> m34_11  [color=green, key=2, style=dotted];
m34_6 -> m34_12  [color=green, key=2, style=dotted];
m34_5 -> m34_8  [color=green, key=0, style=solid];
m34_5 -> m34_10  [color=green, key=2, style=dotted];
m34_7 -> m34_8  [color=green, key=0, style=solid];
m34_7 -> m34_13  [color=green, key=2, style=dotted];
m34_8 -> m34_0  [color=blue, key=0, style=bold];
m34_14 -> m34_15  [color=green, key=0, style=solid];
m34_15 -> m34_16  [color=green, key=0, style=solid];
m34_15 -> m34_13  [color=green, key=2, style=dotted];
m34_16 -> m34_17  [color=green, key=0, style=solid];
m34_16 -> m34_18  [color=green, key=2, style=dotted];
m34_16 -> m34_19  [color=green, key=2, style=dotted];
m34_17 -> m34_14  [color=blue, key=0, style=bold];
m34_78 -> m34_7  [color=green, key=1, label="ConsoleSample.ConsoleJob", style=dashed];
m35_8 -> m35_9  [color=green, key=0, style=solid];
m35_8 -> m35_12  [color=green, key=1, label=IRedisTransaction, style=dashed];
m35_9 -> m35_10  [color=green, key=0, style=solid];
m35_9 -> m35_11  [color=green, key=0, style=solid];
m35_10 -> m35_13  [color=green, key=0, style=solid];
m35_10 -> m35_14  [color=green, key=2, style=dotted];
m35_11 -> m35_12  [color=green, key=0, style=solid];
m35_11 -> m35_15  [color=green, key=2, style=dotted];
m35_11 -> m35_18  [color=green, key=1, label=timestamp, style=dashed];
m35_12 -> m35_13  [color=green, key=0, style=solid];
m35_12 -> m35_16  [color=green, key=2, style=dotted];
m35_12 -> m35_17  [color=green, key=1, label="lambda expression", style=dashed];
m35_13 -> m35_8  [color=blue, key=0, style=bold];
m35_0 -> m35_1  [color=green, key=0, style=solid];
m35_1 -> m35_2  [color=green, key=0, style=solid];
m35_2 -> m35_0  [color=blue, key=0, style=bold];
m35_3 -> m35_4  [color=green, key=0, style=solid];
m35_4 -> m35_5  [color=green, key=0, style=solid];
m35_4 -> m35_6  [color=green, key=2, style=dotted];
m35_4 -> m35_7  [color=green, key=2, style=dotted];
m35_5 -> m35_3  [color=blue, key=0, style=bold];
m35_17 -> m35_18  [color=green, key=0, style=solid];
m35_18 -> m35_19  [color=green, key=0, style=solid];
m35_18 -> m35_20  [color=green, key=2, style=dotted];
m35_19 -> m35_17  [color=blue, key=0, style=bold];
m35_21 -> m35_1  [color=green, key=1, label="HangFire.States.ScheduledState", style=dashed];
m35_21 -> m35_4  [color=green, key=1, label="HangFire.States.ScheduledState", style=dashed];
m35_21 -> m35_12  [color=green, key=1, label="HangFire.States.ScheduledState", style=dashed];
m35_21 -> m35_11  [color=green, key=1, label="HangFire.States.ScheduledState", style=dashed];
m35_21 -> m35_18  [color=green, key=1, label="HangFire.States.ScheduledState", style=dashed];
m35_22 -> m35_18  [color=green, key=1, label=timestamp, style=dashed];
m36_0 -> m36_1  [color=green, key=0, style=solid];
m36_0 -> m36_3  [color=green, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction", style=dashed];
m36_1 -> m36_2  [color=green, key=0, style=solid];
m36_1 -> m36_3  [color=green, key=0, style=solid];
m36_2 -> m36_4  [color=green, key=0, style=solid];
m36_2 -> m36_5  [color=green, key=2, style=dotted];
m36_3 -> m36_4  [color=green, key=0, style=solid];
m36_4 -> m36_0  [color=blue, key=0, style=bold];
m36_6 -> m36_7  [color=green, key=0, style=solid];
m36_6 -> m36_8  [color=green, key=1, label=string, style=dashed];
m36_6 -> m36_12  [color=green, key=1, label=string, style=dashed];
m36_7 -> m36_7  [color=green, key=3, label="Local variable string enqueueJobSql", style=bold];
m36_7 -> m36_8  [color=green, key=0, style=solid];
m36_7 -> m36_12  [color=green, key=1, label=enqueueJobSql, style=dashed];
m36_8 -> m36_9  [color=green, key=0, style=solid];
m36_8 -> m36_10  [color=green, key=2, style=dotted];
m36_8 -> m36_11  [color=green, key=1, label="lambda expression", style=dashed];
m36_9 -> m36_6  [color=blue, key=0, style=bold];
m36_11 -> m36_12  [color=green, key=0, style=solid];
m36_12 -> m36_13  [color=green, key=0, style=solid];
m36_12 -> m36_14  [color=green, key=2, style=dotted];
m36_13 -> m36_11  [color=blue, key=0, style=bold];
m36_15 -> m36_3  [color=green, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue", style=dashed];
m36_15 -> m36_8  [color=green, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue", style=dashed];
m36_16 -> m36_12  [color=green, key=1, label=string, style=dashed];
m36_17 -> m36_12  [color=green, key=1, label=string, style=dashed];
m36_18 -> m36_12  [color=green, key=1, label=enqueueJobSql, style=dashed];
m37_22 -> m37_23  [key=0, style=solid];
m37_23 -> m37_15  [key=2, style=dotted];
m37_23 -> m37_16  [key=2, style=dotted];
m37_23 -> m37_24  [key=0, style=solid];
m37_24 -> m37_22  [color=blue, key=0, style=bold];
m37_10 -> m37_5  [color=green, key=3, label="Parameter variable HangFire.Common.Job job", style=bold];
m37_10 -> m37_17  [color=green, key=3, label="Parameter variable HangFire.Common.Job job", style=bold];
m37_10 -> m37_25  [key=0, style=solid];
m37_25 -> m37_26  [key=0, style=solid];
m37_25 -> m37_27  [key=2, style=dotted];
m37_26 -> m37_10  [color=blue, key=0, style=bold];
m37_4 -> m37_5  [color=green, key=0, style=solid];
m37_4 -> m37_7  [color=green, key=1, label=string, style=dashed];
m37_4 -> m37_3  [color=darkorchid, key=3, label="Parameter variable System.Linq.Expressions.Expression<System.Action> methodCall", style=bold];
m37_5 -> m37_6  [color=green, key=0, style=solid];
m37_5 -> m37_9  [color=green, key=2, style=dotted];
m37_5 -> m37_7  [color=green, key=1, label=job, style=dashed];
m37_6 -> m37_7  [color=green, key=0, style=solid];
m37_6 -> m37_10  [color=green, key=2, style=dotted];
m37_7 -> m37_8  [color=green, key=0, style=solid];
m37_7 -> m37_11  [color=green, key=2, style=dotted];
m37_8 -> m37_4  [color=blue, key=0, style=bold];
m37_16 -> m37_17  [color=green, key=0, style=solid];
m37_16 -> m37_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m37_16 -> m37_22  [color=darkorchid, key=3, label="Parameter variable System.Linq.Expressions.Expression<System.Action<T>> methodCall", style=bold];
m37_17 -> m37_18  [color=green, key=0, style=solid];
m37_17 -> m37_21  [color=green, key=2, style=dotted];
m37_17 -> m37_19  [color=green, key=1, label=job, style=dashed];
m37_18 -> m37_19  [color=green, key=0, style=solid];
m37_18 -> m37_10  [color=green, key=2, style=dotted];
m37_19 -> m37_11  [key=2, style=dotted];
m37_19 -> m37_20  [key=0, style=solid];
m37_20 -> m37_16  [color=blue, key=0, style=bold];
m37_0 -> m37_1  [color=green, key=0, style=solid];
m37_1 -> m37_2  [color=green, key=0, style=solid];
m37_1 -> m37_3  [color=green, key=2, style=dotted];
m37_2 -> m37_0  [color=blue, key=0, style=bold];
m37_12 -> m37_13  [color=green, key=0, style=solid];
m37_13 -> m37_14  [color=green, key=0, style=solid];
m37_13 -> m37_15  [color=green, key=2, style=dotted];
m37_13 -> m37_4  [color=green, key=2, style=dotted];
m37_14 -> m37_12  [color=blue, key=0, style=bold];
m39_28 -> m39_29  [color=green, key=0, style=solid];
m39_28 -> m39_32  [color=green, key=1, label=string, style=dashed];
m39_29 -> m39_30  [color=green, key=0, style=solid];
m39_29 -> m39_11  [color=green, key=2, style=dotted];
m39_29 -> m39_31  [color=green, key=1, label="lambda expression", style=dashed];
m39_30 -> m39_28  [color=blue, key=0, style=bold];
m39_6 -> m39_7  [color=green, key=0, style=solid];
m39_6 -> m39_9  [color=green, key=1, label=string, style=dashed];
m39_6 -> m39_13  [color=green, key=1, label=string, style=dashed];
m39_6 -> m39_15  [color=green, key=1, label=string, style=dashed];
m39_7 -> m39_7  [color=green, key=3, label="Local variable string insertSql", style=bold];
m39_7 -> m39_8  [color=green, key=0, style=solid];
m39_7 -> m39_9  [color=green, key=1, label=insertSql, style=dashed];
m39_7 -> m39_15  [color=green, key=1, label=insertSql, style=dashed];
m39_8 -> m39_9  [color=green, key=0, style=solid];
m39_8 -> m39_13  [color=green, key=1, label=updateSql, style=dashed];
m39_8 -> m39_15  [color=green, key=1, label=updateSql, style=dashed];
m39_8 -> m39_8  [color=green, key=3, label="Local variable string updateSql", style=bold];
m39_9 -> m39_10  [color=green, key=0, style=solid];
m39_9 -> m39_11  [color=green, key=2, style=dotted];
m39_9 -> m39_12  [color=green, key=1, label="lambda expression", style=dashed];
m39_10 -> m39_6  [color=blue, key=0, style=bold];
m39_0 -> m39_1  [color=green, key=0, style=solid];
m39_0 -> m39_3  [color=green, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction", style=dashed];
m39_1 -> m39_2  [color=green, key=0, style=solid];
m39_1 -> m39_3  [color=green, key=0, style=solid];
m39_2 -> m39_4  [color=green, key=0, style=solid];
m39_2 -> m39_5  [color=green, key=2, style=dotted];
m39_3 -> m39_4  [color=green, key=0, style=solid];
m39_4 -> m39_0  [color=blue, key=0, style=bold];
m39_31 -> m39_32  [color=green, key=0, style=solid];
m39_15 -> m39_16  [color=green, key=0, style=solid];
m39_15 -> m39_17  [color=green, key=2, style=dotted];
m39_12 -> m39_13  [color=green, key=0, style=solid];
m39_12 -> m39_15  [color=green, key=1, label=SqlConnection, style=dashed];
m39_13 -> m39_14  [color=green, key=0, style=solid];
m39_13 -> m39_17  [color=green, key=2, style=dotted];
m39_14 -> m39_15  [color=green, key=0, style=solid];
m39_14 -> m39_16  [color=green, key=0, style=solid];
m39_16 -> m39_12  [color=blue, key=0, style=bold];
m39_26 -> m39_27  [color=green, key=0, style=solid];
m39_26 -> m39_17  [color=green, key=2, style=dotted];
m39_23 -> m39_24  [color=green, key=0, style=solid];
m39_23 -> m39_26  [color=green, key=1, label=SqlConnection, style=dashed];
m39_24 -> m39_25  [color=green, key=0, style=solid];
m39_24 -> m39_17  [color=green, key=2, style=dotted];
m39_25 -> m39_26  [color=green, key=0, style=solid];
m39_25 -> m39_27  [color=green, key=0, style=solid];
m39_27 -> m39_23  [color=blue, key=0, style=bold];
m39_32 -> m39_33  [color=green, key=0, style=solid];
m39_32 -> m39_34  [color=green, key=2, style=dotted];
m39_32 -> m39_17  [color=green, key=2, style=dotted];
m39_33 -> m39_31  [color=blue, key=0, style=bold];
m39_18 -> m39_19  [color=green, key=0, style=solid];
m39_18 -> m39_21  [color=green, key=1, label=string, style=dashed];
m39_18 -> m39_24  [color=green, key=1, label=string, style=dashed];
m39_18 -> m39_26  [color=green, key=1, label=string, style=dashed];
m39_19 -> m39_7  [color=green, key=3, label="Local variable string insertSql", style=bold];
m39_19 -> m39_20  [color=green, key=0, style=solid];
m39_19 -> m39_21  [color=green, key=1, label=insertSql, style=dashed];
m39_19 -> m39_26  [color=green, key=1, label=insertSql, style=dashed];
m39_20 -> m39_21  [color=green, key=0, style=solid];
m39_20 -> m39_24  [color=green, key=1, label=updateSql, style=dashed];
m39_20 -> m39_26  [color=green, key=1, label=updateSql, style=dashed];
m39_20 -> m39_20  [color=green, key=3, label="Local variable string updateSql", style=bold];
m39_21 -> m39_22  [color=green, key=0, style=solid];
m39_21 -> m39_11  [color=green, key=2, style=dotted];
m39_21 -> m39_23  [color=green, key=1, label="lambda expression", style=dashed];
m39_22 -> m39_18  [color=blue, key=0, style=bold];
m39_35 -> m39_3  [color=green, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue", style=dashed];
m39_35 -> m39_9  [color=green, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue", style=dashed];
m39_35 -> m39_21  [color=green, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue", style=dashed];
m39_35 -> m39_29  [color=green, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue", style=dashed];
m39_36 -> m39_13  [color=green, key=1, label=string, style=dashed];
m39_36 -> m39_15  [color=green, key=1, label=string, style=dashed];
m39_37 -> m39_13  [color=green, key=1, label=updateSql, style=dashed];
m39_37 -> m39_15  [color=green, key=1, label=updateSql, style=dashed];
m39_38 -> m39_15  [color=green, key=1, label=insertSql, style=dashed];
m39_39 -> m39_24  [color=green, key=1, label=string, style=dashed];
m39_39 -> m39_26  [color=green, key=1, label=string, style=dashed];
m39_40 -> m39_24  [color=green, key=1, label=updateSql, style=dashed];
m39_40 -> m39_26  [color=green, key=1, label=updateSql, style=dashed];
m39_41 -> m39_26  [color=green, key=1, label=insertSql, style=dashed];
m39_42 -> m39_32  [color=green, key=1, label=string, style=dashed];
m39_43 -> m39_32  [color=green, key=1, label="System.TimeSpan", style=dashed];
m40_1 -> m40_2  [key=0, style=solid];
m40_1 -> m40_3  [color=green, key=0, style=solid];
m40_2 -> n3  [key=0, style=solid];
m40_2 -> m40_8  [key=0, style=solid];
m40_2 -> m40_9  [key=2, style=dotted];
m40_15 -> m40_16  [color=green, key=0, style=solid];
m40_15 -> m40_18  [color=green, key=1, label=string, style=dashed];
m40_16 -> m40_17  [color=green, key=0, style=solid];
m40_16 -> m40_18  [color=green, key=0, style=solid];
m40_16 -> m40_11  [color=green, key=2, style=dotted];
m40_17 -> m40_19  [color=green, key=0, style=solid];
m40_17 -> m40_20  [color=green, key=2, style=dotted];
m40_18 -> m40_19  [color=green, key=0, style=solid];
m40_18 -> m40_21  [color=green, key=2, style=dotted];
m40_19 -> m40_15  [color=blue, key=0, style=bold];
m40_0 -> m40_3  [color=green, key=1, label="HangFire.States.IStateHandler", style=dashed];
m40_0 -> m40_5  [color=green, key=1, label="HangFire.States.IStateHandler", style=dashed];
m40_0 -> m40_1  [key=0, style=solid];
m40_0 -> m40_6  [color=darkseagreen4, key=1, label="HangFire.States.IStateHandler", style=dashed];
m40_0 -> m40_7  [color=darkseagreen4, key=1, label="HangFire.States.IStateHandler", style=dashed];
m40_3 -> m40_4  [color=green, key=0, style=solid];
m40_3 -> m40_5  [color=green, key=0, style=solid];
m40_4 -> m40_8  [color=green, key=0, style=solid];
m40_4 -> m40_10  [color=green, key=2, style=dotted];
m40_4 -> m40_1  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdogOptions", style=dashed];
m40_4 -> m40_2  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdogOptions", style=dashed];
m40_5 -> m40_6  [color=green, key=0, style=solid];
m40_5 -> m40_7  [color=green, key=0, style=solid];
m40_5 -> m40_11  [color=green, key=2, style=dotted];
m40_6 -> m40_7  [key=0, style=solid];
m40_6 -> m40_12  [key=2, style=dotted];
m40_6 -> m40_13  [key=2, style=dotted];
m40_7 -> m40_8  [key=0, style=solid];
m40_7 -> m40_14  [key=2, style=dotted];
m40_8 -> m40_0  [color=blue, key=0, style=bold];
m40_22 -> m40_5  [color=green, key=1, label="HangFire.States.StateHandlerCollection", style=dashed];
m40_22 -> m40_16  [color=green, key=1, label="HangFire.States.StateHandlerCollection", style=dashed];
m40_22 -> m40_18  [color=green, key=1, label="HangFire.States.StateHandlerCollection", style=dashed];
m40_22 -> m40_6  [color=darkseagreen4, key=1, label="HangFire.States.StateHandlerCollection", style=dashed];
m40_22 -> m40_7  [color=darkseagreen4, key=1, label="HangFire.States.StateHandlerCollection", style=dashed];
m41_38 -> m41_39  [key=0, style=solid];
m41_39 -> m41_40  [key=0, style=solid];
m41_39 -> m41_41  [key=2, style=dotted];
m41_40 -> m41_38  [color=blue, key=0, style=bold];
m41_2 -> m41_3  [key=0, style=solid];
m41_3 -> m41_2  [color=blue, key=0, style=bold];
m41_0 -> m41_1  [key=0, style=solid];
m41_1 -> m41_0  [color=blue, key=0, style=bold];
m41_16 -> m41_17  [key=0, style=solid];
m41_16 -> m41_18  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m41_16 -> m41_24  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m41_16 -> m41_27  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m41_17 -> m41_18  [key=0, style=solid];
m41_17 -> m41_29  [key=2, style=dotted];
m41_18 -> m41_19  [key=0, style=solid];
m41_18 -> m41_30  [key=2, style=dotted];
m41_18 -> m41_20  [color=darkseagreen4, key=1, label=connection, style=dashed];
m41_18 -> m41_22  [color=darkseagreen4, key=1, label=connection, style=dashed];
m41_18 -> m41_24  [color=darkseagreen4, key=1, label=connection, style=dashed];
m41_24 -> m41_25  [key=0, style=solid];
m41_24 -> m41_21  [key=0, style=solid];
m41_24 -> m41_35  [key=2, style=dotted];
m41_27 -> m41_28  [key=0, style=solid];
m41_27 -> m41_37  [key=2, style=dotted];
m41_19 -> m41_20  [key=0, style=solid];
m41_19 -> m41_31  [key=2, style=dotted];
m41_20 -> m41_21  [key=0, style=solid];
m41_20 -> m41_32  [key=2, style=dotted];
m41_22 -> m41_23  [key=0, style=solid];
m41_22 -> m41_33  [key=2, style=dotted];
m41_22 -> m41_34  [key=2, style=dotted];
m41_22 -> m41_24  [color=darkseagreen4, key=1, label=recurringJob, style=dashed];
m41_21 -> m41_22  [key=0, style=solid];
m41_21 -> m41_27  [key=0, style=solid];
m41_21 -> m41_24  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
m41_21 -> m41_26  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
m41_26 -> m41_21  [key=0, style=solid];
m41_26 -> m41_33  [key=2, style=dotted];
m41_26 -> m41_36  [key=2, style=dotted];
m41_23 -> m41_24  [key=0, style=solid];
m41_23 -> m41_21  [key=0, style=solid];
m41_25 -> m41_26  [key=0, style=solid];
m41_28 -> m41_16  [color=blue, key=0, style=bold];
m41_35 -> m41_42  [key=0, style=solid];
m41_35 -> m41_44  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m41_35 -> m41_46  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m41_35 -> m41_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m41_35 -> m41_52  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m41_35 -> m41_53  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m41_35 -> m41_54  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m41_35 -> m41_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_35 -> m41_61  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m41_35 -> m41_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_42 -> m41_43  [key=0, style=solid];
m41_42 -> m41_65  [key=2, style=dotted];
m41_44 -> m41_45  [key=0, style=solid];
m41_46 -> m41_47  [key=0, style=solid];
m41_46 -> m41_68  [key=2, style=dotted];
m41_46 -> m41_69  [key=2, style=dotted];
m41_48 -> m41_49  [key=0, style=solid];
m41_48 -> m41_68  [key=2, style=dotted];
m41_48 -> m41_71  [key=2, style=dotted];
m41_48 -> m41_50  [color=darkseagreen4, key=1, label=lastExecutionTime, style=dashed];
m41_52 -> m41_53  [key=0, style=solid];
m41_52 -> m41_54  [key=0, style=solid];
m41_52 -> m41_68  [key=2, style=dotted];
m41_52 -> m41_76  [key=2, style=dotted];
m41_53 -> m41_54  [key=0, style=solid];
m41_54 -> m41_55  [key=0, style=solid];
m41_54 -> m41_77  [key=2, style=dotted];
m41_57 -> m41_58  [key=0, style=solid];
m41_57 -> m41_79  [key=2, style=dotted];
m41_61 -> m41_62  [key=0, style=solid];
m41_61 -> m41_64  [key=0, style=solid];
m41_61 -> m41_33  [key=2, style=dotted];
m41_61 -> m41_82  [key=2, style=dotted];
m41_63 -> m41_64  [key=0, style=solid];
m41_63 -> m41_83  [key=2, style=dotted];
m41_63 -> m41_84  [key=2, style=dotted];
m41_43 -> m41_44  [key=0, style=solid];
m41_43 -> m41_66  [key=2, style=dotted];
m41_43 -> m41_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m41_45 -> m41_46  [key=0, style=solid];
m41_45 -> m41_67  [key=2, style=dotted];
m41_45 -> m41_47  [color=darkseagreen4, key=1, label=cronSchedule, style=dashed];
m41_47 -> m41_48  [key=0, style=solid];
m41_47 -> m41_70  [key=2, style=dotted];
m41_47 -> m41_50  [color=darkseagreen4, key=1, label=instant, style=dashed];
m41_47 -> m41_57  [color=darkseagreen4, key=1, label=instant, style=dashed];
m41_47 -> m41_58  [color=darkseagreen4, key=1, label=instant, style=dashed];
m41_47 -> m41_60  [color=darkseagreen4, key=1, label=instant, style=dashed];
m41_50 -> m41_51  [key=0, style=solid];
m41_50 -> m41_60  [key=0, style=solid];
m41_50 -> m41_73  [key=2, style=dotted];
m41_50 -> m41_74  [key=2, style=dotted];
m41_58 -> m41_59  [key=0, style=solid];
m41_58 -> m41_80  [key=2, style=dotted];
m41_58 -> m41_81  [key=2, style=dotted];
m41_60 -> m41_61  [key=0, style=solid];
m41_60 -> m41_80  [key=2, style=dotted];
m41_60 -> m41_81  [key=2, style=dotted];
m41_49 -> m41_50  [key=0, style=solid];
m41_49 -> m41_72  [key=2, style=dotted];
m41_49 -> m41_58  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m41_49 -> m41_59  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m41_49 -> m41_60  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m41_49 -> m41_61  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m41_59 -> m41_60  [key=0, style=solid];
m41_59 -> m41_81  [key=2, style=dotted];
m41_51 -> m41_52  [key=0, style=solid];
m41_51 -> m41_75  [key=2, style=dotted];
m41_51 -> m41_53  [color=darkseagreen4, key=1, label=state, style=dashed];
m41_51 -> m41_54  [color=darkseagreen4, key=1, label=state, style=dashed];
m41_55 -> m41_56  [key=0, style=solid];
m41_55 -> m41_78  [key=2, style=dotted];
m41_55 -> m41_59  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m41_56 -> m41_57  [key=0, style=solid];
m41_56 -> m41_58  [key=0, style=solid];
m41_56 -> m41_76  [key=2, style=dotted];
m41_62 -> m41_63  [key=0, style=solid];
m41_64 -> m41_35  [color=blue, key=0, style=bold];
m41_4 -> m41_5  [key=0, style=solid];
m41_4 -> m41_7  [color=darkseagreen4, key=1, label="System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>", style=dashed];
m41_4 -> m41_9  [color=darkseagreen4, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m41_4 -> m41_11  [color=darkseagreen4, key=1, label="Hangfire.Client.IJobCreationProcess", style=dashed];
m41_4 -> m41_12  [color=darkseagreen4, key=1, label="System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>", style=dashed];
m41_4 -> m41_13  [color=darkseagreen4, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m41_5 -> m41_6  [key=0, style=solid];
m41_5 -> m41_7  [key=0, style=solid];
m41_7 -> m41_8  [key=0, style=solid];
m41_7 -> m41_9  [key=0, style=solid];
m41_9 -> m41_10  [key=0, style=solid];
m41_9 -> m41_11  [key=0, style=solid];
m41_11 -> m41_12  [key=0, style=solid];
m41_12 -> m41_13  [key=0, style=solid];
m41_13 -> m41_14  [key=0, style=solid];
m41_6 -> m41_14  [key=0, style=solid];
m41_6 -> m41_15  [key=2, style=dotted];
m41_8 -> m41_14  [key=0, style=solid];
m41_8 -> m41_15  [key=2, style=dotted];
m41_10 -> m41_14  [key=0, style=solid];
m41_10 -> m41_15  [key=2, style=dotted];
m41_14 -> m41_4  [color=blue, key=0, style=bold];
m41_85 -> m41_11  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m41_85 -> m41_12  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m41_85 -> m41_13  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m41_85 -> m41_17  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m41_85 -> m41_24  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m41_85 -> m41_27  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m41_85 -> m41_39  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m41_85 -> m41_47  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m41_85 -> m41_55  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m42_3 -> m42_4  [key=0, style=solid];
m42_4 -> m42_5  [key=0, style=solid];
m42_4 -> m42_6  [key=2, style=dotted];
m42_4 -> m42_7  [key=2, style=dotted];
m42_5 -> m42_3  [color=blue, key=0, style=bold];
m42_0 -> m42_1  [key=0, style=solid];
m42_1 -> m42_2  [key=0, style=solid];
m42_2 -> m42_0  [color=blue, key=0, style=bold];
m42_8 -> m42_1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStoredSets", style=dashed];
m42_8 -> m42_4  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStoredSets", style=dashed];
m43_27 -> m43_28  [color=red, key=0, style=solid];
m43_27 -> m43_31  [color=red, key=1, label=string, style=dashed];
m43_28 -> m43_29  [color=red, key=0, style=solid];
m43_28 -> m43_22  [color=red, key=2, style=dotted];
m43_28 -> m43_30  [color=red, key=1, label="lambda expression", style=dashed];
m43_29 -> m43_27  [color=blue, key=0, style=bold];
m43_3 -> m43_4  [key=0, style=solid];
m43_4 -> m43_3  [color=blue, key=0, style=bold];
m43_34 -> m43_35  [color=red, key=0, style=solid];
m43_34 -> m43_38  [color=red, key=1, label=string, style=dashed];
m43_35 -> m43_36  [color=red, key=0, style=solid];
m43_35 -> m43_22  [color=red, key=2, style=dotted];
m43_35 -> m43_37  [color=red, key=1, label="lambda expression", style=dashed];
m43_36 -> m43_34  [color=blue, key=0, style=bold];
m43_53 -> m43_54  [color=red, key=0, style=solid];
m43_53 -> m43_57  [color=red, key=1, label=string, style=dashed];
m43_54 -> m43_55  [color=red, key=0, style=solid];
m43_54 -> m43_22  [color=red, key=2, style=dotted];
m43_54 -> m43_56  [color=red, key=1, label="lambda expression", style=dashed];
m43_55 -> m43_53  [color=blue, key=0, style=bold];
m43_117 -> m43_118  [color=red, key=0, style=solid];
m43_117 -> m43_121  [color=red, key=1, label=string, style=dashed];
m43_118 -> m43_119  [color=red, key=0, style=solid];
m43_118 -> m43_22  [color=red, key=2, style=dotted];
m43_118 -> m43_120  [color=red, key=1, label="lambda expression", style=dashed];
m43_119 -> m43_117  [color=blue, key=0, style=bold];
m43_0 -> m43_1  [color=red, key=0, style=solid];
m43_1 -> m43_2  [color=red, key=0, style=solid];
m43_2 -> m43_0  [color=blue, key=0, style=bold];
m43_105 -> m43_106  [color=red, key=0, style=solid];
m43_105 -> m43_109  [color=red, key=1, label=string, style=dashed];
m43_106 -> m43_107  [color=red, key=0, style=solid];
m43_106 -> m43_22  [color=red, key=2, style=dotted];
m43_106 -> m43_108  [color=red, key=1, label="lambda expression", style=dashed];
m43_107 -> m43_105  [color=blue, key=0, style=bold];
m43_18 -> m43_19  [color=red, key=0, style=solid];
m43_18 -> m43_20  [color=red, key=1, label=string, style=dashed];
m43_18 -> m43_24  [color=red, key=1, label=string, style=dashed];
m43_19 -> m43_20  [color=red, key=0, style=solid];
m43_19 -> m43_24  [color=red, key=1, label=enqueueJobSql, style=dashed];
m43_19 -> m43_19  [color=red, key=3, label="Local variable string enqueueJobSql", style=bold];
m43_20 -> m43_21  [color=red, key=0, style=solid];
m43_20 -> m43_22  [color=red, key=2, style=dotted];
m43_20 -> m43_23  [color=red, key=1, label="lambda expression", style=dashed];
m43_21 -> m43_18  [color=blue, key=0, style=bold];
m43_82 -> m43_83  [color=red, key=0, style=solid];
m43_82 -> m43_84  [color=red, key=1, label=int, style=dashed];
m43_82 -> m43_87  [color=red, key=1, label=int, style=dashed];
m43_83 -> m43_84  [color=red, key=0, style=solid];
m43_83 -> m43_87  [color=red, key=1, label=trimSql, style=dashed];
m43_83 -> m43_83  [color=red, key=3, label="Local variable string trimSql", style=bold];
m43_84 -> m43_85  [color=red, key=0, style=solid];
m43_84 -> m43_22  [color=red, key=2, style=dotted];
m43_84 -> m43_86  [color=red, key=1, label="lambda expression", style=dashed];
m43_85 -> m43_82  [color=blue, key=0, style=bold];
m43_5 -> m43_6  [color=red, key=0, style=solid];
m43_5 -> m43_11  [color=red, key=3, label="method methodReturn bool Commit", style=bold];
m43_6 -> m43_7  [color=red, key=0, style=solid];
m43_6 -> m43_13  [color=red, key=2, style=dotted];
m43_6 -> m43_14  [color=red, key=2, style=dotted];
m43_6 -> m43_10  [color=red, key=1, label=transaction, style=dashed];
m43_7 -> m43_8  [color=red, key=0, style=solid];
m43_7 -> m43_15  [color=red, key=2, style=dotted];
m43_10 -> m43_11  [color=red, key=0, style=solid];
m43_10 -> m43_17  [color=red, key=2, style=dotted];
m43_8 -> m43_9  [color=red, key=0, style=solid];
m43_8 -> m43_10  [color=red, key=0, style=solid];
m43_9 -> m43_8  [color=red, key=0, style=solid];
m43_9 -> m43_16  [color=red, key=2, style=dotted];
m43_11 -> m43_12  [color=red, key=0, style=solid];
m43_12 -> m43_5  [color=blue, key=0, style=bold];
m43_70 -> m43_71  [color=red, key=0, style=solid];
m43_70 -> m43_74  [color=red, key=1, label=string, style=dashed];
m43_71 -> m43_72  [color=red, key=0, style=solid];
m43_71 -> m43_22  [color=red, key=2, style=dotted];
m43_71 -> m43_73  [color=red, key=1, label="lambda expression", style=dashed];
m43_72 -> m43_70  [color=blue, key=0, style=bold];
m43_76 -> m43_77  [color=red, key=0, style=solid];
m43_76 -> m43_80  [color=red, key=1, label=string, style=dashed];
m43_77 -> m43_78  [color=red, key=0, style=solid];
m43_77 -> m43_22  [color=red, key=2, style=dotted];
m43_77 -> m43_79  [color=red, key=1, label="lambda expression", style=dashed];
m43_78 -> m43_76  [color=blue, key=0, style=bold];
m43_59 -> m43_60  [color=red, key=0, style=solid];
m43_60 -> m43_61  [color=red, key=0, style=solid];
m43_60 -> m43_62  [color=red, key=2, style=dotted];
m43_61 -> m43_59  [color=blue, key=0, style=bold];
m43_133 -> m43_134  [color=red, key=0, style=solid];
m43_133 -> m43_137  [color=red, key=1, label=string, style=dashed];
m43_134 -> m43_135  [color=red, key=0, style=solid];
m43_134 -> m43_22  [color=red, key=2, style=dotted];
m43_134 -> m43_136  [color=red, key=1, label="lambda expression", style=dashed];
m43_135 -> m43_133  [color=blue, key=0, style=bold];
m43_47 -> m43_48  [color=red, key=0, style=solid];
m43_47 -> m43_51  [color=red, key=1, label=string, style=dashed];
m43_48 -> m43_49  [color=red, key=0, style=solid];
m43_48 -> m43_22  [color=red, key=2, style=dotted];
m43_48 -> m43_50  [color=red, key=1, label="lambda expression", style=dashed];
m43_49 -> m43_47  [color=blue, key=0, style=bold];
m43_99 -> m43_100  [color=red, key=0, style=solid];
m43_99 -> m43_103  [color=red, key=1, label=string, style=dashed];
m43_100 -> m43_101  [color=red, key=0, style=solid];
m43_100 -> m43_22  [color=red, key=2, style=dotted];
m43_100 -> m43_102  [color=red, key=1, label="lambda expression", style=dashed];
m43_101 -> m43_99  [color=blue, key=0, style=bold];
m43_136 -> m43_137  [color=red, key=0, style=solid];
m43_24 -> m43_25  [color=red, key=0, style=solid];
m43_24 -> m43_26  [color=red, key=2, style=dotted];
m43_23 -> m43_24  [color=red, key=0, style=solid];
m43_25 -> m43_23  [color=blue, key=0, style=bold];
m43_31 -> m43_32  [color=red, key=0, style=solid];
m43_31 -> m43_33  [color=red, key=2, style=dotted];
m43_31 -> m43_26  [color=red, key=2, style=dotted];
m43_30 -> m43_31  [color=red, key=0, style=solid];
m43_32 -> m43_30  [color=blue, key=0, style=bold];
m43_38 -> m43_39  [color=red, key=0, style=solid];
m43_38 -> m43_26  [color=red, key=2, style=dotted];
m43_37 -> m43_38  [color=red, key=0, style=solid];
m43_39 -> m43_37  [color=blue, key=0, style=bold];
m43_44 -> m43_45  [color=red, key=0, style=solid];
m43_44 -> m43_46  [color=red, key=2, style=dotted];
m43_44 -> m43_26  [color=red, key=2, style=dotted];
m43_43 -> m43_44  [color=red, key=0, style=solid];
m43_45 -> m43_43  [color=blue, key=0, style=bold];
m43_51 -> m43_52  [color=red, key=0, style=solid];
m43_51 -> m43_46  [color=red, key=2, style=dotted];
m43_51 -> m43_26  [color=red, key=2, style=dotted];
m43_50 -> m43_51  [color=red, key=0, style=solid];
m43_52 -> m43_50  [color=blue, key=0, style=bold];
m43_57 -> m43_58  [color=red, key=0, style=solid];
m43_57 -> m43_26  [color=red, key=2, style=dotted];
m43_56 -> m43_57  [color=red, key=0, style=solid];
m43_58 -> m43_56  [color=blue, key=0, style=bold];
m43_68 -> m43_69  [color=red, key=0, style=solid];
m43_68 -> m43_26  [color=red, key=2, style=dotted];
m43_67 -> m43_68  [color=red, key=0, style=solid];
m43_69 -> m43_67  [color=blue, key=0, style=bold];
m43_74 -> m43_75  [color=red, key=0, style=solid];
m43_74 -> m43_26  [color=red, key=2, style=dotted];
m43_73 -> m43_74  [color=red, key=0, style=solid];
m43_75 -> m43_73  [color=blue, key=0, style=bold];
m43_80 -> m43_81  [color=red, key=0, style=solid];
m43_80 -> m43_26  [color=red, key=2, style=dotted];
m43_79 -> m43_80  [color=red, key=0, style=solid];
m43_81 -> m43_79  [color=blue, key=0, style=bold];
m43_87 -> m43_88  [color=red, key=0, style=solid];
m43_87 -> m43_26  [color=red, key=2, style=dotted];
m43_86 -> m43_87  [color=red, key=0, style=solid];
m43_88 -> m43_86  [color=blue, key=0, style=bold];
m43_95 -> m43_96  [color=red, key=0, style=solid];
m43_95 -> m43_26  [color=red, key=2, style=dotted];
m43_97 -> m43_98  [color=red, key=0, style=solid];
m43_97 -> m43_26  [color=red, key=2, style=dotted];
m43_94 -> m43_95  [color=red, key=0, style=solid];
m43_94 -> m43_97  [color=red, key=1, label=SqlConnection, style=dashed];
m43_96 -> m43_97  [color=red, key=0, style=solid];
m43_96 -> m43_98  [color=red, key=0, style=solid];
m43_98 -> m43_94  [color=blue, key=0, style=bold];
m43_103 -> m43_104  [color=red, key=0, style=solid];
m43_103 -> m43_33  [color=red, key=2, style=dotted];
m43_103 -> m43_26  [color=red, key=2, style=dotted];
m43_102 -> m43_103  [color=red, key=0, style=solid];
m43_104 -> m43_102  [color=blue, key=0, style=bold];
m43_109 -> m43_110  [color=red, key=0, style=solid];
m43_109 -> m43_26  [color=red, key=2, style=dotted];
m43_108 -> m43_109  [color=red, key=0, style=solid];
m43_110 -> m43_108  [color=blue, key=0, style=bold];
m43_115 -> m43_116  [color=red, key=0, style=solid];
m43_115 -> m43_33  [color=red, key=2, style=dotted];
m43_115 -> m43_26  [color=red, key=2, style=dotted];
m43_114 -> m43_115  [color=red, key=0, style=solid];
m43_116 -> m43_114  [color=blue, key=0, style=bold];
m43_121 -> m43_122  [color=red, key=0, style=solid];
m43_121 -> m43_26  [color=red, key=2, style=dotted];
m43_120 -> m43_121  [color=red, key=0, style=solid];
m43_122 -> m43_120  [color=blue, key=0, style=bold];
m43_129 -> m43_130  [color=red, key=0, style=solid];
m43_129 -> m43_26  [color=red, key=2, style=dotted];
m43_131 -> m43_132  [color=red, key=0, style=solid];
m43_131 -> m43_26  [color=red, key=2, style=dotted];
m43_128 -> m43_129  [color=red, key=0, style=solid];
m43_128 -> m43_131  [color=red, key=1, label=SqlConnection, style=dashed];
m43_130 -> m43_131  [color=red, key=0, style=solid];
m43_130 -> m43_132  [color=red, key=0, style=solid];
m43_132 -> m43_128  [color=blue, key=0, style=bold];
m43_137 -> m43_138  [color=red, key=0, style=solid];
m43_137 -> m43_33  [color=red, key=2, style=dotted];
m43_137 -> m43_26  [color=red, key=2, style=dotted];
m43_138 -> m43_136  [color=blue, key=0, style=bold];
m43_40 -> m43_41  [color=red, key=0, style=solid];
m43_40 -> m43_44  [color=red, key=1, label=string, style=dashed];
m43_41 -> m43_42  [color=red, key=0, style=solid];
m43_41 -> m43_22  [color=red, key=2, style=dotted];
m43_41 -> m43_43  [color=red, key=1, label="lambda expression", style=dashed];
m43_42 -> m43_40  [color=blue, key=0, style=bold];
m43_123 -> m43_124  [color=red, key=0, style=solid];
m43_123 -> m43_126  [color=red, key=1, label=string, style=dashed];
m43_123 -> m43_129  [color=red, key=1, label=string, style=dashed];
m43_123 -> m43_131  [color=red, key=1, label=string, style=dashed];
m43_124 -> m43_125  [color=red, key=0, style=solid];
m43_124 -> m43_126  [color=red, key=1, label=insertSql, style=dashed];
m43_124 -> m43_131  [color=red, key=1, label=insertSql, style=dashed];
m43_124 -> m43_90  [color=red, key=3, label="Local variable string insertSql", style=bold];
m43_126 -> m43_127  [color=red, key=0, style=solid];
m43_126 -> m43_22  [color=red, key=2, style=dotted];
m43_126 -> m43_128  [color=red, key=1, label="lambda expression", style=dashed];
m43_125 -> m43_126  [color=red, key=0, style=solid];
m43_125 -> m43_129  [color=red, key=1, label=updateSql, style=dashed];
m43_125 -> m43_131  [color=red, key=1, label=updateSql, style=dashed];
m43_125 -> m43_125  [color=red, key=3, label="Local variable string updateSql", style=bold];
m43_127 -> m43_123  [color=blue, key=0, style=bold];
m43_63 -> m43_64  [color=red, key=0, style=solid];
m43_63 -> m43_65  [color=red, key=1, label=string, style=dashed];
m43_63 -> m43_68  [color=red, key=1, label=string, style=dashed];
m43_64 -> m43_65  [color=red, key=0, style=solid];
m43_64 -> m43_68  [color=red, key=1, label=addSql, style=dashed];
m43_64 -> m43_64  [color=red, key=3, label="Local variable string addSql", style=bold];
m43_65 -> m43_66  [color=red, key=0, style=solid];
m43_65 -> m43_22  [color=red, key=2, style=dotted];
m43_65 -> m43_67  [color=red, key=1, label="lambda expression", style=dashed];
m43_66 -> m43_63  [color=blue, key=0, style=bold];
m43_89 -> m43_90  [color=red, key=0, style=solid];
m43_89 -> m43_92  [color=red, key=1, label=string, style=dashed];
m43_89 -> m43_95  [color=red, key=1, label=string, style=dashed];
m43_89 -> m43_97  [color=red, key=1, label=string, style=dashed];
m43_90 -> m43_91  [color=red, key=0, style=solid];
m43_90 -> m43_92  [color=red, key=1, label=insertSql, style=dashed];
m43_90 -> m43_97  [color=red, key=1, label=insertSql, style=dashed];
m43_90 -> m43_90  [color=red, key=3, label="Local variable string insertSql", style=bold];
m43_92 -> m43_93  [color=red, key=0, style=solid];
m43_92 -> m43_22  [color=red, key=2, style=dotted];
m43_92 -> m43_94  [color=red, key=1, label="lambda expression", style=dashed];
m43_91 -> m43_92  [color=red, key=0, style=solid];
m43_91 -> m43_95  [color=red, key=1, label=updateSql, style=dashed];
m43_91 -> m43_97  [color=red, key=1, label=updateSql, style=dashed];
m43_91 -> m43_91  [color=red, key=3, label="Local variable string updateSql", style=bold];
m43_93 -> m43_89  [color=blue, key=0, style=bold];
m43_111 -> m43_112  [color=red, key=0, style=solid];
m43_111 -> m43_115  [color=red, key=1, label=string, style=dashed];
m43_112 -> m43_113  [color=red, key=0, style=solid];
m43_112 -> m43_22  [color=red, key=2, style=dotted];
m43_112 -> m43_114  [color=red, key=1, label="lambda expression", style=dashed];
m43_113 -> m43_111  [color=blue, key=0, style=bold];
m43_139 -> m43_1  [color=red, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m43_139 -> m43_7  [color=red, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m43_139 -> m43_8  [color=red, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m43_139 -> m43_9  [color=red, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m43_139 -> m43_20  [color=red, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m43_139 -> m43_28  [color=red, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m43_139 -> m43_35  [color=red, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m43_139 -> m43_41  [color=red, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m43_139 -> m43_48  [color=red, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m43_139 -> m43_54  [color=red, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m43_139 -> m43_60  [color=red, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m43_139 -> m43_65  [color=red, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m43_139 -> m43_71  [color=red, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m43_139 -> m43_77  [color=red, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m43_139 -> m43_84  [color=red, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m43_139 -> m43_92  [color=red, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m43_139 -> m43_100  [color=red, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m43_139 -> m43_106  [color=red, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m43_139 -> m43_112  [color=red, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m43_139 -> m43_118  [color=red, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m43_139 -> m43_126  [color=red, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m43_139 -> m43_134  [color=red, key=1, label="HangFire.SqlServer.SqlWriteTransaction", style=dashed];
m43_140 -> m43_24  [color=red, key=1, label=string, style=dashed];
m43_141 -> m43_24  [color=red, key=1, label=string, style=dashed];
m43_142 -> m43_24  [color=red, key=1, label=enqueueJobSql, style=dashed];
m43_143 -> m43_31  [color=red, key=1, label=string, style=dashed];
m43_144 -> m43_31  [color=red, key=1, label="System.TimeSpan", style=dashed];
m43_145 -> m43_38  [color=red, key=1, label=string, style=dashed];
m43_146 -> m43_44  [color=red, key=1, label=string, style=dashed];
m43_147 -> m43_44  [color=red, key=1, label=string, style=dashed];
m43_148 -> m43_44  [color=red, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m43_149 -> m43_51  [color=red, key=1, label=string, style=dashed];
m43_150 -> m43_51  [color=red, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m43_151 -> m43_57  [color=red, key=1, label=string, style=dashed];
m43_152 -> m43_57  [color=red, key=1, label=string, style=dashed];
m43_153 -> m43_68  [color=red, key=1, label=string, style=dashed];
m43_154 -> m43_68  [color=red, key=1, label=string, style=dashed];
m43_155 -> m43_68  [color=red, key=1, label=double, style=dashed];
m43_156 -> m43_68  [color=red, key=1, label=addSql, style=dashed];
m43_157 -> m43_74  [color=red, key=1, label=string, style=dashed];
m43_158 -> m43_74  [color=red, key=1, label=string, style=dashed];
m43_159 -> m43_80  [color=red, key=1, label=string, style=dashed];
m43_160 -> m43_80  [color=red, key=1, label=string, style=dashed];
m43_161 -> m43_87  [color=red, key=1, label=int, style=dashed];
m43_162 -> m43_87  [color=red, key=1, label=int, style=dashed];
m43_163 -> m43_87  [color=red, key=1, label=trimSql, style=dashed];
m43_164 -> m43_95  [color=red, key=1, label=string, style=dashed];
m43_164 -> m43_97  [color=red, key=1, label=string, style=dashed];
m43_165 -> m43_95  [color=red, key=1, label=updateSql, style=dashed];
m43_165 -> m43_97  [color=red, key=1, label=updateSql, style=dashed];
m43_166 -> m43_97  [color=red, key=1, label=insertSql, style=dashed];
m43_167 -> m43_103  [color=red, key=1, label=string, style=dashed];
m43_168 -> m43_103  [color=red, key=1, label="System.TimeSpan", style=dashed];
m43_169 -> m43_109  [color=red, key=1, label=string, style=dashed];
m43_170 -> m43_115  [color=red, key=1, label=string, style=dashed];
m43_171 -> m43_115  [color=red, key=1, label="System.TimeSpan", style=dashed];
m43_172 -> m43_121  [color=red, key=1, label=string, style=dashed];
m43_173 -> m43_129  [color=red, key=1, label=string, style=dashed];
m43_173 -> m43_131  [color=red, key=1, label=string, style=dashed];
m43_174 -> m43_129  [color=red, key=1, label=updateSql, style=dashed];
m43_174 -> m43_131  [color=red, key=1, label=updateSql, style=dashed];
m43_175 -> m43_131  [color=red, key=1, label=insertSql, style=dashed];
m43_176 -> m43_137  [color=red, key=1, label=string, style=dashed];
m43_177 -> m43_137  [color=red, key=1, label="System.TimeSpan", style=dashed];
m44_0 -> m44_1  [key=0, style=solid];
m44_0 -> m44_3  [color=darkseagreen4, key=1, label="HangFire.Storage.IAtomicWriteTransaction", style=dashed];
m44_1 -> m44_2  [key=0, style=solid];
m44_1 -> m44_3  [key=0, style=solid];
m44_3 -> m44_4  [key=0, style=solid];
m44_2 -> m44_4  [key=0, style=solid];
m44_2 -> m44_5  [key=2, style=dotted];
m44_4 -> m44_0  [color=blue, key=0, style=bold];
m44_6 -> m44_3  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m45_0 -> m45_1  [key=0, style=solid];
m45_1 -> m45_2  [key=0, style=solid];
m45_2 -> m45_0  [color=blue, key=0, style=bold];
m45_3 -> m45_4  [key=0, style=solid];
m45_4 -> m45_5  [key=0, style=solid];
m45_4 -> m45_7  [key=0, style=solid];
m45_4 -> m45_9  [key=0, style=solid];
m45_4 -> m45_11  [key=0, style=solid];
m45_4 -> m45_13  [key=0, style=solid];
m45_4 -> m45_15  [key=0, style=solid];
m45_5 -> m45_6  [key=0, style=solid];
m45_7 -> m45_8  [key=0, style=solid];
m45_9 -> m45_10  [key=0, style=solid];
m45_11 -> m45_12  [key=0, style=solid];
m45_13 -> m45_14  [key=0, style=solid];
m45_15 -> m45_16  [key=0, style=solid];
m45_6 -> m45_16  [key=0, style=solid];
m45_8 -> m45_16  [key=0, style=solid];
m45_10 -> m45_16  [key=0, style=solid];
m45_12 -> m45_16  [key=0, style=solid];
m45_14 -> m45_16  [key=0, style=solid];
m45_16 -> m45_3  [color=blue, key=0, style=bold];
m45_17 -> m45_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Metric", style=dashed];
m46_14 -> m46_15  [key=0, style=solid];
m46_15 -> m46_16  [key=0, style=solid];
m46_15 -> m46_10  [key=2, style=dotted];
m46_16 -> m46_14  [color=blue, key=0, style=bold];
m46_10 -> m46_11  [key=0, style=solid];
m46_11 -> m46_12  [key=0, style=solid];
m46_11 -> m46_13  [key=2, style=dotted];
m46_12 -> m46_10  [color=blue, key=0, style=bold];
m46_4 -> m46_5  [key=0, style=solid];
m46_4 -> m46_6  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m46_5 -> m46_6  [key=0, style=solid];
m46_5 -> m46_8  [key=2, style=dotted];
m46_6 -> m46_7  [key=0, style=solid];
m46_6 -> m46_9  [key=2, style=dotted];
m46_7 -> m46_4  [color=blue, key=0, style=bold];
m46_0 -> m46_1  [key=0, style=solid];
m46_0 -> m46_2  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m46_1 -> m46_2  [key=0, style=solid];
m46_2 -> m46_3  [key=0, style=solid];
m46_3 -> m46_0  [color=blue, key=0, style=bold];
m46_17 -> m46_18  [key=0, style=solid];
m46_18 -> m46_19  [key=0, style=solid];
m46_18 -> m46_22  [key=2, style=dotted];
m46_18 -> m46_20  [color=darkseagreen4, key=1, label=combiner, style=dashed];
m46_19 -> m46_20  [key=0, style=solid];
m46_19 -> m46_4  [key=2, style=dotted];
m46_20 -> m46_21  [key=0, style=solid];
m46_21 -> m46_17  [color=blue, key=0, style=bold];
m46_23 -> m46_1  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.ExpressionFingerprint", style=dashed];
m46_23 -> m46_2  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.ExpressionFingerprint", style=dashed];
m46_23 -> m46_5  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.ExpressionFingerprint", style=dashed];
m46_23 -> m46_6  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.ExpressionFingerprint", style=dashed];
m46_23 -> m46_11  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.ExpressionFingerprint", style=dashed];
m46_23 -> m46_15  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.ExpressionFingerprint", style=dashed];
m46_23 -> m46_19  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.ExpressionFingerprint", style=dashed];
}
