digraph  {
n3 [label="HangFire.Filters.ClientJobExceptionContext", span=""];
n0 [cluster="HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", label="Entry HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", span="8-8"];
n1 [cluster="HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", label="Exception = exception", span="11-11"];
n2 [cluster="HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", label="Exit HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", span="8-8"];
m0_11 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.GetJobQueue(It.IsNotNull<IDbConnection>())", span="19-19"];
m0_60 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="67-67"];
m0_61 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="DelayedJobSchedulerFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues ('', '', getutcdate(), getutcdate())\r\nselect scope_identity() as Id''", span="69-72"];
m0_62 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.PersistJob(jobId));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.ExpireAt);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.NotNull(anotherJob.ExpireAt);\r\n            })", span="74-86"];
m0_63 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="67-67"];
m0_153 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", span="161-161"];
m0_154 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var correctJobQueue = new Mock<IPersistentJobQueue>();\r\n                var correctProvider = new Mock<IPersistentJobQueueProvider>();\r\n                correctProvider.Setup(x => x.GetJobQueue(It.IsNotNull<IDbConnection>()))\r\n                    .Returns(correctJobQueue.Object);\r\n\r\n                _queueProviders.Add(correctProvider.Object, new [] { ''default'' });\r\n\r\n                Commit(sql, x => x.AddToQueue(''default'', ''1''));\r\n\r\n                correctJobQueue.Verify(x => x.Enqueue(''default'', ''1''));\r\n            })", span="163-175"];
m0_155 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", span="161-161"];
m0_212 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="221-221"];
m0_213 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(2, recordCount);\r\n            })", span="223-234"];
m0_214 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="221-221"];
m0_419 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="488-488"];
m0_420 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="490-501"];
m0_421 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="488-488"];
m0_449 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="195-195"];
m0_527 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", span="621-621"];
m0_528 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }));\r\n\r\n                var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value);\r\n\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="623-638"];
m0_529 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", span="621-621"];
m0_267 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="290-290"];
m0_268 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(0.0, record.Score, 2);\r\n            })", span="292-301"];
m0_269 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="290-290"];
m0_368 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="422-422"];
m0_369 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.InsertToList(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.List'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n            })", span="424-432"];
m0_370 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="422-422"];
m0_48 [cluster="Unk.ToString", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.ToString", span=""];
m0_331 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="371-371"];
m0_332 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="373-384"];
m0_333 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="371-371"];
m0_152 [cluster="Unk.AddJobState", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.AddJobState", span=""];
m0_343 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="174-174"];
m0_305 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="339-339"];
m0_306 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="341-350"];
m0_307 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="339-339"];
m0_431 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="505-505"];
m0_432 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                });\r\n\r\n                var records = sql.Query(''select * from HangFire.List'').ToArray();\r\n\r\n                Assert.Equal(2, records.Length);\r\n                Assert.Equal(''1'', records[0].Value);\r\n                Assert.Equal(''2'', records[1].Value);\r\n            })", span="507-523"];
m0_433 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="505-505"];
m0_406 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="188-188"];
m0_49 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", span="649-649"];
m0_551 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="DelayedJobSchedulerFacts.cs", label="var transaction = new SqlServerWriteOnlyTransaction(connection, _queueProviders)", span="653-653"];
m0_552 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="DelayedJobSchedulerFacts.cs", label="action(transaction)", span="655-655"];
m0_553 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="DelayedJobSchedulerFacts.cs", label="transaction.Commit()", span="656-656"];
m0_554 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", span="649-649"];
m0_16 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="DelayedJobSchedulerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerWriteOnlyTransaction(null, _queueProviders))", span="28-29"];
m0_17 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="31-31"];
m0_18 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="26-26"];
m0_19 [cluster="Unk.Equal", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.Equal", span=""];
m0_407 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="471-471"];
m0_408 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="473-484"];
m0_409 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="471-471"];
m0_6 [cluster="Unk.Setup", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.Setup", span=""];
m0_31 [cluster="HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37"];
m0_255 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="273-273"];
m0_256 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="275-286"];
m0_257 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="273-273"];
m0_119 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="128-128"];
m0_121 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.AddJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.StateName);\r\n                Assert.Null(job.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="135-157"];
m0_120 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="DelayedJobSchedulerFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="130-133"];
m0_122 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="128-128"];
m0_15 [cluster="Unk.Then", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.Then", span=""];
m0_293 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="322-322"];
m0_294 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n                \r\n                Assert.Equal(1, recordCount);\r\n            })", span="324-335"];
m0_295 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="322-322"];
m0_50 [cluster="Unk.GetTestJob", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.GetTestJob", span=""];
m0_7 [cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", span="23-23"];
m0_280 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="155-155"];
m0_32 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", span="44-44"];
m0_34 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(-1) < job.ExpireAt && job.ExpireAt <= DateTime.UtcNow.AddDays(1));\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.ExpireAt);\r\n            })", span="51-63"];
m0_33 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", file="DelayedJobSchedulerFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="46-49"];
m0_35 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", span="44-44"];
m0_500 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="597-597"];
m0_501 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(null, new Dictionary<string, string>())));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="599-605"];
m0_502 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="597-597"];
m0_344 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="388-388"];
m0_345 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="390-401"];
m0_346 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="388-388"];
m0_224 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="238-238"];
m0_225 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="240-249"];
m0_226 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="238-238"];
m0_356 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="405-405"];
m0_357 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="407-418"];
m0_358 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="405-405"];
m0_319 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="354-354"];
m0_320 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                });\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="356-367"];
m0_321 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="354-354"];
m0_441 [cluster="Unk.ToArray", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.ToArray", span=""];
m0_52 [cluster="System.DateTime.AddDays(double)", file="DelayedJobSchedulerFacts.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m0_25 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="DelayedJobSchedulerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerWriteOnlyTransaction(ConnectionUtils.CreateConnection(), null))", span="37-38"];
m0_26 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''queueProviders'', exception.ParamName)", span="40-40"];
m0_27 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", span="35-35"];
m0_28 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="38-38"];
m0_5 [cluster="string.Format(string, object)", file="DelayedJobSchedulerFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m0_8 [cluster="Unk.Returns", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.Returns", span=""];
m0_9 [cluster="PersistentJobQueueProviderCollection.cstr", file="DelayedJobSchedulerFacts.cs", label="Entry PersistentJobQueueProviderCollection.cstr", span=""];
m0_10 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="19-19"];
m0_555 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="50-50"];
m0_143 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="141-141"];
m0_82 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="97-124"];
m0_89 [cluster="lambda expression", color=green, community=0, file="DelayedJobSchedulerFacts.cs", label="0: Commit(sql, x => x.SetJobState(jobId, state.Object))", span="108-108"];
m0_83 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="99-99"];
m0_85 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var state = new Mock<IState>()", span="102-102"];
m0_88 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="105-106"];
m0_90 [cluster="lambda expression", color=green, community=0, file="DelayedJobSchedulerFacts.cs", label="0: var job = GetTestJob(sql, jobId)", span="110-110"];
m0_115 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="108-108"];
m0_91 [cluster="lambda expression", color=green, community=0, file="DelayedJobSchedulerFacts.cs", label="0: Assert.Equal(''State'', job.StateName)", span="111-111"];
m0_92 [cluster="lambda expression", color=green, community=0, file="DelayedJobSchedulerFacts.cs", label="0: Assert.NotNull(job.StateId)", span="112-112"];
m0_93 [cluster="lambda expression", color=green, community=0, file="DelayedJobSchedulerFacts.cs", label="0: var anotherJob = GetTestJob(sql, anotherJobId)", span="114-114"];
m0_84 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="100-100"];
m0_94 [cluster="lambda expression", color=green, community=0, file="DelayedJobSchedulerFacts.cs", label="0: Assert.Null(anotherJob.StateName)", span="115-115"];
m0_95 [cluster="lambda expression", color=green, community=0, file="DelayedJobSchedulerFacts.cs", label="0: Assert.Null(anotherJob.StateId)", span="116-116"];
m0_96 [cluster="lambda expression", color=green, community=0, file="DelayedJobSchedulerFacts.cs", label="0: var jobState = sql.Query(''select * from HangFire.State'').Single()", span="118-118"];
m0_97 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="119-119"];
m0_98 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''State'', jobState.Name)", span="120-120"];
m0_99 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''Reason'', jobState.Reason)", span="121-121"];
m0_100 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.NotNull(jobState.CreatedAt)", span="122-122"];
m0_101 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="123-123"];
m0_116 [cluster="lambda expression", color=green, community=0, file="DelayedJobSchedulerFacts.cs", label="0: x.SetJobState(jobId, state.Object)", span="108-108"];
m0_117 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="108-108"];
m0_21 [cluster="Unk.Contains", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.Contains", span=""];
m0_40 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)))", span="56-56"];
m0_41 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var job = GetTestJob(sql, jobId)", span="58-58"];
m0_43 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="61-61"];
m0_67 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x => x.PersistJob(jobId))", span="79-79"];
m0_68 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var job = GetTestJob(sql, jobId)", span="81-81"];
m0_70 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="84-84"];
m0_129 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x => x.AddJobState(jobId, state.Object))", span="145-145"];
m0_130 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var job = GetTestJob(sql, jobId)", span="147-147"];
m0_160 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="_queueProviders.Add(correctProvider.Object, new [] { ''default'' })", span="170-170"];
m0_161 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x => x.AddToQueue(''default'', ''1''))", span="172-172"];
m0_184 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x => x.IncrementCounter(''my-key''))", span="190-190"];
m0_198 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="205-205"];
m0_216 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                })", span="225-229"];
m0_228 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x => x.DecrementCounter(''my-key''))", span="242-242"];
m0_242 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="257-257"];
m0_259 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                })", span="277-281"];
m0_271 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value''))", span="294-294"];
m0_285 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                })", span="309-313"];
m0_297 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                })", span="326-330"];
m0_309 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2))", span="343-343"];
m0_323 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                })", span="358-362"];
m0_335 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                })", span="375-379"];
m0_348 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                })", span="392-396"];
m0_360 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                })", span="409-413"];
m0_372 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x => x.InsertToList(''my-key'', ''my-value''))", span="426-426"];
m0_385 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                })", span="440-444"];
m0_397 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                })", span="457-462"];
m0_411 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                })", span="475-479"];
m0_423 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                })", span="492-496"];
m0_435 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                })", span="509-516"];
m0_454 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="531-537"];
m0_468 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="550-554"];
m0_480 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                })", span="567-571"];
m0_492 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                })", span="584-588"];
m0_504 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(null, new Dictionary<string, string>())))", span="601-602"];
m0_508 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x => x.SetRangeInHash(null, new Dictionary<string, string>()))", span="602-602"];
m0_518 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(''some-hash'', null)))", span="613-614"];
m0_522 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x => x.SetRangeInHash(''some-hash'', null))", span="614-614"];
m0_531 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }))", span="625-629"];
m0_37 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="51-63"];
m0_65 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="76-76"];
m0_66 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="77-77"];
m0_102 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="97-124"];
m0_86 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="state.Setup(x => x.Name).Returns(''State'')", span="103-103"];
m0_87 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="state.Setup(x => x.Reason).Returns(''Reason'')", span="104-104"];
m0_111 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="105-105"];
m0_38 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="53-53"];
m0_39 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="54-54"];
m0_124 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="137-137"];
m0_133 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="151-151"];
m0_185 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="192-192"];
m0_199 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="207-207"];
m0_229 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="244-244"];
m0_243 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="259-259"];
m0_272 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="296-296"];
m0_310 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="345-345"];
m0_324 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="364-364"];
m0_373 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var record = sql.Query(''select * from HangFire.List'').Single()", span="428-428"];
m0_436 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var records = sql.Query(''select * from HangFire.List'').ToArray()", span="518-518"];
m0_532 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value)", span="631-634"];
m0_217 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="231-231"];
m0_260 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="283-283"];
m0_286 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="315-315"];
m0_298 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="332-332"];
m0_336 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="381-381"];
m0_349 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="398-398"];
m0_361 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="415-415"];
m0_386 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="446-446"];
m0_398 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="464-464"];
m0_412 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="481-481"];
m0_424 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="498-498"];
m0_455 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="539-539"];
m0_469 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="556-556"];
m0_481 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="573-573"];
m0_493 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="590-590"];
m0_134 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="152-152"];
m0_135 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''State'', jobState.Name)", span="153-153"];
m0_136 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''Reason'', jobState.Reason)", span="154-154"];
m0_138 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="156-156"];
m0_186 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''my-key'', record.Key)", span="194-194"];
m0_187 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(1, record.Value)", span="195-195"];
m0_188 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="196-196"];
m0_200 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''my-key'', record.Key)", span="209-209"];
m0_201 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(1, record.Value)", span="210-210"];
m0_218 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(2, recordCount)", span="233-233"];
m0_230 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''my-key'', record.Key)", span="246-246"];
m0_231 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(-1, record.Value)", span="247-247"];
m0_232 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="248-248"];
m0_244 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''my-key'', record.Key)", span="261-261"];
m0_245 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(-1, record.Value)", span="262-262"];
m0_261 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(2, recordCount)", span="285-285"];
m0_273 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''my-key'', record.Key)", span="298-298"];
m0_274 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''my-value'', record.Value)", span="299-299"];
m0_275 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(0.0, record.Score, 2)", span="300-300"];
m0_287 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(2, recordCount)", span="317-317"];
m0_299 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(1, recordCount)", span="334-334"];
m0_311 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''my-key'', record.Key)", span="347-347"];
m0_312 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''my-value'', record.Value)", span="348-348"];
m0_313 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(3.2, record.Score, 3)", span="349-349"];
m0_325 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(3.2, record.Score, 3)", span="366-366"];
m0_337 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(0, recordCount)", span="383-383"];
m0_350 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(1, recordCount)", span="400-400"];
m0_362 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(1, recordCount)", span="417-417"];
m0_374 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''my-key'', record.Key)", span="430-430"];
m0_375 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''my-value'', record.Value)", span="431-431"];
m0_387 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(2, recordCount)", span="448-448"];
m0_399 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(0, recordCount)", span="466-466"];
m0_413 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(1, recordCount)", span="483-483"];
m0_425 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(1, recordCount)", span="500-500"];
m0_437 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(2, records.Length)", span="520-520"];
m0_438 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''1'', records[0].Value)", span="521-521"];
m0_439 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''2'', records[1].Value)", span="522-522"];
m0_456 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(2, recordCount)", span="541-541"];
m0_470 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(0, recordCount)", span="558-558"];
m0_482 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(0, recordCount)", span="575-575"];
m0_494 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(1, recordCount)", span="592-592"];
m0_505 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''key'', exception.ParamName)", span="604-604"];
m0_519 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''keyValuePairs'', exception.ParamName)", span="616-616"];
m0_533 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''Value1'', result[''Key1''])", span="636-636"];
m0_534 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''Value2'', result[''Key2''])", span="637-637"];
m0_71 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.NotNull(anotherJob.ExpireAt)", span="85-85"];
m0_137 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.NotNull(jobState.CreatedAt)", span="155-155"];
m0_202 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.NotNull(record.ExpireAt)", span="211-211"];
m0_246 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.NotNull(record.ExpireAt)", span="263-263"];
m0_44 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Null(anotherJob.ExpireAt)", span="62-62"];
m0_69 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Null(job.ExpireAt)", span="82-82"];
m0_131 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Null(job.StateName)", span="148-148"];
m0_132 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.Null(job.StateId)", span="149-149"];
m0_20 [cluster="Unk.GetAllItemsFromList", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m0_22 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", span="49-49"];
m0_55 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="56-56"];
m0_42 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(-1) < job.ExpireAt && job.ExpireAt <= DateTime.UtcNow.AddDays(1))", span="59-59"];
m0_64 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="74-86"];
m0_74 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="79-79"];
m0_123 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="135-157"];
m0_125 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var state = new Mock<IState>()", span="139-139"];
m0_128 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="142-143"];
m0_149 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="145-145"];
m0_156 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="163-175"];
m0_158 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var correctProvider = new Mock<IPersistentJobQueueProvider>()", span="166-166"];
m0_159 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="correctProvider.Setup(x => x.GetJobQueue(It.IsNotNull<IDbConnection>()))\r\n                    .Returns(correctJobQueue.Object)", span="167-168"];
m0_162 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="correctJobQueue.Verify(x => x.Enqueue(''default'', ''1''))", span="174-174"];
m0_169 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="172-172"];
m0_183 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="188-197"];
m0_190 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="190-190"];
m0_197 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="203-217"];
m0_208 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="205-205"];
m0_215 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="223-234"];
m0_220 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="225-229"];
m0_227 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="240-249"];
m0_234 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="242-242"];
m0_241 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="255-269"];
m0_251 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="257-257"];
m0_258 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="275-286"];
m0_263 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="277-281"];
m0_270 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="292-301"];
m0_277 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="294-294"];
m0_284 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="307-318"];
m0_289 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="309-313"];
m0_296 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="324-335"];
m0_301 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="326-330"];
m0_308 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="341-350"];
m0_315 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="343-343"];
m0_322 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="356-367"];
m0_327 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="358-362"];
m0_334 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="373-384"];
m0_339 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="375-379"];
m0_347 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="390-401"];
m0_352 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="392-396"];
m0_359 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="407-418"];
m0_364 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="409-413"];
m0_371 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="424-432"];
m0_377 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="426-426"];
m0_384 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="438-449"];
m0_389 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="440-444"];
m0_396 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="455-467"];
m0_401 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="457-462"];
m0_410 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="473-484"];
m0_415 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="475-479"];
m0_422 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="490-501"];
m0_427 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="492-496"];
m0_434 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="507-523"];
m0_442 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="509-516"];
m0_453 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="529-542"];
m0_458 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="531-537"];
m0_467 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="548-559"];
m0_472 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="550-554"];
m0_479 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="565-576"];
m0_484 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="567-571"];
m0_491 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="582-593"];
m0_496 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="584-588"];
m0_503 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="599-605"];
m0_507 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="602-602"];
m0_509 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="602-602"];
m0_510 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="602-602"];
m0_517 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="611-617"];
m0_521 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="614-614"];
m0_523 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="614-614"];
m0_524 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="614-614"];
m0_530 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="623-638"];
m0_537 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="625-629"];
m0_45 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="51-63"];
m0_75 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.PersistJob(jobId)", span="79-79"];
m0_105 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="103-103"];
m0_108 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="104-104"];
m0_126 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="state.Setup(x => x.Name).Returns(''State'')", span="140-140"];
m0_127 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="state.Setup(x => x.Reason).Returns(''Reason'')", span="141-141"];
m0_511 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.SetRangeInHash(null, new Dictionary<string, string>())", span="602-602"];
m0_538 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="625-629"];
m0_113 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="105-105"];
m0_112 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.SerializeData()", span="105-105"];
m0_56 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.ExpireJob(jobId, TimeSpan.FromDays(1))", span="56-56"];
m0_150 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.AddJobState(jobId, state.Object)", span="145-145"];
m0_203 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var expireAt = (DateTime) record.ExpireAt", span="213-213"];
m0_247 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var expireAt = (DateTime)record.ExpireAt", span="265-265"];
m0_540 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="634-634"];
m0_543 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="634-634"];
m0_139 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="135-157"];
m0_189 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="188-197"];
m0_219 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="223-234"];
m0_233 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="240-249"];
m0_262 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="275-286"];
m0_276 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="292-301"];
m0_288 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="307-318"];
m0_300 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="324-335"];
m0_314 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="341-350"];
m0_326 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="356-367"];
m0_338 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="373-384"];
m0_351 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="390-401"];
m0_363 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="407-418"];
m0_376 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="424-432"];
m0_388 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="438-449"];
m0_400 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="455-467"];
m0_414 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="473-484"];
m0_426 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="490-501"];
m0_440 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="507-523"];
m0_457 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="529-542"];
m0_471 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="548-559"];
m0_483 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="565-576"];
m0_495 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="582-593"];
m0_506 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="599-605"];
m0_520 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="611-617"];
m0_535 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="623-638"];
m0_72 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="74-86"];
m0_167 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.GetJobQueue(It.IsNotNull<IDbConnection>())", span="167-167"];
m0_29 [cluster="Unk.DoesNotContain", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.DoesNotContain", span=""];
m0_57 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="56-56"];
m0_76 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="79-79"];
m0_146 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="142-142"];
m0_151 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="145-145"];
m0_163 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="163-175"];
m0_157 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="var correctJobQueue = new Mock<IPersistentJobQueue>()", span="165-165"];
m0_166 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="167-167"];
m0_173 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="174-174"];
m0_171 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="172-172"];
m0_170 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.AddToQueue(''default'', ''1'')", span="172-172"];
m0_192 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="190-190"];
m0_191 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.IncrementCounter(''my-key'')", span="190-190"];
m0_206 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="203-217"];
m0_210 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="205-205"];
m0_209 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.IncrementCounter(''my-key'', TimeSpan.FromDays(1))", span="205-205"];
m0_223 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="225-229"];
m0_221 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.IncrementCounter(''my-key'')", span="227-227"];
m0_222 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.IncrementCounter(''my-key'')", span="228-228"];
m0_236 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="242-242"];
m0_235 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.DecrementCounter(''my-key'')", span="242-242"];
m0_250 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="255-269"];
m0_253 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="257-257"];
m0_252 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.DecrementCounter(''my-key'', TimeSpan.FromDays(1))", span="257-257"];
m0_266 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="277-281"];
m0_264 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.DecrementCounter(''my-key'')", span="279-279"];
m0_265 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.DecrementCounter(''my-key'')", span="280-280"];
m0_279 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="294-294"];
m0_278 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="294-294"];
m0_292 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="309-313"];
m0_290 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="311-311"];
m0_291 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.AddToSet(''my-key'', ''another-value'')", span="312-312"];
m0_304 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="326-330"];
m0_302 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="328-328"];
m0_303 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="329-329"];
m0_317 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="343-343"];
m0_316 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="343-343"];
m0_330 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="358-362"];
m0_328 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="360-360"];
m0_329 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="361-361"];
m0_342 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="375-379"];
m0_340 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="377-377"];
m0_341 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.RemoveFromSet(''my-key'', ''my-value'')", span="378-378"];
m0_355 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="392-396"];
m0_353 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="394-394"];
m0_354 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.RemoveFromSet(''my-key'', ''different-value'')", span="395-395"];
m0_367 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="409-413"];
m0_365 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="411-411"];
m0_366 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.RemoveFromSet(''different-key'', ''my-value'')", span="412-412"];
m0_379 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="426-426"];
m0_378 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="426-426"];
m0_392 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="440-444"];
m0_390 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="442-442"];
m0_391 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="443-443"];
m0_405 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="457-462"];
m0_402 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="459-459"];
m0_403 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="460-460"];
m0_404 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.RemoveFromList(''my-key'', ''my-value'')", span="461-461"];
m0_418 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="475-479"];
m0_416 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="477-477"];
m0_417 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.RemoveFromList(''my-key'', ''different-value'')", span="478-478"];
m0_430 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="492-496"];
m0_428 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="494-494"];
m0_429 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.RemoveFromList(''different-key'', ''my-value'')", span="495-495"];
m0_448 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="509-516"];
m0_443 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.InsertToList(''my-key'', ''0'')", span="511-511"];
m0_444 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.InsertToList(''my-key'', ''1'')", span="512-512"];
m0_445 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.InsertToList(''my-key'', ''2'')", span="513-513"];
m0_446 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.InsertToList(''my-key'', ''3'')", span="514-514"];
m0_447 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.TrimList(''my-key'', 1, 2)", span="515-515"];
m0_463 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="531-537"];
m0_459 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.InsertToList(''my-key'', ''0'')", span="533-533"];
m0_460 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.InsertToList(''my-key'', ''1'')", span="534-534"];
m0_461 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.InsertToList(''my-key'', ''2'')", span="535-535"];
m0_462 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.TrimList(''my-key'', 1, 100)", span="536-536"];
m0_475 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="550-554"];
m0_473 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.InsertToList(''my-key'', ''0'')", span="552-552"];
m0_474 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.TrimList(''my-key'', 1, 100)", span="553-553"];
m0_487 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="567-571"];
m0_485 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.InsertToList(''my-key'', ''0'')", span="569-569"];
m0_486 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.TrimList(''my-key'', 1, 0)", span="570-570"];
m0_499 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="584-588"];
m0_497 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.InsertToList(''my-key'', ''0'')", span="586-586"];
m0_498 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.TrimList(''another-key'', 1, 0)", span="587-587"];
m0_512 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="602-602"];
m0_526 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="614-614"];
m0_525 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.SetRangeInHash(''some-hash'', null)", span="614-614"];
m0_539 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="625-629"];
m0_107 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="103-103"];
m0_106 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.Name", span="103-103"];
m0_110 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="104-104"];
m0_109 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.Reason", span="104-104"];
m0_140 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="140-140"];
m0_204 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="215-215"];
m0_205 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="216-216"];
m0_248 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="267-267"];
m0_249 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="268-268"];
m0_542 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="634-634"];
m0_541 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="(string)x.Field", span="634-634"];
m0_545 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="634-634"];
m0_544 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="(string)x.Value", span="634-634"];
m0_12 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", span="33-33"];
m0_168 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="167-167"];
m0_30 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="38-38"];
m0_148 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="142-142"];
m0_147 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.SerializeData()", span="142-142"];
m0_175 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="174-174"];
m0_174 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.Enqueue(''default'', ''1'')", span="174-174"];
m0_142 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="140-140"];
m0_141 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.Name", span="140-140"];
m0_144 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.Reason", span="141-141"];
m0_145 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="141-141"];
m0_172 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="119-119"];
m0_177 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", span="178-178"];
m0_178 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", file="DelayedJobSchedulerFacts.cs", label="return connection\r\n                .Query(''select * from HangFire.Job where id = @id'', new { id = jobId })\r\n                .Single();", span="180-182"];
m0_179 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", span="178-178"];
m0_0 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", span="16-16"];
m0_1 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="DelayedJobSchedulerFacts.cs", label="var defaultProvider = new Mock<IPersistentJobQueueProvider>()", span="18-18"];
m0_103 [cluster="Mock<IState>.cstr", file="DelayedJobSchedulerFacts.cs", label="Entry Mock<IState>.cstr", span=""];
m0_51 [cluster="System.DateTime.AddMinutes(double)", file="DelayedJobSchedulerFacts.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m0_393 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="453-453"];
m0_394 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="455-467"];
m0_395 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="453-453"];
m0_36 [cluster="Unk.UseConnection", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.UseConnection", span=""];
m0_318 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="160-160"];
m0_211 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="134-134"];
m0_118 [cluster="Unk.SetJobState", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.SetJobState", span=""];
m0_2 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="DelayedJobSchedulerFacts.cs", label="defaultProvider.Setup(x => x.GetJobQueue(It.IsNotNull<IDbConnection>()))\r\n                .Returns(new Mock<IPersistentJobQueue>().Object)", span="19-20"];
m0_3 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="DelayedJobSchedulerFacts.cs", label="_queueProviders = new PersistentJobQueueProviderCollection(defaultProvider.Object)", span="22-22"];
m0_4 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", span="16-16"];
m0_464 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="546-546"];
m0_465 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="548-559"];
m0_466 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="546-546"];
m0_59 [cluster="Unk.ExpireJob", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.ExpireJob", span=""];
m0_476 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="563-563"];
m0_477 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="565-576"];
m0_478 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="563-563"];
m0_46 [cluster="Unk.Query", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.Query", span=""];
m0_550 [cluster="System.Action<T>.Invoke(T)", file="DelayedJobSchedulerFacts.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m0_164 [cluster="Unk.Add", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.Add", span=""];
m0_73 [cluster="Unk.NotNull", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.NotNull", span=""];
m0_54 [cluster="Unk.Null", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.Null", span=""];
m0_281 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="305-305"];
m0_282 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="307-318"];
m0_283 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="305-305"];
m0_207 [cluster="System.DateTime.AddHours(double)", file="DelayedJobSchedulerFacts.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m0_488 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="580-580"];
m0_489 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="582-593"];
m0_490 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="580-580"];
m0_14 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", span="33-33"];
m0_193 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="127-127"];
m0_165 [cluster="Unk.Verify", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.Verify", span=""];
m0_13 [cluster="Unk.>", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.>", span=""];
m0_380 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="181-181"];
m0_536 [cluster="Unk.ToDictionary", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.ToDictionary", span=""];
m0_513 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="207-207"];
m0_78 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="90-90"];
m0_80 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", color=green, community=0, file="DelayedJobSchedulerFacts.cs", label="0: UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.SetJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Equal(''State'', job.StateName);\r\n                Assert.NotNull(job.StateId);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.StateName);\r\n                Assert.Null(anotherJob.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="97-124"];
m0_79 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="DelayedJobSchedulerFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="92-95"];
m0_81 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="90-90"];
m0_194 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="201-201"];
m0_195 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime) record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="203-217"];
m0_196 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="201-201"];
m0_23 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", file="DelayedJobSchedulerFacts.cs", label="Then(String.Format(''the '{0}' queue does not contain the job'', DefaultQueue))", span="51-51"];
m0_546 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="641-641"];
m0_548 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="DelayedJobSchedulerFacts.cs", label="action(connection)", span="645-645"];
m0_547 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="DelayedJobSchedulerFacts.cs", label="var connection = ConnectionUtils.CreateConnection()", span="643-643"];
m0_549 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="641-641"];
m0_514 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="609-609"];
m0_515 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(''some-hash'', null)));\r\n\r\n                Assert.Equal(''keyValuePairs'', exception.ParamName);\r\n            })", span="611-617"];
m0_516 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="609-609"];
m0_58 [cluster="System.TimeSpan.FromDays(double)", file="DelayedJobSchedulerFacts.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m0_254 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="148-148"];
m0_176 [cluster="Unk.Enqueue", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.Enqueue", span=""];
m0_237 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="141-141"];
m0_104 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DelayedJobSchedulerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_24 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", span="35-35"];
m0_114 [cluster="Unk.SerializeData", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.SerializeData", span=""];
m0_450 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="527-527"];
m0_451 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="529-542"];
m0_452 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="527-527"];
m0_238 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="253-253"];
m0_239 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime)record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="255-269"];
m0_240 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="253-253"];
m0_180 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="186-186"];
m0_181 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="188-197"];
m0_182 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="186-186"];
m0_47 [cluster="Unk.Single", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.Single", span=""];
m0_53 [cluster="Unk.True", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.True", span=""];
m0_77 [cluster="Unk.PersistJob", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.PersistJob", span=""];
m0_381 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="436-436"];
m0_382 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="DelayedJobSchedulerFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="438-449"];
m0_383 [cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="436-436"];
m0_556 [file="DelayedJobSchedulerFacts.cs", label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", span=""];
m0_562 [file="DelayedJobSchedulerFacts.cs", label=jobId, span=""];
m0_563 [file="DelayedJobSchedulerFacts.cs", label=state, span=""];
m0_561 [file="DelayedJobSchedulerFacts.cs", label=arrangeSql, span=""];
m0_567 [file="DelayedJobSchedulerFacts.cs", label=SqlConnection, span=""];
m0_568 [file="DelayedJobSchedulerFacts.cs", label=SqlConnection, span=""];
m0_559 [file="DelayedJobSchedulerFacts.cs", label=arrangeSql, span=""];
m0_557 [file="DelayedJobSchedulerFacts.cs", label=arrangeSql, span=""];
m0_564 [file="DelayedJobSchedulerFacts.cs", label=arrangeSql, span=""];
m0_560 [file="DelayedJobSchedulerFacts.cs", label=jobId, span=""];
m0_558 [file="DelayedJobSchedulerFacts.cs", label=jobId, span=""];
m0_565 [file="DelayedJobSchedulerFacts.cs", label=jobId, span=""];
m0_566 [file="DelayedJobSchedulerFacts.cs", label=state, span=""];
m1_0 [cluster="Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", file="DistributedLockTimeoutException.cs", label="Entry Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", span="6-6"];
m1_1 [cluster="Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", file="DistributedLockTimeoutException.cs", label="Exit Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", span="6-6"];
m3_12 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="InvocationDataFacts.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="45-45"];
m3_13 [cluster="Unk.Equal", file="InvocationDataFacts.cs", label="Entry Unk.Equal", span=""];
m3_0 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="InvocationDataFacts.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", span="13-13"];
m3_1 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="InvocationDataFacts.cs", label="var type = typeof(InvocationDataFacts)", span="15-15"];
m3_2 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="InvocationDataFacts.cs", label="var methodInfo = type.GetMethod(''Sample'')", span="16-16"];
m3_3 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="InvocationDataFacts.cs", label="var serializedData = new InvocationData(\r\n                type.AssemblyQualifiedName,\r\n                methodInfo.Name,\r\n                JobHelper.ToJson(new [] { typeof(string) }),\r\n                JobHelper.ToJson(new [] { JobHelper.ToJson(''Hello'') }))", span="18-22"];
m3_5 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="InvocationDataFacts.cs", label="Assert.Equal(type, job.Type)", span="26-26"];
m3_6 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="InvocationDataFacts.cs", label="Assert.Equal(methodInfo, job.Method)", span="27-27"];
m3_4 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="InvocationDataFacts.cs", label="var job = serializedData.Deserialize()", span="24-24"];
m3_7 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="InvocationDataFacts.cs", label="Assert.Equal(''Hello'', job.Args[0])", span="28-28"];
m3_8 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", file="InvocationDataFacts.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_CorrectlyDeserializes_AllTheData()", span="13-13"];
m3_56 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="InvocationDataFacts.cs", label="Entry Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", span="291-291"];
m3_63 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method()", file="InvocationDataFacts.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method()", span="153-153"];
m3_94 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method()", file="InvocationDataFacts.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method()", span="153-153"];
m3_9 [cluster="System.Type.GetMethod(string)", file="InvocationDataFacts.cs", label="Entry System.Type.GetMethod(string)", span="0-0"];
m3_49 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Sample(string)", file="InvocationDataFacts.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Sample(string)", span="143-143"];
m3_91 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Sample(string)", file="InvocationDataFacts.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Sample(string)", span="143-143"];
m3_14 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", file="InvocationDataFacts.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", span="32-32"];
m3_15 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", file="InvocationDataFacts.cs", label="var serializedData = new InvocationData(null, null, null, null)", span="34-34"];
m3_16 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", file="InvocationDataFacts.cs", label="Assert.Throws<JobLoadException>(\r\n                () => serializedData.Deserialize())", span="36-37"];
m3_17 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", file="InvocationDataFacts.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", span="32-32"];
m3_92 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.ListMethod(System.Collections.Generic.IList<string>)", file="InvocationDataFacts.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.ListMethod(System.Collections.Generic.IList<string>)", span="147-147"];
m3_93 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.ListMethod(System.Collections.Generic.IList<string>)", file="InvocationDataFacts.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.ListMethod(System.Collections.Generic.IList<string>)", span="147-147"];
m3_18 [cluster="Unk.>", file="InvocationDataFacts.cs", label="Entry Unk.>", span=""];
m3_29 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", file="InvocationDataFacts.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", span="54-54"];
m3_30 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", file="InvocationDataFacts.cs", label="var serializedData = new InvocationData(\r\n                typeof(InvocationDataFacts).AssemblyQualifiedName,\r\n                ''NonExistingMethod'',\r\n                JobHelper.ToJson(new [] { typeof(string) }),\r\n                '''')", span="56-60"];
m3_31 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", file="InvocationDataFacts.cs", label="Assert.Throws<JobLoadException>(\r\n                () => serializedData.Deserialize())", span="62-63"];
m3_32 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", file="InvocationDataFacts.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", span="54-54"];
m3_64 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", file="InvocationDataFacts.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", span="92-92"];
m3_65 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", file="InvocationDataFacts.cs", label="var serializedData = InvocationData.Serialize(\r\n                Job.FromExpression<GenericType<string>>(x => x.Method(''asd'', 123)))", span="94-95"];
m3_66 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", file="InvocationDataFacts.cs", label="var job = serializedData.Deserialize()", span="97-97"];
m3_67 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", file="InvocationDataFacts.cs", label="Assert.False(job.Method.ContainsGenericParameters)", span="99-99"];
m3_68 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", file="InvocationDataFacts.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", span="92-92"];
m3_72 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method<T2>(T1, T2)", file="InvocationDataFacts.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method<T2>(T1, T2)", span="154-154"];
m3_95 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method<T2>(T1, T2)", file="InvocationDataFacts.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method<T2>(T1, T2)", span="154-154"];
m3_58 [cluster="Unk.False", file="InvocationDataFacts.cs", label="Entry Unk.False", span=""];
m3_73 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", file="InvocationDataFacts.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", span="103-103"];
m3_74 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", file="InvocationDataFacts.cs", label="var serializedData = new InvocationData(\r\n                typeof(IParent).AssemblyQualifiedName,\r\n                ''Method'',\r\n                JobHelper.ToJson(new Type[0]),\r\n                JobHelper.ToJson(new string[0]))", span="105-109"];
m3_75 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", file="InvocationDataFacts.cs", label="var job = serializedData.Deserialize()", span="111-111"];
m3_76 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", file="InvocationDataFacts.cs", label="Assert.Equal(typeof(IParent), job.Type)", span="113-113"];
m3_77 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", file="InvocationDataFacts.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", span="103-103"];
m3_45 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="InvocationDataFacts.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="70-70"];
m3_36 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="InvocationDataFacts.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", span="67-67"];
m3_37 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="InvocationDataFacts.cs", label="var job = Job.FromExpression(() => Sample(''Hello''))", span="69-69"];
m3_38 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="InvocationDataFacts.cs", label="var invocationData = InvocationData.Serialize(job)", span="71-71"];
m3_39 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="InvocationDataFacts.cs", label="Assert.Equal(typeof(InvocationDataFacts).AssemblyQualifiedName, invocationData.Type)", span="73-73"];
m3_40 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="InvocationDataFacts.cs", label="Assert.Equal(''Sample'', invocationData.Method)", span="74-74"];
m3_41 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="InvocationDataFacts.cs", label="Assert.Equal(JobHelper.ToJson(new[] { typeof(string) }), invocationData.ParameterTypes)", span="75-75"];
m3_42 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="InvocationDataFacts.cs", label="Assert.Equal(JobHelper.ToJson(new[] { ''\''Hello\'''' }), invocationData.Arguments)", span="76-76"];
m3_43 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="InvocationDataFacts.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", span="67-67"];
m3_50 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="InvocationDataFacts.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", span="80-80"];
m3_51 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="InvocationDataFacts.cs", label="var serializedData = InvocationData.Serialize(\r\n                Job.FromExpression<GenericType<string>>(x => x.Method()))", span="82-83"];
m3_52 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="InvocationDataFacts.cs", label="var job = serializedData.Deserialize()", span="85-85"];
m3_53 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="InvocationDataFacts.cs", label="Assert.False(job.Type.GetTypeInfo().ContainsGenericParameters)", span="87-87"];
m3_54 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="InvocationDataFacts.cs", label="Assert.Equal(typeof(string), job.Type.GetGenericArguments()[0])", span="88-88"];
m3_55 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="InvocationDataFacts.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", span="80-80"];
m3_96 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.IParent.Method()", file="InvocationDataFacts.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.IParent.Method()", span="159-159"];
m3_97 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.IParent.Method()", file="InvocationDataFacts.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.IParent.Method()", span="159-159"];
m3_59 [cluster="System.Type.GetGenericArguments()", file="InvocationDataFacts.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m3_11 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="InvocationDataFacts.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m3_57 [cluster="System.Type.GetTypeInfo()", file="InvocationDataFacts.cs", label="Entry System.Type.GetTypeInfo()", span="0-0"];
m3_88 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="139-139"];
m3_20 [cluster="lambda expression", file="InvocationDataFacts.cs", label="serializedData.Deserialize()", span="37-37"];
m3_19 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="37-37"];
m3_21 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="37-37"];
m3_27 [cluster="lambda expression", file="InvocationDataFacts.cs", label="serializedData.Deserialize()", span="50-50"];
m3_26 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="50-50"];
m3_28 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="50-50"];
m3_34 [cluster="lambda expression", file="InvocationDataFacts.cs", label="serializedData.Deserialize()", span="63-63"];
m3_33 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="63-63"];
m3_35 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="63-63"];
m3_46 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="69-69"];
m3_47 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Sample(''Hello'')", span="69-69"];
m3_48 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="69-69"];
m3_60 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="83-83"];
m3_61 [cluster="lambda expression", file="InvocationDataFacts.cs", label="x.Method()", span="83-83"];
m3_62 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="83-83"];
m3_69 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Entry lambda expression", span="95-95"];
m3_70 [cluster="lambda expression", file="InvocationDataFacts.cs", label="x.Method(''asd'', 123)", span="95-95"];
m3_71 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="95-95"];
m3_89 [cluster="lambda expression", file="InvocationDataFacts.cs", label="serializedData.Deserialize()", span="139-139"];
m3_90 [cluster="lambda expression", file="InvocationDataFacts.cs", label="Exit lambda expression", span="139-139"];
m3_22 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", file="InvocationDataFacts.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", span="41-41"];
m3_23 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", file="InvocationDataFacts.cs", label="var serializedData = new InvocationData(\r\n                ''NonExistingType'',\r\n                ''Perform'',\r\n                '''',\r\n                '''')", span="43-47"];
m3_24 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", file="InvocationDataFacts.cs", label="Assert.Throws<JobLoadException>(\r\n                () => serializedData.Deserialize())", span="49-50"];
m3_25 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", file="InvocationDataFacts.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", span="41-41"];
m3_83 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", file="InvocationDataFacts.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", span="131-131"];
m3_84 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", file="InvocationDataFacts.cs", label="var serializedData = new InvocationData(\r\n                typeof(InvocationDataFacts).AssemblyQualifiedName,\r\n                ''ListMethod'',\r\n                JobHelper.ToJson(new [] { typeof(IList<string>) }),\r\n                JobHelper.ToJson(new [] { ''asdfasdf'' }))", span="133-137"];
m3_85 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", file="InvocationDataFacts.cs", label="var exception = Assert.Throws<JobLoadException>(() => serializedData.Deserialize())", span="139-139"];
m3_86 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", file="InvocationDataFacts.cs", label="Assert.IsType<JsonReaderException>(exception.InnerException)", span="140-140"];
m3_87 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", file="InvocationDataFacts.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", span="131-131"];
m3_78 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", file="InvocationDataFacts.cs", label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", span="117-117"];
m3_79 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", file="InvocationDataFacts.cs", label="var serializedData = new InvocationData(\r\n                typeof(IChild).AssemblyQualifiedName,\r\n                ''Method'',\r\n                JobHelper.ToJson(new Type[0]),\r\n                JobHelper.ToJson(new string[0]))", span="119-123"];
m3_80 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", file="InvocationDataFacts.cs", label="var job = serializedData.Deserialize()", span="125-125"];
m3_81 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", file="InvocationDataFacts.cs", label="Assert.Equal(typeof(IChild), job.Type)", span="127-127"];
m3_82 [cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", file="InvocationDataFacts.cs", label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", span="117-117"];
m3_10 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="InvocationDataFacts.cs", label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="31-31"];
m3_44 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="InvocationDataFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="233-233"];
m3_98 [file="InvocationDataFacts.cs", label=serializedData, span=""];
m3_99 [file="InvocationDataFacts.cs", label=serializedData, span=""];
m3_100 [file="InvocationDataFacts.cs", label=serializedData, span=""];
m3_101 [file="InvocationDataFacts.cs", label=serializedData, span=""];
m5_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RecurringJobSchedulerFacts.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m5_11 [cluster="HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="24-24"];
m5_12 [cluster="HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="RecurringJobSchedulerFacts.cs", label="connection == null", span="26-26"];
m5_14 [cluster="HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="RecurringJobSchedulerFacts.cs", label="return new StateMachine(connection, _handlers);", span="28-28"];
m5_13 [cluster="HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="RecurringJobSchedulerFacts.cs", label="throw new ArgumentNullException(''connection'');", span="26-26"];
m5_15 [cluster="HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.States.StateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="24-24"];
m5_0 [cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8"];
m5_1 [cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8"];
m5_16 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", span="32-32"];
m5_10 [cluster="HangFire.JobStorage.GetStateHandlers()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.JobStorage.GetStateHandlers()", span="62-62"];
m5_2 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", span="16-16"];
m5_3 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="storage == null", span="18-18"];
m5_6 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="_handlers.AddRange(storage.GetStateHandlers())", span="21-21"];
m5_4 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="throw new ArgumentNullException(''storage'');", span="18-18"];
m5_5 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="_handlers.AddRange(GlobalStateHandlers.Handlers)", span="20-20"];
m5_7 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", span="16-16"];
m5_9 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m5_17 [file="RecurringJobSchedulerFacts.cs", label="HangFire.States.StateMachineFactory", span=""];
m6_39 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Html.PerPageSelector(pager))", span="239-239"];
m6_107 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\r\n                                                    </span>\r\n                  '' +\r\n''                              </a>\r\n'')", span="663-664"];
m6_134 [cluster="Hangfire.JobStorage.GetConnection()", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m6_137 [cluster="Hangfire.Storage.JobStorageConnection.GetRecurringJobs(int, int)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Storage.JobStorageConnection.GetRecurringJobs(int, int)", span="44-44"];
m6_99 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="job.LastExecution != null", span="624-624"];
m6_43 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</th>\r\n                                <th class=\''min-width\''>'')", span="273-273"];
m6_73 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</code>\r\n'')", span="447-447"];
m6_142 [cluster="string.IsNullOrWhiteSpace(string)", file="RecurringJobsPage.generated.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m6_149 [cluster="Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", span="70-70"];
m6_66 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                                            <code title=\'''')", span="405-405"];
m6_148 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", span="83-83"];
m6_45 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</th>\r\n                                <th class=\''min-width\''>'')", span="283-283"];
m6_55 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</th>\r\n                            </tr>\r\n                        </thead>\r\n     '' +\r\n''                   <tbody>\r\n'')", span="333-334"];
m6_61 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''</td>\r\n                                    <td class=\''min-width\''>\r\n              '' +\r\n''                          '')", span="368-369"];
m6_47 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</th>\r\n                                <th>'')", span="293-293"];
m6_51 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</th>\r\n                                <th class=\''align-right min-width\''>'')", span="313-313"];
m6_60 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(job.Id)", span="363-363"];
m6_48 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.Common_Job)", span="298-298"];
m6_49 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</th>\r\n                                <th class=\''align-right min-width\''>'')", span="303-303"];
m6_54 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.Common_Created)", span="328-328"];
m6_56 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label=recurringJobs, span="339-339"];
m6_58 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(job.Id)", span="352-352"];
m6_59 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\'' />\r\n                                    </td>\r\n                                '' +\r\n''    <td class=\''min-width\''>'')", span="357-358"];
m6_52 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.RecurringJobsPage_Table_LastExecution)", span="318-318"];
m6_57 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                                <tr class=\''js-jobs-list-row hover\''>\r\n            '' +\r\n''                        <td>\r\n                                        <input typ'' +\r\n''e=\''checkbox\'' class=\''js-jobs-list-checkbox\'' name=\''jobs[]\'' value=\'''')", span="345-347"];
m6_62 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\r\n'')", span="373-373"];
m6_50 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.RecurringJobsPage_Table_NextExecution)", span="308-308"];
m6_53 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</th>\r\n                                <th class=\''align-right min-width\''>'')", span="323-323"];
m6_63 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="string cronDescription = null", span="379-379"];
m6_68 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\''>'')", span="415-415"];
m6_42 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.Common_Id)", span="268-268"];
m6_106 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Html.RelativeTime(job.LastExecution.Value))", span="658-658"];
m6_95 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                                            <em>'')", span="598-598"];
m6_140 [cluster="Hangfire.Dashboard.UrlHelper.To(string)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.UrlHelper.To(string)", span="43-43"];
m6_131 [cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", span="4-4"];
m6_79 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(job.TimeZoneId)", span="484-484"];
m6_71 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                                            <code>'')", span="437-437"];
m6_147 [cluster="Hangfire.Dashboard.UrlHelper.JobDetails(string)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.UrlHelper.JobDetails(string)", span="58-58"];
m6_143 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="RecurringJobsPage.generated.cs", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
m6_130 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="105-105"];
m6_132 [cluster="Hangfire.Dashboard.RazorPage.Query(string)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.Query(string)", span="63-63"];
m6_74 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''min-width\''>\r\n'')", span="457-458"];
m6_144 [cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", span="101-101"];
m6_16 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</h1>\r\n\r\n'')", span="113-113"];
m6_133 [cluster="int.TryParse(string, out int)", file="RecurringJobsPage.generated.cs", label="Entry int.TryParse(string, out int)", span="0-0"];
m6_135 [cluster="Hangfire.Dashboard.Pager.Pager(int, int, long)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.Pager.Pager(int, int, long)", span="29-29"];
m6_138 [cluster="Hangfire.Storage.IStorageConnection.GetRecurringJobs()", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Storage.IStorageConnection.GetRecurringJobs()", span="55-55"];
m6_9 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="var storageConnection = connection as JobStorageConnection", span="86-86"];
m6_18 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''            <div class=\''alert alert-info\''>\r\n                '')", span="124-124"];
m6_146 [cluster="string.IsNullOrEmpty(string)", file="RecurringJobsPage.generated.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m6_17 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="recurringJobs.Count == 0", span="118-118"];
m6_21 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''            <div class=\''js-jobs-list\''>\r\n                <div class=\''btn-toolbar b'' +\r\n''tn-toolbar-top\''>\r\n                    <button class=\''js-jobs-list-command btn bt'' +\r\n''n-sm btn-primary\''\r\n                            data-url=\'''')", span="146-148"];
m6_22 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Url.To(''/recurring/trigger''))", span="153-153"];
m6_41 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(@''                </div>\r\n\r\n                <div class=''''table-responsive''''>\r\n                    <table class=''''table''''>\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=''''min-width''''>\r\n                                    <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                                </th>\r\n                                <th class=''''min-width''''>'')", span="254-263"];
m6_69 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(job.Cron)", span="420-420"];
m6_145 [cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="146-146"];
m6_40 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\r\n'')", span="244-244"];
m6_96 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.Common_NotAvailable)", span="603-603"];
m6_77 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(TimeZoneInfo.FindSystemTimeZoneById(job.TimeZoneId).DisplayName)", span="474-474"];
m6_101 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                                                <a href=\'''')", span="632-632"];
m6_104 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="RecurringJobsPage.generated.cs", label="0: Write($''background-color: {JobHistoryRenderer.GetForegroundStateColor(job.LastJobState)};'')", span="648-648"];
m6_76 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                                            <span title=\'''')", span="469-469"];
m6_78 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\'' data-container=\''body\''>'')", span="479-479"];
m6_97 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</em>\r\n'')", span="608-608"];
m6_100 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="!String.IsNullOrEmpty(job.LastJobId)", span="626-626"];
m6_102 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Url.JobDetails(job.LastJobId))", span="637-637"];
m6_103 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                                                    <span class=\''label label-'' +\r\n''default label-hover\'' style=\'''')", span="642-643"];
m6_105 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                                                        '')", span="653-653"];
m6_98 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''align-right min-width\''>\r\n'')", span="618-619"];
m6_10 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="storageConnection != null", span="87-87"];
m6_11 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="pager = new Pager(from, perPage, storageConnection.GetRecurringJobCount())", span="89-89"];
m6_12 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=red, community=0, file="RecurringJobsPage.generated.cs", label="0: recurringJobs = storageConnection.GetRecurringJobs(pager.FromRecord, pager.FromRecord + pager.RecordsPerPage - 1)", span="90-90"];
m6_13 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="recurringJobs = connection.GetRecurringJobs()", span="94-94"];
m6_14 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\r\n<div class=\''row\''>\r\n    <div class=\''col-md-12\''>\r\n        <h1 class=\''page-header\'''' +\r\n''>'')", span="102-103"];
m6_15 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.RecurringJobsPage_Title)", span="108-108"];
m6_65 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="cronDescription != null", span="399-399"];
m6_24 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.RecurringJobsPage_Triggering)", span="163-163"];
m6_25 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''\''\r\n                            disabled=\''disabled\''>\r\n                        <spa'' +\r\n''n class=\''glyphicon glyphicon-play-circle\''></span>\r\n                        '')", span="168-169"];
m6_26 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: Write(Strings.RecurringJobsPage_TriggerNow)", span="174-174"];
m6_27 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: WriteLiteral(''\r\n                    </button>\r\n\r\n                    <button class=\''js-jobs-lis'' +\r\n''t-command btn btn-sm btn-default\''\r\n                            data-url=\'''')", span="179-180"];
m6_28 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: Write(Url.To(''/recurring/remove''))", span="185-185"];
m6_29 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\''\r\n                            data-loading-text=\'''')", span="190-190"];
m6_30 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.Common_Deleting)", span="195-195"];
m6_32 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.Common_DeleteConfirm)", span="205-205"];
m6_33 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\''\r\n                            disabled=\''disabled\''>\r\n                        <spa'' +\r\n''n class=\''glyphicon glyphicon-remove\''></span>\r\n                        '')", span="210-211"];
m6_35 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\r\n                    </button>\r\n\r\n'')", span="221-221"];
m6_37 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                        '')", span="232-232"];
m6_31 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\''\r\n                            data-confirm=\'''')", span="200-200"];
m6_34 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.Common_Delete)", span="216-216"];
m6_36 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="pager != null", span="226-226"];
m6_38 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral('' '')", span="234-234"];
m6_141 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="76-76"];
m6_0 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", span="57-57"];
m6_1 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\r\n'')", span="61-61"];
m6_2 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Layout = new LayoutPage(Strings.RecurringJobsPage_Title)", span="74-74"];
m6_3 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="List<RecurringJobDto> recurringJobs", span="75-75"];
m6_4 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="int from, perPage", span="77-77"];
m6_5 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="int.TryParse(Query(''from''), out from)", span="79-79"];
m6_6 [cluster="HangFire.States.JobState.GetProperties()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.States.JobState.GetProperties()", span="24-24"];
m6_7 [cluster="HangFire.States.JobState.GetProperties()", file="RecurringJobsPage.generated.cs", label="return new Dictionary<string, string>();", span="26-26"];
m6_8 [cluster="HangFire.States.JobState.GetProperties()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.States.JobState.GetProperties()", span="24-24"];
m6_122 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="pager != null", span="786-786"];
m6_125 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Html.Paginator(pager))", span="799-799"];
m6_19 [cluster="HangFire.States.ScheduledStateDescriptor.ScheduledStateDescriptor()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.States.ScheduledStateDescriptor.ScheduledStateDescriptor()", span="5-5"];
m6_20 [cluster="HangFire.States.SucceededStateDescriptor.SucceededStateDescriptor()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.States.SucceededStateDescriptor.SucceededStateDescriptor()", span="5-5"];
m6_23 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="RecurringJobsPage.generated.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m6_44 [cluster="Unk.AcquireLock", file="RecurringJobsPage.generated.cs", label="Entry Unk.AcquireLock", span=""];
m6_46 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="RecurringJobsPage.generated.cs", label="Entry HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", span="121-121"];
m6_121 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                        </tbody>\r\n                    </table>\r\n                <'' +\r\n''/div>\r\n\r\n'')", span="780-781"];
m6_72 [cluster="Unk.AppendHistory", file="RecurringJobsPage.generated.cs", label="Entry Unk.AppendHistory", span=""];
m6_75 [cluster="Unk.Commit", file="RecurringJobsPage.generated.cs", label="Entry Unk.Commit", span=""];
m6_84 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="RecurringJobsPage.generated.cs", label="Entry HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", span="131-131"];
m6_87 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="RecurringJobsPage.generated.cs", label=appendToJob, span="137-137"];
m6_90 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="RecurringJobsPage.generated.cs", label="properties.Add(''State'', state.StateName)", span="151-151"];
m6_93 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="RecurringJobsPage.generated.cs", label="transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', state.JobId),\r\n                JobHelper.ToJson(properties)))", span="155-157"];
m6_94 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="RecurringJobsPage.generated.cs", label="Exit HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", span="131-131"];
m6_111 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label=properties, span=""];
m6_117 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="job.CreatedAt != null", span="736-736"];
m6_118 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Html.RelativeTime(job.CreatedAt.Value))", span="744-744"];
m6_64 [cluster="Unk.GetValueFromHash", file="RecurringJobsPage.generated.cs", label="Entry Unk.GetValueFromHash", span=""];
m6_67 [cluster="Unk.IsNullOrEmpty", file="RecurringJobsPage.generated.cs", label="Entry Unk.IsNullOrEmpty", span=""];
m6_70 [cluster="Unk.QueueCommand", file="RecurringJobsPage.generated.cs", label="Entry Unk.QueueCommand", span=""];
m6_81 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="RecurringJobsPage.generated.cs", label="AppendHistory(transaction, state, appendToJob)", span="126-126"];
m6_80 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: var transaction = redis.CreateTransaction()", span="124-124"];
m6_82 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="RecurringJobsPage.generated.cs", label="transaction.Commit()", span="127-127"];
m6_83 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="RecurringJobsPage.generated.cs", label="Exit HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", span="121-121"];
m6_85 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="RecurringJobsPage.generated.cs", label="var properties = state.GetProperties()", span="134-134"];
m6_89 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="RecurringJobsPage.generated.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', state.JobId),\r\n                    properties))", span="146-148"];
m6_86 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", color=green, community=0, file="RecurringJobsPage.generated.cs", label="0: var now = DateTime.UtcNow", span="135-135"];
m6_88 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="RecurringJobsPage.generated.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}'', state.JobId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''State'', state.StateName },\r\n                        }))", span="139-144"];
m6_91 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="RecurringJobsPage.generated.cs", label="properties.Add(''Reason'', state.Reason)", span="152-152"];
m6_92 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="RecurringJobsPage.generated.cs", label="properties.Add(''CreatedAt'', JobHelper.ToStringTimestamp(now))", span="153-153"];
m6_113 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                                            <em>'')", span="710-710"];
m6_108 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                                                <em>\r\n                           '' +\r\n''                         '')", span="676-677"];
m6_109 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="HangFire.States.JobState", span=""];
m6_110 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="HangFire.States.JobState", span=""];
m6_112 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\r\n                                                </em>\r\n'')", span="697-697"];
m6_114 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Write(Strings.Common_NotAvailable)", span="715-715"];
m6_115 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''</em>\r\n'')", span="720-720"];
m6_116 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''align-right min-width\''>\r\n'')", span="730-731"];
m6_119 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                                            <em>N/A</em>\r\n'')", span="759-759"];
m6_120 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                                    </td>\r\n                                </tr>\r'' +\r\n''\n'')", span="769-770"];
m6_123 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''                    '')", span="792-792"];
m6_127 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''            </div>\r\n'')", span="814-814"];
m6_124 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral('' '')", span="794-794"];
m6_126 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''\r\n'')", span="804-804"];
m6_128 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="WriteLiteral(''    </div>\r\n</div>    '')", span="824-824"];
m6_129 [cluster="Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", label="Exit Hangfire.Dashboard.Pages.RecurringJobsPage.Execute()", span="57-57"];
m6_139 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="113-113"];
m6_136 [cluster="Hangfire.Storage.JobStorageConnection.GetRecurringJobCount()", file="RecurringJobsPage.generated.cs", label="Entry Hangfire.Storage.JobStorageConnection.GetRecurringJobCount()", span="38-38"];
m6_150 [file="RecurringJobsPage.generated.cs", label="Hangfire.Dashboard.Pages.RecurringJobsPage", span=""];
m8_230 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m8_89 [cluster="System.Collections.Generic.List<T>.List()", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m8_372 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="45-45"];
m8_113 [cluster="long.Parse(string)", file="SqlServerMonitoringApi.cs", label="Entry long.Parse(string)", span="0-0"];
m8_389 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="SqlServerMonitoringApi.cs", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
m8_90 [cluster="Hangfire.Storage.Monitoring.ServerDto.ServerDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.ServerDto.ServerDto()", span="21-21"];
m8_390 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m8_28 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="67-67"];
m8_29 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, FailedState.StateName));", span="69-70"];
m8_30 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="67-67"];
m8_142 [cluster="Hangfire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="18-18"];
m8_101 [cluster="Hangfire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="23-23"];
m8_377 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="523-523"];
m8_378 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="var result = new List<KeyValuePair<string, TDto>>(jobs.Count)", span="527-527"];
m8_379 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label=jobs, span="530-530"];
m8_384 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="dto = selector(job, DeserializeJob(job.InvocationData, job.Arguments), stateData)", span="541-541"];
m8_385 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="result.Add(new KeyValuePair<string, TDto>(\r\n                    job.Id.ToString(), dto))", span="544-545"];
m8_386 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="return new JobList<TDto>(result);", span="548-548"];
m8_380 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="var dto = default(TDto)", span="532-532"];
m8_381 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="job.InvocationData != null", span="534-534"];
m8_382 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="var deserializedData = JobHelper.FromJson<Dictionary<string, string>>(job.StateData)", span="536-536"];
m8_383 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: var stateData = deserializedData != null\r\n                        ? new Dictionary<string, string>(deserializedData, StringComparer.OrdinalIgnoreCase)\r\n                        : null", span="543-545"];
m8_387 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="523-523"];
m8_237 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="306-306"];
m8_238 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, DeletedState.StateName));", span="308-309"];
m8_239 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="306-306"];
m8_403 [cluster="Unk.ToString", file="SqlServerMonitoringApi.cs", label="Entry Unk.ToString", span=""];
m8_250 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m8_196 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="253-253"];
m8_197 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''failed''));", span="255-256"];
m8_198 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="253-253"];
m8_345 [cluster="Unk.DeserializeJobs", file="SqlServerMonitoringApi.cs", label="Entry Unk.DeserializeJobs", span=""];
m8_243 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="312-312"];
m8_244 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="string sql = String.Format(@''\r\nset transaction isolation level read committed;\r\nselect count(Id) from [{0}].Job with (nolock) where StateName = N'Enqueued';\r\nselect count(Id) from [{0}].Job with (nolock) where StateName = N'Failed';\r\nselect count(Id) from [{0}].Job with (nolock) where StateName = N'Processing';\r\nselect count(Id) from [{0}].Job with (nolock) where StateName = N'Scheduled';\r\nselect count(Id) from [{0}].Server with (nolock);\r\nselect sum(s.[Value]) from (\r\n    select sum([Value]) as [Value] from [{0}].Counter with (readpast) where [Key] = N'stats:succeeded'\r\n    union all\r\n    select [Value] from [{0}].AggregatedCounter with (nolock) where [Key] = N'stats:succeeded'\r\n) as s;\r\nselect sum(s.[Value]) from (\r\n    select sum([Value]) as [Value] from [{0}].Counter with (readpast) where [Key] = N'stats:deleted'\r\n    union all\r\n    select [Value] from [{0}].AggregatedCounter with (nolock) where [Key] = N'stats:deleted'\r\n) as s;\r\n\r\nselect count(*) from [{0}].[Set] with (nolock) where [Key] = N'recurring-jobs';\r\n                '', _storage.SchemaName)", span="314-333"];
m8_245 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="var statistics = UseConnection(connection =>\r\n            {\r\n                var stats = new StatisticsDto();\r\n                using (var multi = connection.QueryMultiple(sql, commandTimeout: _storage.CommandTimeout))\r\n                {\r\n                    stats.Enqueued = multi.ReadSingle<int>();\r\n                    stats.Failed = multi.ReadSingle<int>();\r\n                    stats.Processing = multi.ReadSingle<int>();\r\n                    stats.Scheduled = multi.ReadSingle<int>();\r\n\r\n                    stats.Servers = multi.ReadSingle<int>();\r\n\r\n                    stats.Succeeded = multi.ReadSingleOrDefault<long?>() ?? 0;\r\n                    stats.Deleted = multi.ReadSingleOrDefault<long?>() ?? 0;\r\n\r\n                    stats.Recurring = multi.ReadSingle<int>();\r\n                }\r\n                return stats;\r\n            })", span="335-353"];
m8_246 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="statistics.Queues = _storage.QueueProviders\r\n                .SelectMany(x => x.GetJobQueueMonitoringApi().GetQueues())\r\n                .Count()", span="355-357"];
m8_247 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="return statistics;", span="359-359"];
m8_248 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="312-312"];
m8_181 [cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="28-28"];
m8_176 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="238-238"];
m8_177 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="var queueApi = GetQueueApi(queue)", span="240-240"];
m8_178 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="var fetchedJobIds = queueApi.GetFetchedJobIds(queue, from, perPage)", span="241-241"];
m8_179 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => FetchedJobs(connection, fetchedJobIds.Select(x => (long)x).ToArray()));", span="244-244"];
m8_180 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="238-238"];
m8_338 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<DbConnection, T>)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<DbConnection, T>)", span="179-179"];
m8_355 [cluster="Hangfire.SqlServer.Entities.SqlJob.SqlJob()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.Entities.SqlJob.SqlJob()", span="20-20"];
m8_321 [cluster="Unk.ContainsKey", file="SqlServerMonitoringApi.cs", label="Entry Unk.ContainsKey", span=""];
m8_6 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerMonitoringApi.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m8_112 [cluster="Hangfire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="23-23"];
m8_160 [cluster="Unk.EnqueuedJobs", file="SqlServerMonitoringApi.cs", label="Entry Unk.EnqueuedJobs", span=""];
m8_404 [cluster="Hangfire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21"];
m8_269 [cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", span="22-22"];
m8_169 [cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="25-25"];
m8_185 [cluster="Unk.FetchedJobs", file="SqlServerMonitoringApi.cs", label="Entry Unk.FetchedJobs", span=""];
m8_146 [cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi()", span="21-21"];
m8_51 [cluster="string.Equals(string, System.StringComparison)", file="SqlServerMonitoringApi.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m8_124 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", span="197-197"];
m8_125 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="var tuples = _storage.QueueProviders\r\n                .Select(x => x.GetJobQueueMonitoringApi())\r\n                .SelectMany(x => x.GetQueues(), (monitoring, queue) => new { Monitoring = monitoring, Queue = queue })\r\n                .OrderBy(x => x.Queue)\r\n                .ToArray()", span="199-203"];
m8_126 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length)", span="205-205"];
m8_127 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label=tuples, span="208-208"];
m8_131 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = tuple.Queue,\r\n                    Length = counters.EnqueuedCount ?? 0,\r\n                    Fetched = counters.FetchedCount,\r\n                    FirstJobs = firstJobs\r\n                })", span="217-223"];
m8_132 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="return result;", span="226-226"];
m8_128 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue, 0, 5)", span="210-210"];
m8_129 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue)", span="211-211"];
m8_130 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="var firstJobs = UseConnection(connection => \r\n                    EnqueuedJobs(connection, enqueuedJobIds.Select(x => (long)x).ToArray()))", span="214-215"];
m8_133 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", span="197-197"];
m8_137 [cluster="Unk.ToArray", file="SqlServerMonitoringApi.cs", label="Entry Unk.ToArray", span=""];
m8_299 [cluster="System.DateTime.AddDays(double)", file="SqlServerMonitoringApi.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m8_371 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m8_0 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", span="37-37"];
m8_1 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="SqlServerMonitoringApi.cs", label="storage == null", span="39-39"];
m8_2 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="SqlServerMonitoringApi.cs", label="throw new ArgumentNullException(nameof(storage));", span="39-39"];
m8_3 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="SqlServerMonitoringApi.cs", label="_storage = storage", span="41-41"];
m8_4 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="SqlServerMonitoringApi.cs", label="_jobListLimit = jobListLimit", span="42-42"];
m8_5 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", span="37-37"];
m8_114 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="183-183"];
m8_115 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    InDeletedState = DeletedState.StateName.Equals(sqlJob.StateName, StringComparison.OrdinalIgnoreCase),\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                }));", span="189-199"];
m8_116 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="183-183"];
m8_281 [cluster="Unk.GetTimelineStats", file="SqlServerMonitoringApi.cs", label="Entry Unk.GetTimelineStats", span=""];
m8_229 [cluster="Hangfire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21"];
m8_356 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="454-461"];
m8_12 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="47-48"];
m8_13 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetNumberOfJobsByStateName(connection, ScheduledState.StateName)", span="48-48"];
m8_14 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="47-48"];
m8_31 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="69-70"];
m8_32 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetNumberOfJobsByStateName(connection, FailedState.StateName)", span="70-70"];
m8_33 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="69-70"];
m8_37 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="75-76"];
m8_38 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetNumberOfJobsByStateName(connection, ProcessingState.StateName)", span="76-76"];
m8_39 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="75-76"];
m8_44 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    InProcessingState = ProcessingState.StateName.Equals(sqlJob.StateName, StringComparison.OrdinalIgnoreCase),\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeNullableDateTime(stateData[''StartedAt'']),\r\n                })", span="81-91"];
m8_43 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="81-90"];
m8_45 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="81-90"];
m8_47 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="85-90"];
m8_48 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    InProcessingState = ProcessingState.StateName.Equals(sqlJob.StateName, StringComparison.OrdinalIgnoreCase),\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeNullableDateTime(stateData[''StartedAt'']),\r\n                }", span="85-91"];
m8_49 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="85-90"];
m8_57 [cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs", label="0: GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                })", span="95-104"];
m8_56 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="95-104"];
m8_58 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    InScheduledState = ScheduledState.StateName.Equals(sqlJob.StateName, StringComparison.OrdinalIgnoreCase),\r\n                    EnqueueAt = JobHelper.DeserializeNullableDateTime(stateData[''EnqueueAt'']) ?? DateTime.MinValue,\r\n                    ScheduledAt = JobHelper.DeserializeNullableDateTime(stateData[''ScheduledAt''])\r\n                })", span="96-106"];
m8_59 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="99-104"];
m8_60 [cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs", label="0: new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                }", span="99-104"];
m8_61 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    InScheduledState = ScheduledState.StateName.Equals(sqlJob.StateName, StringComparison.OrdinalIgnoreCase),\r\n                    EnqueueAt = JobHelper.DeserializeNullableDateTime(stateData[''EnqueueAt'']) ?? DateTime.MinValue,\r\n                    ScheduledAt = JobHelper.DeserializeNullableDateTime(stateData[''ScheduledAt''])\r\n                }", span="100-106"];
m8_66 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="109-110"];
m8_67 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetTimelineStats(connection, ''succeeded'')", span="110-110"];
m8_68 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="109-110"];
m8_73 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="115-116"];
m8_74 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetTimelineStats(connection, ''failed'')", span="116-116"];
m8_75 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="115-116"];
m8_80 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="121-144"];
m8_81 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var servers = connection.Query<Entities.Server>(\r\n                    $@''select * from [{_storage.SchemaName}].Server with (nolock)'', commandTimeout: _storage.CommandTimeout)\r\n                    .ToList()", span="123-125"];
m8_82 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var result = new List<ServerDto>()", span="127-127"];
m8_83 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label=servers, span="130-130"];
m8_85 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt ?? DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    })", span="133-140"];
m8_86 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="return result;", span="143-143"];
m8_84 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="132-132"];
m8_87 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="121-144"];
m8_96 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                })", span="149-162"];
m8_95 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="149-149"];
m8_97 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    InFailedState = FailedState.StateName.Equals(sqlJob.StateName, StringComparison.OrdinalIgnoreCase),\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                })", span="151-165"];
m8_98 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="154-162"];
m8_99 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }", span="154-162"];
m8_100 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    InFailedState = FailedState.StateName.Equals(sqlJob.StateName, StringComparison.OrdinalIgnoreCase),\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }", span="156-165"];
m8_107 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    InSucceededState = SucceededState.StateName.Equals(sqlJob.StateName, StringComparison.OrdinalIgnoreCase),\r\n                    Result = stateData[''Result''],\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                })", span="170-184"];
m8_106 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="167-180"];
m8_108 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="167-180"];
m8_109 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="172-180"];
m8_110 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    InSucceededState = SucceededState.StateName.Equals(sqlJob.StateName, StringComparison.OrdinalIgnoreCase),\r\n                    Result = stateData[''Result''],\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }", span="175-184"];
m8_111 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="172-180"];
m8_118 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    InDeletedState = DeletedState.StateName.Equals(sqlJob.StateName, StringComparison.OrdinalIgnoreCase),\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                })", span="189-199"];
m8_117 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="185-194"];
m8_119 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="185-194"];
m8_120 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="190-194"];
m8_121 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    InDeletedState = DeletedState.StateName.Equals(sqlJob.StateName, StringComparison.OrdinalIgnoreCase),\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                }", span="194-199"];
m8_122 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="190-194"];
m8_143 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="200-200"];
m8_147 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="201-201"];
m8_151 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="201-201"];
m8_154 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="202-202"];
m8_158 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="EnqueuedJobs(connection, enqueuedJobIds.Select(x => (long)x).ToArray())", span="215-215"];
m8_157 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="214-215"];
m8_144 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.GetJobQueueMonitoringApi()", span="200-200"];
m8_145 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="200-200"];
m8_148 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.GetQueues()", span="201-201"];
m8_149 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="201-201"];
m8_152 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="new { Monitoring = monitoring, Queue = queue }", span="201-201"];
m8_153 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="201-201"];
m8_155 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Queue", span="202-202"];
m8_156 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="202-202"];
m8_159 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="214-215"];
m8_161 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="215-215"];
m8_162 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="(long)x", span="215-215"];
m8_163 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="215-215"];
m8_171 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="EnqueuedJobs(connection, enqueuedJobIds.Select(x => (long)x).ToArray())", span="235-235"];
m8_170 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="235-235"];
m8_172 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="235-235"];
m8_173 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="235-235"];
m8_174 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="(long)x", span="235-235"];
m8_175 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="235-235"];
m8_183 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="FetchedJobs(connection, fetchedJobIds.Select(x => (long)x).ToArray())", span="244-244"];
m8_182 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="244-244"];
m8_184 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="244-244"];
m8_186 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="244-244"];
m8_187 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="(long)x", span="244-244"];
m8_188 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="244-244"];
m8_192 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="249-250"];
m8_193 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetHourlyTimelineStats(connection, ''succeeded'')", span="250-250"];
m8_194 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="249-250"];
m8_199 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="255-256"];
m8_200 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetHourlyTimelineStats(connection, ''failed'')", span="256-256"];
m8_201 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="255-256"];
m8_207 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var multi = connection.QueryMultiple(sql, new { id = jobId }, commandTimeout: _storage.CommandTimeout)", span="268-268"];
m8_205 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="261-297"];
m8_206 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="string sql = $@''\r\nselect * from [{_storage.SchemaName}].Job with (nolock) where Id = @id\r\nselect * from [{_storage.SchemaName}].JobParameter with (nolock) where JobId = @id\r\nselect * from [{_storage.SchemaName}].State with (nolock) where JobId = @id order by Id desc''", span="263-266"];
m8_208 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var job = multi.Read<SqlJob>().SingleOrDefault()", span="270-270"];
m8_211 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="273-273"];
m8_212 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new SafeDictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            })\r\n                            .ToList()", span="279-291"];
m8_209 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="job == null", span="271-271"];
m8_213 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        ExpireAt = job.ExpireAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };", span="288-295"];
m8_210 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="return null;", span="271-271"];
m8_220 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="273-273"];
m8_223 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="273-273"];
m8_226 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="277-285"];
m8_214 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="261-297"];
m8_221 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Name", span="273-273"];
m8_222 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="273-273"];
m8_224 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Value", span="273-273"];
m8_225 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="273-273"];
m8_227 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new SafeDictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            }", span="282-290"];
m8_228 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="277-285"];
m8_234 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="302-303"];
m8_235 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetNumberOfJobsByStateName(connection, SucceededState.StateName)", span="303-303"];
m8_236 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="302-303"];
m8_240 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="308-309"];
m8_241 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetNumberOfJobsByStateName(connection, DeletedState.StateName)", span="309-309"];
m8_242 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="308-309"];
m8_254 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var multi = connection.QueryMultiple(sql, commandTimeout: _storage.CommandTimeout)", span="338-338"];
m8_252 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="335-353"];
m8_266 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="356-356"];
m8_253 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var stats = new StatisticsDto()", span="337-337"];
m8_255 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="stats.Enqueued = multi.ReadSingle<int>()", span="340-340"];
m8_256 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="stats.Failed = multi.ReadSingle<int>()", span="341-341"];
m8_257 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="stats.Processing = multi.ReadSingle<int>()", span="342-342"];
m8_258 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="stats.Scheduled = multi.ReadSingle<int>()", span="343-343"];
m8_259 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="stats.Servers = multi.ReadSingle<int>()", span="345-345"];
m8_260 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="stats.Succeeded = multi.ReadSingleOrDefault<long?>() ?? 0", span="347-347"];
m8_261 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="stats.Deleted = multi.ReadSingleOrDefault<long?>() ?? 0", span="348-348"];
m8_262 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="stats.Recurring = multi.ReadSingle<int>()", span="350-350"];
m8_263 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="return stats;", span="352-352"];
m8_264 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="335-353"];
m8_267 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.GetJobQueueMonitoringApi().GetQueues()", span="356-356"];
m8_268 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="356-356"];
m8_283 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="$''stats:{type}:{x.ToString(''yyyy-MM-dd-HH'')}''", span="372-372"];
m8_282 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="372-372"];
m8_286 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="372-372"];
m8_284 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="372-372"];
m8_287 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label=x, span="372-372"];
m8_288 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="372-372"];
m8_301 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="$''stats:{type}:{x.ToString(''yyyy-MM-dd'')}''", span="387-387"];
m8_300 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="387-387"];
m8_303 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="387-387"];
m8_302 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="387-387"];
m8_304 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label=x, span="387-387"];
m8_305 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="387-387"];
m8_325 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="404-404"];
m8_328 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="404-404"];
m8_326 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="(string)x.Key", span="404-404"];
m8_327 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="404-404"];
m8_329 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="(long)x.Count", span="404-404"];
m8_330 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="404-404"];
m8_346 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="446-446"];
m8_349 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="446-446"];
m8_353 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="jobs.ContainsKey(jobId) ? jobs[jobId] : new SqlJob { Id = jobId }", span="449-449"];
m8_352 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="449-449"];
m8_347 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Id", span="446-446"];
m8_348 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="446-446"];
m8_350 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label=x, span="446-446"];
m8_351 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="446-446"];
m8_354 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="449-449"];
m8_357 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    InEnqueuedState = EnqueuedState.StateName.Equals(sqlJob.StateName, StringComparison.OrdinalIgnoreCase),\r\n                    EnqueuedAt = EnqueuedState.StateName.Equals(sqlJob.StateName, StringComparison.OrdinalIgnoreCase)\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                }", span="459-467"];
m8_358 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="454-461"];
m8_91 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m8_88 [cluster="Unk.ToList", file="SqlServerMonitoringApi.cs", label="Entry Unk.ToList", span=""];
m8_324 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m8_23 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="59-59"];
m8_24 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SqlServerMonitoringApi.cs", label="var queueApi = GetQueueApi(queue)", span="61-61"];
m8_25 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SqlServerMonitoringApi.cs", label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="62-62"];
m8_26 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SqlServerMonitoringApi.cs", label="return counters.FetchedCount ?? 0;", span="64-64"];
m8_27 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="59-59"];
m8_392 [cluster="Hangfire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="22-22"];
m8_393 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(DbConnection, System.Collections.Generic.IEnumerable<long>)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(DbConnection, System.Collections.Generic.IEnumerable<long>)", span="551-551"];
m8_394 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(DbConnection, System.Collections.Generic.IEnumerable<long>)", file="SqlServerMonitoringApi.cs", label="string fetchedJobsSql = \r\n$@''select j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom [{_storage.SchemaName}].Job j with (nolock)\r\nleft join [{_storage.SchemaName}].State s with (nolock) on s.Id = j.StateId\r\nwhere j.Id in @jobIds''", span="553-557"];
m8_395 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(DbConnection, System.Collections.Generic.IEnumerable<long>)", file="SqlServerMonitoringApi.cs", label="var jobs = connection.Query<SqlJob>(\r\n                fetchedJobsSql,\r\n                new { jobIds = jobIds },\r\n                commandTimeout: _storage.CommandTimeout)\r\n                .ToList()", span="559-563"];
m8_396 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(DbConnection, System.Collections.Generic.IEnumerable<long>)", file="SqlServerMonitoringApi.cs", label="var result = new List<KeyValuePair<string, FetchedJobDto>>(jobs.Count)", span="565-565"];
m8_397 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(DbConnection, System.Collections.Generic.IEnumerable<long>)", file="SqlServerMonitoringApi.cs", label=jobs, span="568-568"];
m8_398 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(DbConnection, System.Collections.Generic.IEnumerable<long>)", file="SqlServerMonitoringApi.cs", label="result.Add(new KeyValuePair<string, FetchedJobDto>(\r\n                    job.Id.ToString(),\r\n                    new FetchedJobDto\r\n                    {\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        State = job.StateName,\r\n                    }))", span="570-576"];
m8_399 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(DbConnection, System.Collections.Generic.IEnumerable<long>)", file="SqlServerMonitoringApi.cs", label="return new JobList<FetchedJobDto>(result);", span="579-579"];
m8_400 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(DbConnection, System.Collections.Generic.IEnumerable<long>)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(DbConnection, System.Collections.Generic.IEnumerable<long>)", span="551-551"];
m8_62 [cluster="Hangfire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", span="23-23"];
m8_391 [cluster="long.ToString()", file="SqlServerMonitoringApi.cs", label="Entry long.ToString()", span="0-0"];
m8_285 [cluster="System.DateTime.ToString(string)", file="SqlServerMonitoringApi.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m8_103 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="165-165"];
m8_104 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    InSucceededState = SucceededState.StateName.Equals(sqlJob.StateName, StringComparison.OrdinalIgnoreCase),\r\n                    Result = stateData[''Result''],\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }));", span="170-184"];
m8_105 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="165-165"];
m8_141 [cluster="Unk.UseConnection", file="SqlServerMonitoringApi.cs", label="Entry Unk.UseConnection", span=""];
m8_138 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="SqlServerMonitoringApi.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m8_22 [cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="30-30"];
m8_195 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(DbConnection, string)", span="362-362"];
m8_270 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="var endDate = DateTime.UtcNow", span="364-364"];
m8_277 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="var keyMaps = dates.ToDictionary(x => $''stats:{type}:{x.ToString(''yyyy-MM-dd-HH'')}'', x => x)", span="372-372"];
m8_278 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="return GetTimelineStats(connection, keyMaps);", span="374-374"];
m8_271 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="var dates = new List<DateTime>()", span="365-365"];
m8_274 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="dates.Add(endDate)", span="368-368"];
m8_275 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="endDate = endDate.AddHours(-1)", span="369-369"];
m8_272 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="var i = 0", span="366-366"];
m8_273 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="i < 24", span="366-366"];
m8_276 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="i++", span="366-366"];
m8_279 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(DbConnection, string)", span="362-362"];
m8_46 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(DbConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(DbConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="493-493"];
m8_373 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(DbConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: string jobsSql = \r\n$@'';with cte as \r\n(\r\n  select j.Id, row_number() over (order by j.Id desc) as row_num\r\n  from [{_storage.SchemaName}].Job j with (nolock, forceseek)\r\n  where j.StateName = @stateName\r\n)\r\nselect j.*, s.Reason as StateReason, s.Data as StateData\r\nfrom [{_storage.SchemaName}].Job j with (nolock)\r\ninner join cte on cte.Id = j.Id \r\nleft join [{_storage.SchemaName}].State s with (nolock) on j.StateId = s.Id\r\nwhere cte.row_num between @start and @end\r\norder by j.Id desc''", span="506-518"];
m8_374 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(DbConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="var jobs = connection.Query<SqlJob>(\r\n                        jobsSql,\r\n                        new { stateName = stateName, start = @from + 1, end = @from + count },\r\n                        commandTimeout: _storage.CommandTimeout)\r\n                        .ToList()", span="514-518"];
m8_375 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(DbConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="return DeserializeJobs(jobs, selector);", span="520-520"];
m8_376 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(DbConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(DbConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="493-493"];
m8_123 [cluster="Hangfire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", span="7-7"];
m8_402 [cluster="KeyValuePair<string, FetchedJobDto>.cstr", file="SqlServerMonitoringApi.cs", label="Entry KeyValuePair<string, FetchedJobDto>.cstr", span=""];
m8_202 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="259-259"];
m8_203 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: return UseConnection(connection =>\r\n            {\r\n                string sql = $@''\r\nselect * from [{_storage.SchemaName}].Job with (nolock) where Id = @id\r\nselect * from [{_storage.SchemaName}].JobParameter with (nolock) where JobId = @id\r\nselect * from [{_storage.SchemaName}].State with (nolock) where JobId = @id order by Id desc'';\r\n\r\n                using (var multi = connection.QueryMultiple(sql, new { id = jobId }, commandTimeout: _storage.CommandTimeout))\r\n                {\r\n                    var job = multi.Read<SqlJob>().SingleOrDefault();\r\n                    if (job == null) return null;\r\n\r\n                    var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value);\r\n                    var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new SafeDictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            })\r\n                            .ToList();\r\n\r\n                    return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        ExpireAt = job.ExpireAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };\r\n                }\r\n            });", span="266-302"];
m8_204 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="259-259"];
m8_320 [cluster="Unk.Query", file="SqlServerMonitoringApi.cs", label="Entry Unk.Query", span=""];
m8_8 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="45-45"];
m8_9 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ScheduledState.StateName));", span="47-48"];
m8_10 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="45-45"];
m8_7 [cluster="Unk.nameof", file="SqlServerMonitoringApi.cs", label="Entry Unk.nameof", span=""];
m8_322 [cluster="Unk.Add", file="SqlServerMonitoringApi.cs", label="Entry Unk.Add", span=""];
m8_69 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, string)", span="377-377"];
m8_289 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="var endDate = DateTime.UtcNow.Date", span="379-379"];
m8_296 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="var keyMaps = dates.ToDictionary(x => $''stats:{type}:{x.ToString(''yyyy-MM-dd'')}'', x => x)", span="387-387"];
m8_297 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="return GetTimelineStats(connection, keyMaps);", span="389-389"];
m8_290 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="var dates = new List<DateTime>()", span="380-380"];
m8_293 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="dates.Add(endDate)", span="383-383"];
m8_294 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="endDate = endDate.AddDays(-1)", span="384-384"];
m8_291 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="var i = 0", span="381-381"];
m8_292 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="i < 7", span="381-381"];
m8_295 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="i++", span="381-381"];
m8_298 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, string)", span="377-377"];
m8_11 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<DbConnection, T>)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<DbConnection, T>)", span="429-429"];
m8_336 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<DbConnection, T>)", file="SqlServerMonitoringApi.cs", label="return _storage.UseConnection(action);", span="431-431"];
m8_337 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<DbConnection, T>)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<DbConnection, T>)", span="429-429"];
m8_231 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="300-300"];
m8_232 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, SucceededState.StateName));", span="302-303"];
m8_233 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="300-300"];
m8_52 [cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73"];
m8_359 [cluster="Hangfire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="23-23"];
m8_401 [cluster="List<KeyValuePair<string, FetchedJobDto>>.cstr", file="SqlServerMonitoringApi.cs", label="Entry List<KeyValuePair<string, FetchedJobDto>>.cstr", span=""];
m8_280 [cluster="System.DateTime.AddHours(double)", file="SqlServerMonitoringApi.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m8_92 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="147-147"];
m8_93 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }));", span="149-162"];
m8_94 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    InFailedState = FailedState.StateName.Equals(sqlJob.StateName, StringComparison.OrdinalIgnoreCase),\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }));", span="151-165"];
m8_364 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="478-478"];
m8_365 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs", label="var data = JobHelper.FromJson<InvocationData>(invocationData)", span="480-480"];
m8_366 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs", label="data.Arguments = arguments", span="481-481"];
m8_367 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs", label="return data.Deserialize();", span="485-485"];
m8_368 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs", label=JobLoadException, span="487-487"];
m8_369 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs", label="return null;", span="489-489"];
m8_370 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="478-478"];
m8_76 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", span="119-119"];
m8_77 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="return UseConnection<IList<ServerDto>>(connection =>\r\n            {\r\n                var servers = connection.Query<Entities.Server>(\r\n                    $@''select * from [{_storage.SchemaName}].Server with (nolock)'', commandTimeout: _storage.CommandTimeout)\r\n                    .ToList();\r\n\r\n                var result = new List<ServerDto>();\r\n\r\n                // ReSharper disable once LoopCanBeConvertedToQuery\r\n                foreach (var server in servers)\r\n                {\r\n                    var data = JobHelper.FromJson<ServerData>(server.Data);\r\n                    result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt ?? DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", span="121-144"];
m8_78 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", span="119-119"];
m8_215 [cluster="Unk.QueryMultiple", file="SqlServerMonitoringApi.cs", label="Entry Unk.QueryMultiple", span=""];
m8_21 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="421-421"];
m8_331 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="SqlServerMonitoringApi.cs", label="var provider = _storage.QueueProviders.GetProvider(queueName)", span="423-423"];
m8_332 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="SqlServerMonitoringApi.cs", label="var monitoringApi = provider.GetJobQueueMonitoringApi()", span="424-424"];
m8_333 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="SqlServerMonitoringApi.cs", label="return monitoringApi;", span="426-426"];
m8_334 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="421-421"];
m8_40 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="79-79"];
m8_41 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    InProcessingState = ProcessingState.StateName.Equals(sqlJob.StateName, StringComparison.OrdinalIgnoreCase),\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeNullableDateTime(stateData[''StartedAt'']),\r\n                }));", span="81-91"];
m8_42 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="79-79"];
m8_53 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="93-93"];
m8_54 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", color=red, community=0, file="SqlServerMonitoringApi.cs", label="0: return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                }));", span="95-104"];
m8_55 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: Exit Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="93-93"];
m8_218 [cluster="Hangfire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="22-22"];
m8_70 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="113-113"];
m8_71 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => \r\n                GetTimelineStats(connection, ''failed''));", span="115-116"];
m8_72 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="113-113"];
m8_189 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="247-247"];
m8_190 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''succeeded''));", span="249-250"];
m8_191 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="247-247"];
m8_15 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(DbConnection, string)", span="464-464"];
m8_360 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="var sqlQuery = _jobListLimit.HasValue\r\n                ? $@''select count(j.Id) from (select top (@limit) Id from [{_storage.SchemaName}].Job with (nolock) where StateName = @state) as j''\r\n                : $@''select count(Id) from [{_storage.SchemaName}].Job with (nolock) where StateName = @state''", span="466-468"];
m8_361 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="var count = connection.ExecuteScalar<int>(\r\n                 sqlQuery,\r\n                 new { state = stateName, limit = _jobListLimit },\r\n                 commandTimeout: _storage.CommandTimeout)", span="470-473"];
m8_362 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="return count;", span="475-475"];
m8_363 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(DbConnection, string)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(DbConnection, string)", span="464-464"];
m8_335 [cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m8_135 [cluster="Unk.SelectMany", file="SqlServerMonitoringApi.cs", label="Entry Unk.SelectMany", span=""];
m8_217 [cluster="Unk.ToDictionary", file="SqlServerMonitoringApi.cs", label="Entry Unk.ToDictionary", span=""];
m8_249 [cluster="string.Format(string, object)", file="SqlServerMonitoringApi.cs", label="Entry string.Format(string, object)", span="0-0"];
m8_79 [cluster="Unk.>", file="SqlServerMonitoringApi.cs", label="Entry Unk.>", span=""];
m8_139 [cluster="Unk.GetEnqueuedJobIds", file="SqlServerMonitoringApi.cs", label="Entry Unk.GetEnqueuedJobIds", span=""];
m8_102 [cluster="Hangfire.Common.JobHelper.DeserializeNullableDateTime(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Common.JobHelper.DeserializeNullableDateTime(string)", span="84-84"];
m8_136 [cluster="Unk.OrderBy", file="SqlServerMonitoringApi.cs", label="Entry Unk.OrderBy", span=""];
m8_140 [cluster="Unk.GetEnqueuedAndFetchedCount", file="SqlServerMonitoringApi.cs", label="Entry Unk.GetEnqueuedAndFetchedCount", span=""];
m8_16 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="51-51"];
m8_17 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs", label="var queueApi = GetQueueApi(queue)", span="53-53"];
m8_18 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs", label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="54-54"];
m8_19 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs", label="return counters.EnqueuedCount ?? 0;", span="56-56"];
m8_20 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="51-51"];
m8_339 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(DbConnection, long[])", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(DbConnection, long[])", span="434-434"];
m8_340 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(DbConnection, long[])", file="SqlServerMonitoringApi.cs", label="string enqueuedJobsSql = \r\n$@''select j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom [{_storage.SchemaName}].Job j with (nolock)\r\nleft join [{_storage.SchemaName}].State s with (nolock) on s.Id = j.StateId\r\nwhere j.Id in @jobIds''", span="436-440"];
m8_341 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(DbConnection, long[])", file="SqlServerMonitoringApi.cs", label="var jobs = connection.Query<SqlJob>(\r\n                enqueuedJobsSql,\r\n                new { jobIds = jobIds },\r\n                commandTimeout: _storage.CommandTimeout)\r\n                .ToDictionary(x => x.Id, x => x)", span="442-446"];
m8_342 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(DbConnection, long[])", file="SqlServerMonitoringApi.cs", label="var sortedSqlJobs = jobIds\r\n                .Select(jobId => jobs.ContainsKey(jobId) ? jobs[jobId] : new SqlJob { Id = jobId })\r\n                .ToList()", span="448-450"];
m8_343 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(DbConnection, long[])", color=green, community=0, file="SqlServerMonitoringApi.cs", label="0: return DeserializeJobs(\r\n                sortedSqlJobs,\r\n                (sqlJob, job, stateData) => new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    InEnqueuedState = EnqueuedState.StateName.Equals(sqlJob.StateName, StringComparison.OrdinalIgnoreCase),\r\n                    EnqueuedAt = EnqueuedState.StateName.Equals(sqlJob.StateName, StringComparison.OrdinalIgnoreCase)\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                });", span="457-467"];
m8_344 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(DbConnection, long[])", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(DbConnection, long[])", span="434-434"];
m8_150 [cluster="Unk.GetQueues", file="SqlServerMonitoringApi.cs", label="Entry Unk.GetQueues", span=""];
m8_306 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", span="392-392"];
m8_307 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="string sqlQuery =\r\n$@''select [Key], [Value] as [Count] from [{_storage.SchemaName}].AggregatedCounter with (nolock)\r\nwhere [Key] in @keys''", span="396-398"];
m8_308 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="var valuesMap = connection.Query(\r\n                sqlQuery,\r\n                new { keys = keyMaps.Keys },\r\n                commandTimeout: _storage.CommandTimeout)\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="400-404"];
m8_309 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="keyMaps.Keys", span="406-406"];
m8_314 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="i < keyMaps.Count", span="412-412"];
m8_315 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="var value = valuesMap[keyMaps.ElementAt(i).Key]", span="414-414"];
m8_316 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="result.Add(keyMaps.ElementAt(i).Value, value)", span="415-415"];
m8_310 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="!valuesMap.ContainsKey(key)", span="408-408"];
m8_311 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="valuesMap.Add(key, 0)", span="408-408"];
m8_312 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="var result = new Dictionary<DateTime, long>()", span="411-411"];
m8_313 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="var i = 0", span="412-412"];
m8_318 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="return result;", span="418-418"];
m8_317 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="i++", span="412-412"];
m8_319 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(DbConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", span="392-392"];
m8_63 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="107-107"];
m8_64 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => \r\n                GetTimelineStats(connection, ''succeeded''));", span="109-110"];
m8_65 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="107-107"];
m8_323 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m8_265 [cluster="Hangfire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18"];
m8_50 [cluster="Hangfire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="23-23"];
m8_251 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m8_134 [cluster="Unk.Select", file="SqlServerMonitoringApi.cs", label="Entry Unk.Select", span=""];
m8_388 [cluster="System.Collections.Generic.List<T>.List(int)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m8_164 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="229-229"];
m8_165 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="var queueApi = GetQueueApi(queue)", span="231-231"];
m8_166 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="var enqueuedJobIds = queueApi.GetEnqueuedJobIds(queue, from, perPage)", span="232-232"];
m8_167 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => EnqueuedJobs(connection, enqueuedJobIds.Select(x => (long)x).ToArray()));", span="235-235"];
m8_168 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="229-229"];
m8_216 [cluster="Unk.SingleOrDefault", file="SqlServerMonitoringApi.cs", label="Entry Unk.SingleOrDefault", span=""];
m8_34 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="73-73"];
m8_35 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ProcessingState.StateName));", span="75-76"];
m8_36 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="73-73"];
m8_219 [cluster="Unk.DeserializeJob", file="SqlServerMonitoringApi.cs", label="Entry Unk.DeserializeJob", span=""];
m8_405 [file="SqlServerMonitoringApi.cs", label="Hangfire.SqlServer.SqlServerMonitoringApi", span=""];
m8_406 [file="SqlServerMonitoringApi.cs", label="Hangfire.SqlServer.SqlServerMonitoringApi", span=""];
m8_407 [file="SqlServerMonitoringApi.cs", label=int, span=""];
m8_408 [file="SqlServerMonitoringApi.cs", label=int, span=""];
m8_409 [file="SqlServerMonitoringApi.cs", label=int, span=""];
m8_410 [file="SqlServerMonitoringApi.cs", label=int, span=""];
m8_411 [file="SqlServerMonitoringApi.cs", label=int, span=""];
m8_412 [file="SqlServerMonitoringApi.cs", label=int, span=""];
m8_413 [file="SqlServerMonitoringApi.cs", label=int, span=""];
m8_414 [file="SqlServerMonitoringApi.cs", label=int, span=""];
m8_415 [file="SqlServerMonitoringApi.cs", label=int, span=""];
m8_416 [file="SqlServerMonitoringApi.cs", label=enqueuedJobIds, span=""];
m8_417 [file="SqlServerMonitoringApi.cs", label=enqueuedJobIds, span=""];
m8_418 [file="SqlServerMonitoringApi.cs", label=fetchedJobIds, span=""];
m8_419 [file="SqlServerMonitoringApi.cs", label=string, span=""];
m8_420 [file="SqlServerMonitoringApi.cs", label=sql, span=""];
m8_421 [file="SqlServerMonitoringApi.cs", label=string, span=""];
m8_422 [file="SqlServerMonitoringApi.cs", label=string, span=""];
m8_423 [file="SqlServerMonitoringApi.cs", label=jobs, span=""];
n3 -> n1  [color=darkseagreen4, key=1, label="HangFire.Filters.ClientJobExceptionContext", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n0  [color=blue, key=0, style=bold];
m0_11 -> m0_13  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_14  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_61 -> m0_80  [color=green, key=3, label="Local variable Hangfire.Server.DelayedJobScheduler scheduler", style=bold];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_65  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_61 -> m0_66  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_62 -> m0_36  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_63 -> m0_60  [color=blue, key=0, style=bold];
m0_153 -> m0_154  [key=0, style=solid];
m0_154 -> m0_36  [key=2, style=dotted];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_155 -> m0_153  [color=blue, key=0, style=bold];
m0_212 -> m0_213  [key=0, style=solid];
m0_213 -> m0_36  [key=2, style=dotted];
m0_213 -> m0_214  [key=0, style=solid];
m0_213 -> m0_215  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_214 -> m0_212  [color=blue, key=0, style=bold];
m0_419 -> m0_420  [key=0, style=solid];
m0_420 -> m0_36  [key=2, style=dotted];
m0_420 -> m0_421  [key=0, style=solid];
m0_420 -> m0_422  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_421 -> m0_419  [color=blue, key=0, style=bold];
m0_527 -> m0_528  [key=0, style=solid];
m0_528 -> m0_36  [key=2, style=dotted];
m0_528 -> m0_529  [key=0, style=solid];
m0_528 -> m0_530  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_529 -> m0_527  [color=blue, key=0, style=bold];
m0_267 -> m0_268  [key=0, style=solid];
m0_268 -> m0_36  [key=2, style=dotted];
m0_268 -> m0_269  [key=0, style=solid];
m0_268 -> m0_270  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_269 -> m0_267  [color=blue, key=0, style=bold];
m0_368 -> m0_369  [key=0, style=solid];
m0_369 -> m0_36  [key=2, style=dotted];
m0_369 -> m0_370  [key=0, style=solid];
m0_369 -> m0_371  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_370 -> m0_368  [color=blue, key=0, style=bold];
m0_331 -> m0_332  [key=0, style=solid];
m0_332 -> m0_36  [key=2, style=dotted];
m0_332 -> m0_333  [key=0, style=solid];
m0_332 -> m0_334  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_333 -> m0_331  [color=blue, key=0, style=bold];
m0_305 -> m0_306  [key=0, style=solid];
m0_306 -> m0_36  [key=2, style=dotted];
m0_306 -> m0_307  [key=0, style=solid];
m0_306 -> m0_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_307 -> m0_305  [color=blue, key=0, style=bold];
m0_431 -> m0_432  [key=0, style=solid];
m0_432 -> m0_36  [key=2, style=dotted];
m0_432 -> m0_433  [key=0, style=solid];
m0_432 -> m0_434  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_433 -> m0_431  [color=blue, key=0, style=bold];
m0_49 -> m0_551  [key=0, style=solid];
m0_49 -> m0_552  [color=darkseagreen4, key=1, label="System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>", style=dashed];
m0_551 -> m0_552  [key=0, style=solid];
m0_551 -> m0_23  [key=2, style=dotted];
m0_551 -> m0_553  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m0_552 -> m0_553  [key=0, style=solid];
m0_552 -> m0_550  [key=2, style=dotted];
m0_553 -> m0_554  [key=0, style=solid];
m0_553 -> m0_555  [key=2, style=dotted];
m0_554 -> m0_49  [color=blue, key=0, style=bold];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_13  [key=2, style=dotted];
m0_16 -> m0_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_5  [key=2, style=dotted];
m0_17 -> m0_20  [key=2, style=dotted];
m0_17 -> m0_34  [color=darkorchid, key=3, label="Local variable Hangfire.BackgroundJobServerOptions options", style=bold];
m0_17 -> m0_19  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_21  [key=2, style=dotted];
m0_18 -> m0_15  [color=blue, key=0, style=bold];
m0_19 -> m0_16  [color=blue, key=0, style=bold];
m0_407 -> m0_408  [key=0, style=solid];
m0_408 -> m0_36  [key=2, style=dotted];
m0_408 -> m0_409  [key=0, style=solid];
m0_408 -> m0_410  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_409 -> m0_407  [color=blue, key=0, style=bold];
m0_255 -> m0_256  [key=0, style=solid];
m0_256 -> m0_36  [key=2, style=dotted];
m0_256 -> m0_257  [key=0, style=solid];
m0_256 -> m0_258  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_257 -> m0_255  [color=blue, key=0, style=bold];
m0_119 -> m0_120  [key=0, style=solid];
m0_121 -> m0_36  [key=2, style=dotted];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_124  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_122 -> m0_119  [color=blue, key=0, style=bold];
m0_15 -> m0_16  [key=0, style=solid];
m0_293 -> m0_294  [key=0, style=solid];
m0_294 -> m0_36  [key=2, style=dotted];
m0_294 -> m0_295  [key=0, style=solid];
m0_294 -> m0_296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_295 -> m0_293  [color=blue, key=0, style=bold];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_32 -> m0_33  [key=0, style=solid];
m0_34 -> m0_80  [color=green, key=3, label="Local variable Hangfire.Server.DelayedJobScheduler scheduler", style=bold];
m0_34 -> m0_34  [color=darkorchid, key=3, label="Local variable Hangfire.BackgroundJobServerOptions options", style=bold];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_36  [key=2, style=dotted];
m0_34 -> m0_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_38  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_33 -> m0_39  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_35 -> m0_32  [color=blue, key=0, style=bold];
m0_500 -> m0_501  [key=0, style=solid];
m0_501 -> m0_36  [key=2, style=dotted];
m0_501 -> m0_502  [key=0, style=solid];
m0_501 -> m0_503  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_502 -> m0_500  [color=blue, key=0, style=bold];
m0_344 -> m0_345  [key=0, style=solid];
m0_345 -> m0_36  [key=2, style=dotted];
m0_345 -> m0_346  [key=0, style=solid];
m0_345 -> m0_347  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_346 -> m0_344  [color=blue, key=0, style=bold];
m0_224 -> m0_225  [key=0, style=solid];
m0_225 -> m0_36  [key=2, style=dotted];
m0_225 -> m0_226  [key=0, style=solid];
m0_225 -> m0_227  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_226 -> m0_224  [color=blue, key=0, style=bold];
m0_356 -> m0_357  [key=0, style=solid];
m0_357 -> m0_36  [key=2, style=dotted];
m0_357 -> m0_358  [key=0, style=solid];
m0_357 -> m0_359  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_358 -> m0_356  [color=blue, key=0, style=bold];
m0_319 -> m0_320  [key=0, style=solid];
m0_320 -> m0_36  [key=2, style=dotted];
m0_320 -> m0_321  [key=0, style=solid];
m0_320 -> m0_322  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_321 -> m0_319  [color=blue, key=0, style=bold];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_13  [key=2, style=dotted];
m0_25 -> m0_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_5  [key=2, style=dotted];
m0_26 -> m0_20  [key=2, style=dotted];
m0_26 -> m0_34  [color=darkorchid, key=3, label="Local variable Hangfire.BackgroundJobServerOptions options", style=bold];
m0_26 -> m0_19  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_29  [key=2, style=dotted];
m0_27 -> m0_24  [color=blue, key=0, style=bold];
m0_28 -> m0_25  [color=blue, key=0, style=bold];
m0_28 -> m0_29  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_6  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_5  [key=2, style=dotted];
m0_9 -> m0_11  [key=2, style=dotted];
m0_10 -> m0_7  [color=blue, key=0, style=bold];
m0_10 -> m0_11  [key=0, style=solid];
m0_143 -> m0_144  [key=0, style=solid];
m0_82 -> m0_89  [color=green, key=1, label=SqlConnection, style=dashed];
m0_82 -> m0_90  [color=green, key=1, label=SqlConnection, style=dashed];
m0_82 -> m0_93  [color=green, key=1, label=SqlConnection, style=dashed];
m0_82 -> m0_96  [color=green, key=1, label=SqlConnection, style=dashed];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_84  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_89 -> m0_90  [color=green, key=0, style=solid];
m0_89 -> m0_49  [color=green, key=2, style=dotted];
m0_89 -> m0_115  [color=green, key=1, label="lambda expression", style=dashed];
m0_83 -> m0_89  [color=green, key=1, label=jobId, style=dashed];
m0_83 -> m0_90  [color=green, key=1, label=jobId, style=dashed];
m0_83 -> m0_116  [color=green, key=1, label=jobId, style=dashed];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_46  [key=2, style=dotted];
m0_83 -> m0_47  [key=2, style=dotted];
m0_83 -> m0_48  [key=2, style=dotted];
m0_83 -> m0_97  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_85 -> m0_89  [color=green, key=1, label=state, style=dashed];
m0_85 -> m0_116  [color=green, key=1, label=state, style=dashed];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_103  [key=2, style=dotted];
m0_85 -> m0_87  [color=darkseagreen4, key=1, label=state, style=dashed];
m0_85 -> m0_88  [color=darkseagreen4, key=1, label=state, style=dashed];
m0_88 -> m0_89  [color=green, key=0, style=solid];
m0_88 -> m0_6  [key=2, style=dotted];
m0_88 -> m0_104  [key=2, style=dotted];
m0_88 -> m0_8  [key=2, style=dotted];
m0_88 -> m0_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_90 -> m0_91  [color=green, key=0, style=solid];
m0_90 -> m0_50  [color=green, key=2, style=dotted];
m0_90 -> m0_92  [color=green, key=1, label=job, style=dashed];
m0_115 -> m0_116  [color=green, key=0, style=solid];
m0_91 -> m0_92  [color=green, key=0, style=solid];
m0_91 -> m0_19  [color=green, key=2, style=dotted];
m0_92 -> m0_93  [color=green, key=0, style=solid];
m0_92 -> m0_73  [color=green, key=2, style=dotted];
m0_93 -> m0_94  [color=green, key=0, style=solid];
m0_93 -> m0_50  [color=green, key=2, style=dotted];
m0_93 -> m0_95  [color=green, key=1, label=anotherJob, style=dashed];
m0_84 -> m0_93  [color=green, key=1, label=anotherJobId, style=dashed];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_46  [key=2, style=dotted];
m0_84 -> m0_47  [key=2, style=dotted];
m0_84 -> m0_48  [key=2, style=dotted];
m0_94 -> m0_95  [color=green, key=0, style=solid];
m0_94 -> m0_54  [color=green, key=2, style=dotted];
m0_95 -> m0_96  [color=green, key=0, style=solid];
m0_95 -> m0_54  [color=green, key=2, style=dotted];
m0_96 -> m0_97  [color=green, key=0, style=solid];
m0_96 -> m0_46  [color=green, key=2, style=dotted];
m0_96 -> m0_47  [color=green, key=2, style=dotted];
m0_96 -> m0_98  [color=green, key=1, label=jobState, style=dashed];
m0_96 -> m0_99  [color=green, key=1, label=jobState, style=dashed];
m0_96 -> m0_100  [color=green, key=1, label=jobState, style=dashed];
m0_96 -> m0_101  [color=green, key=1, label=jobState, style=dashed];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_48  [key=2, style=dotted];
m0_97 -> m0_19  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_19  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_19  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_73  [key=2, style=dotted];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_19  [key=2, style=dotted];
m0_116 -> m0_117  [color=green, key=0, style=solid];
m0_116 -> m0_118  [color=green, key=2, style=dotted];
m0_117 -> m0_115  [color=blue, key=0, style=bold];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_23  [key=2, style=dotted];
m0_40 -> m0_49  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_41 -> m0_50  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_43 -> m0_50  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_67 -> m0_49  [key=2, style=dotted];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_68 -> m0_50  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_70 -> m0_50  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_129 -> m0_49  [key=2, style=dotted];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_130 -> m0_50  [key=2, style=dotted];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_132  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_164  [key=2, style=dotted];
m0_161 -> m0_49  [key=2, style=dotted];
m0_161 -> m0_162  [key=0, style=solid];
m0_161 -> m0_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_184 -> m0_49  [key=2, style=dotted];
m0_184 -> m0_185  [key=0, style=solid];
m0_184 -> m0_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_198 -> m0_49  [key=2, style=dotted];
m0_198 -> m0_199  [key=0, style=solid];
m0_198 -> m0_208  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_216 -> m0_49  [key=2, style=dotted];
m0_216 -> m0_217  [key=0, style=solid];
m0_216 -> m0_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_228 -> m0_49  [key=2, style=dotted];
m0_228 -> m0_229  [key=0, style=solid];
m0_228 -> m0_234  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_242 -> m0_49  [key=2, style=dotted];
m0_242 -> m0_243  [key=0, style=solid];
m0_242 -> m0_251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_259 -> m0_49  [key=2, style=dotted];
m0_259 -> m0_260  [key=0, style=solid];
m0_259 -> m0_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_271 -> m0_49  [key=2, style=dotted];
m0_271 -> m0_272  [key=0, style=solid];
m0_271 -> m0_277  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_285 -> m0_49  [key=2, style=dotted];
m0_285 -> m0_286  [key=0, style=solid];
m0_285 -> m0_289  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_297 -> m0_49  [key=2, style=dotted];
m0_297 -> m0_298  [key=0, style=solid];
m0_297 -> m0_301  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_309 -> m0_49  [key=2, style=dotted];
m0_309 -> m0_310  [key=0, style=solid];
m0_309 -> m0_315  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_323 -> m0_49  [key=2, style=dotted];
m0_323 -> m0_324  [key=0, style=solid];
m0_323 -> m0_327  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_335 -> m0_49  [key=2, style=dotted];
m0_335 -> m0_336  [key=0, style=solid];
m0_335 -> m0_339  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_348 -> m0_49  [key=2, style=dotted];
m0_348 -> m0_349  [key=0, style=solid];
m0_348 -> m0_352  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_360 -> m0_49  [key=2, style=dotted];
m0_360 -> m0_361  [key=0, style=solid];
m0_360 -> m0_364  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_372 -> m0_49  [key=2, style=dotted];
m0_372 -> m0_373  [key=0, style=solid];
m0_372 -> m0_377  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_385 -> m0_49  [key=2, style=dotted];
m0_385 -> m0_386  [key=0, style=solid];
m0_385 -> m0_389  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_397 -> m0_49  [key=2, style=dotted];
m0_397 -> m0_398  [key=0, style=solid];
m0_397 -> m0_401  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_411 -> m0_49  [key=2, style=dotted];
m0_411 -> m0_412  [key=0, style=solid];
m0_411 -> m0_415  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_423 -> m0_49  [key=2, style=dotted];
m0_423 -> m0_424  [key=0, style=solid];
m0_423 -> m0_427  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_435 -> m0_49  [key=2, style=dotted];
m0_435 -> m0_436  [key=0, style=solid];
m0_435 -> m0_442  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_454 -> m0_49  [key=2, style=dotted];
m0_454 -> m0_455  [key=0, style=solid];
m0_454 -> m0_458  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_468 -> m0_49  [key=2, style=dotted];
m0_468 -> m0_469  [key=0, style=solid];
m0_468 -> m0_472  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_480 -> m0_49  [key=2, style=dotted];
m0_480 -> m0_481  [key=0, style=solid];
m0_480 -> m0_484  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_492 -> m0_49  [key=2, style=dotted];
m0_492 -> m0_493  [key=0, style=solid];
m0_492 -> m0_496  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_504 -> m0_505  [key=0, style=solid];
m0_504 -> m0_13  [key=2, style=dotted];
m0_504 -> m0_507  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_508 -> m0_49  [key=2, style=dotted];
m0_508 -> m0_509  [key=0, style=solid];
m0_508 -> m0_510  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_518 -> m0_519  [key=0, style=solid];
m0_518 -> m0_13  [key=2, style=dotted];
m0_518 -> m0_521  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_522 -> m0_49  [key=2, style=dotted];
m0_522 -> m0_523  [key=0, style=solid];
m0_522 -> m0_524  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_531 -> m0_49  [key=2, style=dotted];
m0_531 -> m0_532  [key=0, style=solid];
m0_531 -> m0_537  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_37 -> m0_40  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_37 -> m0_41  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_37 -> m0_43  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_39  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_65 -> m0_46  [key=2, style=dotted];
m0_65 -> m0_47  [key=2, style=dotted];
m0_65 -> m0_67  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_65 -> m0_68  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_48  [key=2, style=dotted];
m0_65 -> m0_75  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_66 -> m0_46  [key=2, style=dotted];
m0_66 -> m0_47  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_70  [color=darkseagreen4, key=1, label=anotherJobId, style=dashed];
m0_66 -> m0_48  [key=2, style=dotted];
m0_102 -> m0_82  [color=blue, key=0, style=bold];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_6  [key=2, style=dotted];
m0_86 -> m0_8  [key=2, style=dotted];
m0_86 -> m0_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_6  [key=2, style=dotted];
m0_87 -> m0_8  [key=2, style=dotted];
m0_87 -> m0_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_111 -> m0_112  [key=0, style=solid];
m0_38 -> m0_46  [key=2, style=dotted];
m0_38 -> m0_47  [key=2, style=dotted];
m0_38 -> m0_40  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_38 -> m0_41  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_38 -> m0_48  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_56  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_39 -> m0_46  [key=2, style=dotted];
m0_39 -> m0_47  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_43  [color=darkseagreen4, key=1, label=anotherJobId, style=dashed];
m0_39 -> m0_48  [key=2, style=dotted];
m0_124 -> m0_46  [key=2, style=dotted];
m0_124 -> m0_47  [key=2, style=dotted];
m0_124 -> m0_129  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_124 -> m0_130  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_124 -> m0_48  [key=2, style=dotted];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_150  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_124 -> m0_134  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_133 -> m0_46  [key=2, style=dotted];
m0_133 -> m0_47  [key=2, style=dotted];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_135  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m0_133 -> m0_136  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m0_133 -> m0_137  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m0_133 -> m0_138  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m0_185 -> m0_46  [key=2, style=dotted];
m0_185 -> m0_47  [key=2, style=dotted];
m0_185 -> m0_186  [key=0, style=solid];
m0_185 -> m0_187  [color=darkseagreen4, key=1, label=record, style=dashed];
m0_185 -> m0_188  [color=darkseagreen4, key=1, label=record, style=dashed];
m0_199 -> m0_46  [key=2, style=dotted];
m0_199 -> m0_47  [key=2, style=dotted];
m0_199 -> m0_200  [key=0, style=solid];
m0_199 -> m0_201  [color=darkseagreen4, key=1, label=record, style=dashed];
m0_199 -> m0_202  [color=darkseagreen4, key=1, label=record, style=dashed];
m0_199 -> m0_203  [color=darkseagreen4, key=1, label=record, style=dashed];
m0_229 -> m0_46  [key=2, style=dotted];
m0_229 -> m0_47  [key=2, style=dotted];
m0_229 -> m0_230  [key=0, style=solid];
m0_229 -> m0_231  [color=darkseagreen4, key=1, label=record, style=dashed];
m0_229 -> m0_232  [color=darkseagreen4, key=1, label=record, style=dashed];
m0_243 -> m0_46  [key=2, style=dotted];
m0_243 -> m0_47  [key=2, style=dotted];
m0_243 -> m0_244  [key=0, style=solid];
m0_243 -> m0_245  [color=darkseagreen4, key=1, label=record, style=dashed];
m0_243 -> m0_246  [color=darkseagreen4, key=1, label=record, style=dashed];
m0_243 -> m0_247  [color=darkseagreen4, key=1, label=record, style=dashed];
m0_272 -> m0_46  [key=2, style=dotted];
m0_272 -> m0_47  [key=2, style=dotted];
m0_272 -> m0_273  [key=0, style=solid];
m0_272 -> m0_274  [color=darkseagreen4, key=1, label=record, style=dashed];
m0_272 -> m0_275  [color=darkseagreen4, key=1, label=record, style=dashed];
m0_310 -> m0_46  [key=2, style=dotted];
m0_310 -> m0_47  [key=2, style=dotted];
m0_310 -> m0_311  [key=0, style=solid];
m0_310 -> m0_312  [color=darkseagreen4, key=1, label=record, style=dashed];
m0_310 -> m0_313  [color=darkseagreen4, key=1, label=record, style=dashed];
m0_324 -> m0_46  [key=2, style=dotted];
m0_324 -> m0_47  [key=2, style=dotted];
m0_324 -> m0_325  [key=0, style=solid];
m0_373 -> m0_46  [key=2, style=dotted];
m0_373 -> m0_47  [key=2, style=dotted];
m0_373 -> m0_374  [key=0, style=solid];
m0_373 -> m0_375  [color=darkseagreen4, key=1, label=record, style=dashed];
m0_436 -> m0_46  [key=2, style=dotted];
m0_436 -> m0_437  [key=0, style=solid];
m0_436 -> m0_441  [key=2, style=dotted];
m0_436 -> m0_438  [color=darkseagreen4, key=1, label=records, style=dashed];
m0_436 -> m0_439  [color=darkseagreen4, key=1, label=records, style=dashed];
m0_532 -> m0_46  [key=2, style=dotted];
m0_532 -> m0_533  [key=0, style=solid];
m0_532 -> m0_536  [key=2, style=dotted];
m0_532 -> m0_540  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_532 -> m0_543  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_532 -> m0_534  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_217 -> m0_47  [key=2, style=dotted];
m0_217 -> m0_218  [key=0, style=solid];
m0_217 -> m0_13  [key=2, style=dotted];
m0_260 -> m0_47  [key=2, style=dotted];
m0_260 -> m0_261  [key=0, style=solid];
m0_260 -> m0_13  [key=2, style=dotted];
m0_286 -> m0_47  [key=2, style=dotted];
m0_286 -> m0_287  [key=0, style=solid];
m0_286 -> m0_13  [key=2, style=dotted];
m0_298 -> m0_47  [key=2, style=dotted];
m0_298 -> m0_299  [key=0, style=solid];
m0_298 -> m0_13  [key=2, style=dotted];
m0_336 -> m0_47  [key=2, style=dotted];
m0_336 -> m0_337  [key=0, style=solid];
m0_336 -> m0_13  [key=2, style=dotted];
m0_349 -> m0_47  [key=2, style=dotted];
m0_349 -> m0_350  [key=0, style=solid];
m0_349 -> m0_13  [key=2, style=dotted];
m0_361 -> m0_47  [key=2, style=dotted];
m0_361 -> m0_362  [key=0, style=solid];
m0_361 -> m0_13  [key=2, style=dotted];
m0_386 -> m0_47  [key=2, style=dotted];
m0_386 -> m0_387  [key=0, style=solid];
m0_386 -> m0_13  [key=2, style=dotted];
m0_398 -> m0_47  [key=2, style=dotted];
m0_398 -> m0_399  [key=0, style=solid];
m0_398 -> m0_13  [key=2, style=dotted];
m0_412 -> m0_47  [key=2, style=dotted];
m0_412 -> m0_413  [key=0, style=solid];
m0_412 -> m0_13  [key=2, style=dotted];
m0_424 -> m0_47  [key=2, style=dotted];
m0_424 -> m0_425  [key=0, style=solid];
m0_424 -> m0_13  [key=2, style=dotted];
m0_455 -> m0_47  [key=2, style=dotted];
m0_455 -> m0_456  [key=0, style=solid];
m0_455 -> m0_13  [key=2, style=dotted];
m0_469 -> m0_47  [key=2, style=dotted];
m0_469 -> m0_470  [key=0, style=solid];
m0_469 -> m0_13  [key=2, style=dotted];
m0_481 -> m0_47  [key=2, style=dotted];
m0_481 -> m0_482  [key=0, style=solid];
m0_481 -> m0_13  [key=2, style=dotted];
m0_493 -> m0_47  [key=2, style=dotted];
m0_493 -> m0_494  [key=0, style=solid];
m0_493 -> m0_13  [key=2, style=dotted];
m0_134 -> m0_19  [key=2, style=dotted];
m0_134 -> m0_48  [key=2, style=dotted];
m0_134 -> m0_135  [key=0, style=solid];
m0_135 -> m0_19  [key=2, style=dotted];
m0_135 -> m0_136  [key=0, style=solid];
m0_136 -> m0_19  [key=2, style=dotted];
m0_136 -> m0_137  [key=0, style=solid];
m0_138 -> m0_19  [key=2, style=dotted];
m0_138 -> m0_139  [key=0, style=solid];
m0_186 -> m0_19  [key=2, style=dotted];
m0_186 -> m0_187  [key=0, style=solid];
m0_187 -> m0_19  [key=2, style=dotted];
m0_187 -> m0_188  [key=0, style=solid];
m0_188 -> m0_19  [key=2, style=dotted];
m0_188 -> m0_189  [key=0, style=solid];
m0_200 -> m0_19  [key=2, style=dotted];
m0_200 -> m0_201  [key=0, style=solid];
m0_201 -> m0_19  [key=2, style=dotted];
m0_201 -> m0_202  [key=0, style=solid];
m0_218 -> m0_19  [key=2, style=dotted];
m0_218 -> m0_219  [key=0, style=solid];
m0_230 -> m0_19  [key=2, style=dotted];
m0_230 -> m0_231  [key=0, style=solid];
m0_231 -> m0_19  [key=2, style=dotted];
m0_231 -> m0_232  [key=0, style=solid];
m0_232 -> m0_19  [key=2, style=dotted];
m0_232 -> m0_233  [key=0, style=solid];
m0_244 -> m0_19  [key=2, style=dotted];
m0_244 -> m0_245  [key=0, style=solid];
m0_245 -> m0_19  [key=2, style=dotted];
m0_245 -> m0_246  [key=0, style=solid];
m0_261 -> m0_19  [key=2, style=dotted];
m0_261 -> m0_262  [key=0, style=solid];
m0_273 -> m0_19  [key=2, style=dotted];
m0_273 -> m0_274  [key=0, style=solid];
m0_274 -> m0_19  [key=2, style=dotted];
m0_274 -> m0_275  [key=0, style=solid];
m0_275 -> m0_19  [key=2, style=dotted];
m0_275 -> m0_276  [key=0, style=solid];
m0_287 -> m0_19  [key=2, style=dotted];
m0_287 -> m0_288  [key=0, style=solid];
m0_299 -> m0_19  [key=2, style=dotted];
m0_299 -> m0_300  [key=0, style=solid];
m0_311 -> m0_19  [key=2, style=dotted];
m0_311 -> m0_312  [key=0, style=solid];
m0_312 -> m0_19  [key=2, style=dotted];
m0_312 -> m0_313  [key=0, style=solid];
m0_313 -> m0_19  [key=2, style=dotted];
m0_313 -> m0_314  [key=0, style=solid];
m0_325 -> m0_19  [key=2, style=dotted];
m0_325 -> m0_326  [key=0, style=solid];
m0_337 -> m0_19  [key=2, style=dotted];
m0_337 -> m0_338  [key=0, style=solid];
m0_350 -> m0_19  [key=2, style=dotted];
m0_350 -> m0_351  [key=0, style=solid];
m0_362 -> m0_19  [key=2, style=dotted];
m0_362 -> m0_363  [key=0, style=solid];
m0_374 -> m0_19  [key=2, style=dotted];
m0_374 -> m0_375  [key=0, style=solid];
m0_375 -> m0_19  [key=2, style=dotted];
m0_375 -> m0_376  [key=0, style=solid];
m0_387 -> m0_19  [key=2, style=dotted];
m0_387 -> m0_388  [key=0, style=solid];
m0_399 -> m0_19  [key=2, style=dotted];
m0_399 -> m0_400  [key=0, style=solid];
m0_413 -> m0_19  [key=2, style=dotted];
m0_413 -> m0_414  [key=0, style=solid];
m0_425 -> m0_19  [key=2, style=dotted];
m0_425 -> m0_426  [key=0, style=solid];
m0_437 -> m0_19  [key=2, style=dotted];
m0_437 -> m0_438  [key=0, style=solid];
m0_438 -> m0_19  [key=2, style=dotted];
m0_438 -> m0_439  [key=0, style=solid];
m0_439 -> m0_19  [key=2, style=dotted];
m0_439 -> m0_440  [key=0, style=solid];
m0_456 -> m0_19  [key=2, style=dotted];
m0_456 -> m0_457  [key=0, style=solid];
m0_470 -> m0_19  [key=2, style=dotted];
m0_470 -> m0_471  [key=0, style=solid];
m0_482 -> m0_19  [key=2, style=dotted];
m0_482 -> m0_483  [key=0, style=solid];
m0_494 -> m0_19  [key=2, style=dotted];
m0_494 -> m0_495  [key=0, style=solid];
m0_505 -> m0_19  [key=2, style=dotted];
m0_505 -> m0_506  [key=0, style=solid];
m0_519 -> m0_19  [key=2, style=dotted];
m0_519 -> m0_520  [key=0, style=solid];
m0_533 -> m0_19  [key=2, style=dotted];
m0_533 -> m0_534  [key=0, style=solid];
m0_534 -> m0_19  [key=2, style=dotted];
m0_534 -> m0_535  [key=0, style=solid];
m0_71 -> m0_73  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_137 -> m0_73  [key=2, style=dotted];
m0_137 -> m0_138  [key=0, style=solid];
m0_202 -> m0_73  [key=2, style=dotted];
m0_202 -> m0_203  [key=0, style=solid];
m0_246 -> m0_73  [key=2, style=dotted];
m0_246 -> m0_247  [key=0, style=solid];
m0_44 -> m0_54  [key=2, style=dotted];
m0_44 -> m0_45  [key=0, style=solid];
m0_69 -> m0_54  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_131 -> m0_54  [key=2, style=dotted];
m0_131 -> m0_132  [key=0, style=solid];
m0_132 -> m0_54  [key=2, style=dotted];
m0_132 -> m0_133  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_22 -> m0_20  [color=blue, key=0, style=bold];
m0_22 -> m0_23  [key=0, style=solid];
m0_55 -> m0_56  [key=0, style=solid];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_51  [key=2, style=dotted];
m0_42 -> m0_52  [key=2, style=dotted];
m0_42 -> m0_53  [key=2, style=dotted];
m0_64 -> m0_67  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_64 -> m0_68  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_64 -> m0_70  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_66  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_74 -> m0_75  [key=0, style=solid];
m0_123 -> m0_129  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_123 -> m0_130  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_133  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_125 -> m0_129  [color=darkseagreen4, key=1, label=state, style=dashed];
m0_125 -> m0_103  [key=2, style=dotted];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_127  [color=darkseagreen4, key=1, label=state, style=dashed];
m0_125 -> m0_128  [color=darkseagreen4, key=1, label=state, style=dashed];
m0_125 -> m0_150  [color=darkseagreen4, key=1, label=state, style=dashed];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_6  [key=2, style=dotted];
m0_128 -> m0_104  [key=2, style=dotted];
m0_128 -> m0_8  [key=2, style=dotted];
m0_128 -> m0_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_149 -> m0_150  [key=0, style=solid];
m0_156 -> m0_161  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_156 -> m0_157  [key=0, style=solid];
m0_158 -> m0_160  [color=darkseagreen4, key=1, label=correctProvider, style=dashed];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_5  [key=2, style=dotted];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_6  [key=2, style=dotted];
m0_159 -> m0_8  [key=2, style=dotted];
m0_159 -> m0_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_165  [key=2, style=dotted];
m0_162 -> m0_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_169 -> m0_170  [key=0, style=solid];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_185  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_190 -> m0_191  [key=0, style=solid];
m0_197 -> m0_198  [key=0, style=solid];
m0_197 -> m0_199  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_208 -> m0_209  [key=0, style=solid];
m0_215 -> m0_216  [key=0, style=solid];
m0_215 -> m0_217  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_220 -> m0_221  [key=0, style=solid];
m0_220 -> m0_222  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_227 -> m0_228  [key=0, style=solid];
m0_227 -> m0_229  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_234 -> m0_235  [key=0, style=solid];
m0_241 -> m0_242  [key=0, style=solid];
m0_241 -> m0_243  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_251 -> m0_252  [key=0, style=solid];
m0_258 -> m0_259  [key=0, style=solid];
m0_258 -> m0_260  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_263 -> m0_264  [key=0, style=solid];
m0_263 -> m0_265  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_270 -> m0_271  [key=0, style=solid];
m0_270 -> m0_272  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_277 -> m0_278  [key=0, style=solid];
m0_284 -> m0_285  [key=0, style=solid];
m0_284 -> m0_286  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_289 -> m0_290  [key=0, style=solid];
m0_289 -> m0_291  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_296 -> m0_297  [key=0, style=solid];
m0_296 -> m0_298  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_301 -> m0_302  [key=0, style=solid];
m0_301 -> m0_303  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_308 -> m0_309  [key=0, style=solid];
m0_308 -> m0_310  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_315 -> m0_316  [key=0, style=solid];
m0_322 -> m0_323  [key=0, style=solid];
m0_322 -> m0_324  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_327 -> m0_328  [key=0, style=solid];
m0_327 -> m0_329  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_334 -> m0_335  [key=0, style=solid];
m0_334 -> m0_336  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_339 -> m0_340  [key=0, style=solid];
m0_339 -> m0_341  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_347 -> m0_348  [key=0, style=solid];
m0_347 -> m0_349  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_352 -> m0_353  [key=0, style=solid];
m0_352 -> m0_354  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_359 -> m0_360  [key=0, style=solid];
m0_359 -> m0_361  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_364 -> m0_365  [key=0, style=solid];
m0_364 -> m0_366  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_371 -> m0_372  [key=0, style=solid];
m0_371 -> m0_373  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_377 -> m0_378  [key=0, style=solid];
m0_384 -> m0_385  [key=0, style=solid];
m0_384 -> m0_386  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_389 -> m0_390  [key=0, style=solid];
m0_389 -> m0_391  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_396 -> m0_397  [key=0, style=solid];
m0_396 -> m0_398  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_401 -> m0_402  [key=0, style=solid];
m0_401 -> m0_403  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_401 -> m0_404  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_410 -> m0_411  [key=0, style=solid];
m0_410 -> m0_412  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_415 -> m0_416  [key=0, style=solid];
m0_415 -> m0_417  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_422 -> m0_423  [key=0, style=solid];
m0_422 -> m0_424  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_427 -> m0_428  [key=0, style=solid];
m0_427 -> m0_429  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_434 -> m0_435  [key=0, style=solid];
m0_434 -> m0_436  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_442 -> m0_443  [key=0, style=solid];
m0_442 -> m0_444  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_442 -> m0_445  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_442 -> m0_446  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_442 -> m0_447  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_453 -> m0_454  [key=0, style=solid];
m0_453 -> m0_455  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_458 -> m0_459  [key=0, style=solid];
m0_458 -> m0_460  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_458 -> m0_461  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_458 -> m0_462  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_467 -> m0_468  [key=0, style=solid];
m0_467 -> m0_469  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_472 -> m0_473  [key=0, style=solid];
m0_472 -> m0_474  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_479 -> m0_480  [key=0, style=solid];
m0_479 -> m0_481  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_484 -> m0_485  [key=0, style=solid];
m0_484 -> m0_486  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_491 -> m0_492  [key=0, style=solid];
m0_491 -> m0_493  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_496 -> m0_497  [key=0, style=solid];
m0_496 -> m0_498  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m0_503 -> m0_504  [key=0, style=solid];
m0_503 -> m0_508  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_507 -> m0_508  [key=0, style=solid];
m0_509 -> m0_507  [color=blue, key=0, style=bold];
m0_510 -> m0_511  [key=0, style=solid];
m0_517 -> m0_518  [key=0, style=solid];
m0_517 -> m0_522  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_521 -> m0_522  [key=0, style=solid];
m0_523 -> m0_521  [color=blue, key=0, style=bold];
m0_524 -> m0_525  [key=0, style=solid];
m0_530 -> m0_531  [key=0, style=solid];
m0_530 -> m0_532  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_537 -> m0_538  [key=0, style=solid];
m0_45 -> m0_37  [color=blue, key=0, style=bold];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_77  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_108 -> m0_109  [key=0, style=solid];
m0_126 -> m0_6  [key=2, style=dotted];
m0_126 -> m0_8  [key=2, style=dotted];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_127 -> m0_6  [key=2, style=dotted];
m0_127 -> m0_8  [key=2, style=dotted];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_511 -> m0_104  [key=2, style=dotted];
m0_511 -> m0_512  [key=0, style=solid];
m0_511 -> m0_513  [key=2, style=dotted];
m0_538 -> m0_104  [key=2, style=dotted];
m0_538 -> m0_539  [key=0, style=solid];
m0_538 -> m0_513  [key=2, style=dotted];
m0_113 -> m0_111  [color=blue, key=0, style=bold];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_114  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_58  [key=2, style=dotted];
m0_56 -> m0_59  [key=2, style=dotted];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_152  [key=2, style=dotted];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_205  [color=darkseagreen4, key=1, label=expireAt, style=dashed];
m0_247 -> m0_248  [key=0, style=solid];
m0_247 -> m0_249  [color=darkseagreen4, key=1, label=expireAt, style=dashed];
m0_540 -> m0_541  [key=0, style=solid];
m0_543 -> m0_544  [key=0, style=solid];
m0_139 -> m0_123  [color=blue, key=0, style=bold];
m0_189 -> m0_183  [color=blue, key=0, style=bold];
m0_219 -> m0_215  [color=blue, key=0, style=bold];
m0_233 -> m0_227  [color=blue, key=0, style=bold];
m0_262 -> m0_258  [color=blue, key=0, style=bold];
m0_276 -> m0_270  [color=blue, key=0, style=bold];
m0_288 -> m0_284  [color=blue, key=0, style=bold];
m0_300 -> m0_296  [color=blue, key=0, style=bold];
m0_314 -> m0_308  [color=blue, key=0, style=bold];
m0_326 -> m0_322  [color=blue, key=0, style=bold];
m0_338 -> m0_334  [color=blue, key=0, style=bold];
m0_351 -> m0_347  [color=blue, key=0, style=bold];
m0_363 -> m0_359  [color=blue, key=0, style=bold];
m0_376 -> m0_371  [color=blue, key=0, style=bold];
m0_388 -> m0_384  [color=blue, key=0, style=bold];
m0_400 -> m0_396  [color=blue, key=0, style=bold];
m0_414 -> m0_410  [color=blue, key=0, style=bold];
m0_426 -> m0_422  [color=blue, key=0, style=bold];
m0_440 -> m0_434  [color=blue, key=0, style=bold];
m0_457 -> m0_453  [color=blue, key=0, style=bold];
m0_471 -> m0_467  [color=blue, key=0, style=bold];
m0_483 -> m0_479  [color=blue, key=0, style=bold];
m0_495 -> m0_491  [color=blue, key=0, style=bold];
m0_506 -> m0_503  [color=blue, key=0, style=bold];
m0_520 -> m0_517  [color=blue, key=0, style=bold];
m0_535 -> m0_530  [color=blue, key=0, style=bold];
m0_72 -> m0_64  [color=blue, key=0, style=bold];
m0_167 -> m0_13  [key=2, style=dotted];
m0_167 -> m0_168  [key=0, style=solid];
m0_167 -> m0_14  [key=2, style=dotted];
m0_29 -> m0_23  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_31  [key=2, style=dotted];
m0_57 -> m0_55  [color=blue, key=0, style=bold];
m0_76 -> m0_74  [color=blue, key=0, style=bold];
m0_146 -> m0_147  [key=0, style=solid];
m0_151 -> m0_149  [color=blue, key=0, style=bold];
m0_163 -> m0_156  [color=blue, key=0, style=bold];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_159  [color=darkseagreen4, key=1, label=correctJobQueue, style=dashed];
m0_157 -> m0_162  [color=darkseagreen4, key=1, label=correctJobQueue, style=dashed];
m0_157 -> m0_7  [key=2, style=dotted];
m0_166 -> m0_167  [key=0, style=solid];
m0_173 -> m0_174  [key=0, style=solid];
m0_171 -> m0_169  [color=blue, key=0, style=bold];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_172  [key=2, style=dotted];
m0_192 -> m0_190  [color=blue, key=0, style=bold];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_193  [key=2, style=dotted];
m0_206 -> m0_197  [color=blue, key=0, style=bold];
m0_210 -> m0_208  [color=blue, key=0, style=bold];
m0_209 -> m0_210  [key=0, style=solid];
m0_209 -> m0_58  [key=2, style=dotted];
m0_209 -> m0_211  [key=2, style=dotted];
m0_223 -> m0_220  [color=blue, key=0, style=bold];
m0_221 -> m0_222  [key=0, style=solid];
m0_221 -> m0_193  [key=2, style=dotted];
m0_222 -> m0_223  [key=0, style=solid];
m0_222 -> m0_193  [key=2, style=dotted];
m0_236 -> m0_234  [color=blue, key=0, style=bold];
m0_235 -> m0_236  [key=0, style=solid];
m0_235 -> m0_237  [key=2, style=dotted];
m0_250 -> m0_241  [color=blue, key=0, style=bold];
m0_253 -> m0_251  [color=blue, key=0, style=bold];
m0_252 -> m0_253  [key=0, style=solid];
m0_252 -> m0_58  [key=2, style=dotted];
m0_252 -> m0_254  [key=2, style=dotted];
m0_266 -> m0_263  [color=blue, key=0, style=bold];
m0_264 -> m0_265  [key=0, style=solid];
m0_264 -> m0_237  [key=2, style=dotted];
m0_265 -> m0_266  [key=0, style=solid];
m0_265 -> m0_237  [key=2, style=dotted];
m0_279 -> m0_277  [color=blue, key=0, style=bold];
m0_278 -> m0_279  [key=0, style=solid];
m0_278 -> m0_280  [key=2, style=dotted];
m0_292 -> m0_289  [color=blue, key=0, style=bold];
m0_290 -> m0_291  [key=0, style=solid];
m0_290 -> m0_280  [key=2, style=dotted];
m0_291 -> m0_292  [key=0, style=solid];
m0_291 -> m0_280  [key=2, style=dotted];
m0_304 -> m0_301  [color=blue, key=0, style=bold];
m0_302 -> m0_303  [key=0, style=solid];
m0_302 -> m0_280  [key=2, style=dotted];
m0_303 -> m0_304  [key=0, style=solid];
m0_303 -> m0_280  [key=2, style=dotted];
m0_317 -> m0_315  [color=blue, key=0, style=bold];
m0_316 -> m0_317  [key=0, style=solid];
m0_316 -> m0_318  [key=2, style=dotted];
m0_330 -> m0_327  [color=blue, key=0, style=bold];
m0_328 -> m0_329  [key=0, style=solid];
m0_328 -> m0_280  [key=2, style=dotted];
m0_329 -> m0_330  [key=0, style=solid];
m0_329 -> m0_318  [key=2, style=dotted];
m0_342 -> m0_339  [color=blue, key=0, style=bold];
m0_340 -> m0_341  [key=0, style=solid];
m0_340 -> m0_280  [key=2, style=dotted];
m0_341 -> m0_342  [key=0, style=solid];
m0_341 -> m0_343  [key=2, style=dotted];
m0_355 -> m0_352  [color=blue, key=0, style=bold];
m0_353 -> m0_354  [key=0, style=solid];
m0_353 -> m0_280  [key=2, style=dotted];
m0_354 -> m0_355  [key=0, style=solid];
m0_354 -> m0_343  [key=2, style=dotted];
m0_367 -> m0_364  [color=blue, key=0, style=bold];
m0_365 -> m0_366  [key=0, style=solid];
m0_365 -> m0_280  [key=2, style=dotted];
m0_366 -> m0_367  [key=0, style=solid];
m0_366 -> m0_343  [key=2, style=dotted];
m0_379 -> m0_377  [color=blue, key=0, style=bold];
m0_378 -> m0_379  [key=0, style=solid];
m0_378 -> m0_380  [key=2, style=dotted];
m0_392 -> m0_389  [color=blue, key=0, style=bold];
m0_390 -> m0_391  [key=0, style=solid];
m0_390 -> m0_380  [key=2, style=dotted];
m0_391 -> m0_392  [key=0, style=solid];
m0_391 -> m0_380  [key=2, style=dotted];
m0_405 -> m0_401  [color=blue, key=0, style=bold];
m0_402 -> m0_403  [key=0, style=solid];
m0_402 -> m0_380  [key=2, style=dotted];
m0_403 -> m0_404  [key=0, style=solid];
m0_403 -> m0_380  [key=2, style=dotted];
m0_404 -> m0_405  [key=0, style=solid];
m0_404 -> m0_406  [key=2, style=dotted];
m0_418 -> m0_415  [color=blue, key=0, style=bold];
m0_416 -> m0_417  [key=0, style=solid];
m0_416 -> m0_380  [key=2, style=dotted];
m0_417 -> m0_418  [key=0, style=solid];
m0_417 -> m0_406  [key=2, style=dotted];
m0_430 -> m0_427  [color=blue, key=0, style=bold];
m0_428 -> m0_429  [key=0, style=solid];
m0_428 -> m0_380  [key=2, style=dotted];
m0_429 -> m0_430  [key=0, style=solid];
m0_429 -> m0_406  [key=2, style=dotted];
m0_448 -> m0_442  [color=blue, key=0, style=bold];
m0_443 -> m0_444  [key=0, style=solid];
m0_443 -> m0_380  [key=2, style=dotted];
m0_444 -> m0_445  [key=0, style=solid];
m0_444 -> m0_380  [key=2, style=dotted];
m0_445 -> m0_446  [key=0, style=solid];
m0_445 -> m0_380  [key=2, style=dotted];
m0_446 -> m0_447  [key=0, style=solid];
m0_446 -> m0_380  [key=2, style=dotted];
m0_447 -> m0_448  [key=0, style=solid];
m0_447 -> m0_449  [key=2, style=dotted];
m0_463 -> m0_458  [color=blue, key=0, style=bold];
m0_459 -> m0_460  [key=0, style=solid];
m0_459 -> m0_380  [key=2, style=dotted];
m0_460 -> m0_461  [key=0, style=solid];
m0_460 -> m0_380  [key=2, style=dotted];
m0_461 -> m0_462  [key=0, style=solid];
m0_461 -> m0_380  [key=2, style=dotted];
m0_462 -> m0_463  [key=0, style=solid];
m0_462 -> m0_449  [key=2, style=dotted];
m0_475 -> m0_472  [color=blue, key=0, style=bold];
m0_473 -> m0_474  [key=0, style=solid];
m0_473 -> m0_380  [key=2, style=dotted];
m0_474 -> m0_475  [key=0, style=solid];
m0_474 -> m0_449  [key=2, style=dotted];
m0_487 -> m0_484  [color=blue, key=0, style=bold];
m0_485 -> m0_486  [key=0, style=solid];
m0_485 -> m0_380  [key=2, style=dotted];
m0_486 -> m0_487  [key=0, style=solid];
m0_486 -> m0_449  [key=2, style=dotted];
m0_499 -> m0_496  [color=blue, key=0, style=bold];
m0_497 -> m0_498  [key=0, style=solid];
m0_497 -> m0_380  [key=2, style=dotted];
m0_498 -> m0_499  [key=0, style=solid];
m0_498 -> m0_449  [key=2, style=dotted];
m0_512 -> m0_510  [color=blue, key=0, style=bold];
m0_526 -> m0_524  [color=blue, key=0, style=bold];
m0_525 -> m0_526  [key=0, style=solid];
m0_525 -> m0_513  [key=2, style=dotted];
m0_539 -> m0_537  [color=blue, key=0, style=bold];
m0_107 -> m0_105  [color=blue, key=0, style=bold];
m0_106 -> m0_107  [key=0, style=solid];
m0_110 -> m0_108  [color=blue, key=0, style=bold];
m0_109 -> m0_110  [key=0, style=solid];
m0_140 -> m0_141  [key=0, style=solid];
m0_204 -> m0_53  [key=2, style=dotted];
m0_204 -> m0_205  [key=0, style=solid];
m0_204 -> m0_207  [key=2, style=dotted];
m0_205 -> m0_53  [key=2, style=dotted];
m0_205 -> m0_206  [key=0, style=solid];
m0_205 -> m0_207  [key=2, style=dotted];
m0_248 -> m0_53  [key=2, style=dotted];
m0_248 -> m0_249  [key=0, style=solid];
m0_248 -> m0_207  [key=2, style=dotted];
m0_249 -> m0_53  [key=2, style=dotted];
m0_249 -> m0_250  [key=0, style=solid];
m0_249 -> m0_207  [key=2, style=dotted];
m0_542 -> m0_540  [color=blue, key=0, style=bold];
m0_541 -> m0_542  [key=0, style=solid];
m0_545 -> m0_543  [color=blue, key=0, style=bold];
m0_544 -> m0_545  [key=0, style=solid];
m0_12 -> m0_10  [color=blue, key=0, style=bold];
m0_12 -> m0_13  [key=0, style=solid];
m0_168 -> m0_166  [color=blue, key=0, style=bold];
m0_30 -> m0_28  [color=blue, key=0, style=bold];
m0_148 -> m0_146  [color=blue, key=0, style=bold];
m0_147 -> m0_114  [key=2, style=dotted];
m0_147 -> m0_148  [key=0, style=solid];
m0_175 -> m0_173  [color=blue, key=0, style=bold];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_176  [key=2, style=dotted];
m0_142 -> m0_140  [color=blue, key=0, style=bold];
m0_141 -> m0_142  [key=0, style=solid];
m0_144 -> m0_145  [key=0, style=solid];
m0_145 -> m0_143  [color=blue, key=0, style=bold];
m0_177 -> m0_178  [key=0, style=solid];
m0_178 -> m0_46  [key=2, style=dotted];
m0_178 -> m0_47  [key=2, style=dotted];
m0_178 -> m0_179  [key=0, style=solid];
m0_179 -> m0_177  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_1 -> m0_3  [color=darkseagreen4, key=1, label=defaultProvider, style=dashed];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_5  [key=2, style=dotted];
m0_393 -> m0_394  [key=0, style=solid];
m0_394 -> m0_36  [key=2, style=dotted];
m0_394 -> m0_395  [key=0, style=solid];
m0_394 -> m0_396  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_395 -> m0_393  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_6  [key=2, style=dotted];
m0_2 -> m0_8  [key=2, style=dotted];
m0_2 -> m0_7  [key=2, style=dotted];
m0_2 -> m0_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [key=2, style=dotted];
m0_3 -> m0_6  [key=2, style=dotted];
m0_3 -> m0_34  [color=darkorchid, key=3, label="Local variable Hangfire.BackgroundJobServerOptions options", style=bold];
m0_3 -> m0_9  [key=2, style=dotted];
m0_4 -> m0_2  [color=blue, key=0, style=bold];
m0_4 -> m0_0  [color=blue, key=0, style=bold];
m0_464 -> m0_465  [key=0, style=solid];
m0_465 -> m0_36  [key=2, style=dotted];
m0_465 -> m0_466  [key=0, style=solid];
m0_465 -> m0_467  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_466 -> m0_464  [color=blue, key=0, style=bold];
m0_476 -> m0_477  [key=0, style=solid];
m0_477 -> m0_36  [key=2, style=dotted];
m0_477 -> m0_478  [key=0, style=solid];
m0_477 -> m0_479  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_478 -> m0_476  [color=blue, key=0, style=bold];
m0_281 -> m0_282  [key=0, style=solid];
m0_282 -> m0_36  [key=2, style=dotted];
m0_282 -> m0_283  [key=0, style=solid];
m0_282 -> m0_284  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_283 -> m0_281  [color=blue, key=0, style=bold];
m0_488 -> m0_489  [key=0, style=solid];
m0_489 -> m0_36  [key=2, style=dotted];
m0_489 -> m0_490  [key=0, style=solid];
m0_489 -> m0_491  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_490 -> m0_488  [color=blue, key=0, style=bold];
m0_14 -> m0_12  [color=blue, key=0, style=bold];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_5  [key=2, style=dotted];
m0_13 -> m0_15  [key=2, style=dotted];
m0_78 -> m0_79  [key=0, style=solid];
m0_80 -> m0_80  [color=green, key=3, label="Local variable Hangfire.Server.DelayedJobScheduler scheduler", style=bold];
m0_80 -> m0_81  [color=green, key=0, style=solid];
m0_80 -> m0_36  [color=green, key=2, style=dotted];
m0_80 -> m0_82  [color=green, key=1, label="lambda expression", style=dashed];
m0_79 -> m0_80  [color=green, key=0, style=solid];
m0_79 -> m0_83  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_79 -> m0_84  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_81 -> m0_78  [color=blue, key=0, style=bold];
m0_194 -> m0_195  [key=0, style=solid];
m0_195 -> m0_36  [key=2, style=dotted];
m0_195 -> m0_196  [key=0, style=solid];
m0_195 -> m0_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_196 -> m0_194  [color=blue, key=0, style=bold];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_5  [key=2, style=dotted];
m0_23 -> m0_15  [key=2, style=dotted];
m0_546 -> m0_548  [color=darkseagreen4, key=1, label="System.Action<SqlConnection>", style=dashed];
m0_546 -> m0_547  [key=0, style=solid];
m0_548 -> m0_550  [key=2, style=dotted];
m0_548 -> m0_549  [key=0, style=solid];
m0_547 -> m0_548  [key=0, style=solid];
m0_547 -> m0_31  [key=2, style=dotted];
m0_549 -> m0_546  [color=blue, key=0, style=bold];
m0_514 -> m0_515  [key=0, style=solid];
m0_515 -> m0_36  [key=2, style=dotted];
m0_515 -> m0_516  [key=0, style=solid];
m0_515 -> m0_517  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_516 -> m0_514  [color=blue, key=0, style=bold];
m0_24 -> m0_22  [color=blue, key=0, style=bold];
m0_24 -> m0_25  [key=0, style=solid];
m0_450 -> m0_451  [key=0, style=solid];
m0_451 -> m0_36  [key=2, style=dotted];
m0_451 -> m0_452  [key=0, style=solid];
m0_451 -> m0_453  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_452 -> m0_450  [color=blue, key=0, style=bold];
m0_238 -> m0_239  [key=0, style=solid];
m0_239 -> m0_36  [key=2, style=dotted];
m0_239 -> m0_240  [key=0, style=solid];
m0_239 -> m0_241  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_240 -> m0_238  [color=blue, key=0, style=bold];
m0_180 -> m0_181  [key=0, style=solid];
m0_181 -> m0_36  [key=2, style=dotted];
m0_181 -> m0_182  [key=0, style=solid];
m0_181 -> m0_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_182 -> m0_180  [color=blue, key=0, style=bold];
m0_381 -> m0_382  [key=0, style=solid];
m0_382 -> m0_36  [key=2, style=dotted];
m0_382 -> m0_383  [key=0, style=solid];
m0_382 -> m0_384  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_383 -> m0_381  [color=blue, key=0, style=bold];
m0_556 -> m0_80  [color=green, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_89  [color=green, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_90  [color=green, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_93  [color=green, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_16  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_21  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_34  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_40  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_41  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_43  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_62  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_67  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_68  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_70  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_121  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_129  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_130  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_154  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_160  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_161  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_181  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_184  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_195  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_198  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_213  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_216  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_225  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_228  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_239  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_242  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_256  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_259  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_268  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_271  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_282  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_285  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_294  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_297  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_306  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_309  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_320  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_323  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_332  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_335  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_345  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_348  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_357  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_360  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_369  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_372  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_382  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_385  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_394  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_397  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_408  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_411  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_420  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_423  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_432  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_435  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_451  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_454  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_465  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_468  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_477  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_480  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_489  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_492  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_501  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_504  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_508  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_515  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_518  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_522  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_528  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_531  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_556 -> m0_551  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m0_562 -> m0_116  [color=green, key=1, label=jobId, style=dashed];
m0_563 -> m0_116  [color=green, key=1, label=state, style=dashed];
m0_561 -> m0_83  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_561 -> m0_84  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_567 -> m0_508  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_568 -> m0_522  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m0_559 -> m0_65  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_559 -> m0_66  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_557 -> m0_38  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_557 -> m0_39  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_564 -> m0_124  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m0_560 -> m0_75  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_558 -> m0_56  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_565 -> m0_150  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_566 -> m0_150  [color=darkseagreen4, key=1, label=state, style=dashed];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [color=darkseagreen4, key=1, label=type, style=dashed];
m3_1 -> m3_5  [color=darkseagreen4, key=1, label=type, style=dashed];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_9  [key=2, style=dotted];
m3_2 -> m3_6  [color=darkseagreen4, key=1, label=methodInfo, style=dashed];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_10  [key=2, style=dotted];
m3_3 -> m3_11  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_13  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_13  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_12  [key=2, style=dotted];
m3_4 -> m3_6  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_4 -> m3_7  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_13  [key=2, style=dotted];
m3_8 -> m3_0  [color=blue, key=0, style=bold];
m3_63 -> m3_94  [key=0, style=solid];
m3_94 -> m3_63  [color=blue, key=0, style=bold];
m3_49 -> m3_91  [key=0, style=solid];
m3_49 -> m3_3  [color=darkorchid, key=3, label="Parameter variable string arg", style=bold];
m3_91 -> m3_49  [color=blue, key=0, style=bold];
m3_14 -> m3_15  [key=0, style=solid];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_10  [key=2, style=dotted];
m3_15 -> m3_20  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_18  [key=2, style=dotted];
m3_16 -> m3_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_17 -> m3_14  [color=blue, key=0, style=bold];
m3_92 -> m3_93  [key=0, style=solid];
m3_93 -> m3_92  [color=blue, key=0, style=bold];
m3_29 -> m3_30  [key=0, style=solid];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_10  [key=2, style=dotted];
m3_30 -> m3_11  [key=2, style=dotted];
m3_30 -> m3_34  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_18  [key=2, style=dotted];
m3_31 -> m3_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_32 -> m3_29  [color=blue, key=0, style=bold];
m3_64 -> m3_65  [key=0, style=solid];
m3_65 -> m3_66  [key=0, style=solid];
m3_65 -> m3_56  [key=2, style=dotted];
m3_65 -> m3_45  [key=2, style=dotted];
m3_65 -> m3_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_12  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_58  [key=2, style=dotted];
m3_68 -> m3_64  [color=blue, key=0, style=bold];
m3_72 -> m3_95  [key=0, style=solid];
m3_72 -> m3_65  [color=darkorchid, key=3, label="Parameter variable T2 arg2", style=bold];
m3_95 -> m3_72  [color=blue, key=0, style=bold];
m3_73 -> m3_74  [key=0, style=solid];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_10  [key=2, style=dotted];
m3_74 -> m3_11  [key=2, style=dotted];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_12  [key=2, style=dotted];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_13  [key=2, style=dotted];
m3_77 -> m3_73  [color=blue, key=0, style=bold];
m3_36 -> m3_37  [key=0, style=solid];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_44  [key=2, style=dotted];
m3_37 -> m3_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_45  [key=2, style=dotted];
m3_38 -> m3_40  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m3_38 -> m3_41  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m3_38 -> m3_42  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_13  [key=2, style=dotted];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_13  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_11  [key=2, style=dotted];
m3_41 -> m3_13  [key=2, style=dotted];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_11  [key=2, style=dotted];
m3_42 -> m3_13  [key=2, style=dotted];
m3_43 -> m3_36  [color=blue, key=0, style=bold];
m3_50 -> m3_51  [key=0, style=solid];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_56  [key=2, style=dotted];
m3_51 -> m3_45  [key=2, style=dotted];
m3_51 -> m3_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_12  [key=2, style=dotted];
m3_52 -> m3_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_57  [key=2, style=dotted];
m3_53 -> m3_58  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_59  [key=2, style=dotted];
m3_54 -> m3_13  [key=2, style=dotted];
m3_55 -> m3_50  [color=blue, key=0, style=bold];
m3_96 -> m3_97  [key=0, style=solid];
m3_97 -> m3_96  [color=blue, key=0, style=bold];
m3_88 -> m3_89  [key=0, style=solid];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_12  [key=2, style=dotted];
m3_19 -> m3_20  [key=0, style=solid];
m3_21 -> m3_19  [color=blue, key=0, style=bold];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_12  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_28 -> m3_26  [color=blue, key=0, style=bold];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_12  [key=2, style=dotted];
m3_33 -> m3_34  [key=0, style=solid];
m3_35 -> m3_33  [color=blue, key=0, style=bold];
m3_46 -> m3_47  [key=0, style=solid];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_49  [key=2, style=dotted];
m3_48 -> m3_46  [color=blue, key=0, style=bold];
m3_60 -> m3_61  [key=0, style=solid];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_63  [key=2, style=dotted];
m3_62 -> m3_60  [color=blue, key=0, style=bold];
m3_69 -> m3_70  [key=0, style=solid];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_72  [key=2, style=dotted];
m3_71 -> m3_69  [color=blue, key=0, style=bold];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_12  [key=2, style=dotted];
m3_90 -> m3_88  [color=blue, key=0, style=bold];
m3_22 -> m3_23  [key=0, style=solid];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_10  [key=2, style=dotted];
m3_23 -> m3_27  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_18  [key=2, style=dotted];
m3_24 -> m3_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_25 -> m3_22  [color=blue, key=0, style=bold];
m3_83 -> m3_84  [key=0, style=solid];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_10  [key=2, style=dotted];
m3_84 -> m3_11  [key=2, style=dotted];
m3_84 -> m3_89  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_18  [key=2, style=dotted];
m3_85 -> m3_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_18  [key=2, style=dotted];
m3_87 -> m3_83  [color=blue, key=0, style=bold];
m3_78 -> m3_79  [key=0, style=solid];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_10  [key=2, style=dotted];
m3_79 -> m3_11  [key=2, style=dotted];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_12  [key=2, style=dotted];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_13  [key=2, style=dotted];
m3_82 -> m3_78  [color=blue, key=0, style=bold];
m3_98 -> m3_20  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m3_99 -> m3_27  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m3_100 -> m3_34  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m3_101 -> m3_89  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_14  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_14  [key=0, style=solid];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_16  [key=2, style=dotted];
m5_13 -> m5_15  [key=0, style=solid];
m5_13 -> m5_8  [key=2, style=dotted];
m5_15 -> m5_11  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [color=blue, key=0, style=bold];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_6  [color=darkseagreen4, key=1, label="HangFire.JobStorage", style=dashed];
m5_2 -> m5_2  [color=darkorchid, key=3, label="Field variable string RecurringJobId", style=bold];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_5  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_10  [key=2, style=dotted];
m5_6 -> m5_9  [key=2, style=dotted];
m5_4 -> m5_7  [key=0, style=solid];
m5_4 -> m5_8  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_9  [key=2, style=dotted];
m5_7 -> m5_2  [color=blue, key=0, style=bold];
m5_17 -> m5_5  [color=darkseagreen4, key=1, label="HangFire.States.StateMachineFactory", style=dashed];
m5_17 -> m5_6  [color=darkseagreen4, key=1, label="HangFire.States.StateMachineFactory", style=dashed];
m5_17 -> m5_14  [color=darkseagreen4, key=1, label="HangFire.States.StateMachineFactory", style=dashed];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_141  [key=2, style=dotted];
m6_39 -> m6_139  [key=2, style=dotted];
m6_107 -> m6_116  [key=0, style=solid];
m6_107 -> m6_130  [key=2, style=dotted];
m6_99 -> m6_100  [key=0, style=solid];
m6_99 -> m6_113  [key=0, style=solid];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_130  [key=2, style=dotted];
m6_73 -> m6_74  [key=0, style=solid];
m6_73 -> m6_130  [key=2, style=dotted];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_130  [key=2, style=dotted];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_130  [key=2, style=dotted];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_70  [key=2, style=dotted];
m6_55 -> m6_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_55 -> m6_130  [key=2, style=dotted];
m6_61 -> m6_60  [color=green, key=0, style=solid];
m6_61 -> m6_74  [color=green, key=2, style=dotted];
m6_61 -> m6_62  [key=0, style=solid];
m6_61 -> m6_130  [key=2, style=dotted];
m6_47 -> m6_61  [color=green, key=1, label="HangFire.States.JobState", style=dashed];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_49  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m6_47 -> m6_51  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_47 -> m6_54  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m6_47 -> m6_55  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m6_47 -> m6_77  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m6_47 -> m6_56  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<HangFire.IJobStateAppliedFilter>", style=dashed];
m6_47 -> m6_58  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m6_47 -> m6_59  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m6_47 -> m6_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<HangFire.IJobStateAppliedFilter>", style=dashed];
m6_47 -> m6_130  [key=2, style=dotted];
m6_51 -> m6_61  [color=green, key=1, label=transaction, style=dashed];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_66  [key=2, style=dotted];
m6_51 -> m6_54  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m6_51 -> m6_55  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m6_51 -> m6_57  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m6_51 -> m6_58  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m6_51 -> m6_59  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m6_51 -> m6_62  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m6_51 -> m6_130  [key=2, style=dotted];
m6_60 -> m6_61  [color=green, key=0, style=solid];
m6_60 -> m6_62  [key=0, style=solid];
m6_60 -> m6_139  [key=2, style=dotted];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_42  [key=2, style=dotted];
m6_48 -> m6_64  [key=2, style=dotted];
m6_48 -> m6_52  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m6_48 -> m6_53  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m6_48 -> m6_54  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m6_48 -> m6_57  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m6_48 -> m6_139  [key=2, style=dotted];
m6_49 -> m6_51  [key=0, style=solid];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_65  [key=2, style=dotted];
m6_49 -> m6_130  [key=2, style=dotted];
m6_54 -> m6_55  [key=0, style=solid];
m6_54 -> m6_69  [key=2, style=dotted];
m6_54 -> m6_139  [key=2, style=dotted];
m6_56 -> m6_57  [key=0, style=solid];
m6_56 -> m6_58  [key=0, style=solid];
m6_56 -> m6_121  [key=0, style=solid];
m6_56 -> m6_60  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_56 -> m6_69  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_56 -> m6_72  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_56 -> m6_75  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_56 -> m6_77  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_56 -> m6_79  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_56 -> m6_84  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_56 -> m6_87  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_56 -> m6_90  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_56 -> m6_93  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_56 -> m6_94  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_56 -> m6_99  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_56 -> m6_100  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_56 -> m6_102  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_56 -> m6_104  [color=red, key=1, label=job, style=dashed];
m6_56 -> m6_106  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_56 -> m6_111  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_56 -> m6_117  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_56 -> m6_118  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_72  [key=2, style=dotted];
m6_58 -> m6_139  [key=2, style=dotted];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_73  [key=2, style=dotted];
m6_59 -> m6_130  [key=2, style=dotted];
m6_52 -> m6_58  [key=0, style=solid];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_67  [key=2, style=dotted];
m6_52 -> m6_139  [key=2, style=dotted];
m6_57 -> m6_56  [key=0, style=solid];
m6_57 -> m6_71  [key=2, style=dotted];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_130  [key=2, style=dotted];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_75  [key=2, style=dotted];
m6_62 -> m6_130  [key=2, style=dotted];
m6_50 -> m6_63  [key=0, style=solid];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_139  [key=2, style=dotted];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_55  [key=0, style=solid];
m6_53 -> m6_68  [key=2, style=dotted];
m6_53 -> m6_130  [key=2, style=dotted];
m6_63 -> m6_47  [color=blue, key=0, style=bold];
m6_63 -> m6_64  [key=0, style=solid];
m6_63 -> m6_65  [color=darkseagreen4, key=1, label=cronDescription, style=dashed];
m6_63 -> m6_67  [color=darkseagreen4, key=1, label=cronDescription, style=dashed];
m6_63 -> m6_7  [color=darkorchid, key=3, label="Local variable string cronDescription", style=bold];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_130  [key=2, style=dotted];
m6_42 -> m6_43  [key=0, style=solid];
m6_42 -> m6_139  [key=2, style=dotted];
m6_106 -> m6_107  [key=0, style=solid];
m6_106 -> m6_145  [key=2, style=dotted];
m6_106 -> m6_139  [key=2, style=dotted];
m6_95 -> m6_96  [key=0, style=solid];
m6_95 -> m6_130  [key=2, style=dotted];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_139  [key=2, style=dotted];
m6_71 -> m6_72  [key=0, style=solid];
m6_71 -> m6_130  [key=2, style=dotted];
m6_74 -> m6_75  [key=0, style=solid];
m6_74 -> m6_130  [key=2, style=dotted];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_130  [key=2, style=dotted];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_11  [color=darkseagreen4, key=1, label=storageConnection, style=dashed];
m6_9 -> m6_12  [color=red, key=1, label=storageConnection, style=dashed];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_130  [key=2, style=dotted];
m6_17 -> m6_21  [key=0, style=solid];
m6_17 -> m6_18  [key=0, style=solid];
m6_21 -> m6_23  [key=2, style=dotted];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_130  [key=2, style=dotted];
m6_22 -> m6_17  [color=blue, key=0, style=bold];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_140  [key=2, style=dotted];
m6_22 -> m6_139  [key=2, style=dotted];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_130  [key=2, style=dotted];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_139  [key=2, style=dotted];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_130  [key=2, style=dotted];
m6_96 -> m6_97  [key=0, style=solid];
m6_96 -> m6_139  [key=2, style=dotted];
m6_77 -> m6_78  [key=0, style=solid];
m6_77 -> m6_42  [key=2, style=dotted];
m6_77 -> m6_79  [key=2, style=dotted];
m6_77 -> m6_143  [key=2, style=dotted];
m6_77 -> m6_139  [key=2, style=dotted];
m6_101 -> m6_102  [key=0, style=solid];
m6_101 -> m6_42  [key=2, style=dotted];
m6_101 -> m6_99  [key=2, style=dotted];
m6_101 -> m6_130  [key=2, style=dotted];
m6_104 -> m6_105  [color=red, key=0, style=solid];
m6_104 -> m6_42  [key=2, style=dotted];
m6_104 -> m6_106  [key=2, style=dotted];
m6_104 -> m6_107  [key=2, style=dotted];
m6_104 -> m6_148  [color=red, key=2, style=dotted];
m6_104 -> m6_139  [color=red, key=2, style=dotted];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_130  [key=2, style=dotted];
m6_78 -> m6_76  [color=blue, key=0, style=bold];
m6_78 -> m6_79  [key=0, style=solid];
m6_78 -> m6_130  [key=2, style=dotted];
m6_97 -> m6_42  [key=2, style=dotted];
m6_97 -> m6_98  [key=0, style=solid];
m6_97 -> m6_9  [key=2, style=dotted];
m6_97 -> m6_99  [key=2, style=dotted];
m6_97 -> m6_130  [key=2, style=dotted];
m6_100 -> m6_101  [key=0, style=solid];
m6_100 -> m6_108  [key=0, style=solid];
m6_100 -> m6_146  [key=2, style=dotted];
m6_102 -> m6_100  [color=blue, key=0, style=bold];
m6_102 -> m6_103  [key=0, style=solid];
m6_102 -> m6_147  [key=2, style=dotted];
m6_102 -> m6_139  [key=2, style=dotted];
m6_103 -> m6_104  [color=red, key=0, style=solid];
m6_103 -> m6_130  [key=2, style=dotted];
m6_105 -> m6_103  [color=blue, key=0, style=bold];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_130  [key=2, style=dotted];
m6_98 -> m6_96  [color=blue, key=0, style=bold];
m6_98 -> m6_99  [key=0, style=solid];
m6_98 -> m6_130  [key=2, style=dotted];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_13  [key=0, style=solid];
m6_11 -> m6_17  [key=2, style=dotted];
m6_11 -> m6_12  [color=red, key=0, style=solid];
m6_11 -> m6_16  [key=2, style=dotted];
m6_11 -> m6_135  [key=2, style=dotted];
m6_11 -> m6_136  [key=2, style=dotted];
m6_11 -> m6_36  [color=darkseagreen4, key=1, label=pager, style=dashed];
m6_11 -> m6_39  [color=darkseagreen4, key=1, label=pager, style=dashed];
m6_11 -> m6_122  [color=darkseagreen4, key=1, label=pager, style=dashed];
m6_11 -> m6_125  [color=darkseagreen4, key=1, label=pager, style=dashed];
m6_12 -> m6_17  [key=2, style=dotted];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_18  [key=2, style=dotted];
m6_12 -> m6_14  [color=red, key=0, style=solid];
m6_12 -> m6_137  [color=red, key=2, style=dotted];
m6_12 -> m6_56  [color=red, key=1, label=recurringJobs, style=dashed];
m6_13 -> m6_17  [key=2, style=dotted];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_19  [key=2, style=dotted];
m6_13 -> m6_138  [key=2, style=dotted];
m6_13 -> m6_56  [color=darkseagreen4, key=1, label=recurringJobs, style=dashed];
m6_14 -> m6_17  [key=2, style=dotted];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_20  [key=2, style=dotted];
m6_14 -> m6_130  [key=2, style=dotted];
m6_15 -> m6_10  [color=blue, key=0, style=bold];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_139  [key=2, style=dotted];
m6_65 -> m6_66  [key=0, style=solid];
m6_65 -> m6_71  [key=0, style=solid];
m6_24 -> m6_25  [color=green, key=0, style=solid];
m6_24 -> m6_27  [color=green, key=1, label="HangFire.States.JobState", style=dashed];
m6_24 -> m6_30  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_24 -> m6_32  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m6_24 -> m6_33  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_24 -> m6_35  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_24 -> m6_37  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_24 -> m6_139  [key=2, style=dotted];
m6_25 -> m6_26  [color=green, key=0, style=solid];
m6_25 -> m6_27  [color=green, key=0, style=solid];
m6_25 -> m6_130  [key=2, style=dotted];
m6_26 -> m6_38  [color=green, key=0, style=solid];
m6_26 -> m6_39  [color=green, key=2, style=dotted];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_139  [key=2, style=dotted];
m6_27 -> m6_28  [color=green, key=0, style=solid];
m6_27 -> m6_29  [color=green, key=0, style=solid];
m6_27 -> m6_130  [key=2, style=dotted];
m6_28 -> m6_38  [color=green, key=0, style=solid];
m6_28 -> m6_39  [color=green, key=2, style=dotted];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_140  [key=2, style=dotted];
m6_28 -> m6_139  [key=2, style=dotted];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_40  [key=2, style=dotted];
m6_29 -> m6_41  [key=2, style=dotted];
m6_29 -> m6_31  [color=darkseagreen4, key=1, label=changingFilters, style=dashed];
m6_29 -> m6_130  [key=2, style=dotted];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_42  [key=2, style=dotted];
m6_30 -> m6_43  [key=2, style=dotted];
m6_30 -> m6_44  [key=2, style=dotted];
m6_30 -> m6_139  [key=2, style=dotted];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_34  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m6_32 -> m6_35  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m6_32 -> m6_139  [key=2, style=dotted];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_45  [key=2, style=dotted];
m6_33 -> m6_37  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m6_33 -> m6_130  [key=2, style=dotted];
m6_35 -> m6_46  [key=2, style=dotted];
m6_35 -> m6_31  [key=0, style=solid];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_130  [key=2, style=dotted];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_47  [key=2, style=dotted];
m6_37 -> m6_130  [key=2, style=dotted];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_33  [color=darkseagreen4, key=1, label=filter, style=dashed];
m6_31 -> m6_36  [key=0, style=solid];
m6_31 -> m6_130  [key=2, style=dotted];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_31  [key=0, style=solid];
m6_34 -> m6_139  [key=2, style=dotted];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_40  [key=2, style=dotted];
m6_36 -> m6_41  [key=2, style=dotted];
m6_38 -> m6_24  [color=blue, key=0, style=bold];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_130  [key=2, style=dotted];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_130  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_131  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_4 -> m6_5  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_132  [key=2, style=dotted];
m6_5 -> m6_133  [key=2, style=dotted];
m6_5 -> m6_11  [color=darkseagreen4, key=1, label=from, style=dashed];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_132  [key=2, style=dotted];
m6_6 -> m6_133  [key=2, style=dotted];
m6_6 -> m6_11  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_36  [color=darkseagreen4, key=1, label=pager, style=dashed];
m6_7 -> m6_39  [color=darkseagreen4, key=1, label=pager, style=dashed];
m6_7 -> m6_122  [color=darkseagreen4, key=1, label=pager, style=dashed];
m6_7 -> m6_125  [color=darkseagreen4, key=1, label=pager, style=dashed];
m6_7 -> m6_7  [color=darkorchid, key=3, label="Local variable Hangfire.Dashboard.Pager pager", style=bold];
m6_7 -> m6_9  [key=2, style=dotted];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_134  [key=2, style=dotted];
m6_8 -> m6_13  [color=darkseagreen4, key=1, label=connection, style=dashed];
m6_8 -> m6_6  [color=blue, key=0, style=bold];
m6_122 -> m6_123  [key=0, style=solid];
m6_122 -> m6_127  [key=0, style=solid];
m6_125 -> m6_126  [key=0, style=solid];
m6_125 -> m6_149  [key=2, style=dotted];
m6_125 -> m6_139  [key=2, style=dotted];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_139  [key=2, style=dotted];
m6_20 -> m6_128  [key=0, style=solid];
m6_20 -> m6_130  [key=2, style=dotted];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_130  [key=2, style=dotted];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_139  [key=2, style=dotted];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_139  [key=2, style=dotted];
m6_46 -> m6_80  [color=green, key=0, style=solid];
m6_46 -> m6_81  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m6_121 -> m6_122  [key=0, style=solid];
m6_121 -> m6_130  [key=2, style=dotted];
m6_72 -> m6_73  [key=0, style=solid];
m6_72 -> m6_139  [key=2, style=dotted];
m6_75 -> m6_76  [key=0, style=solid];
m6_75 -> m6_81  [key=0, style=solid];
m6_75 -> m6_142  [key=2, style=dotted];
m6_84 -> m6_85  [key=0, style=solid];
m6_84 -> m6_89  [key=0, style=solid];
m6_84 -> m6_87  [color=darkseagreen4, key=1, label=bool, style=dashed];
m6_84 -> m6_88  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m6_84 -> m6_97  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m6_84 -> m6_101  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m6_84 -> m6_90  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m6_84 -> m6_91  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m6_84 -> m6_93  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m6_84 -> m6_104  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m6_87 -> m6_88  [key=0, style=solid];
m6_87 -> m6_144  [key=2, style=dotted];
m6_87 -> m6_139  [key=2, style=dotted];
m6_87 -> m6_90  [key=0, style=solid];
m6_90 -> m6_91  [key=0, style=solid];
m6_90 -> m6_139  [key=2, style=dotted];
m6_90 -> m6_23  [key=2, style=dotted];
m6_93 -> m6_94  [key=0, style=solid];
m6_93 -> m6_95  [key=0, style=solid];
m6_93 -> m6_70  [key=2, style=dotted];
m6_93 -> m6_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_94 -> m6_98  [key=0, style=solid];
m6_94 -> m6_145  [key=2, style=dotted];
m6_94 -> m6_139  [key=2, style=dotted];
m6_94 -> m6_84  [color=blue, key=0, style=bold];
m6_111 -> m6_112  [key=0, style=solid];
m6_111 -> m6_145  [key=2, style=dotted];
m6_111 -> m6_139  [key=2, style=dotted];
m6_111 -> m6_101  [color=darkseagreen4, key=1, label=properties, style=dashed];
m6_111 -> m6_104  [color=darkseagreen4, key=1, label=properties, style=dashed];
m6_117 -> m6_118  [key=0, style=solid];
m6_117 -> m6_119  [key=0, style=solid];
m6_118 -> m6_120  [key=0, style=solid];
m6_118 -> m6_145  [key=2, style=dotted];
m6_118 -> m6_139  [key=2, style=dotted];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_130  [key=2, style=dotted];
m6_67 -> m6_68  [key=0, style=solid];
m6_67 -> m6_139  [key=2, style=dotted];
m6_70 -> m6_74  [key=0, style=solid];
m6_70 -> m6_130  [key=2, style=dotted];
m6_81 -> m6_82  [key=0, style=solid];
m6_81 -> m6_130  [key=2, style=dotted];
m6_81 -> m6_72  [key=2, style=dotted];
m6_80 -> m6_83  [key=0, style=solid];
m6_80 -> m6_130  [key=2, style=dotted];
m6_80 -> m6_81  [color=green, key=0, style=solid];
m6_80 -> m6_66  [color=green, key=2, style=dotted];
m6_80 -> m6_82  [color=green, key=1, label=transaction, style=dashed];
m6_82 -> m6_83  [key=0, style=solid];
m6_82 -> m6_130  [key=2, style=dotted];
m6_82 -> m6_75  [key=2, style=dotted];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_130  [key=2, style=dotted];
m6_83 -> m6_46  [color=blue, key=0, style=bold];
m6_85 -> m6_86  [color=green, key=0, style=solid];
m6_85 -> m6_130  [key=2, style=dotted];
m6_85 -> m6_6  [key=2, style=dotted];
m6_85 -> m6_89  [color=darkseagreen4, key=1, label=properties, style=dashed];
m6_85 -> m6_101  [color=darkseagreen4, key=1, label=properties, style=dashed];
m6_85 -> m6_90  [color=darkseagreen4, key=1, label=properties, style=dashed];
m6_85 -> m6_91  [color=darkseagreen4, key=1, label=properties, style=dashed];
m6_85 -> m6_92  [color=darkseagreen4, key=1, label=properties, style=dashed];
m6_85 -> m6_93  [color=darkseagreen4, key=1, label=properties, style=dashed];
m6_85 -> m6_104  [color=darkseagreen4, key=1, label=properties, style=dashed];
m6_89 -> m6_90  [key=0, style=solid];
m6_89 -> m6_130  [key=2, style=dotted];
m6_89 -> m6_70  [key=2, style=dotted];
m6_89 -> m6_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_86 -> m6_87  [color=green, key=0, style=solid];
m6_86 -> m6_130  [key=2, style=dotted];
m6_86 -> m6_92  [color=green, key=1, label=now, style=dashed];
m6_88 -> m6_92  [key=0, style=solid];
m6_88 -> m6_130  [key=2, style=dotted];
m6_88 -> m6_89  [key=0, style=solid];
m6_88 -> m6_70  [key=2, style=dotted];
m6_88 -> m6_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_91 -> m6_92  [key=0, style=solid];
m6_91 -> m6_130  [key=2, style=dotted];
m6_91 -> m6_23  [key=2, style=dotted];
m6_92 -> m6_93  [key=0, style=solid];
m6_92 -> m6_130  [key=2, style=dotted];
m6_92 -> m6_95  [key=2, style=dotted];
m6_92 -> m6_23  [key=2, style=dotted];
m6_113 -> m6_114  [key=0, style=solid];
m6_113 -> m6_130  [key=2, style=dotted];
m6_108 -> m6_109  [key=0, style=solid];
m6_108 -> m6_130  [key=2, style=dotted];
m6_109 -> m6_110  [key=0, style=solid];
m6_109 -> m6_139  [key=2, style=dotted];
m6_109 -> m6_77  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m6_110 -> m6_111  [key=0, style=solid];
m6_110 -> m6_130  [key=2, style=dotted];
m6_110 -> m6_101  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m6_110 -> m6_104  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m6_110 -> m6_97  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m6_112 -> m6_116  [key=0, style=solid];
m6_112 -> m6_130  [key=2, style=dotted];
m6_114 -> m6_115  [key=0, style=solid];
m6_114 -> m6_139  [key=2, style=dotted];
m6_115 -> m6_116  [key=0, style=solid];
m6_115 -> m6_130  [key=2, style=dotted];
m6_116 -> m6_117  [key=0, style=solid];
m6_116 -> m6_130  [key=2, style=dotted];
m6_119 -> m6_120  [key=0, style=solid];
m6_119 -> m6_130  [key=2, style=dotted];
m6_120 -> m6_56  [key=0, style=solid];
m6_120 -> m6_130  [key=2, style=dotted];
m6_123 -> m6_124  [key=0, style=solid];
m6_123 -> m6_130  [key=2, style=dotted];
m6_127 -> m6_128  [key=0, style=solid];
m6_127 -> m6_130  [key=2, style=dotted];
m6_124 -> m6_125  [key=0, style=solid];
m6_124 -> m6_130  [key=2, style=dotted];
m6_126 -> m6_127  [key=0, style=solid];
m6_126 -> m6_130  [key=2, style=dotted];
m6_128 -> m6_129  [key=0, style=solid];
m6_128 -> m6_130  [key=2, style=dotted];
m6_129 -> m6_0  [color=blue, key=0, style=bold];
m6_150 -> m6_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_2  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_5  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_6  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_8  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_14  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_15  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_16  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_18  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_19  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_20  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_21  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_22  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_23  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_24  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_25  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_26  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_27  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_28  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_29  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_30  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_31  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_32  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_33  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_34  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_35  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_37  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_38  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_39  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_40  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_41  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_42  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_43  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_44  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_45  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_46  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_47  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_48  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_49  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_50  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_51  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_52  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_53  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_54  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_55  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_57  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_58  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_59  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_60  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_61  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_62  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_64  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_66  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_67  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_68  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_69  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_70  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_71  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_72  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_73  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_74  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_76  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_77  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_78  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_79  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_80  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_81  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_82  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_83  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_85  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_86  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_87  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_88  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_89  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_90  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_91  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_92  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_94  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_95  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_96  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_97  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_98  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_101  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_102  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_103  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_104  [color=red, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_105  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_106  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_107  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_108  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_109  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_110  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_111  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_112  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_113  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_114  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_115  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_116  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_118  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_119  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_120  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_121  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_123  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_124  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_125  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_126  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_127  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m6_150 -> m6_128  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.RecurringJobsPage", style=dashed];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_11  [color=darkorchid, key=3, label="method methodReturn long FailedCount", style=bold];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_11  [key=2, style=dotted];
m8_29 -> m8_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_30 -> m8_28  [color=blue, key=0, style=bold];
m8_377 -> m8_378  [key=0, style=solid];
m8_377 -> m8_379  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>", style=dashed];
m8_377 -> m8_384  [color=darkseagreen4, key=1, label="System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m8_378 -> m8_379  [key=0, style=solid];
m8_378 -> m8_388  [key=2, style=dotted];
m8_378 -> m8_385  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_378 -> m8_386  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_379 -> m8_380  [key=0, style=solid];
m8_379 -> m8_386  [key=0, style=solid];
m8_379 -> m8_381  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_379 -> m8_382  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_379 -> m8_384  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_379 -> m8_385  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_384 -> m8_385  [key=0, style=solid];
m8_384 -> m8_364  [key=2, style=dotted];
m8_384 -> m8_389  [key=2, style=dotted];
m8_385 -> m8_379  [key=0, style=solid];
m8_385 -> m8_390  [key=2, style=dotted];
m8_385 -> m8_391  [key=2, style=dotted];
m8_385 -> m8_91  [key=2, style=dotted];
m8_386 -> m8_387  [key=0, style=solid];
m8_386 -> m8_392  [key=2, style=dotted];
m8_380 -> m8_381  [key=0, style=solid];
m8_380 -> m8_385  [color=darkseagreen4, key=1, label=dto, style=dashed];
m8_381 -> m8_382  [key=0, style=solid];
m8_381 -> m8_385  [key=0, style=solid];
m8_382 -> m8_383  [color=green, key=0, style=solid];
m8_382 -> m8_371  [key=2, style=dotted];
m8_383 -> m8_384  [color=green, key=0, style=solid];
m8_383 -> m8_230  [color=green, key=2, style=dotted];
m8_387 -> m8_377  [color=blue, key=0, style=bold];
m8_237 -> m8_238  [key=0, style=solid];
m8_237 -> m8_11  [color=darkorchid, key=3, label="method methodReturn long DeletedListCount", style=bold];
m8_238 -> m8_239  [key=0, style=solid];
m8_238 -> m8_11  [key=2, style=dotted];
m8_238 -> m8_240  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_239 -> m8_237  [color=blue, key=0, style=bold];
m8_196 -> m8_197  [key=0, style=solid];
m8_196 -> m8_11  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlyFailedJobs", style=bold];
m8_197 -> m8_198  [key=0, style=solid];
m8_197 -> m8_11  [key=2, style=dotted];
m8_197 -> m8_199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_198 -> m8_196  [color=blue, key=0, style=bold];
m8_243 -> m8_244  [key=0, style=solid];
m8_243 -> m8_245  [color=darkorchid, key=3, label="method methodReturn Hangfire.Storage.Monitoring.StatisticsDto GetStatistics", style=bold];
m8_244 -> m8_245  [key=0, style=solid];
m8_244 -> m8_249  [key=2, style=dotted];
m8_244 -> m8_254  [color=darkseagreen4, key=1, label=sql, style=dashed];
m8_245 -> m8_246  [key=0, style=solid];
m8_245 -> m8_11  [key=2, style=dotted];
m8_245 -> m8_252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_245 -> m8_247  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m8_245 -> m8_245  [color=darkorchid, key=3, label="method methodReturn Hangfire.Storage.Monitoring.StatisticsDto ", style=bold];
m8_246 -> m8_247  [key=0, style=solid];
m8_246 -> m8_250  [key=2, style=dotted];
m8_246 -> m8_251  [key=2, style=dotted];
m8_246 -> m8_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_247 -> m8_248  [key=0, style=solid];
m8_248 -> m8_243  [color=blue, key=0, style=bold];
m8_176 -> m8_177  [key=0, style=solid];
m8_176 -> m8_178  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_177 -> m8_178  [key=0, style=solid];
m8_177 -> m8_21  [key=2, style=dotted];
m8_178 -> m8_179  [key=0, style=solid];
m8_178 -> m8_181  [key=2, style=dotted];
m8_178 -> m8_183  [color=darkseagreen4, key=1, label=fetchedJobIds, style=dashed];
m8_179 -> m8_180  [key=0, style=solid];
m8_179 -> m8_141  [key=2, style=dotted];
m8_179 -> m8_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_180 -> m8_176  [color=blue, key=0, style=bold];
m8_124 -> m8_125  [key=0, style=solid];
m8_124 -> m8_126  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<Hangfire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto> Queues", style=bold];
m8_125 -> m8_126  [key=0, style=solid];
m8_125 -> m8_134  [key=2, style=dotted];
m8_125 -> m8_135  [key=2, style=dotted];
m8_125 -> m8_136  [key=2, style=dotted];
m8_125 -> m8_137  [key=2, style=dotted];
m8_125 -> m8_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_125 -> m8_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_125 -> m8_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_125 -> m8_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_125 -> m8_127  [color=darkseagreen4, key=1, label=tuples, style=dashed];
m8_125 -> m8_226  [color=green, key=1, label="lambda expression", style=dashed];
m8_126 -> m8_127  [key=0, style=solid];
m8_126 -> m8_138  [key=2, style=dotted];
m8_126 -> m8_131  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_126 -> m8_132  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_127 -> m8_128  [key=0, style=solid];
m8_127 -> m8_132  [key=0, style=solid];
m8_127 -> m8_129  [color=darkseagreen4, key=1, label=tuple, style=dashed];
m8_127 -> m8_131  [color=darkseagreen4, key=1, label=tuple, style=dashed];
m8_131 -> m8_127  [key=0, style=solid];
m8_131 -> m8_142  [key=2, style=dotted];
m8_131 -> m8_91  [key=2, style=dotted];
m8_132 -> m8_133  [key=0, style=solid];
m8_128 -> m8_129  [key=0, style=solid];
m8_128 -> m8_139  [key=2, style=dotted];
m8_128 -> m8_130  [color=darkseagreen4, key=1, label=enqueuedJobIds, style=dashed];
m8_128 -> m8_158  [color=darkseagreen4, key=1, label=enqueuedJobIds, style=dashed];
m8_129 -> m8_130  [key=0, style=solid];
m8_129 -> m8_140  [key=2, style=dotted];
m8_129 -> m8_131  [color=darkseagreen4, key=1, label=counters, style=dashed];
m8_130 -> m8_131  [key=0, style=solid];
m8_130 -> m8_141  [key=2, style=dotted];
m8_130 -> m8_157  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_133 -> m8_124  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_2  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m8_0 -> m8_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m8_0 -> m8_4  [color=darkseagreen4, key=1, label="int?", style=dashed];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=0, style=solid];
m8_2 -> m8_5  [key=0, style=solid];
m8_2 -> m8_6  [key=2, style=dotted];
m8_2 -> m8_7  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_0  [color=blue, key=0, style=bold];
m8_114 -> m8_115  [color=green, key=0, style=solid];
m8_114 -> m8_118  [color=green, key=1, label=int, style=dashed];
m8_114 -> m8_11  [color=darkorchid, key=3, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.DeletedJobDto> DeletedJobs", style=bold];
m8_115 -> m8_116  [color=green, key=0, style=solid];
m8_115 -> m8_11  [color=green, key=2, style=dotted];
m8_115 -> m8_117  [color=red, key=1, label="lambda expression", style=dashed];
m8_115 -> m8_120  [color=green, key=1, label="lambda expression", style=dashed];
m8_116 -> m8_114  [color=blue, key=0, style=bold];
m8_356 -> m8_357  [color=red, key=0, style=solid];
m8_356 -> m8_235  [color=green, key=0, style=solid];
m8_12 -> m8_13  [key=0, style=solid];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_15  [key=2, style=dotted];
m8_14 -> m8_12  [color=blue, key=0, style=bold];
m8_31 -> m8_32  [key=0, style=solid];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_15  [key=2, style=dotted];
m8_33 -> m8_31  [color=blue, key=0, style=bold];
m8_37 -> m8_38  [key=0, style=solid];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_15  [key=2, style=dotted];
m8_39 -> m8_37  [color=blue, key=0, style=bold];
m8_44 -> m8_45  [color=green, key=0, style=solid];
m8_44 -> m8_46  [color=green, key=2, style=dotted];
m8_44 -> m8_47  [color=green, key=1, label="lambda expression", style=dashed];
m8_43 -> m8_44  [color=green, key=0, style=solid];
m8_45 -> m8_43  [color=blue, key=0, style=bold];
m8_47 -> m8_48  [color=green, key=0, style=solid];
m8_48 -> m8_49  [color=green, key=0, style=solid];
m8_48 -> m8_50  [color=green, key=2, style=dotted];
m8_48 -> m8_51  [color=green, key=2, style=dotted];
m8_48 -> m8_52  [color=red, key=2, style=dotted];
m8_48 -> m8_102  [color=green, key=2, style=dotted];
m8_49 -> m8_47  [color=blue, key=0, style=bold];
m8_57 -> m8_58  [color=red, key=0, style=solid];
m8_57 -> m8_46  [color=red, key=2, style=dotted];
m8_57 -> m8_59  [color=red, key=1, label="lambda expression", style=dashed];
m8_56 -> m8_57  [color=red, key=0, style=solid];
m8_56 -> m8_58  [color=green, key=0, style=solid];
m8_58 -> m8_56  [color=blue, key=0, style=bold];
m8_58 -> m8_58  [color=green, key=0, style=solid];
m8_58 -> m8_46  [color=green, key=2, style=dotted];
m8_58 -> m8_59  [color=green, key=1, label="lambda expression", style=dashed];
m8_59 -> m8_60  [color=red, key=0, style=solid];
m8_59 -> m8_61  [color=green, key=0, style=solid];
m8_60 -> m8_61  [color=red, key=0, style=solid];
m8_60 -> m8_62  [color=red, key=2, style=dotted];
m8_60 -> m8_52  [color=red, key=2, style=dotted];
m8_61 -> m8_59  [color=blue, key=0, style=bold];
m8_61 -> m8_61  [color=green, key=0, style=solid];
m8_61 -> m8_62  [color=green, key=2, style=dotted];
m8_61 -> m8_51  [color=green, key=2, style=dotted];
m8_61 -> m8_102  [color=green, key=2, style=dotted];
m8_66 -> m8_67  [key=0, style=solid];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_69  [key=2, style=dotted];
m8_68 -> m8_66  [color=blue, key=0, style=bold];
m8_73 -> m8_74  [key=0, style=solid];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_69  [key=2, style=dotted];
m8_75 -> m8_73  [color=blue, key=0, style=bold];
m8_80 -> m8_81  [key=0, style=solid];
m8_81 -> m8_82  [key=0, style=solid];
m8_81 -> m8_79  [key=2, style=dotted];
m8_81 -> m8_88  [key=2, style=dotted];
m8_81 -> m8_83  [color=darkseagreen4, key=1, label=servers, style=dashed];
m8_82 -> m8_83  [key=0, style=solid];
m8_82 -> m8_89  [key=2, style=dotted];
m8_82 -> m8_85  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_82 -> m8_86  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_83 -> m8_84  [key=0, style=solid];
m8_83 -> m8_86  [key=0, style=solid];
m8_83 -> m8_85  [color=darkseagreen4, key=1, label=server, style=dashed];
m8_85 -> m8_83  [key=0, style=solid];
m8_85 -> m8_90  [key=2, style=dotted];
m8_85 -> m8_91  [key=2, style=dotted];
m8_86 -> m8_87  [key=0, style=solid];
m8_84 -> m8_85  [key=0, style=solid];
m8_84 -> m8_79  [key=2, style=dotted];
m8_87 -> m8_80  [color=blue, key=0, style=bold];
m8_96 -> m8_97  [key=0, style=solid];
m8_96 -> m8_46  [key=2, style=dotted];
m8_96 -> m8_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_95 -> m8_96  [key=0, style=solid];
m8_95 -> m8_97  [color=green, key=0, style=solid];
m8_95 -> m8_92  [color=blue, key=0, style=bold];
m8_97 -> m8_95  [color=blue, key=0, style=bold];
m8_97 -> m8_109  [color=green, key=0, style=bold];
m8_97 -> m8_108  [color=green, key=0, style=solid];
m8_97 -> m8_46  [color=green, key=2, style=dotted];
m8_97 -> m8_106  [color=green, key=1, label="lambda expression", style=dashed];
m8_98 -> m8_99  [key=0, style=solid];
m8_99 -> m8_100  [key=0, style=solid];
m8_99 -> m8_101  [key=2, style=dotted];
m8_99 -> m8_102  [key=2, style=dotted];
m8_100 -> m8_98  [color=blue, key=0, style=bold];
m8_100 -> m8_117  [color=green, key=0, style=bold];
m8_100 -> m8_111  [color=green, key=0, style=solid];
m8_100 -> m8_101  [color=green, key=2, style=dotted];
m8_100 -> m8_51  [color=green, key=2, style=dotted];
m8_100 -> m8_102  [color=green, key=2, style=dotted];
m8_107 -> m8_108  [color=red, key=0, style=solid];
m8_107 -> m8_46  [color=green, key=2, style=dotted];
m8_107 -> m8_109  [color=red, key=1, label="lambda expression", style=dashed];
m8_107 -> m8_97  [color=green, key=0, style=solid];
m8_107 -> m8_117  [color=green, key=1, label="lambda expression", style=dashed];
m8_106 -> m8_107  [color=red, key=0, style=solid];
m8_106 -> m8_100  [color=green, key=0, style=solid];
m8_108 -> m8_106  [color=blue, key=0, style=bold];
m8_108 -> m8_95  [color=green, key=0, style=bold];
m8_109 -> m8_110  [color=red, key=0, style=solid];
m8_109 -> m8_107  [color=green, key=0, style=solid];
m8_110 -> m8_111  [color=red, key=0, style=solid];
m8_110 -> m8_112  [color=green, key=2, style=dotted];
m8_110 -> m8_51  [color=green, key=2, style=dotted];
m8_110 -> m8_113  [color=green, key=2, style=dotted];
m8_110 -> m8_102  [color=green, key=2, style=dotted];
m8_110 -> m8_100  [color=green, key=0, style=solid];
m8_111 -> m8_109  [color=blue, key=0, style=bold];
m8_111 -> m8_106  [color=green, key=0, style=bold];
m8_118 -> m8_119  [color=green, key=0, style=solid];
m8_118 -> m8_46  [color=green, key=2, style=dotted];
m8_118 -> m8_120  [color=red, key=1, label="lambda expression", style=dashed];
m8_118 -> m8_143  [color=green, key=1, label="lambda expression", style=dashed];
m8_117 -> m8_118  [color=red, key=0, style=solid];
m8_117 -> m8_110  [color=green, key=0, style=solid];
m8_119 -> m8_117  [color=blue, key=0, style=bold];
m8_119 -> m8_120  [color=green, key=0, style=bold];
m8_120 -> m8_121  [color=red, key=0, style=solid];
m8_120 -> m8_118  [color=green, key=0, style=solid];
m8_121 -> m8_122  [color=green, key=0, style=solid];
m8_121 -> m8_123  [color=green, key=2, style=dotted];
m8_121 -> m8_51  [color=green, key=2, style=dotted];
m8_121 -> m8_102  [color=green, key=2, style=dotted];
m8_122 -> m8_120  [color=blue, key=0, style=bold];
m8_122 -> m8_143  [color=green, key=0, style=bold];
m8_143 -> m8_144  [color=red, key=0, style=solid];
m8_143 -> m8_121  [color=green, key=0, style=solid];
m8_147 -> m8_148  [key=0, style=solid];
m8_151 -> m8_152  [key=0, style=solid];
m8_154 -> m8_155  [key=0, style=solid];
m8_158 -> m8_159  [key=0, style=solid];
m8_158 -> m8_134  [key=2, style=dotted];
m8_158 -> m8_137  [key=2, style=dotted];
m8_158 -> m8_160  [key=2, style=dotted];
m8_158 -> m8_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_157 -> m8_158  [key=0, style=solid];
m8_144 -> m8_145  [key=0, style=solid];
m8_144 -> m8_146  [key=2, style=dotted];
m8_145 -> m8_143  [color=blue, key=0, style=bold];
m8_145 -> m8_226  [color=green, key=0, style=bold];
m8_148 -> m8_149  [key=0, style=solid];
m8_148 -> m8_150  [key=2, style=dotted];
m8_149 -> m8_147  [color=blue, key=0, style=bold];
m8_152 -> m8_153  [key=0, style=solid];
m8_153 -> m8_151  [color=blue, key=0, style=bold];
m8_155 -> m8_156  [key=0, style=solid];
m8_156 -> m8_154  [color=blue, key=0, style=bold];
m8_159 -> m8_157  [color=blue, key=0, style=bold];
m8_161 -> m8_162  [key=0, style=solid];
m8_162 -> m8_163  [key=0, style=solid];
m8_163 -> m8_161  [color=blue, key=0, style=bold];
m8_171 -> m8_172  [key=0, style=solid];
m8_171 -> m8_134  [key=2, style=dotted];
m8_171 -> m8_137  [key=2, style=dotted];
m8_171 -> m8_160  [key=2, style=dotted];
m8_171 -> m8_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_170 -> m8_171  [key=0, style=solid];
m8_172 -> m8_170  [color=blue, key=0, style=bold];
m8_173 -> m8_174  [key=0, style=solid];
m8_174 -> m8_175  [key=0, style=solid];
m8_175 -> m8_173  [color=blue, key=0, style=bold];
m8_183 -> m8_184  [key=0, style=solid];
m8_183 -> m8_134  [key=2, style=dotted];
m8_183 -> m8_137  [key=2, style=dotted];
m8_183 -> m8_185  [key=2, style=dotted];
m8_183 -> m8_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_182 -> m8_183  [key=0, style=solid];
m8_184 -> m8_182  [color=blue, key=0, style=bold];
m8_186 -> m8_187  [key=0, style=solid];
m8_187 -> m8_188  [key=0, style=solid];
m8_188 -> m8_186  [color=blue, key=0, style=bold];
m8_192 -> m8_193  [key=0, style=solid];
m8_193 -> m8_194  [key=0, style=solid];
m8_193 -> m8_195  [key=2, style=dotted];
m8_194 -> m8_192  [color=blue, key=0, style=bold];
m8_199 -> m8_200  [key=0, style=solid];
m8_200 -> m8_201  [key=0, style=solid];
m8_200 -> m8_195  [key=2, style=dotted];
m8_201 -> m8_199  [color=blue, key=0, style=bold];
m8_207 -> m8_208  [key=0, style=solid];
m8_207 -> m8_215  [key=2, style=dotted];
m8_207 -> m8_211  [color=darkseagreen4, key=1, label=multi, style=dashed];
m8_207 -> m8_212  [color=green, key=1, label=multi, style=dashed];
m8_205 -> m8_206  [key=0, style=solid];
m8_205 -> m8_207  [color=darkseagreen4, key=1, label=DbConnection, style=dashed];
m8_206 -> m8_207  [key=0, style=solid];
m8_208 -> m8_209  [key=0, style=solid];
m8_208 -> m8_79  [key=2, style=dotted];
m8_208 -> m8_216  [key=2, style=dotted];
m8_208 -> m8_213  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_211 -> m8_212  [color=green, key=0, style=solid];
m8_211 -> m8_79  [key=2, style=dotted];
m8_211 -> m8_217  [key=2, style=dotted];
m8_211 -> m8_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_211 -> m8_223  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_211 -> m8_213  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m8_212 -> m8_213  [color=green, key=0, style=solid];
m8_212 -> m8_79  [color=green, key=2, style=dotted];
m8_212 -> m8_88  [color=green, key=2, style=dotted];
m8_212 -> m8_134  [color=green, key=2, style=dotted];
m8_212 -> m8_226  [color=red, key=1, label="lambda expression", style=dashed];
m8_212 -> m8_234  [color=green, key=1, label="lambda expression", style=dashed];
m8_209 -> m8_210  [key=0, style=solid];
m8_209 -> m8_211  [key=0, style=solid];
m8_213 -> m8_214  [key=0, style=solid];
m8_213 -> m8_218  [key=2, style=dotted];
m8_213 -> m8_219  [key=2, style=dotted];
m8_210 -> m8_214  [key=0, style=solid];
m8_220 -> m8_221  [key=0, style=solid];
m8_223 -> m8_224  [key=0, style=solid];
m8_226 -> m8_227  [color=red, key=0, style=solid];
m8_226 -> m8_144  [color=green, key=0, style=solid];
m8_214 -> m8_205  [color=blue, key=0, style=bold];
m8_221 -> m8_222  [key=0, style=solid];
m8_222 -> m8_220  [color=blue, key=0, style=bold];
m8_224 -> m8_225  [key=0, style=solid];
m8_225 -> m8_223  [color=blue, key=0, style=bold];
m8_227 -> m8_228  [color=green, key=0, style=solid];
m8_227 -> m8_229  [color=green, key=2, style=dotted];
m8_227 -> m8_230  [color=green, key=2, style=dotted];
m8_227 -> m8_79  [color=green, key=2, style=dotted];
m8_228 -> m8_226  [color=blue, key=0, style=bold];
m8_228 -> m8_234  [color=green, key=0, style=bold];
m8_234 -> m8_235  [color=red, key=0, style=solid];
m8_234 -> m8_227  [color=green, key=0, style=solid];
m8_235 -> m8_236  [key=0, style=solid];
m8_235 -> m8_15  [key=2, style=dotted];
m8_236 -> m8_234  [color=blue, key=0, style=bold];
m8_236 -> m8_356  [color=green, key=0, style=bold];
m8_240 -> m8_241  [key=0, style=solid];
m8_241 -> m8_242  [key=0, style=solid];
m8_241 -> m8_15  [key=2, style=dotted];
m8_242 -> m8_240  [color=blue, key=0, style=bold];
m8_254 -> m8_255  [key=0, style=solid];
m8_254 -> m8_215  [key=2, style=dotted];
m8_254 -> m8_256  [color=darkseagreen4, key=1, label=multi, style=dashed];
m8_254 -> m8_257  [color=darkseagreen4, key=1, label=multi, style=dashed];
m8_254 -> m8_258  [color=darkseagreen4, key=1, label=multi, style=dashed];
m8_254 -> m8_259  [color=darkseagreen4, key=1, label=multi, style=dashed];
m8_254 -> m8_260  [color=darkseagreen4, key=1, label=multi, style=dashed];
m8_254 -> m8_261  [color=darkseagreen4, key=1, label=multi, style=dashed];
m8_254 -> m8_262  [color=darkseagreen4, key=1, label=multi, style=dashed];
m8_252 -> m8_253  [key=0, style=solid];
m8_252 -> m8_254  [color=darkseagreen4, key=1, label=DbConnection, style=dashed];
m8_266 -> m8_267  [key=0, style=solid];
m8_253 -> m8_254  [key=0, style=solid];
m8_253 -> m8_265  [key=2, style=dotted];
m8_253 -> m8_255  [color=darkseagreen4, key=1, label=stats, style=dashed];
m8_253 -> m8_256  [color=darkseagreen4, key=1, label=stats, style=dashed];
m8_253 -> m8_257  [color=darkseagreen4, key=1, label=stats, style=dashed];
m8_253 -> m8_258  [color=darkseagreen4, key=1, label=stats, style=dashed];
m8_253 -> m8_259  [color=darkseagreen4, key=1, label=stats, style=dashed];
m8_253 -> m8_260  [color=darkseagreen4, key=1, label=stats, style=dashed];
m8_253 -> m8_261  [color=darkseagreen4, key=1, label=stats, style=dashed];
m8_253 -> m8_262  [color=darkseagreen4, key=1, label=stats, style=dashed];
m8_253 -> m8_263  [color=darkseagreen4, key=1, label=stats, style=dashed];
m8_255 -> m8_256  [key=0, style=solid];
m8_255 -> m8_79  [key=2, style=dotted];
m8_256 -> m8_257  [key=0, style=solid];
m8_256 -> m8_79  [key=2, style=dotted];
m8_257 -> m8_258  [key=0, style=solid];
m8_257 -> m8_79  [key=2, style=dotted];
m8_258 -> m8_259  [key=0, style=solid];
m8_258 -> m8_79  [key=2, style=dotted];
m8_259 -> m8_260  [key=0, style=solid];
m8_259 -> m8_79  [key=2, style=dotted];
m8_260 -> m8_261  [key=0, style=solid];
m8_260 -> m8_79  [key=2, style=dotted];
m8_261 -> m8_262  [key=0, style=solid];
m8_261 -> m8_79  [key=2, style=dotted];
m8_262 -> m8_263  [key=0, style=solid];
m8_262 -> m8_79  [key=2, style=dotted];
m8_263 -> m8_264  [key=0, style=solid];
m8_264 -> m8_252  [color=blue, key=0, style=bold];
m8_267 -> m8_268  [key=0, style=solid];
m8_267 -> m8_146  [key=2, style=dotted];
m8_267 -> m8_269  [key=2, style=dotted];
m8_268 -> m8_266  [color=blue, key=0, style=bold];
m8_283 -> m8_284  [key=0, style=solid];
m8_283 -> m8_285  [key=2, style=dotted];
m8_282 -> m8_283  [key=0, style=solid];
m8_286 -> m8_287  [key=0, style=solid];
m8_284 -> m8_282  [color=blue, key=0, style=bold];
m8_287 -> m8_288  [key=0, style=solid];
m8_288 -> m8_286  [color=blue, key=0, style=bold];
m8_301 -> m8_302  [key=0, style=solid];
m8_301 -> m8_285  [key=2, style=dotted];
m8_300 -> m8_301  [key=0, style=solid];
m8_303 -> m8_304  [key=0, style=solid];
m8_302 -> m8_300  [color=blue, key=0, style=bold];
m8_304 -> m8_305  [key=0, style=solid];
m8_305 -> m8_303  [color=blue, key=0, style=bold];
m8_325 -> m8_326  [key=0, style=solid];
m8_328 -> m8_329  [key=0, style=solid];
m8_326 -> m8_327  [key=0, style=solid];
m8_327 -> m8_325  [color=blue, key=0, style=bold];
m8_329 -> m8_330  [key=0, style=solid];
m8_330 -> m8_328  [color=blue, key=0, style=bold];
m8_346 -> m8_347  [key=0, style=solid];
m8_349 -> m8_350  [key=0, style=solid];
m8_353 -> m8_354  [key=0, style=solid];
m8_353 -> m8_321  [key=2, style=dotted];
m8_353 -> m8_355  [key=2, style=dotted];
m8_352 -> m8_353  [key=0, style=solid];
m8_347 -> m8_348  [key=0, style=solid];
m8_348 -> m8_346  [color=blue, key=0, style=bold];
m8_350 -> m8_351  [key=0, style=solid];
m8_351 -> m8_349  [color=blue, key=0, style=bold];
m8_354 -> m8_352  [color=blue, key=0, style=bold];
m8_357 -> m8_358  [color=green, key=0, style=solid];
m8_357 -> m8_359  [color=green, key=2, style=dotted];
m8_357 -> m8_102  [color=green, key=2, style=dotted];
m8_357 -> m8_51  [color=green, key=2, style=dotted];
m8_358 -> m8_356  [color=blue, key=0, style=bold];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_21  [key=2, style=dotted];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_22  [key=2, style=dotted];
m8_26 -> m8_27  [key=0, style=solid];
m8_27 -> m8_23  [color=blue, key=0, style=bold];
m8_393 -> m8_394  [key=0, style=solid];
m8_393 -> m8_395  [color=darkseagreen4, key=1, label=DbConnection, style=dashed];
m8_394 -> m8_395  [key=0, style=solid];
m8_395 -> m8_396  [key=0, style=solid];
m8_395 -> m8_79  [key=2, style=dotted];
m8_395 -> m8_88  [key=2, style=dotted];
m8_395 -> m8_397  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m8_396 -> m8_397  [key=0, style=solid];
m8_396 -> m8_401  [key=2, style=dotted];
m8_396 -> m8_398  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_396 -> m8_399  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_397 -> m8_398  [key=0, style=solid];
m8_397 -> m8_399  [key=0, style=solid];
m8_398 -> m8_397  [key=0, style=solid];
m8_398 -> m8_402  [key=2, style=dotted];
m8_398 -> m8_403  [key=2, style=dotted];
m8_398 -> m8_404  [key=2, style=dotted];
m8_398 -> m8_219  [key=2, style=dotted];
m8_398 -> m8_91  [key=2, style=dotted];
m8_399 -> m8_400  [key=0, style=solid];
m8_399 -> m8_392  [key=2, style=dotted];
m8_400 -> m8_393  [color=blue, key=0, style=bold];
m8_103 -> m8_104  [color=green, key=0, style=solid];
m8_103 -> m8_107  [color=green, key=1, label=int, style=dashed];
m8_103 -> m8_11  [color=darkorchid, key=3, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.SucceededJobDto> SucceededJobs", style=bold];
m8_104 -> m8_105  [color=green, key=0, style=solid];
m8_104 -> m8_11  [color=green, key=2, style=dotted];
m8_104 -> m8_106  [color=red, key=1, label="lambda expression", style=dashed];
m8_104 -> m8_109  [color=green, key=1, label="lambda expression", style=dashed];
m8_105 -> m8_103  [color=blue, key=0, style=bold];
m8_195 -> m8_270  [key=0, style=solid];
m8_195 -> m8_277  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_195 -> m8_283  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_195 -> m8_278  [color=darkseagreen4, key=1, label=DbConnection, style=dashed];
m8_195 -> m8_190  [color=darkorchid, key=3, label="Parameter variable DbConnection connection", style=bold];
m8_195 -> m8_197  [color=darkorchid, key=3, label="Parameter variable DbConnection connection", style=bold];
m8_195 -> m8_64  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m8_195 -> m8_71  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m8_270 -> m8_271  [key=0, style=solid];
m8_270 -> m8_274  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m8_270 -> m8_275  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m8_277 -> m8_278  [key=0, style=solid];
m8_277 -> m8_217  [key=2, style=dotted];
m8_277 -> m8_282  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_277 -> m8_286  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_278 -> m8_279  [key=0, style=solid];
m8_278 -> m8_281  [key=2, style=dotted];
m8_271 -> m8_272  [key=0, style=solid];
m8_271 -> m8_89  [key=2, style=dotted];
m8_271 -> m8_274  [color=darkseagreen4, key=1, label=dates, style=dashed];
m8_271 -> m8_277  [color=darkseagreen4, key=1, label=dates, style=dashed];
m8_274 -> m8_275  [key=0, style=solid];
m8_274 -> m8_91  [key=2, style=dotted];
m8_275 -> m8_276  [key=0, style=solid];
m8_275 -> m8_280  [key=2, style=dotted];
m8_275 -> m8_275  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m8_272 -> m8_273  [key=0, style=solid];
m8_272 -> m8_276  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_272 -> m8_272  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m8_273 -> m8_274  [key=0, style=solid];
m8_273 -> m8_277  [key=0, style=solid];
m8_276 -> m8_273  [key=0, style=solid];
m8_276 -> m8_276  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_279 -> m8_195  [color=blue, key=0, style=bold];
m8_46 -> m8_373  [color=green, key=0, style=solid];
m8_46 -> m8_374  [color=darkseagreen4, key=1, label=DbConnection, style=dashed];
m8_46 -> m8_375  [color=darkseagreen4, key=1, label="System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m8_373 -> m8_374  [color=green, key=0, style=solid];
m8_374 -> m8_375  [key=0, style=solid];
m8_374 -> m8_79  [key=2, style=dotted];
m8_374 -> m8_88  [key=2, style=dotted];
m8_375 -> m8_376  [key=0, style=solid];
m8_375 -> m8_345  [key=2, style=dotted];
m8_376 -> m8_46  [color=blue, key=0, style=bold];
m8_202 -> m8_203  [color=green, key=0, style=solid];
m8_202 -> m8_207  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_202 -> m8_11  [color=darkorchid, key=3, label="method methodReturn Hangfire.Storage.Monitoring.JobDetailsDto JobDetails", style=bold];
m8_203 -> m8_204  [color=green, key=0, style=solid];
m8_203 -> m8_11  [color=green, key=2, style=dotted];
m8_203 -> m8_205  [color=green, key=1, label="lambda expression", style=dashed];
m8_203 -> m8_203  [color=green, key=3, label="method methodReturn Hangfire.Storage.Monitoring.JobDetailsDto ", style=bold];
m8_204 -> m8_202  [color=blue, key=0, style=bold];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_11  [color=darkorchid, key=3, label="method methodReturn long ScheduledCount", style=bold];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_11  [key=2, style=dotted];
m8_9 -> m8_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_10 -> m8_8  [color=blue, key=0, style=bold];
m8_69 -> m8_289  [key=0, style=solid];
m8_69 -> m8_296  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_69 -> m8_301  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_69 -> m8_297  [color=darkseagreen4, key=1, label=DbConnection, style=dashed];
m8_69 -> m8_64  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m8_69 -> m8_71  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m8_289 -> m8_290  [key=0, style=solid];
m8_289 -> m8_293  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m8_289 -> m8_294  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m8_296 -> m8_297  [key=0, style=solid];
m8_296 -> m8_217  [key=2, style=dotted];
m8_296 -> m8_300  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_296 -> m8_303  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_297 -> m8_298  [key=0, style=solid];
m8_297 -> m8_281  [key=2, style=dotted];
m8_290 -> m8_291  [key=0, style=solid];
m8_290 -> m8_89  [key=2, style=dotted];
m8_290 -> m8_293  [color=darkseagreen4, key=1, label=dates, style=dashed];
m8_290 -> m8_296  [color=darkseagreen4, key=1, label=dates, style=dashed];
m8_293 -> m8_294  [key=0, style=solid];
m8_293 -> m8_91  [key=2, style=dotted];
m8_294 -> m8_295  [key=0, style=solid];
m8_294 -> m8_299  [key=2, style=dotted];
m8_294 -> m8_294  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m8_291 -> m8_292  [key=0, style=solid];
m8_291 -> m8_295  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_291 -> m8_272  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m8_292 -> m8_293  [key=0, style=solid];
m8_292 -> m8_296  [key=0, style=solid];
m8_295 -> m8_292  [key=0, style=solid];
m8_295 -> m8_295  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_298 -> m8_69  [color=blue, key=0, style=bold];
m8_11 -> m8_41  [color=red, key=3, label="Parameter variable System.Func<DbConnection, T> action", style=bold];
m8_11 -> m8_55  [color=green, key=3, label="Parameter variable System.Func<DbConnection, T> action", style=bold];
m8_11 -> m8_94  [color=green, key=3, label="Parameter variable System.Func<DbConnection, T> action", style=bold];
m8_11 -> m8_104  [color=red, key=3, label="Parameter variable System.Func<DbConnection, T> action", style=bold];
m8_11 -> m8_115  [color=red, key=3, label="Parameter variable System.Func<DbConnection, T> action", style=bold];
m8_11 -> m8_203  [color=red, key=3, label="Parameter variable System.Func<DbConnection, T> action", style=bold];
m8_11 -> m8_336  [key=0, style=solid];
m8_11 -> m8_9  [color=darkorchid, key=3, label="Parameter variable System.Func<DbConnection, T> action", style=bold];
m8_11 -> m8_29  [color=darkorchid, key=3, label="Parameter variable System.Func<DbConnection, T> action", style=bold];
m8_11 -> m8_35  [color=darkorchid, key=3, label="Parameter variable System.Func<DbConnection, T> action", style=bold];
m8_11 -> m8_64  [color=darkorchid, key=3, label="Parameter variable System.Func<DbConnection, T> action", style=bold];
m8_11 -> m8_71  [color=darkorchid, key=3, label="Parameter variable System.Func<DbConnection, T> action", style=bold];
m8_11 -> m8_190  [color=darkorchid, key=3, label="Parameter variable System.Func<DbConnection, T> action", style=bold];
m8_11 -> m8_197  [color=darkorchid, key=3, label="Parameter variable System.Func<DbConnection, T> action", style=bold];
m8_11 -> m8_232  [color=darkorchid, key=3, label="Parameter variable System.Func<DbConnection, T> action", style=bold];
m8_11 -> m8_238  [color=darkorchid, key=3, label="Parameter variable System.Func<DbConnection, T> action", style=bold];
m8_11 -> m8_245  [color=darkorchid, key=3, label="Parameter variable System.Func<DbConnection, T> action", style=bold];
m8_11 -> m8_54  [color=red, key=3, label="Parameter variable System.Func<DbConnection, T> action", style=bold];
m8_11 -> m8_93  [color=darkorchid, key=3, label="Parameter variable System.Func<DbConnection, T> action", style=bold];
m8_336 -> m8_337  [key=0, style=solid];
m8_336 -> m8_338  [key=2, style=dotted];
m8_337 -> m8_11  [color=blue, key=0, style=bold];
m8_231 -> m8_232  [key=0, style=solid];
m8_231 -> m8_11  [color=darkorchid, key=3, label="method methodReturn long SucceededListCount", style=bold];
m8_232 -> m8_233  [key=0, style=solid];
m8_232 -> m8_11  [key=2, style=dotted];
m8_232 -> m8_234  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_232 -> m8_356  [color=green, key=1, label="lambda expression", style=dashed];
m8_233 -> m8_231  [color=blue, key=0, style=bold];
m8_92 -> m8_93  [key=0, style=solid];
m8_92 -> m8_96  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_92 -> m8_11  [color=darkorchid, key=3, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.FailedJobDto> FailedJobs", style=bold];
m8_92 -> m8_94  [color=green, key=0, style=solid];
m8_92 -> m8_97  [color=green, key=1, label=int, style=dashed];
m8_93 -> m8_94  [key=0, style=solid];
m8_93 -> m8_11  [key=2, style=dotted];
m8_93 -> m8_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_94 -> m8_92  [color=blue, key=0, style=bold];
m8_94 -> m8_95  [color=green, key=0, style=solid];
m8_94 -> m8_11  [color=green, key=2, style=dotted];
m8_364 -> m8_365  [key=0, style=solid];
m8_364 -> m8_366  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_364 -> m8_203  [color=green, key=3, label="method methodReturn Hangfire.Common.Job DeserializeJob", style=bold];
m8_365 -> m8_366  [key=0, style=solid];
m8_365 -> m8_371  [key=2, style=dotted];
m8_365 -> m8_367  [color=darkseagreen4, key=1, label=data, style=dashed];
m8_366 -> m8_367  [key=0, style=solid];
m8_367 -> m8_370  [key=0, style=solid];
m8_367 -> m8_372  [key=2, style=dotted];
m8_368 -> m8_369  [key=0, style=solid];
m8_369 -> m8_370  [key=0, style=solid];
m8_370 -> m8_364  [color=blue, key=0, style=bold];
m8_76 -> m8_77  [key=0, style=solid];
m8_77 -> m8_78  [key=0, style=solid];
m8_77 -> m8_79  [key=2, style=dotted];
m8_77 -> m8_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_77 -> m8_77  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<Hangfire.Storage.Monitoring.ServerDto> ", style=bold];
m8_78 -> m8_76  [color=blue, key=0, style=bold];
m8_21 -> m8_331  [key=0, style=solid];
m8_21 -> m8_16  [color=darkorchid, key=3, label="Parameter variable string queueName", style=bold];
m8_21 -> m8_23  [color=darkorchid, key=3, label="Parameter variable string queueName", style=bold];
m8_21 -> m8_164  [color=darkorchid, key=3, label="Parameter variable string queueName", style=bold];
m8_21 -> m8_176  [color=darkorchid, key=3, label="Parameter variable string queueName", style=bold];
m8_21 -> m8_332  [color=darkorchid, key=3, label="method methodReturn Hangfire.SqlServer.IPersistentJobQueueMonitoringApi GetQueueApi", style=bold];
m8_331 -> m8_332  [key=0, style=solid];
m8_331 -> m8_335  [key=2, style=dotted];
m8_332 -> m8_333  [key=0, style=solid];
m8_332 -> m8_146  [key=2, style=dotted];
m8_333 -> m8_334  [key=0, style=solid];
m8_334 -> m8_21  [color=blue, key=0, style=bold];
m8_40 -> m8_41  [color=green, key=0, style=solid];
m8_40 -> m8_44  [color=green, key=1, label=int, style=dashed];
m8_40 -> m8_11  [color=darkorchid, key=3, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.ProcessingJobDto> ProcessingJobs", style=bold];
m8_41 -> m8_42  [color=green, key=0, style=solid];
m8_41 -> m8_11  [color=green, key=2, style=dotted];
m8_41 -> m8_43  [color=green, key=1, label="lambda expression", style=dashed];
m8_42 -> m8_40  [color=blue, key=0, style=bold];
m8_53 -> m8_54  [color=red, key=0, style=solid];
m8_53 -> m8_57  [color=red, key=1, label=int, style=dashed];
m8_53 -> m8_11  [color=darkorchid, key=3, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.ScheduledJobDto> ScheduledJobs", style=bold];
m8_53 -> m8_55  [color=green, key=0, style=solid];
m8_53 -> m8_58  [color=green, key=1, label=int, style=dashed];
m8_54 -> m8_55  [color=red, key=0, style=solid];
m8_54 -> m8_11  [color=red, key=2, style=dotted];
m8_54 -> m8_56  [color=red, key=1, label="lambda expression", style=dashed];
m8_55 -> m8_55  [color=green, key=0, style=solid];
m8_55 -> m8_11  [color=green, key=2, style=dotted];
m8_55 -> m8_56  [color=green, key=1, label="lambda expression", style=dashed];
m8_55 -> m8_53  [color=blue, key=0, style=bold];
m8_70 -> m8_71  [key=0, style=solid];
m8_70 -> m8_11  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> FailedByDatesCount", style=bold];
m8_71 -> m8_72  [key=0, style=solid];
m8_71 -> m8_11  [key=2, style=dotted];
m8_71 -> m8_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_72 -> m8_70  [color=blue, key=0, style=bold];
m8_189 -> m8_190  [key=0, style=solid];
m8_189 -> m8_11  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlySucceededJobs", style=bold];
m8_190 -> m8_191  [key=0, style=solid];
m8_190 -> m8_11  [key=2, style=dotted];
m8_190 -> m8_192  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_191 -> m8_189  [color=blue, key=0, style=bold];
m8_15 -> m8_360  [key=0, style=solid];
m8_15 -> m8_361  [color=darkseagreen4, key=1, label=DbConnection, style=dashed];
m8_15 -> m8_9  [color=darkorchid, key=3, label="Parameter variable DbConnection connection", style=bold];
m8_15 -> m8_29  [color=darkorchid, key=3, label="Parameter variable DbConnection connection", style=bold];
m8_15 -> m8_35  [color=darkorchid, key=3, label="Parameter variable DbConnection connection", style=bold];
m8_15 -> m8_232  [color=darkorchid, key=3, label="Parameter variable DbConnection connection", style=bold];
m8_15 -> m8_238  [color=darkorchid, key=3, label="Parameter variable DbConnection connection", style=bold];
m8_360 -> m8_361  [key=0, style=solid];
m8_361 -> m8_362  [key=0, style=solid];
m8_361 -> m8_79  [key=2, style=dotted];
m8_362 -> m8_363  [key=0, style=solid];
m8_363 -> m8_15  [color=blue, key=0, style=bold];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_21  [key=2, style=dotted];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_22  [key=2, style=dotted];
m8_19 -> m8_20  [key=0, style=solid];
m8_20 -> m8_16  [color=blue, key=0, style=bold];
m8_339 -> m8_340  [key=0, style=solid];
m8_339 -> m8_341  [color=darkseagreen4, key=1, label=DbConnection, style=dashed];
m8_339 -> m8_342  [color=darkseagreen4, key=1, label="long[]", style=dashed];
m8_340 -> m8_341  [key=0, style=solid];
m8_341 -> m8_342  [key=0, style=solid];
m8_341 -> m8_79  [key=2, style=dotted];
m8_341 -> m8_217  [key=2, style=dotted];
m8_341 -> m8_346  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_341 -> m8_349  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_341 -> m8_353  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m8_342 -> m8_343  [color=green, key=0, style=solid];
m8_342 -> m8_134  [key=2, style=dotted];
m8_342 -> m8_88  [key=2, style=dotted];
m8_342 -> m8_352  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_343 -> m8_344  [color=green, key=0, style=solid];
m8_343 -> m8_345  [color=green, key=2, style=dotted];
m8_343 -> m8_356  [color=green, key=1, label="lambda expression", style=dashed];
m8_344 -> m8_339  [color=blue, key=0, style=bold];
m8_306 -> m8_307  [key=0, style=solid];
m8_306 -> m8_308  [color=darkseagreen4, key=1, label=DbConnection, style=dashed];
m8_306 -> m8_309  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, System.DateTime>", style=dashed];
m8_306 -> m8_314  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, System.DateTime>", style=dashed];
m8_306 -> m8_315  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, System.DateTime>", style=dashed];
m8_306 -> m8_316  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, System.DateTime>", style=dashed];
m8_306 -> m8_312  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetTimelineStats", style=bold];
m8_307 -> m8_308  [key=0, style=solid];
m8_308 -> m8_309  [key=0, style=solid];
m8_308 -> m8_320  [key=2, style=dotted];
m8_308 -> m8_217  [key=2, style=dotted];
m8_308 -> m8_325  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_308 -> m8_328  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_308 -> m8_310  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m8_308 -> m8_311  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m8_308 -> m8_315  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m8_309 -> m8_310  [key=0, style=solid];
m8_309 -> m8_312  [key=0, style=solid];
m8_309 -> m8_311  [color=darkseagreen4, key=1, label=key, style=dashed];
m8_314 -> m8_315  [key=0, style=solid];
m8_314 -> m8_318  [key=0, style=solid];
m8_314 -> m8_272  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m8_315 -> m8_316  [key=0, style=solid];
m8_315 -> m8_324  [key=2, style=dotted];
m8_316 -> m8_317  [key=0, style=solid];
m8_316 -> m8_324  [key=2, style=dotted];
m8_316 -> m8_322  [key=2, style=dotted];
m8_310 -> m8_311  [key=0, style=solid];
m8_310 -> m8_309  [key=0, style=solid];
m8_310 -> m8_321  [key=2, style=dotted];
m8_311 -> m8_309  [key=0, style=solid];
m8_311 -> m8_322  [key=2, style=dotted];
m8_312 -> m8_313  [key=0, style=solid];
m8_312 -> m8_323  [key=2, style=dotted];
m8_312 -> m8_316  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_312 -> m8_318  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_313 -> m8_314  [key=0, style=solid];
m8_313 -> m8_315  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_313 -> m8_316  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_313 -> m8_317  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_318 -> m8_319  [key=0, style=solid];
m8_317 -> m8_314  [key=0, style=solid];
m8_317 -> m8_317  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_319 -> m8_306  [color=blue, key=0, style=bold];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_11  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> SucceededByDatesCount", style=bold];
m8_64 -> m8_65  [key=0, style=solid];
m8_64 -> m8_11  [key=2, style=dotted];
m8_64 -> m8_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_65 -> m8_63  [color=blue, key=0, style=bold];
m8_164 -> m8_165  [key=0, style=solid];
m8_164 -> m8_166  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_165 -> m8_166  [key=0, style=solid];
m8_165 -> m8_21  [key=2, style=dotted];
m8_166 -> m8_167  [key=0, style=solid];
m8_166 -> m8_169  [key=2, style=dotted];
m8_166 -> m8_171  [color=darkseagreen4, key=1, label=enqueuedJobIds, style=dashed];
m8_167 -> m8_168  [key=0, style=solid];
m8_167 -> m8_141  [key=2, style=dotted];
m8_167 -> m8_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_168 -> m8_164  [color=blue, key=0, style=bold];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_11  [color=darkorchid, key=3, label="method methodReturn long ProcessingCount", style=bold];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_11  [key=2, style=dotted];
m8_35 -> m8_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_36 -> m8_34  [color=blue, key=0, style=bold];
m8_405 -> m8_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_4  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_9  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_17  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_24  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_29  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_32  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_35  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_38  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_41  [color=red, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_44  [color=red, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_54  [color=red, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_57  [color=red, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_64  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_67  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_71  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_74  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_77  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_81  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_93  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_96  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_104  [color=red, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_107  [color=red, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_115  [color=red, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_118  [color=red, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_125  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_130  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_158  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_165  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_167  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_171  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_177  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_179  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_183  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_190  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_193  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_197  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_200  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_203  [color=red, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_206  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_207  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_213  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_232  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_235  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_238  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_241  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_244  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_245  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_254  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_246  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_278  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_297  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_307  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_308  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_331  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_336  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_340  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_341  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_343  [color=red, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_360  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_361  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_373  [color=red, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_374  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_375  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_394  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_395  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_405 -> m8_398  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_44  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_41  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_55  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_58  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_94  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_97  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_104  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_107  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_115  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_118  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_203  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_343  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_373  [color=green, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_4  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_9  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_17  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_24  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_29  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_32  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_35  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_38  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_64  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_67  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_71  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_74  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_77  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_81  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_125  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_130  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_158  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_165  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_167  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_171  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_177  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_179  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_183  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_190  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_193  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_197  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_200  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_206  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_207  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_213  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_232  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_235  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_238  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_241  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_244  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_245  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_254  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_246  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_278  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_297  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_307  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_308  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_331  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_336  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_340  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_341  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_360  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_361  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_374  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_375  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_394  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_395  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_406 -> m8_398  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m8_407 -> m8_44  [color=green, key=1, label=int, style=dashed];
m8_408 -> m8_57  [color=red, key=1, label=int, style=dashed];
m8_408 -> m8_58  [color=green, key=1, label=int, style=dashed];
m8_409 -> m8_57  [color=red, key=1, label=int, style=dashed];
m8_409 -> m8_58  [color=green, key=1, label=int, style=dashed];
m8_410 -> m8_96  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_410 -> m8_97  [color=green, key=1, label=int, style=dashed];
m8_411 -> m8_96  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_411 -> m8_97  [color=green, key=1, label=int, style=dashed];
m8_412 -> m8_107  [color=green, key=1, label=int, style=dashed];
m8_413 -> m8_107  [color=green, key=1, label=int, style=dashed];
m8_414 -> m8_118  [color=green, key=1, label=int, style=dashed];
m8_415 -> m8_118  [color=green, key=1, label=int, style=dashed];
m8_416 -> m8_158  [color=darkseagreen4, key=1, label=enqueuedJobIds, style=dashed];
m8_417 -> m8_171  [color=darkseagreen4, key=1, label=enqueuedJobIds, style=dashed];
m8_418 -> m8_183  [color=darkseagreen4, key=1, label=fetchedJobIds, style=dashed];
m8_419 -> m8_207  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_420 -> m8_254  [color=darkseagreen4, key=1, label=sql, style=dashed];
m8_421 -> m8_283  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_422 -> m8_301  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_423 -> m8_353  [color=darkseagreen4, key=1, label=jobs, style=dashed];
}
