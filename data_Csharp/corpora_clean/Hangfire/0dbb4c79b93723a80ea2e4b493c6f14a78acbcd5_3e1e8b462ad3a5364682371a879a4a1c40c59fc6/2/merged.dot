digraph  {
d15 [label="Logger.ErrorException(\r\n                        String.Format(\r\n                            ''Failed to process the job '{0}': an exception occurred.'',\r\n                            context.JobId),\r\n                        failedState.Exception)", span="67-71", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=green, community=1];
d5 [label="Entry Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="44-44", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)"];
d6 [label="var failedState = context.CandidateState as FailedState", span="46-46", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)"];
d14 [label=LogEvents, span="65-65", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)"];
d16 [label="Exit Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="44-44", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)"];
d20 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)"];
d21 [label="Entry Hangfire.Logging.ILog.ErrorException(string, System.Exception)", span="166-166", cluster="Hangfire.Logging.ILog.ErrorException(string, System.Exception)"];
d26 [label="Logger.WarnException(\r\n                    String.Format(\r\n                        ''Failed to process the job '{0}': an exception occurred. Retry attempt {1} of {2} will be performed in {3}.'',\r\n                        context.JobId,\r\n                        retryAttempt,\r\n                        Attempts,\r\n                        delay),\r\n                    failedState.Exception)", span="97-104", cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", color=green, community=1];
d47 [label="Hangfire.AutomaticRetryAttribute", span=""];
d18 [label="Entry Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", span="82-82", cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)"];
d22 [label="var delay = TimeSpan.FromSeconds(SecondsToDelay(retryAttempt))", span="84-84", cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)"];
d25 [label=LogEvents, span="95-95", cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)"];
d27 [label="Exit Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", span="82-82", cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)"];
d33 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])"];
d34 [label="Entry Hangfire.Logging.ILog.WarnException(string, System.Exception)", span="285-285", cluster="Hangfire.Logging.ILog.WarnException(string, System.Exception)"];
d35 [label="context.CandidateState = new DeletedState\r\n            {\r\n                Reason = String.Format(''Automatic deletion after retry count exceeded {0}'', Attempts)\r\n            }", span="115-118", cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", color=green, community=0];
d19 [label="Entry Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", span="113-113", cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)"];
d36 [label=LogEvents, span="120-120", cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)"];
d39 [label="Entry Hangfire.States.DeletedState.DeletedState()", span="27-27", cluster="Hangfire.States.DeletedState.DeletedState()"];
d37 [label="Logger.WarnException(\r\n                    String.Format(\r\n                        ''Failed to process the job '{0}': an exception occured. Job was automatically deleted because the retry attempt count exceeded {1}.'',\r\n                        context.JobId,\r\n                        Attempts),\r\n                    failedState.Exception)", span="122-127", cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", color=green, community=1];
d38 [label="Exit Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", span="113-113", cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)"];
d32 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)"];
d9 [label="var retryAttempt = context.GetJobParameter<int>(''RetryCount'') + 1", span="53-53", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)"];
d11 [label="ScheduleAgainLater(context, retryAttempt, failedState)", span="57-57", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)"];
d13 [label="TransitionToDeleted(context, failedState)", span="61-61", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)"];
d7 [label="failedState == null", span="47-47", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)"];
d12 [label="retryAttempt > Attempts && OnAttemptsExceeded == AttemptsExceededAction.Delete", span="59-59", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)"];
d8 [label="return;", span="50-50", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)"];
d1 [label="Attempts = DefaultRetryAttempts", span="22-22", cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()"];
d2 [label="LogEvents = true", span="23-23", cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()"];
d3 [label="OnAttemptsExceeded = AttemptsExceededAction.Fail", span="24-24", cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()"];
d10 [label="retryAttempt <= Attempts", span="55-55", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)"];
d24 [label="context.CandidateState = new ScheduledState(delay)\r\n            {\r\n                Reason = String.Format(''Retry attempt {0} of {1}'', retryAttempt, Attempts)\r\n            }", span="90-93", cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)"];
d28 [label="Entry Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", span="132-132", cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)"];
d23 [label="context.SetJobParameter(''RetryCount'', retryAttempt)", span="86-86", cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)"];
d29 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)"];
d17 [label="Entry Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="54-54", cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)"];
d0 [label="Entry Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="20-20", cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()"];
d4 [label="Exit Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="20-20", cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()"];
d31 [label="Entry Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27", cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)"];
d42 [label="Exit Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", span="132-132", cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)"];
d40 [label="var random = new Random()", span="134-134", cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)"];
d41 [label="return (int)Math.Round(\r\n                Math.Pow(retryCount - 1, 4) + 15 + (random.Next(30) * (retryCount)));", span="135-136", cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)"];
d30 [label="Entry Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="49-49", cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)"];
d43 [label="Entry System.Random.Random()", span="0-0", cluster="System.Random.Random()"];
d44 [label="Entry System.Math.Pow(double, double)", span="0-0", cluster="System.Math.Pow(double, double)"];
d45 [label="Entry System.Random.Next(int)", span="0-0", cluster="System.Random.Next(int)"];
d46 [label="Entry System.Math.Round(double)", span="0-0", cluster="System.Math.Round(double)"];
m0_7 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="AutomaticRetryServerComponentWrapper.cs"];
m0_6 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", span="32-32", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", file="AutomaticRetryServerComponentWrapper.cs"];
m0_5 [label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", span="29-29", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", file="AutomaticRetryServerComponentWrapper.cs"];
m0_14 [label="return new MsmqJobQueueProvider(\r\n                CleanMsmqQueueAttribute.PathPattern,\r\n                Queues,\r\n                MsmqTransactionType.Internal);", span="31-34", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", file="AutomaticRetryServerComponentWrapper.cs"];
m0_15 [label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", span="29-29", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", file="AutomaticRetryServerComponentWrapper.cs"];
m0_0 [label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", span="10-10", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="AutomaticRetryServerComponentWrapper.cs"];
m0_1 [label="var provider = CreateProvider()", span="12-12", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="AutomaticRetryServerComponentWrapper.cs"];
m0_2 [label="var jobQueue = provider.GetJobQueue(null)", span="14-14", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="AutomaticRetryServerComponentWrapper.cs"];
m0_3 [label="Assert.NotNull(jobQueue)", span="16-16", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="AutomaticRetryServerComponentWrapper.cs"];
m0_4 [label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", span="10-10", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="AutomaticRetryServerComponentWrapper.cs"];
m0_8 [label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="20-20", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="AutomaticRetryServerComponentWrapper.cs"];
m0_9 [label="var provider = CreateProvider()", span="22-22", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="AutomaticRetryServerComponentWrapper.cs"];
m0_10 [label="var monitoring = provider.GetJobQueueMonitoringApi(null)", span="24-24", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="AutomaticRetryServerComponentWrapper.cs"];
m0_11 [label="Assert.NotNull(monitoring)", span="26-26", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="AutomaticRetryServerComponentWrapper.cs"];
m0_12 [label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="20-20", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="AutomaticRetryServerComponentWrapper.cs"];
m0_16 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="26-26", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="AutomaticRetryServerComponentWrapper.cs"];
m0_13 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="37-37", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="AutomaticRetryServerComponentWrapper.cs"];
m2_90 [label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="189-189", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="BackgroundJobServerOptions.cs"];
m2_104 [label="var transaction = _connection.CreateWriteTransaction()", span="193-193", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="BackgroundJobServerOptions.cs"];
m2_105 [label="var changedContext = new StateApplyingContext(\r\n                    context,\r\n                    transaction,\r\n                    context.CurrentState,\r\n                    context.CandidateState)", span="195-199", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="BackgroundJobServerOptions.cs"];
m2_106 [label="changedContext.ApplyState(_handlers, stateChangedFilters)", span="201-201", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="BackgroundJobServerOptions.cs"];
m2_107 [label="return transaction.Commit();", span="203-203", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="BackgroundJobServerOptions.cs"];
m2_108 [label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="189-189", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="BackgroundJobServerOptions.cs"];
m2_8 [label="var handlers = stateHandlers.Union(connection.Storage.GetStateHandlers())", span="51-51", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="BackgroundJobServerOptions.cs"];
m2_14 [label="_transaction.Abort()", span="46-46", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.Requeue()", file="BackgroundJobServerOptions.cs"];
m2_88 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="BackgroundJobServerOptions.cs"];
m2_123 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="BackgroundJobServerOptions.cs"];
m2_91 [label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28", cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="BackgroundJobServerOptions.cs"];
m2_50 [label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="13-13", cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobServerOptions.cs"];
m2_12 [label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="BackgroundJobServerOptions.cs"];
m2_85 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="BackgroundJobServerOptions.cs"];
m2_59 [label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="39-39", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="BackgroundJobServerOptions.cs"];
m2_49 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="BackgroundJobServerOptions.cs"];
m2_89 [label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="91-91", cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="BackgroundJobServerOptions.cs"];
m2_17 [label="Entry Hangfire.SqlServer.Msmq.MsmqFetchedJob.Dispose()", span="49-49", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.Dispose()", file="BackgroundJobServerOptions.cs"];
m2_113 [label="handler == null", span="214-214", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="BackgroundJobServerOptions.cs"];
m2_115 [label="String.IsNullOrEmpty(handler.StateName)", span="215-215", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="BackgroundJobServerOptions.cs"];
m2_117 [label="!_handlers.ContainsKey(handler.StateName)", span="217-217", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="BackgroundJobServerOptions.cs"];
m2_118 [label="_handlers.Add(handler.StateName, new List<JobStateHandler>())", span="219-219", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="BackgroundJobServerOptions.cs"];
m2_119 [label="_handlers[handler.StateName].Add(handler)", span="222-222", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="BackgroundJobServerOptions.cs"];
m2_114 [label="throw new ArgumentNullException(''handler'');", span="214-214", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="BackgroundJobServerOptions.cs"];
m2_116 [label="throw new ArgumentNullException(''stateName'');", span="215-215", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="BackgroundJobServerOptions.cs"];
m2_120 [label="Exit HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="212-212", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="BackgroundJobServerOptions.cs"];
m2_0 [label="Entry Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", span="27-27", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="BackgroundJobServerOptions.cs"];
m2_1 [label="transaction == null", span="29-29", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="BackgroundJobServerOptions.cs"];
m2_53 [label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="BackgroundJobServerOptions.cs"];
m2_112 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="BackgroundJobServerOptions.cs"];
m2_55 [label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="10-10", cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="BackgroundJobServerOptions.cs"];
m2_25 [label="Entry HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", span="38-38", cluster="HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", file="BackgroundJobServerOptions.cs"];
m2_26 [label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="BackgroundJobServerOptions.cs"];
m2_27 [label="method == null", span="69-69", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="BackgroundJobServerOptions.cs"];
m2_29 [label="parameters == null", span="70-70", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="BackgroundJobServerOptions.cs"];
m2_31 [label="state == null", span="71-71", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="BackgroundJobServerOptions.cs"];
m2_33 [label="var invocationData = new InvocationData\r\n            {\r\n                Type = method.Type.AssemblyQualifiedName,\r\n                Method = method.Method.Name,\r\n                ParameterTypes = JobHelper.ToJson(method.Method.GetParameters().Select(x => x.ParameterType)),\r\n            }", span="73-78", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="BackgroundJobServerOptions.cs"];
m2_34 [label="var jobId = _connection.CreateExpiredJob(\r\n                invocationData, \r\n                arguments,\r\n                parameters,\r\n                TimeSpan.FromHours(1))", span="80-84", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="BackgroundJobServerOptions.cs"];
m2_35 [label="var filterInfo = GetFilters(method)", span="86-86", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="BackgroundJobServerOptions.cs"];
m2_36 [label="var context = new StateContext(jobId, method)", span="87-87", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="BackgroundJobServerOptions.cs"];
m2_37 [label="var changingContext = new StateChangingContext(context, state, null, _connection)", span="88-88", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="BackgroundJobServerOptions.cs"];
m2_28 [label="throw new ArgumentNullException(''method'');", span="69-69", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="BackgroundJobServerOptions.cs"];
m2_30 [label="throw new ArgumentNullException(''parameters'');", span="70-70", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="BackgroundJobServerOptions.cs"];
m2_32 [label="throw new ArgumentNullException(''state'');", span="71-71", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="BackgroundJobServerOptions.cs"];
m2_42 [label="transaction.PersistJob(jobId)", span="102-102", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="BackgroundJobServerOptions.cs"];
m2_44 [label="return jobId;", span="108-108", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="BackgroundJobServerOptions.cs"];
m2_38 [label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="90-90", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="BackgroundJobServerOptions.cs"];
m2_41 [label="changedContext.ApplyState(_handlers, filterInfo.StateChangedFilters)", span="100-100", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="BackgroundJobServerOptions.cs"];
m2_40 [label="var changedContext = new StateApplyingContext(\r\n                    context,\r\n                    transaction,\r\n                    ''Created'',\r\n                    changingContext.CandidateState)", span="94-98", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="BackgroundJobServerOptions.cs"];
m2_39 [label="var transaction = _connection.CreateWriteTransaction()", span="92-92", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="BackgroundJobServerOptions.cs"];
m2_43 [label="transaction.Commit()", span="105-105", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="BackgroundJobServerOptions.cs"];
m2_45 [label="Exit HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="BackgroundJobServerOptions.cs"];
m2_15 [label="Exit Hangfire.SqlServer.Msmq.MsmqFetchedJob.Requeue()", span="44-44", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.Requeue()", file="BackgroundJobServerOptions.cs"];
m2_111 [label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="119-119", cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="BackgroundJobServerOptions.cs"];
m2_57 [label="Entry HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="46-46", cluster="HangFire.Common.States.StateApplyingContext.ApplyState(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<HangFire.Common.States.JobStateHandler>>, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="BackgroundJobServerOptions.cs"];
m2_121 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="BackgroundJobServerOptions.cs"];
m2_13 [label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="BackgroundJobServerOptions.cs"];
m2_86 [label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="22-22", cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="BackgroundJobServerOptions.cs"];
m2_103 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="13-13", cluster="HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="BackgroundJobServerOptions.cs"];
m2_122 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="BackgroundJobServerOptions.cs"];
m2_16 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="BackgroundJobServerOptions.cs"];
m2_48 [label="Entry Unk.ToJson", span="", cluster="Unk.ToJson", file="BackgroundJobServerOptions.cs"];
m2_60 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="BackgroundJobServerOptions.cs"];
m2_19 [label="Exit Hangfire.SqlServer.Msmq.MsmqFetchedJob.Dispose()", span="49-49", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.Dispose()", file="BackgroundJobServerOptions.cs"];
m2_18 [label="_transaction.Dispose()", span="51-51", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.Dispose()", file="BackgroundJobServerOptions.cs"];
m2_20 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="BackgroundJobServerOptions.cs"];
m2_22 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="BackgroundJobServerOptions.cs"];
m2_23 [label="new JobFilter(f, JobFilterScope.Type, null)", span="59-59", cluster="lambda expression", file="BackgroundJobServerOptions.cs"];
m2_24 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="BackgroundJobServerOptions.cs"];
m2_61 [label="x.ParameterType", span="77-77", cluster="lambda expression", file="BackgroundJobServerOptions.cs"];
m2_62 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="BackgroundJobServerOptions.cs"];
m2_21 [label="Hangfire.SqlServer.Msmq.MsmqFetchedJob", span="", cluster="Unk.Select", file="BackgroundJobServerOptions.cs"];
m2_54 [label="Entry HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="170-170", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="BackgroundJobServerOptions.cs"];
m2_94 [label=filters, span="173-173", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="BackgroundJobServerOptions.cs"];
m2_95 [label="var oldState = context.CandidateState", span="175-175", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="BackgroundJobServerOptions.cs"];
m2_96 [label="filter.OnStateChanging(context)", span="176-176", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="BackgroundJobServerOptions.cs"];
m2_97 [label="oldState != context.CandidateState", span="178-178", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="BackgroundJobServerOptions.cs"];
m2_99 [label="transaction.AppendJobHistory(context.JobId, oldState, context.JobMethod)", span="182-182", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="BackgroundJobServerOptions.cs"];
m2_98 [label="var transaction = _connection.CreateWriteTransaction()", span="180-180", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="BackgroundJobServerOptions.cs"];
m2_100 [label="transaction.Commit()", span="183-183", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="BackgroundJobServerOptions.cs"];
m2_101 [label="Exit HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="170-170", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="BackgroundJobServerOptions.cs"];
m2_63 [label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="111-111", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="BackgroundJobServerOptions.cs"];
m2_64 [label="String.IsNullOrWhiteSpace(jobId)", span="114-114", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="BackgroundJobServerOptions.cs"];
m2_66 [label="state == null", span="115-115", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="BackgroundJobServerOptions.cs"];
m2_68 [label="_connection.AcquireJobLock(jobId)", span="117-117", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="BackgroundJobServerOptions.cs"];
m2_69 [label="var jobData = _connection.GetJobStateAndInvocationData(jobId)", span="119-119", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="BackgroundJobServerOptions.cs"];
m2_73 [label="allowedCurrentStates.Length > 0 && !allowedCurrentStates.Contains(currentState)", span="128-128", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="BackgroundJobServerOptions.cs"];
m2_77 [label="var context = new StateContext(jobId, jobMethod)", span="138-138", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="BackgroundJobServerOptions.cs"];
m2_78 [label="var changingContext = new StateChangingContext(context, state, currentState, _connection)", span="139-139", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="BackgroundJobServerOptions.cs"];
m2_82 [label="var changingContext = new StateChangingContext(\r\n                        new StateContext(jobId, null),\r\n                        new FailedState(ex)\r\n                        {\r\n                            Reason = String.Format(\r\n                                ''Could not change the state of the job '{0}' to the '{1}'. See the inner exception for details.'',\r\n                                state.StateName, jobId)\r\n                        },\r\n                        currentState,\r\n                        _connection)", span="152-161", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="BackgroundJobServerOptions.cs"];
m2_65 [label="throw new ArgumentNullException(''jobId'');", span="114-114", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="BackgroundJobServerOptions.cs"];
m2_67 [label="throw new ArgumentNullException(''state'');", span="115-115", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="BackgroundJobServerOptions.cs"];
m2_70 [label="jobData == null", span="121-121", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="BackgroundJobServerOptions.cs"];
m2_72 [label="var currentState = jobData.State", span="127-127", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="BackgroundJobServerOptions.cs"];
m2_75 [label="var jobMethod = JobMethod.Deserialize(jobData.InvocationData)", span="135-135", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="BackgroundJobServerOptions.cs"];
m2_71 [label="return false;", span="124-124", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="BackgroundJobServerOptions.cs"];
m2_74 [label="return false;", span="130-130", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="BackgroundJobServerOptions.cs"];
m2_76 [label="var filterInfo = GetFilters(jobMethod)", span="136-136", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="BackgroundJobServerOptions.cs"];
m2_79 [label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="141-141", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="BackgroundJobServerOptions.cs"];
m2_80 [label="return ApplyState(changingContext, filterInfo.StateChangedFilters);", span="143-143", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="BackgroundJobServerOptions.cs"];
m2_81 [label=JobLoadException, span="145-145", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="BackgroundJobServerOptions.cs"];
m2_83 [label="return ApplyState(\r\n                        changingContext,\r\n                        Enumerable.Empty<IStateChangedFilter>());", span="163-165", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="BackgroundJobServerOptions.cs"];
m2_84 [label="Exit HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="111-111", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="BackgroundJobServerOptions.cs"];
m2_102 [label="Entry HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30", cluster="HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="BackgroundJobServerOptions.cs"];
m2_5 [label="stateHandlers == null", span="47-47", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="BackgroundJobServerOptions.cs"];
m2_6 [label="throw new ArgumentNullException(''stateHandlers'');", span="47-47", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="BackgroundJobServerOptions.cs"];
m2_3 [label="connection == null", span="46-46", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="BackgroundJobServerOptions.cs"];
m2_4 [label="throw new ArgumentNullException(''connection'');", span="46-46", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="BackgroundJobServerOptions.cs"];
m2_2 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="BackgroundJobServerOptions.cs"];
m2_7 [label="_connection = connection", span="49-49", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="BackgroundJobServerOptions.cs"];
m2_87 [label="Entry HangFire.Storage.IStorageConnection.GetJobStateAndInvocationData(string)", span="23-23", cluster="HangFire.Storage.IStorageConnection.GetJobStateAndInvocationData(string)", file="BackgroundJobServerOptions.cs"];
m2_56 [label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction, string, HangFire.Common.States.JobState)", span="25-25", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction, string, HangFire.Common.States.JobState)", file="BackgroundJobServerOptions.cs"];
m2_9 [label=handlers, span="52-52", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="BackgroundJobServerOptions.cs"];
m2_10 [label="RegisterHandler(handler)", span="54-54", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", color=green, community=0, file="BackgroundJobServerOptions.cs"];
m2_11 [label="filters != null", span="57-57", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="BackgroundJobServerOptions.cs"];
m2_58 [label="Entry HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="11-11", cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="BackgroundJobServerOptions.cs"];
m2_125 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="BackgroundJobServerOptions.cs"];
m2_51 [label="Entry HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="207-207", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="BackgroundJobServerOptions.cs"];
m2_109 [label="return new JobFilterInfo(_getFiltersThunk(method));", span="209-209", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="BackgroundJobServerOptions.cs"];
m2_110 [label="Exit HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="207-207", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="BackgroundJobServerOptions.cs"];
m2_47 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="BackgroundJobServerOptions.cs"];
m2_124 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="BackgroundJobServerOptions.cs"];
m2_52 [label="Entry HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", span="27-27", cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="BackgroundJobServerOptions.cs"];
m2_46 [label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2", cluster="HangFire.Storage.InvocationData.InvocationData()", file="BackgroundJobServerOptions.cs"];
m2_93 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="BackgroundJobServerOptions.cs"];
m2_126 [label="HangFire.States.StateMachine", span="", file="BackgroundJobServerOptions.cs"];
m2_127 [label="System.Collections.Generic.IEnumerable<object>", span="", file="BackgroundJobServerOptions.cs"];
m4_0 [label="Entry HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="10-10", cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="JobArgumentFacts.cs"];
m4_1 [label="context.Transaction.AddToSet(\r\n                ''processing'',\r\n                context.JobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow))", span="12-15", cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="JobArgumentFacts.cs"];
m4_2 [label="Exit HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="10-10", cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="JobArgumentFacts.cs"];
m4_8 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="25-25", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="JobArgumentFacts.cs"];
m4_5 [label="Entry HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18", cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="JobArgumentFacts.cs"];
m4_6 [label="context.Transaction.RemoveFromSet(''processing'', context.JobId)", span="20-20", cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="JobArgumentFacts.cs"];
m4_7 [label="Exit HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18", cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="JobArgumentFacts.cs"];
m4_3 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="JobArgumentFacts.cs"];
m4_4 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="24-24", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="JobArgumentFacts.cs"];
m6_6 [label="throw new ArgumentNullException(''instantFactory'');", span="47-47", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs"];
m6_7 [label="throttler == null", span="48-48", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs"];
m6_8 [label="throw new ArgumentNullException(''throttler'');", span="48-48", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs"];
m6_9 [label="_storage = storage", span="50-50", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs"];
m6_10 [label="_client = client", span="51-51", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs"];
m6_14 [label="Entry HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="RecurringJobScheduler.cs"];
m6_30 [label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28", cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="RecurringJobScheduler.cs"];
m6_53 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="RecurringJobScheduler.cs"];
m6_12 [label="_throttler = throttler", span="53-53", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs"];
m6_29 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()", file="RecurringJobScheduler.cs"];
m6_60 [label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="31-31", cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="RecurringJobScheduler.cs"];
m6_5 [label="instantFactory == null", span="47-47", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs"];
m6_64 [label="Entry Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="61-61", cluster="Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RecurringJobScheduler.cs"];
m6_56 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RecurringJobScheduler.cs"];
m6_34 [label="Entry Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", span="98-98", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs"];
m6_49 [label="connection.SetRangeInHash(\r\n                    String.Format(''recurring-job:{0}'', recurringJobId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''LastExecution'', JobHelper.SerializeDateTime(instant.UtcTime) },\r\n                            { ''LastJobId'', jobId },\r\n                        })", span="115-121", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs"];
m6_50 [label="connection.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', recurringJobId),\r\n                new Dictionary<string, string>\r\n                {\r\n                    {\r\n                        ''NextExecution'', \r\n                        JobHelper.SerializeDateTime(instant.NextOccurrence)\r\n                    }\r\n                })", span="124-132", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs"];
m6_40 [label="var serializedJob = JobHelper.FromJson<InvocationData>(recurringJob[''Job''])", span="100-100", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs"];
m6_42 [label="var cron = recurringJob[''Cron'']", span="102-102", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs"];
m6_45 [label="var lastExecutionTime = recurringJob.ContainsKey(''LastExecution'')\r\n                ? JobHelper.DeserializeDateTime(recurringJob[''LastExecution''])\r\n                : (DateTime?)null", span="106-108", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs"];
m6_48 [label="var jobId = _client.Create(job, state)", span="113-113", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs"];
m6_44 [label="var instant = _instantFactory.GetInstant(cronSchedule)", span="104-104", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs"];
m6_46 [label="instant.GetMatches(lastExecutionTime).Any()", span="110-110", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs"];
m6_41 [label="var job = serializedJob.Deserialize()", span="101-101", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs"];
m6_43 [label="var cronSchedule = CrontabSchedule.Parse(cron)", span="103-103", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs"];
m6_47 [label="var state = new EnqueuedState { Reason = ''Triggered by recurring job scheduler'' }", span="112-112", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs"];
m6_51 [label="Exit Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", span="98-98", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs"];
m6_15 [label="Entry Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", span="56-56", cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs"];
m6_25 [label="Logger.WarnException(\r\n                            String.Format(\r\n                                ''Recurring job '{0}' can not be scheduled due to job load exception.'',\r\n                                recurringJobId),\r\n                            ex)", span="81-85", cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", color=green, community=1, file="RecurringJobScheduler.cs"];
m6_20 [label=recurringJobIds, span="65-65", cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs"];
m6_24 [label=JobLoadException, span="79-79", cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs"];
m6_19 [label="var recurringJobIds = connection.GetAllItemsFromSet(''recurring-jobs'')", span="63-63", cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs"];
m6_23 [label="TryScheduleJob(connection, recurringJobId, recurringJob)", span="77-77", cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs"];
m6_22 [label="recurringJob == null", span="70-70", cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs"];
m6_21 [label="var recurringJob = connection.GetAllEntriesFromHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId))", span="67-68", cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs"];
m6_26 [label="_throttler.Delay(cancellationToken)", span="89-89", cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs"];
m6_17 [label="var connection = _storage.GetConnection()", span="60-60", cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs"];
m6_18 [label="connection.AcquireDistributedLock(''recurring-jobs:lock'', LockTimeout)", span="61-61", cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs"];
m6_16 [label="_throttler.Throttle(cancellationToken)", span="58-58", cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs"];
m6_27 [label="Exit Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", span="56-56", cluster="Hangfire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs"];
m6_35 [label="Entry Hangfire.Logging.ILog.WarnException(string, System.Exception)", span="285-285", cluster="Hangfire.Logging.ILog.WarnException(string, System.Exception)", file="RecurringJobScheduler.cs"];
m6_61 [label="Entry Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="41-41", cluster="Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="RecurringJobScheduler.cs"];
m6_0 [label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", span="39-39", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs"];
m6_1 [label="storage == null", span="45-45", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs"];
m6_2 [label="throw new ArgumentNullException(''storage'');", span="45-45", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs"];
m6_3 [label="client == null", span="46-46", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs"];
m6_59 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="RecurringJobScheduler.cs"];
m6_54 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="RecurringJobScheduler.cs"];
m6_28 [label="Entry Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", span="22-22", cluster="Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs"];
m6_11 [label="_instantFactory = instantFactory", span="52-52", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs"];
m6_62 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobScheduler.cs"];
m6_13 [label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", span="39-39", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.JobStorage, Hangfire.IBackgroundJobClient, Hangfire.Server.IScheduleInstantFactory, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs"];
m6_63 [label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68", cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="RecurringJobScheduler.cs"];
m6_4 [label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="27-27", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="RecurringJobScheduler.cs"];
m6_52 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="RecurringJobScheduler.cs"];
m6_58 [label="Entry Hangfire.Server.IScheduleInstant.GetMatches(System.DateTime?)", span="25-25", cluster="Hangfire.Server.IScheduleInstant.GetMatches(System.DateTime?)", file="RecurringJobScheduler.cs"];
m6_57 [label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73", cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="RecurringJobScheduler.cs"];
m6_55 [label="Entry Unk.GetInstant", span="", cluster="Unk.GetInstant", file="RecurringJobScheduler.cs"];
m6_36 [label="Entry Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", span="23-23", cluster="Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs"];
m6_31 [label="Entry Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55", cluster="Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="RecurringJobScheduler.cs"];
m6_33 [label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64", cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="RecurringJobScheduler.cs"];
m6_65 [label="Hangfire.Server.RecurringJobScheduler", span="", file="RecurringJobScheduler.cs"];
d15 -> d16  [key=0, style=solid, color=green];
d15 -> d20  [key=2, style=dotted, color=green];
d15 -> d21  [key=2, style=dotted, color=green];
d5 -> d15  [key=1, style=dashed, color=green, label="Hangfire.States.ElectStateContext"];
d5 -> d6  [key=0, style=solid];
d5 -> d9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
d5 -> d11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
d5 -> d13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
d6 -> d15  [key=1, style=dashed, color=green, label=failedState];
d6 -> d7  [key=0, style=solid];
d6 -> d11  [key=1, style=dashed, color=darkseagreen4, label=failedState];
d6 -> d13  [key=1, style=dashed, color=darkseagreen4, label=failedState];
d14 -> d15  [key=0, style=solid, color=green];
d14 -> d16  [key=0, style=solid];
d16 -> d5  [key=0, style=bold, color=blue];
d26 -> d27  [key=0, style=solid, color=green];
d26 -> d33  [key=2, style=dotted, color=green];
d26 -> d34  [key=2, style=dotted, color=green];
d47 -> d26  [key=1, style=dashed, color=green, label="Hangfire.AutomaticRetryAttribute"];
d47 -> d35  [key=1, style=dashed, color=green, label="Hangfire.AutomaticRetryAttribute"];
d47 -> d37  [key=1, style=dashed, color=green, label="Hangfire.AutomaticRetryAttribute"];
d47 -> d14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
d47 -> d1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
d47 -> d2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
d47 -> d3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
d47 -> d10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
d47 -> d11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
d47 -> d12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
d47 -> d13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
d47 -> d24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
d47 -> d25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
d47 -> d36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
d18 -> d26  [key=1, style=dashed, color=green, label="Hangfire.States.ElectStateContext"];
d18 -> d5  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.States.ElectStateContext context"];
d18 -> d6  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.States.FailedState failedState"];
d18 -> d22  [key=0, style=solid];
d18 -> d23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
d18 -> d24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
d18 -> d9  [key=3, color=darkorchid, style=bold, label="Parameter variable int retryAttempt"];
d22 -> d26  [key=1, style=dashed, color=green, label=delay];
d22 -> d23  [key=0, style=solid];
d22 -> d28  [key=2, style=dotted];
d22 -> d29  [key=2, style=dotted];
d22 -> d24  [key=1, style=dashed, color=darkseagreen4, label=delay];
d25 -> d26  [key=0, style=solid, color=green];
d25 -> d27  [key=0, style=solid];
d27 -> d18  [key=0, style=bold, color=blue];
d35 -> d36  [key=0, style=solid, color=green];
d35 -> d39  [key=2, style=dotted, color=green];
d35 -> d20  [key=2, style=dotted, color=green];
d19 -> d35  [key=0, style=solid, color=green];
d19 -> d37  [key=1, style=dashed, color=green, label="Hangfire.States.ElectStateContext"];
d19 -> d5  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.States.ElectStateContext context"];
d19 -> d6  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.States.FailedState failedState"];
d36 -> d37  [key=0, style=solid, color=green];
d36 -> d38  [key=0, style=solid];
d37 -> d38  [key=0, style=solid, color=green];
d37 -> d32  [key=2, style=dotted, color=green];
d37 -> d34  [key=2, style=dotted, color=green];
d38 -> d19  [key=0, style=bold, color=blue];
d9 -> d10  [key=0, style=solid];
d9 -> d17  [key=2, style=dotted];
d9 -> d11  [key=1, style=dashed, color=darkseagreen4, label=retryAttempt];
d9 -> d12  [key=1, style=dashed, color=darkseagreen4, label=retryAttempt];
d11 -> d16  [key=0, style=solid];
d11 -> d18  [key=2, style=dotted];
d13 -> d16  [key=0, style=solid];
d13 -> d19  [key=2, style=dotted];
d7 -> d9  [key=0, style=solid];
d7 -> d8  [key=0, style=solid];
d12 -> d14  [key=0, style=solid];
d12 -> d13  [key=0, style=solid];
d8 -> d16  [key=0, style=solid];
d1 -> d2  [key=0, style=solid];
d2 -> d3  [key=0, style=solid];
d3 -> d4  [key=0, style=solid];
d10 -> d11  [key=0, style=solid];
d10 -> d12  [key=0, style=solid];
d24 -> d25  [key=0, style=solid];
d24 -> d32  [key=2, style=dotted];
d24 -> d31  [key=2, style=dotted];
d28 -> d18  [key=3, color=darkorchid, style=bold, label="Parameter variable long retryCount"];
d28 -> d40  [key=0, style=solid];
d28 -> d41  [key=1, style=dashed, color=darkseagreen4, label=long];
d23 -> d24  [key=0, style=solid];
d23 -> d30  [key=2, style=dotted];
d0 -> d1  [key=0, style=solid];
d4 -> d0  [key=0, style=bold, color=blue];
d42 -> d28  [key=0, style=bold, color=blue];
d40 -> d41  [key=0, style=solid];
d40 -> d43  [key=2, style=dotted];
d41 -> d42  [key=0, style=solid];
d41 -> d44  [key=2, style=dotted];
d41 -> d45  [key=2, style=dotted];
d41 -> d46  [key=2, style=dotted];
m0_5 -> m0_14  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_16  [key=2, style=dotted];
m0_15 -> m0_5  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_5  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_6  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_7  [key=2, style=dotted];
m0_4 -> m0_0  [key=0, style=bold, color=blue];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_5  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_13  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_7  [key=2, style=dotted];
m0_12 -> m0_8  [key=0, style=bold, color=blue];
m2_90 -> m2_104  [key=0, style=solid];
m2_90 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m2_90 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>"];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_55  [key=2, style=dotted];
m2_104 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_56  [key=2, style=dotted];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_57  [key=2, style=dotted];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_59  [key=2, style=dotted];
m2_108 -> m2_90  [key=0, style=bold, color=blue];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_15  [key=2, style=dotted];
m2_8 -> m2_16  [key=2, style=dotted];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_16  [key=2, style=dotted];
m2_12 -> m2_0  [key=3, color=darkorchid, style=bold, label="Field variable Hangfire.SqlServer.Msmq.IMsmqTransaction _transaction"];
m2_12 -> m2_13  [key=0, style=solid];
m2_17 -> m2_113  [key=0, style=solid];
m2_17 -> m2_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m2_17 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m2_17 -> m2_118  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m2_17 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m2_17 -> m2_18  [key=0, style=solid];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_115  [key=0, style=solid];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_117  [key=0, style=solid];
m2_115 -> m2_121  [key=2, style=dotted];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_119  [key=0, style=solid];
m2_117 -> m2_122  [key=2, style=dotted];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_123  [key=2, style=dotted];
m2_118 -> m2_124  [key=2, style=dotted];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_125  [key=2, style=dotted];
m2_114 -> m2_120  [key=0, style=solid];
m2_114 -> m2_14  [key=2, style=dotted];
m2_116 -> m2_120  [key=0, style=solid];
m2_116 -> m2_14  [key=2, style=dotted];
m2_120 -> m2_17  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.IMsmqTransaction"];
m2_0 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_0 -> m2_0  [key=3, color=darkorchid, style=bold, label="Field variable int MaxDefaultWorkerCount"];
m2_0 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_1 -> m2_0  [key=0, style=bold, color=blue];
m2_1 -> m2_3  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m2_26 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m2_26 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m2_26 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m2_26 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m2_26 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m2_26 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_29  [key=0, style=solid];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_31  [key=0, style=solid];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_33  [key=0, style=solid];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_46  [key=2, style=dotted];
m2_33 -> m2_47  [key=2, style=dotted];
m2_33 -> m2_21  [key=2, style=dotted];
m2_33 -> m2_48  [key=2, style=dotted];
m2_33 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_49  [key=2, style=dotted];
m2_34 -> m2_50  [key=2, style=dotted];
m2_34 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m2_34 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m2_34 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_51  [key=2, style=dotted];
m2_35 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m2_35 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_52  [key=2, style=dotted];
m2_36 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_53  [key=2, style=dotted];
m2_37 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label=changingContext];
m2_28 -> m2_45  [key=0, style=solid];
m2_28 -> m2_14  [key=2, style=dotted];
m2_30 -> m2_45  [key=0, style=solid];
m2_30 -> m2_14  [key=2, style=dotted];
m2_32 -> m2_45  [key=0, style=solid];
m2_32 -> m2_14  [key=2, style=dotted];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_58  [key=2, style=dotted];
m2_44 -> m2_45  [key=0, style=solid];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_54  [key=2, style=dotted];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_57  [key=2, style=dotted];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_56  [key=2, style=dotted];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_55  [key=2, style=dotted];
m2_39 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m2_39 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_59  [key=2, style=dotted];
m2_45 -> m2_26  [key=0, style=bold, color=blue];
m2_15 -> m2_13  [key=0, style=bold, color=blue];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_1  [key=3, color=darkorchid, style=bold, label="Property variable string ServerName"];
m2_13 -> m2_2  [key=0, style=bold, color=blue];
m2_60 -> m2_61  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_21  [key=2, style=dotted];
m2_19 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_19 -> m2_17  [key=0, style=bold, color=blue];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_20  [key=2, style=dotted];
m2_20 -> m2_18  [key=0, style=bold, color=blue];
m2_22 -> m2_23  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_25  [key=2, style=dotted];
m2_24 -> m2_22  [key=0, style=bold, color=blue];
m2_61 -> m2_62  [key=0, style=solid];
m2_62 -> m2_60  [key=0, style=bold, color=blue];
m2_21 -> m2_10  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Msmq.MsmqFetchedJob"];
m2_21 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqFetchedJob"];
m2_21 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqFetchedJob"];
m2_21 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqFetchedJob"];
m2_21 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqFetchedJob"];
m2_54 -> m2_94  [key=0, style=solid];
m2_54 -> m2_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m2_54 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m2_54 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m2_54 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_101  [key=0, style=solid];
m2_94 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label=filter];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m2_95 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_102  [key=2, style=dotted];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_94  [key=0, style=solid];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_103  [key=2, style=dotted];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_55  [key=2, style=dotted];
m2_98 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m2_100 -> m2_94  [key=0, style=solid];
m2_100 -> m2_59  [key=2, style=dotted];
m2_101 -> m2_54  [key=0, style=bold, color=blue];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m2_63 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_63 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_63 -> m2_73  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m2_63 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_63 -> m2_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m2_63 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_66  [key=0, style=solid];
m2_64 -> m2_85  [key=2, style=dotted];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_68  [key=0, style=solid];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_86  [key=2, style=dotted];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_87  [key=2, style=dotted];
m2_69 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m2_69 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_75  [key=0, style=solid];
m2_73 -> m2_88  [key=2, style=dotted];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_52  [key=2, style=dotted];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_53  [key=2, style=dotted];
m2_78 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label=changingContext];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_53  [key=2, style=dotted];
m2_82 -> m2_52  [key=2, style=dotted];
m2_82 -> m2_91  [key=2, style=dotted];
m2_82 -> d32  [key=2, style=dotted];
m2_65 -> m2_84  [key=0, style=solid];
m2_65 -> m2_14  [key=2, style=dotted];
m2_67 -> m2_84  [key=0, style=solid];
m2_67 -> m2_14  [key=2, style=dotted];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_72  [key=0, style=solid];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_78  [key=1, style=dashed, color=darkseagreen4, label=currentState];
m2_72 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label=currentState];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_89  [key=2, style=dotted];
m2_75 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label=jobMethod];
m2_71 -> m2_84  [key=0, style=solid];
m2_74 -> m2_84  [key=0, style=solid];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_51  [key=2, style=dotted];
m2_76 -> m2_79  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m2_76 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_54  [key=2, style=dotted];
m2_80 -> m2_84  [key=0, style=solid];
m2_80 -> m2_90  [key=2, style=dotted];
m2_81 -> m2_82  [key=0, style=solid];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_93  [key=2, style=dotted];
m2_83 -> m2_90  [key=2, style=dotted];
m2_84 -> m2_63  [key=0, style=bold, color=blue];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_13  [key=0, style=solid];
m2_6 -> m2_14  [key=2, style=dotted];
m2_3 -> m2_5  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_7  [key=0, style=solid];
m2_4 -> m2_8  [key=2, style=dotted];
m2_4 -> m2_13  [key=0, style=solid];
m2_4 -> m2_14  [key=2, style=dotted];
m2_2 -> m2_7  [key=0, style=solid];
m2_2 -> m2_8  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>"];
m2_2 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m2_2 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m2_2 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m2_7 -> m2_0  [key=0, style=bold, color=blue];
m2_7 -> m2_8  [key=0, style=solid];
m2_9 -> m2_10  [key=0, style=solid, color=green];
m2_9 -> m2_11  [key=0, style=solid];
m2_10 -> m2_11  [key=0, style=solid, color=green];
m2_10 -> m2_12  [key=2, style=dotted, color=green];
m2_10 -> m2_9  [key=0, style=solid];
m2_10 -> m2_17  [key=2, style=dotted];
m2_11 -> m2_9  [key=0, style=bold, color=blue];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_13  [key=0, style=solid];
m2_51 -> m2_109  [key=0, style=solid];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_111  [key=2, style=dotted];
m2_109 -> m2_112  [key=2, style=dotted];
m2_110 -> m2_51  [key=0, style=bold, color=blue];
m2_126 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_126 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_126 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_126 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_126 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_126 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_126 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_126 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_126 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_126 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_126 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_126 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_126 -> m2_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_126 -> m2_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_126 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_126 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_126 -> m2_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_126 -> m2_98  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_126 -> m2_104  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_126 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_126 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_126 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_126 -> m2_118  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_126 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m2_127 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=2, style=dotted];
m4_1 -> m4_4  [key=2, style=dotted];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_5 -> m4_6  [key=0, style=solid];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_8  [key=2, style=dotted];
m4_7 -> m4_5  [key=0, style=bold, color=blue];
m4_3 -> m4_3  [key=3, color=darkorchid, style=bold, label="Field variable byte ByteValue"];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_13  [key=0, style=solid];
m6_6 -> m6_14  [key=2, style=dotted];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_4  [key=2, style=dotted];
m6_7 -> m6_11  [key=2, style=dotted];
m6_7 -> m6_9  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_12  [key=2, style=dotted];
m6_8 -> m6_13  [key=0, style=solid];
m6_8 -> m6_14  [key=2, style=dotted];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_13  [key=2, style=dotted];
m6_9 -> m6_14  [key=2, style=dotted];
m6_10 -> m6_6  [key=0, style=bold, color=blue];
m6_10 -> m6_11  [key=0, style=solid];
m6_12 -> m6_13  [key=0, style=solid];
m6_5 -> m6_7  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_34 -> m6_20  [key=3, color=darkorchid, style=bold, label="Parameter variable string recurringJobId"];
m6_34 -> m6_40  [key=0, style=solid];
m6_34 -> m6_42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m6_34 -> m6_45  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m6_34 -> m6_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m6_34 -> m6_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m6_34 -> m6_17  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.Storage.IStorageConnection connection"];
m6_34 -> m6_21  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.Dictionary<string, string> recurringJob"];
m6_49 -> d20  [key=2, style=dotted];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_62  [key=2, style=dotted];
m6_49 -> m6_63  [key=2, style=dotted];
m6_49 -> m6_64  [key=2, style=dotted];
m6_50 -> d20  [key=2, style=dotted];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_62  [key=2, style=dotted];
m6_50 -> m6_63  [key=2, style=dotted];
m6_50 -> m6_64  [key=2, style=dotted];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_52  [key=2, style=dotted];
m6_42 -> m6_43  [key=0, style=solid];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_56  [key=2, style=dotted];
m6_45 -> m6_57  [key=2, style=dotted];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_61  [key=2, style=dotted];
m6_44 -> m6_49  [key=1, style=dashed, color=darkseagreen4, label=instant];
m6_44 -> m6_50  [key=1, style=dashed, color=darkseagreen4, label=instant];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_55  [key=2, style=dotted];
m6_44 -> m6_46  [key=1, style=dashed, color=darkseagreen4, label=instant];
m6_46 -> m6_50  [key=0, style=solid];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_58  [key=2, style=dotted];
m6_46 -> m6_59  [key=2, style=dotted];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_48  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_41 -> m6_53  [key=2, style=dotted];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_54  [key=2, style=dotted];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_60  [key=2, style=dotted];
m6_51 -> m6_34  [key=0, style=bold, color=blue];
m6_15 -> m6_26  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m6_15 -> m6_16  [key=0, style=solid];
m6_25 -> m6_20  [key=0, style=solid, color=green];
m6_25 -> d20  [key=2, style=dotted, color=green];
m6_25 -> m6_35  [key=2, style=dotted, color=green];
m6_20 -> m6_25  [key=1, style=dashed, color=green, label=recurringJobId];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_26  [key=0, style=solid];
m6_20 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=recurringJobId];
m6_24 -> m6_25  [key=0, style=solid, color=green];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_31  [key=2, style=dotted];
m6_23 -> m6_20  [key=0, style=solid];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_34  [key=2, style=dotted];
m6_22 -> m6_20  [key=0, style=solid];
m6_22 -> m6_23  [key=0, style=solid];
m6_21 -> d20  [key=2, style=dotted];
m6_21 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=recurringJob];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_33  [key=2, style=dotted];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_36  [key=2, style=dotted];
m6_17 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label=connection];
m6_17 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=connection];
m6_17 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label=connection];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_29  [key=2, style=dotted];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_30  [key=2, style=dotted];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_28  [key=2, style=dotted];
m6_27 -> m6_15  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m6_0 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IBackgroundJobClient"];
m6_0 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IScheduleInstantFactory"];
m6_0 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IThrottler"];
m6_0 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.IBackgroundJobClient"];
m6_0 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IScheduleInstantFactory"];
m6_0 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IThrottler"];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_4  [key=2, style=dotted];
m6_1 -> m6_3  [key=0, style=solid];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_5  [key=2, style=dotted];
m6_2 -> m6_13  [key=0, style=solid];
m6_2 -> m6_14  [key=2, style=dotted];
m6_3 -> m6_0  [key=0, style=bold, color=blue];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=0, style=solid];
m6_11 -> m6_12  [key=0, style=solid];
m6_13 -> m6_0  [key=0, style=bold, color=blue];
m6_4 -> m6_13  [key=0, style=solid];
m6_4 -> m6_14  [key=2, style=dotted];
m6_65 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m6_65 -> m6_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m6_65 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m6_65 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m6_65 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m6_65 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m6_65 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m6_65 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m6_65 -> m6_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m6_65 -> m6_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
}
