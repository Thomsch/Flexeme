digraph  {
n116 [label="Hangfire.Core.Tests.BackgroundJobFacts", span=""];
n0 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.BackgroundJobFacts()", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.BackgroundJobFacts()", span="12-12"];
n1 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.BackgroundJobFacts()", label="_client = new Mock<IBackgroundJobClient>()", span="14-14"];
n2 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.BackgroundJobFacts()", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.BackgroundJobFacts()", span="12-12"];
n3 [cluster="Mock<IBackgroundJobClient>.cstr", label="Entry Mock<IBackgroundJobClient>.cstr", span=""];
n4 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Enqueue_CreatesAJobInEnqueuedState()", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Enqueue_CreatesAJobInEnqueuedState()", span="18-18"];
n5 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Enqueue_CreatesAJobInEnqueuedState()", label="Initialize()", span="20-20"];
n6 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Enqueue_CreatesAJobInEnqueuedState()", label="BackgroundJob.Enqueue(() => Method())", span="22-22"];
n9 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Initialize()", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Initialize()", span="123-123"];
n7 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Enqueue_CreatesAJobInEnqueuedState()", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="24-24"];
n10 [cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", label="Entry Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="60-60"];
n12 [cluster="lambda expression", label="Entry lambda expression", span="22-22"];
n8 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Enqueue_CreatesAJobInEnqueuedState()", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.Enqueue_CreatesAJobInEnqueuedState()", span="18-18"];
n11 [cluster="Unk.Verify", label="Entry Unk.Verify", span=""];
n16 [cluster="lambda expression", label="Entry lambda expression", span="24-24"];
n13 [cluster="lambda expression", label="Method()", span="22-22"];
n14 [cluster="lambda expression", label="Exit lambda expression", span="22-22"];
n15 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Method()", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Method()", span="128-128"];
n17 [cluster="lambda expression", label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="24-24"];
n18 [cluster="lambda expression", label="Exit lambda expression", span="24-24"];
n19 [cluster="Unk.>", label="Entry Unk.>", span=""];
n20 [cluster="Unk.Create", label="Entry Unk.Create", span=""];
n21 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", span="28-28"];
n22 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", label="Initialize()", span="30-30"];
n23 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", label="BackgroundJob.Enqueue<BackgroundJobFacts>(x => x.Method())", span="32-32"];
n24 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="34-34"];
n26 [cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", label="Entry Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="76-76"];
n27 [cluster="lambda expression", label="Entry lambda expression", span="32-32"];
n25 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", span="28-28"];
n30 [cluster="lambda expression", label="Entry lambda expression", span="34-34"];
n28 [cluster="lambda expression", label="x.Method()", span="32-32"];
n29 [cluster="lambda expression", label="Exit lambda expression", span="32-32"];
n31 [cluster="lambda expression", label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="34-34"];
n32 [cluster="lambda expression", label="Exit lambda expression", span="34-34"];
n33 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", span="38-38"];
n34 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", label="Initialize()", span="40-40"];
n35 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", label="BackgroundJob.Schedule(() => Method(), TimeSpan.FromDays(1))", span="42-42"];
n36 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="44-46"];
n38 [cluster="System.TimeSpan.FromDays(double)", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
n39 [cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", label="Entry Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="90-90"];
n40 [cluster="lambda expression", label="Entry lambda expression", span="42-42"];
n37 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", span="38-38"];
n43 [cluster="lambda expression", label="Entry lambda expression", span="44-46"];
n41 [cluster="lambda expression", label="Method()", span="42-42"];
n42 [cluster="lambda expression", label="Exit lambda expression", span="42-42"];
n44 [cluster="lambda expression", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="44-46"];
n45 [cluster="lambda expression", label="Exit lambda expression", span="44-46"];
n46 [cluster="lambda expression", label="Entry lambda expression", span="46-46"];
n47 [cluster="lambda expression", label="state.EnqueueAt > DateTime.UtcNow", span="46-46"];
n48 [cluster="lambda expression", label="Exit lambda expression", span="46-46"];
n49 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", span="50-50"];
n50 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", label="Initialize()", span="52-52"];
n51 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", label="BackgroundJob.Schedule<BackgroundJobFacts>(x => Method(), TimeSpan.FromDays(1))", span="54-54"];
n52 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="56-58"];
n54 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="105-105"];
n55 [cluster="lambda expression", label="Entry lambda expression", span="54-54"];
n53 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", span="50-50"];
n58 [cluster="lambda expression", label="Entry lambda expression", span="56-58"];
n56 [cluster="lambda expression", label="Method()", span="54-54"];
n57 [cluster="lambda expression", label="Exit lambda expression", span="54-54"];
n59 [cluster="lambda expression", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="56-58"];
n60 [cluster="lambda expression", label="Exit lambda expression", span="56-58"];
n61 [cluster="lambda expression", label="Entry lambda expression", span="58-58"];
n62 [cluster="lambda expression", label="state.EnqueueAt > DateTime.UtcNow", span="58-58"];
n63 [cluster="lambda expression", label="Exit lambda expression", span="58-58"];
n64 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", span="62-62"];
n65 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", label="Initialize()", span="64-64"];
n66 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", label="BackgroundJob.Delete(''job-id'')", span="66-66"];
n67 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", label="_client.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<DeletedState>(),\r\n                null))", span="68-71"];
n69 [cluster="Hangfire.BackgroundJob.Delete(string)", label="Entry Hangfire.BackgroundJob.Delete(string)", span="119-119"];
n68 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", span="62-62"];
n70 [cluster="lambda expression", label="Entry lambda expression", span="68-71"];
n71 [cluster="lambda expression", label="x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<DeletedState>(),\r\n                null)", span="68-71"];
n72 [cluster="lambda expression", label="Exit lambda expression", span="68-71"];
n73 [cluster="Unk.ChangeState", label="Entry Unk.ChangeState", span=""];
n74 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", span="75-75"];
n75 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", label="Initialize()", span="77-77"];
n76 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", label="BackgroundJob.Delete(''job-id'', FailedState.StateName)", span="79-79"];
n77 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", label="_client.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<DeletedState>(),\r\n                FailedState.StateName))", span="81-84"];
n79 [cluster="Hangfire.BackgroundJob.Delete(string, string)", label="Entry Hangfire.BackgroundJob.Delete(string, string)", span="135-135"];
n78 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", span="75-75"];
n80 [cluster="lambda expression", label="Entry lambda expression", span="81-84"];
n81 [cluster="lambda expression", label="x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<DeletedState>(),\r\n                FailedState.StateName)", span="81-84"];
n82 [cluster="lambda expression", label="Exit lambda expression", span="81-84"];
n83 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", span="88-88"];
n84 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", label="Initialize()", span="90-90"];
n85 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", label="BackgroundJob.Requeue(''job-id'')", span="92-92"];
n86 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", label="_client.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<EnqueuedState>(),\r\n                null))", span="94-97"];
n88 [cluster="Hangfire.BackgroundJob.Requeue(string)", label="Entry Hangfire.BackgroundJob.Requeue(string)", span="148-148"];
n87 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", span="88-88"];
n89 [cluster="lambda expression", label="Entry lambda expression", span="94-97"];
n90 [cluster="lambda expression", label="x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<EnqueuedState>(),\r\n                null)", span="94-97"];
n91 [cluster="lambda expression", label="Exit lambda expression", span="94-97"];
n92 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", span="101-101"];
n93 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", label="Initialize()", span="103-103"];
n94 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", label="BackgroundJob.Requeue(''job-id'', FailedState.StateName)", span="105-105"];
n95 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", label="_client.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<EnqueuedState>(),\r\n                FailedState.StateName))", span="107-110"];
n97 [cluster="Hangfire.BackgroundJob.Requeue(string, string)", label="Entry Hangfire.BackgroundJob.Requeue(string, string)", span="164-164"];
n96 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", span="101-101"];
n98 [cluster="lambda expression", label="Entry lambda expression", span="107-110"];
n99 [cluster="lambda expression", label="x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<EnqueuedState>(),\r\n                FailedState.StateName)", span="107-110"];
n100 [cluster="lambda expression", label="Exit lambda expression", span="107-110"];
n101 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", label="Entry Hangfire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", span="114-114"];
n102 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", label="BackgroundJob.ClientFactory = null", span="116-116"];
n103 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", label="JobStorage.Current = new Mock<JobStorage>().Object", span="117-117"];
n104 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", label="var client = BackgroundJob.ClientFactory()", span="119-119"];
n107 [cluster="Mock<JobStorage>.cstr", label="Entry Mock<JobStorage>.cstr", span=""];
n105 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", label="Assert.NotNull(client)", span="120-120"];
n108 [cluster="System.Func<TResult>.Invoke()", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
n106 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", span="114-114"];
n109 [cluster="Unk.NotNull", label="Entry Unk.NotNull", span=""];
n110 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Initialize()", label="BackgroundJob.ClientFactory = () => _client.Object", span="125-125"];
n111 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Initialize()", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.Initialize()", span="123-123"];
n112 [cluster="lambda expression", label="Entry lambda expression", span="125-125"];
n113 [cluster="lambda expression", label="_client.Object", span="125-125"];
n114 [cluster="lambda expression", label="Exit lambda expression", span="125-125"];
n115 [cluster="Hangfire.Core.Tests.BackgroundJobFacts.Method()", label="Exit Hangfire.Core.Tests.BackgroundJobFacts.Method()", span="128-128"];
d2 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", color=green, community=0, label="_connection = new Mock<IStorageConnection>()", prediction=0, span="19-19"];
d63 [label="HangFire.Core.Tests.Server.ServerWatchdogFacts", span=""];
d1 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", label="_storage = new Mock<JobStorage>()", span="18-18"];
d3 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", color=green, community=0, label="_options = new ServerWatchdogOptions\r\n            {\r\n                CheckInterval = Timeout.InfiniteTimeSpan // To check that it exits by cancellation token\r\n            }", prediction=1, span="20-23"];
d8 [cluster="Mock<IStorageConnection>.cstr", label="Entry Mock<IStorageConnection>.cstr", span=""];
d4 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", label="_token = new CancellationToken(true)", span="24-24"];
d9 [cluster="HangFire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", label="Entry HangFire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="22-22"];
d49 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", color=green, community=0, label="_connection.Setup(x => x.RemoveTimedOutServers(It.IsAny<TimeSpan>())).Returns(1)", prediction=2, span="56-56"];
d48 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", span="54-54"];
d50 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", label="var watchdog = CreateWatchdog()", span="57-57"];
d11 [cluster="Unk.Setup", label="Entry Unk.Setup", span=""];
d12 [cluster="Unk.Returns", label="Entry Unk.Returns", span=""];
d54 [cluster="lambda expression", label="Entry lambda expression", span="56-56"];
d55 [cluster="lambda expression", color=green, community=0, label="x.RemoveTimedOutServers(It.IsAny<TimeSpan>())", prediction=3, span="56-56"];
d56 [cluster="lambda expression", label="Exit lambda expression", span="56-56"];
d20 [cluster="Unk.>", label="Entry Unk.>", span=""];
d57 [cluster="Unk.RemoveTimedOutServers", label="Entry Unk.RemoveTimedOutServers", span=""];
d5 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="26-26"];
d26 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", label="Assert.Throws<ArgumentNullException>(\r\n                () => new ServerWatchdog(_storage.Object, null))", span="38-39"];
d29 [cluster="lambda expression", label="new ServerWatchdog(_storage.Object, null)", span="39-39"];
d33 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", label="var watchdog = CreateWatchdog()", span="45-45"];
d34 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", label="watchdog.Execute(_token)", span="47-47"];
d35 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", label="_storage.Verify(x => x.GetConnection(), Times.Once)", span="49-49"];
d36 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", label="_connection.Verify(x => x.Dispose(), Times.Once)", span="50-50"];
d51 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", label="watchdog.Execute(_token)", span="59-59"];
d52 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", label="_connection.Verify(x => x.RemoveTimedOutServers(_options.ServerTimeout))", span="61-61"];
d59 [cluster="lambda expression", label="x.RemoveTimedOutServers(_options.ServerTimeout)", span="61-61"];
d61 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", label="return new ServerWatchdog(_storage.Object, _options);", span="66-66"];
d0 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", span="16-16"];
d7 [cluster="Mock<JobStorage>.cstr", label="Entry Mock<JobStorage>.cstr", span=""];
d10 [cluster="System.Threading.CancellationToken.CancellationToken(bool)", label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0"];
d53 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", span="54-54"];
d38 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", span="64-64"];
d18 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", label="Assert.Throws<ArgumentNullException>(() => new ServerWatchdog(null))", span="32-32"];
d6 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", span="16-16"];
d13 [cluster="lambda expression", label="Entry lambda expression", span="26-26"];
d25 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="36-36"];
d27 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="36-36"];
d28 [cluster="lambda expression", label="Entry lambda expression", span="39-39"];
d30 [cluster="lambda expression", label="Exit lambda expression", span="39-39"];
d31 [cluster="ServerWatchdog.cstr", label="Entry ServerWatchdog.cstr", span=""];
d32 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", span="43-43"];
d39 [cluster="HangFire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", label="Entry HangFire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", span="43-43"];
d40 [cluster="Unk.Verify", label="Entry Unk.Verify", span=""];
d41 [cluster="lambda expression", label="Entry lambda expression", span="49-49"];
d37 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", span="43-43"];
d44 [cluster="lambda expression", label="Entry lambda expression", span="50-50"];
d58 [cluster="lambda expression", label="Entry lambda expression", span="61-61"];
d60 [cluster="lambda expression", label="Exit lambda expression", span="61-61"];
d62 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", span="64-64"];
d17 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", label="Entry HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="30-30"];
d19 [cluster="HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", label="Exit HangFire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="30-30"];
d21 [cluster="lambda expression", label="Entry lambda expression", span="32-32"];
d15 [cluster="lambda expression", label="Exit lambda expression", span="26-26"];
d14 [cluster="lambda expression", label="x.GetConnection()", span="26-26"];
d43 [cluster="lambda expression", label="Exit lambda expression", span="49-49"];
d42 [cluster="lambda expression", label="x.GetConnection()", span="49-49"];
d46 [cluster="lambda expression", label="Exit lambda expression", span="50-50"];
d45 [cluster="lambda expression", label="x.Dispose()", span="50-50"];
d23 [cluster="lambda expression", label="Exit lambda expression", span="32-32"];
d22 [cluster="lambda expression", label="new ServerWatchdog(null)", span="32-32"];
d16 [cluster="Unk.GetConnection", label="Entry Unk.GetConnection", span=""];
d47 [cluster="Unk.Dispose", label="Entry Unk.Dispose", span=""];
d24 [cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="29-29"];
n116 -> n5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
n116 -> n6  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
n116 -> n13  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
n116 -> n7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
n116 -> n22  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
n116 -> n24  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
n116 -> n34  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
n116 -> n35  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
n116 -> n41  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
n116 -> n36  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
n116 -> n50  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
n116 -> n51  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
n116 -> n56  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
n116 -> n52  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
n116 -> n65  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
n116 -> n67  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
n116 -> n75  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
n116 -> n77  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
n116 -> n84  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
n116 -> n86  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
n116 -> n93  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
n116 -> n95  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
n116 -> n113  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobFacts", style=dashed];
n6 -> n12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n7 -> n16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n23 -> n27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n24 -> n30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n35 -> n40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n36 -> n43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n44 -> n46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n51 -> n55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n52 -> n58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n59 -> n61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n67 -> n70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n77 -> n80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n86 -> n89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n95 -> n98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d63 -> d49  [color=green, key=1, label="HangFire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
d63 -> d5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
d63 -> d26  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
d63 -> d29  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
d63 -> d34  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
d63 -> d35  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
d63 -> d36  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
d63 -> d51  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
d63 -> d52  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
d63 -> d59  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
d63 -> d61  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
d49 -> d54  [color=green, key=1, label="lambda expression", style=dashed];
d5 -> d13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d26 -> d28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d35 -> d41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d36 -> d44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d52 -> d58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d18 -> d21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
}
