digraph  {
n0 [label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8", cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()"];
n1 [label="Exit HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8", cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()"];
n2 [label="Entry HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="9-9", cluster="HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)"];
n3 [label="Exit HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="9-9", cluster="HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)"];
n4 [label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11", cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)"];
n5 [label="Exit HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11", cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)"];
n6 [label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17", cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
n7 [label="Exit HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17", cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)"];
n8 [label="Entry HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="23-23", cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)"];
n9 [label="Exit HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="23-23", cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)"];
n10 [label="Entry HangFire.Storage.IStorageConnection.RemoveServer(string)", span="24-24", cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)"];
n11 [label="Exit HangFire.Storage.IStorageConnection.RemoveServer(string)", span="24-24", cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)"];
n12 [label="Entry HangFire.Storage.IStorageConnection.Heartbeat(string)", span="25-25", cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)"];
n13 [label="Exit HangFire.Storage.IStorageConnection.Heartbeat(string)", span="25-25", cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)"];
n14 [label="Entry HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="26-26", cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)"];
n15 [label="Exit HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="26-26", cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)"];
m0_26 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="JobFetcher.cs"];
m0_15 [label="pipeline.QueueCommand(x => x.SetEntry(\r\n                    String.Format(''hangfire:job:{0}:fetched'', jobId),\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow)))", span="61-63", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m0_6 [label="Entry HangFire.Server.JobFetcher.DequeueJob()", span="26-26", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m0_7 [label="var queue = _queues[_currentQueueIndex]", span="28-28", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m0_8 [label="var jobId = _redis.BlockingPopAndPushItemBetweenLists(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    _fetchTimeout)", span="29-32", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m0_21 [label="return new JobPayload(jobId, queue, jobType, jobArgs);", span="87-87", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m0_9 [label="_currentQueueIndex = (_currentQueueIndex + 1) % _queues.Count", span="34-34", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m0_10 [label="String.IsNullOrEmpty(jobId)", span="36-36", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m0_16 [label="pipeline.QueueCommand(\r\n                    x => x.GetValuesFromHash(\r\n                        String.Format(''hangfire:job:{0}'', jobId),\r\n                        new[] { ''Type'', ''Args'' }),\r\n                    x => { jobType = x[0]; jobArgs = x[1]; })", span="65-69", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m0_19 [label="_logger.Warn(String.Format(\r\n                    ''Could not process the job '{0}': it does not exist in the storage.'',\r\n                    jobId))", span="80-82", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m0_11 [label="return null;", span="38-38", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m0_12 [label="string jobArgs = null", span="56-56", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m0_13 [label="string jobType = null", span="57-57", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m0_14 [label="var pipeline = _redis.CreatePipeline()", span="59-59", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m0_17 [label="pipeline.Flush()", span="71-71", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m0_18 [label="String.IsNullOrEmpty(jobType)", span="78-78", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m0_20 [label="return null;", span="84-84", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m0_22 [label="Exit HangFire.Server.JobFetcher.DequeueJob()", span="26-26", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m0_31 [label="Entry Unk.Warn", span="", cluster="Unk.Warn", file="JobFetcher.cs"];
m0_25 [label="Entry Unk.IsNullOrEmpty", span="", cluster="Unk.IsNullOrEmpty", file="JobFetcher.cs"];
m0_29 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="JobFetcher.cs"];
m0_30 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="JobFetcher.cs"];
m0_41 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="JobFetcher.cs"];
m0_5 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="JobFetcher.cs"];
m0_27 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="JobFetcher.cs"];
m0_0 [label="Entry HangFire.Server.JobFetcher.JobFetcher(IRedisClient, System.Collections.Generic.IList<string>, System.TimeSpan?)", span="17-17", cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClient, System.Collections.Generic.IList<string>, System.TimeSpan?)", file="JobFetcher.cs"];
m0_1 [label="_redis = redis", span="20-20", cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClient, System.Collections.Generic.IList<string>, System.TimeSpan?)", file="JobFetcher.cs"];
m0_2 [label="_queues = queues", span="21-21", cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClient, System.Collections.Generic.IList<string>, System.TimeSpan?)", file="JobFetcher.cs"];
m0_3 [label="_fetchTimeout = fetchTimeout ?? TimeSpan.FromSeconds(5)", span="23-23", cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClient, System.Collections.Generic.IList<string>, System.TimeSpan?)", file="JobFetcher.cs"];
m0_4 [label="Exit HangFire.Server.JobFetcher.JobFetcher(IRedisClient, System.Collections.Generic.IList<string>, System.TimeSpan?)", span="17-17", cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClient, System.Collections.Generic.IList<string>, System.TimeSpan?)", file="JobFetcher.cs"];
m0_32 [label="Entry JobPayload.cstr", span="", cluster="JobPayload.cstr", file="JobFetcher.cs"];
m0_42 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="JobFetcher.cs"];
m0_34 [label="x.SetEntry(\r\n                    String.Format(''hangfire:job:{0}:fetched'', jobId),\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="61-63", cluster="lambda expression", file="JobFetcher.cs"];
m0_39 [label="x.GetValuesFromHash(\r\n                        String.Format(''hangfire:job:{0}'', jobId),\r\n                        new[] { ''Type'', ''Args'' })", span="66-68", cluster="lambda expression", file="JobFetcher.cs"];
m0_33 [label="Entry lambda expression", span="61-63", cluster="lambda expression", file="JobFetcher.cs"];
m0_38 [label="Entry lambda expression", span="66-68", cluster="lambda expression", file="JobFetcher.cs"];
m0_35 [label="Exit lambda expression", span="61-63", cluster="lambda expression", file="JobFetcher.cs"];
m0_40 [label="Exit lambda expression", span="66-68", cluster="lambda expression", file="JobFetcher.cs"];
m0_43 [label="jobType = x[0]", span="69-69", cluster="lambda expression", file="JobFetcher.cs"];
m0_44 [label="jobArgs = x[1]", span="69-69", cluster="lambda expression", file="JobFetcher.cs"];
m0_45 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="JobFetcher.cs"];
m0_37 [label="Entry Unk.SetEntry", span="", cluster="Unk.SetEntry", file="JobFetcher.cs"];
m0_23 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="JobFetcher.cs"];
m0_28 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="JobFetcher.cs"];
m0_24 [label="Entry Unk.BlockingPopAndPushItemBetweenLists", span="", cluster="Unk.BlockingPopAndPushItemBetweenLists", file="JobFetcher.cs"];
m0_36 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobFetcher.cs"];
m0_46 [label="HangFire.Server.JobFetcher", span="", file="JobFetcher.cs"];
m0_47 [label=jobId, span="", file="JobFetcher.cs"];
m2_17 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JobServer.cs"];
m2_222 [label="Entry lambda expression", span="253-253", cluster="lambda expression", file="JobServer.cs"];
m2_223 [label="Console.WriteLine()", span="253-253", cluster="lambda expression", file="JobServer.cs"];
m2_224 [label="Exit lambda expression", span="253-253", cluster="lambda expression", file="JobServer.cs"];
m2_225 [label="Entry lambda expression", span="258-258", cluster="lambda expression", file="JobServer.cs"];
m2_230 [label="Exit lambda expression", span="266-269", cluster="lambda expression", file="JobServer.cs"];
m2_226 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>())", span="258-258", cluster="lambda expression", file="JobServer.cs"];
m2_227 [label="Exit lambda expression", span="258-258", cluster="lambda expression", file="JobServer.cs"];
m2_228 [label="Entry lambda expression", span="266-269", cluster="lambda expression", file="JobServer.cs"];
m2_229 [label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')),\r\n                _state.Object,\r\n                ''Old'')", span="266-269", cluster="lambda expression", file="JobServer.cs"];
m2_231 [label="Entry lambda expression", span="267-267", cluster="lambda expression", file="JobServer.cs"];
m2_270 [label="var process = CreateProcess()", span="299-299", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobServer.cs"];
m2_271 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="302-303", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobServer.cs"];
m2_274 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="JobServer.cs"];
m2_275 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="JobServer.cs"];
m2_276 [label="Entry lambda expression", span="296-296", cluster="lambda expression", file="JobServer.cs"];
m2_272 [label="filter.Verify(x => x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception)))", span="306-307", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobServer.cs"];
m2_273 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="289-289", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobServer.cs"];
m2_277 [label="x.Run(It.IsAny<CreateContext>())", span="296-296", cluster="lambda expression", file="JobServer.cs"];
m2_99 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", span="392-392", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", file="JobServer.cs"];
m2_45 [label="Entry lambda expression", span="46-46", cluster="lambda expression", file="JobServer.cs"];
m2_129 [label="Entry lambda expression", span="139-139", cluster="lambda expression", file="JobServer.cs"];
m2_130 [label="x.Run(It.IsAny<CreateContext>())", span="139-139", cluster="lambda expression", file="JobServer.cs", color=red, community=0];
m2_131 [label="Exit lambda expression", span="139-139", cluster="lambda expression", file="JobServer.cs"];
m2_132 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="JobServer.cs"];
m2_133 [label="process.Run(_context.Object)", span="146-146", cluster="lambda expression", file="JobServer.cs", color=red, community=0];
m2_72 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="JobServer.cs"];
m2_161 [label="var process = CreateProcess()", span="186-186", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobServer.cs", color=red, community=0];
m2_176 [label="Assert.False(result)", span="215-215", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="JobServer.cs"];
m2_177 [label="stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>()),\r\n                Times.Never)", span="216-218", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="JobServer.cs"];
m2_178 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="198-198", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="JobServer.cs"];
m2_179 [label="Entry HangFire.Storage.JobData.JobData()", span="20-20", cluster="HangFire.Storage.JobData.JobData()", file="JobServer.cs"];
m2_181 [label="x.GetJobData(''1'')", span="201-201", cluster="lambda expression", file="JobServer.cs"];
m2_184 [label="Console.WriteLine()", span="205-205", cluster="lambda expression", file="JobServer.cs"];
m2_180 [label="Entry lambda expression", span="201-201", cluster="lambda expression", file="JobServer.cs"];
m2_182 [label="Exit lambda expression", span="201-201", cluster="lambda expression", file="JobServer.cs"];
m2_183 [label="Entry lambda expression", span="205-205", cluster="lambda expression", file="JobServer.cs"];
m2_185 [label="Exit lambda expression", span="205-205", cluster="lambda expression", file="JobServer.cs"];
m2_186 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="JobServer.cs"];
m2_187 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="JobServer.cs"];
m2_315 [label="_innerProcess.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws(exception)", span="341-342", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="JobServer.cs"];
m2_320 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", span="334-334", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="JobServer.cs"];
m2_321 [label="Entry lambda expression", span="341-341", cluster="lambda expression", file="JobServer.cs"];
m2_322 [label="x.Run(It.IsAny<CreateContext>())", span="341-341", cluster="lambda expression", file="JobServer.cs"];
m2_324 [label="Entry lambda expression", span="344-344", cluster="lambda expression", file="JobServer.cs"];
m2_325 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="344-344", cluster="lambda expression", file="JobServer.cs"];
m2_316 [label="filter.Setup(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="344-345", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="JobServer.cs"];
m2_319 [label="Assert.Null(jobId)", span="353-353", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="JobServer.cs"];
m2_318 [label="var jobId = process.Run(_context.Object)", span="350-350", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="JobServer.cs"];
m2_323 [label="Exit lambda expression", span="341-341", cluster="lambda expression", file="JobServer.cs"];
m2_317 [label="var process = CreateProcess()", span="347-347", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="JobServer.cs"];
m2_326 [label="Exit lambda expression", span="344-344", cluster="lambda expression", file="JobServer.cs"];
m2_175 [label="var result = stateMachine.Object\r\n                .TryToChangeState(''1'', _state.Object, new [] { ''AnotherState'' })", span="211-212", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="JobServer.cs"];
m2_235 [label="Entry lambda expression", span="253-253", cluster="lambda expression", file="JobServer.cs"];
m2_236 [label="context.Canceled = true", span="253-253", cluster="lambda expression", file="JobServer.cs"];
m2_237 [label="Exit lambda expression", span="253-253", cluster="lambda expression", file="JobServer.cs"];
m2_238 [label="Entry lambda expression", span="261-261", cluster="lambda expression", file="JobServer.cs"];
m2_239 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Canceled))", span="261-261", cluster="lambda expression", file="JobServer.cs"];
m2_240 [label="Exit lambda expression", span="261-261", cluster="lambda expression", file="JobServer.cs"];
m2_241 [label="Entry lambda expression", span="261-261", cluster="lambda expression", file="JobServer.cs"];
m2_91 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="105-105", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobServer.cs"];
m2_92 [label="var filter = new Mock<IClientExceptionFilter>()", span="108-108", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", color=red, community=0, file="JobServer.cs"];
m2_93 [label="_filters.Add(filter.Object)", span="109-109", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", color=red, community=0, file="JobServer.cs"];
m2_97 [label="stateMachine.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job == _job),\r\n                _state.Object,\r\n                null))", span="117-120", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="JobServer.cs", color=green, community=0];
m2_94 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="111-111", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", color=red, community=0, file="JobServer.cs"];
m2_95 [label="var stateMachine = CreateStateMachineMock()", span="113-113", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", color=red, community=0, file="JobServer.cs"];
m2_96 [label="stateMachine.Object.CreateInState(_job, _parameters, _state.Object)", span="115-115", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="JobServer.cs", color=green, community=0];
m2_98 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="111-111", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="JobServer.cs"];
m2_265 [label="Exit lambda expression", span="304-304", cluster="lambda expression", file="JobServer.cs"];
m2_266 [label="Entry lambda expression", span="309-310", cluster="lambda expression", file="JobServer.cs"];
m2_267 [label="x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IApplyStateFilter>>())", span="309-310", cluster="lambda expression", file="JobServer.cs"];
m2_268 [label="Exit lambda expression", span="309-310", cluster="lambda expression", file="JobServer.cs"];
m2_269 [label="Entry Unk.ApplyState", span="", cluster="Unk.ApplyState", file="JobServer.cs"];
m2_103 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="JobServer.cs"];
m2_65 [label="var stateMachine = CreateStateMachine()", span="86-86", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="JobServer.cs", color=green, community=0];
m2_10 [label="_innerProcess.Setup(x => x.Run((_context.Object))).Returns(JobId)", span="39-39", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobServer.cs"];
m2_148 [label="Exit lambda expression", span="155-155", cluster="lambda expression", file="JobServer.cs"];
m2_144 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="JobServer.cs"];
m2_56 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="61-61", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobServer.cs"];
m2_57 [label="var process = CreateProcess()", span="63-63", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", color=green, community=0, file="JobServer.cs"];
m2_58 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(null))", span="65-66", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", color=red, community=0, file="JobServer.cs"];
m2_59 [label="Assert.Equal(''context'', exception.ParamName)", span="68-68", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", color=red, community=0, file="JobServer.cs"];
m2_60 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="61-61", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobServer.cs"];
m2_46 [label="new JobCreationProcess(null, _innerProcess.Object)", span="46-46", cluster="lambda expression", file="JobServer.cs"];
m2_48 [label="Entry JobCreationProcess.cstr", span="", cluster="JobCreationProcess.cstr", color=green, community=0, file="JobServer.cs"];
m2_47 [label="Exit lambda expression", span="46-46", cluster="lambda expression", file="JobServer.cs"];
m2_49 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenInnerProcessIsNull()", span="52-52", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenInnerProcessIsNull()", file="JobServer.cs"];
m2_50 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new JobCreationProcess(_filterProvider.Object, null))", span="54-55", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenInnerProcessIsNull()", file="JobServer.cs", color=red, community=0];
m2_35 [label="new StateMachine(null, _handlers, _filters)", span="47-47", cluster="lambda expression", file="JobServer.cs", color=green, community=0];
m2_12 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="JobServer.cs"];
m2_165 [label="Entry lambda expression", span="179-179", cluster="lambda expression", file="JobServer.cs"];
m2_200 [label="Exit lambda expression", span="225-225", cluster="lambda expression", file="JobServer.cs"];
m2_201 [label="Entry lambda expression", span="229-229", cluster="lambda expression", file="JobServer.cs"];
m2_202 [label="Console.WriteLine()", span="229-229", cluster="lambda expression", file="JobServer.cs"];
m2_203 [label="Exit lambda expression", span="229-229", cluster="lambda expression", file="JobServer.cs"];
m2_208 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>())", span="240-240", cluster="lambda expression", file="JobServer.cs"];
m2_204 [label="Entry lambda expression", span="233-233", cluster="lambda expression", file="JobServer.cs"];
m2_205 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>())", span="233-233", cluster="lambda expression", file="JobServer.cs"];
m2_206 [label="Exit lambda expression", span="233-233", cluster="lambda expression", file="JobServer.cs"];
m2_207 [label="Entry lambda expression", span="240-240", cluster="lambda expression", file="JobServer.cs"];
m2_209 [label="Exit lambda expression", span="240-240", cluster="lambda expression", file="JobServer.cs"];
m2_16 [label="Entry Mock<CreateContext>.cstr", span="", cluster="Mock<CreateContext>.cstr", file="JobServer.cs"];
m2_284 [label="Exit lambda expression", span="306-307", cluster="lambda expression", file="JobServer.cs"];
m2_242 [label="context.Canceled", span="261-261", cluster="lambda expression", file="JobServer.cs"];
m2_22 [label="Entry Mock<IJobCreationProcess>.cstr", span="", cluster="Mock<IJobCreationProcess>.cstr", file="JobServer.cs"];
m2_39 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(_connection.Object, null, _filters))", span="55-56", cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="JobServer.cs", color=green, community=0];
m2_128 [label="Exit lambda expression", span="133-133", cluster="lambda expression", file="JobServer.cs"];
m2_327 [label="Entry lambda expression", span="344-344", cluster="lambda expression", file="JobServer.cs"];
m2_137 [label="var filter = new Mock<IClientExceptionFilter>()", span="158-158", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="JobServer.cs"];
m2_139 [label="_filters.Add(filter.Object)", span="162-162", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="JobServer.cs"];
m2_140 [label="var process = CreateProcess()", span="164-164", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="JobServer.cs", color=red, community=0];
m2_141 [label="var jobId = process.Run(_context.Object)", span="167-167", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="JobServer.cs", color=red, community=0];
m2_142 [label="Assert.Null(jobId)", span="169-169", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="JobServer.cs"];
m2_138 [label="filter.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>()))\r\n                .Callback((ClientExceptionContext x) => x.ExceptionHandled = true)", span="159-160", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="JobServer.cs"];
m2_143 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", span="152-152", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="JobServer.cs"];
m2_120 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="145-146", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobServer.cs", color=red, community=0];
m2_121 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="126-126", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobServer.cs"];
m2_122 [label="Entry Unk.InSequence", span="", cluster="Unk.InSequence", file="JobServer.cs"];
m2_123 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="JobServer.cs"];
m2_124 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="132-132", cluster="lambda expression", file="JobServer.cs", color=red, community=0];
m2_190 [label="Exit lambda expression", span="204-204", cluster="lambda expression", file="JobServer.cs"];
m2_191 [label="Entry lambda expression", span="205-205", cluster="lambda expression", file="JobServer.cs"];
m2_192 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="205-205", cluster="lambda expression", file="JobServer.cs"];
m2_194 [label="Entry lambda expression", span="206-206", cluster="lambda expression", file="JobServer.cs"];
m2_195 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="206-206", cluster="lambda expression", file="JobServer.cs"];
m2_193 [label="Exit lambda expression", span="205-205", cluster="lambda expression", file="JobServer.cs"];
m2_196 [label="Exit lambda expression", span="206-206", cluster="lambda expression", file="JobServer.cs"];
m2_197 [label="Entry lambda expression", span="207-207", cluster="lambda expression", file="JobServer.cs"];
m2_152 [label="Entry lambda expression", span="160-160", cluster="lambda expression", file="JobServer.cs"];
m2_330 [label="Entry lambda expression", span="345-345", cluster="lambda expression", file="JobServer.cs"];
m2_23 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="JobServer.cs"];
m2_27 [label="Entry Unk.>", span="", cluster="Unk.>", file="JobServer.cs"];
m2_32 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="44-44", cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="JobServer.cs"];
m2_36 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="JobServer.cs"];
m2_24 [label="TestMethod()", span="25-25", cluster="lambda expression", color=red, community=0, file="JobServer.cs"];
m2_25 [label="x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<TimeSpan>())", span="37-40", cluster="lambda expression", file="JobServer.cs"];
m2_28 [label="Entry Unk.CreateExpiredJob", span="", cluster="Unk.CreateExpiredJob", file="JobServer.cs"];
m2_29 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="44-44", cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="JobServer.cs"];
m2_33 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="JobServer.cs"];
m2_34 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="JobServer.cs"];
m2_37 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.StateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.StateHandler>, System.Collections.Generic.IEnumerable<object>)", file="JobServer.cs"];
m2_38 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", span="53-53", cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="JobServer.cs"];
m2_53 [label="stateMachine.CreateInState(null, _parameters, _state.Object)", span="67-67", cluster="lambda expression", file="JobServer.cs", color=green, community=0];
m2_54 [label="new JobCreationProcess(_filterProvider.Object, null)", span="55-55", cluster="lambda expression", color=red, community=0, file="JobServer.cs"];
m2_55 [label="Entry Unk.CreateInState", span="", cluster="Unk.CreateInState", file="JobServer.cs"];
m2_63 [label="process.Run(null)", span="66-66", cluster="lambda expression", color=red, community=0, file="JobServer.cs"];
m2_62 [label="stateMachine.CreateInState(_job, null, _state.Object)", span="78-78", cluster="lambda expression", file="JobServer.cs", color=green, community=0];
m2_64 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", span="84-84", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="JobServer.cs"];
m2_73 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="95-95", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", color=red, community=0, file="JobServer.cs"];
m2_74 [label="var job = Job.FromExpression(() => Console.WriteLine(''SomeString''))", span="97-97", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="JobServer.cs"];
m2_85 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="JobServer.cs"];
m2_89 [label="process.Run(_context.Object)", span="101-101", cluster="lambda expression", color=red, community=0, file="JobServer.cs"];
m2_88 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="JobServer.cs"];
m2_86 [label="x.CreateExpiredJob(\r\n                It.Is<Job>(j => j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''),\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<TimeSpan>())", span="104-107", cluster="lambda expression", color=red, community=0, file="JobServer.cs"];
m2_87 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="JobServer.cs"];
m2_90 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="JobServer.cs"];
m2_101 [label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job == _job),\r\n                _state.Object,\r\n                null)", span="117-120", cluster="lambda expression", file="JobServer.cs", color=green, community=0];
m2_105 [label="sc.JobId == JobId && sc.Job == _job", span="118-118", cluster="lambda expression", file="JobServer.cs"];
m2_104 [label="Entry lambda expression", span="118-118", cluster="lambda expression", file="JobServer.cs"];
m2_107 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="124-124", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="JobServer.cs"];
m2_102 [label="x.Run(It.IsAny<CreateContext>())", span="111-111", cluster="lambda expression", color=red, community=0, file="JobServer.cs"];
m2_106 [label="Exit lambda expression", span="118-118", cluster="lambda expression", file="JobServer.cs"];
m2_108 [label="var stateMachine = CreateStateMachine()", span="126-126", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="JobServer.cs"];
m2_109 [label="Assert.Equal(JobId, stateMachine.CreateInState(_job, _parameters, _state.Object))", span="127-127", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="JobServer.cs"];
m2_126 [label="stateMachine.TryToChangeState(''1'', null, new[] { ''Old'' })", span="147-147", cluster="lambda expression", file="JobServer.cs"];
m2_125 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="JobServer.cs"];
m2_127 [label="Exit lambda expression", span="147-147", cluster="lambda expression", color=red, community=0, file="JobServer.cs"];
m2_134 [label="Entry lambda expression", span="158-158", cluster="lambda expression", file="JobServer.cs"];
m2_146 [label="x.AcquireJobLock(''1'')", span="167-167", cluster="lambda expression", file="JobServer.cs"];
m2_149 [label="Entry lambda expression", span="173-173", cluster="lambda expression", file="JobServer.cs"];
m2_147 [label="Exit lambda expression", span="167-167", cluster="lambda expression", color=red, community=0, file="JobServer.cs"];
m2_150 [label="x.Dispose()", span="173-173", cluster="lambda expression", file="JobServer.cs"];
m2_151 [label="Exit lambda expression", span="173-173", cluster="lambda expression", file="JobServer.cs"];
m2_153 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", span="177-177", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="JobServer.cs"];
m2_154 [label="_connection.Setup(x => x.GetJobData(It.IsAny<string>()))\r\n                .Returns((JobData)null)", span="180-181", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="JobServer.cs"];
m2_169 [label="Entry lambda expression", span="193-193", cluster="lambda expression", file="JobServer.cs"];
m2_172 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="198-198", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="JobServer.cs"];
m2_166 [label="Entry lambda expression", span="190-190", cluster="lambda expression", file="JobServer.cs"];
m2_167 [label="x.GetJobData(''1'')", span="190-190", cluster="lambda expression", file="JobServer.cs"];
m2_170 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>())", span="193-193", cluster="lambda expression", file="JobServer.cs"];
m2_171 [label="Exit lambda expression", span="193-193", cluster="lambda expression", file="JobServer.cs"];
m2_173 [label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="201-206", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="JobServer.cs"];
m2_174 [label="var stateMachine = CreateStateMachineMock()", span="208-208", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="JobServer.cs"];
m2_188 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>())", span="217-217", cluster="lambda expression", file="JobServer.cs"];
m2_189 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="JobServer.cs"];
m2_198 [label="Entry lambda expression", span="225-225", cluster="lambda expression", file="JobServer.cs"];
m2_199 [label="x.GetJobData(''1'')", span="225-225", cluster="lambda expression", file="JobServer.cs"];
m2_210 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", span="246-246", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="JobServer.cs"];
m2_213 [label="stateMachine.Setup(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>()))\r\n                .Returns(true)", span="258-259", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="JobServer.cs"];
m2_216 [label="Assert.True(result)", span="271-271", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="JobServer.cs"];
m2_219 [label="Entry lambda expression", span="249-249", cluster="lambda expression", file="JobServer.cs"];
m2_211 [label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="249-254", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="JobServer.cs"];
m2_212 [label="var stateMachine = CreateStateMachineMock()", span="256-256", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="JobServer.cs"];
m2_214 [label="var result = stateMachine.Object\r\n                .TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="262-263", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="JobServer.cs"];
m2_215 [label="stateMachine.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')),\r\n                _state.Object,\r\n                ''Old''))", span="266-269", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="JobServer.cs"];
m2_217 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", span="246-246", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="JobServer.cs"];
m2_218 [label="Entry Unk.True", span="", cluster="Unk.True", file="JobServer.cs"];
m2_220 [label="x.GetJobData(''1'')", span="249-249", cluster="lambda expression", file="JobServer.cs"];
m2_221 [label="Exit lambda expression", span="249-249", cluster="lambda expression", file="JobServer.cs"];
m2_232 [label="sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')", span="267-267", cluster="lambda expression", file="JobServer.cs"];
m2_233 [label="Exit lambda expression", span="267-267", cluster="lambda expression", file="JobServer.cs"];
m2_234 [label="Entry Unk.Equals", span="", cluster="Unk.Equals", file="JobServer.cs"];
m2_243 [label="Entry lambda expression", span="278-278", cluster="lambda expression", file="JobServer.cs"];
m2_253 [label="s.Exception != null", span="294-294", cluster="lambda expression", file="JobServer.cs"];
m2_257 [label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="304-304", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="JobServer.cs"];
m2_256 [label="var stateMachine = CreateStateMachineMock()", span="303-303", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="JobServer.cs"];
m2_259 [label="stateMachine.Verify(x => x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IApplyStateFilter>>()))", span="309-310", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="JobServer.cs"];
m2_262 [label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23", cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", file="JobServer.cs"];
m2_254 [label="Exit lambda expression", span="294-294", cluster="lambda expression", file="JobServer.cs"];
m2_255 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", span="301-301", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="JobServer.cs"];
m2_258 [label="var result = stateMachine.Object.ChangeState(\r\n                context, _state.Object, OldStateName)", span="306-307", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="JobServer.cs"];
m2_260 [label="Assert.True(result)", span="311-311", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="JobServer.cs"];
m2_261 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", span="301-301", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="JobServer.cs"];
m2_263 [label="Entry lambda expression", span="304-304", cluster="lambda expression", file="JobServer.cs"];
m2_264 [label="Console.WriteLine()", span="304-304", cluster="lambda expression", file="JobServer.cs"];
m2_283 [label="Exit lambda expression", span="322-323", cluster="lambda expression", file="JobServer.cs"];
m2_286 [label="x.ApplyState(\r\n                context, electedState.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>())", span="328-329", cluster="lambda expression", file="JobServer.cs"];
m2_280 [label="Exit lambda expression", span="318-318", cluster="lambda expression", file="JobServer.cs"];
m2_279 [label="Console.WriteLine()", span="318-318", cluster="lambda expression", file="JobServer.cs"];
m2_282 [label="x.ElectState(\r\n                    context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IElectStateFilter>>())", span="322-323", cluster="lambda expression", file="JobServer.cs"];
m2_278 [label="Entry lambda expression", span="318-318", cluster="lambda expression", file="JobServer.cs"];
m2_281 [label="Entry lambda expression", span="322-323", cluster="lambda expression", file="JobServer.cs"];
m2_285 [label="Entry lambda expression", span="328-329", cluster="lambda expression", file="JobServer.cs"];
m2_287 [label="Exit lambda expression", span="328-329", cluster="lambda expression", file="JobServer.cs"];
m2_306 [label="x.ApplyState(\r\n                context, \r\n                It.Is<FailedState>(s => s.Exception == exception), \r\n                OldStateName,\r\n                It.Is<IEnumerable<IApplyStateFilter>>(f => !f.Any()))", span="346-350", cluster="lambda expression", file="JobServer.cs"];
m2_309 [label="s.Exception == exception", span="348-348", cluster="lambda expression", file="JobServer.cs"];
m2_299 [label="Entry lambda expression", span="336-336", cluster="lambda expression", file="JobServer.cs"];
m2_303 [label="x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>())", span="339-340", cluster="lambda expression", file="JobServer.cs"];
m2_302 [label="Entry lambda expression", span="339-340", cluster="lambda expression", file="JobServer.cs"];
m2_305 [label="Entry lambda expression", span="346-350", cluster="lambda expression", file="JobServer.cs"];
m2_300 [label="Console.WriteLine()", span="336-336", cluster="lambda expression", file="JobServer.cs"];
m2_301 [label="Exit lambda expression", span="336-336", cluster="lambda expression", file="JobServer.cs"];
m2_304 [label="Exit lambda expression", span="339-340", cluster="lambda expression", file="JobServer.cs"];
m2_307 [label="Exit lambda expression", span="346-350", cluster="lambda expression", file="JobServer.cs"];
m2_308 [label="Entry lambda expression", span="348-348", cluster="lambda expression", file="JobServer.cs"];
m2_310 [label="Exit lambda expression", span="348-348", cluster="lambda expression", file="JobServer.cs"];
m2_328 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="JobServer.cs"];
m2_329 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="JobServer.cs"];
m2_331 [label="x.StateName", span="359-359", cluster="lambda expression", file="JobServer.cs"];
m2_332 [label="Exit lambda expression", span="359-359", cluster="lambda expression", file="JobServer.cs"];
m2_345 [label="Exit lambda expression", span="376-380", cluster="lambda expression", file="JobServer.cs"];
m2_348 [label="return new Mock<StateMachine>(\r\n                _connection.Object,\r\n                _handlers,\r\n                _filters)\r\n            {\r\n                CallBase = true\r\n            };", span="394-400", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", file="JobServer.cs"];
m2_351 [label="HangFire.Core.Tests.States.StateMachineFacts", span="", cluster="lambda expression", file="JobServer.cs"];
m2_355 [label=stateMachine, span="", cluster="lambda expression", file="JobServer.cs"];
m2_354 [label=stateMachine, span="", cluster="lambda expression", file="JobServer.cs"];
m2_357 [label=stateMachine, span="", cluster="lambda expression", file="JobServer.cs"];
m2_346 [label="return new StateMachine(\r\n                _connection.Object,\r\n                _handlers,\r\n                _filters);", span="386-389", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="JobServer.cs"];
m2_347 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="384-384", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="JobServer.cs"];
m2_349 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", span="392-392", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", file="JobServer.cs"];
m2_350 [label="Entry Mock<StateMachine>.cstr", span="", cluster="Mock<StateMachine>.cstr", file="JobServer.cs"];
m2_352 [label=stateMachine, span="", cluster="lambda expression", file="JobServer.cs"];
m2_353 [label=stateMachine, span="", cluster="lambda expression", file="JobServer.cs"];
m2_356 [label=stateMachine, span="", cluster="lambda expression", file="JobServer.cs"];
m2_358 [label=context, span="", cluster="lambda expression", file="JobServer.cs"];
m2_359 [label=context, span="", cluster="lambda expression", file="JobServer.cs"];
m2_360 [label=electedState, span="", cluster="lambda expression", file="JobServer.cs"];
m2_361 [label=context, span="", cluster="lambda expression", file="JobServer.cs"];
m2_362 [label=exception, span="", cluster="lambda expression", file="JobServer.cs"];
m2_70 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsInnerProcess_ToCreateAJob()", span="72-72", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsInnerProcess_ToCreateAJob()", file="JobServer.cs"];
m2_100 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="JobServer.cs"];
m2_43 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenFilterProviderIsNull()", span="43-43", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenFilterProviderIsNull()", file="JobServer.cs"];
m2_117 [label="_filters.Add(filter2.Object)", span="136-136", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobServer.cs", color=red, community=0];
m2_135 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", span="152-152", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="JobServer.cs"];
m2_340 [label="var process = CreateProcess()", span="372-372", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobServer.cs"];
m2_344 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="JobServer.cs"];
m2_163 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="173-173", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobServer.cs"];
m2_247 [label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Throws<InvalidOperationException>()", span="271-272", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobServer.cs"];
m2_116 [label="_filters.Add(filter1.Object)", span="135-135", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobServer.cs", color=red, community=0];
m2_118 [label="_innerProcess\r\n                .Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="138-140", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobServer.cs", color=red, community=0];
m2_136 [label="_innerProcess.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="155-156", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="JobServer.cs", color=red, community=0];
m2_145 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="JobServer.cs"];
m2_162 [label="process.Run(_context.Object)", span="189-189", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobServer.cs"];
m2_339 [label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>()))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="369-370", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobServer.cs"];
m2_341 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="375-375", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobServer.cs"];
m2_343 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="357-357", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobServer.cs"];
m2_164 [label="Entry Mock<IClientFilter>.cstr", span="", cluster="Mock<IClientFilter>.cstr", file="JobServer.cs"];
m2_246 [label="_filters.Add(filter.Object)", span="269-269", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobServer.cs"];
m2_248 [label="var process = CreateProcess()", span="274-274", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobServer.cs"];
m2_249 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="277-278", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobServer.cs"];
m2_252 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="265-265", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobServer.cs"];
m2_311 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", span="334-334", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="JobServer.cs"];
m2_168 [label="Entry Unk.OnCreating", span="", cluster="Unk.OnCreating", file="JobServer.cs"];
m2_245 [label="var filter = new Mock<IClientFilter>()", span="268-268", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobServer.cs"];
m2_244 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="265-265", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobServer.cs"];
m2_333 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="357-357", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobServer.cs"];
m2_336 [label="_filters.Add(outerFilter.Object)", span="363-363", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobServer.cs"];
m2_251 [label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="285-285", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobServer.cs"];
m2_250 [label="_innerProcess.Verify(\r\n                x => x.Run(It.IsAny<CreateContext>()), \r\n                Times.Never)", span="281-283", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobServer.cs"];
m2_313 [label="_filters.Add(filter.Object)", span="338-338", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="JobServer.cs"];
m2_312 [label="var filter = new Mock<IClientFilter>()", span="337-337", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="JobServer.cs"];
m2_335 [label="var innerFilter = new Mock<IClientFilter>()", span="361-361", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobServer.cs"];
m2_334 [label="var outerFilter = new Mock<IClientFilter>()", span="360-360", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobServer.cs"];
m2_338 [label="_innerProcess.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="366-367", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobServer.cs"];
m2_337 [label="_filters.Add(innerFilter.Object)", span="364-364", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobServer.cs"];
m2_80 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JobServer.cs"];
m2_81 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", color=red, community=0, file="JobServer.cs"];
m2_82 [label="var process = CreateProcess()", span="99-99", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobServer.cs"];
m2_83 [label="Assert.Throws<InvalidOperationException>(() => process.Run(_context.Object))", span="101-101", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", color=red, community=0, file="JobServer.cs"];
m2_84 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="94-94", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobServer.cs"];
m2_8 [label="_filterProvider.Setup(x => x.GetFilters(It.IsNotNull<Job>())).Returns(\r\n                _filters.Select(f => new JobFilter(f, JobFilterScope.Type, null)))", span="35-36", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobServer.cs"];
m2_21 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="JobServer.cs"];
m2_30 [label="Entry Unk.>", span="", cluster="Unk.>", color=green, community=0, file="JobServer.cs"];
m2_31 [label="Entry Unk.GetFilters", span="", cluster="Unk.GetFilters", color=green, community=0, file="JobServer.cs"];
m2_66 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsInnerProcess_ToCreateAJob()", span="72-72", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsInnerProcess_ToCreateAJob()", file="JobServer.cs"];
m2_67 [label="var process = CreateProcess()", span="74-74", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsInnerProcess_ToCreateAJob()", color=red, community=0, file="JobServer.cs"];
m2_68 [label="process.Run(_context.Object)", span="76-76", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsInnerProcess_ToCreateAJob()", file="JobServer.cs", color=red, community=0];
m2_14 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="187-187", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobServer.cs"];
m2_15 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="JobServer.cs"];
m2_314 [label="var exception = new InvalidOperationException()", span="340-340", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="JobServer.cs"];
m2_26 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="381-381", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="JobServer.cs"];
m2_363 [label=context, span="", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="JobServer.cs"];
m2_342 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null)))", span="378-378", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobServer.cs"];
m2_44 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="JobServer.cs"];
m2_75 [label="_parameters.Add(''Name'', ''Value'')", span="98-98", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="JobServer.cs"];
m2_76 [label="var stateMachine = CreateStateMachine()", span="100-100", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", color=green, community=0, file="JobServer.cs"];
m2_77 [label="stateMachine.CreateInState(job, _parameters, _state.Object)", span="102-102", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", color=red, community=0, file="JobServer.cs"];
m2_78 [label="_connection.Verify(x => x.CreateExpiredJob(\r\n                It.Is<Job>(j => j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''),\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<TimeSpan>()))", span="104-107", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", color=red, community=0, file="JobServer.cs"];
m2_79 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="95-95", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="JobServer.cs"];
m2_155 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="173-173", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobServer.cs"];
m2_156 [label="var filter = new Mock<IClientFilter>()", span="176-176", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobServer.cs"];
m2_158 [label="filter.Setup(x => x.OnCreating(It.IsNotNull<CreatingContext>())).InSequence()", span="179-179", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobServer.cs"];
m2_159 [label="_innerProcess.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .InSequence()", span="181-182", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobServer.cs"];
m2_157 [label="_filters.Add(filter.Object)", span="177-177", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobServer.cs"];
m2_160 [label="filter.Setup(x => x.OnCreated(It.IsNotNull<CreatedContext>())).InSequence()", span="184-184", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobServer.cs"];
m2_111 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="126-126", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobServer.cs"];
m2_112 [label="var filter1 = new Mock<IClientExceptionFilter>()", span="129-129", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobServer.cs"];
m2_113 [label="var filter2 = new Mock<IClientExceptionFilter>()", span="130-130", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobServer.cs", color=red, community=0];
m2_114 [label="filter2.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="132-132", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobServer.cs", color=red, community=0];
m2_115 [label="filter1.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="133-133", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobServer.cs", color=red, community=0];
m2_288 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="311-311", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobServer.cs"];
m2_289 [label="var outerFilter = new Mock<IClientFilter>()", span="314-314", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobServer.cs"];
m2_292 [label="_filters.Add(innerFilter.Object)", span="318-318", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobServer.cs"];
m2_293 [label="var exception = new InvalidOperationException()", span="320-320", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobServer.cs"];
m2_294 [label="_innerProcess.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws(exception)", span="321-322", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobServer.cs"];
m2_290 [label="var innerFilter = new Mock<IClientFilter>()", span="315-315", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobServer.cs"];
m2_291 [label="_filters.Add(outerFilter.Object)", span="317-317", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobServer.cs"];
m2_295 [label="var process = CreateProcess()", span="324-324", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobServer.cs"];
m2_296 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="327-328", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobServer.cs"];
m2_297 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))", span="330-330", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobServer.cs"];
m2_0 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="28-28", cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobServer.cs"];
m2_1 [label="_job = Job.FromExpression(() => Console.WriteLine(''Hello''))", span="30-30", cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobServer.cs"];
m2_2 [label="_parameters = new Dictionary<string, string>()", span="31-31", cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobServer.cs"];
m2_5 [label="_connection.Setup(x => x.CreateWriteTransaction())\r\n                .Returns(_transaction.Object)", span="35-36", cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobServer.cs"];
m2_3 [label="_state = new Mock<State>()", span="32-32", cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", color=red, community=0, file="JobServer.cs"];
m2_4 [label="_state.Setup(x => x.Name).Returns(StateName)", span="33-33", cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", color=red, community=0, file="JobServer.cs"];
m2_6 [label="_connection.Setup(x => x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<TimeSpan>())).Returns(JobId)", span="37-40", cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobServer.cs"];
m2_7 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="28-28", cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobServer.cs"];
m2_9 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobServer.cs"];
m2_11 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="JobServer.cs"];
m2_19 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="JobServer.cs"];
m2_51 [label="Assert.Equal(''innerProcess'', exception.ParamName)", span="57-57", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenInnerProcessIsNull()", file="JobServer.cs", color=red, community=0];
m2_69 [label="_innerProcess.Verify(\r\n                x => x.Run(_context.Object), \r\n                Times.Once)", span="78-80", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsInnerProcess_ToCreateAJob()", color=red, community=0, file="JobServer.cs"];
m2_71 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="JobServer.cs"];
m2_110 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="124-124", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="JobServer.cs"];
m2_52 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenInnerProcessIsNull()", span="52-52", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenInnerProcessIsNull()", file="JobServer.cs"];
m2_40 [label="Assert.Equal(''handlers'', exception.ParamName)", span="58-58", cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="JobServer.cs"];
m2_41 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", span="53-53", cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="JobServer.cs"];
m2_42 [label="Assert.Equal(''filterProvider'', exception.ParamName)", span="48-48", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenFilterProviderIsNull()", file="JobServer.cs"];
m2_61 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="385-385", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobServer.cs"];
m2_364 [label="return new JobCreationProcess(_filterProvider.Object, _innerProcess.Object);", span="387-387", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobServer.cs"];
m2_365 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="385-385", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobServer.cs"];
m2_298 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="JobServer.cs"];
m2_18 [label="Entry Mock<IJobFilterProvider>.cstr", span="", cluster="Mock<IJobFilterProvider>.cstr", file="JobServer.cs"];
m2_119 [label="Entry Unk.TryToChangeState", span="", cluster="Unk.TryToChangeState", color=red, community=0, file="JobServer.cs"];
m2_20 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JobServer.cs"];
m2_13 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="JobServer.cs"];
m2_366 [label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", span="", file="JobServer.cs"];
m2_367 [label=process, span="", file="JobServer.cs"];
m2_368 [label=process, span="", file="JobServer.cs"];
m2_369 [label=process, span="", file="JobServer.cs"];
m2_370 [label=process, span="", file="JobServer.cs"];
m2_371 [label=process, span="", file="JobServer.cs"];
m2_372 [label=process, span="", file="JobServer.cs"];
m2_373 [label=exception, span="", file="JobServer.cs"];
m2_374 [label=process, span="", file="JobServer.cs"];
m2_375 [label=exception, span="", file="JobServer.cs"];
m2_376 [label=exception, span="", file="JobServer.cs"];
m2_377 [label=process, span="", file="JobServer.cs"];
m3_73 [label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="45-45", cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="Program.cs"];
m3_63 [label="Entry HangFire.RetryJobsFilter.RetryJobsFilter()", span="6-6", cluster="HangFire.RetryJobsFilter.RetryJobsFilter()", file="Program.cs"];
m3_20 [label="Entry ConsoleSample.RecurringJob.Perform()", span="48-48", cluster="ConsoleSample.RecurringJob.Perform()", file="Program.cs"];
m3_21 [label="Console.WriteLine(''Performing recurring task...'')", span="50-50", cluster="ConsoleSample.RecurringJob.Perform()", file="Program.cs"];
m3_22 [label="Exit ConsoleSample.RecurringJob.Perform()", span="48-48", cluster="ConsoleSample.RecurringJob.Perform()", file="Program.cs"];
m3_23 [label="Entry ConsoleSample.Program.Main()", span="56-56", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_24 [label="int concurrency = Environment.ProcessorCount * 20", span="58-58", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_25 [label="LogManager.LogFactory = new ConsoleLogFactory()", span="59-59", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_31 [label="var server = new BackgroundJobServer(''qqq'') { WorkersCount = concurrency}", span="68-68", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_26 [label="RedisFactory.Port = 6379", span="61-61", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_27 [label="RedisFactory.Db = 3", span="62-62", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_28 [label="GlobalJobFilters.Filters.Add(new HistoryStatisticsFilter())", span="64-64", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_29 [label="GlobalJobFilters.Filters.Add(new RetryJobsFilter())", span="65-65", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_30 [label="GlobalJobFilters.Filters.Add(new RecurringJobsFilter())", span="66-66", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_32 [label="server.Start()", span="70-70", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_33 [label="Console.WriteLine(''HangFire Server has been started. Press Ctrl+C to exit...'')", span="72-72", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_34 [label="var count = 1", span="74-74", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_35 [label=true, span="76-76", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_42 [label="Perform.Async<ConsoleJob>(new { Number = count++ })", span="92-92", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_55 [label="Perform.In<ConsoleJob>(TimeSpan.FromSeconds(seconds), new { Number = count++ })", span="114-114", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_36 [label="var command = Console.ReadLine()", span="78-78", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_37 [label="command == null || command.Equals(''stop'', StringComparison.OrdinalIgnoreCase)", span="80-80", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_38 [label="command.StartsWith(''add'', StringComparison.OrdinalIgnoreCase)", span="85-85", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_39 [label="var workCount = int.Parse(command.Substring(4))", span="89-89", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_47 [label="command.StartsWith(''error'', StringComparison.OrdinalIgnoreCase)", span="102-102", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_48 [label="var workCount = int.Parse(command.Substring(6))", span="104-104", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_53 [label="command.StartsWith(''in'', StringComparison.OrdinalIgnoreCase)", span="111-111", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_54 [label="var seconds = int.Parse(command.Substring(2))", span="113-113", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_56 [label="command.StartsWith(''recurring'', StringComparison.OrdinalIgnoreCase)", span="117-117", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_40 [label="var i = 0", span="90-90", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_41 [label="i < workCount", span="90-90", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_43 [label="i++", span="90-90", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_44 [label="Console.WriteLine(''Jobs enqueued.'')", span="94-94", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_45 [label=Exception, span="96-96", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_46 [label="Console.WriteLine(ex.Message)", span="98-98", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_49 [label="var i = 0", span="105-105", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_50 [label="i < workCount", span="105-105", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_52 [label="i++", span="105-105", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_51 [label="Perform.Async<ErrorJob>(new { ArticleId = 2, Product = ''Casio Privia PX-850'' })", span="107-107", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_57 [label="Perform.Async<RecurringJob>()", span="119-119", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_58 [label="Console.WriteLine(''Recurring job added'')", span="120-120", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_59 [label="Exit ConsoleSample.Program.Main()", span="56-56", cluster="ConsoleSample.Program.Main()", file="Program.cs"];
m3_10 [label="Entry System.Exception.Exception()", span="0-0", cluster="System.Exception.Exception()", file="Program.cs"];
m3_74 [label="Entry HangFire.Perform.Async<TJob>()", span="11-11", cluster="HangFire.Perform.Async<TJob>()", file="Program.cs"];
m3_72 [label="Entry HangFire.Perform.Async<TJob>(object)", span="18-18", cluster="HangFire.Perform.Async<TJob>(object)", file="Program.cs"];
m3_19 [label="Entry System.IO.FileLoadException.FileLoadException()", span="0-0", cluster="System.IO.FileLoadException.FileLoadException()", file="Program.cs"];
m3_71 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="Program.cs"];
m3_11 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="Program.cs"];
m3_65 [label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", span="14-14", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", file="Program.cs"];
m3_61 [label="Entry HangFire.HistoryStatisticsFilter.HistoryStatisticsFilter()", span="6-6", cluster="HangFire.HistoryStatisticsFilter.HistoryStatisticsFilter()", file="Program.cs"];
m3_0 [label="Entry ConsoleSample.ConsoleJob.Perform()", span="17-17", cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs"];
m3_1 [label="int time", span="19-19", cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs"];
m3_2 [label=_random, span="20-20", cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs"];
m3_3 [label="time = _random.Next(10)", span="22-22", cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs"];
m3_4 [label="time < 5", span="25-25", cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs"];
m3_6 [label="Thread.Sleep(TimeSpan.FromSeconds(5 + time))", span="30-30", cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs"];
m3_5 [label="throw new Exception();", span="27-27", cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs"];
m3_7 [label="Console.WriteLine(''Finished task: '' + Number)", span="31-31", cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs"];
m3_8 [label="Exit ConsoleSample.ConsoleJob.Perform()", span="17-17", cluster="ConsoleSample.ConsoleJob.Perform()", file="Program.cs"];
m3_12 [label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0", cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="Program.cs"];
m3_69 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="Program.cs"];
m3_18 [label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="Program.cs"];
m3_64 [label="Entry HangFire.RecurringJobsFilter.RecurringJobsFilter()", span="18-18", cluster="HangFire.RecurringJobsFilter.RecurringJobsFilter()", file="Program.cs"];
m3_67 [label="Entry System.Console.ReadLine()", span="0-0", cluster="System.Console.ReadLine()", file="Program.cs"];
m3_9 [label="Entry System.Random.Next(int)", span="0-0", cluster="System.Random.Next(int)", file="Program.cs"];
m3_68 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="Program.cs"];
m3_66 [label="Entry HangFire.BackgroundJobServer.Start()", span="51-51", cluster="HangFire.BackgroundJobServer.Start()", file="Program.cs"];
m3_62 [label="Entry HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", span="17-17", cluster="HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", file="Program.cs"];
m3_13 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="Program.cs"];
m3_14 [label="Entry ConsoleSample.ErrorJob.Perform()", span="38-38", cluster="ConsoleSample.ErrorJob.Perform()", file="Program.cs"];
m3_15 [label="Console.WriteLine(''Beginning error task...'')", span="40-40", cluster="ConsoleSample.ErrorJob.Perform()", file="Program.cs"];
m3_16 [label="throw new InvalidOperationException(null, new FileLoadException());", span="41-41", cluster="ConsoleSample.ErrorJob.Perform()", file="Program.cs"];
m3_17 [label="Exit ConsoleSample.ErrorJob.Perform()", span="38-38", cluster="ConsoleSample.ErrorJob.Perform()", file="Program.cs"];
m3_60 [label="Entry ConsoleLogFactory.cstr", span="", cluster="ConsoleLogFactory.cstr", file="Program.cs"];
m3_70 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="Program.cs"];
m3_75 [label="ConsoleSample.ConsoleJob", span="", file="Program.cs"];
m4_2 [label="Entry HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="11-11", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ServerContext.cs"];
m4_3 [label="ServerName = serverName", span="18-18", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ServerContext.cs", color=green, community=0];
m4_4 [label="Queues = queues", span="19-19", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ServerContext.cs"];
m4_5 [label="WorkersCount = workersCount", span="20-20", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ServerContext.cs"];
m4_6 [label="Activator = activator", span="21-21", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ServerContext.cs"];
m4_0 [label="Entry HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", span="6-6", cluster="HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", file="ServerContext.cs"];
m4_1 [label="Exit HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", span="6-6", cluster="HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", file="ServerContext.cs"];
m4_7 [label="HangFire.Server.ServerContext", span="", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ServerContext.cs"];
m4_8 [label="Exit HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="11-11", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ServerContext.cs"];
m4_9 [label="HangFire.Server.ServerContext", span="", file="ServerContext.cs"];
m5_2 [label="Entry HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int)", span="11-11", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int)", file="Worker.cs"];
m5_3 [label="ServerName = serverName", span="13-13", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int)", file="Worker.cs"];
m5_4 [label="Queues = queues", span="14-14", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int)", file="Worker.cs"];
m5_5 [label="WorkersCount = workersCount", span="15-15", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int)", file="Worker.cs"];
m5_6 [label="Exit HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int)", span="11-11", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int)", file="Worker.cs"];
m5_0 [label="Entry HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", span="6-6", cluster="HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", file="Worker.cs"];
m5_1 [label="Exit HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", span="6-6", cluster="HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", file="Worker.cs"];
m5_7 [label="HangFire.Server.ServerContext", span="", file="Worker.cs"];
m6_0 [label="Entry Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateChangeContext)", span="25-25", cluster="Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateChangeContext)", file="WorkerPool.cs"];
m6_1 [label="Exit Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateChangeContext)", span="25-25", cluster="Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateChangeContext)", file="WorkerPool.cs"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
n2 -> n3  [key=0, style=solid];
n3 -> n2  [key=0, style=bold, color=blue];
n4 -> n5  [key=0, style=solid];
n5 -> n4  [key=0, style=bold, color=blue];
n6 -> n7  [key=0, style=solid];
n7 -> n6  [key=0, style=bold, color=blue];
n8 -> n9  [key=0, style=solid];
n9 -> n8  [key=0, style=bold, color=blue];
n10 -> n11  [key=0, style=solid];
n11 -> n10  [key=0, style=bold, color=blue];
n12 -> n13  [key=0, style=solid];
n13 -> n12  [key=0, style=bold, color=blue];
n14 -> n15  [key=0, style=solid];
n15 -> n14  [key=0, style=bold, color=blue];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_27  [key=2, style=dotted];
m0_15 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_11  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Server.JobPayload DequeueJob"];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label=queue];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_23  [key=2, style=dotted];
m0_8 -> m0_24  [key=2, style=dotted];
m0_8 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m0_8 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m0_8 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m0_8 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m0_8 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m0_8 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m0_8 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_32  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [key=0, style=solid];
m0_10 -> m0_25  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_27  [key=2, style=dotted];
m0_16 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_16 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_16 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label=jobType];
m0_16 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label=jobArgs];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_30  [key=2, style=dotted];
m0_19 -> m0_31  [key=2, style=dotted];
m0_11 -> m0_22  [key=0, style=solid];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_11  [key=3, color=darkorchid, style=bold, label="Local variable string jobArgs"];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_11  [key=3, color=darkorchid, style=bold, label="Local variable string jobType"];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_26  [key=2, style=dotted];
m0_14 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m0_14 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_28  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_21  [key=0, style=solid];
m0_18 -> m0_29  [key=2, style=dotted];
m0_20 -> m0_22  [key=0, style=solid];
m0_22 -> m0_6  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [key=2, style=dotted];
m0_4 -> m0_0  [key=0, style=bold, color=blue];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="?"];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_30  [key=2, style=dotted];
m0_34 -> m0_36  [key=2, style=dotted];
m0_34 -> m0_37  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_30  [key=2, style=dotted];
m0_39 -> m0_41  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_35 -> m0_33  [key=0, style=bold, color=blue];
m0_40 -> m0_38  [key=0, style=bold, color=blue];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label=jobType];
m0_44 -> m0_45  [key=0, style=solid];
m0_45 -> m0_42  [key=0, style=bold, color=blue];
m0_46 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobFetcher"];
m0_46 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobFetcher"];
m0_46 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobFetcher"];
m0_46 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobFetcher"];
m0_46 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobFetcher"];
m0_46 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobFetcher"];
m0_46 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobFetcher"];
m0_46 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobFetcher"];
m0_47 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m0_47 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m2_222 -> m2_223  [key=0, style=solid];
m2_223 -> m2_224  [key=0, style=solid];
m2_223 -> m2_164  [key=2, style=dotted];
m2_223 -> m2_225  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m2_223 -> m2_230  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m2_223 -> m2_186  [key=2, style=dotted];
m2_224 -> m2_225  [key=0, style=solid];
m2_224 -> m2_164  [key=2, style=dotted];
m2_224 -> m2_226  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m2_224 -> m2_227  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m2_224 -> m2_222  [key=0, style=bold, color=blue];
m2_225 -> m2_226  [key=0, style=solid];
m2_225 -> m2_100  [key=2, style=dotted];
m2_230 -> m2_231  [key=0, style=solid];
m2_230 -> m2_71  [key=2, style=dotted];
m2_230 -> m2_238  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_230 -> m2_228  [key=0, style=bold, color=blue];
m2_226 -> m2_227  [key=0, style=solid];
m2_226 -> m2_100  [key=2, style=dotted];
m2_226 -> m2_27  [key=2, style=dotted];
m2_226 -> m2_103  [key=2, style=dotted];
m2_227 -> m2_228  [key=0, style=solid];
m2_227 -> m2_19  [key=2, style=dotted];
m2_227 -> m2_144  [key=2, style=dotted];
m2_227 -> m2_232  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_227 -> m2_235  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_227 -> m2_225  [key=0, style=bold, color=blue];
m2_228 -> m2_229  [key=0, style=solid];
m2_228 -> m2_61  [key=2, style=dotted];
m2_229 -> m2_230  [key=0, style=solid];
m2_229 -> m2_39  [key=2, style=dotted];
m2_229 -> m2_27  [key=2, style=dotted];
m2_229 -> m2_103  [key=2, style=dotted];
m2_229 -> m2_231  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_231 -> m2_222  [key=0, style=bold, color=blue];
m2_231 -> m2_232  [key=0, style=solid];
m2_270 -> m2_271  [key=0, style=solid];
m2_270 -> m2_61  [key=2, style=dotted];
m2_270 -> m2_280  [key=1, style=dashed, color=darkseagreen4, label=process];
m2_271 -> m2_272  [key=0, style=solid];
m2_271 -> m2_99  [key=2, style=dotted];
m2_271 -> m2_274  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m2_271 -> m2_275  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m2_271 -> m2_276  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m2_271 -> m2_30  [key=2, style=dotted];
m2_271 -> m2_279  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_274 -> m2_275  [key=0, style=solid];
m2_274 -> m2_11  [key=2, style=dotted];
m2_274 -> m2_12  [key=2, style=dotted];
m2_274 -> m2_281  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_275 -> m2_103  [key=2, style=dotted];
m2_275 -> m2_276  [key=0, style=solid];
m2_276 -> m2_81  [key=2, style=dotted];
m2_276 -> m2_277  [key=0, style=solid];
m2_276 -> m2_285  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_272 -> m2_274  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_272 -> m2_282  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_272 -> m2_275  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_272 -> m2_286  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_272 -> m2_276  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_272 -> m2_8  [key=2, style=dotted];
m2_272 -> m2_273  [key=0, style=solid];
m2_272 -> m2_262  [key=2, style=dotted];
m2_272 -> m2_278  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_272 -> m2_71  [key=2, style=dotted];
m2_273 -> m2_274  [key=0, style=solid];
m2_273 -> m2_286  [key=1, style=dashed, color=darkseagreen4, label=electedState];
m2_273 -> m2_276  [key=1, style=dashed, color=darkseagreen4, label=electedState];
m2_273 -> m2_10  [key=2, style=dotted];
m2_273 -> m2_265  [key=0, style=bold, color=blue];
m2_277 -> m2_270  [key=0, style=bold, color=blue];
m2_277 -> m2_278  [key=0, style=solid];
m2_277 -> m2_30  [key=2, style=dotted];
m2_277 -> m2_39  [key=2, style=dotted];
m2_99 -> m2_348  [key=0, style=solid];
m2_45 -> m2_46  [key=0, style=solid];
m2_129 -> m2_130  [key=0, style=solid, color=red];
m2_129 -> m2_86  [key=0, style=solid];
m2_130 -> m2_51  [key=2, style=dotted];
m2_130 -> m2_131  [key=0, style=solid, color=red];
m2_130 -> m2_135  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m2_130 -> m2_30  [key=2, style=dotted, color=red];
m2_130 -> m2_39  [key=2, style=dotted, color=red];
m2_131 -> m2_27  [key=2, style=dotted];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_131 -> m2_129  [key=0, style=bold, color=blue];
m2_132 -> m2_33  [key=2, style=dotted];
m2_132 -> m2_133  [key=0, style=solid, color=red];
m2_133 -> m2_129  [key=0, style=bold, color=blue];
m2_133 -> m2_134  [key=0, style=solid, color=red];
m2_133 -> m2_39  [key=2, style=dotted, color=red];
m2_72 -> m2_73  [key=0, style=solid, color=red];
m2_72 -> m2_25  [key=0, style=solid];
m2_161 -> m2_162  [key=0, style=solid, color=red];
m2_161 -> m2_61  [key=2, style=dotted, color=red];
m2_176 -> m2_177  [key=0, style=solid];
m2_176 -> m2_161  [key=2, style=dotted];
m2_177 -> m2_178  [key=0, style=solid];
m2_177 -> m2_164  [key=2, style=dotted];
m2_177 -> m2_179  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m2_177 -> m2_181  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m2_177 -> m2_184  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m2_177 -> m2_81  [key=2, style=dotted];
m2_177 -> m2_187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_178 -> m2_179  [key=0, style=solid];
m2_178 -> m2_164  [key=2, style=dotted];
m2_178 -> m2_180  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m2_178 -> m2_182  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m2_178 -> m2_183  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m2_178 -> m2_172  [key=0, style=bold, color=blue];
m2_179 -> m2_180  [key=0, style=solid];
m2_179 -> m2_100  [key=2, style=dotted];
m2_181 -> m2_182  [key=0, style=solid];
m2_181 -> m2_19  [key=2, style=dotted];
m2_181 -> m2_122  [key=2, style=dotted];
m2_181 -> m2_188  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_181 -> m2_165  [key=2, style=dotted];
m2_184 -> m2_185  [key=0, style=solid];
m2_184 -> m2_19  [key=2, style=dotted];
m2_184 -> m2_122  [key=2, style=dotted];
m2_184 -> m2_197  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_184 -> m2_186  [key=2, style=dotted];
m2_180 -> m2_181  [key=0, style=solid];
m2_180 -> m2_100  [key=2, style=dotted];
m2_182 -> m2_183  [key=0, style=solid];
m2_182 -> m2_19  [key=2, style=dotted];
m2_182 -> m2_122  [key=2, style=dotted];
m2_182 -> m2_191  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_182 -> m2_180  [key=0, style=bold, color=blue];
m2_183 -> m2_184  [key=0, style=solid];
m2_183 -> m2_19  [key=2, style=dotted];
m2_183 -> m2_122  [key=2, style=dotted];
m2_183 -> m2_194  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_185 -> m2_186  [key=0, style=solid];
m2_185 -> m2_61  [key=2, style=dotted];
m2_185 -> m2_183  [key=0, style=bold, color=blue];
m2_186 -> m2_187  [key=0, style=solid];
m2_186 -> m2_39  [key=2, style=dotted];
m2_187 -> m2_176  [key=0, style=bold, color=blue];
m2_187 -> m2_188  [key=0, style=solid];
m2_315 -> m2_316  [key=0, style=solid];
m2_315 -> m2_19  [key=2, style=dotted];
m2_315 -> m2_275  [key=2, style=dotted];
m2_315 -> m2_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_320 -> m2_321  [key=0, style=solid];
m2_320 -> m2_328  [key=2, style=dotted];
m2_320 -> m2_311  [key=0, style=bold, color=blue];
m2_321 -> m2_322  [key=0, style=solid];
m2_321 -> m2_328  [key=2, style=dotted];
m2_322 -> m2_51  [key=2, style=dotted];
m2_322 -> m2_323  [key=0, style=solid];
m2_322 -> m2_324  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m2_322 -> m2_30  [key=2, style=dotted];
m2_322 -> m2_39  [key=2, style=dotted];
m2_324 -> m2_325  [key=0, style=solid];
m2_324 -> m2_329  [key=2, style=dotted];
m2_324 -> m2_269  [key=2, style=dotted];
m2_325 -> m2_81  [key=2, style=dotted];
m2_325 -> m2_326  [key=0, style=solid];
m2_325 -> m2_339  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_325 -> m2_30  [key=2, style=dotted];
m2_325 -> m2_175  [key=2, style=dotted];
m2_325 -> m2_327  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_316 -> m2_320  [key=1, style=dashed, color=darkseagreen4, label=handler1];
m2_316 -> m2_325  [key=1, style=dashed, color=darkseagreen4, label=handler1];
m2_316 -> m2_317  [key=0, style=solid];
m2_316 -> m2_327  [key=2, style=dotted];
m2_316 -> m2_19  [key=2, style=dotted];
m2_316 -> m2_144  [key=2, style=dotted];
m2_316 -> m2_324  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_316 -> m2_330  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_319 -> m2_320  [key=0, style=solid];
m2_319 -> m2_11  [key=2, style=dotted];
m2_319 -> m2_12  [key=2, style=dotted];
m2_319 -> m2_333  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_319 -> m2_145  [key=2, style=dotted];
m2_318 -> m2_321  [key=1, style=dashed, color=darkseagreen4, label=handler2];
m2_318 -> m2_319  [key=0, style=solid];
m2_318 -> m2_327  [key=2, style=dotted];
m2_318 -> m2_39  [key=2, style=dotted];
m2_323 -> m2_324  [key=0, style=solid];
m2_323 -> m2_325  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_323 -> m2_340  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_323 -> m2_344  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_323 -> m2_8  [key=2, style=dotted];
m2_323 -> m2_262  [key=2, style=dotted];
m2_323 -> m2_336  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_323 -> m2_321  [key=0, style=bold, color=blue];
m2_317 -> m2_11  [key=2, style=dotted];
m2_317 -> m2_12  [key=2, style=dotted];
m2_317 -> m2_318  [key=0, style=solid];
m2_317 -> m2_330  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_317 -> m2_61  [key=2, style=dotted];
m2_326 -> m2_315  [key=0, style=bold, color=blue];
m2_326 -> m2_324  [key=0, style=bold, color=blue];
m2_175 -> m2_176  [key=0, style=solid];
m2_175 -> m2_119  [key=2, style=dotted];
m2_235 -> m2_236  [key=0, style=solid];
m2_236 -> m2_237  [key=0, style=solid];
m2_236 -> m2_11  [key=2, style=dotted];
m2_236 -> m2_179  [key=2, style=dotted];
m2_236 -> m2_242  [key=2, style=dotted];
m2_236 -> m2_12  [key=2, style=dotted];
m2_236 -> m2_243  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_237 -> m2_238  [key=0, style=solid];
m2_237 -> m2_99  [key=2, style=dotted];
m2_237 -> m2_239  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m2_237 -> m2_235  [key=0, style=bold, color=blue];
m2_238 -> m2_239  [key=0, style=solid];
m2_238 -> m2_119  [key=2, style=dotted];
m2_238 -> m2_240  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_239 -> m2_81  [key=2, style=dotted];
m2_239 -> m2_240  [key=0, style=solid];
m2_239 -> m2_246  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_239 -> m2_30  [key=2, style=dotted];
m2_239 -> m2_175  [key=2, style=dotted];
m2_239 -> m2_241  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_240 -> m2_241  [key=0, style=solid];
m2_240 -> m2_161  [key=2, style=dotted];
m2_240 -> m2_238  [key=0, style=bold, color=blue];
m2_241 -> m2_235  [key=0, style=bold, color=blue];
m2_241 -> m2_242  [key=0, style=solid];
m2_91 -> m2_92  [key=0, style=solid, color=red];
m2_92 -> m2_93  [key=0, style=solid, color=red];
m2_92 -> m2_99  [key=2, style=dotted, color=red];
m2_92 -> m2_97  [key=1, style=dashed, color=red, label=filter];
m2_93 -> m2_94  [key=0, style=solid, color=red];
m2_93 -> m2_100  [key=2, style=dotted, color=red];
m2_97 -> m2_98  [key=0, style=solid, color=green];
m2_97 -> m2_71  [key=2, style=dotted];
m2_97 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_97 -> m2_81  [key=2, style=dotted, color=green];
m2_97 -> m2_100  [key=1, style=dashed, color=green, label="lambda expression"];
m2_94 -> m2_95  [key=0, style=solid, color=red];
m2_94 -> m2_19  [key=2, style=dotted, color=red];
m2_94 -> m2_30  [key=2, style=dotted, color=red];
m2_94 -> m2_101  [key=1, style=dashed, color=red, label="lambda expression"];
m2_95 -> m2_96  [key=0, style=solid, color=green];
m2_95 -> m2_61  [key=2, style=dotted, color=red];
m2_95 -> m2_105  [key=1, style=dashed, color=red, label=process];
m2_95 -> m2_97  [key=1, style=dashed, color=green, label=stateMachine];
m2_95 -> m2_99  [key=2, style=dotted];
m2_96 -> m2_97  [key=0, style=solid, color=green];
m2_96 -> m2_30  [key=2, style=dotted];
m2_96 -> m2_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_96 -> m2_55  [key=2, style=dotted, color=green];
m2_98 -> m2_91  [key=0, style=bold, color=blue];
m2_98 -> m2_94  [key=0, style=bold, color=blue];
m2_265 -> m2_266  [key=0, style=solid];
m2_265 -> m2_263  [key=0, style=bold, color=blue];
m2_266 -> m2_267  [key=0, style=solid];
m2_266 -> m2_164  [key=2, style=dotted];
m2_266 -> m2_272  [key=1, style=dashed, color=darkseagreen4, label=filter];
m2_267 -> m2_268  [key=0, style=solid];
m2_267 -> m2_100  [key=2, style=dotted];
m2_267 -> m2_27  [key=2, style=dotted];
m2_267 -> m2_269  [key=2, style=dotted];
m2_268 -> m2_269  [key=0, style=solid];
m2_268 -> m2_274  [key=2, style=dotted];
m2_268 -> m2_272  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_268 -> m2_283  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_268 -> m2_286  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_268 -> m2_266  [key=0, style=bold, color=blue];
m2_269 -> m2_270  [key=0, style=solid];
m2_269 -> m2_19  [key=2, style=dotted];
m2_269 -> m2_275  [key=2, style=dotted];
m2_269 -> m2_276  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_103 -> m2_101  [key=0, style=bold, color=blue];
m2_65 -> m2_66  [key=0, style=solid, color=green];
m2_65 -> m2_51  [key=2, style=dotted, color=green];
m2_65 -> m2_70  [key=1, style=dashed, color=green, label=stateMachine];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_19  [key=2, style=dotted];
m2_10 -> m2_21  [key=2, style=dotted];
m2_10 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_148 -> m2_146  [key=0, style=bold, color=blue];
m2_56 -> m2_57  [key=0, style=solid, color=green];
m2_57 -> m2_58  [key=0, style=solid, color=red];
m2_57 -> m2_51  [key=2, style=dotted, color=green];
m2_57 -> m2_62  [key=1, style=dashed, color=green, label=stateMachine];
m2_57 -> m2_61  [key=2, style=dotted];
m2_57 -> m2_63  [key=1, style=dashed, color=red, label=process];
m2_58 -> m2_59  [key=0, style=solid, color=red];
m2_58 -> m2_27  [key=2, style=dotted, color=green];
m2_58 -> m2_101  [key=1, style=dashed, color=green, label="lambda expression"];
m2_58 -> m2_30  [key=2, style=dotted, color=red];
m2_58 -> m2_62  [key=1, style=dashed, color=red, label="lambda expression"];
m2_59 -> m2_60  [key=0, style=solid, color=red];
m2_59 -> m2_33  [key=2, style=dotted, color=green];
m2_59 -> m2_44  [key=2, style=dotted, color=red];
m2_60 -> m2_56  [key=0, style=bold, color=blue];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_48  [key=2, style=dotted];
m2_48 -> m2_49  [key=0, style=solid, color=green];
m2_48 -> m2_27  [key=2, style=dotted, color=green];
m2_48 -> m2_88  [key=1, style=dashed, color=green, label="lambda expression"];
m2_47 -> m2_48  [key=0, style=solid, color=green];
m2_47 -> m2_53  [key=1, style=dashed, color=green, label=stateMachine];
m2_47 -> m2_51  [key=2, style=dotted];
m2_47 -> m2_45  [key=0, style=bold, color=blue];
m2_49 -> m2_33  [key=2, style=dotted];
m2_49 -> m2_50  [key=0, style=solid, color=red];
m2_50 -> m2_46  [key=0, style=bold, color=blue];
m2_50 -> m2_51  [key=0, style=solid, color=red];
m2_50 -> m2_30  [key=2, style=dotted, color=red];
m2_50 -> m2_53  [key=1, style=dashed, color=red, label="lambda expression"];
m2_35 -> m2_38  [key=0, style=solid, color=green];
m2_35 -> m2_37  [key=2, style=dotted, color=green];
m2_165 -> m2_166  [key=0, style=solid];
m2_200 -> m2_201  [key=0, style=solid];
m2_200 -> m2_198  [key=0, style=bold, color=blue];
m2_201 -> m2_202  [key=0, style=solid];
m2_201 -> m2_164  [key=2, style=dotted];
m2_201 -> m2_203  [key=1, style=dashed, color=darkseagreen4, label=filter];
m2_201 -> m2_208  [key=1, style=dashed, color=darkseagreen4, label=filter];
m2_202 -> m2_203  [key=0, style=solid];
m2_202 -> m2_100  [key=2, style=dotted];
m2_202 -> m2_186  [key=2, style=dotted];
m2_203 -> m2_204  [key=0, style=solid];
m2_203 -> m2_19  [key=2, style=dotted];
m2_203 -> m2_144  [key=2, style=dotted];
m2_203 -> m2_210  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_203 -> m2_213  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_203 -> m2_201  [key=0, style=bold, color=blue];
m2_208 -> m2_209  [key=0, style=solid];
m2_208 -> m2_71  [key=2, style=dotted];
m2_208 -> m2_219  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_208 -> m2_27  [key=2, style=dotted];
m2_208 -> m2_103  [key=2, style=dotted];
m2_204 -> m2_205  [key=0, style=solid];
m2_204 -> m2_61  [key=2, style=dotted];
m2_205 -> m2_206  [key=0, style=solid];
m2_205 -> m2_39  [key=2, style=dotted];
m2_205 -> m2_27  [key=2, style=dotted];
m2_205 -> m2_103  [key=2, style=dotted];
m2_206 -> m2_207  [key=0, style=solid];
m2_206 -> m2_145  [key=2, style=dotted];
m2_206 -> m2_204  [key=0, style=bold, color=blue];
m2_207 -> m2_208  [key=0, style=solid];
m2_207 -> m2_71  [key=2, style=dotted];
m2_207 -> m2_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_209 -> m2_200  [key=0, style=bold, color=blue];
m2_209 -> m2_207  [key=0, style=bold, color=blue];
m2_284 -> m2_282  [key=0, style=bold, color=blue];
m2_242 -> m2_243  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid, color=green];
m2_39 -> m2_27  [key=2, style=dotted, color=green];
m2_39 -> m2_85  [key=1, style=dashed, color=green, label="lambda expression"];
m2_128 -> m2_126  [key=0, style=bold, color=blue];
m2_327 -> m2_328  [key=0, style=solid];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_99  [key=2, style=dotted];
m2_137 -> m2_139  [key=1, style=dashed, color=darkseagreen4, label=filter];
m2_139 -> m2_140  [key=0, style=solid, color=red];
m2_139 -> m2_11  [key=2, style=dotted];
m2_139 -> m2_12  [key=2, style=dotted];
m2_139 -> m2_145  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_139 -> m2_100  [key=2, style=dotted];
m2_140 -> m2_51  [key=2, style=dotted];
m2_140 -> m2_141  [key=0, style=solid, color=red];
m2_140 -> m2_61  [key=2, style=dotted, color=red];
m2_141 -> m2_142  [key=0, style=solid, color=red];
m2_141 -> m2_119  [key=2, style=dotted];
m2_141 -> m2_39  [key=2, style=dotted, color=red];
m2_142 -> m2_81  [key=2, style=dotted];
m2_142 -> m2_143  [key=0, style=solid];
m2_142 -> m2_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_142 -> m2_145  [key=2, style=dotted];
m2_138 -> m2_139  [key=0, style=solid];
m2_138 -> m2_142  [key=1, style=dashed, color=darkseagreen4, label=disposableMock];
m2_138 -> m2_144  [key=2, style=dotted];
m2_138 -> m2_19  [key=2, style=dotted];
m2_138 -> m2_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_138 -> m2_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_143 -> m2_137  [key=0, style=bold, color=blue];
m2_143 -> m2_135  [key=0, style=bold, color=blue];
m2_120 -> m2_121  [key=0, style=solid, color=red];
m2_120 -> m2_30  [key=2, style=dotted, color=red];
m2_120 -> m2_132  [key=1, style=dashed, color=red, label="lambda expression"];
m2_121 -> m2_51  [key=2, style=dotted];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m2_121 -> m2_111  [key=0, style=bold, color=blue];
m2_122 -> m2_27  [key=2, style=dotted];
m2_122 -> m2_123  [key=0, style=solid];
m2_122 -> m2_125  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_123 -> m2_33  [key=2, style=dotted];
m2_123 -> m2_124  [key=0, style=solid, color=red];
m2_123 -> m2_70  [key=0, style=solid];
m2_124 -> m2_120  [key=0, style=bold, color=blue];
m2_124 -> m2_125  [key=0, style=solid, color=red];
m2_124 -> m2_30  [key=2, style=dotted, color=red];
m2_124 -> m2_110  [key=2, style=dotted, color=red];
m2_190 -> m2_191  [key=0, style=solid];
m2_190 -> m2_188  [key=0, style=bold, color=blue];
m2_191 -> m2_192  [key=0, style=solid];
m2_191 -> m2_11  [key=2, style=dotted];
m2_191 -> m2_179  [key=2, style=dotted];
m2_191 -> m2_8  [key=2, style=dotted];
m2_191 -> m2_12  [key=2, style=dotted];
m2_191 -> m2_198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_191 -> m2_201  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_192 -> m2_193  [key=0, style=solid];
m2_192 -> m2_99  [key=2, style=dotted];
m2_192 -> m2_194  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m2_192 -> m2_195  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m2_192 -> m2_30  [key=2, style=dotted];
m2_192 -> m2_168  [key=2, style=dotted];
m2_194 -> m2_195  [key=0, style=solid];
m2_194 -> m2_119  [key=2, style=dotted];
m2_194 -> m2_196  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_195 -> m2_81  [key=2, style=dotted];
m2_195 -> m2_196  [key=0, style=solid];
m2_195 -> m2_207  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_195 -> m2_30  [key=2, style=dotted];
m2_195 -> m2_175  [key=2, style=dotted];
m2_193 -> m2_194  [key=0, style=solid];
m2_193 -> m2_11  [key=2, style=dotted];
m2_193 -> m2_12  [key=2, style=dotted];
m2_193 -> m2_204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_193 -> m2_191  [key=0, style=bold, color=blue];
m2_196 -> m2_197  [key=0, style=solid];
m2_196 -> m2_161  [key=2, style=dotted];
m2_196 -> m2_194  [key=0, style=bold, color=blue];
m2_197 -> m2_190  [key=0, style=bold, color=blue];
m2_197 -> m2_198  [key=0, style=solid];
m2_152 -> m2_153  [key=0, style=solid];
m2_330 -> m2_331  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid, color=red];
m2_27 -> m2_28  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_35  [key=0, style=solid, color=green];
m2_32 -> m2_29  [key=0, style=bold, color=blue];
m2_36 -> m2_37  [key=0, style=solid];
m2_24 -> m2_25  [key=0, style=solid, color=red];
m2_24 -> m2_26  [key=2, style=dotted, color=red];
m2_25 -> m2_23  [key=0, style=bold, color=blue];
m2_25 -> m2_27  [key=2, style=dotted];
m2_25 -> m2_74  [key=0, style=solid];
m2_25 -> m2_28  [key=2, style=dotted];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_30  [key=2, style=dotted];
m2_28 -> m2_31  [key=2, style=dotted];
m2_29 -> m2_27  [key=0, style=bold, color=blue];
m2_29 -> m2_30  [key=0, style=solid, color=green];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_35  [key=2, style=dotted];
m2_34 -> m2_32  [key=0, style=bold, color=blue];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_39  [key=2, style=dotted];
m2_38 -> m2_36  [key=0, style=bold, color=blue];
m2_38 -> m2_32  [key=0, style=bold, color=green];
m2_38 -> m2_39  [key=0, style=solid, color=green];
m2_53 -> m2_54  [key=0, style=solid, color=red];
m2_53 -> m2_90  [key=0, style=solid, color=green];
m2_53 -> m2_55  [key=2, style=dotted, color=green];
m2_54 -> m2_55  [key=0, style=solid, color=red];
m2_54 -> m2_48  [key=2, style=dotted, color=red];
m2_55 -> m2_53  [key=0, style=bold, color=blue];
m2_63 -> m2_64  [key=0, style=solid, color=red];
m2_63 -> m2_65  [key=2, style=dotted, color=red];
m2_62 -> m2_63  [key=0, style=solid, color=red];
m2_62 -> m2_103  [key=0, style=solid, color=green];
m2_62 -> m2_55  [key=2, style=dotted, color=green];
m2_64 -> m2_62  [key=0, style=bold, color=blue];
m2_64 -> m2_65  [key=0, style=solid, color=green];
m2_73 -> m2_74  [key=0, style=solid, color=red];
m2_73 -> m2_39  [key=2, style=dotted, color=red];
m2_74 -> m2_72  [key=0, style=bold, color=blue];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label=job];
m2_74 -> m2_8  [key=2, style=dotted];
m2_74 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_85 -> m2_86  [key=0, style=solid, color=red];
m2_85 -> m2_43  [key=0, style=solid];
m2_89 -> m2_90  [key=0, style=solid, color=red];
m2_89 -> m2_39  [key=2, style=dotted, color=red];
m2_88 -> m2_89  [key=0, style=solid, color=red];
m2_88 -> m2_53  [key=0, style=solid, color=green];
m2_86 -> m2_87  [key=0, style=solid, color=red];
m2_86 -> m2_30  [key=2, style=dotted, color=red];
m2_86 -> m2_39  [key=2, style=dotted, color=red];
m2_86 -> m2_27  [key=2, style=dotted];
m2_86 -> m2_131  [key=0, style=solid];
m2_86 -> m2_28  [key=2, style=dotted];
m2_86 -> m2_132  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_86 -> m2_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_87 -> m2_85  [key=0, style=bold, color=blue];
m2_90 -> m2_88  [key=0, style=bold, color=blue];
m2_101 -> m2_102  [key=0, style=solid, color=red];
m2_101 -> m2_62  [key=0, style=solid, color=green];
m2_101 -> m2_329  [key=0, style=solid, color=green];
m2_101 -> m2_27  [key=2, style=dotted, color=green];
m2_101 -> m2_103  [key=2, style=dotted, color=green];
m2_101 -> m2_104  [key=1, style=dashed, color=green, label="lambda expression"];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_39  [key=2, style=dotted];
m2_104 -> m2_105  [key=0, style=solid];
m2_107 -> m2_108  [key=0, style=solid];
m2_102 -> m2_103  [key=0, style=solid, color=red];
m2_102 -> m2_30  [key=2, style=dotted, color=red];
m2_102 -> m2_39  [key=2, style=dotted, color=red];
m2_106 -> m2_104  [key=0, style=bold, color=blue];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_30  [key=2, style=dotted];
m2_108 -> m2_110  [key=2, style=dotted];
m2_108 -> m2_51  [key=2, style=dotted];
m2_109 -> m2_107  [key=0, style=bold, color=blue];
m2_109 -> m2_33  [key=2, style=dotted];
m2_109 -> m2_55  [key=2, style=dotted];
m2_109 -> m2_110  [key=0, style=solid];
m2_126 -> m2_127  [key=0, style=solid, color=red];
m2_126 -> m2_128  [key=2, style=dotted];
m2_125 -> m2_123  [key=0, style=bold, color=blue];
m2_125 -> m2_126  [key=0, style=solid];
m2_127 -> m2_128  [key=0, style=solid, color=red];
m2_127 -> m2_30  [key=2, style=dotted, color=red];
m2_127 -> m2_110  [key=2, style=dotted, color=red];
m2_127 -> m2_125  [key=0, style=bold, color=blue];
m2_134 -> m2_132  [key=0, style=bold, color=blue];
m2_134 -> m2_135  [key=0, style=solid];
m2_146 -> m2_147  [key=0, style=solid, color=red];
m2_146 -> m2_148  [key=2, style=dotted];
m2_149 -> m2_150  [key=0, style=solid];
m2_147 -> m2_148  [key=0, style=solid, color=red];
m2_147 -> m2_30  [key=2, style=dotted, color=red];
m2_147 -> m2_39  [key=2, style=dotted, color=red];
m2_147 -> m2_145  [key=0, style=bold, color=blue];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_30  [key=2, style=dotted];
m2_150 -> m2_110  [key=2, style=dotted];
m2_150 -> m2_152  [key=2, style=dotted];
m2_151 -> m2_149  [key=0, style=bold, color=blue];
m2_153 -> m2_154  [key=0, style=solid];
m2_154 -> m2_152  [key=0, style=bold, color=blue];
m2_154 -> m2_155  [key=0, style=solid];
m2_154 -> m2_11  [key=2, style=dotted];
m2_154 -> m2_12  [key=2, style=dotted];
m2_154 -> m2_162  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_169 -> m2_170  [key=0, style=solid];
m2_172 -> m2_173  [key=0, style=solid];
m2_166 -> m2_167  [key=0, style=solid];
m2_166 -> m2_30  [key=2, style=dotted];
m2_166 -> m2_168  [key=2, style=dotted];
m2_167 -> m2_165  [key=0, style=bold, color=blue];
m2_167 -> m2_168  [key=0, style=solid];
m2_170 -> m2_171  [key=0, style=solid];
m2_170 -> m2_30  [key=2, style=dotted];
m2_170 -> m2_39  [key=2, style=dotted];
m2_170 -> m2_27  [key=2, style=dotted];
m2_170 -> m2_103  [key=2, style=dotted];
m2_171 -> m2_169  [key=0, style=bold, color=blue];
m2_173 -> m2_174  [key=0, style=solid];
m2_173 -> m2_30  [key=2, style=dotted];
m2_173 -> m2_175  [key=2, style=dotted];
m2_173 -> m2_11  [key=2, style=dotted];
m2_173 -> m2_179  [key=2, style=dotted];
m2_173 -> m2_8  [key=2, style=dotted];
m2_173 -> m2_12  [key=2, style=dotted];
m2_173 -> m2_180  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_173 -> m2_183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_174 -> m2_172  [key=0, style=bold, color=blue];
m2_174 -> m2_175  [key=0, style=solid];
m2_174 -> m2_99  [key=2, style=dotted];
m2_174 -> m2_177  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m2_188 -> m2_189  [key=0, style=solid];
m2_188 -> m2_27  [key=2, style=dotted];
m2_188 -> m2_103  [key=2, style=dotted];
m2_189 -> m2_190  [key=0, style=solid];
m2_189 -> m2_30  [key=2, style=dotted];
m2_189 -> m2_168  [key=2, style=dotted];
m2_189 -> m2_187  [key=0, style=bold, color=blue];
m2_198 -> m2_199  [key=0, style=solid];
m2_198 -> m2_30  [key=2, style=dotted];
m2_198 -> m2_175  [key=2, style=dotted];
m2_199 -> m2_197  [key=0, style=bold, color=blue];
m2_199 -> m2_165  [key=2, style=dotted];
m2_199 -> m2_200  [key=0, style=solid];
m2_210 -> m2_211  [key=0, style=solid];
m2_213 -> m2_214  [key=0, style=solid];
m2_213 -> m2_11  [key=2, style=dotted];
m2_213 -> m2_12  [key=2, style=dotted];
m2_213 -> m2_225  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_216 -> m2_217  [key=0, style=solid];
m2_216 -> m2_218  [key=2, style=dotted];
m2_219 -> m2_220  [key=0, style=solid];
m2_211 -> m2_212  [key=0, style=solid];
m2_211 -> m2_30  [key=2, style=dotted];
m2_211 -> m2_168  [key=2, style=dotted];
m2_211 -> m2_11  [key=2, style=dotted];
m2_211 -> m2_179  [key=2, style=dotted];
m2_211 -> m2_8  [key=2, style=dotted];
m2_211 -> m2_12  [key=2, style=dotted];
m2_211 -> m2_219  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_211 -> m2_222  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_212 -> m2_210  [key=0, style=bold, color=blue];
m2_212 -> m2_213  [key=0, style=solid];
m2_212 -> m2_99  [key=2, style=dotted];
m2_212 -> m2_214  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m2_212 -> m2_215  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m2_214 -> m2_215  [key=0, style=solid];
m2_214 -> m2_119  [key=2, style=dotted];
m2_214 -> m2_216  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_215 -> m2_213  [key=0, style=bold, color=blue];
m2_215 -> m2_81  [key=2, style=dotted];
m2_215 -> m2_216  [key=0, style=solid];
m2_215 -> m2_228  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_217 -> m2_218  [key=0, style=solid];
m2_217 -> m2_30  [key=2, style=dotted];
m2_217 -> m2_39  [key=2, style=dotted];
m2_217 -> m2_210  [key=0, style=bold, color=blue];
m2_218 -> m2_216  [key=0, style=bold, color=blue];
m2_220 -> m2_221  [key=0, style=solid];
m2_220 -> m2_30  [key=2, style=dotted];
m2_220 -> m2_175  [key=2, style=dotted];
m2_220 -> m2_165  [key=2, style=dotted];
m2_221 -> m2_219  [key=0, style=bold, color=blue];
m2_232 -> m2_233  [key=0, style=solid];
m2_232 -> m2_234  [key=2, style=dotted];
m2_233 -> m2_234  [key=0, style=solid];
m2_233 -> m2_30  [key=2, style=dotted];
m2_233 -> m2_168  [key=2, style=dotted];
m2_233 -> m2_231  [key=0, style=bold, color=blue];
m2_234 -> m2_232  [key=0, style=bold, color=blue];
m2_243 -> m2_241  [key=0, style=bold, color=blue];
m2_243 -> m2_244  [key=0, style=solid];
m2_253 -> m2_254  [key=0, style=solid];
m2_257 -> m2_258  [key=0, style=solid];
m2_257 -> m2_39  [key=2, style=dotted];
m2_257 -> m2_259  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_257 -> m2_267  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_257 -> m2_8  [key=2, style=dotted];
m2_257 -> m2_262  [key=2, style=dotted];
m2_257 -> m2_263  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_256 -> m2_257  [key=0, style=solid];
m2_256 -> m2_99  [key=2, style=dotted];
m2_256 -> m2_258  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m2_256 -> m2_259  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m2_259 -> m2_260  [key=0, style=solid];
m2_259 -> m2_81  [key=2, style=dotted];
m2_259 -> m2_266  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_262 -> m2_263  [key=0, style=solid];
m2_262 -> m2_262  [key=3, color=darkorchid, style=bold, label="Field variable string StateName"];
m2_254 -> m2_255  [key=0, style=solid];
m2_254 -> m2_30  [key=2, style=dotted];
m2_254 -> m2_168  [key=2, style=dotted];
m2_254 -> m2_252  [key=0, style=bold, color=blue];
m2_255 -> m2_253  [key=0, style=bold, color=blue];
m2_255 -> m2_256  [key=0, style=solid];
m2_258 -> m2_256  [key=0, style=bold, color=blue];
m2_258 -> m2_103  [key=2, style=dotted];
m2_258 -> m2_259  [key=0, style=solid];
m2_258 -> m2_260  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_260 -> m2_261  [key=0, style=solid];
m2_260 -> m2_30  [key=2, style=dotted];
m2_260 -> m2_39  [key=2, style=dotted];
m2_260 -> m2_218  [key=2, style=dotted];
m2_261 -> m2_259  [key=0, style=bold, color=blue];
m2_261 -> m2_255  [key=0, style=bold, color=blue];
m2_263 -> m2_264  [key=0, style=solid];
m2_263 -> m2_30  [key=2, style=dotted];
m2_263 -> m2_175  [key=2, style=dotted];
m2_264 -> m2_262  [key=0, style=bold, color=blue];
m2_264 -> m2_186  [key=2, style=dotted];
m2_264 -> m2_265  [key=0, style=solid];
m2_283 -> m2_284  [key=0, style=solid];
m2_283 -> m2_30  [key=2, style=dotted];
m2_283 -> m2_175  [key=2, style=dotted];
m2_283 -> m2_285  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_283 -> m2_281  [key=0, style=bold, color=blue];
m2_286 -> m2_287  [key=0, style=solid];
m2_286 -> m2_27  [key=2, style=dotted];
m2_286 -> m2_269  [key=2, style=dotted];
m2_280 -> m2_281  [key=0, style=solid];
m2_280 -> m2_39  [key=2, style=dotted];
m2_280 -> m2_278  [key=0, style=bold, color=blue];
m2_279 -> m2_280  [key=0, style=solid];
m2_279 -> m2_186  [key=2, style=dotted];
m2_282 -> m2_283  [key=0, style=solid];
m2_282 -> m2_27  [key=2, style=dotted];
m2_282 -> m2_284  [key=2, style=dotted];
m2_278 -> m2_276  [key=0, style=bold, color=blue];
m2_278 -> m2_279  [key=0, style=solid];
m2_281 -> m2_279  [key=0, style=bold, color=blue];
m2_281 -> m2_282  [key=0, style=solid];
m2_285 -> m2_286  [key=0, style=solid];
m2_287 -> m2_285  [key=0, style=bold, color=blue];
m2_306 -> m2_307  [key=0, style=solid];
m2_306 -> m2_30  [key=2, style=dotted];
m2_306 -> m2_175  [key=2, style=dotted];
m2_306 -> m2_308  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_306 -> m2_27  [key=2, style=dotted];
m2_306 -> m2_269  [key=2, style=dotted];
m2_306 -> m2_311  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_309 -> m2_310  [key=0, style=solid];
m2_299 -> m2_300  [key=0, style=solid];
m2_303 -> m2_304  [key=0, style=solid];
m2_303 -> m2_39  [key=2, style=dotted];
m2_303 -> m2_27  [key=2, style=dotted];
m2_303 -> m2_269  [key=2, style=dotted];
m2_302 -> m2_303  [key=0, style=solid];
m2_305 -> m2_306  [key=0, style=solid];
m2_300 -> m2_301  [key=0, style=solid];
m2_300 -> m2_30  [key=2, style=dotted];
m2_300 -> m2_39  [key=2, style=dotted];
m2_300 -> m2_186  [key=2, style=dotted];
m2_301 -> m2_299  [key=0, style=bold, color=blue];
m2_304 -> m2_302  [key=0, style=bold, color=blue];
m2_307 -> m2_305  [key=0, style=bold, color=blue];
m2_308 -> m2_309  [key=0, style=solid];
m2_310 -> m2_308  [key=0, style=bold, color=blue];
m2_328 -> m2_329  [key=0, style=solid];
m2_329 -> m2_327  [key=0, style=bold, color=blue];
m2_329 -> m2_100  [key=0, style=bold, color=blue];
m2_331 -> m2_332  [key=0, style=solid];
m2_332 -> m2_330  [key=0, style=bold, color=blue];
m2_345 -> m2_346  [key=0, style=solid];
m2_345 -> m2_343  [key=0, style=bold, color=blue];
m2_348 -> m2_349  [key=0, style=solid];
m2_348 -> m2_350  [key=2, style=dotted];
m2_351 -> m2_352  [key=0, style=solid];
m2_351 -> m2_30  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_35  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_39  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_48  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_53  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_57  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_58  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_62  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_65  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_76  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_96  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_97  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_101  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_130  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_131  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_135  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_139  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_140  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_141  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_154  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_155  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_156  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_158  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_173  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_174  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_175  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_191  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_192  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_194  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_211  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_212  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_214  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_215  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_229  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_236  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_237  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_238  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_256  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_258  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_259  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_267  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_271  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_274  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_282  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_275  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_289  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_292  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_303  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_293  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_320  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_321  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_322  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_324  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_325  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_340  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_344  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_346  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_351 -> m2_348  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m2_355 -> m2_356  [key=0, style=solid];
m2_355 -> m2_39  [key=2, style=dotted];
m2_355 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m2_354 -> m2_355  [key=0, style=solid];
m2_354 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m2_357 -> m2_358  [key=0, style=solid];
m2_357 -> m2_135  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m2_346 -> m2_347  [key=0, style=solid];
m2_346 -> m2_30  [key=2, style=dotted];
m2_346 -> m2_39  [key=2, style=dotted];
m2_346 -> m2_45  [key=2, style=dotted];
m2_347 -> m2_345  [key=0, style=bold, color=blue];
m2_347 -> m2_51  [key=0, style=bold, color=blue];
m2_349 -> m2_350  [key=0, style=solid];
m2_349 -> m2_30  [key=2, style=dotted];
m2_349 -> m2_175  [key=2, style=dotted];
m2_349 -> m2_99  [key=0, style=bold, color=blue];
m2_350 -> m2_348  [key=0, style=bold, color=blue];
m2_352 -> m2_353  [key=0, style=solid];
m2_352 -> m2_53  [key=1, style=dashed, color=green, label=stateMachine];
m2_353 -> m2_351  [key=0, style=bold, color=blue];
m2_353 -> m2_62  [key=1, style=dashed, color=green, label=stateMachine];
m2_356 -> m2_354  [key=0, style=bold, color=blue];
m2_356 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m2_358 -> m2_359  [key=0, style=solid];
m2_358 -> m2_30  [key=2, style=dotted];
m2_358 -> m2_175  [key=2, style=dotted];
m2_358 -> m2_360  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_358 -> m2_267  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_359 -> m2_357  [key=0, style=bold, color=blue];
m2_359 -> m2_282  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_359 -> m2_286  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_360 -> m2_361  [key=0, style=solid];
m2_360 -> m2_286  [key=1, style=dashed, color=darkseagreen4, label=electedState];
m2_361 -> m2_362  [key=0, style=solid];
m2_361 -> m2_303  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_361 -> m2_306  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_362 -> m2_360  [key=0, style=bold, color=blue];
m2_362 -> m2_306  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_362 -> m2_309  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_70 -> m2_125  [key=0, style=solid];
m2_70 -> m2_72  [key=2, style=dotted];
m2_70 -> m2_66  [key=0, style=bold, color=blue];
m2_100 -> m2_101  [key=0, style=solid, color=green];
m2_43 -> m2_87  [key=0, style=solid];
m2_43 -> m2_45  [key=2, style=dotted];
m2_43 -> m2_40  [key=0, style=bold, color=blue];
m2_117 -> m2_118  [key=0, style=solid, color=red];
m2_117 -> m2_119  [key=2, style=dotted];
m2_117 -> m2_100  [key=2, style=dotted, color=red];
m2_135 -> m2_136  [key=0, style=solid, color=red];
m2_135 -> m2_119  [key=2, style=dotted];
m2_340 -> m2_27  [key=2, style=dotted];
m2_340 -> m2_341  [key=0, style=solid];
m2_340 -> m2_342  [key=2, style=dotted];
m2_340 -> m2_343  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_340 -> m2_61  [key=2, style=dotted];
m2_340 -> m2_355  [key=1, style=dashed, color=darkseagreen4, label=process];
m2_344 -> m2_345  [key=0, style=solid];
m2_163 -> m2_27  [key=2, style=dotted];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> m2_165  [key=2, style=dotted];
m2_163 -> m2_155  [key=0, style=bold, color=blue];
m2_247 -> m2_27  [key=2, style=dotted];
m2_247 -> m2_103  [key=2, style=dotted];
m2_247 -> m2_248  [key=0, style=solid];
m2_247 -> m2_249  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_247 -> m2_252  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_247 -> m2_19  [key=2, style=dotted];
m2_247 -> m2_30  [key=2, style=dotted];
m2_247 -> m2_253  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_116 -> m2_117  [key=0, style=solid, color=red];
m2_116 -> m2_100  [key=2, style=dotted, color=red];
m2_118 -> m2_116  [key=0, style=bold, color=blue];
m2_118 -> m2_119  [key=0, style=solid, color=red];
m2_118 -> m2_19  [key=2, style=dotted, color=red];
m2_118 -> m2_30  [key=2, style=dotted, color=red];
m2_118 -> m2_129  [key=1, style=dashed, color=red, label="lambda expression"];
m2_136 -> m2_134  [key=0, style=bold, color=blue];
m2_136 -> m2_137  [key=0, style=solid, color=red];
m2_136 -> m2_19  [key=2, style=dotted, color=red];
m2_136 -> m2_30  [key=2, style=dotted, color=red];
m2_136 -> m2_146  [key=1, style=dashed, color=red, label="lambda expression"];
m2_145 -> m2_146  [key=0, style=solid];
m2_162 -> m2_163  [key=0, style=solid];
m2_162 -> m2_39  [key=2, style=dotted];
m2_339 -> m2_340  [key=0, style=solid];
m2_339 -> m2_19  [key=2, style=dotted];
m2_339 -> m2_144  [key=2, style=dotted];
m2_339 -> m2_348  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_339 -> m2_351  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_341 -> m2_339  [key=0, style=bold, color=blue];
m2_341 -> m2_342  [key=0, style=solid];
m2_341 -> m2_344  [key=2, style=dotted];
m2_341 -> m2_354  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_343 -> m2_344  [key=0, style=solid];
m2_343 -> m2_333  [key=0, style=bold, color=blue];
m2_164 -> m2_162  [key=0, style=bold, color=blue];
m2_246 -> m2_247  [key=0, style=solid];
m2_246 -> m2_100  [key=2, style=dotted];
m2_248 -> m2_246  [key=0, style=bold, color=blue];
m2_248 -> m2_249  [key=0, style=solid];
m2_248 -> m2_61  [key=2, style=dotted];
m2_248 -> m2_257  [key=1, style=dashed, color=darkseagreen4, label=process];
m2_249 -> m2_250  [key=0, style=solid];
m2_249 -> m2_30  [key=2, style=dotted];
m2_249 -> m2_256  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_252 -> m2_253  [key=0, style=solid];
m2_252 -> m2_244  [key=0, style=bold, color=blue];
m2_311 -> m2_312  [key=0, style=solid];
m2_168 -> m2_166  [key=0, style=bold, color=blue];
m2_245 -> m2_243  [key=0, style=bold, color=blue];
m2_245 -> m2_246  [key=0, style=solid];
m2_245 -> m2_164  [key=2, style=dotted];
m2_245 -> m2_247  [key=1, style=dashed, color=darkseagreen4, label=filter];
m2_245 -> m2_251  [key=1, style=dashed, color=darkseagreen4, label=filter];
m2_244 -> m2_165  [key=2, style=dotted];
m2_244 -> m2_245  [key=0, style=solid];
m2_333 -> m2_334  [key=0, style=solid];
m2_336 -> m2_337  [key=0, style=solid];
m2_336 -> m2_100  [key=2, style=dotted];
m2_251 -> m2_249  [key=0, style=bold, color=blue];
m2_251 -> m2_252  [key=0, style=solid];
m2_251 -> m2_71  [key=2, style=dotted];
m2_251 -> m2_262  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_250 -> m2_251  [key=0, style=solid];
m2_250 -> m2_71  [key=2, style=dotted];
m2_250 -> m2_259  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_313 -> m2_311  [key=0, style=bold, color=blue];
m2_313 -> m2_314  [key=0, style=solid];
m2_313 -> m2_100  [key=2, style=dotted];
m2_312 -> m2_313  [key=0, style=solid];
m2_312 -> m2_314  [key=2, style=dotted];
m2_312 -> m2_164  [key=2, style=dotted];
m2_312 -> m2_316  [key=1, style=dashed, color=darkseagreen4, label=filter];
m2_335 -> m2_333  [key=0, style=bold, color=blue];
m2_335 -> m2_336  [key=0, style=solid];
m2_335 -> m2_164  [key=2, style=dotted];
m2_335 -> m2_337  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m2_335 -> m2_339  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m2_334 -> m2_335  [key=0, style=solid];
m2_334 -> m2_164  [key=2, style=dotted];
m2_334 -> m2_336  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m2_334 -> m2_342  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m2_338 -> m2_336  [key=0, style=bold, color=blue];
m2_338 -> m2_339  [key=0, style=solid];
m2_338 -> m2_19  [key=2, style=dotted];
m2_338 -> m2_30  [key=2, style=dotted];
m2_338 -> m2_345  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_337 -> m2_186  [key=2, style=dotted];
m2_337 -> m2_338  [key=0, style=solid];
m2_337 -> m2_100  [key=2, style=dotted];
m2_80 -> m2_81  [key=0, style=solid, color=red];
m2_81 -> m2_82  [key=0, style=solid, color=red];
m2_81 -> m2_19  [key=2, style=dotted, color=red];
m2_81 -> m2_30  [key=2, style=dotted, color=red];
m2_81 -> m2_85  [key=1, style=dashed, color=red, label="lambda expression"];
m2_82 -> m2_83  [key=0, style=solid, color=red];
m2_82 -> m2_61  [key=2, style=dotted];
m2_82 -> m2_89  [key=1, style=dashed, color=red, label=process];
m2_83 -> m2_84  [key=0, style=solid, color=red];
m2_83 -> m2_30  [key=2, style=dotted, color=red];
m2_83 -> m2_88  [key=1, style=dashed, color=red, label="lambda expression"];
m2_84 -> m2_80  [key=0, style=bold, color=blue];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_19  [key=2, style=dotted];
m2_8 -> m2_20  [key=2, style=dotted];
m2_8 -> m2_21  [key=2, style=dotted];
m2_8 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_8 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_30 -> m2_31  [key=0, style=solid, color=green];
m2_30 -> m2_27  [key=2, style=dotted, color=green];
m2_30 -> m2_32  [key=1, style=dashed, color=green, label="lambda expression"];
m2_31 -> m2_32  [key=0, style=solid, color=green];
m2_31 -> m2_33  [key=2, style=dotted, color=green];
m2_66 -> m2_67  [key=0, style=solid, color=red];
m2_66 -> m2_27  [key=2, style=dotted];
m2_66 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_67 -> m2_68  [key=0, style=solid, color=red];
m2_67 -> m2_33  [key=2, style=dotted, color=green];
m2_67 -> m2_61  [key=2, style=dotted, color=red];
m2_68 -> m2_64  [key=0, style=bold, color=blue];
m2_68 -> m2_69  [key=0, style=solid, color=red];
m2_68 -> m2_39  [key=2, style=dotted, color=red];
m2_314 -> m2_315  [key=0, style=solid];
m2_314 -> m2_274  [key=2, style=dotted];
m2_314 -> m2_316  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_314 -> m2_325  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_314 -> m2_328  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_26 -> m2_363  [key=0, style=solid];
m2_363 -> m2_26  [key=0, style=bold, color=blue];
m2_363 -> m2_340  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_363 -> m2_344  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_342 -> m2_343  [key=0, style=solid];
m2_342 -> m2_71  [key=2, style=dotted];
m2_342 -> m2_357  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_75 -> m2_76  [key=0, style=solid, color=green];
m2_75 -> m2_80  [key=2, style=dotted];
m2_76 -> m2_77  [key=0, style=solid, color=green];
m2_76 -> m2_61  [key=2, style=dotted, color=red];
m2_76 -> m2_51  [key=2, style=dotted, color=green];
m2_77 -> m2_78  [key=0, style=solid, color=red];
m2_77 -> m2_39  [key=2, style=dotted, color=red];
m2_77 -> m2_55  [key=2, style=dotted];
m2_78 -> m2_79  [key=0, style=solid, color=red];
m2_78 -> m2_44  [key=2, style=dotted, color=red];
m2_78 -> m2_81  [key=2, style=dotted];
m2_78 -> m2_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_79 -> m2_75  [key=0, style=bold, color=blue];
m2_79 -> m2_73  [key=0, style=bold, color=blue];
m2_155 -> m2_156  [key=0, style=solid];
m2_155 -> m2_99  [key=2, style=dotted];
m2_155 -> m2_159  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m2_156 -> m2_157  [key=0, style=solid];
m2_156 -> m2_119  [key=2, style=dotted];
m2_156 -> m2_164  [key=2, style=dotted];
m2_156 -> m2_158  [key=1, style=dashed, color=darkseagreen4, label=filter];
m2_156 -> m2_160  [key=1, style=dashed, color=darkseagreen4, label=filter];
m2_158 -> m2_81  [key=2, style=dotted];
m2_158 -> m2_159  [key=0, style=solid];
m2_158 -> m2_166  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_158 -> m2_19  [key=2, style=dotted];
m2_158 -> m2_122  [key=2, style=dotted];
m2_158 -> m2_165  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_159 -> m2_81  [key=2, style=dotted];
m2_159 -> m2_160  [key=0, style=solid];
m2_159 -> m2_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_159 -> m2_19  [key=2, style=dotted];
m2_159 -> m2_122  [key=2, style=dotted];
m2_157 -> m2_158  [key=0, style=solid];
m2_157 -> m2_161  [key=2, style=dotted];
m2_157 -> m2_100  [key=2, style=dotted];
m2_160 -> m2_153  [key=0, style=bold, color=blue];
m2_160 -> m2_161  [key=0, style=solid, color=red];
m2_160 -> m2_19  [key=2, style=dotted];
m2_160 -> m2_122  [key=2, style=dotted];
m2_160 -> m2_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_111 -> m2_112  [key=0, style=solid];
m2_112 -> m2_51  [key=2, style=dotted];
m2_112 -> m2_113  [key=0, style=solid, color=red];
m2_112 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m2_112 -> m2_99  [key=2, style=dotted];
m2_112 -> m2_115  [key=1, style=dashed, color=red, label=filter1];
m2_112 -> m2_116  [key=1, style=dashed, color=red, label=filter1];
m2_113 -> m2_27  [key=2, style=dotted];
m2_113 -> m2_114  [key=0, style=solid, color=red];
m2_113 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_113 -> m2_99  [key=2, style=dotted, color=red];
m2_113 -> m2_117  [key=1, style=dashed, color=red, label=filter2];
m2_114 -> m2_33  [key=2, style=dotted];
m2_114 -> m2_115  [key=0, style=solid, color=red];
m2_114 -> m2_19  [key=2, style=dotted, color=red];
m2_114 -> m2_122  [key=2, style=dotted, color=red];
m2_114 -> m2_123  [key=1, style=dashed, color=red, label="lambda expression"];
m2_115 -> m2_111  [key=0, style=bold, color=blue];
m2_115 -> m2_116  [key=0, style=solid, color=red];
m2_115 -> m2_19  [key=2, style=dotted, color=red];
m2_115 -> m2_122  [key=2, style=dotted, color=red];
m2_115 -> m2_126  [key=1, style=dashed, color=red, label="lambda expression"];
m2_288 -> m2_289  [key=0, style=solid];
m2_289 -> m2_290  [key=0, style=solid];
m2_289 -> m2_99  [key=2, style=dotted];
m2_289 -> m2_292  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m2_289 -> m2_293  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m2_289 -> m2_294  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m2_289 -> m2_164  [key=2, style=dotted];
m2_289 -> m2_291  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m2_289 -> m2_297  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m2_292 -> m2_293  [key=0, style=solid];
m2_292 -> m2_11  [key=2, style=dotted];
m2_292 -> m2_298  [key=2, style=dotted];
m2_292 -> m2_302  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_292 -> m2_100  [key=2, style=dotted];
m2_293 -> m2_103  [key=2, style=dotted];
m2_293 -> m2_294  [key=0, style=solid];
m2_293 -> m2_295  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_293 -> m2_274  [key=2, style=dotted];
m2_293 -> m2_297  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_293 -> m2_306  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_293 -> m2_309  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_294 -> m2_81  [key=2, style=dotted];
m2_294 -> m2_295  [key=0, style=solid];
m2_294 -> m2_305  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_294 -> m2_19  [key=2, style=dotted];
m2_294 -> m2_275  [key=2, style=dotted];
m2_294 -> m2_299  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_290 -> m2_292  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m2_290 -> m2_303  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_290 -> m2_293  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_290 -> m2_306  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_290 -> m2_294  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_290 -> m2_8  [key=2, style=dotted];
m2_290 -> m2_291  [key=0, style=solid];
m2_290 -> m2_262  [key=2, style=dotted];
m2_290 -> m2_299  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_290 -> m2_164  [key=2, style=dotted];
m2_291 -> m2_292  [key=0, style=solid];
m2_291 -> m2_306  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_291 -> m2_294  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_291 -> m2_297  [key=2, style=dotted];
m2_291 -> m2_309  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_291 -> m2_100  [key=2, style=dotted];
m2_295 -> m2_296  [key=0, style=solid];
m2_295 -> m2_161  [key=2, style=dotted];
m2_295 -> m2_61  [key=2, style=dotted];
m2_295 -> m2_303  [key=1, style=dashed, color=darkseagreen4, label=process];
m2_296 -> m2_288  [key=0, style=bold, color=blue];
m2_296 -> m2_297  [key=0, style=solid];
m2_296 -> m2_30  [key=2, style=dotted];
m2_296 -> m2_302  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_297 -> m2_298  [key=0, style=solid];
m2_297 -> m2_71  [key=2, style=dotted];
m2_297 -> m2_305  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_12  [key=2, style=dotted];
m2_1 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=storage];
m2_1 -> m2_8  [key=2, style=dotted];
m2_1 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2 -> m2_3  [key=0, style=solid, color=red];
m2_2 -> m2_13  [key=2, style=dotted];
m2_2 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=connection];
m2_2 -> m2_9  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_16  [key=2, style=dotted];
m2_5 -> m2_11  [key=2, style=dotted];
m2_5 -> m2_12  [key=2, style=dotted];
m2_5 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_3 -> m2_4  [key=0, style=solid, color=red];
m2_3 -> m2_14  [key=2, style=dotted, color=red];
m2_3 -> m2_23  [key=1, style=dashed, color=red, label="lambda expression"];
m2_3 -> m2_5  [key=1, style=dashed, color=red, label=job];
m2_3 -> m2_10  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid, color=red];
m2_4 -> m2_15  [key=2, style=dotted, color=red];
m2_4 -> m2_11  [key=2, style=dotted];
m2_4 -> m2_12  [key=2, style=dotted];
m2_4 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_17  [key=2, style=dotted];
m2_6 -> m2_11  [key=2, style=dotted];
m2_6 -> m2_12  [key=2, style=dotted];
m2_6 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_18  [key=2, style=dotted];
m2_7 -> m2_0  [key=0, style=bold, color=blue];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_22  [key=2, style=dotted];
m2_11 -> m2_0  [key=0, style=bold, color=blue];
m2_51 -> m2_346  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid, color=red];
m2_51 -> m2_44  [key=2, style=dotted, color=red];
m2_69 -> m2_70  [key=0, style=solid, color=red];
m2_69 -> m2_71  [key=2, style=dotted, color=red];
m2_69 -> m2_72  [key=1, style=dashed, color=red, label="lambda expression"];
m2_110 -> m2_107  [key=0, style=bold, color=blue];
m2_52 -> m2_49  [key=0, style=bold, color=blue];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_33  [key=2, style=dotted];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_30  [key=2, style=dotted];
m2_41 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_41 -> m2_38  [key=0, style=bold, color=blue];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_44  [key=2, style=dotted];
m2_61 -> m2_364  [key=0, style=solid];
m2_364 -> m2_365  [key=0, style=solid];
m2_364 -> m2_48  [key=2, style=dotted];
m2_365 -> m2_61  [key=0, style=bold, color=blue];
m2_298 -> m2_288  [key=0, style=bold, color=blue];
m2_119 -> m2_120  [key=0, style=solid, color=red];
m2_119 -> m2_61  [key=2, style=dotted, color=red];
m2_119 -> m2_133  [key=1, style=dashed, color=red, label=process];
m2_366 -> m2_3  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_24  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_50  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_54  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_67  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_68  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_69  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_73  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_76  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_77  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_81  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_83  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_89  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_93  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_94  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_95  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_116  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_117  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_118  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_119  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_120  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_133  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_136  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_139  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_140  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_141  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_157  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_159  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_161  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_162  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_180  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_185  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_186  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_202  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_204  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_205  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_207  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_225  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_226  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_228  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_229  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_246  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_248  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_249  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_257  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_250  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_267  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_269  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_270  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_271  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_280  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_291  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_292  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_294  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_295  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_296  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_303  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_313  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_315  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_317  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_318  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_336  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_337  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_338  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_340  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_341  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_355  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_366 -> m2_364  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m2_367 -> m2_63  [key=1, style=dashed, color=red, label=process];
m2_368 -> m2_89  [key=1, style=dashed, color=red, label=process];
m2_369 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label=process];
m2_370 -> m2_133  [key=1, style=dashed, color=red, label=process];
m2_371 -> m2_257  [key=1, style=dashed, color=darkseagreen4, label=process];
m2_372 -> m2_280  [key=1, style=dashed, color=darkseagreen4, label=process];
m2_373 -> m2_283  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_373 -> m2_286  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_374 -> m2_303  [key=1, style=dashed, color=darkseagreen4, label=process];
m2_375 -> m2_306  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_375 -> m2_309  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_376 -> m2_325  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_376 -> m2_328  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_377 -> m2_355  [key=1, style=dashed, color=darkseagreen4, label=process];
m3_20 -> m3_21  [key=0, style=solid];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_13  [key=2, style=dotted];
m3_22 -> m3_20  [key=0, style=bold, color=blue];
m3_23 -> m3_24  [key=0, style=solid];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label=concurrency];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_60  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_65  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_27 -> m3_28  [key=0, style=solid];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_61  [key=2, style=dotted];
m3_28 -> m3_62  [key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_63  [key=2, style=dotted];
m3_29 -> m3_62  [key=2, style=dotted];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_64  [key=2, style=dotted];
m3_30 -> m3_62  [key=2, style=dotted];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_66  [key=2, style=dotted];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_13  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_42  [key=1, style=dashed, color=darkseagreen4, label=count];
m3_34 -> m3_55  [key=1, style=dashed, color=darkseagreen4, label=count];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_59  [key=0, style=solid];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_72  [key=2, style=dotted];
m3_42 -> m3_42  [key=1, style=dashed, color=darkseagreen4, label=count];
m3_42 -> m3_55  [key=1, style=dashed, color=darkseagreen4, label=count];
m3_55 -> m3_56  [key=0, style=solid];
m3_55 -> m3_11  [key=2, style=dotted];
m3_55 -> m3_73  [key=2, style=dotted];
m3_55 -> m3_55  [key=1, style=dashed, color=darkseagreen4, label=count];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_67  [key=2, style=dotted];
m3_36 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label=command];
m3_36 -> m3_39  [key=1, style=dashed, color=darkseagreen4, label=command];
m3_36 -> m3_47  [key=1, style=dashed, color=darkseagreen4, label=command];
m3_36 -> m3_48  [key=1, style=dashed, color=darkseagreen4, label=command];
m3_36 -> m3_53  [key=1, style=dashed, color=darkseagreen4, label=command];
m3_36 -> m3_54  [key=1, style=dashed, color=darkseagreen4, label=command];
m3_36 -> m3_56  [key=1, style=dashed, color=darkseagreen4, label=command];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_59  [key=0, style=solid];
m3_37 -> m3_68  [key=2, style=dotted];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_47  [key=0, style=solid];
m3_38 -> m3_69  [key=2, style=dotted];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_70  [key=2, style=dotted];
m3_39 -> m3_71  [key=2, style=dotted];
m3_39 -> m3_41  [key=1, style=dashed, color=darkseagreen4, label=workCount];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_53  [key=0, style=solid];
m3_47 -> m3_69  [key=2, style=dotted];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_70  [key=2, style=dotted];
m3_48 -> m3_71  [key=2, style=dotted];
m3_48 -> m3_50  [key=1, style=dashed, color=darkseagreen4, label=workCount];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_56  [key=0, style=solid];
m3_53 -> m3_69  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_70  [key=2, style=dotted];
m3_54 -> m3_71  [key=2, style=dotted];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_35  [key=0, style=solid];
m3_56 -> m3_69  [key=2, style=dotted];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_43  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_44  [key=0, style=solid];
m3_43 -> m3_41  [key=0, style=solid];
m3_43 -> m3_43  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_47  [key=0, style=solid];
m3_44 -> m3_13  [key=2, style=dotted];
m3_45 -> m3_46  [key=0, style=solid];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_13  [key=2, style=dotted];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_52  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_53  [key=0, style=solid];
m3_52 -> m3_50  [key=0, style=solid];
m3_52 -> m3_52  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_72  [key=2, style=dotted];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_74  [key=2, style=dotted];
m3_58 -> m3_35  [key=0, style=solid];
m3_58 -> m3_13  [key=2, style=dotted];
m3_59 -> m3_23  [key=0, style=bold, color=blue];
m3_74 -> m3_74  [key=3, color=darkorchid, style=bold, label="Field variable long _combinedHash64"];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_9  [key=2, style=dotted];
m3_3 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label=time];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_6  [key=0, style=solid];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_11  [key=2, style=dotted];
m3_6 -> m3_12  [key=2, style=dotted];
m3_5 -> m3_8  [key=0, style=solid];
m3_5 -> m3_10  [key=2, style=dotted];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_13  [key=2, style=dotted];
m3_8 -> m3_0  [key=0, style=bold, color=blue];
m3_14 -> m3_15  [key=0, style=solid];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_13  [key=2, style=dotted];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_18  [key=2, style=dotted];
m3_16 -> m3_19  [key=2, style=dotted];
m3_17 -> m3_14  [key=0, style=bold, color=blue];
m3_75 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label="ConsoleSample.ConsoleJob"];
m4_2 -> m4_3  [key=0, style=solid, color=green];
m4_2 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m4_2 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_2 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobActivator"];
m4_2 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPerformer"];
m4_3 -> m4_4  [key=0, style=solid, color=green];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_6 -> m4_2  [key=0, style=bold, color=blue];
m4_6 -> m4_7  [key=0, style=solid];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [key=0, style=bold, color=blue];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m4_7 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m4_7 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m4_8 -> m4_2  [key=0, style=bold, color=blue];
m4_9 -> m4_3  [key=1, style=dashed, color=green, label="HangFire.Server.ServerContext"];
m4_9 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m4_9 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m4_9 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m4_9 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m5_2 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label=int];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_6 -> m5_2  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [key=0, style=bold, color=blue];
m5_7 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m5_7 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m5_7 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [key=0, style=bold, color=blue];
}
