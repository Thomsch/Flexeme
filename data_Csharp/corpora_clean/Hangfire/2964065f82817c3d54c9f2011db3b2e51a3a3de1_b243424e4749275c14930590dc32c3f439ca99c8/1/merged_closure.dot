digraph  {
n61 [label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", span=""];
n62 [label=sqlQuery, span=""];
n63 [label=string, span=""];
n64 [label=int, span=""];
n65 [label=int, span=""];
n66 [label=sqlQuery, span=""];
n67 [label=string, span=""];
n68 [label=int, span=""];
n69 [label=int, span=""];
n70 [label=fetchedJobsSql, span=""];
n71 [label=string, span=""];
n72 [label=sqlQuery, span=""];
n0 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="36-36"];
n1 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", label="storage == null", span="38-38"];
n3 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", label="_storage = storage", span="39-39"];
n2 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", label="throw new ArgumentNullException(''storage'');", span="38-38"];
n4 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="36-36"];
n5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n6 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", span="42-42"];
n7 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", label="string sqlQuery = @''select distinct(Queue) from HangFire.JobQueue''", span="44-44"];
n8 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", label=_cacheLock, span="46-46"];
n10 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", label="var result = UseTransaction(connection =>\r\n                    {\r\n                        return connection.Query(sqlQuery).Select(x => (string) x.Queue).ToList();\r\n                    })", span="50-53"];
n19 [cluster="lambda expression", label="return connection.Query(sqlQuery).Select(x => (string) x.Queue).ToList();", span="52-52"];
n9 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", label="_queuesCache.Count == 0 || _cacheUpdated.Add(QueuesCacheTimeout) < DateTime.UtcNow", span="48-48"];
n13 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", label="return _queuesCache.ToList();", span="59-59"];
n15 [cluster="System.DateTime.Add(System.TimeSpan)", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
n11 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", label="_queuesCache = result", span="55-55"];
n16 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", span="132-132"];
n18 [cluster="lambda expression", label="Entry lambda expression", span="50-53"];
n12 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", label="_cacheUpdated = DateTime.UtcNow", span="56-56"];
n14 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", span="42-42"];
n17 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
n20 [cluster="lambda expression", label="Exit lambda expression", span="50-53"];
n21 [cluster="Unk.Query", label="Entry Unk.Query", span=""];
n22 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
n23 [cluster="Unk.ToList", label="Entry Unk.ToList", span=""];
n24 [cluster="lambda expression", label="Entry lambda expression", span="52-52"];
n25 [cluster="lambda expression", label="(string) x.Queue", span="52-52"];
n26 [cluster="lambda expression", label="Exit lambda expression", span="52-52"];
n27 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="63-63"];
n29 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", label="return UseTransaction(connection =>\r\n            {\r\n                return connection.Query<JobIdDto>(\r\n                    sqlQuery,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();\r\n            });", span="75-83"];
n32 [cluster="lambda expression", label="return connection.Query<JobIdDto>(\r\n                    sqlQuery,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();", span="77-82"];
n30 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="63-63"];
n31 [cluster="lambda expression", label="Entry lambda expression", span="75-83"];
n33 [cluster="lambda expression", label="Exit lambda expression", span="75-83"];
n34 [cluster="Unk.>", label="Entry Unk.>", span=""];
n35 [cluster="lambda expression", label="Entry lambda expression", span="81-81"];
n36 [cluster="lambda expression", label="x.Id", span="81-81"];
n37 [cluster="lambda expression", label="Exit lambda expression", span="81-81"];
n38 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="86-86"];
n39 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", label="string fetchedJobsSql = @''\r\nselect r.Id from (\r\n  select j.Id, jq.FetchedAt, row_number() over (order by j.Id) as row_num \r\n  from HangFire.JobQueue jq\r\n  left join HangFire.Job j on jq.JobId = j.Id\r\n  where jq.Queue = @queue and jq.FetchedAt is not null\r\n) as r\r\nwhere r.row_num between @start and @end''", span="88-95"];
n40 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", label="return UseTransaction(connection =>\r\n            {\r\n                return connection.Query<JobIdDto>(\r\n                    fetchedJobsSql,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();\r\n            });", span="97-105"];
n43 [cluster="lambda expression", label="return connection.Query<JobIdDto>(\r\n                    fetchedJobsSql,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();", span="99-104"];
n41 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="86-86"];
n42 [cluster="lambda expression", label="Entry lambda expression", span="97-105"];
n44 [cluster="lambda expression", label="Exit lambda expression", span="97-105"];
n45 [cluster="lambda expression", label="Entry lambda expression", span="103-103"];
n46 [cluster="lambda expression", label="x.Id", span="103-103"];
n47 [cluster="lambda expression", label="Exit lambda expression", span="103-103"];
n48 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="108-108"];
n49 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", label="string sqlQuery = @''\r\nselect sum(Enqueued) as EnqueuedCount, sum(Fetched) as FetchedCount \r\nfrom (\r\n    select \r\n	    case when FetchedAt is null then 1 else 0 end as Enqueued,\r\n	    case when FetchedAt is not null then 1 else 0 end as Fetched\r\n    from HangFire.JobQueue\r\n    where Queue = @queue\r\n) q''", span="110-118"];
n50 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", label="return UseTransaction(connection =>\r\n            {\r\n                var result = connection.Query(sqlQuery, new { queue = queue }).Single();\r\n\r\n                return new EnqueuedAndFetchedCountDto\r\n                {\r\n                    EnqueuedCount = result.EnqueuedCount,\r\n                    FetchedCount = result.FetchedCount\r\n                };\r\n            });", span="120-129"];
n53 [cluster="lambda expression", label="var result = connection.Query(sqlQuery, new { queue = queue }).Single()", span="122-122"];
n51 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="108-108"];
n52 [cluster="lambda expression", label="Entry lambda expression", span="120-129"];
n54 [cluster="lambda expression", label="return new EnqueuedAndFetchedCountDto\r\n                {\r\n                    EnqueuedCount = result.EnqueuedCount,\r\n                    FetchedCount = result.FetchedCount\r\n                };", span="124-128"];
n56 [cluster="Unk.Single", label="Entry Unk.Single", span=""];
n55 [cluster="lambda expression", label="Exit lambda expression", span="120-129"];
n57 [cluster="Hangfire.SqlServer.EnqueuedAndFetchedCountDto.EnqueuedAndFetchedCountDto()", label="Entry Hangfire.SqlServer.EnqueuedAndFetchedCountDto.EnqueuedAndFetchedCountDto()", span="18-18"];
n58 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", label="return _storage.UseTransaction(func, IsolationLevel.ReadUncommitted);", span="134-134"];
n59 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", span="132-132"];
n60 [cluster="Unk.UseTransaction", label="Entry Unk.UseTransaction", span=""];
m0_35 [cluster="Unk.CreatePipeline", file="SqlServerJobQueueProvider.cs", label="Entry Unk.CreatePipeline", span=""];
m0_43 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerJobQueueProvider.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m0_0 [cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="SqlServerJobQueueProvider.cs", label="Entry HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", span="17-17"];
m0_1 [cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="SqlServerJobQueueProvider.cs", label="_redis = redis", span="22-22"];
m0_2 [cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="SqlServerJobQueueProvider.cs", label="_queueNames = queueNames.ToList()", span="23-23"];
m0_4 [cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="SqlServerJobQueueProvider.cs", label="Exit HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", span="17-17"];
m0_38 [cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string)", file="SqlServerJobQueueProvider.cs", label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string)", span="4-4"];
m0_48 [cluster="Unk.GetValuesFromHash", file="SqlServerJobQueueProvider.cs", label="Entry Unk.GetValuesFromHash", span=""];
m0_36 [cluster="Unk.QueueCommand", file="SqlServerJobQueueProvider.cs", label="Entry Unk.QueueCommand", span=""];
m0_34 [cluster="Unk.PopAndPushItemBetweenLists", file="SqlServerJobQueueProvider.cs", label="Entry Unk.PopAndPushItemBetweenLists", span=""];
m0_49 [cluster="lambda expression", file="SqlServerJobQueueProvider.cs", label="Entry lambda expression", span="92-99"];
m0_41 [cluster="lambda expression", file="SqlServerJobQueueProvider.cs", label="x.SetEntryInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Fetched'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="81-84"];
m0_46 [cluster="lambda expression", file="SqlServerJobQueueProvider.cs", label="x.GetValuesFromHash(\r\n                        RedisStorage.Prefix + String.Format(''job:{0}'', jobId),\r\n                        new[] { ''Type'', ''Args'', ''Method'', ''Arguments'', ''ParameterTypes'' })", span="89-91"];
m0_40 [cluster="lambda expression", file="SqlServerJobQueueProvider.cs", label="Entry lambda expression", span="81-84"];
m0_45 [cluster="lambda expression", file="SqlServerJobQueueProvider.cs", label="Entry lambda expression", span="89-91"];
m0_42 [cluster="lambda expression", file="SqlServerJobQueueProvider.cs", label="Exit lambda expression", span="81-84"];
m0_47 [cluster="lambda expression", file="SqlServerJobQueueProvider.cs", label="Exit lambda expression", span="89-91"];
m0_50 [cluster="lambda expression", file="SqlServerJobQueueProvider.cs", label="type = x[0]", span="94-94"];
m0_51 [cluster="lambda expression", file="SqlServerJobQueueProvider.cs", label="method = x[2]", span="95-95"];
m0_52 [cluster="lambda expression", file="SqlServerJobQueueProvider.cs", label="parameterTypes = x[4]", span="96-96"];
m0_53 [cluster="lambda expression", file="SqlServerJobQueueProvider.cs", label="args = x[1]", span="97-97"];
m0_54 [cluster="lambda expression", file="SqlServerJobQueueProvider.cs", label="arguments = x[3]", span="98-98"];
m0_55 [cluster="lambda expression", file="SqlServerJobQueueProvider.cs", label="Exit lambda expression", span="92-99"];
m0_39 [cluster="HangFire.Server.JobPayload.JobPayload(string, string, HangFire.Storage.InvocationData)", file="SqlServerJobQueueProvider.cs", label="Entry HangFire.Server.JobPayload.JobPayload(string, string, HangFire.Storage.InvocationData)", span="23-23"];
m0_44 [cluster="Unk.SetEntryInHash", file="SqlServerJobQueueProvider.cs", label="Entry Unk.SetEntryInHash", span=""];
m0_32 [cluster="string.Format(string, object)", file="SqlServerJobQueueProvider.cs", label="Entry string.Format(string, object)", span="0-0"];
m0_37 [cluster="Unk.Flush", file="SqlServerJobQueueProvider.cs", label="Entry Unk.Flush", span=""];
m0_33 [cluster="Unk.BlockingPopAndPushItemBetweenLists", file="SqlServerJobQueueProvider.cs", label="Entry Unk.BlockingPopAndPushItemBetweenLists", span=""];
m0_31 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="SqlServerJobQueueProvider.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m0_25 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs", label="pipeline.QueueCommand(x => x.SetEntryInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Fetched'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow)))", span="81-84"];
m0_6 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs", label="Entry HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="27-27"];
m0_7 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs", label="string jobId", span="29-29"];
m0_10 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="35-35"];
m0_8 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs", label="string queueName", span="30-30"];
m0_9 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs", label="var queueIndex = 0", span="31-31"];
m0_12 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs", label="queueName = _queueNames[queueIndex]", span="38-38"];
m0_15 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs", label="queueIndex == 0", span="43-43"];
m0_14 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs", label="var fetchedKey = RedisStorage.Prefix + String.Format(''queue:{0}:dequeued'', queueName)", span="41-41"];
m0_29 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs", label="return new JobPayload(jobId, queueName, invocationData)\r\n            {\r\n                Args = args,\r\n                Arguments = arguments\r\n            };", span="110-114"];
m0_17 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs", label="jobId = _redis.PopAndPushItemBetweenLists(\r\n                        queueKey, fetchedKey)", span="52-53"];
m0_18 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs", label="jobId == null", span="56-56"];
m0_26 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetValuesFromHash(\r\n                        RedisStorage.Prefix + String.Format(''job:{0}'', jobId),\r\n                        new[] { ''Type'', ''Args'', ''Method'', ''Arguments'', ''ParameterTypes'' }),\r\n                    x =>\r\n                    {\r\n                        type = x[0];\r\n                        method = x[2];\r\n                        parameterTypes = x[4];\r\n                        args = x[1];\r\n                        arguments = x[3];\r\n                    })", span="88-99"];
m0_19 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs", label="string type = null", span="73-73"];
m0_20 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs", label="string method = null", span="74-74"];
m0_21 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs", label="string parameterTypes = null", span="75-75"];
m0_22 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs", label="string arguments = null", span="76-76"];
m0_23 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs", label="string args = null", span="77-77"];
m0_24 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs", label="var pipeline = _redis.CreatePipeline()", span="79-79"];
m0_27 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs", label="pipeline.Flush()", span="101-101"];
m0_28 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs", label="var invocationData = new InvocationData(type, method, parameterTypes)", span="108-108"];
m0_30 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs", label="Exit HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="27-27"];
m0_56 [file="SqlServerJobQueueProvider.cs", label="HangFire.Redis.RedisJobFetcher", span=""];
m0_57 [file="SqlServerJobQueueProvider.cs", label=jobId, span=""];
m1_87 [cluster="System.Collections.Generic.List<T>.List()", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_363 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40"];
m1_111 [cluster="long.Parse(string)", file="SqlServerMonitoringApi.cs", label="Entry long.Parse(string)", span="0-0"];
m1_378 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="SqlServerMonitoringApi.cs", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
m1_88 [cluster="Hangfire.Storage.Monitoring.ServerDto.ServerDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.ServerDto.ServerDto()", span="21-21"];
m1_44 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="491-491"];
m1_364 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="string jobsSql = @''\r\nselect * from (\r\n  select j.*, s.Reason as StateReason, s.Data as StateData, row_number() over (order by j.Id desc) as row_num\r\n  from HangFire.Job j\r\n  left join HangFire.State s on j.StateId = s.Id\r\n  where j.StateName = @stateName\r\n) as j where j.row_num between @start and @end\r\n''", span="498-505"];
m1_365 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="var jobs = connection.Query<SqlJob>(\r\n                        jobsSql,\r\n                        new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                        .ToList()", span="507-510"];
m1_366 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="return DeserializeJobs(jobs, selector);", span="512-512"];
m1_367 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="491-491"];
m1_379 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m1_26 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="64-64"];
m1_27 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, FailedState.StateName));", span="66-67"];
m1_28 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="64-64"];
m1_139 [cluster="Hangfire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="18-18"];
m1_99 [cluster="Hangfire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="23-23"];
m1_368 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="515-515"];
m1_369 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="var result = new List<KeyValuePair<string, TDto>>(jobs.Count)", span="519-519"];
m1_370 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label=jobs, span="521-521"];
m1_373 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="var dto = selector(job, DeserializeJob(job.InvocationData, job.Arguments), stateData)", span="528-528"];
m1_374 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="result.Add(new KeyValuePair<string, TDto>(\r\n                    job.Id.ToString(), dto))", span="530-531"];
m1_375 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="return new JobList<TDto>(result);", span="534-534"];
m1_371 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="var deserializedData = JobHelper.FromJson<Dictionary<string, string>>(job.StateData)", span="523-523"];
m1_372 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="var stateData = deserializedData != null\r\n                    ? new Dictionary<string, string>(deserializedData, StringComparer.OrdinalIgnoreCase)\r\n                    : null", span="524-526"];
m1_376 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="515-515"];
m1_13 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", span="463-463"];
m1_351 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="string sqlQuery = @''\r\nselect count(Id) from HangFire.Job where StateName = @state''", span="465-466"];
m1_352 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="var count = connection.Query<int>(\r\n                 sqlQuery,\r\n                 new { state = stateName })\r\n                 .Single()", span="468-471"];
m1_353 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="return count;", span="473-473"];
m1_354 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", span="463-463"];
m1_226 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="298-298"];
m1_227 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, DeletedState.StateName));", span="300-301"];
m1_228 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="298-298"];
m1_391 [cluster="Unk.ToString", file="SqlServerMonitoringApi.cs", label="Entry Unk.ToString", span=""];
m1_9 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="430-430"];
m1_339 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerMonitoringApi.cs", label="return _storage.UseTransaction(action, IsolationLevel.ReadUncommitted);", span="432-432"];
m1_340 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="430-430"];
m1_238 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m1_185 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="244-244"];
m1_186 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''failed''));", span="246-247"];
m1_187 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="244-244"];
m1_346 [cluster="Unk.DeserializeJobs", file="SqlServerMonitoringApi.cs", label="Entry Unk.DeserializeJobs", span=""];
m1_232 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="304-304"];
m1_235 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="statistics.Queues = _storage.QueueProviders\r\n                .SelectMany(x => x.GetJobQueueMonitoringApi().GetQueues())\r\n                .Count()", span="348-350"];
m1_236 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="return statistics;", span="352-352"];
m1_237 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="304-304"];
m1_173 [cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="24-24"];
m1_168 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="230-230"];
m1_169 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="var queueApi = GetQueueApi(queue)", span="232-232"];
m1_170 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="var fetchedJobIds = queueApi.GetFetchedJobIds(queue, from, perPage)", span="233-233"];
m1_171 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => FetchedJobs(connection, fetchedJobIds));", span="235-235"];
m1_172 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="230-230"];
m1_184 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="355-355"];
m1_273 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="var endDate = DateTime.UtcNow", span="359-359"];
m1_280 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="var keyMaps = dates.ToDictionary(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH'')), x => x)", span="367-367"];
m1_281 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="return GetTimelineStats(connection, keyMaps);", span="369-369"];
m1_274 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="var dates = new List<DateTime>()", span="360-360"];
m1_277 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="dates.Add(endDate)", span="363-363"];
m1_278 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="endDate = endDate.AddHours(-1)", span="364-364"];
m1_275 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="var i = 0", span="361-361"];
m1_276 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="i < 24", span="361-361"];
m1_279 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="i++", span="361-361"];
m1_282 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="355-355"];
m1_256 [cluster="Unk.Read", file="SqlServerMonitoringApi.cs", label="Entry Unk.Read", span=""];
m1_268 [cluster="Unk.ContainsKey", file="SqlServerMonitoringApi.cs", label="Entry Unk.ContainsKey", span=""];
m1_110 [cluster="Hangfire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="23-23"];
m1_157 [cluster="Unk.EnqueuedJobs", file="SqlServerMonitoringApi.cs", label="Entry Unk.EnqueuedJobs", span=""];
m1_392 [cluster="Hangfire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21"];
m1_272 [cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", span="22-22"];
m1_163 [cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="23-23"];
m1_143 [cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi()", span="21-21"];
m1_49 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m1_257 [cluster="System.Func<T, TResult>.Invoke(T)", file="SqlServerMonitoringApi.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m1_380 [cluster="int.ToString()", file="SqlServerMonitoringApi.cs", label="Entry int.ToString()", span="0-0"];
m1_341 [cluster="Unk.UseTransaction", file="SqlServerMonitoringApi.cs", label="Entry Unk.UseTransaction", span=""];
m1_122 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", span="193-193"];
m1_123 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="var tuples = _storage.QueueProviders\r\n                .Select(x => x.GetJobQueueMonitoringApi())\r\n                .SelectMany(x => x.GetQueues(), (monitoring, queue) => new { Monitoring = monitoring, Queue = queue })\r\n                .OrderBy(x => x.Queue)\r\n                .ToArray()", span="195-199"];
m1_124 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length)", span="201-201"];
m1_125 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label=tuples, span="203-203"];
m1_129 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = tuple.Queue,\r\n                    Length = counters.EnqueuedCount ?? 0,\r\n                    Fetched = counters.FetchedCount,\r\n                    FirstJobs = firstJobs\r\n                })", span="210-216"];
m1_130 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="return result;", span="219-219"];
m1_126 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue, 0, 5)", span="205-205"];
m1_127 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue)", span="206-206"];
m1_128 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="var firstJobs = UseConnection(connection => EnqueuedJobs(connection, enqueuedJobIds))", span="208-208"];
m1_131 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", span="193-193"];
m1_135 [cluster="Unk.ToArray", file="SqlServerMonitoringApi.cs", label="Entry Unk.ToArray", span=""];
m1_303 [cluster="System.DateTime.AddDays(double)", file="SqlServerMonitoringApi.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m1_219 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m1_362 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m1_112 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="179-179"];
m1_113 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                }));", span="181-190"];
m1_114 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="179-179"];
m1_284 [cluster="Unk.GetTimelineStats", file="SqlServerMonitoringApi.cs", label="Entry Unk.GetTimelineStats", span=""];
m1_218 [cluster="Hangfire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21"];
m1_347 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="453-460"];
m1_10 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="44-45"];
m1_11 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetNumberOfJobsByStateName(connection, ScheduledState.StateName)", span="45-45"];
m1_12 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="44-45"];
m1_29 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="66-67"];
m1_30 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetNumberOfJobsByStateName(connection, FailedState.StateName)", span="67-67"];
m1_31 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="66-67"];
m1_35 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="72-73"];
m1_36 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetNumberOfJobsByStateName(connection, ProcessingState.StateName)", span="73-73"];
m1_37 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="72-73"];
m1_42 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                })", span="78-87"];
m1_41 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="78-87"];
m1_43 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="78-87"];
m1_45 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="82-87"];
m1_46 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                }", span="82-87"];
m1_47 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="82-87"];
m1_55 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                })", span="92-101"];
m1_54 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="92-101"];
m1_56 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="92-101"];
m1_57 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="96-101"];
m1_58 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                }", span="96-101"];
m1_59 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="96-101"];
m1_64 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="106-107"];
m1_65 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetTimelineStats(connection, ''succeeded'')", span="107-107"];
m1_66 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="106-107"];
m1_71 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="112-113"];
m1_72 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetTimelineStats(connection, ''failed'')", span="113-113"];
m1_73 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="112-113"];
m1_78 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="118-140"];
m1_79 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList()", span="120-122"];
m1_80 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var result = new List<ServerDto>()", span="124-124"];
m1_81 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label=servers, span="126-126"];
m1_83 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    })", span="129-136"];
m1_84 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="return result;", span="139-139"];
m1_82 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="128-128"];
m1_85 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="118-140"];
m1_94 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                })", span="145-158"];
m1_93 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="145-158"];
m1_95 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="145-158"];
m1_96 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="150-158"];
m1_97 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }", span="150-158"];
m1_98 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="150-158"];
m1_105 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                })", span="163-176"];
m1_104 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="163-176"];
m1_106 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="163-176"];
m1_107 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="168-176"];
m1_108 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }", span="168-176"];
m1_109 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="168-176"];
m1_116 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                })", span="181-190"];
m1_115 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="181-190"];
m1_117 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="181-190"];
m1_118 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="186-190"];
m1_119 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                }", span="186-190"];
m1_120 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="186-190"];
m1_140 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="196-196"];
m1_144 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="197-197"];
m1_148 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="197-197"];
m1_151 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="198-198"];
m1_155 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="EnqueuedJobs(connection, enqueuedJobIds)", span="208-208"];
m1_154 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="208-208"];
m1_141 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.GetJobQueueMonitoringApi()", span="196-196"];
m1_142 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="196-196"];
m1_145 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.GetQueues()", span="197-197"];
m1_146 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="197-197"];
m1_149 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="new { Monitoring = monitoring, Queue = queue }", span="197-197"];
m1_150 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="197-197"];
m1_152 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Queue", span="198-198"];
m1_153 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="198-198"];
m1_156 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="208-208"];
m1_165 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="EnqueuedJobs(connection, enqueuedJobIds)", span="227-227"];
m1_164 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="227-227"];
m1_166 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="227-227"];
m1_175 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="FetchedJobs(connection, fetchedJobIds)", span="235-235"];
m1_174 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="235-235"];
m1_176 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="235-235"];
m1_181 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="240-241"];
m1_182 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetHourlyTimelineStats(connection, ''succeeded'')", span="241-241"];
m1_183 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="240-241"];
m1_188 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="246-247"];
m1_189 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetHourlyTimelineStats(connection, ''failed'')", span="247-247"];
m1_190 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="246-247"];
m1_196 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var multi = connection.QueryMultiple(sql, new { id = jobId })", span="260-260"];
m1_194 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="252-289"];
m1_195 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc''", span="255-258"];
m1_197 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var job = multi.Read<SqlJob>().SingleOrDefault()", span="262-262"];
m1_200 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="265-265"];
m1_201 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            })\r\n                            .ToList()", span="266-278"];
m1_198 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="job == null", span="263-263"];
m1_202 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        ExpireAt = job.ExpireAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };", span="280-287"];
m1_199 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="return null;", span="263-263"];
m1_209 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="265-265"];
m1_212 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="265-265"];
m1_215 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="269-277"];
m1_203 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="252-289"];
m1_210 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Name", span="265-265"];
m1_211 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="265-265"];
m1_213 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Value", span="265-265"];
m1_214 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="265-265"];
m1_216 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            }", span="269-277"];
m1_217 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="269-277"];
m1_223 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="294-295"];
m1_224 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetNumberOfJobsByStateName(connection, SucceededState.StateName)", span="295-295"];
m1_225 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="294-295"];
m1_229 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="300-301"];
m1_230 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="GetNumberOfJobsByStateName(connection, DeletedState.StateName)", span="301-301"];
m1_231 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="300-301"];
m1_242 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var multi = connection.QueryMultiple(sql)", span="327-327"];
m1_240 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="324-346"];
m1_269 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="349-349"];
m1_241 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var stats = new StatisticsDto()", span="326-326"];
m1_249 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="stats.Servers = multi.Read<int>().Single()", span="338-338"];
m1_250 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="stats.Succeeded = multi.Read<long?>().SingleOrDefault() ?? 0", span="340-340"];
m1_251 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="stats.Deleted = multi.Read<long?>().SingleOrDefault() ?? 0", span="341-341"];
m1_252 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="stats.Recurring = multi.Read<int>().Single()", span="343-343"];
m1_253 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="return stats;", span="345-345"];
m1_259 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="329-329"];
m1_262 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="329-329"];
m1_254 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="324-346"];
m1_261 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="329-329"];
m1_264 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="329-329"];
m1_265 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="331-331"];
m1_267 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="331-331"];
m1_270 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.GetJobQueueMonitoringApi().GetQueues()", span="349-349"];
m1_271 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="349-349"];
m1_286 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="367-367"];
m1_285 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="367-367"];
m1_290 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="367-367"];
m1_287 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="367-367"];
m1_291 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label=x, span="367-367"];
m1_292 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="367-367"];
m1_305 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd''))", span="384-384"];
m1_304 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="384-384"];
m1_307 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="384-384"];
m1_306 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="384-384"];
m1_308 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label=x, span="384-384"];
m1_309 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="384-384"];
m1_328 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="405-405"];
m1_331 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="405-405"];
m1_329 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="(string)x.Key", span="405-405"];
m1_330 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="405-405"];
m1_332 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="(long)x.Count", span="405-405"];
m1_333 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="405-405"];
m1_348 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                }", span="453-460"];
m1_349 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="453-460"];
m1_89 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_86 [cluster="Unk.ToList", file="SqlServerMonitoringApi.cs", label="Entry Unk.ToList", span=""];
m1_327 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m1_21 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="56-56"];
m1_22 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SqlServerMonitoringApi.cs", label="var queueApi = GetQueueApi(queue)", span="58-58"];
m1_23 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SqlServerMonitoringApi.cs", label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="59-59"];
m1_24 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SqlServerMonitoringApi.cs", label="return counters.FetchedCount ?? 0;", span="61-61"];
m1_25 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="56-56"];
m1_381 [cluster="Hangfire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="22-22"];
m1_60 [cluster="Hangfire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", span="23-23"];
m1_288 [cluster="System.DateTime.ToString(string)", file="SqlServerMonitoringApi.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m1_101 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="161-161"];
m1_102 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }));", span="163-176"];
m1_103 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="161-161"];
m1_136 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="SqlServerMonitoringApi.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m1_20 [cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="25-25"];
m1_121 [cluster="Hangfire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", span="7-7"];
m1_177 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="537-537"];
m1_382 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs", label="string fetchedJobsSql = @''\r\nselect j.*, jq.FetchedAt, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is not null''", span="541-546"];
m1_383 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs", label="var jobs = connection.Query<SqlJob>(\r\n                fetchedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="548-551"];
m1_384 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs", label="var result = new List<KeyValuePair<string, FetchedJobDto>>(jobs.Count)", span="553-553"];
m1_385 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs", label=jobs, span="555-555"];
m1_386 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs", label="result.Add(new KeyValuePair<string, FetchedJobDto>(\r\n                    job.Id.ToString(),\r\n                    new FetchedJobDto\r\n                    {\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        State = job.StateName,\r\n                        FetchedAt = job.FetchedAt\r\n                    }))", span="557-564"];
m1_387 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs", label="return new JobList<FetchedJobDto>(result);", span="567-567"];
m1_388 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="537-537"];
m1_390 [cluster="KeyValuePair<string, FetchedJobDto>.cstr", file="SqlServerMonitoringApi.cs", label="Entry KeyValuePair<string, FetchedJobDto>.cstr", span=""];
m1_191 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="250-250"];
m1_192 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection =>\r\n            {\r\n\r\n                const string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc'';\r\n\r\n                using (var multi = connection.QueryMultiple(sql, new { id = jobId }))\r\n                {\r\n                    var job = multi.Read<SqlJob>().SingleOrDefault();\r\n                    if (job == null) return null;\r\n\r\n                    var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value);\r\n                    var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            })\r\n                            .ToList();\r\n\r\n                    return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        ExpireAt = job.ExpireAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };\r\n                }\r\n            });", span="252-289"];
m1_193 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="250-250"];
m1_324 [cluster="Unk.Query", file="SqlServerMonitoringApi.cs", label="Entry Unk.Query", span=""];
m1_6 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="42-42"];
m1_7 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ScheduledState.StateName));", span="44-45"];
m1_8 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="42-42"];
m1_0 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="35-35"];
m1_1 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerMonitoringApi.cs", label="storage == null", span="37-37"];
m1_3 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerMonitoringApi.cs", label="_storage = storage", span="39-39"];
m1_2 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerMonitoringApi.cs", label="throw new ArgumentNullException(''storage'');", span="37-37"];
m1_4 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="35-35"];
m1_167 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="435-435"];
m1_342 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs", label="string enqueuedJobsSql = @''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is null''", span="439-444"];
m1_343 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs", label="var jobs = connection.Query<SqlJob>(\r\n                enqueuedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="446-449"];
m1_344 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs", label="return DeserializeJobs(\r\n                jobs,\r\n                (sqlJob, job, stateData) => new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                });", span="451-460"];
m1_345 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="435-435"];
m1_325 [cluster="Unk.Add", file="SqlServerMonitoringApi.cs", label="Entry Unk.Add", span=""];
m1_220 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="292-292"];
m1_221 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, SucceededState.StateName));", span="294-295"];
m1_222 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="292-292"];
m1_50 [cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73"];
m1_350 [cluster="Hangfire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="23-23"];
m1_389 [cluster="List<KeyValuePair<string, FetchedJobDto>>.cstr", file="SqlServerMonitoringApi.cs", label="Entry List<KeyValuePair<string, FetchedJobDto>>.cstr", span=""];
m1_283 [cluster="System.DateTime.AddHours(double)", file="SqlServerMonitoringApi.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m1_90 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="143-143"];
m1_91 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }));", span="145-158"];
m1_92 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="143-143"];
m1_355 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="476-476"];
m1_356 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs", label="var data = JobHelper.FromJson<InvocationData>(invocationData)", span="478-478"];
m1_357 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs", label="data.Arguments = arguments", span="479-479"];
m1_358 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs", label="return data.Deserialize();", span="483-483"];
m1_359 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs", label=JobLoadException, span="485-485"];
m1_360 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs", label="return null;", span="487-487"];
m1_361 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="476-476"];
m1_74 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", span="116-116"];
m1_75 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="return UseConnection<IList<ServerDto>>(connection =>\r\n            {\r\n                var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList();\r\n\r\n                var result = new List<ServerDto>();\r\n\r\n                foreach (var server in servers)\r\n                {\r\n                    var data = JobHelper.FromJson<ServerData>(server.Data);\r\n                    result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", span="118-140"];
m1_76 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", span="116-116"];
m1_204 [cluster="Unk.QueryMultiple", file="SqlServerMonitoringApi.cs", label="Entry Unk.QueryMultiple", span=""];
m1_19 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="422-422"];
m1_334 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="SqlServerMonitoringApi.cs", label="var provider = _storage.QueueProviders.GetProvider(queueName)", span="424-424"];
m1_335 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="SqlServerMonitoringApi.cs", label="var monitoringApi = provider.GetJobQueueMonitoringApi()", span="425-425"];
m1_336 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="SqlServerMonitoringApi.cs", label="return monitoringApi;", span="427-427"];
m1_337 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="422-422"];
m1_38 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="76-76"];
m1_39 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                }));", span="78-87"];
m1_40 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="76-76"];
m1_51 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="90-90"];
m1_52 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                }));", span="92-101"];
m1_53 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="90-90"];
m1_207 [cluster="Hangfire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="22-22"];
m1_68 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="110-110"];
m1_69 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => \r\n                GetTimelineStats(connection, ''failed''));", span="112-113"];
m1_70 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="110-110"];
m1_178 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="238-238"];
m1_179 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''succeeded''));", span="240-241"];
m1_180 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="238-238"];
m1_289 [cluster="string.Format(string, object, object)", file="SqlServerMonitoringApi.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m1_338 [cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m1_133 [cluster="Unk.SelectMany", file="SqlServerMonitoringApi.cs", label="Entry Unk.SelectMany", span=""];
m1_206 [cluster="Unk.ToDictionary", file="SqlServerMonitoringApi.cs", label="Entry Unk.ToDictionary", span=""];
m1_77 [cluster="Unk.>", file="SqlServerMonitoringApi.cs", label="Entry Unk.>", span=""];
m1_137 [cluster="Unk.GetEnqueuedJobIds", file="SqlServerMonitoringApi.cs", label="Entry Unk.GetEnqueuedJobIds", span=""];
m1_100 [cluster="Hangfire.Common.JobHelper.DeserializeNullableDateTime(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Common.JobHelper.DeserializeNullableDateTime(string)", span="84-84"];
m1_134 [cluster="Unk.OrderBy", file="SqlServerMonitoringApi.cs", label="Entry Unk.OrderBy", span=""];
m1_138 [cluster="Unk.GetEnqueuedAndFetchedCount", file="SqlServerMonitoringApi.cs", label="Entry Unk.GetEnqueuedAndFetchedCount", span=""];
m1_14 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="48-48"];
m1_15 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs", label="var queueApi = GetQueueApi(queue)", span="50-50"];
m1_16 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs", label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="51-51"];
m1_17 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs", label="return counters.EnqueuedCount ?? 0;", span="53-53"];
m1_18 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="48-48"];
m1_147 [cluster="Unk.GetQueues", file="SqlServerMonitoringApi.cs", label="Entry Unk.GetQueues", span=""];
m1_61 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="104-104"];
m1_62 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => \r\n                GetTimelineStats(connection, ''succeeded''));", span="106-107"];
m1_63 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="104-104"];
m1_326 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_67 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", span="372-372"];
m1_293 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="var endDate = DateTime.UtcNow.Date", span="376-376"];
m1_300 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="var keyMaps = dates.ToDictionary(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd'')), x => x)", span="384-384"];
m1_301 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="return GetTimelineStats(connection, keyMaps);", span="386-386"];
m1_294 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="var dates = new List<DateTime>()", span="377-377"];
m1_297 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="dates.Add(endDate)", span="380-380"];
m1_298 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="endDate = endDate.AddDays(-1)", span="381-381"];
m1_295 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="var i = 0", span="378-378"];
m1_296 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="i < 7", span="378-378"];
m1_299 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="i++", span="378-378"];
m1_302 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", span="372-372"];
m1_255 [cluster="Hangfire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18"];
m1_48 [cluster="Hangfire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="23-23"];
m1_310 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", span="389-389"];
m1_311 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="string sqlQuery = @''\r\nselect s.[Key], sum(s.[Value]) as [Count] from (\r\n    select [Key], sum([Value]) as [Value] from HangFire.Counter \r\n	group by [Key]\r\n	having [Key] in @keys\r\n    union all\r\n    select [Key], [Value] from HangFire.AggregatedCounter \r\n	where [Key] in @keys\r\n) as s group by [Key];''", span="392-400"];
m1_312 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="var valuesMap = connection.Query(\r\n                sqlQuery,\r\n                new { keys = keyMaps.Keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="402-405"];
m1_313 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="keyMaps.Keys", span="407-407"];
m1_318 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="i < keyMaps.Count", span="413-413"];
m1_319 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="var value = valuesMap[keyMaps.ElementAt(i).Key]", span="415-415"];
m1_320 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="result.Add(keyMaps.ElementAt(i).Value, value)", span="416-416"];
m1_314 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="!valuesMap.ContainsKey(key)", span="409-409"];
m1_315 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="valuesMap.Add(key, 0)", span="409-409"];
m1_316 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="var result = new Dictionary<DateTime, long>()", span="412-412"];
m1_317 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="var i = 0", span="413-413"];
m1_322 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="return result;", span="419-419"];
m1_321 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="i++", span="413-413"];
m1_323 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", span="389-389"];
m1_239 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m1_132 [cluster="Unk.Select", file="SqlServerMonitoringApi.cs", label="Entry Unk.Select", span=""];
m1_377 [cluster="System.Collections.Generic.List<T>.List(int)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m1_258 [cluster="Unk.Single", file="SqlServerMonitoringApi.cs", label="Entry Unk.Single", span=""];
m1_158 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="222-222"];
m1_159 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="var queueApi = GetQueueApi(queue)", span="224-224"];
m1_160 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="var enqueuedJobIds = queueApi.GetEnqueuedJobIds(queue, from, perPage)", span="225-225"];
m1_161 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => EnqueuedJobs(connection, enqueuedJobIds));", span="227-227"];
m1_162 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="222-222"];
m1_205 [cluster="Unk.SingleOrDefault", file="SqlServerMonitoringApi.cs", label="Entry Unk.SingleOrDefault", span=""];
m1_32 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="SqlServerMonitoringApi.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="70-70"];
m1_33 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="SqlServerMonitoringApi.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ProcessingState.StateName));", span="72-73"];
m1_34 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="SqlServerMonitoringApi.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="70-70"];
m1_208 [cluster="Unk.DeserializeJob", file="SqlServerMonitoringApi.cs", label="Entry Unk.DeserializeJob", span=""];
m1_393 [file="SqlServerMonitoringApi.cs", label="Hangfire.SqlServer.SqlServerMonitoringApi", span=""];
m1_394 [file="SqlServerMonitoringApi.cs", label=int, span=""];
m1_395 [file="SqlServerMonitoringApi.cs", label=int, span=""];
m1_396 [file="SqlServerMonitoringApi.cs", label=int, span=""];
m1_397 [file="SqlServerMonitoringApi.cs", label=int, span=""];
m1_398 [file="SqlServerMonitoringApi.cs", label=int, span=""];
m1_399 [file="SqlServerMonitoringApi.cs", label=int, span=""];
m1_400 [file="SqlServerMonitoringApi.cs", label=int, span=""];
m1_401 [file="SqlServerMonitoringApi.cs", label=int, span=""];
m1_402 [file="SqlServerMonitoringApi.cs", label=int, span=""];
m1_403 [file="SqlServerMonitoringApi.cs", label=int, span=""];
m1_404 [file="SqlServerMonitoringApi.cs", label=enqueuedJobIds, span=""];
m1_405 [file="SqlServerMonitoringApi.cs", label=enqueuedJobIds, span=""];
m1_406 [file="SqlServerMonitoringApi.cs", label=fetchedJobIds, span=""];
m1_407 [file="SqlServerMonitoringApi.cs", label=string, span=""];
m1_408 [file="SqlServerMonitoringApi.cs", label=sql, span=""];
m1_409 [file="SqlServerMonitoringApi.cs", label=countByStates, span=""];
m1_410 [file="SqlServerMonitoringApi.cs", label=string, span=""];
m1_411 [file="SqlServerMonitoringApi.cs", label=string, span=""];
n61 -> n8  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
n61 -> n9  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
n61 -> n13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
n61 -> n58  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
n62 -> n19  [color=darkseagreen4, key=1, label=sqlQuery, style=dashed];
n7 -> n19  [color=darkseagreen4, key=1, label=sqlQuery, style=dashed];
n10 -> n18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n19 -> n24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n29 -> n31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n32 -> n35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n40 -> n42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n43 -> n45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n50 -> n52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_50 -> m0_55  [color=darkseagreen4, key=1, label=type, style=dashed];
m0_51 -> m0_55  [color=darkseagreen4, key=1, label=method, style=dashed];
m0_52 -> m0_55  [color=darkseagreen4, key=1, label=parameterTypes, style=dashed];
m0_53 -> m0_55  [color=darkseagreen4, key=1, label=args, style=dashed];
m0_25 -> m0_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_6 -> m0_10  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_10 -> m0_10  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_17 -> m0_25  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_17 -> m0_41  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_17 -> m0_46  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_26 -> m0_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_26 -> m0_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_24 -> m0_27  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m0_57 -> m0_41  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m0_57 -> m0_46  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m1_44 -> m1_366  [color=darkseagreen4, key=1, label="System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m1_27 -> m1_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_368 -> m1_370  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>", style=dashed];
m1_369 -> m1_374  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_369 -> m1_375  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_370 -> m1_374  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_227 -> m1_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_186 -> m1_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_235 -> m1_269  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_170 -> m1_175  [color=darkseagreen4, key=1, label=fetchedJobIds, style=dashed];
m1_171 -> m1_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_184 -> m1_286  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_184 -> m1_281  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m1_273 -> m1_277  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m1_280 -> m1_285  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_280 -> m1_290  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_274 -> m1_277  [color=darkseagreen4, key=1, label=dates, style=dashed];
m1_275 -> m1_279  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_279 -> m1_279  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_123 -> m1_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_123 -> m1_144  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_123 -> m1_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_123 -> m1_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_123 -> m1_125  [color=darkseagreen4, key=1, label=tuples, style=dashed];
m1_124 -> m1_130  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_126 -> m1_155  [color=darkseagreen4, key=1, label=enqueuedJobIds, style=dashed];
m1_128 -> m1_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_113 -> m1_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_42 -> m1_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_55 -> m1_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_79 -> m1_81  [color=darkseagreen4, key=1, label=servers, style=dashed];
m1_80 -> m1_84  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_94 -> m1_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_105 -> m1_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_116 -> m1_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_200 -> m1_209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_200 -> m1_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_201 -> m1_215  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_241 -> m1_253  [color=darkseagreen4, key=1, label=stats, style=dashed];
m1_102 -> m1_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_383 -> m1_385  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m1_384 -> m1_387  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_192 -> m1_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_7 -> m1_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_344 -> m1_347  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_221 -> m1_223  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_91 -> m1_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_356 -> m1_358  [color=darkseagreen4, key=1, label=data, style=dashed];
m1_75 -> m1_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_39 -> m1_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_52 -> m1_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_69 -> m1_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_179 -> m1_181  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_62 -> m1_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_67 -> m1_305  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_67 -> m1_301  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m1_293 -> m1_297  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m1_300 -> m1_304  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_300 -> m1_307  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_294 -> m1_297  [color=darkseagreen4, key=1, label=dates, style=dashed];
m1_295 -> m1_299  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_299 -> m1_299  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_310 -> m1_313  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, System.DateTime>", style=dashed];
m1_310 -> m1_318  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, System.DateTime>", style=dashed];
m1_310 -> m1_320  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, System.DateTime>", style=dashed];
m1_312 -> m1_328  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_312 -> m1_331  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_312 -> m1_314  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m1_312 -> m1_315  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m1_313 -> m1_315  [color=darkseagreen4, key=1, label=key, style=dashed];
m1_316 -> m1_320  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_316 -> m1_322  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_317 -> m1_320  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_317 -> m1_321  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_321 -> m1_321  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_160 -> m1_165  [color=darkseagreen4, key=1, label=enqueuedJobIds, style=dashed];
m1_161 -> m1_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_33 -> m1_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_393 -> m1_7  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_11  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_27  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_30  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_33  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_36  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_62  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_65  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_69  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_72  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_155  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_161  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_165  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_171  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_175  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_179  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_182  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_186  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_189  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_221  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_224  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_227  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_230  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_281  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_301  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_339  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_393 -> m1_366  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m1_404 -> m1_155  [color=darkseagreen4, key=1, label=enqueuedJobIds, style=dashed];
m1_405 -> m1_165  [color=darkseagreen4, key=1, label=enqueuedJobIds, style=dashed];
m1_406 -> m1_175  [color=darkseagreen4, key=1, label=fetchedJobIds, style=dashed];
m1_410 -> m1_286  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_411 -> m1_305  [color=darkseagreen4, key=1, label=string, style=dashed];
}
