digraph  {
n61 [label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", span=""];
n62 [label=sqlQuery, span=""];
n63 [label=string, span=""];
n64 [label=int, span=""];
n65 [label=int, span=""];
n66 [label=sqlQuery, span=""];
n67 [label=string, span=""];
n68 [label=int, span=""];
n69 [label=int, span=""];
n70 [label=fetchedJobsSql, span=""];
n71 [label=string, span=""];
n72 [label=sqlQuery, span=""];
n0 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="36-36", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)"];
n1 [label="storage == null", span="38-38", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)"];
n3 [label="_storage = storage", span="39-39", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)"];
n2 [label="throw new ArgumentNullException(''storage'');", span="38-38", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)"];
n4 [label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="36-36", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)"];
n5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n6 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", span="42-42", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()"];
n7 [label="string sqlQuery = @''select distinct(Queue) from HangFire.JobQueue''", span="44-44", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()"];
n8 [label=_cacheLock, span="46-46", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()"];
n10 [label="var result = UseTransaction(connection =>\r\n                    {\r\n                        return connection.Query(sqlQuery).Select(x => (string) x.Queue).ToList();\r\n                    })", span="50-53", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()"];
n19 [label="return connection.Query(sqlQuery).Select(x => (string) x.Queue).ToList();", span="52-52", cluster="lambda expression"];
n9 [label="_queuesCache.Count == 0 || _cacheUpdated.Add(QueuesCacheTimeout) < DateTime.UtcNow", span="48-48", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()"];
n13 [label="return _queuesCache.ToList();", span="59-59", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()"];
n15 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)"];
n11 [label="_queuesCache = result", span="55-55", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()"];
n16 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", span="132-132", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)"];
n18 [label="Entry lambda expression", span="50-53", cluster="lambda expression"];
n12 [label="_cacheUpdated = DateTime.UtcNow", span="56-56", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()"];
n14 [label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", span="42-42", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()"];
n17 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()"];
n20 [label="Exit lambda expression", span="50-53", cluster="lambda expression"];
n21 [label="Entry Unk.Query", span="", cluster="Unk.Query"];
n22 [label="Entry Unk.Select", span="", cluster="Unk.Select"];
n23 [label="Entry Unk.ToList", span="", cluster="Unk.ToList"];
n24 [label="Entry lambda expression", span="52-52", cluster="lambda expression"];
n25 [label="(string) x.Queue", span="52-52", cluster="lambda expression"];
n26 [label="Exit lambda expression", span="52-52", cluster="lambda expression"];
n27 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="63-63", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)"];
n28 [label="string sqlQuery = @''\r\nselect r.Id from (\r\n  select j.Id, row_number() over (order by j.Id) as row_num \r\n  from HangFire.JobQueue jq\r\n  left join HangFire.Job j on jq.JobId = j.Id\r\n  left join HangFire.State s on s.Id = j.StateId\r\n  where jq.Queue = @queue and jq.FetchedAt is null\r\n) as r\r\nwhere r.row_num between @start and @end''", span="65-73", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", color=red, community=0];
n29 [label="return UseTransaction(connection =>\r\n            {\r\n                return connection.Query<JobIdDto>(\r\n                    sqlQuery,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();\r\n            });", span="75-83", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)"];
n32 [label="return connection.Query<JobIdDto>(\r\n                    sqlQuery,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();", span="77-82", cluster="lambda expression"];
n30 [label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="63-63", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)"];
n31 [label="Entry lambda expression", span="75-83", cluster="lambda expression"];
n33 [label="Exit lambda expression", span="75-83", cluster="lambda expression"];
n34 [label="Entry Unk.>", span="", cluster="Unk.>"];
n35 [label="Entry lambda expression", span="81-81", cluster="lambda expression"];
n36 [label="x.Id", span="81-81", cluster="lambda expression"];
n37 [label="Exit lambda expression", span="81-81", cluster="lambda expression"];
n38 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="86-86", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)"];
n39 [label="string fetchedJobsSql = @''\r\nselect r.Id from (\r\n  select j.Id, jq.FetchedAt, row_number() over (order by j.Id) as row_num \r\n  from HangFire.JobQueue jq\r\n  left join HangFire.Job j on jq.JobId = j.Id\r\n  where jq.Queue = @queue and jq.FetchedAt is not null\r\n) as r\r\nwhere r.row_num between @start and @end''", span="88-95", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)"];
n40 [label="return UseTransaction(connection =>\r\n            {\r\n                return connection.Query<JobIdDto>(\r\n                    fetchedJobsSql,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();\r\n            });", span="97-105", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)"];
n43 [label="return connection.Query<JobIdDto>(\r\n                    fetchedJobsSql,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();", span="99-104", cluster="lambda expression"];
n41 [label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="86-86", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)"];
n42 [label="Entry lambda expression", span="97-105", cluster="lambda expression"];
n44 [label="Exit lambda expression", span="97-105", cluster="lambda expression"];
n45 [label="Entry lambda expression", span="103-103", cluster="lambda expression"];
n46 [label="x.Id", span="103-103", cluster="lambda expression"];
n47 [label="Exit lambda expression", span="103-103", cluster="lambda expression"];
n48 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="108-108", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)"];
n49 [label="string sqlQuery = @''\r\nselect sum(Enqueued) as EnqueuedCount, sum(Fetched) as FetchedCount \r\nfrom (\r\n    select \r\n	    case when FetchedAt is null then 1 else 0 end as Enqueued,\r\n	    case when FetchedAt is not null then 1 else 0 end as Fetched\r\n    from HangFire.JobQueue\r\n    where Queue = @queue\r\n) q''", span="110-118", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)"];
n50 [label="return UseTransaction(connection =>\r\n            {\r\n                var result = connection.Query(sqlQuery, new { queue = queue }).Single();\r\n\r\n                return new EnqueuedAndFetchedCountDto\r\n                {\r\n                    EnqueuedCount = result.EnqueuedCount,\r\n                    FetchedCount = result.FetchedCount\r\n                };\r\n            });", span="120-129", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)"];
n53 [label="var result = connection.Query(sqlQuery, new { queue = queue }).Single()", span="122-122", cluster="lambda expression"];
n51 [label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="108-108", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)"];
n52 [label="Entry lambda expression", span="120-129", cluster="lambda expression"];
n54 [label="return new EnqueuedAndFetchedCountDto\r\n                {\r\n                    EnqueuedCount = result.EnqueuedCount,\r\n                    FetchedCount = result.FetchedCount\r\n                };", span="124-128", cluster="lambda expression"];
n56 [label="Entry Unk.Single", span="", cluster="Unk.Single"];
n55 [label="Exit lambda expression", span="120-129", cluster="lambda expression"];
n57 [label="Entry Hangfire.SqlServer.EnqueuedAndFetchedCountDto.EnqueuedAndFetchedCountDto()", span="18-18", cluster="Hangfire.SqlServer.EnqueuedAndFetchedCountDto.EnqueuedAndFetchedCountDto()"];
n58 [label="return _storage.UseTransaction(func, IsolationLevel.ReadUncommitted);", span="134-134", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)"];
n59 [label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", span="132-132", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)"];
n60 [label="Entry Unk.UseTransaction", span="", cluster="Unk.UseTransaction"];
m0_35 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="SqlServerJobQueueProvider.cs"];
m0_43 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerJobQueueProvider.cs"];
m0_0 [label="Entry HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", span="17-17", cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="SqlServerJobQueueProvider.cs"];
m0_1 [label="_redis = redis", span="22-22", cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="SqlServerJobQueueProvider.cs"];
m0_2 [label="_queueNames = queueNames.ToList()", span="23-23", cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="SqlServerJobQueueProvider.cs"];
m0_3 [label="_fetchTimeout = fetchTimeout", span="24-24", cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", color=red, community=0, file="SqlServerJobQueueProvider.cs"];
m0_4 [label="Exit HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", span="17-17", cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="SqlServerJobQueueProvider.cs"];
m0_38 [label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string)", span="4-4", cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string)", file="SqlServerJobQueueProvider.cs"];
m0_48 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="SqlServerJobQueueProvider.cs"];
m0_36 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="SqlServerJobQueueProvider.cs"];
m0_34 [label="Entry Unk.PopAndPushItemBetweenLists", span="", cluster="Unk.PopAndPushItemBetweenLists", file="SqlServerJobQueueProvider.cs"];
m0_49 [label="Entry lambda expression", span="92-99", cluster="lambda expression", file="SqlServerJobQueueProvider.cs"];
m0_41 [label="x.SetEntryInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Fetched'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="81-84", cluster="lambda expression", file="SqlServerJobQueueProvider.cs"];
m0_46 [label="x.GetValuesFromHash(\r\n                        RedisStorage.Prefix + String.Format(''job:{0}'', jobId),\r\n                        new[] { ''Type'', ''Args'', ''Method'', ''Arguments'', ''ParameterTypes'' })", span="89-91", cluster="lambda expression", file="SqlServerJobQueueProvider.cs"];
m0_40 [label="Entry lambda expression", span="81-84", cluster="lambda expression", file="SqlServerJobQueueProvider.cs"];
m0_45 [label="Entry lambda expression", span="89-91", cluster="lambda expression", file="SqlServerJobQueueProvider.cs"];
m0_42 [label="Exit lambda expression", span="81-84", cluster="lambda expression", file="SqlServerJobQueueProvider.cs"];
m0_47 [label="Exit lambda expression", span="89-91", cluster="lambda expression", file="SqlServerJobQueueProvider.cs"];
m0_50 [label="type = x[0]", span="94-94", cluster="lambda expression", file="SqlServerJobQueueProvider.cs"];
m0_51 [label="method = x[2]", span="95-95", cluster="lambda expression", file="SqlServerJobQueueProvider.cs"];
m0_52 [label="parameterTypes = x[4]", span="96-96", cluster="lambda expression", file="SqlServerJobQueueProvider.cs"];
m0_53 [label="args = x[1]", span="97-97", cluster="lambda expression", file="SqlServerJobQueueProvider.cs"];
m0_54 [label="arguments = x[3]", span="98-98", cluster="lambda expression", file="SqlServerJobQueueProvider.cs"];
m0_55 [label="Exit lambda expression", span="92-99", cluster="lambda expression", file="SqlServerJobQueueProvider.cs"];
m0_39 [label="Entry HangFire.Server.JobPayload.JobPayload(string, string, HangFire.Storage.InvocationData)", span="23-23", cluster="HangFire.Server.JobPayload.JobPayload(string, string, HangFire.Storage.InvocationData)", file="SqlServerJobQueueProvider.cs"];
m0_44 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="SqlServerJobQueueProvider.cs"];
m0_32 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SqlServerJobQueueProvider.cs"];
m0_37 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="SqlServerJobQueueProvider.cs"];
m0_33 [label="Entry Unk.BlockingPopAndPushItemBetweenLists", span="", cluster="Unk.BlockingPopAndPushItemBetweenLists", file="SqlServerJobQueueProvider.cs"];
m0_31 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="SqlServerJobQueueProvider.cs"];
m0_25 [label="pipeline.QueueCommand(x => x.SetEntryInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Fetched'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow)))", span="81-84", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs"];
m0_6 [label="Entry HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="27-27", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs"];
m0_7 [label="string jobId", span="29-29", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs"];
m0_10 [label="cancellationToken.ThrowIfCancellationRequested()", span="35-35", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs"];
m0_8 [label="string queueName", span="30-30", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs"];
m0_9 [label="var queueIndex = 0", span="31-31", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs"];
m0_11 [label="queueIndex = (queueIndex + 1) % _queueNames.Count", span="37-37", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=red, community=0, file="SqlServerJobQueueProvider.cs"];
m0_12 [label="queueName = _queueNames[queueIndex]", span="38-38", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs"];
m0_15 [label="queueIndex == 0", span="43-43", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs"];
m0_13 [label="var queueKey = RedisStorage.Prefix + String.Format(''queue:{0}'', queueName)", span="40-40", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=red, community=0, file="SqlServerJobQueueProvider.cs"];
m0_14 [label="var fetchedKey = RedisStorage.Prefix + String.Format(''queue:{0}:dequeued'', queueName)", span="41-41", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs"];
m0_29 [label="return new JobPayload(jobId, queueName, invocationData)\r\n            {\r\n                Args = args,\r\n                Arguments = arguments\r\n            };", span="110-114", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs"];
m0_16 [label="jobId = _redis.BlockingPopAndPushItemBetweenLists(\r\n                        queueKey,\r\n                        fetchedKey,\r\n                        _fetchTimeout)", span="45-48", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=red, community=0, file="SqlServerJobQueueProvider.cs"];
m0_17 [label="jobId = _redis.PopAndPushItemBetweenLists(\r\n                        queueKey, fetchedKey)", span="52-53", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs"];
m0_18 [label="jobId == null", span="56-56", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs"];
m0_26 [label="pipeline.QueueCommand(\r\n                    x => x.GetValuesFromHash(\r\n                        RedisStorage.Prefix + String.Format(''job:{0}'', jobId),\r\n                        new[] { ''Type'', ''Args'', ''Method'', ''Arguments'', ''ParameterTypes'' }),\r\n                    x =>\r\n                    {\r\n                        type = x[0];\r\n                        method = x[2];\r\n                        parameterTypes = x[4];\r\n                        args = x[1];\r\n                        arguments = x[3];\r\n                    })", span="88-99", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs"];
m0_19 [label="string type = null", span="73-73", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs"];
m0_20 [label="string method = null", span="74-74", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs"];
m0_21 [label="string parameterTypes = null", span="75-75", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs"];
m0_22 [label="string arguments = null", span="76-76", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs"];
m0_23 [label="string args = null", span="77-77", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs"];
m0_24 [label="var pipeline = _redis.CreatePipeline()", span="79-79", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs"];
m0_27 [label="pipeline.Flush()", span="101-101", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs"];
m0_28 [label="var invocationData = new InvocationData(type, method, parameterTypes)", span="108-108", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs"];
m0_30 [label="Exit HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="27-27", cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerJobQueueProvider.cs"];
m0_56 [label="HangFire.Redis.RedisJobFetcher", span="", file="SqlServerJobQueueProvider.cs"];
m0_57 [label=jobId, span="", file="SqlServerJobQueueProvider.cs"];
m1_87 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="SqlServerMonitoringApi.cs"];
m1_363 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="SqlServerMonitoringApi.cs"];
m1_111 [label="Entry long.Parse(string)", span="0-0", cluster="long.Parse(string)", file="SqlServerMonitoringApi.cs"];
m1_378 [label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0", cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="SqlServerMonitoringApi.cs"];
m1_88 [label="Entry Hangfire.Storage.Monitoring.ServerDto.ServerDto()", span="21-21", cluster="Hangfire.Storage.Monitoring.ServerDto.ServerDto()", file="SqlServerMonitoringApi.cs"];
m1_44 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="491-491", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m1_364 [label="string jobsSql = @''\r\nselect * from (\r\n  select j.*, s.Reason as StateReason, s.Data as StateData, row_number() over (order by j.Id desc) as row_num\r\n  from HangFire.Job j\r\n  left join HangFire.State s on j.StateId = s.Id\r\n  where j.StateName = @stateName\r\n) as j where j.row_num between @start and @end\r\n''", span="498-505", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m1_365 [label="var jobs = connection.Query<SqlJob>(\r\n                        jobsSql,\r\n                        new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                        .ToList()", span="507-510", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m1_366 [label="return DeserializeJobs(jobs, selector);", span="512-512", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m1_367 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="491-491", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m1_379 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="SqlServerMonitoringApi.cs"];
m1_26 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="64-64", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="SqlServerMonitoringApi.cs"];
m1_27 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, FailedState.StateName));", span="66-67", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="SqlServerMonitoringApi.cs"];
m1_28 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="64-64", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="SqlServerMonitoringApi.cs"];
m1_139 [label="Entry Hangfire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="18-18", cluster="Hangfire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="SqlServerMonitoringApi.cs"];
m1_99 [label="Entry Hangfire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="23-23", cluster="Hangfire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="SqlServerMonitoringApi.cs"];
m1_368 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="515-515", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m1_369 [label="var result = new List<KeyValuePair<string, TDto>>(jobs.Count)", span="519-519", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m1_370 [label=jobs, span="521-521", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m1_373 [label="var dto = selector(job, DeserializeJob(job.InvocationData, job.Arguments), stateData)", span="528-528", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m1_374 [label="result.Add(new KeyValuePair<string, TDto>(\r\n                    job.Id.ToString(), dto))", span="530-531", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m1_375 [label="return new JobList<TDto>(result);", span="534-534", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m1_371 [label="var deserializedData = JobHelper.FromJson<Dictionary<string, string>>(job.StateData)", span="523-523", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m1_372 [label="var stateData = deserializedData != null\r\n                    ? new Dictionary<string, string>(deserializedData, StringComparer.OrdinalIgnoreCase)\r\n                    : null", span="524-526", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m1_376 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="515-515", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs"];
m1_13 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", span="463-463", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_351 [label="string sqlQuery = @''\r\nselect count(Id) from HangFire.Job where StateName = @state''", span="465-466", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_352 [label="var count = connection.Query<int>(\r\n                 sqlQuery,\r\n                 new { state = stateName })\r\n                 .Single()", span="468-471", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_353 [label="return count;", span="473-473", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_354 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", span="463-463", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_226 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="298-298", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="SqlServerMonitoringApi.cs"];
m1_227 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, DeletedState.StateName));", span="300-301", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="SqlServerMonitoringApi.cs"];
m1_228 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="298-298", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="SqlServerMonitoringApi.cs"];
m1_391 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="SqlServerMonitoringApi.cs"];
m1_9 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="430-430", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerMonitoringApi.cs"];
m1_339 [label="return _storage.UseTransaction(action, IsolationLevel.ReadUncommitted);", span="432-432", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerMonitoringApi.cs"];
m1_340 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="430-430", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerMonitoringApi.cs"];
m1_238 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="SqlServerMonitoringApi.cs"];
m1_185 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="244-244", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs"];
m1_186 [label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''failed''));", span="246-247", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs"];
m1_187 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="244-244", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs"];
m1_346 [label="Entry Unk.DeserializeJobs", span="", cluster="Unk.DeserializeJobs", file="SqlServerMonitoringApi.cs"];
m1_232 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="304-304", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m1_233 [label="string sql = @''\r\nselect StateName as [State], count(Id) as [Count] From HangFire.Job \r\ngroup by StateName\r\nhaving StateName is not null;\r\nselect count(Id) from HangFire.Server;\r\nselect sum(s.[Value]) from (\r\n    select sum([Value]) as [Value] from HangFire.Counter where [Key] = N'stats:succeeded'\r\n    union all\r\n    select [Value] from HangFire.AggregatedCounter where [Key] = N'stats:succeeded'\r\n) as s;\r\nselect sum(s.[Value]) from (\r\n    select sum([Value]) as [Value] from HangFire.Counter where [Key] = N'stats:deleted'\r\n    union all\r\n    select [Value] from HangFire.AggregatedCounter where [Key] = N'stats:deleted'\r\n) as s;\r\nselect count(*) from HangFire.[Set] where [Key] = N'recurring-jobs';\r\n''", span="306-322", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m1_234 [label="var statistics = UseConnection(connection =>\r\n            {\r\n                var stats = new StatisticsDto();\r\n                using (var multi = connection.QueryMultiple(sql))\r\n                {\r\n                    var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count);\r\n\r\n                    Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0;\r\n\r\n                    stats.Enqueued = getCountIfExists(EnqueuedState.StateName);\r\n                    stats.Failed = getCountIfExists(FailedState.StateName);\r\n                    stats.Processing = getCountIfExists(ProcessingState.StateName);\r\n                    stats.Scheduled = getCountIfExists(ScheduledState.StateName);\r\n\r\n                    stats.Servers = multi.Read<int>().Single();\r\n\r\n                    stats.Succeeded = multi.Read<long?>().SingleOrDefault() ?? 0;\r\n                    stats.Deleted = multi.Read<long?>().SingleOrDefault() ?? 0;\r\n\r\n                    stats.Recurring = multi.Read<int>().Single();\r\n                }\r\n                return stats;\r\n            })", span="324-346", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m1_235 [label="statistics.Queues = _storage.QueueProviders\r\n                .SelectMany(x => x.GetJobQueueMonitoringApi().GetQueues())\r\n                .Count()", span="348-350", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m1_236 [label="return statistics;", span="352-352", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m1_237 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="304-304", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs"];
m1_173 [label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="24-24", cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_168 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="230-230", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_169 [label="var queueApi = GetQueueApi(queue)", span="232-232", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_170 [label="var fetchedJobIds = queueApi.GetFetchedJobIds(queue, from, perPage)", span="233-233", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_171 [label="return UseConnection(connection => FetchedJobs(connection, fetchedJobIds));", span="235-235", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_172 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="230-230", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_184 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="355-355", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_273 [label="var endDate = DateTime.UtcNow", span="359-359", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_280 [label="var keyMaps = dates.ToDictionary(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH'')), x => x)", span="367-367", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_281 [label="return GetTimelineStats(connection, keyMaps);", span="369-369", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_274 [label="var dates = new List<DateTime>()", span="360-360", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_277 [label="dates.Add(endDate)", span="363-363", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_278 [label="endDate = endDate.AddHours(-1)", span="364-364", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_275 [label="var i = 0", span="361-361", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_276 [label="i < 24", span="361-361", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_279 [label="i++", span="361-361", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_282 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="355-355", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_256 [label="Entry Unk.Read", span="", cluster="Unk.Read", file="SqlServerMonitoringApi.cs"];
m1_268 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="SqlServerMonitoringApi.cs"];
m1_110 [label="Entry Hangfire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="23-23", cluster="Hangfire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="SqlServerMonitoringApi.cs"];
m1_157 [label="Entry Unk.EnqueuedJobs", span="", cluster="Unk.EnqueuedJobs", file="SqlServerMonitoringApi.cs"];
m1_392 [label="Entry Hangfire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21", cluster="Hangfire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="SqlServerMonitoringApi.cs"];
m1_272 [label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", span="22-22", cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", file="SqlServerMonitoringApi.cs"];
m1_163 [label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="23-23", cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_143 [label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi()", span="21-21", cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi()", file="SqlServerMonitoringApi.cs"];
m1_49 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SqlServerMonitoringApi.cs"];
m1_257 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="SqlServerMonitoringApi.cs"];
m1_380 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="SqlServerMonitoringApi.cs"];
m1_341 [label="Entry Unk.UseTransaction", span="", cluster="Unk.UseTransaction", file="SqlServerMonitoringApi.cs"];
m1_122 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", span="193-193", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m1_123 [label="var tuples = _storage.QueueProviders\r\n                .Select(x => x.GetJobQueueMonitoringApi())\r\n                .SelectMany(x => x.GetQueues(), (monitoring, queue) => new { Monitoring = monitoring, Queue = queue })\r\n                .OrderBy(x => x.Queue)\r\n                .ToArray()", span="195-199", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m1_124 [label="var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length)", span="201-201", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m1_125 [label=tuples, span="203-203", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m1_129 [label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = tuple.Queue,\r\n                    Length = counters.EnqueuedCount ?? 0,\r\n                    Fetched = counters.FetchedCount,\r\n                    FirstJobs = firstJobs\r\n                })", span="210-216", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m1_130 [label="return result;", span="219-219", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m1_126 [label="var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue, 0, 5)", span="205-205", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m1_127 [label="var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue)", span="206-206", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m1_128 [label="var firstJobs = UseConnection(connection => EnqueuedJobs(connection, enqueuedJobIds))", span="208-208", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m1_131 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", span="193-193", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs"];
m1_135 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="SqlServerMonitoringApi.cs"];
m1_303 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="SqlServerMonitoringApi.cs"];
m1_219 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", file="SqlServerMonitoringApi.cs"];
m1_362 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="SqlServerMonitoringApi.cs"];
m1_112 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="179-179", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m1_113 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                }));", span="181-190", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m1_114 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="179-179", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m1_284 [label="Entry Unk.GetTimelineStats", span="", cluster="Unk.GetTimelineStats", file="SqlServerMonitoringApi.cs"];
m1_218 [label="Entry Hangfire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21", cluster="Hangfire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="SqlServerMonitoringApi.cs"];
m1_347 [label="Entry lambda expression", span="453-460", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_10 [label="Entry lambda expression", span="44-45", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_11 [label="GetNumberOfJobsByStateName(connection, ScheduledState.StateName)", span="45-45", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_12 [label="Exit lambda expression", span="44-45", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_29 [label="Entry lambda expression", span="66-67", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_30 [label="GetNumberOfJobsByStateName(connection, FailedState.StateName)", span="67-67", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_31 [label="Exit lambda expression", span="66-67", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_35 [label="Entry lambda expression", span="72-73", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_36 [label="GetNumberOfJobsByStateName(connection, ProcessingState.StateName)", span="73-73", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_37 [label="Exit lambda expression", span="72-73", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_42 [label="GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                })", span="78-87", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_41 [label="Entry lambda expression", span="78-87", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_43 [label="Exit lambda expression", span="78-87", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_45 [label="Entry lambda expression", span="82-87", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_46 [label="new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                }", span="82-87", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_47 [label="Exit lambda expression", span="82-87", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_55 [label="GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                })", span="92-101", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_54 [label="Entry lambda expression", span="92-101", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_56 [label="Exit lambda expression", span="92-101", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_57 [label="Entry lambda expression", span="96-101", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_58 [label="new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                }", span="96-101", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_59 [label="Exit lambda expression", span="96-101", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_64 [label="Entry lambda expression", span="106-107", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_65 [label="GetTimelineStats(connection, ''succeeded'')", span="107-107", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_66 [label="Exit lambda expression", span="106-107", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_71 [label="Entry lambda expression", span="112-113", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_72 [label="GetTimelineStats(connection, ''failed'')", span="113-113", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_73 [label="Exit lambda expression", span="112-113", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_78 [label="Entry lambda expression", span="118-140", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_79 [label="var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList()", span="120-122", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_80 [label="var result = new List<ServerDto>()", span="124-124", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_81 [label=servers, span="126-126", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_83 [label="result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    })", span="129-136", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_84 [label="return result;", span="139-139", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_82 [label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="128-128", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_85 [label="Exit lambda expression", span="118-140", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_94 [label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                })", span="145-158", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_93 [label="Entry lambda expression", span="145-158", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_95 [label="Exit lambda expression", span="145-158", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_96 [label="Entry lambda expression", span="150-158", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_97 [label="new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }", span="150-158", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_98 [label="Exit lambda expression", span="150-158", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_105 [label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                })", span="163-176", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_104 [label="Entry lambda expression", span="163-176", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_106 [label="Exit lambda expression", span="163-176", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_107 [label="Entry lambda expression", span="168-176", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_108 [label="new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }", span="168-176", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_109 [label="Exit lambda expression", span="168-176", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_116 [label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                })", span="181-190", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_115 [label="Entry lambda expression", span="181-190", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_117 [label="Exit lambda expression", span="181-190", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_118 [label="Entry lambda expression", span="186-190", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_119 [label="new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                }", span="186-190", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_120 [label="Exit lambda expression", span="186-190", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_140 [label="Entry lambda expression", span="196-196", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_144 [label="Entry lambda expression", span="197-197", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_148 [label="Entry lambda expression", span="197-197", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_151 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_155 [label="EnqueuedJobs(connection, enqueuedJobIds)", span="208-208", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_154 [label="Entry lambda expression", span="208-208", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_141 [label="x.GetJobQueueMonitoringApi()", span="196-196", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_142 [label="Exit lambda expression", span="196-196", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_145 [label="x.GetQueues()", span="197-197", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_146 [label="Exit lambda expression", span="197-197", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_149 [label="new { Monitoring = monitoring, Queue = queue }", span="197-197", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_150 [label="Exit lambda expression", span="197-197", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_152 [label="x.Queue", span="198-198", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_153 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_156 [label="Exit lambda expression", span="208-208", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_165 [label="EnqueuedJobs(connection, enqueuedJobIds)", span="227-227", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_164 [label="Entry lambda expression", span="227-227", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_166 [label="Exit lambda expression", span="227-227", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_175 [label="FetchedJobs(connection, fetchedJobIds)", span="235-235", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_174 [label="Entry lambda expression", span="235-235", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_176 [label="Exit lambda expression", span="235-235", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_181 [label="Entry lambda expression", span="240-241", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_182 [label="GetHourlyTimelineStats(connection, ''succeeded'')", span="241-241", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_183 [label="Exit lambda expression", span="240-241", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_188 [label="Entry lambda expression", span="246-247", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_189 [label="GetHourlyTimelineStats(connection, ''failed'')", span="247-247", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_190 [label="Exit lambda expression", span="246-247", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_196 [label="var multi = connection.QueryMultiple(sql, new { id = jobId })", span="260-260", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_194 [label="Entry lambda expression", span="252-289", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_195 [label="string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc''", span="255-258", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_197 [label="var job = multi.Read<SqlJob>().SingleOrDefault()", span="262-262", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_200 [label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="265-265", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_201 [label="var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            })\r\n                            .ToList()", span="266-278", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_198 [label="job == null", span="263-263", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_202 [label="return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        ExpireAt = job.ExpireAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };", span="280-287", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_199 [label="return null;", span="263-263", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_209 [label="Entry lambda expression", span="265-265", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_212 [label="Entry lambda expression", span="265-265", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_215 [label="Entry lambda expression", span="269-277", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_203 [label="Exit lambda expression", span="252-289", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_210 [label="x.Name", span="265-265", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_211 [label="Exit lambda expression", span="265-265", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_213 [label="x.Value", span="265-265", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_214 [label="Exit lambda expression", span="265-265", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_216 [label="new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            }", span="269-277", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_217 [label="Exit lambda expression", span="269-277", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_223 [label="Entry lambda expression", span="294-295", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_224 [label="GetNumberOfJobsByStateName(connection, SucceededState.StateName)", span="295-295", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_225 [label="Exit lambda expression", span="294-295", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_229 [label="Entry lambda expression", span="300-301", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_230 [label="GetNumberOfJobsByStateName(connection, DeletedState.StateName)", span="301-301", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_231 [label="Exit lambda expression", span="300-301", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_242 [label="var multi = connection.QueryMultiple(sql)", span="327-327", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_240 [label="Entry lambda expression", span="324-346", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_269 [label="Entry lambda expression", span="349-349", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_241 [label="var stats = new StatisticsDto()", span="326-326", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_245 [label="stats.Enqueued = getCountIfExists(EnqueuedState.StateName)", span="333-333", cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m1_246 [label="stats.Failed = getCountIfExists(FailedState.StateName)", span="334-334", cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m1_247 [label="stats.Processing = getCountIfExists(ProcessingState.StateName)", span="335-335", cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m1_248 [label="stats.Scheduled = getCountIfExists(ScheduledState.StateName)", span="336-336", cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m1_249 [label="stats.Servers = multi.Read<int>().Single()", span="338-338", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_250 [label="stats.Succeeded = multi.Read<long?>().SingleOrDefault() ?? 0", span="340-340", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_251 [label="stats.Deleted = multi.Read<long?>().SingleOrDefault() ?? 0", span="341-341", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_252 [label="stats.Recurring = multi.Read<int>().Single()", span="343-343", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_253 [label="return stats;", span="345-345", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_243 [label="var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count)", span="329-329", cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m1_244 [label="Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0", span="331-331", cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m1_259 [label="Entry lambda expression", span="329-329", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_262 [label="Entry lambda expression", span="329-329", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_266 [label="countByStates.ContainsKey(name) ? countByStates[name] : 0", span="331-331", cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m1_254 [label="Exit lambda expression", span="324-346", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_260 [label="x.State", span="329-329", cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m1_261 [label="Exit lambda expression", span="329-329", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_263 [label="x.Count", span="329-329", cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m1_264 [label="Exit lambda expression", span="329-329", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_265 [label="Entry lambda expression", span="331-331", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_267 [label="Exit lambda expression", span="331-331", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_270 [label="x.GetJobQueueMonitoringApi().GetQueues()", span="349-349", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_271 [label="Exit lambda expression", span="349-349", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_286 [label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="367-367", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_285 [label="Entry lambda expression", span="367-367", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_290 [label="Entry lambda expression", span="367-367", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_287 [label="Exit lambda expression", span="367-367", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_291 [label=x, span="367-367", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_292 [label="Exit lambda expression", span="367-367", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_305 [label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd''))", span="384-384", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_304 [label="Entry lambda expression", span="384-384", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_307 [label="Entry lambda expression", span="384-384", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_306 [label="Exit lambda expression", span="384-384", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_308 [label=x, span="384-384", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_309 [label="Exit lambda expression", span="384-384", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_328 [label="Entry lambda expression", span="405-405", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_331 [label="Entry lambda expression", span="405-405", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_329 [label="(string)x.Key", span="405-405", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_330 [label="Exit lambda expression", span="405-405", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_332 [label="(long)x.Count", span="405-405", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_333 [label="Exit lambda expression", span="405-405", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_348 [label="new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                }", span="453-460", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_349 [label="Exit lambda expression", span="453-460", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_89 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="SqlServerMonitoringApi.cs"];
m1_86 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="SqlServerMonitoringApi.cs"];
m1_327 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="SqlServerMonitoringApi.cs"];
m1_21 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="56-56", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SqlServerMonitoringApi.cs"];
m1_22 [label="var queueApi = GetQueueApi(queue)", span="58-58", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SqlServerMonitoringApi.cs"];
m1_23 [label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="59-59", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SqlServerMonitoringApi.cs"];
m1_24 [label="return counters.FetchedCount ?? 0;", span="61-61", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SqlServerMonitoringApi.cs"];
m1_25 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="56-56", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SqlServerMonitoringApi.cs"];
m1_381 [label="Entry Hangfire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="22-22", cluster="Hangfire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="SqlServerMonitoringApi.cs"];
m1_60 [label="Entry Hangfire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", span="23-23", cluster="Hangfire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", file="SqlServerMonitoringApi.cs"];
m1_288 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="SqlServerMonitoringApi.cs"];
m1_101 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="161-161", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m1_102 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }));", span="163-176", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m1_103 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="161-161", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m1_136 [label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span="", cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="SqlServerMonitoringApi.cs"];
m1_20 [label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="25-25", cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="SqlServerMonitoringApi.cs"];
m1_121 [label="Entry Hangfire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", span="7-7", cluster="Hangfire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", file="SqlServerMonitoringApi.cs"];
m1_177 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="537-537", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m1_382 [label="string fetchedJobsSql = @''\r\nselect j.*, jq.FetchedAt, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is not null''", span="541-546", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m1_383 [label="var jobs = connection.Query<SqlJob>(\r\n                fetchedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="548-551", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m1_384 [label="var result = new List<KeyValuePair<string, FetchedJobDto>>(jobs.Count)", span="553-553", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m1_385 [label=jobs, span="555-555", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m1_386 [label="result.Add(new KeyValuePair<string, FetchedJobDto>(\r\n                    job.Id.ToString(),\r\n                    new FetchedJobDto\r\n                    {\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        State = job.StateName,\r\n                        FetchedAt = job.FetchedAt\r\n                    }))", span="557-564", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m1_387 [label="return new JobList<FetchedJobDto>(result);", span="567-567", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m1_388 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="537-537", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m1_390 [label="Entry KeyValuePair<string, FetchedJobDto>.cstr", span="", cluster="KeyValuePair<string, FetchedJobDto>.cstr", file="SqlServerMonitoringApi.cs"];
m1_191 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="250-250", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m1_192 [label="return UseConnection(connection =>\r\n            {\r\n\r\n                const string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc'';\r\n\r\n                using (var multi = connection.QueryMultiple(sql, new { id = jobId }))\r\n                {\r\n                    var job = multi.Read<SqlJob>().SingleOrDefault();\r\n                    if (job == null) return null;\r\n\r\n                    var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value);\r\n                    var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            })\r\n                            .ToList();\r\n\r\n                    return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        ExpireAt = job.ExpireAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };\r\n                }\r\n            });", span="252-289", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m1_193 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="250-250", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs"];
m1_324 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="SqlServerMonitoringApi.cs"];
m1_6 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="42-42", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs"];
m1_7 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ScheduledState.StateName));", span="44-45", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs"];
m1_8 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="42-42", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs"];
m1_0 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="35-35", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerMonitoringApi.cs"];
m1_1 [label="storage == null", span="37-37", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerMonitoringApi.cs"];
m1_3 [label="_storage = storage", span="39-39", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerMonitoringApi.cs"];
m1_2 [label="throw new ArgumentNullException(''storage'');", span="37-37", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerMonitoringApi.cs"];
m1_4 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="35-35", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerMonitoringApi.cs"];
m1_167 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="435-435", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m1_342 [label="string enqueuedJobsSql = @''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is null''", span="439-444", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m1_343 [label="var jobs = connection.Query<SqlJob>(\r\n                enqueuedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="446-449", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m1_344 [label="return DeserializeJobs(\r\n                jobs,\r\n                (sqlJob, job, stateData) => new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                });", span="451-460", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m1_345 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="435-435", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs"];
m1_325 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="SqlServerMonitoringApi.cs"];
m1_220 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="292-292", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs"];
m1_221 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, SucceededState.StateName));", span="294-295", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs"];
m1_222 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="292-292", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs"];
m1_50 [label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73", cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="SqlServerMonitoringApi.cs"];
m1_350 [label="Entry Hangfire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="23-23", cluster="Hangfire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="SqlServerMonitoringApi.cs"];
m1_389 [label="Entry List<KeyValuePair<string, FetchedJobDto>>.cstr", span="", cluster="List<KeyValuePair<string, FetchedJobDto>>.cstr", file="SqlServerMonitoringApi.cs"];
m1_283 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="SqlServerMonitoringApi.cs"];
m1_90 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="143-143", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m1_91 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }));", span="145-158", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m1_92 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="143-143", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m1_355 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="476-476", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs"];
m1_356 [label="var data = JobHelper.FromJson<InvocationData>(invocationData)", span="478-478", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs"];
m1_357 [label="data.Arguments = arguments", span="479-479", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs"];
m1_358 [label="return data.Deserialize();", span="483-483", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs"];
m1_359 [label=JobLoadException, span="485-485", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs"];
m1_360 [label="return null;", span="487-487", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs"];
m1_361 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="476-476", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs"];
m1_74 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", span="116-116", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs"];
m1_75 [label="return UseConnection<IList<ServerDto>>(connection =>\r\n            {\r\n                var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList();\r\n\r\n                var result = new List<ServerDto>();\r\n\r\n                foreach (var server in servers)\r\n                {\r\n                    var data = JobHelper.FromJson<ServerData>(server.Data);\r\n                    result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", span="118-140", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs"];
m1_76 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", span="116-116", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs"];
m1_204 [label="Entry Unk.QueryMultiple", span="", cluster="Unk.QueryMultiple", file="SqlServerMonitoringApi.cs"];
m1_19 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="422-422", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="SqlServerMonitoringApi.cs"];
m1_334 [label="var provider = _storage.QueueProviders.GetProvider(queueName)", span="424-424", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="SqlServerMonitoringApi.cs"];
m1_335 [label="var monitoringApi = provider.GetJobQueueMonitoringApi()", span="425-425", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="SqlServerMonitoringApi.cs"];
m1_336 [label="return monitoringApi;", span="427-427", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="SqlServerMonitoringApi.cs"];
m1_337 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="422-422", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="SqlServerMonitoringApi.cs"];
m1_38 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="76-76", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m1_39 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                }));", span="78-87", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m1_40 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="76-76", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m1_51 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="90-90", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m1_52 [label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                }));", span="92-101", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m1_53 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="90-90", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m1_207 [label="Entry Hangfire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="22-22", cluster="Hangfire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="SqlServerMonitoringApi.cs"];
m1_68 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="110-110", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SqlServerMonitoringApi.cs"];
m1_69 [label="return UseConnection(connection => \r\n                GetTimelineStats(connection, ''failed''));", span="112-113", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SqlServerMonitoringApi.cs"];
m1_70 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="110-110", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SqlServerMonitoringApi.cs"];
m1_178 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="238-238", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs"];
m1_179 [label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''succeeded''));", span="240-241", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs"];
m1_180 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="238-238", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs"];
m1_289 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="SqlServerMonitoringApi.cs"];
m1_338 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="SqlServerMonitoringApi.cs"];
m1_133 [label="Entry Unk.SelectMany", span="", cluster="Unk.SelectMany", file="SqlServerMonitoringApi.cs"];
m1_206 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="SqlServerMonitoringApi.cs"];
m1_77 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerMonitoringApi.cs"];
m1_137 [label="Entry Unk.GetEnqueuedJobIds", span="", cluster="Unk.GetEnqueuedJobIds", file="SqlServerMonitoringApi.cs"];
m1_100 [label="Entry Hangfire.Common.JobHelper.DeserializeNullableDateTime(string)", span="84-84", cluster="Hangfire.Common.JobHelper.DeserializeNullableDateTime(string)", file="SqlServerMonitoringApi.cs"];
m1_134 [label="Entry Unk.OrderBy", span="", cluster="Unk.OrderBy", file="SqlServerMonitoringApi.cs"];
m1_138 [label="Entry Unk.GetEnqueuedAndFetchedCount", span="", cluster="Unk.GetEnqueuedAndFetchedCount", file="SqlServerMonitoringApi.cs"];
m1_14 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="48-48", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs"];
m1_15 [label="var queueApi = GetQueueApi(queue)", span="50-50", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs"];
m1_16 [label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="51-51", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs"];
m1_17 [label="return counters.EnqueuedCount ?? 0;", span="53-53", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs"];
m1_18 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="48-48", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs"];
m1_147 [label="Entry Unk.GetQueues", span="", cluster="Unk.GetQueues", file="SqlServerMonitoringApi.cs"];
m1_61 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="104-104", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs"];
m1_62 [label="return UseConnection(connection => \r\n                GetTimelineStats(connection, ''succeeded''));", span="106-107", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs"];
m1_63 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="104-104", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs"];
m1_326 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerMonitoringApi.cs"];
m1_67 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", span="372-372", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_293 [label="var endDate = DateTime.UtcNow.Date", span="376-376", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_300 [label="var keyMaps = dates.ToDictionary(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd'')), x => x)", span="384-384", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_301 [label="return GetTimelineStats(connection, keyMaps);", span="386-386", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_294 [label="var dates = new List<DateTime>()", span="377-377", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_297 [label="dates.Add(endDate)", span="380-380", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_298 [label="endDate = endDate.AddDays(-1)", span="381-381", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_295 [label="var i = 0", span="378-378", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_296 [label="i < 7", span="378-378", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_299 [label="i++", span="378-378", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_302 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", span="372-372", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="SqlServerMonitoringApi.cs"];
m1_255 [label="Entry Hangfire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18", cluster="Hangfire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="SqlServerMonitoringApi.cs"];
m1_48 [label="Entry Hangfire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="23-23", cluster="Hangfire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="SqlServerMonitoringApi.cs"];
m1_310 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", span="389-389", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m1_311 [label="string sqlQuery = @''\r\nselect s.[Key], sum(s.[Value]) as [Count] from (\r\n    select [Key], sum([Value]) as [Value] from HangFire.Counter \r\n	group by [Key]\r\n	having [Key] in @keys\r\n    union all\r\n    select [Key], [Value] from HangFire.AggregatedCounter \r\n	where [Key] in @keys\r\n) as s group by [Key];''", span="392-400", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m1_312 [label="var valuesMap = connection.Query(\r\n                sqlQuery,\r\n                new { keys = keyMaps.Keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="402-405", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m1_313 [label="keyMaps.Keys", span="407-407", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m1_318 [label="i < keyMaps.Count", span="413-413", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m1_319 [label="var value = valuesMap[keyMaps.ElementAt(i).Key]", span="415-415", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m1_320 [label="result.Add(keyMaps.ElementAt(i).Value, value)", span="416-416", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m1_314 [label="!valuesMap.ContainsKey(key)", span="409-409", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m1_315 [label="valuesMap.Add(key, 0)", span="409-409", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m1_316 [label="var result = new Dictionary<DateTime, long>()", span="412-412", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m1_317 [label="var i = 0", span="413-413", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m1_322 [label="return result;", span="419-419", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m1_321 [label="i++", span="413-413", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m1_323 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", span="389-389", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="SqlServerMonitoringApi.cs"];
m1_239 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="SqlServerMonitoringApi.cs"];
m1_132 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SqlServerMonitoringApi.cs"];
m1_377 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="SqlServerMonitoringApi.cs"];
m1_258 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="SqlServerMonitoringApi.cs"];
m1_158 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="222-222", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_159 [label="var queueApi = GetQueueApi(queue)", span="224-224", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_160 [label="var enqueuedJobIds = queueApi.GetEnqueuedJobIds(queue, from, perPage)", span="225-225", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_161 [label="return UseConnection(connection => EnqueuedJobs(connection, enqueuedJobIds));", span="227-227", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_162 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="222-222", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_205 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="SqlServerMonitoringApi.cs"];
m1_32 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="70-70", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="SqlServerMonitoringApi.cs"];
m1_33 [label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ProcessingState.StateName));", span="72-73", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="SqlServerMonitoringApi.cs"];
m1_34 [label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="70-70", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="SqlServerMonitoringApi.cs"];
m1_208 [label="Entry Unk.DeserializeJob", span="", cluster="Unk.DeserializeJob", file="SqlServerMonitoringApi.cs"];
m1_393 [label="Hangfire.SqlServer.SqlServerMonitoringApi", span="", file="SqlServerMonitoringApi.cs"];
m1_394 [label=int, span="", file="SqlServerMonitoringApi.cs"];
m1_395 [label=int, span="", file="SqlServerMonitoringApi.cs"];
m1_396 [label=int, span="", file="SqlServerMonitoringApi.cs"];
m1_397 [label=int, span="", file="SqlServerMonitoringApi.cs"];
m1_398 [label=int, span="", file="SqlServerMonitoringApi.cs"];
m1_399 [label=int, span="", file="SqlServerMonitoringApi.cs"];
m1_400 [label=int, span="", file="SqlServerMonitoringApi.cs"];
m1_401 [label=int, span="", file="SqlServerMonitoringApi.cs"];
m1_402 [label=int, span="", file="SqlServerMonitoringApi.cs"];
m1_403 [label=int, span="", file="SqlServerMonitoringApi.cs"];
m1_404 [label=enqueuedJobIds, span="", file="SqlServerMonitoringApi.cs"];
m1_405 [label=enqueuedJobIds, span="", file="SqlServerMonitoringApi.cs"];
m1_406 [label=fetchedJobIds, span="", file="SqlServerMonitoringApi.cs"];
m1_407 [label=string, span="", file="SqlServerMonitoringApi.cs"];
m1_408 [label=sql, span="", file="SqlServerMonitoringApi.cs"];
m1_409 [label=countByStates, span="", file="SqlServerMonitoringApi.cs"];
m1_410 [label=string, span="", file="SqlServerMonitoringApi.cs"];
m1_411 [label=string, span="", file="SqlServerMonitoringApi.cs"];
n61 -> n3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
n61 -> n8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
n61 -> n9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
n61 -> n10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
n61 -> n11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
n61 -> n12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
n61 -> n13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
n61 -> n29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
n61 -> n40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
n61 -> n50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
n61 -> n58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
n62 -> n19  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
n63 -> n32  [key=1, style=dashed, color=darkseagreen4, label=string];
n64 -> n32  [key=1, style=dashed, color=darkseagreen4, label=int];
n65 -> n32  [key=1, style=dashed, color=darkseagreen4, label=int];
n66 -> n32  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
n67 -> n43  [key=1, style=dashed, color=darkseagreen4, label=string];
n68 -> n43  [key=1, style=dashed, color=darkseagreen4, label=int];
n69 -> n43  [key=1, style=dashed, color=darkseagreen4, label=int];
n70 -> n43  [key=1, style=dashed, color=darkseagreen4, label=fetchedJobsSql];
n71 -> n53  [key=1, style=dashed, color=darkseagreen4, label=string];
n72 -> n53  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n2 -> n4  [key=0, style=solid];
n2 -> n5  [key=2, style=dotted];
n4 -> n0  [key=0, style=bold, color=blue];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n10  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
n7 -> n19  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
n7 -> n7  [key=3, color=darkorchid, style=bold, label="Local variable string sqlQuery"];
n8 -> n9  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n10 -> n16  [key=2, style=dotted];
n10 -> n18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [key=2, style=dotted];
n19 -> n22  [key=2, style=dotted];
n19 -> n23  [key=2, style=dotted];
n19 -> n24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n9 -> n10  [key=0, style=solid];
n9 -> n13  [key=0, style=solid];
n9 -> n15  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n17  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n16 -> n58  [key=0, style=solid];
n16 -> n10  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> func"];
n16 -> n29  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> func"];
n16 -> n40  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> func"];
n16 -> n50  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> func"];
n18 -> n19  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n14 -> n6  [key=0, style=bold, color=blue];
n20 -> n18  [key=0, style=bold, color=blue];
n24 -> n25  [key=0, style=solid];
n25 -> n26  [key=0, style=solid];
n26 -> n24  [key=0, style=bold, color=blue];
n27 -> n28  [key=0, style=solid, color=red];
n27 -> n29  [key=1, style=dashed, color=darkseagreen4, label=string];
n27 -> n32  [key=1, style=dashed, color=darkseagreen4, label=string];
n27 -> n16  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<int> GetEnqueuedJobIds"];
n28 -> n29  [key=0, style=solid, color=red];
n28 -> n32  [key=1, style=dashed, color=red, label=sqlQuery];
n28 -> n28  [key=3, color=red, style=bold, label="Local variable string sqlQuery"];
n29 -> n30  [key=0, style=solid];
n29 -> n16  [key=2, style=dotted];
n29 -> n31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n32 -> n33  [key=0, style=solid];
n32 -> n34  [key=2, style=dotted];
n32 -> n23  [key=2, style=dotted];
n32 -> n22  [key=2, style=dotted];
n32 -> n35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n30 -> n27  [key=0, style=bold, color=blue];
n31 -> n32  [key=0, style=solid];
n33 -> n31  [key=0, style=bold, color=blue];
n35 -> n36  [key=0, style=solid];
n36 -> n37  [key=0, style=solid];
n37 -> n35  [key=0, style=bold, color=blue];
n38 -> n39  [key=0, style=solid];
n38 -> n40  [key=1, style=dashed, color=darkseagreen4, label=string];
n38 -> n43  [key=1, style=dashed, color=darkseagreen4, label=string];
n38 -> n16  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<int> GetFetchedJobIds"];
n39 -> n40  [key=0, style=solid];
n39 -> n43  [key=1, style=dashed, color=darkseagreen4, label=fetchedJobsSql];
n39 -> n39  [key=3, color=darkorchid, style=bold, label="Local variable string fetchedJobsSql"];
n40 -> n41  [key=0, style=solid];
n40 -> n16  [key=2, style=dotted];
n40 -> n42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n43 -> n44  [key=0, style=solid];
n43 -> n34  [key=2, style=dotted];
n43 -> n23  [key=2, style=dotted];
n43 -> n22  [key=2, style=dotted];
n43 -> n45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n41 -> n38  [key=0, style=bold, color=blue];
n42 -> n43  [key=0, style=solid];
n44 -> n42  [key=0, style=bold, color=blue];
n45 -> n46  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n47 -> n45  [key=0, style=bold, color=blue];
n48 -> n49  [key=0, style=solid];
n48 -> n50  [key=1, style=dashed, color=darkseagreen4, label=string];
n48 -> n53  [key=1, style=dashed, color=darkseagreen4, label=string];
n48 -> n16  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.SqlServer.EnqueuedAndFetchedCountDto GetEnqueuedAndFetchedCount"];
n49 -> n50  [key=0, style=solid];
n49 -> n53  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
n49 -> n49  [key=3, color=darkorchid, style=bold, label="Local variable string sqlQuery"];
n50 -> n51  [key=0, style=solid];
n50 -> n16  [key=2, style=dotted];
n50 -> n52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n53 -> n54  [key=0, style=solid];
n53 -> n21  [key=2, style=dotted];
n53 -> n56  [key=2, style=dotted];
n51 -> n48  [key=0, style=bold, color=blue];
n52 -> n53  [key=0, style=solid];
n54 -> n55  [key=0, style=solid];
n54 -> n57  [key=2, style=dotted];
n55 -> n52  [key=0, style=bold, color=blue];
n58 -> n59  [key=0, style=solid];
n58 -> n60  [key=2, style=dotted];
n59 -> n16  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_0 -> m0_3  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid, color=red];
m0_2 -> n17  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid, color=red];
m0_4 -> m0_0  [key=0, style=bold, color=blue];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label="?"];
m0_49 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label="?"];
m0_49 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label="?"];
m0_49 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="?"];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_32  [key=2, style=dotted];
m0_41 -> m0_43  [key=2, style=dotted];
m0_41 -> m0_44  [key=2, style=dotted];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_32  [key=2, style=dotted];
m0_46 -> m0_48  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_45 -> m0_46  [key=0, style=solid];
m0_42 -> m0_40  [key=0, style=bold, color=blue];
m0_47 -> m0_45  [key=0, style=bold, color=blue];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label=parameterTypes];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label=args];
m0_54 -> m0_55  [key=0, style=solid];
m0_55 -> m0_49  [key=0, style=bold, color=blue];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_36  [key=2, style=dotted];
m0_25 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_7 -> m0_8  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid, color=red];
m0_10 -> m0_31  [key=2, style=dotted];
m0_10 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=1, style=dashed, color=red, label=queueIndex];
m0_11 -> m0_12  [key=0, style=solid, color=red];
m0_11 -> m0_11  [key=1, style=dashed, color=red, label=queueIndex];
m0_11 -> m0_15  [key=1, style=dashed, color=red, label=queueIndex];
m0_12 -> m0_13  [key=0, style=solid, color=red];
m0_12 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m0_12 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m0_15 -> m0_16  [key=0, style=solid, color=red];
m0_15 -> m0_17  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid, color=red];
m0_13 -> m0_32  [key=2, style=dotted, color=red];
m0_13 -> m0_16  [key=1, style=dashed, color=red, label=queueKey];
m0_13 -> m0_17  [key=1, style=dashed, color=red, label=queueKey];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_32  [key=2, style=dotted];
m0_14 -> m0_16  [key=1, style=dashed, color=red, label=fetchedKey];
m0_14 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label=fetchedKey];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_39  [key=2, style=dotted];
m0_16 -> m0_18  [key=0, style=solid, color=red];
m0_16 -> m0_33  [key=2, style=dotted, color=red];
m0_16 -> m0_25  [key=1, style=dashed, color=red, label=jobId];
m0_16 -> m0_41  [key=1, style=dashed, color=red, label=jobId];
m0_16 -> m0_26  [key=1, style=dashed, color=red, label=jobId];
m0_16 -> m0_46  [key=1, style=dashed, color=red, label=jobId];
m0_16 -> m0_29  [key=1, style=dashed, color=red, label=jobId];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_34  [key=2, style=dotted];
m0_17 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m0_17 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m0_17 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m0_17 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m0_17 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m0_18 -> m0_9  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_36  [key=2, style=dotted];
m0_26 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_26 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_26 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_26 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label=arguments];
m0_19 -> m0_20  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_22 -> m0_23  [key=0, style=solid];
m0_23 -> m0_24  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_35  [key=2, style=dotted];
m0_24 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m0_24 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_37  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_38  [key=2, style=dotted];
m0_30 -> m0_6  [key=0, style=bold, color=blue];
m0_56 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisJobFetcher"];
m0_56 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisJobFetcher"];
m0_56 -> m0_3  [key=1, style=dashed, color=red, label="HangFire.Redis.RedisJobFetcher"];
m0_56 -> m0_11  [key=1, style=dashed, color=red, label="HangFire.Redis.RedisJobFetcher"];
m0_56 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisJobFetcher"];
m0_56 -> m0_16  [key=1, style=dashed, color=red, label="HangFire.Redis.RedisJobFetcher"];
m0_56 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisJobFetcher"];
m0_56 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisJobFetcher"];
m0_57 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m0_57 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m1_44 -> m1_364  [key=0, style=solid];
m1_44 -> m1_365  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m1_44 -> m1_366  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>"];
m1_364 -> m1_365  [key=0, style=solid];
m1_364 -> m1_364  [key=3, color=darkorchid, style=bold, label="Local variable string jobsSql"];
m1_365 -> m1_366  [key=0, style=solid];
m1_365 -> m1_77  [key=2, style=dotted];
m1_365 -> m1_86  [key=2, style=dotted];
m1_366 -> m1_367  [key=0, style=solid];
m1_366 -> m1_346  [key=2, style=dotted];
m1_367 -> m1_44  [key=0, style=bold, color=blue];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_9  [key=3, color=darkorchid, style=bold, label="method methodReturn long FailedCount"];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_9  [key=2, style=dotted];
m1_27 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_28 -> m1_26  [key=0, style=bold, color=blue];
m1_368 -> m1_369  [key=0, style=solid];
m1_368 -> m1_370  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>"];
m1_368 -> m1_373  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>"];
m1_369 -> m1_370  [key=0, style=solid];
m1_369 -> m1_377  [key=2, style=dotted];
m1_369 -> m1_374  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_369 -> m1_375  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_370 -> m1_371  [key=0, style=solid];
m1_370 -> m1_375  [key=0, style=solid];
m1_370 -> m1_373  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_370 -> m1_374  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_373 -> m1_374  [key=0, style=solid];
m1_373 -> m1_355  [key=2, style=dotted];
m1_373 -> m1_378  [key=2, style=dotted];
m1_374 -> m1_370  [key=0, style=solid];
m1_374 -> m1_379  [key=2, style=dotted];
m1_374 -> m1_380  [key=2, style=dotted];
m1_374 -> m1_89  [key=2, style=dotted];
m1_375 -> m1_376  [key=0, style=solid];
m1_375 -> m1_381  [key=2, style=dotted];
m1_371 -> m1_372  [key=0, style=solid];
m1_371 -> m1_362  [key=2, style=dotted];
m1_372 -> m1_373  [key=0, style=solid];
m1_372 -> m1_219  [key=2, style=dotted];
m1_376 -> m1_368  [key=0, style=bold, color=blue];
m1_13 -> m1_351  [key=0, style=solid];
m1_13 -> m1_352  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m1_13 -> m1_7  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
m1_13 -> m1_27  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
m1_13 -> m1_33  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
m1_13 -> m1_221  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
m1_13 -> m1_227  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
m1_351 -> m1_352  [key=0, style=solid];
m1_351 -> m1_351  [key=3, color=darkorchid, style=bold, label="Local variable string sqlQuery"];
m1_352 -> m1_353  [key=0, style=solid];
m1_352 -> m1_77  [key=2, style=dotted];
m1_352 -> m1_258  [key=2, style=dotted];
m1_353 -> m1_354  [key=0, style=solid];
m1_354 -> m1_13  [key=0, style=bold, color=blue];
m1_226 -> m1_227  [key=0, style=solid];
m1_226 -> m1_9  [key=3, color=darkorchid, style=bold, label="method methodReturn long DeletedListCount"];
m1_227 -> m1_228  [key=0, style=solid];
m1_227 -> m1_9  [key=2, style=dotted];
m1_227 -> m1_229  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_228 -> m1_226  [key=0, style=bold, color=blue];
m1_9 -> m1_339  [key=0, style=solid];
m1_9 -> m1_7  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m1_9 -> m1_27  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m1_9 -> m1_33  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m1_9 -> m1_39  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m1_9 -> m1_52  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m1_9 -> m1_62  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m1_9 -> m1_69  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m1_9 -> m1_91  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m1_9 -> m1_102  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m1_9 -> m1_113  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m1_9 -> m1_128  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m1_9 -> m1_161  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m1_9 -> m1_171  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m1_9 -> m1_179  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m1_9 -> m1_186  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m1_9 -> m1_192  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m1_9 -> m1_221  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m1_9 -> m1_227  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m1_9 -> m1_234  [key=3, color=red, style=bold, label="Parameter variable System.Func<SqlConnection, T> action"];
m1_339 -> m1_340  [key=0, style=solid];
m1_339 -> m1_341  [key=2, style=dotted];
m1_340 -> m1_9  [key=0, style=bold, color=blue];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_9  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlyFailedJobs"];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_9  [key=2, style=dotted];
m1_186 -> m1_188  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_187 -> m1_185  [key=0, style=bold, color=blue];
m1_232 -> m1_233  [key=0, style=solid, color=red];
m1_232 -> m1_234  [key=3, color=red, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.StatisticsDto GetStatistics"];
m1_233 -> m1_234  [key=0, style=solid, color=red];
m1_233 -> m1_242  [key=1, style=dashed, color=red, label=sql];
m1_233 -> m1_233  [key=3, color=red, style=bold, label="Local variable string sql"];
m1_234 -> m1_235  [key=0, style=solid, color=red];
m1_234 -> m1_9  [key=2, style=dotted, color=red];
m1_234 -> m1_240  [key=1, style=dashed, color=red, label="lambda expression"];
m1_234 -> m1_236  [key=1, style=dashed, color=red, label=statistics];
m1_234 -> m1_234  [key=3, color=red, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.StatisticsDto "];
m1_235 -> m1_236  [key=0, style=solid];
m1_235 -> m1_238  [key=2, style=dotted];
m1_235 -> m1_239  [key=2, style=dotted];
m1_235 -> m1_269  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_236 -> m1_237  [key=0, style=solid];
m1_237 -> m1_232  [key=0, style=bold, color=blue];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_170  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_168 -> m1_9  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.FetchedJobDto> FetchedJobs"];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_19  [key=2, style=dotted];
m1_170 -> m1_171  [key=0, style=solid];
m1_170 -> m1_173  [key=2, style=dotted];
m1_170 -> m1_175  [key=1, style=dashed, color=darkseagreen4, label=fetchedJobIds];
m1_171 -> m1_172  [key=0, style=solid];
m1_171 -> m1_9  [key=2, style=dotted];
m1_171 -> m1_174  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_172 -> m1_168  [key=0, style=bold, color=blue];
m1_184 -> m1_273  [key=0, style=solid];
m1_184 -> m1_280  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_184 -> m1_286  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_184 -> m1_281  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m1_273 -> m1_274  [key=0, style=solid];
m1_273 -> m1_277  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m1_273 -> m1_278  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m1_280 -> m1_281  [key=0, style=solid];
m1_280 -> m1_206  [key=2, style=dotted];
m1_280 -> m1_285  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_280 -> m1_290  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_281 -> m1_282  [key=0, style=solid];
m1_281 -> m1_284  [key=2, style=dotted];
m1_274 -> m1_275  [key=0, style=solid];
m1_274 -> m1_87  [key=2, style=dotted];
m1_274 -> m1_277  [key=1, style=dashed, color=darkseagreen4, label=dates];
m1_274 -> m1_280  [key=1, style=dashed, color=darkseagreen4, label=dates];
m1_277 -> m1_278  [key=0, style=solid];
m1_277 -> m1_89  [key=2, style=dotted];
m1_278 -> m1_279  [key=0, style=solid];
m1_278 -> m1_283  [key=2, style=dotted];
m1_278 -> m1_278  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m1_275 -> m1_276  [key=0, style=solid];
m1_275 -> m1_279  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_275 -> m1_275  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m1_276 -> m1_277  [key=0, style=solid];
m1_276 -> m1_280  [key=0, style=solid];
m1_279 -> m1_276  [key=0, style=solid];
m1_279 -> m1_279  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_282 -> m1_184  [key=0, style=bold, color=blue];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_124  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IList<Hangfire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto> Queues"];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_132  [key=2, style=dotted];
m1_123 -> m1_133  [key=2, style=dotted];
m1_123 -> m1_134  [key=2, style=dotted];
m1_123 -> m1_135  [key=2, style=dotted];
m1_123 -> m1_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_123 -> m1_144  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_123 -> m1_148  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_123 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_123 -> m1_125  [key=1, style=dashed, color=darkseagreen4, label=tuples];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_136  [key=2, style=dotted];
m1_124 -> m1_129  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_124 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_130  [key=0, style=solid];
m1_125 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label=tuple];
m1_125 -> m1_129  [key=1, style=dashed, color=darkseagreen4, label=tuple];
m1_129 -> m1_125  [key=0, style=solid];
m1_129 -> m1_139  [key=2, style=dotted];
m1_129 -> m1_89  [key=2, style=dotted];
m1_130 -> m1_131  [key=0, style=solid];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_137  [key=2, style=dotted];
m1_126 -> m1_128  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m1_126 -> m1_155  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_138  [key=2, style=dotted];
m1_127 -> m1_129  [key=1, style=dashed, color=darkseagreen4, label=counters];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_9  [key=2, style=dotted];
m1_128 -> m1_154  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_131 -> m1_122  [key=0, style=bold, color=blue];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_112 -> m1_9  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.DeletedJobDto> DeletedJobs"];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_9  [key=2, style=dotted];
m1_113 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_114 -> m1_112  [key=0, style=bold, color=blue];
m1_347 -> m1_348  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_13  [key=2, style=dotted];
m1_12 -> m1_10  [key=0, style=bold, color=blue];
m1_29 -> m1_30  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_13  [key=2, style=dotted];
m1_31 -> m1_29  [key=0, style=bold, color=blue];
m1_35 -> m1_36  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_13  [key=2, style=dotted];
m1_37 -> m1_35  [key=0, style=bold, color=blue];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_44  [key=2, style=dotted];
m1_42 -> m1_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_41 -> m1_42  [key=0, style=solid];
m1_43 -> m1_41  [key=0, style=bold, color=blue];
m1_45 -> m1_46  [key=0, style=solid];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_48  [key=2, style=dotted];
m1_46 -> m1_49  [key=2, style=dotted];
m1_46 -> m1_50  [key=2, style=dotted];
m1_47 -> m1_45  [key=0, style=bold, color=blue];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_44  [key=2, style=dotted];
m1_55 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_54 -> m1_55  [key=0, style=solid];
m1_56 -> m1_54  [key=0, style=bold, color=blue];
m1_57 -> m1_58  [key=0, style=solid];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_60  [key=2, style=dotted];
m1_58 -> m1_50  [key=2, style=dotted];
m1_59 -> m1_57  [key=0, style=bold, color=blue];
m1_64 -> m1_65  [key=0, style=solid];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_67  [key=2, style=dotted];
m1_66 -> m1_64  [key=0, style=bold, color=blue];
m1_71 -> m1_72  [key=0, style=solid];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_67  [key=2, style=dotted];
m1_73 -> m1_71  [key=0, style=bold, color=blue];
m1_78 -> m1_79  [key=0, style=solid];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_77  [key=2, style=dotted];
m1_79 -> m1_86  [key=2, style=dotted];
m1_79 -> m1_81  [key=1, style=dashed, color=darkseagreen4, label=servers];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_87  [key=2, style=dotted];
m1_80 -> m1_83  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_80 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_84  [key=0, style=solid];
m1_81 -> m1_83  [key=1, style=dashed, color=darkseagreen4, label=server];
m1_83 -> m1_81  [key=0, style=solid];
m1_83 -> m1_88  [key=2, style=dotted];
m1_83 -> m1_89  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_77  [key=2, style=dotted];
m1_85 -> m1_78  [key=0, style=bold, color=blue];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_44  [key=2, style=dotted];
m1_94 -> m1_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_93 -> m1_94  [key=0, style=solid];
m1_95 -> m1_93  [key=0, style=bold, color=blue];
m1_96 -> m1_97  [key=0, style=solid];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_99  [key=2, style=dotted];
m1_97 -> m1_100  [key=2, style=dotted];
m1_98 -> m1_96  [key=0, style=bold, color=blue];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_44  [key=2, style=dotted];
m1_105 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_104 -> m1_105  [key=0, style=solid];
m1_106 -> m1_104  [key=0, style=bold, color=blue];
m1_107 -> m1_108  [key=0, style=solid];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_110  [key=2, style=dotted];
m1_108 -> m1_49  [key=2, style=dotted];
m1_108 -> m1_111  [key=2, style=dotted];
m1_108 -> m1_100  [key=2, style=dotted];
m1_109 -> m1_107  [key=0, style=bold, color=blue];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_44  [key=2, style=dotted];
m1_116 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_115 -> m1_116  [key=0, style=solid];
m1_117 -> m1_115  [key=0, style=bold, color=blue];
m1_118 -> m1_119  [key=0, style=solid];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_121  [key=2, style=dotted];
m1_119 -> m1_100  [key=2, style=dotted];
m1_120 -> m1_118  [key=0, style=bold, color=blue];
m1_140 -> m1_141  [key=0, style=solid];
m1_144 -> m1_145  [key=0, style=solid];
m1_148 -> m1_149  [key=0, style=solid];
m1_151 -> m1_152  [key=0, style=solid];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_157  [key=2, style=dotted];
m1_154 -> m1_155  [key=0, style=solid];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_143  [key=2, style=dotted];
m1_142 -> m1_140  [key=0, style=bold, color=blue];
m1_145 -> m1_146  [key=0, style=solid];
m1_145 -> m1_147  [key=2, style=dotted];
m1_146 -> m1_144  [key=0, style=bold, color=blue];
m1_149 -> m1_150  [key=0, style=solid];
m1_150 -> m1_148  [key=0, style=bold, color=blue];
m1_152 -> m1_153  [key=0, style=solid];
m1_153 -> m1_151  [key=0, style=bold, color=blue];
m1_156 -> m1_154  [key=0, style=bold, color=blue];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_167  [key=2, style=dotted];
m1_164 -> m1_165  [key=0, style=solid];
m1_166 -> m1_164  [key=0, style=bold, color=blue];
m1_175 -> m1_176  [key=0, style=solid];
m1_175 -> m1_177  [key=2, style=dotted];
m1_174 -> m1_175  [key=0, style=solid];
m1_176 -> m1_174  [key=0, style=bold, color=blue];
m1_181 -> m1_182  [key=0, style=solid];
m1_182 -> m1_183  [key=0, style=solid];
m1_182 -> m1_184  [key=2, style=dotted];
m1_183 -> m1_181  [key=0, style=bold, color=blue];
m1_188 -> m1_189  [key=0, style=solid];
m1_189 -> m1_190  [key=0, style=solid];
m1_189 -> m1_184  [key=2, style=dotted];
m1_190 -> m1_188  [key=0, style=bold, color=blue];
m1_196 -> m1_197  [key=0, style=solid];
m1_196 -> m1_204  [key=2, style=dotted];
m1_196 -> m1_200  [key=1, style=dashed, color=darkseagreen4, label=multi];
m1_196 -> m1_201  [key=1, style=dashed, color=darkseagreen4, label=multi];
m1_194 -> m1_195  [key=0, style=solid];
m1_194 -> m1_196  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m1_195 -> m1_196  [key=0, style=solid];
m1_197 -> m1_198  [key=0, style=solid];
m1_197 -> m1_77  [key=2, style=dotted];
m1_197 -> m1_205  [key=2, style=dotted];
m1_197 -> m1_202  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_200 -> m1_201  [key=0, style=solid];
m1_200 -> m1_77  [key=2, style=dotted];
m1_200 -> m1_206  [key=2, style=dotted];
m1_200 -> m1_209  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_200 -> m1_212  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_200 -> m1_202  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_77  [key=2, style=dotted];
m1_201 -> m1_86  [key=2, style=dotted];
m1_201 -> m1_132  [key=2, style=dotted];
m1_201 -> m1_215  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_198 -> m1_199  [key=0, style=solid];
m1_198 -> m1_200  [key=0, style=solid];
m1_202 -> m1_203  [key=0, style=solid];
m1_202 -> m1_207  [key=2, style=dotted];
m1_202 -> m1_208  [key=2, style=dotted];
m1_199 -> m1_203  [key=0, style=solid];
m1_209 -> m1_210  [key=0, style=solid];
m1_212 -> m1_213  [key=0, style=solid];
m1_215 -> m1_216  [key=0, style=solid];
m1_203 -> m1_194  [key=0, style=bold, color=blue];
m1_210 -> m1_211  [key=0, style=solid];
m1_211 -> m1_209  [key=0, style=bold, color=blue];
m1_213 -> m1_214  [key=0, style=solid];
m1_214 -> m1_212  [key=0, style=bold, color=blue];
m1_216 -> m1_217  [key=0, style=solid];
m1_216 -> m1_218  [key=2, style=dotted];
m1_216 -> m1_219  [key=2, style=dotted];
m1_216 -> m1_77  [key=2, style=dotted];
m1_217 -> m1_215  [key=0, style=bold, color=blue];
m1_223 -> m1_224  [key=0, style=solid];
m1_224 -> m1_225  [key=0, style=solid];
m1_224 -> m1_13  [key=2, style=dotted];
m1_225 -> m1_223  [key=0, style=bold, color=blue];
m1_229 -> m1_230  [key=0, style=solid];
m1_230 -> m1_231  [key=0, style=solid];
m1_230 -> m1_13  [key=2, style=dotted];
m1_231 -> m1_229  [key=0, style=bold, color=blue];
m1_242 -> m1_243  [key=0, style=solid, color=red];
m1_242 -> m1_204  [key=2, style=dotted];
m1_242 -> m1_249  [key=1, style=dashed, color=darkseagreen4, label=multi];
m1_242 -> m1_250  [key=1, style=dashed, color=darkseagreen4, label=multi];
m1_242 -> m1_251  [key=1, style=dashed, color=darkseagreen4, label=multi];
m1_242 -> m1_252  [key=1, style=dashed, color=darkseagreen4, label=multi];
m1_240 -> m1_241  [key=0, style=solid];
m1_240 -> m1_242  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m1_269 -> m1_270  [key=0, style=solid];
m1_241 -> m1_242  [key=0, style=solid];
m1_241 -> m1_255  [key=2, style=dotted];
m1_241 -> m1_245  [key=1, style=dashed, color=red, label=stats];
m1_241 -> m1_246  [key=1, style=dashed, color=red, label=stats];
m1_241 -> m1_247  [key=1, style=dashed, color=red, label=stats];
m1_241 -> m1_248  [key=1, style=dashed, color=red, label=stats];
m1_241 -> m1_249  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_241 -> m1_250  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_241 -> m1_251  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_241 -> m1_252  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_241 -> m1_253  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_245 -> m1_246  [key=0, style=solid, color=red];
m1_245 -> m1_257  [key=2, style=dotted, color=red];
m1_246 -> m1_247  [key=0, style=solid, color=red];
m1_246 -> m1_257  [key=2, style=dotted, color=red];
m1_247 -> m1_248  [key=0, style=solid, color=red];
m1_247 -> m1_257  [key=2, style=dotted, color=red];
m1_248 -> m1_249  [key=0, style=solid, color=red];
m1_248 -> m1_257  [key=2, style=dotted, color=red];
m1_249 -> m1_250  [key=0, style=solid];
m1_249 -> m1_77  [key=2, style=dotted];
m1_249 -> m1_258  [key=2, style=dotted];
m1_250 -> m1_251  [key=0, style=solid];
m1_250 -> m1_77  [key=2, style=dotted];
m1_250 -> m1_205  [key=2, style=dotted];
m1_251 -> m1_252  [key=0, style=solid];
m1_251 -> m1_77  [key=2, style=dotted];
m1_251 -> m1_205  [key=2, style=dotted];
m1_252 -> m1_253  [key=0, style=solid];
m1_252 -> m1_77  [key=2, style=dotted];
m1_252 -> m1_258  [key=2, style=dotted];
m1_253 -> m1_254  [key=0, style=solid];
m1_243 -> m1_244  [key=0, style=solid, color=red];
m1_243 -> m1_256  [key=2, style=dotted, color=red];
m1_243 -> m1_206  [key=2, style=dotted, color=red];
m1_243 -> m1_259  [key=1, style=dashed, color=red, label="lambda expression"];
m1_243 -> m1_262  [key=1, style=dashed, color=red, label="lambda expression"];
m1_243 -> m1_266  [key=1, style=dashed, color=red, label=countByStates];
m1_244 -> m1_245  [key=0, style=solid, color=red];
m1_244 -> m1_266  [key=1, style=dashed, color=red, label=string];
m1_244 -> m1_246  [key=1, style=dashed, color=red, label=getCountIfExists];
m1_244 -> m1_247  [key=1, style=dashed, color=red, label=getCountIfExists];
m1_244 -> m1_248  [key=1, style=dashed, color=red, label=getCountIfExists];
m1_259 -> m1_260  [key=0, style=solid, color=red];
m1_262 -> m1_263  [key=0, style=solid, color=red];
m1_266 -> m1_267  [key=0, style=solid, color=red];
m1_266 -> m1_268  [key=2, style=dotted, color=red];
m1_254 -> m1_240  [key=0, style=bold, color=blue];
m1_260 -> m1_261  [key=0, style=solid, color=red];
m1_261 -> m1_259  [key=0, style=bold, color=blue];
m1_263 -> m1_264  [key=0, style=solid, color=red];
m1_264 -> m1_262  [key=0, style=bold, color=blue];
m1_265 -> m1_266  [key=0, style=solid, color=red];
m1_267 -> m1_265  [key=0, style=bold, color=blue];
m1_270 -> m1_271  [key=0, style=solid];
m1_270 -> m1_143  [key=2, style=dotted];
m1_270 -> m1_272  [key=2, style=dotted];
m1_271 -> m1_269  [key=0, style=bold, color=blue];
m1_286 -> m1_287  [key=0, style=solid];
m1_286 -> m1_288  [key=2, style=dotted];
m1_286 -> m1_289  [key=2, style=dotted];
m1_285 -> m1_286  [key=0, style=solid];
m1_290 -> m1_291  [key=0, style=solid];
m1_287 -> m1_285  [key=0, style=bold, color=blue];
m1_291 -> m1_292  [key=0, style=solid];
m1_292 -> m1_290  [key=0, style=bold, color=blue];
m1_305 -> m1_306  [key=0, style=solid];
m1_305 -> m1_288  [key=2, style=dotted];
m1_305 -> m1_289  [key=2, style=dotted];
m1_304 -> m1_305  [key=0, style=solid];
m1_307 -> m1_308  [key=0, style=solid];
m1_306 -> m1_304  [key=0, style=bold, color=blue];
m1_308 -> m1_309  [key=0, style=solid];
m1_309 -> m1_307  [key=0, style=bold, color=blue];
m1_328 -> m1_329  [key=0, style=solid];
m1_331 -> m1_332  [key=0, style=solid];
m1_329 -> m1_330  [key=0, style=solid];
m1_330 -> m1_328  [key=0, style=bold, color=blue];
m1_332 -> m1_333  [key=0, style=solid];
m1_333 -> m1_331  [key=0, style=bold, color=blue];
m1_348 -> m1_349  [key=0, style=solid];
m1_348 -> m1_350  [key=2, style=dotted];
m1_348 -> m1_100  [key=2, style=dotted];
m1_349 -> m1_347  [key=0, style=bold, color=blue];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_19  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_20  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_25 -> m1_21  [key=0, style=bold, color=blue];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_101 -> m1_9  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.SucceededJobDto> SucceededJobs"];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_9  [key=2, style=dotted];
m1_102 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_103 -> m1_101  [key=0, style=bold, color=blue];
m1_177 -> m1_382  [key=0, style=solid];
m1_177 -> m1_383  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m1_382 -> m1_383  [key=0, style=solid];
m1_382 -> m1_382  [key=3, color=darkorchid, style=bold, label="Local variable string fetchedJobsSql"];
m1_383 -> m1_384  [key=0, style=solid];
m1_383 -> m1_77  [key=2, style=dotted];
m1_383 -> m1_86  [key=2, style=dotted];
m1_383 -> m1_385  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_384 -> m1_385  [key=0, style=solid];
m1_384 -> m1_389  [key=2, style=dotted];
m1_384 -> m1_386  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_384 -> m1_387  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_385 -> m1_386  [key=0, style=solid];
m1_385 -> m1_387  [key=0, style=solid];
m1_386 -> m1_385  [key=0, style=solid];
m1_386 -> m1_390  [key=2, style=dotted];
m1_386 -> m1_391  [key=2, style=dotted];
m1_386 -> m1_392  [key=2, style=dotted];
m1_386 -> m1_208  [key=2, style=dotted];
m1_386 -> m1_89  [key=2, style=dotted];
m1_387 -> m1_388  [key=0, style=solid];
m1_387 -> m1_381  [key=2, style=dotted];
m1_388 -> m1_177  [key=0, style=bold, color=blue];
m1_191 -> m1_192  [key=0, style=solid];
m1_191 -> m1_196  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_191 -> m1_9  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobDetailsDto JobDetails"];
m1_192 -> m1_193  [key=0, style=solid];
m1_192 -> m1_9  [key=2, style=dotted];
m1_192 -> m1_194  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_192 -> m1_192  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobDetailsDto "];
m1_193 -> m1_191  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_9  [key=3, color=darkorchid, style=bold, label="method methodReturn long ScheduledCount"];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [key=2, style=dotted];
m1_7 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_8 -> m1_6  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_2 -> m1_4  [key=0, style=solid];
m1_2 -> n5  [key=2, style=dotted];
m1_4 -> m1_0  [key=0, style=bold, color=blue];
m1_167 -> m1_342  [key=0, style=solid];
m1_167 -> m1_343  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m1_342 -> m1_343  [key=0, style=solid];
m1_342 -> m1_342  [key=3, color=darkorchid, style=bold, label="Local variable string enqueuedJobsSql"];
m1_343 -> m1_344  [key=0, style=solid];
m1_343 -> m1_77  [key=2, style=dotted];
m1_343 -> m1_86  [key=2, style=dotted];
m1_344 -> m1_345  [key=0, style=solid];
m1_344 -> m1_346  [key=2, style=dotted];
m1_344 -> m1_347  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_345 -> m1_167  [key=0, style=bold, color=blue];
m1_220 -> m1_221  [key=0, style=solid];
m1_220 -> m1_9  [key=3, color=darkorchid, style=bold, label="method methodReturn long SucceededListCount"];
m1_221 -> m1_222  [key=0, style=solid];
m1_221 -> m1_9  [key=2, style=dotted];
m1_221 -> m1_223  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_222 -> m1_220  [key=0, style=bold, color=blue];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_90 -> m1_9  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.FailedJobDto> FailedJobs"];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_9  [key=2, style=dotted];
m1_91 -> m1_93  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_92 -> m1_90  [key=0, style=bold, color=blue];
m1_355 -> m1_356  [key=0, style=solid];
m1_355 -> m1_357  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_355 -> m1_192  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Common.Job DeserializeJob"];
m1_356 -> m1_357  [key=0, style=solid];
m1_356 -> m1_362  [key=2, style=dotted];
m1_356 -> m1_358  [key=1, style=dashed, color=darkseagreen4, label=data];
m1_357 -> m1_358  [key=0, style=solid];
m1_358 -> m1_361  [key=0, style=solid];
m1_358 -> m1_363  [key=2, style=dotted];
m1_359 -> m1_360  [key=0, style=solid];
m1_360 -> m1_361  [key=0, style=solid];
m1_361 -> m1_355  [key=0, style=bold, color=blue];
m1_74 -> m1_75  [key=0, style=solid];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_77  [key=2, style=dotted];
m1_75 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_75 -> m1_75  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IList<Hangfire.Storage.Monitoring.ServerDto> "];
m1_76 -> m1_74  [key=0, style=bold, color=blue];
m1_19 -> m1_334  [key=0, style=solid];
m1_19 -> m1_14  [key=3, color=darkorchid, style=bold, label="Parameter variable string queueName"];
m1_19 -> m1_21  [key=3, color=darkorchid, style=bold, label="Parameter variable string queueName"];
m1_19 -> m1_158  [key=3, color=darkorchid, style=bold, label="Parameter variable string queueName"];
m1_19 -> m1_168  [key=3, color=darkorchid, style=bold, label="Parameter variable string queueName"];
m1_19 -> m1_335  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.SqlServer.IPersistentJobQueueMonitoringApi GetQueueApi"];
m1_334 -> m1_335  [key=0, style=solid];
m1_334 -> m1_338  [key=2, style=dotted];
m1_335 -> m1_336  [key=0, style=solid];
m1_335 -> m1_143  [key=2, style=dotted];
m1_336 -> m1_337  [key=0, style=solid];
m1_337 -> m1_19  [key=0, style=bold, color=blue];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_38 -> m1_9  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.ProcessingJobDto> ProcessingJobs"];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_9  [key=2, style=dotted];
m1_39 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_40 -> m1_38  [key=0, style=bold, color=blue];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_51 -> m1_9  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.ScheduledJobDto> ScheduledJobs"];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_9  [key=2, style=dotted];
m1_52 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_53 -> m1_51  [key=0, style=bold, color=blue];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_9  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> FailedByDatesCount"];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_9  [key=2, style=dotted];
m1_69 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_70 -> m1_68  [key=0, style=bold, color=blue];
m1_178 -> m1_179  [key=0, style=solid];
m1_178 -> m1_9  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlySucceededJobs"];
m1_179 -> m1_180  [key=0, style=solid];
m1_179 -> m1_9  [key=2, style=dotted];
m1_179 -> m1_181  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_180 -> m1_178  [key=0, style=bold, color=blue];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_19  [key=2, style=dotted];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_20  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_18 -> m1_14  [key=0, style=bold, color=blue];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_9  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> SucceededByDatesCount"];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_9  [key=2, style=dotted];
m1_62 -> m1_64  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_63 -> m1_61  [key=0, style=bold, color=blue];
m1_67 -> m1_293  [key=0, style=solid];
m1_67 -> m1_300  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_67 -> m1_305  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_67 -> m1_301  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m1_293 -> m1_294  [key=0, style=solid];
m1_293 -> m1_297  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m1_293 -> m1_298  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m1_300 -> m1_301  [key=0, style=solid];
m1_300 -> m1_206  [key=2, style=dotted];
m1_300 -> m1_304  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_300 -> m1_307  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_301 -> m1_302  [key=0, style=solid];
m1_301 -> m1_284  [key=2, style=dotted];
m1_294 -> m1_295  [key=0, style=solid];
m1_294 -> m1_87  [key=2, style=dotted];
m1_294 -> m1_297  [key=1, style=dashed, color=darkseagreen4, label=dates];
m1_294 -> m1_300  [key=1, style=dashed, color=darkseagreen4, label=dates];
m1_297 -> m1_298  [key=0, style=solid];
m1_297 -> m1_89  [key=2, style=dotted];
m1_298 -> m1_299  [key=0, style=solid];
m1_298 -> m1_303  [key=2, style=dotted];
m1_298 -> m1_298  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m1_295 -> m1_296  [key=0, style=solid];
m1_295 -> m1_299  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_295 -> m1_275  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m1_296 -> m1_297  [key=0, style=solid];
m1_296 -> m1_300  [key=0, style=solid];
m1_299 -> m1_296  [key=0, style=solid];
m1_299 -> m1_299  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_302 -> m1_67  [key=0, style=bold, color=blue];
m1_310 -> m1_311  [key=0, style=solid];
m1_310 -> m1_312  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m1_310 -> m1_313  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.DateTime>"];
m1_310 -> m1_318  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.DateTime>"];
m1_310 -> m1_319  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.DateTime>"];
m1_310 -> m1_320  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.DateTime>"];
m1_310 -> m1_316  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetTimelineStats"];
m1_311 -> m1_312  [key=0, style=solid];
m1_311 -> m1_311  [key=3, color=darkorchid, style=bold, label="Local variable string sqlQuery"];
m1_312 -> m1_313  [key=0, style=solid];
m1_312 -> m1_324  [key=2, style=dotted];
m1_312 -> m1_206  [key=2, style=dotted];
m1_312 -> m1_328  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_312 -> m1_331  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_312 -> m1_314  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m1_312 -> m1_315  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m1_312 -> m1_319  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m1_313 -> m1_314  [key=0, style=solid];
m1_313 -> m1_316  [key=0, style=solid];
m1_313 -> m1_315  [key=1, style=dashed, color=darkseagreen4, label=key];
m1_318 -> m1_319  [key=0, style=solid];
m1_318 -> m1_322  [key=0, style=solid];
m1_318 -> m1_275  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m1_319 -> m1_320  [key=0, style=solid];
m1_319 -> m1_327  [key=2, style=dotted];
m1_320 -> m1_321  [key=0, style=solid];
m1_320 -> m1_327  [key=2, style=dotted];
m1_320 -> m1_325  [key=2, style=dotted];
m1_314 -> m1_315  [key=0, style=solid];
m1_314 -> m1_313  [key=0, style=solid];
m1_314 -> m1_268  [key=2, style=dotted];
m1_315 -> m1_313  [key=0, style=solid];
m1_315 -> m1_325  [key=2, style=dotted];
m1_316 -> m1_317  [key=0, style=solid];
m1_316 -> m1_326  [key=2, style=dotted];
m1_316 -> m1_320  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_316 -> m1_322  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_317 -> m1_318  [key=0, style=solid];
m1_317 -> m1_319  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_317 -> m1_320  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_317 -> m1_321  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_322 -> m1_323  [key=0, style=solid];
m1_321 -> m1_318  [key=0, style=solid];
m1_321 -> m1_321  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_323 -> m1_310  [key=0, style=bold, color=blue];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_160  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_158 -> m1_9  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.Monitoring.JobList<Hangfire.Storage.Monitoring.EnqueuedJobDto> EnqueuedJobs"];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_19  [key=2, style=dotted];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_163  [key=2, style=dotted];
m1_160 -> m1_165  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_9  [key=2, style=dotted];
m1_161 -> m1_164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_162 -> m1_158  [key=0, style=bold, color=blue];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_9  [key=3, color=darkorchid, style=bold, label="method methodReturn long ProcessingCount"];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_9  [key=2, style=dotted];
m1_33 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_34 -> m1_32  [key=0, style=bold, color=blue];
m1_393 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_102  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_113  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_123  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_128  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_155  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_159  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_161  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_165  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_171  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_175  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_182  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_186  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_189  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_192  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_202  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_221  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_224  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_227  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_230  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_234  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_235  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_281  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_301  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_334  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_344  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_366  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_393 -> m1_386  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerMonitoringApi"];
m1_394 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_395 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_396 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_397 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_398 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_399 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_400 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_401 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_402 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_403 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_404 -> m1_155  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m1_405 -> m1_165  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobIds];
m1_406 -> m1_175  [key=1, style=dashed, color=darkseagreen4, label=fetchedJobIds];
m1_407 -> m1_196  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_408 -> m1_242  [key=1, style=dashed, color=darkseagreen4, label=sql];
m1_409 -> m1_266  [key=1, style=dashed, color=red, label=countByStates];
m1_410 -> m1_286  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_411 -> m1_305  [key=1, style=dashed, color=darkseagreen4, label=string];
}
