digraph  {
n54 [label="Hangfire.Common.JobFilterProviderCollection", span=""];
n55 [label="Hangfire.Common.Job", span=""];
n0 [cluster="Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection()", label="Entry Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection()", span="34-34"];
n1 [cluster="Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection()", label="Exit Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection()", span="34-34"];
n2 [cluster="Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])", label="Entry Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])", span="38-38"];
n3 [cluster="Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])", label="Exit Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])", span="38-38"];
n4 [cluster="Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", label="Entry Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", span="48-48"];
n5 [cluster="Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", label="IEnumerable<JobFilter> combinedFilters =\r\n                Items.SelectMany(fp => fp.GetFilters(job))\r\n                    .OrderBy(filter => filter, _filterComparer)", span="50-52"];
n13 [cluster="lambda expression", label="fp.GetFilters(job)", span="51-51"];
n6 [cluster="Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", label="return RemoveDuplicates(combinedFilters.Reverse()).Reverse();", span="55-55"];
n8 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
n9 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)", span="0-0"];
n12 [cluster="lambda expression", label="Entry lambda expression", span="51-51"];
n16 [cluster="lambda expression", label="Entry lambda expression", span="52-52"];
n7 [cluster="Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", label="Exit Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", span="48-48"];
n10 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
n11 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", label="Entry Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="58-58"];
n14 [cluster="lambda expression", label="Exit lambda expression", span="51-51"];
n15 [cluster="Hangfire.Common.IJobFilterProvider.GetFilters(Hangfire.Common.Job)", label="Entry Hangfire.Common.IJobFilterProvider.GetFilters(Hangfire.Common.Job)", span="32-32"];
n17 [cluster="lambda expression", label=filter, span="52-52"];
n18 [cluster="lambda expression", label="Exit lambda expression", span="52-52"];
n19 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", label="var visitedTypes = new HashSet<Type>()", span="61-61"];
n24 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", label="yield return filter;", span="70-70"];
n20 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", label=filters, span="63-63"];
n27 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
n23 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", label="!visitedTypes.Contains(filterInstanceType) || AllowMultiple(filterInstance)", span="68-68"];
n25 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", label="visitedTypes.Add(filterInstanceType)", span="71-71"];
n21 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", label="var filterInstance = filter.Instance", span="65-65"];
n26 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", label="Exit Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="58-58"];
n22 [cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", label="var filterInstanceType = filterInstance.GetType()", span="66-66"];
n28 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n29 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
n30 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", label="Entry Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", span="76-76"];
n31 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
n32 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", label="var mvcFilter = filterInstance as IJobFilter", span="78-78"];
n33 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", label="mvcFilter == null", span="79-79"];
n35 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", label="return mvcFilter.AllowMultiple;", span="84-84"];
n34 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", label="return true;", span="81-81"];
n36 [cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", label="Exit Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", span="76-76"];
n37 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", label="Entry Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", span="89-89"];
n38 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", label="x == null && y == null", span="92-92"];
n40 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", label="x == null", span="96-96"];
n42 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", label="y == null", span="100-100"];
n44 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", label="x.Order < y.Order", span="107-107"];
n46 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", label="x.Order > y.Order", span="111-111"];
n48 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", label="x.Scope < y.Scope", span="118-118"];
n50 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", label="x.Scope > y.Scope", span="122-122"];
n39 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", label="return 0;", span="94-94"];
n41 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", label="return -1;", span="98-98"];
n43 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", label="return 1;", span="102-102"];
n45 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", label="return -1;", span="109-109"];
n47 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", label="return 1;", span="113-113"];
n49 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", label="return -1;", span="120-120"];
n51 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", label="return 1;", span="124-124"];
n52 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", label="return 0;", span="127-127"];
n53 [cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", label="Exit Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", span="89-89"];
d2 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, label="InvisibilityTimeout = TimeSpan.FromMinutes(5)", prediction=0, span="27-27"];
d7 [label="HangFire.SqlServer.SqlServerStorageOptions", span=""];
d1 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="26-26"];
d3 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", label="PrepareSchemaIfNecessary = true", span="29-29"];
d6 [cluster="System.TimeSpan.FromMinutes(double)", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
d0 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24"];
d5 [cluster="System.TimeSpan.FromSeconds(double)", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
d4 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", label="Exit HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24"];
m0_10 [cluster="Mock<IStateMachineFactory>.cstr", file="WorkerManagerFacts.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m0_34 [cluster="Unk.Equal", file="WorkerManagerFacts.cs", label="Entry Unk.Equal", span=""];
m0_47 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", span="70-70"];
m0_48 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_manager.Object.Execute(new CancellationToken(true))", span="72-72"];
m0_49 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_workerRunners[0].Verify(x => x.Start())", span="74-74"];
m0_50 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_workerRunners[1].Verify(x => x.Start())", span="75-75"];
m0_51 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", span="70-70"];
m0_70 [cluster="Unk.Stop", file="WorkerManagerFacts.cs", label="Entry Unk.Stop", span=""];
m0_74 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", span="88-88"];
m0_76 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_workerRunners[0].Verify(x => x.Dispose())", span="92-92"];
m0_77 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_workerRunners[1].Verify(x => x.Dispose())", span="93-93"];
m0_78 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", span="88-88"];
m0_11 [cluster="Mock<IServerComponentRunner>.cstr", file="WorkerManagerFacts.cs", label="Entry Mock<IServerComponentRunner>.cstr", span=""];
m0_12 [cluster="Mock<WorkerManager>.cstr", file="WorkerManagerFacts.cs", label="Entry Mock<WorkerManager>.cstr", span=""];
m0_0 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", span="18-18"];
m0_1 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="WorkerManagerFacts.cs", label="_sharedContext = new SharedWorkerContext(\r\n                ''server'',\r\n                new[] { ''default'' },\r\n                new Mock<JobStorage>().Object,\r\n                new Mock<IJobPerformanceProcess>().Object,\r\n                new Mock<JobActivator>().Object,\r\n                new Mock<IStateMachineFactory>().Object)", span="20-26"];
m0_2 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="WorkerManagerFacts.cs", label="_workerRunners = new[]\r\n            {\r\n                new Mock<IServerComponentRunner>(), \r\n                new Mock<IServerComponentRunner>()\r\n            }", span="28-32"];
m0_3 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="WorkerManagerFacts.cs", label="_manager = new Mock<WorkerManager>(\r\n                _sharedContext, WorkerCount)", span="34-35"];
m0_4 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="WorkerManagerFacts.cs", label="_manager.Setup(x => x.CreateWorkerRunner(It.IsNotNull<WorkerContext>()))\r\n                .Returns((WorkerContext context) => _workerRunners[context.WorkerNumber - 1].Object)", span="37-38"];
m0_5 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", span="18-18"];
m0_18 [cluster="Unk.>", file="WorkerManagerFacts.cs", label="Entry Unk.>", span=""];
m0_23 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", span="42-42"];
m0_24 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", file="WorkerManagerFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new WorkerManager(null, WorkerCount))", span="44-45"];
m0_25 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", span="42-42"];
m0_30 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", span="49-49"];
m0_31 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="WorkerManagerFacts.cs", label="var exception = Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => new WorkerManager(\r\n                    _sharedContext, 0))", span="51-53"];
m0_32 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="WorkerManagerFacts.cs", label="Assert.Equal(''workerCount'', exception.ParamName)", span="55-55"];
m0_33 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", span="49-49"];
m0_46 [cluster="Unk.NotNull", file="WorkerManagerFacts.cs", label="Entry Unk.NotNull", span=""];
m0_44 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", file="WorkerManagerFacts.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", span="27-27"];
m0_13 [cluster="Unk.Setup", file="WorkerManagerFacts.cs", label="Entry Unk.Setup", span=""];
m0_79 [cluster="Unk.Dispose", file="WorkerManagerFacts.cs", label="Entry Unk.Dispose", span=""];
m0_45 [cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="WorkerManagerFacts.cs", label="Entry HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", span="62-62"];
m0_8 [cluster="Mock<IJobPerformanceProcess>.cstr", file="WorkerManagerFacts.cs", label="Entry Mock<IJobPerformanceProcess>.cstr", span=""];
m0_83 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="93-93"];
m0_15 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="37-37"];
m0_20 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="38-38"];
m0_16 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.CreateWorkerRunner(It.IsNotNull<WorkerContext>())", span="37-37"];
m0_17 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="37-37"];
m0_21 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="_workerRunners[context.WorkerNumber - 1].Object", span="38-38"];
m0_22 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="38-38"];
m0_26 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="45-45"];
m0_27 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="new WorkerManager(null, WorkerCount)", span="45-45"];
m0_28 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="45-45"];
m0_35 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="52-53"];
m0_36 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="new WorkerManager(\r\n                    _sharedContext, 0)", span="52-53"];
m0_37 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="52-53"];
m0_55 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="74-74"];
m0_59 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="75-75"];
m0_56 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.Start()", span="74-74"];
m0_57 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="74-74"];
m0_60 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.Start()", span="75-75"];
m0_61 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="75-75"];
m0_67 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="83-83"];
m0_71 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="84-84"];
m0_68 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.Stop()", span="83-83"];
m0_69 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="83-83"];
m0_72 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.Stop()", span="84-84"];
m0_73 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="84-84"];
m0_80 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="92-92"];
m0_81 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.Dispose()", span="92-92"];
m0_82 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="92-92"];
m0_84 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.Dispose()", span="93-93"];
m0_85 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="93-93"];
m0_52 [cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="WorkerManagerFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0"];
m0_58 [cluster="Unk.Start", file="WorkerManagerFacts.cs", label="Entry Unk.Start", span=""];
m0_9 [cluster="Mock<JobActivator>.cstr", file="WorkerManagerFacts.cs", label="Entry Mock<JobActivator>.cstr", span=""];
m0_19 [cluster="Unk.CreateWorkerRunner", file="WorkerManagerFacts.cs", label="Entry Unk.CreateWorkerRunner", span=""];
m0_62 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", span="79-79"];
m0_63 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_manager.Object.Execute(new CancellationToken(true))", span="81-81"];
m0_64 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_workerRunners[0].Verify(x => x.Stop())", span="83-83"];
m0_65 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_workerRunners[1].Verify(x => x.Stop())", span="84-84"];
m0_66 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", span="79-79"];
m0_53 [cluster="Unk.Execute", file="WorkerManagerFacts.cs", label="Entry Unk.Execute", span=""];
m0_6 [cluster="SharedWorkerContext.cstr", file="WorkerManagerFacts.cs", label="Entry SharedWorkerContext.cstr", span=""];
m0_14 [cluster="Unk.Returns", file="WorkerManagerFacts.cs", label="Entry Unk.Returns", span=""];
m0_29 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManagerFacts.cs", label="Entry HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="30-30"];
m0_54 [cluster="Unk.Verify", file="WorkerManagerFacts.cs", label="Entry Unk.Verify", span=""];
m0_7 [cluster="Mock<JobStorage>.cstr", file="WorkerManagerFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m0_38 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", span="59-59"];
m0_39 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="WorkerManagerFacts.cs", label="var manager = new WorkerManager(_sharedContext, WorkerCount)", span="61-61"];
m0_40 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="WorkerManagerFacts.cs", label="var context = new WorkerContext(_sharedContext, 1)", span="62-62"];
m0_41 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="WorkerManagerFacts.cs", label="var worker = manager.CreateWorkerRunner(context)", span="64-64"];
m0_42 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="WorkerManagerFacts.cs", label="Assert.NotNull(worker)", span="66-66"];
m0_43 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", span="59-59"];
m0_86 [file="WorkerManagerFacts.cs", label="HangFire.Core.Tests.Server.WorkerManagerFacts", span=""];
n54 -> n5  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilterProviderCollection", style=dashed];
n55 -> n13  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
n4 -> n13  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
n5 -> n12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n5 -> n16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n11 -> n20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>", style=dashed];
n19 -> n23  [color=darkseagreen4, key=1, label=visitedTypes, style=dashed];
n19 -> n25  [color=darkseagreen4, key=1, label=visitedTypes, style=dashed];
n20 -> n24  [color=darkseagreen4, key=1, label=filter, style=dashed];
n21 -> n23  [color=darkseagreen4, key=1, label=filterInstance, style=dashed];
n22 -> n25  [color=darkseagreen4, key=1, label=filterInstanceType, style=dashed];
n32 -> n35  [color=darkseagreen4, key=1, label=mvcFilter, style=dashed];
n37 -> n40  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
n37 -> n42  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
n37 -> n44  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
n37 -> n46  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
n37 -> n48  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
n37 -> n50  [color=darkseagreen4, key=1, label="Hangfire.Common.JobFilter", style=dashed];
m0_49 -> m0_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_50 -> m0_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_76 -> m0_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_77 -> m0_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_4 -> m0_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_4 -> m0_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_24 -> m0_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_31 -> m0_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_64 -> m0_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_65 -> m0_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_86 -> m0_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m0_86 -> m0_21  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m0_86 -> m0_36  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m0_86 -> m0_48  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m0_86 -> m0_49  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m0_86 -> m0_50  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m0_86 -> m0_63  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m0_86 -> m0_64  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m0_86 -> m0_65  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m0_86 -> m0_76  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m0_86 -> m0_77  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
}
