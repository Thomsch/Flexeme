digraph  {
n83 [label="HangFire.SqlServer.SqlServerStorage", span=""];
n0 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="32-32"];
n1 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", label="Exit HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="32-32"];
n2 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="37-37"];
n3 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", label="connectionString == null", span="39-39"];
n5 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", color=red, community=0, label="7: options == null", span="40-40"];
n7 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", label="_options = options", span="42-42"];
n8 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", label="_connectionString = connectionString", span="43-43"];
n9 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", label="options.PrepareSchemaIfNecessary", span="45-45"];
n12 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", label="var defaultQueueProvider = new SqlServerJobQueueProvider(options)", span="53-53"];
n4 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", label="throw new ArgumentNullException(''connectionString'');", span="39-39"];
n6 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", color=red, community=0, label="7: throw new ArgumentNullException(''options'');", span="40-40"];
n10 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", label="var connection = CreateAndOpenConnection()", span="47-47"];
n11 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", label="SqlServerObjectsInstaller.Install(connection)", span="49-49"];
n16 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", label="Entry HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="126-126"];
n17 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="34-34"];
n13 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", label="QueueProviders = new PersistentJobQueueProviderCollection(defaultQueueProvider)", span="54-54"];
n18 [cluster="HangFire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(HangFire.SqlServer.SqlServerStorageOptions)", label="Entry HangFire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(HangFire.SqlServer.SqlServerStorageOptions)", span="25-25"];
n14 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", label="Exit HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="37-37"];
n19 [cluster="HangFire.SqlServer.PersistentJobQueueProviderCollection.PersistentJobQueueProviderCollection(HangFire.SqlServer.IPersistentJobQueueProvider)", label="Entry HangFire.SqlServer.PersistentJobQueueProviderCollection.PersistentJobQueueProviderCollection(HangFire.SqlServer.IPersistentJobQueueProvider)", span="31-31"];
n15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n20 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", label="Entry HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="59-59"];
n21 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", label="return new SqlServerMonitoringApi(CreateAndOpenConnection(), QueueProviders);", span="61-61"];
n22 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", label="Exit HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="59-59"];
n23 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="36-36"];
n24 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", label="Entry HangFire.SqlServer.SqlServerStorage.GetConnection()", span="64-64"];
n25 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", label="var connection = CreateAndOpenConnection()", span="66-66"];
n26 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", label="return new SqlServerConnection(connection, QueueProviders);", span="68-68"];
n27 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", label="Exit HangFire.SqlServer.SqlServerStorage.GetConnection()", span="64-64"];
n28 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35"];
n29 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", label="Entry HangFire.SqlServer.SqlServerStorage.GetComponents()", span="71-71"];
n30 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", label="yield return new ExpirationManager(this);", span="73-73"];
n31 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", label="Exit HangFire.SqlServer.SqlServerStorage.GetComponents()", span="71-71"];
n32 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", label="Entry HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="38-38"];
n33 [cluster="HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", label="Entry HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", span="76-76"];
n34 [cluster="HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", label="logger.Info(''Using the following options for SQL Server job storage:'')", span="78-78"];
n35 [cluster="HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", label="logger.InfoFormat(''    Queue poll interval: {0}.'', _options.QueuePollInterval)", span="79-79"];
n36 [cluster="HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", label="logger.InfoFormat(''    Invisibility timeout: {0}.'', _options.InvisibilityTimeout)", span="80-80"];
n38 [cluster="Unk.Info", label="Entry Unk.Info", span=""];
n39 [cluster="Unk.InfoFormat", label="Entry Unk.InfoFormat", span=""];
n37 [cluster="HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", label="Exit HangFire.SqlServer.SqlServerStorage.WriteOptionsToLog(ILog)", span="76-76"];
n40 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", label="Entry HangFire.SqlServer.SqlServerStorage.ToString()", span="83-83"];
n41 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", label="string canNotParseMessage = ''<Connection string can not be parsed>''", span="85-85"];
n42 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", label="var parts = _connectionString.Split(new[] { ';' }, StringSplitOptions.RemoveEmptyEntries)\r\n                    .Select(x => x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries))\r\n                    .Select(x => new { Key = x[0].Trim(), Value = x[1].Trim() })\r\n                    .ToDictionary(x => x.Key, x => x.Value)", span="89-92"];
n52 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", label="return builder.Length != 0 \r\n                    ? String.Format(''SQL Server: {0}'', builder) \r\n                    : canNotParseMessage;", span="116-118"];
n54 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", label="return canNotParseMessage;", span="122-122"];
n43 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", label="var builder = new StringBuilder()", span="94-94"];
n56 [cluster="string.Split(char[], System.StringSplitOptions)", label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0"];
n57 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
n58 [cluster="Unk.ToDictionary", label="Entry Unk.ToDictionary", span=""];
n64 [cluster="lambda expression", label="Entry lambda expression", span="90-90"];
n67 [cluster="lambda expression", label="Entry lambda expression", span="91-91"];
n71 [cluster="lambda expression", label="Entry lambda expression", span="92-92"];
n74 [cluster="lambda expression", label="Entry lambda expression", span="92-92"];
n45 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", label="parts.ContainsKey(alias)", span="98-98"];
n46 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", label="builder.AppendFormat(''{1}'', alias, parts[alias])", span="100-100"];
n50 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", label="parts.ContainsKey(alias)", span="109-109"];
n51 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", label="builder.AppendFormat(''{1}'', alias, parts[alias])", span="111-111"];
n44 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", label="new[] { ''Data Source'', ''Server'', ''Address'', ''Addr'', ''Network Address'' }", span="96-96"];
n59 [cluster="System.Text.StringBuilder.StringBuilder()", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
n47 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", label="builder.Length != 0", span="105-105"];
n48 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", label="builder.Append(''@'')", span="105-105"];
n60 [cluster="Unk.ContainsKey", label="Entry Unk.ContainsKey", span=""];
n61 [cluster="Unk.AppendFormat", label="Entry Unk.AppendFormat", span=""];
n49 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", label="new[] { ''Database'', ''Initial Catalog'' }", span="107-107"];
n62 [cluster="System.Text.StringBuilder.Append(string)", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
n53 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", label=Exception, span="120-120"];
n55 [cluster="HangFire.SqlServer.SqlServerStorage.ToString()", label="Exit HangFire.SqlServer.SqlServerStorage.ToString()", span="83-83"];
n63 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
n65 [cluster="lambda expression", label="x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries)", span="90-90"];
n66 [cluster="lambda expression", label="Exit lambda expression", span="90-90"];
n68 [cluster="lambda expression", label="new { Key = x[0].Trim(), Value = x[1].Trim() }", span="91-91"];
n69 [cluster="lambda expression", label="Exit lambda expression", span="91-91"];
n70 [cluster="Unk.Trim", label="Entry Unk.Trim", span=""];
n72 [cluster="lambda expression", label="x.Key", span="92-92"];
n73 [cluster="lambda expression", label="Exit lambda expression", span="92-92"];
n75 [cluster="lambda expression", label="x.Value", span="92-92"];
n76 [cluster="lambda expression", label="Exit lambda expression", span="92-92"];
n77 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", label="var connection = new SqlConnection(_connectionString)", span="128-128"];
n78 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", label="connection.Open()", span="129-129"];
n81 [cluster="SqlConnection.cstr", label="Entry SqlConnection.cstr", span=""];
n79 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", label="return connection;", span="131-131"];
n82 [cluster="Unk.Open", label="Entry Unk.Open", span=""];
n80 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", label="Exit HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="126-126"];
d11 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=green, community=0, label="15: type == null", span="46-46"];
d10 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", label="Entry Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", span="41-41"];
d12 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=green, community=0, label="15: throw new ArgumentNullException(nameof(type));", span="46-46"];
d13 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=green, community=0, label="15: name == null", span="47-47"];
d38 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", label="Exit Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", span="41-41"];
d40 [cluster="Unk.nameof", label="Entry Unk.nameof", span=""];
d14 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=green, community=0, label="15: throw new ArgumentNullException(nameof(name));", span="47-47"];
d15 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=green, community=0, label="15: parameterTypes = parameterTypes ?? new Type[0]", span="49-49"];
d16 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", label="var methodCandidates = new List<MethodInfo>(type.GetRuntimeMethods())", span="51-51"];
d22 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", label="parameters.Length != parameterTypes.Length", span="66-66"];
d29 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", label="var actualType = parameterTypes[i]", span="80-80"];
d32 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=green, community=0, label="15: parameterType.GetTypeInfo().IsAssignableFrom(actualType.GetTypeInfo())", span="90-90"];
d28 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", label="var parameterType = parameter.ParameterType", span="79-79"];
d30 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", label="parameterType.IsGenericParameter", span="83-83"];
d33 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", label="parameterTypesMatched = false", span="92-92"];
d26 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", label="i < parameters.Length", span="76-76"];
d5 [cluster="System.Type.GetTypeInfo()", label="Entry System.Type.GetTypeInfo()", span="0-0"];
d49 [cluster="System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)", label="Entry System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)", span="0-0"];
d17 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", label="type.GetTypeInfo().IsInterface", span="53-53"];
d18 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", label="methodCandidates.AddRange(type.GetTypeInfo().ImplementedInterfaces.SelectMany(x => x.GetRuntimeMethods()))", span="55-55"];
d20 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", label="!methodCandidate.Name.Equals(name, StringComparison.Ordinal)", span="60-60"];
d37 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", label="return null;", span="104-104"];
d36 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", label="return methodCandidate.ContainsGenericParameters\r\n                    ? methodCandidate.MakeGenericMethod(genericArguments.ToArray())\r\n                    : methodCandidate;", span="99-101"];
d41 [cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
d42 [cluster="System.Type.GetRuntimeMethods()", label="Entry System.Type.GetRuntimeMethods()", span="0-0"];
d19 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", label=methodCandidates, span="58-58"];
d21 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", label="var parameters = methodCandidate.GetParameters()", span="65-65"];
d23 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", label="var parameterTypesMatched = true", span="71-71"];
d25 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", label="var i = 0", span="76-76"];
d31 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", label="genericArguments.Add(actualType)", span="85-85"];
d27 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", label="var parameter = parameters[i]", span="78-78"];
d35 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", label="!parameterTypesMatched", span="96-96"];
d34 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", label="i++", span="76-76"];
d1 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", label="!type.GetTypeInfo().IsGenericType", span="29-29"];
d68 [cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", label="var genericArguments = type .GetTypeInfo().GetAllGenericArguments()", span="128-128"];
d43 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
d44 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
d52 [cluster="lambda expression", label="Entry lambda expression", span="55-55"];
d45 [cluster="string.Equals(string, System.StringComparison)", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
d24 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", label="var genericArguments = new List<Type>()", span="72-72"];
d50 [cluster="System.Collections.Generic.List<T>.ToArray()", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
d51 [cluster="System.Reflection.MethodInfo.MakeGenericMethod(params System.Type[])", label="Entry System.Reflection.MethodInfo.MakeGenericMethod(params System.Type[])", span="0-0"];
d53 [cluster="lambda expression", label="x.GetRuntimeMethods()", span="55-55"];
d46 [cluster="System.Reflection.MethodBase.GetParameters()", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
d48 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
d0 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", label="Entry Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", span="27-27"];
d2 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", label="return type.GetFullNameWithoutNamespace()\r\n                        .ReplacePlusWithDotInNestedTypeName();", span="31-32"];
d3 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", label="return type.GetGenericTypeDefinition()\r\n                    .GetFullNameWithoutNamespace()\r\n                    .ReplacePlusWithDotInNestedTypeName()\r\n                    .ReplaceGenericParametersInGenericTypeName(type);", span="35-38"];
d67 [cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", label="Entry Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", span="126-126"];
d69 [cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", label="string regexForGenericArguments = @''`[1-9]\d*''", span="130-130"];
d74 [cluster="System.Reflection.TypeInfo.GetAllGenericArguments()", label="Entry System.Reflection.TypeInfo.GetAllGenericArguments()", span="145-145"];
d71 [cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", label="typeName = rgx.Replace(typeName, match =>\r\n            {\r\n                var currentGenericArgumentNumbers = int.Parse(match.Value.Substring(1));\r\n                var currentArguments = string.Join('','', genericArguments.Take(currentGenericArgumentNumbers).Select(ToGenericTypeString));\r\n                genericArguments = genericArguments.Skip(currentGenericArgumentNumbers).ToArray();\r\n                return string.Concat(''<'', currentArguments, ''>'');\r\n            })", span="134-140"];
d54 [cluster="lambda expression", label="Exit lambda expression", span="55-55"];
d47 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
d4 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", label="Exit Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", span="27-27"];
d9 [cluster="string.ReplaceGenericParametersInGenericTypeName(System.Type)", label="Entry string.ReplaceGenericParametersInGenericTypeName(System.Type)", span="126-126"];
d7 [cluster="string.ReplacePlusWithDotInNestedTypeName()", label="Entry string.ReplacePlusWithDotInNestedTypeName()", span="121-121"];
d6 [cluster="System.Type.GetFullNameWithoutNamespace()", label="Entry System.Type.GetFullNameWithoutNamespace()", span="107-107"];
d8 [cluster="System.Type.GetGenericTypeDefinition()", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
d73 [cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", label="Exit Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", span="126-126"];
d70 [cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", label="var rgx = new Regex(regexForGenericArguments)", span="132-132"];
d72 [cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", label="return typeName;", span="142-142"];
d76 [cluster="Unk.Replace", label="Entry Unk.Replace", span=""];
d77 [cluster="lambda expression", label="Entry lambda expression", span="134-140"];
d79 [cluster="lambda expression", label="var currentArguments = string.Join('','', genericArguments.Take(currentGenericArgumentNumbers).Select(ToGenericTypeString))", span="137-137"];
d80 [cluster="lambda expression", label="genericArguments = genericArguments.Skip(currentGenericArgumentNumbers).ToArray()", span="138-138"];
d75 [cluster="System.Text.RegularExpressions.Regex.Regex(string)", label="Entry System.Text.RegularExpressions.Regex.Regex(string)", span="0-0"];
d82 [cluster="lambda expression", label="Exit lambda expression", span="134-140"];
d78 [cluster="lambda expression", label="var currentGenericArgumentNumbers = int.Parse(match.Value.Substring(1))", span="136-136"];
d93 [label=genericArguments, span=""];
d84 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
d85 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
d86 [cluster="Unk.Join", label="Entry Unk.Join", span=""];
d81 [cluster="lambda expression", label="return string.Concat(''<'', currentArguments, ''>'');", span="139-139"];
d87 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
d88 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
d62 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
d83 [cluster="int.Parse(string)", label="Entry int.Parse(string)", span="0-0"];
d89 [cluster="string.Concat(string, string, string)", label="Entry string.Concat(string, string, string)", span="0-0"];
d59 [cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", label="return !String.IsNullOrEmpty(type.Namespace)\n                ? type.FullName.Substring(type.Namespace.Length + dotLength)\n                : type.FullName;", span="116-118"];
d55 [cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", label="Entry Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", span="107-107"];
d58 [cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", label="int dotLength = 1", span="114-114"];
d60 [cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", label="Exit Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", span="107-107"];
d61 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
d56 [cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", label="type.IsGenericParameter", span="109-109"];
d57 [cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", label="return type.Name;", span="111-111"];
m0_36 [cluster="HangFire.JobHelper.FromJson<T>(string)", file="TypeExtensionsFacts.cs", label="Entry HangFire.JobHelper.FromJson<T>(string)", span="37-37"];
m0_291 [cluster="Unk.TryParse", file="TypeExtensionsFacts.cs", label="Entry Unk.TryParse", span=""];
m0_13 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="TypeExtensionsFacts.cs", label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue));", span="32-32"];
m0_14 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.DequeuedCount(string)", span="28-28"];
m0_15 [cluster="HangFire.Web.JobStorage.FailedCount()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.FailedCount()", span="36-36"];
m0_30 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="TypeExtensionsFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m0_133 [cluster="int.Parse(string)", file="TypeExtensionsFacts.cs", label="Entry int.Parse(string)", span="0-0"];
m0_43 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80"];
m0_44 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="TypeExtensionsFacts.cs", label="25: Redis", span="82-82"];
m0_45 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="TypeExtensionsFacts.cs", label="25: var scheduledJobs = Redis.GetRangeWithScoresFromSortedSet(\r\n                    ''hangfire:schedule'',\r\n                    from,\r\n                    from + count - 1)", span="84-87"];
m0_46 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="TypeExtensionsFacts.cs", label="35: scheduledJobs.Count == 0", span="89-89"];
m0_51 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="TypeExtensionsFacts.cs", label="25: scheduledJobs", span="99-99"];
m0_56 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="TypeExtensionsFacts.cs", label="25: return scheduledJobs.ToDictionary(\r\n                    job => job.Key,\r\n                    job => new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="119-129"];
m0_47 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="TypeExtensionsFacts.cs", label="24: return new Dictionary<string, ScheduleDto>();", span="91-91"];
m0_48 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="TypeExtensionsFacts.cs", label="25: var jobs = new Dictionary<string, List<string>>()", span="94-94"];
m0_50 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="TypeExtensionsFacts.cs", label="25: var pipeline = Redis.CreatePipeline()", span="97-97"];
m0_54 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="TypeExtensionsFacts.cs", label="35: pipeline.QueueCommand(\r\n                            x => x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State''),\r\n                            x => states.Add(job.Key, x))", span="109-113"];
m0_52 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="TypeExtensionsFacts.cs", label="22: var job = scheduledJob", span="101-101"];
m0_55 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="TypeExtensionsFacts.cs", label="25: pipeline.Flush()", span="116-116"];
m0_49 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="TypeExtensionsFacts.cs", label="25: var states = new Dictionary<string, string>()", span="95-95"];
m0_53 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="TypeExtensionsFacts.cs", label="41: pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' }),\r\n                            x => jobs.Add(job.Key, x))", span="103-107"];
m0_57 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80"];
m0_38 [cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="TypeExtensionsFacts.cs", label="Entry HangFire.JobHelper.FromNullableStringTimestamp(string)", span="65-65"];
m0_214 [cluster="HangFire.Web.DequeuedJobDto.DequeuedJobDto()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.DequeuedJobDto.DequeuedJobDto()", span="5-5"];
m0_386 [cluster="HangFire.Web.StatisticsDto.StatisticsDto()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.StatisticsDto.StatisticsDto()", span="2-2"];
m0_29 [cluster="Unk.GetJobsWithProperties", file="TypeExtensionsFacts.cs", label="Entry Unk.GetJobsWithProperties", span=""];
m0_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="TypeExtensionsFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m0_359 [cluster="KeyValuePair<string, T>.cstr", file="TypeExtensionsFacts.cs", label="Entry KeyValuePair<string, T>.cstr", span=""];
m0_197 [cluster="HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", span="5-5"];
m0_60 [cluster="Unk.CreatePipeline", file="TypeExtensionsFacts.cs", label="Entry Unk.CreatePipeline", span=""];
m0_76 [cluster="Unk.GetValueFromHash", file="TypeExtensionsFacts.cs", label="Entry Unk.GetValueFromHash", span=""];
m0_0 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.ScheduledCount()", span="12-12"];
m0_1 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="TypeExtensionsFacts.cs", label=Redis, span="14-14"];
m0_3 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.ScheduledCount()", span="12-12"];
m0_2 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="TypeExtensionsFacts.cs", label="return Redis.GetSortedSetCount(''hangfire:schedule'');", span="16-16"];
m0_4 [cluster="Unk.GetSortedSetCount", file="TypeExtensionsFacts.cs", label="Entry Unk.GetSortedSetCount", span=""];
m0_23 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="52-52"];
m0_24 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", color=green, community=0, file="TypeExtensionsFacts.cs", label="2: Redis", span="55-55"];
m0_25 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", color=green, community=0, file="TypeExtensionsFacts.cs", label="4: var jobIds = Redis.GetRangeFromSortedSet(\r\n                    ''hangfire:processing'',\r\n                    from,\r\n                    from + count - 1)", span="57-60"];
m0_26 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", color=green, community=0, file="TypeExtensionsFacts.cs", label="4: return GetJobsWithProperties(Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''StartedAt'', ''ServerName'', ''State'' },\r\n                    (job, state) => new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }).OrderBy(x => x.Value.StartedAt).ToList();", span="62-76"];
m0_27 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="52-52"];
m0_134 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="TypeExtensionsFacts.cs", label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="60-60"];
m0_257 [cluster="Unk.ContainsKey", file="TypeExtensionsFacts.cs", label="Entry Unk.ContainsKey", span=""];
m0_5 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20"];
m0_234 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="TypeExtensionsFacts.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
m0_173 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="499-499"];
m0_331 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="517-519"];
m0_333 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="523-525"];
m0_328 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="var pipeline = redis.CreatePipeline()", span="511-511"];
m0_334 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="pipeline.Flush()", span="529-529"];
m0_335 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="return jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State)))\r\n                .ToList();", span="532-542"];
m0_325 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="return new List<KeyValuePair<string, T>>();", span="506-506"];
m0_326 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="508-508"];
m0_330 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="var id = jobId", span="515-515"];
m0_332 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="stateProperties != null", span="521-521"];
m0_327 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="509-509"];
m0_329 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label=jobIds, span="513-513"];
m0_324 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="jobIds.Count == 0", span="506-506"];
m0_336 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="499-499"];
m0_361 [cluster="Unk.selector", file="TypeExtensionsFacts.cs", label="Entry Unk.selector", span=""];
m0_345 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="TypeExtensionsFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m0_11 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="TypeExtensionsFacts.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m0_12 [cluster="Hangfire.Server.IServerProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="TypeExtensionsFacts.cs", label="Entry Hangfire.Server.IServerProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="26-26"];
m0_219 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="438-438"];
m0_278 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var result = new Dictionary<DateTime, long>()", span="452-452"];
m0_276 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="449-449"];
m0_270 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var dates = new List<DateTime>()", span="442-442"];
m0_277 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="450-450"];
m0_279 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var i = 0", span="453-453"];
m0_284 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="result.Add(dates[i], value)", span="461-461"];
m0_286 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="return result;", span="464-464"];
m0_272 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="i < 24", span="443-443"];
m0_269 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var endDate = DateTime.UtcNow", span="441-441"];
m0_271 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var i = 0", span="443-443"];
m0_273 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="dates.Add(endDate)", span="445-445"];
m0_280 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="i < dates.Count", span="453-453"];
m0_282 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="456-456"];
m0_285 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="i++", span="453-453"];
m0_283 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="value = 0", span="458-458"];
m0_275 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="i++", span="443-443"];
m0_274 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="endDate = endDate.AddHours(-1)", span="446-446"];
m0_281 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="long value", span="455-455"];
m0_287 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="438-438"];
m0_232 [cluster="Unk.TryToGetQueue", file="TypeExtensionsFacts.cs", label="Entry Unk.TryToGetQueue", span=""];
m0_58 [cluster="Unk.GetRangeWithScoresFromSortedSet", file="TypeExtensionsFacts.cs", label="Entry Unk.GetRangeWithScoresFromSortedSet", span=""];
m0_132 [cluster="HangFire.Web.ServerDto.ServerDto()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.ServerDto.ServerDto()", span="5-5"];
m0_6 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="TypeExtensionsFacts.cs", label=Redis, span="22-22"];
m0_7 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="TypeExtensionsFacts.cs", label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue));", span="24-24"];
m0_8 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20"];
m0_9 [cluster="string.Format(string, object)", file="TypeExtensionsFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m0_10 [cluster="Unk.GetListCount", file="TypeExtensionsFacts.cs", label="Entry Unk.GetListCount", span=""];
m0_258 [cluster="Unk.Where", file="TypeExtensionsFacts.cs", label="Entry Unk.Where", span=""];
m0_317 [cluster="System.DateTime.AddDays(double)", file="TypeExtensionsFacts.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m0_236 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.EnqueueScheduled(string)", span="392-392"];
m0_238 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs", label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="396-396"];
m0_237 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs", label=Redis, span="394-394"];
m0_239 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="397-397"];
m0_242 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs", label="return JobState.Apply(\r\n                    Redis,\r\n                    new EnqueuedState(jobId, ''The job has been enqueued by a user.'', queue),\r\n                    ScheduledState.Name);", span="404-407"];
m0_240 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs", label="String.IsNullOrEmpty(queue)", span="399-399"];
m0_241 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs", label="return false;", span="401-401"];
m0_243 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.EnqueueScheduled(string)", span="392-392"];
m0_174 [cluster="HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4"];
m0_360 [cluster="Unk.TrueForAll", file="TypeExtensionsFacts.cs", label="Entry Unk.TrueForAll", span=""];
m0_362 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="541-541"];
m0_32 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="66-76"];
m0_40 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="76-76"];
m0_33 [cluster="lambda expression", color=green, community=0, file="TypeExtensionsFacts.cs", label="32: new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }", span="66-76"];
m0_34 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="66-76"];
m0_41 [cluster="lambda expression", color=green, community=0, file="TypeExtensionsFacts.cs", label="4: x.Value.StartedAt", span="76-76"];
m0_42 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="76-76"];
m0_80 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="120-120"];
m0_83 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="121-129"];
m0_70 [cluster="lambda expression", color=green, community=0, file="TypeExtensionsFacts.cs", label="33: jobs.Add(job.Key, x)", span="107-107"];
m0_84 [cluster="lambda expression", color=green, community=0, file="TypeExtensionsFacts.cs", label="9: new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="121-129"];
m0_78 [cluster="lambda expression", color=green, community=0, file="TypeExtensionsFacts.cs", label="44: states.Add(job.Key, x)", span="113-113"];
m0_64 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="104-106"];
m0_69 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="107-107"];
m0_71 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="107-107"];
m0_85 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="121-129"];
m0_73 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="110-112"];
m0_77 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="113-113"];
m0_79 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="113-113"];
m0_65 [cluster="lambda expression", color=green, community=0, file="TypeExtensionsFacts.cs", label="9: x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' })", span="104-106"];
m0_74 [cluster="lambda expression", color=green, community=0, file="TypeExtensionsFacts.cs", label="45: x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State'')", span="110-112"];
m0_66 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="104-106"];
m0_75 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="110-112"];
m0_81 [cluster="lambda expression", color=green, community=0, file="TypeExtensionsFacts.cs", label="25: job.Key", span="120-120"];
m0_82 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="120-120"];
m0_129 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="184-190"];
m0_120 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="servers.Add(name, x)", span="173-173"];
m0_130 [cluster="lambda expression", color=green, community=0, file="TypeExtensionsFacts.cs", label="33: new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1])\r\n                }", span="184-190"];
m0_127 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="queues.Add(name, x)", span="178-178"];
m0_116 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="170-172"];
m0_119 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="173-173"];
m0_131 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="184-190"];
m0_117 [cluster="lambda expression", color=green, community=0, file="TypeExtensionsFacts.cs", label="9: x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'')", span="170-172"];
m0_123 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name))", span="176-177"];
m0_118 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="170-172"];
m0_141 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="208-218"];
m0_401 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.GetSortedSetCount(''hangfire:schedule'')", span="572-572"];
m0_407 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.GetSortedSetCount(''hangfire:processing'')", span="576-576"];
m0_421 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.GetSortedSetCount(''hangfire:failed'')", span="584-584"];
m0_142 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="208-218"];
m0_152 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="236-243"];
m0_195 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        }", span="283-289"];
m0_204 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="319-325"];
m0_212 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    }", span="343-351"];
m0_343 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="jobs.Add(id, x)", span="519-519"];
m0_351 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="states.Add(id, x)", span="525-525"];
m0_177 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="263-264"];
m0_183 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="268-268"];
m0_189 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="272-272"];
m0_322 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="481-481"];
m0_427 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="591-591"];
m0_339 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties)", span="518-518"];
m0_347 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="524-524"];
m0_122 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="176-177"];
m0_126 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="178-178"];
m0_121 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="173-173"];
m0_128 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="178-178"];
m0_124 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="176-177"];
m0_143 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="208-218"];
m0_400 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="572-572"];
m0_402 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="572-572"];
m0_406 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="576-576"];
m0_408 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="576-576"];
m0_420 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="584-584"];
m0_422 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="584-584"];
m0_151 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="236-243"];
m0_203 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="319-325"];
m0_211 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="343-351"];
m0_153 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="236-243"];
m0_194 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="283-289"];
m0_196 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="283-289"];
m0_205 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="319-325"];
m0_213 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="343-351"];
m0_259 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="432-432"];
m0_263 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="432-432"];
m0_266 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="432-432"];
m0_176 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="263-264"];
m0_179 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="265-265"];
m0_182 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="268-268"];
m0_185 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="269-269"];
m0_188 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="272-272"];
m0_191 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="273-273"];
m0_338 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="518-518"];
m0_341 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="519-519"];
m0_346 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="524-524"];
m0_349 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="525-525"];
m0_387 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="564-564"];
m0_391 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="565-565"];
m0_394 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="568-568"];
m0_397 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="569-569"];
m0_403 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="573-573"];
m0_409 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="577-577"];
m0_412 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="580-580"];
m0_416 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="581-581"];
m0_423 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="585-585"];
m0_426 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="591-591"];
m0_429 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="592-592"];
m0_342 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="!jobs.ContainsKey(id)", span="519-519"];
m0_344 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="519-519"];
m0_350 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="!states.ContainsKey(id)", span="525-525"];
m0_352 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="525-525"];
m0_178 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="263-264"];
m0_184 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="268-268"];
m0_190 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="272-272"];
m0_321 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="481-481"];
m0_323 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="481-481"];
m0_428 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="591-591"];
m0_340 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="518-518"];
m0_348 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="524-524"];
m0_293 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="449-449"];
m0_318 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="480-480"];
m0_353 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="533-538"];
m0_356 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Entry lambda expression", span="539-541"];
m0_260 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="!hiddenProperties.Contains(x.Key)", span="432-432"];
m0_261 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="432-432"];
m0_265 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="432-432"];
m0_264 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.Key", span="432-432"];
m0_268 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="432-432"];
m0_267 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.Value", span="432-432"];
m0_181 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="265-265"];
m0_180 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="firstJobIds = x", span="265-265"];
m0_187 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="269-269"];
m0_186 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="length = x", span="269-269"];
m0_193 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="273-273"];
m0_192 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="dequeued = x", span="273-273"];
m0_357 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State))", span="539-541"];
m0_354 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="533-538"];
m0_392 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="stats.Servers = x", span="565-565"];
m0_398 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="stats.Queues = x", span="569-569"];
m0_404 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="stats.Scheduled = x", span="573-573"];
m0_410 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="stats.Processing = x", span="577-577"];
m0_417 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="stats.Succeeded = long.Parse(x ?? ''0'')", span="581-581"];
m0_424 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="stats.Failed = x", span="585-585"];
m0_430 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="stats.Enqueued += x", span="592-592"];
m0_389 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="564-564"];
m0_388 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.GetSetCount(''hangfire:servers'')", span="564-564"];
m0_393 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="565-565"];
m0_396 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="568-568"];
m0_395 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.GetSetCount(''hangfire:queues'')", span="568-568"];
m0_399 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="569-569"];
m0_405 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="573-573"];
m0_411 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="577-577"];
m0_414 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="580-580"];
m0_413 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.GetValue(''hangfire:stats:succeeded'')", span="580-580"];
m0_418 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="581-581"];
m0_425 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="585-585"];
m0_431 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="592-592"];
m0_294 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="449-449"];
m0_295 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="449-449"];
m0_320 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="480-480"];
m0_319 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="x.ToString(''yyyy-MM-dd'')", span="480-480"];
m0_355 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="533-538"];
m0_358 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="539-541"];
m0_363 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="y == null", span="541-541"];
m0_364 [cluster="lambda expression", file="TypeExtensionsFacts.cs", label="Exit lambda expression", span="541-541"];
m0_28 [cluster="Unk.GetRangeFromSortedSet", file="TypeExtensionsFacts.cs", label="Entry Unk.GetRangeFromSortedSet", span=""];
m0_175 [cluster="System.Collections.Generic.List<T>.Add(T)", file="TypeExtensionsFacts.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_115 [cluster="Unk.ToList", file="TypeExtensionsFacts.cs", label="Entry Unk.ToList", span=""];
m0_67 [cluster="Unk.Format", file="TypeExtensionsFacts.cs", label="Entry Unk.Format", span=""];
m0_220 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.HourlyFailedJobs()", span="363-363"];
m0_222 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="TypeExtensionsFacts.cs", label="return GetHourlyTimelineStats(Redis, ''failed'');", span="367-367"];
m0_221 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="TypeExtensionsFacts.cs", label=Redis, span="365-365"];
m0_223 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.HourlyFailedJobs()", span="363-363"];
m0_35 [cluster="HangFire.Web.ProcessingJobDto.ProcessingJobDto()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.ProcessingJobDto.ProcessingJobDto()", span="5-5"];
m0_61 [cluster="Unk.QueueCommand", file="TypeExtensionsFacts.cs", label="Entry Unk.QueueCommand", span=""];
m0_135 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.FailedJobs(int, int)", span="194-194"];
m0_136 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", color=green, community=0, file="TypeExtensionsFacts.cs", label="39: Redis", span="196-196"];
m0_137 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", color=green, community=0, file="TypeExtensionsFacts.cs", label="32: var failedJobIds = Redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1)", span="198-201"];
m0_138 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", color=green, community=0, file="TypeExtensionsFacts.cs", label="41: return GetJobsWithProperties(\r\n                    Redis,\r\n                    failedJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'' },\r\n                    (job, state) => new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="203-218"];
m0_139 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.FailedJobs(int, int)", span="194-194"];
m0_37 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="TypeExtensionsFacts.cs", label="Entry HangFire.JobHelper.TryToGetQueue(string)", span="9-9"];
m0_16 [cluster="HangFire.Web.JobStorage.FailedCount()", file="TypeExtensionsFacts.cs", label=Redis, span="38-38"];
m0_144 [cluster="HangFire.Web.FailedJobDto.FailedJobDto()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.FailedJobDto.FailedJobDto()", span="5-5"];
m0_87 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="TypeExtensionsFacts.cs", label="Entry HangFire.JobHelper.FromTimestamp(long)", span="50-50"];
m0_296 [cluster="System.DateTime.ToString(string)", file="TypeExtensionsFacts.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m0_145 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.SucceededJobs(int, int)", span="222-222"];
m0_148 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="TypeExtensionsFacts.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    succeededJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''SucceededAt'', ''State'' },\r\n                    (job, state) => new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="231-243"];
m0_147 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="TypeExtensionsFacts.cs", label="var succeededJobIds = Redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1)", span="226-229"];
m0_146 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="TypeExtensionsFacts.cs", label=Redis, span="224-224"];
m0_149 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.SucceededJobs(int, int)", span="222-222"];
m0_172 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="TypeExtensionsFacts.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m0_290 [cluster="Unk.ElementAt", file="TypeExtensionsFacts.cs", label="Entry Unk.ElementAt", span=""];
m0_150 [cluster="Unk.GetRangeFromList", file="TypeExtensionsFacts.cs", label="Entry Unk.GetRangeFromList", span=""];
m0_155 [cluster="HangFire.Web.JobStorage.Queues()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.Queues()", span="247-247"];
m0_164 [cluster="HangFire.Web.JobStorage.Queues()", file="TypeExtensionsFacts.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x)", span="262-265"];
m0_165 [cluster="HangFire.Web.JobStorage.Queues()", file="TypeExtensionsFacts.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x)", span="267-269"];
m0_166 [cluster="HangFire.Web.JobStorage.Queues()", file="TypeExtensionsFacts.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => dequeued = x)", span="271-273"];
m0_163 [cluster="HangFire.Web.JobStorage.Queues()", file="TypeExtensionsFacts.cs", label="var pipeline = Redis.CreatePipeline()", span="260-260"];
m0_167 [cluster="HangFire.Web.JobStorage.Queues()", file="TypeExtensionsFacts.cs", label="pipeline.Flush()", span="275-275"];
m0_157 [cluster="HangFire.Web.JobStorage.Queues()", file="TypeExtensionsFacts.cs", label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="251-251"];
m0_159 [cluster="HangFire.Web.JobStorage.Queues()", file="TypeExtensionsFacts.cs", label=queues, span="254-254"];
m0_168 [cluster="HangFire.Web.JobStorage.Queues()", file="TypeExtensionsFacts.cs", label="var jobs = GetJobsWithProperties(\r\n                        Redis,\r\n                        firstJobIds,\r\n                        new[] { ''Type'', ''Args'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, state) => new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="278-289"];
m0_169 [cluster="HangFire.Web.JobStorage.Queues()", file="TypeExtensionsFacts.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Dequeued = dequeued\r\n                    })", span="291-297"];
m0_162 [cluster="HangFire.Web.JobStorage.Queues()", file="TypeExtensionsFacts.cs", label="long dequeued = 0", span="258-258"];
m0_156 [cluster="HangFire.Web.JobStorage.Queues()", file="TypeExtensionsFacts.cs", label=Redis, span="249-249"];
m0_158 [cluster="HangFire.Web.JobStorage.Queues()", file="TypeExtensionsFacts.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="252-252"];
m0_160 [cluster="HangFire.Web.JobStorage.Queues()", file="TypeExtensionsFacts.cs", label="IList<string> firstJobIds = null", span="256-256"];
m0_170 [cluster="HangFire.Web.JobStorage.Queues()", file="TypeExtensionsFacts.cs", label="return result;", span="300-300"];
m0_161 [cluster="HangFire.Web.JobStorage.Queues()", file="TypeExtensionsFacts.cs", label="long length = 0", span="257-257"];
m0_171 [cluster="HangFire.Web.JobStorage.Queues()", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.Queues()", span="247-247"];
m0_88 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133"];
m0_89 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", color=green, community=0, file="TypeExtensionsFacts.cs", label="22: Redis", span="135-135"];
m0_90 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", color=green, community=0, file="TypeExtensionsFacts.cs", label="44: return GetTimelineStats(Redis, ''succeeded'');", span="137-137"];
m0_91 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133"];
m0_62 [cluster="Unk.Flush", file="TypeExtensionsFacts.cs", label="Entry Unk.Flush", span=""];
m0_154 [cluster="HangFire.Web.SucceededJobDto.SucceededJobDto()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.SucceededJobDto.SucceededJobDto()", span="5-5"];
m0_419 [cluster="Unk.Parse", file="TypeExtensionsFacts.cs", label="Entry Unk.Parse", span=""];
m0_72 [cluster="Unk.Add", file="TypeExtensionsFacts.cs", label="Entry Unk.Add", span=""];
m0_97 [cluster="HangFire.Web.JobStorage.Servers()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.Servers()", span="149-149"];
m0_98 [cluster="HangFire.Web.JobStorage.Servers()", color=green, community=0, file="TypeExtensionsFacts.cs", label="24: Redis", span="151-151"];
m0_99 [cluster="HangFire.Web.JobStorage.Servers()", color=green, community=0, file="TypeExtensionsFacts.cs", label="24: var serverNames = Redis.GetAllItemsFromSet(''hangfire:servers'')", span="153-153"];
m0_100 [cluster="HangFire.Web.JobStorage.Servers()", color=green, community=0, file="TypeExtensionsFacts.cs", label="24: serverNames.Count == 0", span="155-155"];
m0_105 [cluster="HangFire.Web.JobStorage.Servers()", color=green, community=0, file="TypeExtensionsFacts.cs", label="35: serverNames", span="165-165"];
m0_110 [cluster="HangFire.Web.JobStorage.Servers()", color=green, community=0, file="TypeExtensionsFacts.cs", label="35: return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1])\r\n                }).ToList();", span="184-190"];
m0_101 [cluster="HangFire.Web.JobStorage.Servers()", color=green, community=0, file="TypeExtensionsFacts.cs", label="35: return new List<ServerDto>();", span="157-157"];
m0_102 [cluster="HangFire.Web.JobStorage.Servers()", color=green, community=0, file="TypeExtensionsFacts.cs", label="24: var servers = new Dictionary<string, List<string>>()", span="160-160"];
m0_104 [cluster="HangFire.Web.JobStorage.Servers()", color=green, community=0, file="TypeExtensionsFacts.cs", label="24: var pipeline = Redis.CreatePipeline()", span="163-163"];
m0_108 [cluster="HangFire.Web.JobStorage.Servers()", file="TypeExtensionsFacts.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x))", span="175-178"];
m0_106 [cluster="HangFire.Web.JobStorage.Servers()", color=green, community=0, file="TypeExtensionsFacts.cs", label="32: var name = serverName", span="167-167"];
m0_109 [cluster="HangFire.Web.JobStorage.Servers()", file="TypeExtensionsFacts.cs", label="pipeline.Flush()", span="181-181"];
m0_103 [cluster="HangFire.Web.JobStorage.Servers()", color=green, community=0, file="TypeExtensionsFacts.cs", label="24: var queues = new Dictionary<string, List<string>>()", span="161-161"];
m0_107 [cluster="HangFire.Web.JobStorage.Servers()", color=green, community=0, file="TypeExtensionsFacts.cs", label="29: pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt''),\r\n                            x => servers.Add(name, x))", span="169-173"];
m0_111 [cluster="HangFire.Web.JobStorage.Servers()", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.Servers()", span="149-149"];
m0_369 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.GetStatistics()", span="553-553"];
m0_374 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x)", span="563-565"];
m0_375 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x)", span="567-569"];
m0_376 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x)", span="571-573"];
m0_377 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x)", span="575-577"];
m0_378 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''))", span="579-581"];
m0_379 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x)", span="583-585"];
m0_382 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", span="590-592"];
m0_373 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="var pipeline = Redis.CreatePipeline()", span="561-561"];
m0_383 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="pipeline.Flush()", span="595-595"];
m0_372 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="559-559"];
m0_371 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="var stats = new StatisticsDto()", span="557-557"];
m0_380 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label=queues, span="587-587"];
m0_381 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="var queueName = queue", span="589-589"];
m0_384 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="return stats;", span="598-598"];
m0_370 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label=Redis, span="555-555"];
m0_385 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.GetStatistics()", span="553-553"];
m0_365 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.SucceededListCount()", span="545-545"];
m0_367 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="TypeExtensionsFacts.cs", label="return Redis.GetListCount(''hangfire:succeeded'');", span="549-549"];
m0_366 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="TypeExtensionsFacts.cs", label=Redis, span="547-547"];
m0_368 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.SucceededListCount()", span="545-545"];
m0_215 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.HourlySucceededJobs()", span="355-355"];
m0_217 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="TypeExtensionsFacts.cs", label="return GetHourlyTimelineStats(Redis, ''succeeded'');", span="359-359"];
m0_216 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="TypeExtensionsFacts.cs", label=Redis, span="357-357"];
m0_218 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.HourlySucceededJobs()", span="355-355"];
m0_39 [cluster="string.Equals(string, System.StringComparison)", file="TypeExtensionsFacts.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m0_235 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="TypeExtensionsFacts.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m0_288 [cluster="System.DateTime.AddHours(double)", file="TypeExtensionsFacts.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m0_92 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="467-467"];
m0_307 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var result = new Dictionary<DateTime, long>()", span="485-485"];
m0_298 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var endDate = DateTime.UtcNow.Date", span="470-470"];
m0_305 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="481-481"];
m0_306 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="483-483"];
m0_304 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="480-480"];
m0_300 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var dates = new List<DateTime>()", span="472-472"];
m0_308 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var i = 0", span="486-486"];
m0_313 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="result.Add(dates[i], value)", span="493-493"];
m0_315 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="return result;", span="496-496"];
m0_299 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="var startDate = endDate.AddDays(-7)", span="471-471"];
m0_301 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="startDate <= endDate", span="474-474"];
m0_302 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="dates.Add(endDate)", span="476-476"];
m0_303 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="endDate = endDate.AddDays(-1)", span="477-477"];
m0_311 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="489-489"];
m0_309 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="i < stringDates.Count", span="486-486"];
m0_314 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="i++", span="486-486"];
m0_312 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="value = 0", span="491-491"];
m0_310 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="long value", span="488-488"];
m0_316 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="467-467"];
m0_17 [cluster="HangFire.Web.JobStorage.FailedCount()", file="TypeExtensionsFacts.cs", label="Hangfire.Server.InfiniteLoopProcess", span=""];
m0_18 [cluster="HangFire.Web.JobStorage.FailedCount()", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.FailedCount()", span="36-36"];
m0_255 [cluster="HangFire.Web.JobDetailsDto.JobDetailsDto()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobDetailsDto.JobDetailsDto()", span="4-4"];
m0_244 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.JobDetails(string)", span="411-411"];
m0_252 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs", label="return new JobDetailsDto\r\n                {\r\n                    Type = job[''Type''],\r\n                    Arguments = JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']),\r\n                    State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                    Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = history\r\n                };", span="427-434"];
m0_251 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs", label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", span="423-425"];
m0_246 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs", label="var job = Redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="415-415"];
m0_249 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs", label="var hiddenProperties = new[] { ''Type'', ''Args'', ''State'' }", span="418-418"];
m0_250 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs", label="var historyList = Redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="420-421"];
m0_245 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs", label=Redis, span="413-413"];
m0_247 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs", label="job.Count == 0", span="416-416"];
m0_248 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs", label="return null;", span="416-416"];
m0_253 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.JobDetails(string)", span="411-411"];
m0_292 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="TypeExtensionsFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m0_297 [cluster="string.Format(string, object, object)", file="TypeExtensionsFacts.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m0_254 [cluster="Unk.GetAllEntriesFromHash", file="TypeExtensionsFacts.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m0_63 [cluster="Unk.ToDictionary", file="TypeExtensionsFacts.cs", label="Entry Unk.ToDictionary", span=""];
m0_337 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="TypeExtensionsFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0"];
m0_390 [cluster="Unk.GetSetCount", file="TypeExtensionsFacts.cs", label="Entry Unk.GetSetCount", span=""];
m0_206 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="329-329"];
m0_209 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="TypeExtensionsFacts.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'', ''State'', ''CreatedAt'', ''Fetched'', ''Checked'' },\r\n                    null,\r\n                    (job, state) => new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    });", span="338-351"];
m0_208 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="TypeExtensionsFacts.cs", label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1)", span="334-336"];
m0_207 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="TypeExtensionsFacts.cs", label=Redis, span="332-332"];
m0_210 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="329-329"];
m0_93 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141"];
m0_94 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", color=green, community=0, file="TypeExtensionsFacts.cs", label="22: Redis", span="143-143"];
m0_95 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", color=green, community=0, file="TypeExtensionsFacts.cs", label="13: return GetTimelineStats(Redis, ''failed'');", span="145-145"];
m0_96 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141"];
m0_256 [cluster="Unk.>", file="TypeExtensionsFacts.cs", label="Entry Unk.>", span=""];
m0_86 [cluster="HangFire.Web.ScheduleDto.ScheduleDto()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.ScheduleDto.ScheduleDto()", span="5-5"];
m0_59 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="TypeExtensionsFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_233 [cluster="string.IsNullOrEmpty(string)", file="TypeExtensionsFacts.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m0_289 [cluster="Unk.GetValuesMap", file="TypeExtensionsFacts.cs", label="Entry Unk.GetValuesMap", span=""];
m0_19 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.ProcessingCount()", span="44-44"];
m0_21 [cluster="HangFire.Web.JobStorage.ProcessingCount()", color=green, community=0, file="TypeExtensionsFacts.cs", label="5: return Redis.GetSortedSetCount(''hangfire:processing'');", span="48-48"];
m0_20 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="TypeExtensionsFacts.cs", label=Redis, span="46-46"];
m0_22 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.ProcessingCount()", span="44-44"];
m0_125 [cluster="Unk.GetAllItemsFromList", file="TypeExtensionsFacts.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m0_262 [cluster="Unk.Contains", file="TypeExtensionsFacts.cs", label="Entry Unk.Contains", span=""];
m0_114 [cluster="Unk.Select", file="TypeExtensionsFacts.cs", label="Entry Unk.Select", span=""];
m0_112 [cluster="Unk.GetAllItemsFromSet", file="TypeExtensionsFacts.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m0_140 [cluster="Unk.GetRangeFromSortedSetDesc", file="TypeExtensionsFacts.cs", label="Entry Unk.GetRangeFromSortedSetDesc", span=""];
m0_415 [cluster="Unk.GetValue", file="TypeExtensionsFacts.cs", label="Entry Unk.GetValue", span=""];
m0_68 [cluster="Unk.GetValuesFromHash", file="TypeExtensionsFacts.cs", label="Entry Unk.GetValuesFromHash", span=""];
m0_224 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.RetryJob(string)", span="371-371"];
m0_226 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs", label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="375-375"];
m0_225 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs", label=Redis, span="373-373"];
m0_227 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="377-377"];
m0_230 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs", label="return JobState.Apply(\r\n                    Redis,\r\n                    new EnqueuedState(jobId, ''The job has been retried by a user.'', queue),\r\n                    FailedState.Name);", span="385-388"];
m0_228 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs", label="String.IsNullOrEmpty(queue)", span="378-378"];
m0_229 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs", label="return false;", span="380-380"];
m0_231 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.RetryJob(string)", span="371-371"];
m0_198 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="TypeExtensionsFacts.cs", label="Entry HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="304-304"];
m0_201 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="TypeExtensionsFacts.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, state) => new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="314-325"];
m0_200 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="TypeExtensionsFacts.cs", label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1)", span="309-312"];
m0_199 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="TypeExtensionsFacts.cs", label=Redis, span="307-307"];
m0_202 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="TypeExtensionsFacts.cs", label="Exit HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="304-304"];
m0_432 [file="TypeExtensionsFacts.cs", label=job, span=""];
m0_433 [file="TypeExtensionsFacts.cs", label=jobs, span=""];
m0_434 [file="TypeExtensionsFacts.cs", label=states, span=""];
m0_436 [file="TypeExtensionsFacts.cs", label=servers, span=""];
m0_437 [file="TypeExtensionsFacts.cs", label=queues, span=""];
m0_435 [file="TypeExtensionsFacts.cs", label=name, span=""];
m0_443 [file="TypeExtensionsFacts.cs", label=id, span=""];
m0_444 [file="TypeExtensionsFacts.cs", label=jobs, span=""];
m0_446 [file="TypeExtensionsFacts.cs", label=states, span=""];
m0_438 [file="TypeExtensionsFacts.cs", label=queue, span=""];
m0_441 [file="TypeExtensionsFacts.cs", label=string, span=""];
m0_449 [file="TypeExtensionsFacts.cs", label=queueName, span=""];
m0_442 [file="TypeExtensionsFacts.cs", label="string[]", span=""];
m0_445 [file="TypeExtensionsFacts.cs", label="string[]", span=""];
m0_439 [file="TypeExtensionsFacts.cs", label=hiddenProperties, span=""];
m0_447 [file="TypeExtensionsFacts.cs", label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span=""];
m0_448 [file="TypeExtensionsFacts.cs", label=stats, span=""];
m0_440 [file="TypeExtensionsFacts.cs", label=string, span=""];
n83 -> n7  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
n83 -> n8  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
n83 -> n10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
n83 -> n13  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
n83 -> n21  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
n83 -> n25  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
n83 -> n26  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
n83 -> n30  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
n83 -> n35  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
n83 -> n36  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
n83 -> n42  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
n83 -> n77  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [key=0, style=solid];
n2 -> n5  [color=red, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
n2 -> n7  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
n2 -> n8  [color=darkseagreen4, key=1, label=string, style=dashed];
n2 -> n9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
n2 -> n12  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [color=red, key=0, style=solid];
n5 -> n6  [color=red, key=0, style=solid];
n5 -> n7  [color=red, key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n9 -> n12  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n12 -> n18  [key=2, style=dotted];
n4 -> n14  [key=0, style=solid];
n4 -> n15  [key=2, style=dotted];
n6 -> n14  [color=red, key=0, style=solid];
n6 -> n15  [color=red, key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n10 -> n16  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n11 -> n17  [key=2, style=dotted];
n16 -> n77  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n19  [key=2, style=dotted];
n14 -> n2  [color=blue, key=0, style=bold];
n20 -> n21  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n21 -> n23  [key=2, style=dotted];
n21 -> n16  [key=2, style=dotted];
n22 -> n20  [color=blue, key=0, style=bold];
n24 -> n25  [key=0, style=solid];
n25 -> n26  [key=0, style=solid];
n25 -> n16  [key=2, style=dotted];
n26 -> n27  [key=0, style=solid];
n26 -> n28  [key=2, style=dotted];
n27 -> n24  [color=blue, key=0, style=bold];
n29 -> n30  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n32  [key=2, style=dotted];
n31 -> n29  [color=blue, key=0, style=bold];
n33 -> n34  [key=0, style=solid];
n33 -> n35  [color=darkseagreen4, key=1, label=ILog, style=dashed];
n33 -> n36  [color=darkseagreen4, key=1, label=ILog, style=dashed];
n34 -> n35  [key=0, style=solid];
n34 -> n38  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n39  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n36 -> n39  [key=2, style=dotted];
n37 -> n33  [color=blue, key=0, style=bold];
n40 -> n41  [key=0, style=solid];
n41 -> n42  [key=0, style=solid];
n41 -> n52  [color=darkseagreen4, key=1, label=canNotParseMessage, style=dashed];
n41 -> n54  [color=darkseagreen4, key=1, label=canNotParseMessage, style=dashed];
n42 -> n43  [key=0, style=solid];
n42 -> n56  [key=2, style=dotted];
n42 -> n57  [key=2, style=dotted];
n42 -> n58  [key=2, style=dotted];
n42 -> n64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n42 -> n67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n42 -> n71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n42 -> n74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n42 -> n45  [color=darkseagreen4, key=1, label=parts, style=dashed];
n42 -> n46  [color=darkseagreen4, key=1, label=parts, style=dashed];
n42 -> n50  [color=darkseagreen4, key=1, label=parts, style=dashed];
n42 -> n51  [color=darkseagreen4, key=1, label=parts, style=dashed];
n52 -> n55  [key=0, style=solid];
n52 -> n63  [key=2, style=dotted];
n54 -> n55  [key=0, style=solid];
n43 -> n44  [key=0, style=solid];
n43 -> n59  [key=2, style=dotted];
n43 -> n46  [color=darkseagreen4, key=1, label=builder, style=dashed];
n43 -> n47  [color=darkseagreen4, key=1, label=builder, style=dashed];
n43 -> n48  [color=darkseagreen4, key=1, label=builder, style=dashed];
n43 -> n51  [color=darkseagreen4, key=1, label=builder, style=dashed];
n43 -> n52  [color=darkseagreen4, key=1, label=builder, style=dashed];
n64 -> n65  [key=0, style=solid];
n67 -> n68  [key=0, style=solid];
n71 -> n72  [key=0, style=solid];
n74 -> n75  [key=0, style=solid];
n45 -> n46  [key=0, style=solid];
n45 -> n44  [key=0, style=solid];
n45 -> n60  [key=2, style=dotted];
n46 -> n47  [key=0, style=solid];
n46 -> n61  [key=2, style=dotted];
n50 -> n51  [key=0, style=solid];
n50 -> n49  [key=0, style=solid];
n50 -> n60  [key=2, style=dotted];
n51 -> n52  [key=0, style=solid];
n51 -> n61  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n44 -> n47  [key=0, style=solid];
n44 -> n46  [color=darkseagreen4, key=1, label=alias, style=dashed];
n47 -> n48  [key=0, style=solid];
n47 -> n49  [key=0, style=solid];
n48 -> n49  [key=0, style=solid];
n48 -> n62  [key=2, style=dotted];
n49 -> n50  [key=0, style=solid];
n49 -> n52  [key=0, style=solid];
n49 -> n51  [color=darkseagreen4, key=1, label=alias, style=dashed];
n53 -> n54  [key=0, style=solid];
n55 -> n40  [color=blue, key=0, style=bold];
n65 -> n66  [key=0, style=solid];
n65 -> n56  [key=2, style=dotted];
n66 -> n64  [color=blue, key=0, style=bold];
n68 -> n69  [key=0, style=solid];
n68 -> n70  [key=2, style=dotted];
n69 -> n67  [color=blue, key=0, style=bold];
n72 -> n73  [key=0, style=solid];
n73 -> n71  [color=blue, key=0, style=bold];
n75 -> n76  [key=0, style=solid];
n76 -> n74  [color=blue, key=0, style=bold];
n77 -> n78  [key=0, style=solid];
n77 -> n81  [key=2, style=dotted];
n77 -> n79  [color=darkseagreen4, key=1, label=connection, style=dashed];
n78 -> n79  [key=0, style=solid];
n78 -> n82  [key=2, style=dotted];
n79 -> n80  [key=0, style=solid];
n80 -> n16  [color=blue, key=0, style=bold];
d11 -> d12  [color=green, key=0, style=solid];
d11 -> d13  [color=green, key=0, style=solid];
d10 -> d11  [color=green, key=0, style=solid];
d10 -> d12  [color=green, key=1, label="System.Type", style=dashed];
d10 -> d13  [color=green, key=1, label=string, style=dashed];
d10 -> d14  [color=green, key=1, label=string, style=dashed];
d10 -> d15  [color=green, key=1, label="System.Type[]", style=dashed];
d10 -> d16  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d10 -> d17  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d10 -> d18  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d10 -> d20  [color=darkseagreen4, key=1, label=string, style=dashed];
d10 -> d37  [color=darkorchid, key=3, label="method methodReturn System.Reflection.MethodInfo GetNonOpenMatchingMethod", style=bold];
d12 -> d38  [color=green, key=0, style=solid];
d12 -> n15  [color=green, key=2, style=dotted];
d12 -> d40  [color=green, key=2, style=dotted];
d13 -> d14  [color=green, key=0, style=solid];
d13 -> d15  [color=green, key=0, style=solid];
d38 -> d10  [color=blue, key=0, style=bold];
d14 -> d38  [color=green, key=0, style=solid];
d14 -> n15  [color=green, key=2, style=dotted];
d14 -> d40  [color=green, key=2, style=dotted];
d15 -> d15  [color=green, key=1, label="System.Type[]", style=dashed];
d15 -> d16  [color=green, key=0, style=solid];
d15 -> d22  [color=green, key=1, label="System.Type[]", style=dashed];
d15 -> d29  [color=green, key=1, label="System.Type[]", style=dashed];
d16 -> d17  [key=0, style=solid];
d16 -> d41  [key=2, style=dotted];
d16 -> d42  [key=2, style=dotted];
d16 -> d18  [color=darkseagreen4, key=1, label=methodCandidates, style=dashed];
d16 -> d19  [color=darkseagreen4, key=1, label=methodCandidates, style=dashed];
d22 -> d23  [key=0, style=solid];
d22 -> d19  [key=0, style=solid];
d29 -> d32  [color=green, key=1, label=actualType, style=dashed];
d29 -> d30  [key=0, style=solid];
d29 -> d31  [color=darkseagreen4, key=1, label=actualType, style=dashed];
d32 -> d33  [color=green, key=0, style=solid];
d32 -> d26  [color=green, key=0, style=solid];
d32 -> d5  [color=green, key=2, style=dotted];
d32 -> d49  [color=green, key=2, style=dotted];
d28 -> d32  [color=green, key=1, label=parameterType, style=dashed];
d28 -> d29  [key=0, style=solid];
d28 -> d30  [color=darkseagreen4, key=1, label=parameterType, style=dashed];
d30 -> d32  [color=green, key=0, style=solid];
d30 -> d31  [key=0, style=solid];
d33 -> d35  [key=0, style=solid];
d26 -> d26  [color=darkorchid, key=3, label="Local variable int i", style=bold];
d26 -> d27  [key=0, style=solid];
d26 -> d35  [key=0, style=solid];
d17 -> d5  [key=2, style=dotted];
d17 -> d18  [key=0, style=solid];
d17 -> d19  [key=0, style=solid];
d18 -> d5  [key=2, style=dotted];
d18 -> d19  [key=0, style=solid];
d18 -> d43  [key=2, style=dotted];
d18 -> d44  [key=2, style=dotted];
d18 -> d52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d20 -> d21  [key=0, style=solid];
d20 -> d19  [key=0, style=solid];
d20 -> d45  [key=2, style=dotted];
d37 -> d38  [key=0, style=solid];
d36 -> d38  [key=0, style=solid];
d36 -> d50  [key=2, style=dotted];
d36 -> d51  [key=2, style=dotted];
d19 -> d20  [key=0, style=solid];
d19 -> d37  [key=0, style=solid];
d19 -> d36  [color=darkseagreen4, key=1, label=methodCandidate, style=dashed];
d19 -> d21  [color=darkseagreen4, key=1, label=methodCandidate, style=dashed];
d21 -> d22  [key=0, style=solid];
d21 -> d26  [color=darkseagreen4, key=1, label=parameters, style=dashed];
d21 -> d46  [key=2, style=dotted];
d21 -> d27  [color=darkseagreen4, key=1, label=parameters, style=dashed];
d23 -> d23  [color=darkorchid, key=3, label="Local variable bool parameterTypesMatched", style=bold];
d23 -> d24  [key=0, style=solid];
d23 -> d35  [color=darkseagreen4, key=1, label=parameterTypesMatched, style=dashed];
d25 -> d29  [color=darkseagreen4, key=1, label=i, style=dashed];
d25 -> d26  [key=0, style=solid];
d25 -> d27  [color=darkseagreen4, key=1, label=i, style=dashed];
d25 -> d34  [color=darkseagreen4, key=1, label=i, style=dashed];
d31 -> d26  [key=0, style=solid];
d31 -> d48  [key=2, style=dotted];
d27 -> d28  [key=0, style=solid];
d35 -> d36  [key=0, style=solid];
d35 -> d19  [key=0, style=solid];
d34 -> d26  [key=0, style=solid];
d34 -> d34  [color=darkseagreen4, key=1, label=i, style=dashed];
d1 -> d5  [key=2, style=dotted];
d1 -> d2  [key=0, style=solid];
d1 -> d3  [key=0, style=solid];
d68 -> d5  [key=2, style=dotted];
d68 -> d69  [key=0, style=solid];
d68 -> d74  [key=2, style=dotted];
d68 -> d71  [color=darkseagreen4, key=1, label=genericArguments, style=dashed];
d52 -> d53  [key=0, style=solid];
d24 -> d36  [color=darkseagreen4, key=1, label=genericArguments, style=dashed];
d24 -> d25  [key=0, style=solid];
d24 -> d31  [color=darkseagreen4, key=1, label=genericArguments, style=dashed];
d24 -> d47  [key=2, style=dotted];
d53 -> d42  [key=2, style=dotted];
d53 -> d54  [key=0, style=solid];
d0 -> d1  [key=0, style=solid];
d0 -> d2  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d0 -> d3  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d0 -> d7  [color=darkorchid, key=3, label="method methodReturn string ToGenericTypeString", style=bold];
d0 -> d9  [color=darkorchid, key=3, label="method methodReturn string ToGenericTypeString", style=bold];
d2 -> d4  [key=0, style=solid];
d2 -> d6  [key=2, style=dotted];
d2 -> d7  [key=2, style=dotted];
d3 -> d4  [key=0, style=solid];
d3 -> d8  [key=2, style=dotted];
d3 -> d6  [key=2, style=dotted];
d3 -> d7  [key=2, style=dotted];
d3 -> d9  [key=2, style=dotted];
d67 -> d68  [key=0, style=solid];
d67 -> d71  [color=darkseagreen4, key=1, label=string, style=dashed];
d69 -> d69  [color=darkorchid, key=3, label="Local variable string regexForGenericArguments", style=bold];
d69 -> d70  [key=0, style=solid];
d71 -> d71  [color=darkseagreen4, key=1, label=string, style=dashed];
d71 -> d72  [key=0, style=solid];
d71 -> d76  [key=2, style=dotted];
d71 -> d77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d71 -> d79  [color=darkseagreen4, key=1, label=genericArguments, style=dashed];
d71 -> d80  [color=darkseagreen4, key=1, label=genericArguments, style=dashed];
d54 -> d52  [color=blue, key=0, style=bold];
d4 -> d0  [color=blue, key=0, style=bold];
d9 -> d0  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
d9 -> d9  [color=darkorchid, key=3, label="method methodReturn string ReplaceGenericParametersInGenericTypeName", style=bold];
d73 -> d67  [color=blue, key=0, style=bold];
d70 -> d71  [key=0, style=solid];
d70 -> d75  [key=2, style=dotted];
d72 -> d73  [key=0, style=solid];
d77 -> d78  [key=0, style=solid];
d79 -> d80  [key=0, style=solid];
d79 -> d84  [key=2, style=dotted];
d79 -> d85  [key=2, style=dotted];
d79 -> d86  [key=2, style=dotted];
d79 -> d81  [color=darkseagreen4, key=1, label=currentArguments, style=dashed];
d80 -> d80  [color=darkseagreen4, key=1, label=genericArguments, style=dashed];
d80 -> d81  [key=0, style=solid];
d80 -> d87  [key=2, style=dotted];
d80 -> d88  [key=2, style=dotted];
d82 -> d77  [color=blue, key=0, style=bold];
d78 -> d79  [key=0, style=solid];
d78 -> d80  [color=darkseagreen4, key=1, label=currentGenericArgumentNumbers, style=dashed];
d78 -> d62  [key=2, style=dotted];
d78 -> d83  [key=2, style=dotted];
d93 -> d79  [color=darkseagreen4, key=1, label=genericArguments, style=dashed];
d93 -> d80  [color=darkseagreen4, key=1, label=genericArguments, style=dashed];
d81 -> d82  [key=0, style=solid];
d81 -> d89  [key=2, style=dotted];
d59 -> d62  [key=2, style=dotted];
d59 -> d60  [key=0, style=solid];
d59 -> d61  [key=2, style=dotted];
d55 -> d59  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d55 -> d56  [key=0, style=solid];
d55 -> d57  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d58 -> d59  [key=0, style=solid];
d58 -> d58  [color=darkorchid, key=3, label="Local variable int dotLength", style=bold];
d60 -> d55  [color=blue, key=0, style=bold];
d56 -> d58  [key=0, style=solid];
d56 -> d57  [key=0, style=solid];
d57 -> d60  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_10  [key=2, style=dotted];
m0_13 -> m0_9  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_16  [key=2, style=dotted];
m0_14 -> m0_11  [color=blue, key=0, style=bold];
m0_15 -> m0_13  [color=blue, key=0, style=bold];
m0_15 -> m0_16  [key=0, style=solid];
m0_43 -> m0_44  [color=green, key=0, style=solid];
m0_43 -> m0_45  [color=green, key=1, label=int, style=dashed];
m0_44 -> m0_45  [color=green, key=0, style=solid];
m0_45 -> m0_46  [color=green, key=0, style=solid];
m0_45 -> m0_58  [color=green, key=2, style=dotted];
m0_45 -> m0_51  [color=green, key=1, label=scheduledJobs, style=dashed];
m0_45 -> m0_56  [color=green, key=1, label=scheduledJobs, style=dashed];
m0_46 -> m0_47  [color=green, key=0, style=solid];
m0_46 -> m0_48  [color=green, key=0, style=solid];
m0_51 -> m0_52  [color=green, key=0, style=solid];
m0_51 -> m0_55  [color=green, key=0, style=solid];
m0_56 -> m0_57  [color=green, key=0, style=solid];
m0_56 -> m0_63  [color=green, key=2, style=dotted];
m0_56 -> m0_80  [color=green, key=1, label="lambda expression", style=dashed];
m0_56 -> m0_83  [color=green, key=1, label="lambda expression", style=dashed];
m0_47 -> m0_57  [color=green, key=0, style=solid];
m0_47 -> m0_59  [color=green, key=2, style=dotted];
m0_48 -> m0_56  [color=green, key=1, label=jobs, style=dashed];
m0_48 -> m0_49  [color=green, key=0, style=solid];
m0_48 -> m0_59  [color=green, key=2, style=dotted];
m0_48 -> m0_53  [color=green, key=1, label=jobs, style=dashed];
m0_48 -> m0_70  [color=green, key=1, label=jobs, style=dashed];
m0_48 -> m0_84  [color=green, key=1, label=jobs, style=dashed];
m0_50 -> m0_51  [color=green, key=0, style=solid];
m0_50 -> m0_53  [color=green, key=1, label=pipeline, style=dashed];
m0_50 -> m0_60  [color=green, key=2, style=dotted];
m0_50 -> m0_54  [color=green, key=1, label=pipeline, style=dashed];
m0_50 -> m0_55  [color=green, key=1, label=pipeline, style=dashed];
m0_54 -> m0_51  [color=green, key=0, style=solid];
m0_54 -> m0_61  [color=green, key=2, style=dotted];
m0_54 -> m0_73  [color=green, key=1, label="lambda expression", style=dashed];
m0_54 -> m0_77  [color=green, key=1, label="lambda expression", style=dashed];
m0_52 -> m0_53  [color=green, key=0, style=solid];
m0_52 -> m0_70  [color=green, key=1, label=job, style=dashed];
m0_52 -> m0_54  [color=green, key=1, label=job, style=dashed];
m0_52 -> m0_78  [color=green, key=1, label=job, style=dashed];
m0_52 -> m0_65  [color=green, key=1, label=job, style=dashed];
m0_52 -> m0_74  [color=green, key=1, label=job, style=dashed];
m0_55 -> m0_56  [color=green, key=0, style=solid];
m0_55 -> m0_62  [color=green, key=2, style=dotted];
m0_49 -> m0_56  [color=green, key=1, label=states, style=dashed];
m0_49 -> m0_50  [color=green, key=0, style=solid];
m0_49 -> m0_59  [color=green, key=2, style=dotted];
m0_49 -> m0_54  [color=green, key=1, label=states, style=dashed];
m0_49 -> m0_78  [color=green, key=1, label=states, style=dashed];
m0_49 -> m0_84  [color=green, key=1, label=states, style=dashed];
m0_53 -> m0_54  [color=green, key=0, style=solid];
m0_53 -> m0_61  [color=green, key=2, style=dotted];
m0_53 -> m0_64  [color=green, key=1, label="lambda expression", style=dashed];
m0_53 -> m0_69  [color=green, key=1, label="lambda expression", style=dashed];
m0_57 -> m0_43  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label="Hangfire.Server.IServerProcess", style=dashed];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_0  [color=blue, key=0, style=bold];
m0_2 -> m0_4  [key=0, style=solid];
m0_2 -> m0_5  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_4 -> m0_0  [color=blue, key=0, style=bold];
m0_23 -> m0_24  [color=green, key=0, style=solid];
m0_23 -> m0_25  [color=green, key=1, label=int, style=dashed];
m0_24 -> m0_25  [color=green, key=0, style=solid];
m0_25 -> m0_26  [color=green, key=0, style=solid];
m0_25 -> m0_28  [color=green, key=2, style=dotted];
m0_26 -> m0_27  [color=green, key=0, style=solid];
m0_26 -> m0_29  [color=green, key=2, style=dotted];
m0_26 -> m0_30  [color=green, key=2, style=dotted];
m0_26 -> m0_31  [color=green, key=2, style=dotted];
m0_26 -> m0_32  [color=green, key=1, label="lambda expression", style=dashed];
m0_26 -> m0_40  [color=green, key=1, label="lambda expression", style=dashed];
m0_27 -> m0_23  [color=blue, key=0, style=bold];
m0_5 -> m0_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_5 -> m0_6  [key=0, style=solid];
m0_173 -> m0_331  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_173 -> m0_333  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_173 -> m0_328  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m0_173 -> m0_339  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_173 -> m0_347  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_173 -> m0_335  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m0_173 -> m0_324  [key=0, style=solid];
m0_173 -> m0_326  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m0_173 -> m0_327  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m0_173 -> m0_329  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m0_173 -> m0_332  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_173 -> m0_357  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m0_331 -> m0_61  [key=2, style=dotted];
m0_331 -> m0_332  [key=0, style=solid];
m0_331 -> m0_338  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_331 -> m0_341  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_333 -> m0_61  [key=2, style=dotted];
m0_333 -> m0_329  [key=0, style=solid];
m0_333 -> m0_346  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_333 -> m0_349  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_328 -> m0_60  [key=2, style=dotted];
m0_328 -> m0_331  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m0_328 -> m0_333  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m0_328 -> m0_329  [key=0, style=solid];
m0_328 -> m0_334  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m0_334 -> m0_62  [key=2, style=dotted];
m0_334 -> m0_335  [key=0, style=solid];
m0_335 -> m0_114  [key=2, style=dotted];
m0_335 -> m0_115  [key=2, style=dotted];
m0_335 -> m0_336  [key=0, style=solid];
m0_335 -> m0_353  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_335 -> m0_356  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_325 -> d47  [key=2, style=dotted];
m0_325 -> m0_336  [key=0, style=solid];
m0_326 -> m0_331  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m0_326 -> m0_343  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m0_326 -> m0_335  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m0_326 -> m0_327  [key=0, style=solid];
m0_326 -> m0_337  [key=2, style=dotted];
m0_326 -> m0_342  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m0_326 -> m0_354  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m0_330 -> m0_331  [key=0, style=solid];
m0_330 -> m0_333  [color=darkseagreen4, key=1, label=id, style=dashed];
m0_330 -> m0_343  [color=darkseagreen4, key=1, label=id, style=dashed];
m0_330 -> m0_351  [color=darkseagreen4, key=1, label=id, style=dashed];
m0_330 -> m0_339  [color=darkseagreen4, key=1, label=id, style=dashed];
m0_330 -> m0_347  [color=darkseagreen4, key=1, label=id, style=dashed];
m0_330 -> m0_342  [color=darkseagreen4, key=1, label=id, style=dashed];
m0_330 -> m0_350  [color=darkseagreen4, key=1, label=id, style=dashed];
m0_332 -> m0_333  [key=0, style=solid];
m0_332 -> m0_329  [key=0, style=solid];
m0_327 -> m0_333  [color=darkseagreen4, key=1, label=states, style=dashed];
m0_327 -> m0_351  [color=darkseagreen4, key=1, label=states, style=dashed];
m0_327 -> m0_328  [key=0, style=solid];
m0_327 -> m0_335  [color=darkseagreen4, key=1, label=states, style=dashed];
m0_327 -> m0_337  [key=2, style=dotted];
m0_327 -> m0_350  [color=darkseagreen4, key=1, label=states, style=dashed];
m0_327 -> m0_354  [color=darkseagreen4, key=1, label=states, style=dashed];
m0_329 -> m0_334  [key=0, style=solid];
m0_329 -> m0_330  [key=0, style=solid];
m0_324 -> m0_325  [key=0, style=solid];
m0_324 -> m0_326  [key=0, style=solid];
m0_336 -> m0_173  [color=blue, key=0, style=bold];
m0_11 -> m0_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_11 -> m0_12  [key=0, style=solid];
m0_12 -> m0_13  [key=0, style=solid];
m0_219 -> m0_276  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_219 -> m0_277  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m0_219 -> m0_269  [key=0, style=solid];
m0_219 -> m0_294  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_278 -> m0_59  [key=2, style=dotted];
m0_278 -> m0_279  [key=0, style=solid];
m0_278 -> m0_284  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_278 -> m0_286  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_276 -> m0_114  [key=2, style=dotted];
m0_276 -> m0_115  [key=2, style=dotted];
m0_276 -> m0_277  [key=0, style=solid];
m0_276 -> m0_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_270 -> d47  [key=2, style=dotted];
m0_270 -> m0_276  [color=darkseagreen4, key=1, label=dates, style=dashed];
m0_270 -> m0_271  [key=0, style=solid];
m0_270 -> m0_273  [color=darkseagreen4, key=1, label=dates, style=dashed];
m0_270 -> m0_280  [color=darkseagreen4, key=1, label=dates, style=dashed];
m0_270 -> m0_284  [color=darkseagreen4, key=1, label=dates, style=dashed];
m0_277 -> m0_278  [key=0, style=solid];
m0_277 -> m0_289  [key=2, style=dotted];
m0_277 -> m0_282  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m0_279 -> m0_280  [key=0, style=solid];
m0_279 -> m0_282  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_279 -> m0_284  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_279 -> m0_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_284 -> m0_285  [key=0, style=solid];
m0_284 -> m0_292  [key=2, style=dotted];
m0_286 -> m0_287  [key=0, style=solid];
m0_272 -> m0_276  [key=0, style=solid];
m0_272 -> m0_273  [key=0, style=solid];
m0_269 -> m0_270  [key=0, style=solid];
m0_269 -> m0_273  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m0_269 -> m0_274  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m0_271 -> m0_272  [key=0, style=solid];
m0_271 -> m0_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_273 -> m0_274  [key=0, style=solid];
m0_273 -> m0_175  [key=2, style=dotted];
m0_280 -> m0_286  [key=0, style=solid];
m0_280 -> m0_281  [key=0, style=solid];
m0_282 -> m0_284  [key=0, style=solid];
m0_282 -> m0_283  [key=0, style=solid];
m0_282 -> m0_290  [key=2, style=dotted];
m0_282 -> m0_291  [key=2, style=dotted];
m0_285 -> m0_280  [key=0, style=solid];
m0_285 -> m0_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_283 -> m0_284  [key=0, style=solid];
m0_275 -> m0_272  [key=0, style=solid];
m0_275 -> m0_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_274 -> m0_275  [key=0, style=solid];
m0_274 -> m0_274  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m0_274 -> m0_288  [key=2, style=dotted];
m0_281 -> m0_282  [key=0, style=solid];
m0_287 -> m0_219  [color=blue, key=0, style=bold];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_8  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m0_6 -> m0_9  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_10  [key=0, style=solid];
m0_7 -> m0_9  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_11  [key=2, style=dotted];
m0_8 -> m0_5  [color=blue, key=0, style=bold];
m0_9 -> m0_7  [key=0, style=solid];
m0_9 -> m0_12  [key=2, style=dotted];
m0_10 -> m0_6  [color=blue, key=0, style=bold];
m0_236 -> m0_238  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_236 -> m0_237  [key=0, style=solid];
m0_236 -> m0_242  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_238 -> m0_76  [key=2, style=dotted];
m0_238 -> m0_239  [key=0, style=solid];
m0_238 -> m0_9  [key=2, style=dotted];
m0_237 -> m0_238  [key=0, style=solid];
m0_239 -> m0_240  [key=0, style=solid];
m0_239 -> m0_232  [key=2, style=dotted];
m0_239 -> m0_242  [color=darkseagreen4, key=1, label=queue, style=dashed];
m0_242 -> m0_243  [key=0, style=solid];
m0_242 -> m0_234  [key=2, style=dotted];
m0_242 -> m0_235  [key=2, style=dotted];
m0_240 -> m0_242  [key=0, style=solid];
m0_240 -> m0_241  [key=0, style=solid];
m0_240 -> m0_233  [key=2, style=dotted];
m0_241 -> m0_243  [key=0, style=solid];
m0_243 -> m0_236  [color=blue, key=0, style=bold];
m0_362 -> m0_363  [key=0, style=solid];
m0_32 -> m0_33  [color=green, key=0, style=solid];
m0_40 -> m0_41  [color=green, key=0, style=solid];
m0_33 -> m0_34  [color=green, key=0, style=solid];
m0_33 -> m0_35  [color=green, key=2, style=dotted];
m0_33 -> m0_36  [color=green, key=2, style=dotted];
m0_33 -> m0_37  [color=green, key=2, style=dotted];
m0_33 -> m0_38  [color=green, key=2, style=dotted];
m0_33 -> m0_39  [color=green, key=2, style=dotted];
m0_34 -> m0_32  [color=blue, key=0, style=bold];
m0_41 -> m0_41  [color=green, key=1, label="System.Collections.Generic.KeyValuePair<string, HangFire.Web.ProcessingJobDto>", style=dashed];
m0_41 -> m0_42  [color=green, key=0, style=solid];
m0_42 -> m0_40  [color=blue, key=0, style=bold];
m0_80 -> m0_81  [color=green, key=0, style=solid];
m0_83 -> m0_84  [color=green, key=0, style=solid];
m0_70 -> m0_71  [color=green, key=0, style=solid];
m0_70 -> m0_72  [color=green, key=2, style=dotted];
m0_84 -> m0_85  [color=green, key=0, style=solid];
m0_84 -> m0_86  [color=green, key=2, style=dotted];
m0_84 -> m0_87  [color=green, key=2, style=dotted];
m0_84 -> m0_36  [color=green, key=2, style=dotted];
m0_84 -> m0_37  [color=green, key=2, style=dotted];
m0_84 -> m0_39  [color=green, key=2, style=dotted];
m0_78 -> m0_79  [color=green, key=0, style=solid];
m0_78 -> m0_72  [color=green, key=2, style=dotted];
m0_64 -> m0_65  [color=green, key=0, style=solid];
m0_69 -> m0_70  [color=green, key=0, style=solid];
m0_71 -> m0_69  [color=blue, key=0, style=bold];
m0_85 -> m0_83  [color=blue, key=0, style=bold];
m0_73 -> m0_74  [color=green, key=0, style=solid];
m0_77 -> m0_78  [color=green, key=0, style=solid];
m0_79 -> m0_77  [color=blue, key=0, style=bold];
m0_65 -> m0_66  [color=green, key=0, style=solid];
m0_65 -> m0_67  [color=green, key=2, style=dotted];
m0_65 -> m0_68  [color=green, key=2, style=dotted];
m0_74 -> m0_75  [color=green, key=0, style=solid];
m0_74 -> m0_67  [color=green, key=2, style=dotted];
m0_74 -> m0_76  [color=green, key=2, style=dotted];
m0_66 -> m0_64  [color=blue, key=0, style=bold];
m0_75 -> m0_73  [color=blue, key=0, style=bold];
m0_81 -> m0_82  [color=green, key=0, style=solid];
m0_82 -> m0_80  [color=blue, key=0, style=bold];
m0_129 -> m0_130  [color=green, key=0, style=solid];
m0_120 -> m0_72  [key=2, style=dotted];
m0_120 -> m0_121  [key=0, style=solid];
m0_130 -> m0_131  [color=green, key=0, style=solid];
m0_130 -> m0_132  [color=green, key=2, style=dotted];
m0_130 -> m0_133  [color=green, key=2, style=dotted];
m0_130 -> m0_134  [color=green, key=2, style=dotted];
m0_127 -> m0_72  [key=2, style=dotted];
m0_127 -> m0_128  [key=0, style=solid];
m0_116 -> m0_117  [color=green, key=0, style=solid];
m0_119 -> m0_120  [key=0, style=solid];
m0_131 -> m0_129  [color=blue, key=0, style=bold];
m0_117 -> m0_118  [color=green, key=0, style=solid];
m0_117 -> m0_67  [color=green, key=2, style=dotted];
m0_117 -> m0_68  [color=green, key=2, style=dotted];
m0_123 -> m0_67  [key=2, style=dotted];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_125  [key=2, style=dotted];
m0_118 -> m0_116  [color=blue, key=0, style=bold];
m0_141 -> m0_142  [key=0, style=solid];
m0_401 -> m0_4  [key=2, style=dotted];
m0_401 -> m0_402  [key=0, style=solid];
m0_407 -> m0_4  [key=2, style=dotted];
m0_407 -> m0_408  [key=0, style=solid];
m0_421 -> m0_4  [key=2, style=dotted];
m0_421 -> m0_422  [key=0, style=solid];
m0_142 -> m0_36  [key=2, style=dotted];
m0_142 -> m0_37  [key=2, style=dotted];
m0_142 -> m0_38  [key=2, style=dotted];
m0_142 -> m0_39  [key=2, style=dotted];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> m0_144  [key=2, style=dotted];
m0_152 -> m0_36  [key=2, style=dotted];
m0_152 -> m0_37  [key=2, style=dotted];
m0_152 -> m0_38  [key=2, style=dotted];
m0_152 -> m0_39  [key=2, style=dotted];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_154  [key=2, style=dotted];
m0_195 -> m0_36  [key=2, style=dotted];
m0_195 -> m0_38  [key=2, style=dotted];
m0_195 -> m0_39  [key=2, style=dotted];
m0_195 -> m0_196  [key=0, style=solid];
m0_195 -> m0_197  [key=2, style=dotted];
m0_204 -> m0_36  [key=2, style=dotted];
m0_204 -> m0_38  [key=2, style=dotted];
m0_204 -> m0_39  [key=2, style=dotted];
m0_204 -> m0_205  [key=0, style=solid];
m0_204 -> m0_197  [key=2, style=dotted];
m0_212 -> m0_36  [key=2, style=dotted];
m0_212 -> m0_38  [key=2, style=dotted];
m0_212 -> m0_213  [key=0, style=solid];
m0_212 -> m0_214  [key=2, style=dotted];
m0_343 -> m0_72  [key=2, style=dotted];
m0_343 -> m0_344  [key=0, style=solid];
m0_351 -> m0_72  [key=2, style=dotted];
m0_351 -> m0_352  [key=0, style=solid];
m0_177 -> m0_67  [key=2, style=dotted];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_150  [key=2, style=dotted];
m0_183 -> m0_67  [key=2, style=dotted];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_10  [key=2, style=dotted];
m0_189 -> m0_67  [key=2, style=dotted];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_10  [key=2, style=dotted];
m0_322 -> m0_67  [key=2, style=dotted];
m0_322 -> m0_323  [key=0, style=solid];
m0_427 -> m0_67  [key=2, style=dotted];
m0_427 -> m0_428  [key=0, style=solid];
m0_427 -> m0_10  [key=2, style=dotted];
m0_339 -> m0_68  [key=2, style=dotted];
m0_339 -> m0_340  [key=0, style=solid];
m0_339 -> m0_9  [key=2, style=dotted];
m0_347 -> m0_68  [key=2, style=dotted];
m0_347 -> m0_348  [key=0, style=solid];
m0_347 -> m0_9  [key=2, style=dotted];
m0_122 -> m0_123  [key=0, style=solid];
m0_126 -> m0_127  [key=0, style=solid];
m0_121 -> m0_119  [color=blue, key=0, style=bold];
m0_128 -> m0_126  [color=blue, key=0, style=bold];
m0_124 -> m0_122  [color=blue, key=0, style=bold];
m0_143 -> m0_141  [color=blue, key=0, style=bold];
m0_400 -> m0_401  [key=0, style=solid];
m0_402 -> m0_400  [color=blue, key=0, style=bold];
m0_406 -> m0_407  [key=0, style=solid];
m0_408 -> m0_406  [color=blue, key=0, style=bold];
m0_420 -> m0_421  [key=0, style=solid];
m0_422 -> m0_420  [color=blue, key=0, style=bold];
m0_151 -> m0_152  [key=0, style=solid];
m0_203 -> m0_204  [key=0, style=solid];
m0_211 -> m0_212  [key=0, style=solid];
m0_153 -> m0_151  [color=blue, key=0, style=bold];
m0_194 -> m0_195  [key=0, style=solid];
m0_196 -> m0_194  [color=blue, key=0, style=bold];
m0_205 -> m0_203  [color=blue, key=0, style=bold];
m0_213 -> m0_211  [color=blue, key=0, style=bold];
m0_259 -> m0_260  [key=0, style=solid];
m0_263 -> m0_264  [key=0, style=solid];
m0_266 -> m0_267  [key=0, style=solid];
m0_176 -> m0_177  [key=0, style=solid];
m0_179 -> m0_180  [key=0, style=solid];
m0_182 -> m0_183  [key=0, style=solid];
m0_185 -> m0_186  [key=0, style=solid];
m0_188 -> m0_189  [key=0, style=solid];
m0_191 -> m0_192  [key=0, style=solid];
m0_338 -> m0_339  [key=0, style=solid];
m0_341 -> m0_343  [color=darkseagreen4, key=1, label="?", style=dashed];
m0_341 -> m0_342  [key=0, style=solid];
m0_346 -> m0_347  [key=0, style=solid];
m0_349 -> m0_351  [color=darkseagreen4, key=1, label="?", style=dashed];
m0_349 -> m0_350  [key=0, style=solid];
m0_387 -> m0_388  [key=0, style=solid];
m0_391 -> m0_392  [key=0, style=solid];
m0_394 -> m0_395  [key=0, style=solid];
m0_397 -> m0_398  [key=0, style=solid];
m0_403 -> m0_404  [key=0, style=solid];
m0_409 -> m0_410  [key=0, style=solid];
m0_412 -> m0_413  [key=0, style=solid];
m0_416 -> m0_417  [key=0, style=solid];
m0_423 -> m0_424  [key=0, style=solid];
m0_426 -> m0_427  [key=0, style=solid];
m0_429 -> m0_430  [key=0, style=solid];
m0_342 -> m0_343  [key=0, style=solid];
m0_342 -> m0_344  [key=0, style=solid];
m0_342 -> m0_345  [key=2, style=dotted];
m0_344 -> m0_341  [color=blue, key=0, style=bold];
m0_350 -> m0_351  [key=0, style=solid];
m0_350 -> m0_352  [key=0, style=solid];
m0_350 -> m0_345  [key=2, style=dotted];
m0_352 -> m0_349  [color=blue, key=0, style=bold];
m0_178 -> m0_176  [color=blue, key=0, style=bold];
m0_184 -> m0_182  [color=blue, key=0, style=bold];
m0_190 -> m0_188  [color=blue, key=0, style=bold];
m0_321 -> m0_322  [key=0, style=solid];
m0_323 -> m0_321  [color=blue, key=0, style=bold];
m0_428 -> m0_426  [color=blue, key=0, style=bold];
m0_340 -> m0_338  [color=blue, key=0, style=bold];
m0_348 -> m0_346  [color=blue, key=0, style=bold];
m0_293 -> m0_294  [key=0, style=solid];
m0_318 -> m0_319  [key=0, style=solid];
m0_353 -> m0_354  [key=0, style=solid];
m0_356 -> m0_357  [key=0, style=solid];
m0_260 -> m0_261  [key=0, style=solid];
m0_260 -> m0_262  [key=2, style=dotted];
m0_261 -> m0_259  [color=blue, key=0, style=bold];
m0_265 -> m0_263  [color=blue, key=0, style=bold];
m0_264 -> m0_265  [key=0, style=solid];
m0_268 -> m0_266  [color=blue, key=0, style=bold];
m0_267 -> m0_268  [key=0, style=solid];
m0_181 -> m0_179  [color=blue, key=0, style=bold];
m0_180 -> m0_181  [key=0, style=solid];
m0_187 -> m0_185  [color=blue, key=0, style=bold];
m0_186 -> m0_187  [key=0, style=solid];
m0_193 -> m0_191  [color=blue, key=0, style=bold];
m0_192 -> m0_193  [key=0, style=solid];
m0_357 -> m0_358  [key=0, style=solid];
m0_357 -> m0_359  [key=2, style=dotted];
m0_357 -> m0_360  [key=2, style=dotted];
m0_357 -> m0_361  [key=2, style=dotted];
m0_357 -> m0_362  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_354 -> m0_355  [key=0, style=solid];
m0_354 -> m0_345  [key=2, style=dotted];
m0_392 -> m0_393  [key=0, style=solid];
m0_398 -> m0_399  [key=0, style=solid];
m0_404 -> m0_405  [key=0, style=solid];
m0_410 -> m0_411  [key=0, style=solid];
m0_417 -> m0_418  [key=0, style=solid];
m0_417 -> m0_419  [key=2, style=dotted];
m0_424 -> m0_425  [key=0, style=solid];
m0_430 -> m0_431  [key=0, style=solid];
m0_389 -> m0_387  [color=blue, key=0, style=bold];
m0_388 -> m0_389  [key=0, style=solid];
m0_388 -> m0_390  [key=2, style=dotted];
m0_393 -> m0_391  [color=blue, key=0, style=bold];
m0_396 -> m0_394  [color=blue, key=0, style=bold];
m0_395 -> m0_396  [key=0, style=solid];
m0_395 -> m0_390  [key=2, style=dotted];
m0_399 -> m0_397  [color=blue, key=0, style=bold];
m0_405 -> m0_403  [color=blue, key=0, style=bold];
m0_411 -> m0_409  [color=blue, key=0, style=bold];
m0_414 -> m0_412  [color=blue, key=0, style=bold];
m0_413 -> m0_414  [key=0, style=solid];
m0_413 -> m0_415  [key=2, style=dotted];
m0_418 -> m0_416  [color=blue, key=0, style=bold];
m0_425 -> m0_423  [color=blue, key=0, style=bold];
m0_431 -> m0_429  [color=blue, key=0, style=bold];
m0_294 -> m0_295  [key=0, style=solid];
m0_294 -> m0_296  [key=2, style=dotted];
m0_294 -> m0_297  [key=2, style=dotted];
m0_295 -> m0_293  [color=blue, key=0, style=bold];
m0_320 -> m0_318  [color=blue, key=0, style=bold];
m0_319 -> m0_320  [key=0, style=solid];
m0_319 -> m0_296  [key=2, style=dotted];
m0_355 -> m0_353  [color=blue, key=0, style=bold];
m0_358 -> m0_356  [color=blue, key=0, style=bold];
m0_363 -> m0_364  [key=0, style=solid];
m0_364 -> m0_362  [color=blue, key=0, style=bold];
m0_220 -> m0_221  [key=0, style=solid];
m0_222 -> m0_219  [key=2, style=dotted];
m0_222 -> m0_223  [key=0, style=solid];
m0_221 -> m0_222  [key=0, style=solid];
m0_223 -> m0_220  [color=blue, key=0, style=bold];
m0_135 -> m0_136  [color=green, key=0, style=solid];
m0_135 -> m0_137  [color=green, key=1, label=int, style=dashed];
m0_136 -> m0_137  [color=green, key=0, style=solid];
m0_137 -> m0_138  [color=green, key=0, style=solid];
m0_137 -> m0_140  [color=green, key=2, style=dotted];
m0_138 -> m0_139  [color=green, key=0, style=solid];
m0_138 -> m0_29  [color=green, key=2, style=dotted];
m0_138 -> m0_141  [color=green, key=1, label="lambda expression", style=dashed];
m0_139 -> m0_135  [color=blue, key=0, style=bold];
m0_16 -> m0_17  [key=0, style=solid];
m0_145 -> m0_147  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_145 -> m0_146  [key=0, style=solid];
m0_148 -> m0_29  [key=2, style=dotted];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_150  [key=2, style=dotted];
m0_146 -> m0_147  [key=0, style=solid];
m0_149 -> m0_145  [color=blue, key=0, style=bold];
m0_155 -> m0_156  [key=0, style=solid];
m0_164 -> m0_61  [key=2, style=dotted];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_164 -> m0_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_164 -> m0_168  [color=darkseagreen4, key=1, label=firstJobIds, style=dashed];
m0_165 -> m0_61  [key=2, style=dotted];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_165 -> m0_185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_165 -> m0_169  [color=darkseagreen4, key=1, label=length, style=dashed];
m0_166 -> m0_61  [key=2, style=dotted];
m0_166 -> m0_167  [key=0, style=solid];
m0_166 -> m0_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_166 -> m0_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_166 -> m0_169  [color=darkseagreen4, key=1, label=dequeued, style=dashed];
m0_163 -> m0_60  [key=2, style=dotted];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_165  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m0_163 -> m0_166  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m0_163 -> m0_167  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m0_167 -> m0_62  [key=2, style=dotted];
m0_167 -> m0_168  [key=0, style=solid];
m0_157 -> m0_112  [key=2, style=dotted];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_159  [color=darkseagreen4, key=1, label=queues, style=dashed];
m0_159 -> m0_164  [color=darkseagreen4, key=1, label=queue, style=dashed];
m0_159 -> m0_165  [color=darkseagreen4, key=1, label=queue, style=dashed];
m0_159 -> m0_166  [color=darkseagreen4, key=1, label=queue, style=dashed];
m0_159 -> m0_177  [color=darkseagreen4, key=1, label=queue, style=dashed];
m0_159 -> m0_183  [color=darkseagreen4, key=1, label=queue, style=dashed];
m0_159 -> m0_189  [color=darkseagreen4, key=1, label=queue, style=dashed];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_170  [key=0, style=solid];
m0_159 -> m0_169  [color=darkseagreen4, key=1, label=queue, style=dashed];
m0_168 -> m0_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_173  [key=2, style=dotted];
m0_169 -> m0_159  [key=0, style=solid];
m0_169 -> m0_174  [key=2, style=dotted];
m0_169 -> m0_175  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_156 -> m0_157  [key=0, style=solid];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_169  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_158 -> m0_172  [key=2, style=dotted];
m0_158 -> m0_170  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_160 -> m0_161  [key=0, style=solid];
m0_170 -> m0_171  [key=0, style=solid];
m0_161 -> m0_162  [key=0, style=solid];
m0_171 -> m0_155  [color=blue, key=0, style=bold];
m0_88 -> m0_89  [color=green, key=0, style=solid];
m0_89 -> m0_90  [color=green, key=0, style=solid];
m0_90 -> m0_91  [color=green, key=0, style=solid];
m0_90 -> m0_92  [color=green, key=2, style=dotted];
m0_91 -> m0_88  [color=blue, key=0, style=bold];
m0_97 -> m0_98  [color=green, key=0, style=solid];
m0_98 -> m0_99  [color=green, key=0, style=solid];
m0_99 -> m0_100  [color=green, key=0, style=solid];
m0_99 -> m0_112  [color=green, key=2, style=dotted];
m0_99 -> m0_105  [color=green, key=1, label=serverNames, style=dashed];
m0_99 -> m0_110  [color=green, key=1, label=serverNames, style=dashed];
m0_100 -> m0_101  [color=green, key=0, style=solid];
m0_100 -> m0_102  [color=green, key=0, style=solid];
m0_105 -> m0_106  [color=green, key=0, style=solid];
m0_105 -> m0_109  [color=green, key=0, style=solid];
m0_110 -> m0_111  [color=green, key=0, style=solid];
m0_110 -> m0_114  [color=green, key=2, style=dotted];
m0_110 -> m0_115  [color=green, key=2, style=dotted];
m0_110 -> m0_129  [color=green, key=1, label="lambda expression", style=dashed];
m0_101 -> m0_111  [color=green, key=0, style=solid];
m0_101 -> d47  [color=green, key=2, style=dotted];
m0_102 -> m0_110  [color=green, key=1, label=servers, style=dashed];
m0_102 -> m0_103  [color=green, key=0, style=solid];
m0_102 -> m0_59  [color=green, key=2, style=dotted];
m0_102 -> m0_107  [color=green, key=1, label=servers, style=dashed];
m0_102 -> m0_120  [color=green, key=1, label=servers, style=dashed];
m0_102 -> m0_130  [color=green, key=1, label=servers, style=dashed];
m0_104 -> m0_105  [color=green, key=0, style=solid];
m0_104 -> m0_107  [color=green, key=1, label=pipeline, style=dashed];
m0_104 -> m0_60  [color=green, key=2, style=dotted];
m0_104 -> m0_108  [color=green, key=1, label=pipeline, style=dashed];
m0_104 -> m0_109  [color=green, key=1, label=pipeline, style=dashed];
m0_108 -> m0_105  [color=green, key=0, style=solid];
m0_108 -> m0_61  [key=2, style=dotted];
m0_108 -> m0_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_108 -> m0_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_106 -> m0_107  [color=green, key=0, style=solid];
m0_106 -> m0_117  [color=green, key=1, label=name, style=dashed];
m0_106 -> m0_120  [color=green, key=1, label=name, style=dashed];
m0_106 -> m0_108  [color=green, key=1, label=name, style=dashed];
m0_106 -> m0_123  [color=green, key=1, label=name, style=dashed];
m0_106 -> m0_127  [color=green, key=1, label=name, style=dashed];
m0_109 -> m0_110  [color=green, key=0, style=solid];
m0_109 -> m0_62  [key=2, style=dotted];
m0_103 -> m0_110  [color=green, key=1, label=queues, style=dashed];
m0_103 -> m0_104  [color=green, key=0, style=solid];
m0_103 -> m0_59  [color=green, key=2, style=dotted];
m0_103 -> m0_108  [color=green, key=1, label=queues, style=dashed];
m0_103 -> m0_127  [color=green, key=1, label=queues, style=dashed];
m0_103 -> m0_130  [color=green, key=1, label=queues, style=dashed];
m0_107 -> m0_108  [color=green, key=0, style=solid];
m0_107 -> m0_61  [color=green, key=2, style=dotted];
m0_107 -> m0_116  [color=green, key=1, label="lambda expression", style=dashed];
m0_107 -> m0_119  [color=green, key=1, label="lambda expression", style=dashed];
m0_111 -> m0_97  [color=blue, key=0, style=bold];
m0_369 -> m0_370  [key=0, style=solid];
m0_374 -> m0_61  [key=2, style=dotted];
m0_374 -> m0_375  [key=0, style=solid];
m0_374 -> m0_387  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_374 -> m0_391  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_375 -> m0_61  [key=2, style=dotted];
m0_375 -> m0_376  [key=0, style=solid];
m0_375 -> m0_394  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_375 -> m0_397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_376 -> m0_61  [key=2, style=dotted];
m0_376 -> m0_377  [key=0, style=solid];
m0_376 -> m0_400  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_376 -> m0_403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_377 -> m0_61  [key=2, style=dotted];
m0_377 -> m0_378  [key=0, style=solid];
m0_377 -> m0_406  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_377 -> m0_409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_378 -> m0_61  [key=2, style=dotted];
m0_378 -> m0_379  [key=0, style=solid];
m0_378 -> m0_412  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_378 -> m0_416  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_379 -> m0_61  [key=2, style=dotted];
m0_379 -> m0_380  [key=0, style=solid];
m0_379 -> m0_420  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_379 -> m0_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_382 -> m0_61  [key=2, style=dotted];
m0_382 -> m0_380  [key=0, style=solid];
m0_382 -> m0_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_382 -> m0_429  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_373 -> m0_60  [key=2, style=dotted];
m0_373 -> m0_374  [key=0, style=solid];
m0_373 -> m0_375  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m0_373 -> m0_376  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m0_373 -> m0_377  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m0_373 -> m0_378  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m0_373 -> m0_379  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m0_373 -> m0_382  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m0_373 -> m0_383  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m0_383 -> m0_62  [key=2, style=dotted];
m0_383 -> m0_384  [key=0, style=solid];
m0_372 -> m0_112  [key=2, style=dotted];
m0_372 -> m0_373  [key=0, style=solid];
m0_372 -> m0_380  [color=darkseagreen4, key=1, label=queues, style=dashed];
m0_371 -> m0_374  [color=darkseagreen4, key=1, label=stats, style=dashed];
m0_371 -> m0_375  [color=darkseagreen4, key=1, label=stats, style=dashed];
m0_371 -> m0_376  [color=darkseagreen4, key=1, label=stats, style=dashed];
m0_371 -> m0_377  [color=darkseagreen4, key=1, label=stats, style=dashed];
m0_371 -> m0_378  [color=darkseagreen4, key=1, label=stats, style=dashed];
m0_371 -> m0_379  [color=darkseagreen4, key=1, label=stats, style=dashed];
m0_371 -> m0_382  [color=darkseagreen4, key=1, label=stats, style=dashed];
m0_371 -> m0_372  [key=0, style=solid];
m0_371 -> m0_386  [key=2, style=dotted];
m0_371 -> m0_392  [color=darkseagreen4, key=1, label=stats, style=dashed];
m0_371 -> m0_398  [color=darkseagreen4, key=1, label=stats, style=dashed];
m0_371 -> m0_404  [color=darkseagreen4, key=1, label=stats, style=dashed];
m0_371 -> m0_410  [color=darkseagreen4, key=1, label=stats, style=dashed];
m0_371 -> m0_417  [color=darkseagreen4, key=1, label=stats, style=dashed];
m0_371 -> m0_424  [color=darkseagreen4, key=1, label=stats, style=dashed];
m0_371 -> m0_430  [color=darkseagreen4, key=1, label=stats, style=dashed];
m0_371 -> m0_384  [color=darkseagreen4, key=1, label=stats, style=dashed];
m0_380 -> m0_383  [key=0, style=solid];
m0_380 -> m0_381  [key=0, style=solid];
m0_381 -> m0_382  [key=0, style=solid];
m0_381 -> m0_427  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m0_384 -> m0_385  [key=0, style=solid];
m0_370 -> m0_371  [key=0, style=solid];
m0_385 -> m0_369  [color=blue, key=0, style=bold];
m0_365 -> m0_366  [key=0, style=solid];
m0_367 -> m0_10  [key=2, style=dotted];
m0_367 -> m0_368  [key=0, style=solid];
m0_366 -> m0_367  [key=0, style=solid];
m0_368 -> m0_365  [color=blue, key=0, style=bold];
m0_215 -> m0_216  [key=0, style=solid];
m0_217 -> m0_219  [key=2, style=dotted];
m0_217 -> m0_218  [key=0, style=solid];
m0_216 -> m0_217  [key=0, style=solid];
m0_218 -> m0_215  [color=blue, key=0, style=bold];
m0_92 -> m0_298  [key=0, style=solid];
m0_92 -> m0_305  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_92 -> m0_322  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_92 -> m0_306  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m0_307 -> m0_59  [key=2, style=dotted];
m0_307 -> m0_308  [key=0, style=solid];
m0_307 -> m0_313  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_307 -> m0_315  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_298 -> m0_299  [key=0, style=solid];
m0_298 -> m0_301  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m0_298 -> m0_302  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m0_298 -> m0_303  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m0_305 -> m0_114  [key=2, style=dotted];
m0_305 -> m0_115  [key=2, style=dotted];
m0_305 -> m0_306  [key=0, style=solid];
m0_305 -> m0_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_306 -> m0_307  [key=0, style=solid];
m0_306 -> m0_289  [key=2, style=dotted];
m0_306 -> m0_311  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m0_304 -> m0_114  [key=2, style=dotted];
m0_304 -> m0_115  [key=2, style=dotted];
m0_304 -> m0_305  [key=0, style=solid];
m0_304 -> m0_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_304 -> m0_309  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m0_300 -> d47  [key=2, style=dotted];
m0_300 -> m0_304  [color=darkseagreen4, key=1, label=dates, style=dashed];
m0_300 -> m0_301  [key=0, style=solid];
m0_300 -> m0_302  [color=darkseagreen4, key=1, label=dates, style=dashed];
m0_300 -> m0_313  [color=darkseagreen4, key=1, label=dates, style=dashed];
m0_308 -> m0_309  [key=0, style=solid];
m0_308 -> m0_311  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_308 -> m0_313  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_308 -> m0_314  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_313 -> m0_314  [key=0, style=solid];
m0_313 -> m0_292  [key=2, style=dotted];
m0_315 -> m0_316  [key=0, style=solid];
m0_299 -> m0_300  [key=0, style=solid];
m0_299 -> m0_317  [key=2, style=dotted];
m0_299 -> m0_301  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m0_301 -> m0_304  [key=0, style=solid];
m0_301 -> m0_302  [key=0, style=solid];
m0_302 -> m0_303  [key=0, style=solid];
m0_302 -> m0_175  [key=2, style=dotted];
m0_303 -> m0_301  [key=0, style=solid];
m0_303 -> m0_303  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m0_303 -> m0_317  [key=2, style=dotted];
m0_311 -> m0_313  [key=0, style=solid];
m0_311 -> m0_312  [key=0, style=solid];
m0_311 -> m0_290  [key=2, style=dotted];
m0_311 -> m0_291  [key=2, style=dotted];
m0_309 -> m0_315  [key=0, style=solid];
m0_309 -> m0_310  [key=0, style=solid];
m0_314 -> m0_309  [key=0, style=solid];
m0_314 -> m0_314  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_312 -> m0_313  [key=0, style=solid];
m0_310 -> m0_311  [key=0, style=solid];
m0_316 -> m0_92  [color=blue, key=0, style=bold];
m0_17 -> m0_4  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_3  [color=darkseagreen4, key=1, label="Hangfire.Server.InfiniteLoopProcess", style=dashed];
m0_17 -> m0_9  [color=darkseagreen4, key=1, label="Hangfire.Server.InfiniteLoopProcess", style=dashed];
m0_17 -> m0_14  [color=darkseagreen4, key=1, label="Hangfire.Server.InfiniteLoopProcess", style=dashed];
m0_18 -> m0_15  [color=blue, key=0, style=bold];
m0_244 -> m0_246  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_244 -> m0_250  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_244 -> m0_245  [key=0, style=solid];
m0_252 -> m0_63  [key=2, style=dotted];
m0_252 -> m0_253  [key=0, style=solid];
m0_252 -> m0_255  [key=2, style=dotted];
m0_252 -> m0_256  [key=2, style=dotted];
m0_252 -> m0_257  [key=2, style=dotted];
m0_252 -> m0_258  [key=2, style=dotted];
m0_252 -> m0_259  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_252 -> m0_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_252 -> m0_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_251 -> m0_114  [key=2, style=dotted];
m0_251 -> m0_115  [key=2, style=dotted];
m0_251 -> m0_252  [key=0, style=solid];
m0_246 -> m0_252  [color=darkseagreen4, key=1, label=job, style=dashed];
m0_246 -> m0_247  [key=0, style=solid];
m0_246 -> m0_9  [key=2, style=dotted];
m0_246 -> m0_254  [key=2, style=dotted];
m0_249 -> m0_252  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m0_249 -> m0_250  [key=0, style=solid];
m0_249 -> m0_260  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m0_250 -> m0_251  [key=0, style=solid];
m0_250 -> m0_125  [key=2, style=dotted];
m0_250 -> m0_9  [key=2, style=dotted];
m0_245 -> m0_246  [key=0, style=solid];
m0_247 -> m0_249  [key=0, style=solid];
m0_247 -> m0_248  [key=0, style=solid];
m0_248 -> m0_253  [key=0, style=solid];
m0_253 -> m0_244  [color=blue, key=0, style=bold];
m0_206 -> m0_208  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_206 -> m0_207  [key=0, style=solid];
m0_209 -> m0_29  [key=2, style=dotted];
m0_209 -> m0_210  [key=0, style=solid];
m0_209 -> m0_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_208 -> m0_209  [key=0, style=solid];
m0_208 -> m0_9  [key=2, style=dotted];
m0_208 -> m0_150  [key=2, style=dotted];
m0_207 -> m0_208  [key=0, style=solid];
m0_210 -> m0_206  [color=blue, key=0, style=bold];
m0_93 -> m0_94  [color=green, key=0, style=solid];
m0_94 -> m0_95  [color=green, key=0, style=solid];
m0_95 -> m0_96  [color=green, key=0, style=solid];
m0_95 -> m0_92  [color=green, key=2, style=dotted];
m0_96 -> m0_93  [color=blue, key=0, style=bold];
m0_19 -> m0_20  [key=0, style=solid];
m0_21 -> m0_22  [color=green, key=0, style=solid];
m0_21 -> m0_4  [color=green, key=2, style=dotted];
m0_20 -> m0_21  [color=green, key=0, style=solid];
m0_22 -> m0_19  [color=blue, key=0, style=bold];
m0_224 -> m0_226  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_224 -> m0_225  [key=0, style=solid];
m0_224 -> m0_230  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_226 -> m0_76  [key=2, style=dotted];
m0_226 -> m0_227  [key=0, style=solid];
m0_226 -> m0_9  [key=2, style=dotted];
m0_225 -> m0_226  [key=0, style=solid];
m0_227 -> m0_228  [key=0, style=solid];
m0_227 -> m0_232  [key=2, style=dotted];
m0_227 -> m0_230  [color=darkseagreen4, key=1, label=queue, style=dashed];
m0_230 -> m0_231  [key=0, style=solid];
m0_230 -> m0_234  [key=2, style=dotted];
m0_230 -> m0_235  [key=2, style=dotted];
m0_228 -> m0_230  [key=0, style=solid];
m0_228 -> m0_229  [key=0, style=solid];
m0_228 -> m0_233  [key=2, style=dotted];
m0_229 -> m0_231  [key=0, style=solid];
m0_231 -> m0_224  [color=blue, key=0, style=bold];
m0_198 -> m0_200  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_198 -> m0_199  [key=0, style=solid];
m0_201 -> m0_29  [key=2, style=dotted];
m0_201 -> m0_202  [key=0, style=solid];
m0_201 -> m0_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_9  [key=2, style=dotted];
m0_200 -> m0_150  [key=2, style=dotted];
m0_199 -> m0_200  [key=0, style=solid];
m0_202 -> m0_198  [color=blue, key=0, style=bold];
m0_432 -> m0_70  [color=green, key=1, label=job, style=dashed];
m0_432 -> m0_78  [color=green, key=1, label=job, style=dashed];
m0_432 -> m0_65  [color=green, key=1, label=job, style=dashed];
m0_432 -> m0_74  [color=green, key=1, label=job, style=dashed];
m0_433 -> m0_70  [color=green, key=1, label=jobs, style=dashed];
m0_433 -> m0_84  [color=green, key=1, label=jobs, style=dashed];
m0_434 -> m0_84  [color=green, key=1, label=states, style=dashed];
m0_434 -> m0_78  [color=green, key=1, label=states, style=dashed];
m0_436 -> m0_130  [color=green, key=1, label=servers, style=dashed];
m0_436 -> m0_120  [color=darkseagreen4, key=1, label=servers, style=dashed];
m0_437 -> m0_130  [color=green, key=1, label=queues, style=dashed];
m0_437 -> m0_127  [color=darkseagreen4, key=1, label=queues, style=dashed];
m0_435 -> m0_117  [color=green, key=1, label=name, style=dashed];
m0_435 -> m0_120  [color=darkseagreen4, key=1, label=name, style=dashed];
m0_435 -> m0_127  [color=darkseagreen4, key=1, label=name, style=dashed];
m0_435 -> m0_123  [color=darkseagreen4, key=1, label=name, style=dashed];
m0_443 -> m0_343  [color=darkseagreen4, key=1, label=id, style=dashed];
m0_443 -> m0_351  [color=darkseagreen4, key=1, label=id, style=dashed];
m0_443 -> m0_339  [color=darkseagreen4, key=1, label=id, style=dashed];
m0_443 -> m0_347  [color=darkseagreen4, key=1, label=id, style=dashed];
m0_443 -> m0_342  [color=darkseagreen4, key=1, label=id, style=dashed];
m0_443 -> m0_350  [color=darkseagreen4, key=1, label=id, style=dashed];
m0_444 -> m0_343  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m0_444 -> m0_342  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m0_444 -> m0_354  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m0_446 -> m0_351  [color=darkseagreen4, key=1, label=states, style=dashed];
m0_446 -> m0_350  [color=darkseagreen4, key=1, label=states, style=dashed];
m0_446 -> m0_354  [color=darkseagreen4, key=1, label=states, style=dashed];
m0_438 -> m0_177  [color=darkseagreen4, key=1, label=queue, style=dashed];
m0_438 -> m0_183  [color=darkseagreen4, key=1, label=queue, style=dashed];
m0_438 -> m0_189  [color=darkseagreen4, key=1, label=queue, style=dashed];
m0_441 -> m0_322  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_449 -> m0_427  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m0_442 -> m0_339  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_445 -> m0_347  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_439 -> m0_260  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m0_447 -> m0_357  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m0_448 -> m0_392  [color=darkseagreen4, key=1, label=stats, style=dashed];
m0_448 -> m0_398  [color=darkseagreen4, key=1, label=stats, style=dashed];
m0_448 -> m0_404  [color=darkseagreen4, key=1, label=stats, style=dashed];
m0_448 -> m0_410  [color=darkseagreen4, key=1, label=stats, style=dashed];
m0_448 -> m0_417  [color=darkseagreen4, key=1, label=stats, style=dashed];
m0_448 -> m0_424  [color=darkseagreen4, key=1, label=stats, style=dashed];
m0_448 -> m0_430  [color=darkseagreen4, key=1, label=stats, style=dashed];
m0_440 -> m0_294  [color=darkseagreen4, key=1, label=string, style=dashed];
}
