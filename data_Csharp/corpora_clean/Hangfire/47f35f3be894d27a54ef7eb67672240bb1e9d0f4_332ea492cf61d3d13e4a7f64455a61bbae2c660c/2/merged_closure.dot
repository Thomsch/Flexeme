digraph  {
n4 [label="Hangfire.Server.ServerWatchdogOptions", span=""];
n0 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", label="Entry Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="23-23"];
n1 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", label="ServerTimeout = ServerWatchdog.DefaultServerTimeout", span="25-25"];
n2 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", label="CheckInterval = ServerWatchdog.DefaultCheckInterval", span="26-26"];
n3 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", label="Exit Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="23-23"];
d7 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateChangeProcess, Hangfire.Client.IJobCreationProcess)", color=green, community=0, label="storage == null", prediction=0, span="75-75"];
d6 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateChangeProcess, Hangfire.Client.IJobCreationProcess)", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateChangeProcess, Hangfire.Client.IJobCreationProcess)", span="70-70"];
d8 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateChangeProcess, Hangfire.Client.IJobCreationProcess)", color=green, community=0, label="throw new ArgumentNullException(''storage'');", prediction=1, span="75-75"];
d9 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateChangeProcess, Hangfire.Client.IJobCreationProcess)", color=green, community=0, label="stateChangeProcess == null", prediction=2, span="76-76"];
d10 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateChangeProcess, Hangfire.Client.IJobCreationProcess)", color=green, community=0, label="throw new ArgumentNullException(''stateChangeProcess'');", prediction=3, span="76-76"];
d11 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateChangeProcess, Hangfire.Client.IJobCreationProcess)", label="creationProcess == null", span="77-77"];
d16 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateChangeProcess, Hangfire.Client.IJobCreationProcess)", label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateChangeProcess, Hangfire.Client.IJobCreationProcess)", span="70-70"];
d17 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
d23 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", color=green, community=0, label="var connection = _storage.GetConnection()", prediction=4, span="92-92"];
d45 [label="Hangfire.BackgroundJobClient", span=""];
d21 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="state == null", span="88-88"];
d24 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="var context = new CreateContext(_storage, connection, job, state)", span="94-94"];
d29 [cluster="Hangfire.JobStorage.GetConnection()", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
d13 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateChangeProcess, Hangfire.Client.IJobCreationProcess)", label="_storage = storage", span="79-79"];
d14 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateChangeProcess, Hangfire.Client.IJobCreationProcess)", label="_stateChangeProcess = stateChangeProcess", span="80-80"];
d15 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateChangeProcess, Hangfire.Client.IJobCreationProcess)", label="_creationProcess = creationProcess", span="81-81"];
d12 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateChangeProcess, Hangfire.Client.IJobCreationProcess)", label="throw new ArgumentNullException(''creationProcess'');", span="77-77"];
d20 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="throw new ArgumentNullException(''job'');", span="87-87"];
d22 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="throw new ArgumentNullException(''state'');", span="88-88"];
d35 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="throw new ArgumentNullException(''jobId'');", span="107-107"];
d37 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="throw new ArgumentNullException(''state'');", span="108-108"];
d25 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="return _creationProcess.Run(context);", span="95-95"];
d38 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="var connection = _storage.GetConnection()", span="110-110"];
d39 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="var appliedState = _stateChangeProcess.ChangeState(new StateChangeContext(\r\n                    _storage, \r\n                    connection, \r\n                    jobId, \r\n                    state, \r\n                    fromState != null ? new[] { fromState } : null))", span="112-117"];
d18 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="Entry Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="85-85"];
d19 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="job == null", span="87-87"];
d30 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="37-37"];
d28 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="Exit Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="85-85"];
d34 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="jobId == null", span="107-107"];
d41 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="Exit Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="105-105"];
d36 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="state == null", span="108-108"];
d31 [cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", label="Entry Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", span="32-32"];
d33 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="Entry Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="105-105"];
d40 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="return appliedState != null && appliedState.Name.Equals(state.Name, StringComparison.OrdinalIgnoreCase);", span="119-119"];
d42 [cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", span="35-35"];
d43 [cluster="Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateChangeContext)", label="Entry Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateChangeContext)", span="25-25"];
d27 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="throw new CreateJobFailedException(''Job creation creationProcess has failed. See inner exception for details'', ex);", span="100-100"];
d44 [cluster="string.Equals(string, System.StringComparison)", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
d26 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label=Exception, span="98-98"];
d32 [cluster="Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", label="Entry Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="33-33"];
m0_42 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", span="43-43"];
m0_69 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="client.Create(null, _state.Object)", span="74-74"];
m0_28 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", color=green, community=0, file="BackgroundJobClientFacts.cs", label="throw new InvalidOperationException(\r\n                        String.Format(''Can not add a continuation: parent background job '{0}' does not exist.'', parentId));", prediction=5, span="94-95"];
m0_165 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", span="185-185"];
m0_99 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="103-103"];
m0_66 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="69-69"];
m0_16 [cluster="Mock<IState>.cstr", file="BackgroundJobClientFacts.cs", label="Entry Mock<IState>.cstr", span=""];
m0_86 [cluster="Unk.Verify", file="BackgroundJobClientFacts.cs", label="Entry Unk.Verify", span=""];
m0_64 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(null, _state.Object))", span="73-74"];
m0_34 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", span="74-74"];
m0_57 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="BackgroundJobClientFacts.cs", label=Exception, span="155-155"];
m0_15 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", span="117-117"];
m0_90 [cluster="System.Threading.Thread.Sleep(int)", file="BackgroundJobClientFacts.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m0_29 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="BackgroundJobClientFacts.cs", label="var currentState = connection.GetStateData(parentId)", span="98-98"];
m0_31 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="BackgroundJobClientFacts.cs", label="currentState != null && _knownFinalStates.Contains(currentState.Name)", span="105-105"];
m0_32 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="BackgroundJobClientFacts.cs", label="var startImmediately = !awaitingState.Options.HasFlag(JobContinuationOptions.OnlyOnSucceededState) ||\r\n                        currentState.Name == SucceededState.StateName", span="107-108"];
m0_35 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="37-37"];
m0_67 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="189-189"];
m0_94 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", file="BackgroundJobClientFacts.cs", label="var id = client.Create(_job, _state.Object)", span="106-106"];
m0_68 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="74-74"];
m0_33 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="BackgroundJobClientFacts.cs", label="context.CandidateState = startImmediately\r\n                        ? awaitingState.NextState\r\n                        : new DeletedState { Reason = ''Missed continuation'' }", span="110-112"];
m0_62 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", span="117-117"];
m0_63 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BackgroundJobClientFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_65 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", span="172-172"];
m0_43 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="46-46"];
m0_91 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", span="101-101"];
m0_53 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="BackgroundJobClientFacts.cs", label="continuation.Options.HasFlag(JobContinuationOptions.OnlyOnSucceededState) &&\r\n                    context.CandidateState.Name != SucceededState.StateName", span="140-141"];
m0_54 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="BackgroundJobClientFacts.cs", label="nextStates.Add(continuation.JobId, new DeletedState { Reason = ''Missed continuation'' })", span="143-143"];
m0_55 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="BackgroundJobClientFacts.cs", label="IState nextState", span="147-147"];
m0_56 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="BackgroundJobClientFacts.cs", label="nextState = JsonConvert.DeserializeObject<IState>(\r\n                        currentState.Data[''NextState''],\r\n                        new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.Objects })", span="151-153"];
m0_46 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="52-52"];
m0_50 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="55-55"];
m0_61 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient()", span="43-43"];
m0_60 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="65-65"];
m0_49 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="52-52"];
m0_52 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="55-55"];
m0_59 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="new BackgroundJobClient()", span="65-65"];
m0_58 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="65-65"];
m0_13 [cluster="Unk.Returns", file="BackgroundJobClientFacts.cs", label="Entry Unk.Returns", span=""];
m0_22 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="29-29"];
m0_27 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="30-30"];
m0_21 [cluster="Unk.GetConnection", file="BackgroundJobClientFacts.cs", label="Entry Unk.GetConnection", span=""];
m0_23 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="x.Name", span="29-29"];
m0_24 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="29-29"];
m0_26 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Method()", span="30-30"];
m0_25 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="30-30"];
m0_81 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobClientFacts.cs", label="throw new TimeoutException(String.Format(\r\n                        ''Can not start continuation '{0}' for background job '{1}': timeout expired while trying to fetch continuation state.'',\r\n                        continuationJobId,\r\n                        context.JobId));", span="200-203"];
m0_82 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobClientFacts.cs", label="Thread.Sleep(firstAttempt ? 0 : 1)", span="206-206"];
m0_83 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobClientFacts.cs", label="firstAttempt = false", span="207-207"];
m0_85 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", span="172-172"];
m0_39 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", span="43-43"];
m0_155 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateChangeProcessInvocation()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateChangeProcessInvocation()", span="174-174"];
m0_157 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateChangeProcessInvocation()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="178-178"];
m0_158 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateChangeProcessInvocation()", file="BackgroundJobClientFacts.cs", label="var result = client.ChangeState(''job-id'', _state.Object, null)", span="180-180"];
m0_159 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateChangeProcessInvocation()", file="BackgroundJobClientFacts.cs", label="Assert.True(result)", span="182-182"];
m0_160 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateChangeProcessInvocation()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateChangeProcessInvocation()", span="174-174"];
m0_14 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="BackgroundJobClientFacts.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m0_122 [cluster="Unk.ChangeState", file="BackgroundJobClientFacts.cs", label="Entry Unk.ChangeState", span=""];
m0_6 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="_state = new Mock<IState>()", span="28-28"];
m0_10 [cluster="Mock<IStorageConnection>.cstr", color=green, community=0, file="BackgroundJobClientFacts.cs", label="Entry Mock<IStorageConnection>.cstr", prediction=6, span=""];
m0_8 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="_job = Job.FromExpression(() => Method())", span="30-30"];
m0_11 [cluster="Mock<JobStorage>.cstr", file="BackgroundJobClientFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m0_9 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="19-19"];
m0_7 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="_state.Setup(x => x.Name).Returns(''Mock'')", span="29-29"];
m0_12 [cluster="Unk.Setup", file="BackgroundJobClientFacts.cs", label="Entry Unk.Setup", span=""];
m0_45 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="46-46"];
m0_107 [cluster="Unk.NotNull", file="BackgroundJobClientFacts.cs", label="Entry Unk.NotNull", span=""];
m0_154 [cluster="Unk.SequenceEqual", file="BackgroundJobClientFacts.cs", label="Entry Unk.SequenceEqual", span=""];
m0_100 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="112-112"];
m0_101 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="114-114"];
m0_103 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs", label="var exception = Assert.Throws<CreateJobFailedException>(\r\n                () => client.Create(_job, _state.Object))", span="118-119"];
m0_104 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs", label="Assert.NotNull(exception.InnerException)", span="121-121"];
m0_105 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="122-122"];
m0_106 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="112-112"];
m0_131 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="105-105"];
m0_132 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="148-148"];
m0_133 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="150-150"];
m0_134 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs", label="client.ChangeState(''job-id'', _state.Object, null)", span="152-152"];
m0_136 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="148-148"];
m0_89 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="97-97"];
m0_37 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="37-37"];
m0_87 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="97-97"];
m0_93 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="104-104"];
m0_70 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="74-74"];
m0_162 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="176-176"];
m0_18 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="23-23"];
m0_19 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="x.GetConnection()", span="23-23"];
m0_20 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="23-23"];
m0_78 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobClientFacts.cs", label="currentState = context.Connection.GetStateData(continuationJobId)", span="192-192"];
m0_77 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobClientFacts.cs", label="Logger.Warn(String.Format(\r\n                        ''Can not start continuation '{0}' for background job '{1}': continuation does not exist.'',\r\n                        continuationJobId,\r\n                        context.JobId))", span="184-187"];
m0_79 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", color=green, community=0, file="BackgroundJobClientFacts.cs", label="currentState != null", prediction=7, span="193-193"];
m0_97 [cluster="Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", span="39-39"];
m0_112 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="client.Create(_job, _state.Object)", span="119-119"];
m0_108 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="115-115"];
m0_111 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="119-119"];
m0_110 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="115-115"];
m0_113 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="119-119"];
m0_120 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="client.ChangeState(null, _state.Object, null)", span="131-131"];
m0_119 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="131-131"];
m0_121 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="131-131"];
m0_129 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="client.ChangeState(''jobId'', null, null)", span="142-142"];
m0_128 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="142-142"];
m0_130 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="142-142"];
m0_137 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="154-157"];
m0_139 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="154-157"];
m0_140 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="154-157"];
m0_141 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="ctx.BackgroundJobId == ''job-id'' &&\r\n                ctx.NewState == _state.Object &&\r\n                ctx.ExpectedStates == null", span="155-157"];
m0_142 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="154-157"];
m0_148 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="167-170"];
m0_150 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="167-170"];
m0_151 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="167-170"];
m0_152 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="ctx.BackgroundJobId == ''job-id'' &&\r\n                ctx.NewState == _state.Object &&\r\n                ctx.ExpectedStates.SequenceEqual(new[] { ''State'' })", span="168-170"];
m0_153 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="167-170"];
m0_164 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="176-176"];
m0_72 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", color=green, community=0, file="BackgroundJobClientFacts.cs", label="var started = DateTime.UtcNow", prediction=8, span="176-176"];
m0_73 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobClientFacts.cs", label="var firstAttempt = true", span="177-177"];
m0_74 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobClientFacts.cs", label=true, span="179-179"];
m0_75 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobClientFacts.cs", label="var continuationData = context.Connection.GetJobData(continuationJobId)", span="181-181"];
m0_76 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobClientFacts.cs", label="continuationData == null", span="182-182"];
m0_95 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", file="BackgroundJobClientFacts.cs", label="return JobHelper.FromJson<List<Continuation>>(connection.GetJobParameter(\r\n                jobId, ''Continuations'')) ?? new List<Continuation>();", span="221-222"];
m0_96 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", span="219-219"];
m0_167 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="189-189"];
m0_71 [cluster="Unk.Create", file="BackgroundJobClientFacts.cs", label="Entry Unk.Create", span=""];
m0_80 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobClientFacts.cs", label="DateTime.UtcNow >= started.Add(timeout)", span="198-198"];
m0_38 [cluster="BackgroundJobClient.cstr", file="BackgroundJobClientFacts.cs", label="Entry BackgroundJobClient.cstr", span=""];
m0_114 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="126-126"];
m0_115 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="128-128"];
m0_116 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(null, _state.Object, null))", span="130-131"];
m0_117 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="133-133"];
m0_118 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="126-126"];
m0_0 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="19-19"];
m0_1 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="var connection = new Mock<IStorageConnection>()", span="21-21"];
m0_2 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", span="41-41"];
m0_3 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", file="BackgroundJobClientFacts.cs", label="_knownFinalStates = knownFinalStates", span="43-43"];
m0_143 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="161-161"];
m0_144 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="163-163"];
m0_145 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs", label="client.ChangeState(''job-id'', _state.Object, ''State'')", span="165-165"];
m0_147 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="161-161"];
m0_161 [cluster="Unk.True", file="BackgroundJobClientFacts.cs", label="Entry Unk.True", span=""];
m0_123 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="137-137"];
m0_124 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="139-139"];
m0_125 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(''jobId'', null, null))", span="141-142"];
m0_126 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="Assert.Equal(''state'', exception.ParamName)", span="144-144"];
m0_127 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="137-137"];
m0_17 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="187-187"];
m0_168 [file="BackgroundJobClientFacts.cs", label="Hangfire.Core.Tests.BackgroundJobClientFacts", span=""];
m0_169 [file="BackgroundJobClientFacts.cs", label=client, span=""];
m0_170 [file="BackgroundJobClientFacts.cs", label=client, span=""];
m0_171 [file="BackgroundJobClientFacts.cs", label=client, span=""];
m0_172 [file="BackgroundJobClientFacts.cs", label=client, span=""];
m0_173 [file="BackgroundJobClientFacts.cs", label=client, span=""];
m1_42 [cluster="Hangfire.Storage.IStorageConnection.GetStateData(string)", file="BackgroundJobServer.cs", label="Entry Hangfire.Storage.IStorageConnection.GetStateData(string)", span="45-45"];
m1_69 [cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="BackgroundJobServer.cs", label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m1_66 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="BackgroundJobServer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m1_99 [cluster="System.Collections.Generic.List<T>.List()", file="BackgroundJobServer.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_86 [cluster="string.Format(string, object, object)", file="BackgroundJobServer.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m1_64 [cluster="string.IsNullOrWhiteSpace(string)", file="BackgroundJobServer.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m1_41 [cluster="string.Format(string, object)", file="BackgroundJobServer.cs", label="Entry string.Format(string, object)", span="0-0"];
m1_67 [cluster="JsonSerializerSettings.cstr", file="BackgroundJobServer.cs", label="Entry JsonSerializerSettings.cstr", span=""];
m1_35 [cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", file="BackgroundJobServer.cs", label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", span="26-26"];
m1_90 [cluster="System.Threading.Thread.Sleep(int)", file="BackgroundJobServer.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m1_94 [cluster="Hangfire.Storage.IStorageConnection.SetJobParameter(string, string, string)", file="BackgroundJobServer.cs", label="Entry Hangfire.Storage.IStorageConnection.SetJobParameter(string, string, string)", span="38-38"];
m1_68 [cluster="Unk.>", file="BackgroundJobServer.cs", label="Entry Unk.>", span=""];
m1_43 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.Continuations.ContinuationsSupportAttribute.Continuation>)", file="BackgroundJobServer.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.Continuations.ContinuationsSupportAttribute.Continuation>)", span="213-213"];
m1_91 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.Continuations.ContinuationsSupportAttribute.Continuation>)", file="BackgroundJobServer.cs", label="connection.SetJobParameter(jobId, ''Continuations'', JobHelper.ToJson(continuations))", span="216-216"];
m1_92 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.Continuations.ContinuationsSupportAttribute.Continuation>)", file="BackgroundJobServer.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.Continuations.ContinuationsSupportAttribute.Continuation>)", span="213-213"];
m1_44 [cluster="System.Enum.HasFlag(System.Enum)", file="BackgroundJobServer.cs", label="Entry System.Enum.HasFlag(System.Enum)", span="0-0"];
m1_15 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", span="117-117"];
m1_46 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="var continuations = GetContinuations(context.Connection, context.JobId)", span="121-121"];
m1_50 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="var currentState = GetContinuaionState(context, continuation.JobId, ContinuationStateFetchTimeout)", span="130-130"];
m1_53 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="continuation.Options.HasFlag(JobContinuationOptions.OnlyOnSucceededState) &&\r\n                    context.CandidateState.Name != SucceededState.StateName", span="140-141"];
m1_61 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="context.StateMachine.ChangeState(tuple.Key, tuple.Value, new[] { AwaitingState.StateName })", span="168-168"];
m1_54 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="nextStates.Add(continuation.JobId, new DeletedState { Reason = ''Missed continuation'' })", span="143-143"];
m1_59 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="nextStates.Add(continuation.JobId, nextState)", span="163-163"];
m1_60 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label=nextStates, span="166-166"];
m1_49 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="String.IsNullOrWhiteSpace(continuation.JobId)", span="128-128"];
m1_51 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="currentState == null", span="131-131"];
m1_52 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="currentState.Name != AwaitingState.StateName", span="138-138"];
m1_56 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="nextState = JsonConvert.DeserializeObject<IState>(\r\n                        currentState.Data[''NextState''],\r\n                        new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.Objects })", span="151-153"];
m1_55 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="IState nextState", span="147-147"];
m1_57 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label=Exception, span="155-155"];
m1_58 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="nextState = new FailedState(ex)\r\n                    {\r\n                        Reason = ''Can not start the continuation due to de-serialization error.''\r\n                    }", span="157-160"];
m1_62 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", span="117-117"];
m1_39 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="BackgroundJobServer.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m1_6 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="50-50"];
m1_7 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="var awaitingState = context.CandidateState as AwaitingState", span="52-52"];
m1_9 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="AddContinuation(context, awaitingState)", span="56-56"];
m1_10 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="_knownFinalStates.Contains(context.CandidateState.Name)", span="58-58"];
m1_11 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="ExecuteContinuationsIfExist(context)", span="61-61"];
m1_8 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="awaitingState != null", span="53-53"];
m1_12 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="50-50"];
m1_40 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="BackgroundJobServer.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m1_45 [cluster="Hangfire.States.DeletedState.DeletedState()", file="BackgroundJobServer.cs", label="Entry Hangfire.States.DeletedState.DeletedState()", span="27-27"];
m1_88 [cluster="System.DateTime.Add(System.TimeSpan)", file="BackgroundJobServer.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m1_63 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BackgroundJobServer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_16 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="BackgroundJobServer.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="65-65"];
m1_17 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="BackgroundJobServer.cs", label="var awaitingState = context.NewState as AwaitingState", span="67-67"];
m1_19 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="BackgroundJobServer.cs", label="context.JobExpirationTimeout = awaitingState.Expiration", span="70-70"];
m1_18 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="BackgroundJobServer.cs", label="awaitingState != null", span="68-68"];
m1_20 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="BackgroundJobServer.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="65-65"];
m1_98 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="BackgroundJobServer.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m1_89 [cluster="System.TimeoutException.TimeoutException(string)", file="BackgroundJobServer.cs", label="Entry System.TimeoutException.TimeoutException(string)", span="0-0"];
m1_100 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="BackgroundJobServer.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="225-225"];
m1_101 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="BackgroundJobServer.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="225-225"];
m1_37 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.Continuation.Continuation()", file="BackgroundJobServer.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.Continuation.Continuation()", span="229-229"];
m1_0 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", file="BackgroundJobServer.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", span="36-36"];
m1_1 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", file="BackgroundJobServer.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", span="36-36"];
m1_87 [cluster="Hangfire.Logging.ILog.Warn(string)", file="BackgroundJobServer.cs", label="Entry Hangfire.Logging.ILog.Warn(string)", span="261-261"];
m1_93 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="BackgroundJobServer.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m1_70 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="BackgroundJobServer.cs", label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="31-31"];
m1_36 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", file="BackgroundJobServer.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", span="219-219"];
m1_95 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", file="BackgroundJobServer.cs", label="return JobHelper.FromJson<List<Continuation>>(connection.GetJobParameter(\r\n                jobId, ''Continuations'')) ?? new List<Continuation>();", span="221-222"];
m1_96 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", file="BackgroundJobServer.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", span="219-219"];
m1_65 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobServer.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", span="172-172"];
m1_71 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobServer.cs", label="StateData currentState = null", span="174-174"];
m1_75 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobServer.cs", label="var continuationData = context.Connection.GetJobData(continuationJobId)", span="181-181"];
m1_77 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobServer.cs", label="Logger.Warn(String.Format(\r\n                        ''Can not start continuation '{0}' for background job '{1}': continuation does not exist.'',\r\n                        continuationJobId,\r\n                        context.JobId))", span="184-187"];
m1_78 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobServer.cs", label="currentState = context.Connection.GetStateData(continuationJobId)", span="192-192"];
m1_80 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobServer.cs", label="DateTime.UtcNow >= started.Add(timeout)", span="198-198"];
m1_81 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobServer.cs", label="throw new TimeoutException(String.Format(\r\n                        ''Can not start continuation '{0}' for background job '{1}': timeout expired while trying to fetch continuation state.'',\r\n                        continuationJobId,\r\n                        context.JobId));", span="200-203"];
m1_72 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobServer.cs", label="var started = DateTime.UtcNow", span="176-176"];
m1_84 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobServer.cs", label="return currentState;", span="210-210"];
m1_73 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobServer.cs", label="var firstAttempt = true", span="177-177"];
m1_74 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobServer.cs", label=true, span="179-179"];
m1_82 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobServer.cs", label="Thread.Sleep(firstAttempt ? 0 : 1)", span="206-206"];
m1_76 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobServer.cs", label="continuationData == null", span="182-182"];
m1_79 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobServer.cs", label="currentState != null", span="193-193"];
m1_83 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobServer.cs", label="firstAttempt = false", span="207-207"];
m1_85 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="BackgroundJobServer.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", span="172-172"];
m1_38 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BackgroundJobServer.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_97 [cluster="Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", file="BackgroundJobServer.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", span="39-39"];
m1_13 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="BackgroundJobServer.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", span="74-74"];
m1_21 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="BackgroundJobServer.cs", label="var connection = context.Connection", span="76-76"];
m1_22 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="BackgroundJobServer.cs", label="var parentId = awaitingState.ParentId", span="77-77"];
m1_25 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="BackgroundJobServer.cs", label="continuations.Add(new Continuation { JobId = context.JobId, Options = awaitingState.Options })", span="86-86"];
m1_32 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="BackgroundJobServer.cs", label="var startImmediately = !awaitingState.Options.HasFlag(JobContinuationOptions.OnlyOnSucceededState) ||\r\n                        currentState.Name == SucceededState.StateName", span="107-108"];
m1_33 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="BackgroundJobServer.cs", label="context.CandidateState = startImmediately\r\n                        ? awaitingState.NextState\r\n                        : new DeletedState { Reason = ''Missed continuation'' }", span="110-112"];
m1_23 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="BackgroundJobServer.cs", label="connection.AcquireDistributedJobLock(parentId, AddJobLockTimeout)", span="83-83"];
m1_24 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="BackgroundJobServer.cs", label="var continuations = GetContinuations(connection, parentId)", span="85-85"];
m1_26 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="BackgroundJobServer.cs", label="var jobData = connection.GetJobData(parentId)", span="88-88"];
m1_29 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="BackgroundJobServer.cs", label="var currentState = connection.GetStateData(parentId)", span="98-98"];
m1_30 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="BackgroundJobServer.cs", label="SetContinuations(connection, parentId, continuations)", span="103-103"];
m1_28 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="BackgroundJobServer.cs", label="throw new InvalidOperationException(\r\n                        String.Format(''Can not add a continuation: parent background job '{0}' does not exist.'', parentId));", span="94-95"];
m1_27 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="BackgroundJobServer.cs", label="jobData == null", span="89-89"];
m1_31 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="BackgroundJobServer.cs", label="currentState != null && _knownFinalStates.Contains(currentState.Name)", span="105-105"];
m1_34 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="BackgroundJobServer.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", span="74-74"];
m1_2 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", file="BackgroundJobServer.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", span="41-41"];
m1_3 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", file="BackgroundJobServer.cs", label="_knownFinalStates = knownFinalStates", span="43-43"];
m1_4 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", file="BackgroundJobServer.cs", label="Order = 1000", span="47-47"];
m1_5 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", file="BackgroundJobServer.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", span="41-41"];
m1_14 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="BackgroundJobServer.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m1_102 [file="BackgroundJobServer.cs", label="Hangfire.Continuations.ContinuationsSupportAttribute", span=""];
m3_88 [cluster="Hangfire.Storage.IStorageConnection.GetStateData(string)", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Storage.IStorageConnection.GetStateData(string)", span="45-45"];
m3_92 [cluster="string.IsNullOrWhiteSpace(string)", file="BackgroundJobServerOptionsFacts.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m3_97 [cluster="Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", span="70-70"];
m3_94 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", span="79-79"];
m3_95 [cluster="string.Format(string, object)", file="BackgroundJobServerOptionsFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m3_85 [cluster="Hangfire.Dashboard.UrlHelper.To(string)", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Dashboard.UrlHelper.To(string)", span="33-33"];
m3_75 [cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", span="4-4"];
m3_93 [cluster="Hangfire.Dashboard.UrlHelper.JobDetails(string)", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Dashboard.UrlHelper.JobDetails(string)", span="43-43"];
m3_83 [cluster="Hangfire.Dashboard.HtmlHelper.JobsSidebar()", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobsSidebar()", span="47-47"];
m3_82 [cluster="Hangfire.Storage.JobStorageConnection.GetRangeFromSet(string, int, int)", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Storage.JobStorageConnection.GetRangeFromSet(string, int, int)", span="58-58"];
m3_74 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="104-104"];
m3_0 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Continuations.AwaitingJobsPage.Execute()", span="57-57"];
m3_2 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="Layout = new LayoutPage(''Awaiting Jobs'')", span="74-74"];
m3_3 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="int from, perPage", span="76-76"];
m3_4 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="int.TryParse(Query(''from''), out from)", span="78-78"];
m3_5 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="int.TryParse(Query(''count''), out perPage)", span="79-79"];
m3_12 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="pager = new Pager(from, perPage, storageConnection.GetSetCount(''awaiting''))", span="93-93"];
m3_6 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="List<string> jobIds", span="81-81"];
m3_7 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="Pager pager", span="82-82"];
m3_8 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="var connection = Storage.GetConnection()", span="84-84"];
m3_9 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="var storageConnection = connection as JobStorageConnection", span="86-86"];
m3_10 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="storageConnection == null", span="88-88"];
m3_13 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="jobIds = storageConnection.GetRangeFromSet(''awaiting'', pager.FromRecord, pager.FromRecord + pager.RecordsPerPage - 1)", span="94-94"];
m3_11 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="throw new NotSupportedException(''Continuations are not supported for your current job storage implementation.'');", span="90-90"];
m3_23 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="Write(Html.PerPageSelector(pager))", span="164-164"];
m3_69 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="Write(Html.Paginator(pager))", span="434-434"];
m3_14 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''\r\n<div class=\''row\''>\r\n    <div class=\''col-md-3\''>\r\n        '')", span="101-101"];
m3_17 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="jobIds.Count > 0", span="117-117"];
m3_25 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label=jobIds, span="191-191"];
m3_15 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="Write(Html.JobsSidebar())", span="106-106"];
m3_16 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''\r\n    </div>\r\n    <div class=\''col-md-9\''>\r\n        <h1 class=\''page-header\''>Awaitin'' +\r\n''g Jobs</h1>\r\n\r\n'')", span="111-112"];
m3_18 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''            <div class=\''js-jobs-list\''>\r\n                <div class=\''btn-toolbar b'' +\r\n''tn-toolbar-top\''>\r\n                    <button class=\''js-jobs-list-command btn bt'' +\r\n''n-sm btn-primary\''\r\n                            data-url=\'''')", span="123-125"];
m3_71 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''            <div class=\''alert alert-info\''>\r\n                No jobs found in awai'' +\r\n''ting state.\r\n            </div>\r\n'')", span="451-452"];
m3_19 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="Write(Url.To(''/jobs/awaiting/enqueue''))", span="130-130"];
m3_20 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(@''''''\r\n                            data-loading-text=''''Enqueueing...''''>\r\n                        <span class=''''glyphicon glyphicon-repeat''''></span>\r\n                        Enqueue jobs\r\n                    </button>\r\n\r\n                    <button class=''''js-jobs-list-command btn btn-sm btn-default''''\r\n                            data-url='''''')", span="135-142"];
m3_21 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="Write(Url.To(''/jobs/awaiting/delete''))", span="147-147"];
m3_22 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(@''''''\r\n                            data-loading-text=''''Deleting...''''\r\n                            data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\r\n                        <span class=''''glyphicon glyphicon-remove''''></span>\r\n                        Delete selected\r\n                    </button>\r\n\r\n                    '')", span="152-159"];
m3_24 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(@''\r\n                </div>\r\n\r\n                <table class=''''table table-hover''''>\r\n                    <thead>\r\n                        <tr>\r\n                            <th class=''''min-width''''>\r\n                                <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                            </th>\r\n                            <th class=''''min-width''''>Id</th>\r\n                            <th>Job</th>\r\n                            <th class=''''min-width''''>Options</th>\r\n                            <th class=''''min-width''''>Parent</th>\r\n                            <th class=''''align-right''''>Created</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n'')", span="169-186"];
m3_26 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="JobData jobData", span="193-193"];
m3_68 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''                    </tbody>\r\n                </table>\r\n                '')", span="429-429"];
m3_30 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="jobData = connection.GetJobData(jobId)", span="199-199"];
m3_31 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="stateData = connection.GetStateData(jobId)", span="200-200"];
m3_37 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="Write(jobId)", span="228-228"];
m3_39 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="Write(Html.JobIdLink(jobId))", span="239-239"];
m3_44 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="Write(Html.JobNameLink(jobId, jobData.Job))", span="273-273"];
m3_27 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="StateData stateData", span="194-194"];
m3_28 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="StateData parentStateData = null", span="195-195"];
m3_29 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="var connection = Storage.GetConnection()", span="197-197"];
m3_54 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="parentStateData != null", span="334-334"];
m3_58 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="Write(String.Format(''background-color: {0};'', JobHistoryRenderer.GetForegroundStateColor(parentStateData.Name)))", span="356-356"];
m3_60 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="Write(parentStateData.Name)", span="366-366"];
m3_33 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="parentStateData = connection.GetStateData(stateData.Data[''ParentId''])", span="204-204"];
m3_35 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="Write(jobData != null ? ''hover'' : null)", span="217-217"];
m3_41 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="jobData == null", span="249-249"];
m3_65 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="Write(Html.RelativeTime(jobData.CreatedAt))", span="404-404"];
m3_32 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="stateData != null && stateData.Name == AwaitingState.StateName", span="202-202"];
m3_47 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="stateData != null && stateData.Data.ContainsKey(''Options'') && !String.IsNullOrWhiteSpace(stateData.Data[''Options''])", span="287-287"];
m3_49 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="Write(stateData.Data[''Options''])", span="298-298"];
m3_56 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="Write(Url.JobDetails(stateData.Data[''ParentId'']))", span="345-345"];
m3_34 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''                            <tr class=\''js-jobs-list-row '')", span="212-212"];
m3_36 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''\''>\r\n                                <td>\r\n                                    <in'' +\r\n''put type=\''checkbox\'' class=\''js-jobs-list-checkbox\'' name=\''jobs[]\'' value=\'''')", span="222-223"];
m3_38 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''\'' />\r\n                                </td>\r\n                                <td '' +\r\n''class=\''min-width\''>\r\n                                    '')", span="233-234"];
m3_40 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''\r\n                                </td>\r\n'')", span="244-244"];
m3_42 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''                                    <td colspan=\''2\''><em>Job expired.</em></td>\r\n'')", span="255-255"];
m3_43 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''                                    <td>\r\n                                       '' +\r\n'' '')", span="267-268"];
m3_45 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''\r\n                                    </td>\r\n'')", span="278-278"];
m3_46 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''                                    <td class=\''min-width\''>\r\n'')", span="282-282"];
m3_48 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''                                            <code>'')", span="293-293"];
m3_51 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''                                            <em>N/A</em>\r\n'')", span="315-315"];
m3_50 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''</code>\r\n'')", span="303-303"];
m3_52 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''                                    </td>\r\n'')", span="325-325"];
m3_53 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''                                    <td class=\''min-width\''>\r\n'')", span="329-329"];
m3_55 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''                                            <a href=\'''')", span="340-340"];
m3_62 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''                                            <em>N/A</em>\r\n'')", span="384-384"];
m3_57 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''\''>\r\n                                                <span class=\''label label-defa'' +\r\n''ult label-hover\'' style=\'''')", span="350-351"];
m3_59 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''\''>\r\n                                                    '')", span="361-361"];
m3_61 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''\r\n                                                </span>\r\n                      '' +\r\n''                      </a>\r\n'')", span="371-372"];
m3_63 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''                                    </td>\r\n'')", span="394-394"];
m3_64 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''                                    <td class=\''min-width align-right\''>\r\n         '' +\r\n''                               '')", span="398-399"];
m3_66 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''\r\n                                    </td>\r\n'')", span="409-409"];
m3_67 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''                            </tr>\r\n'')", span="419-419"];
m3_70 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''\r\n            </div>\r\n'')", span="439-439"];
m3_72 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="WriteLiteral(''    </div>\r\n</div>\r\n'')", span="462-462"];
m3_73 [cluster="Hangfire.Continuations.AwaitingJobsPage.Execute()", file="BackgroundJobServerOptionsFacts.cs", label="Exit Hangfire.Continuations.AwaitingJobsPage.Execute()", span="57-57"];
m3_76 [cluster="Hangfire.Dashboard.RazorPage.Query(string)", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Dashboard.RazorPage.Query(string)", span="65-65"];
m3_87 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m3_77 [cluster="int.TryParse(string, out int)", file="BackgroundJobServerOptionsFacts.cs", label="Entry int.TryParse(string, out int)", span="0-0"];
m3_80 [cluster="Hangfire.Dashboard.Pager.Pager(int, int, long)", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Dashboard.Pager.Pager(int, int, long)", span="29-29"];
m3_79 [cluster="System.NotSupportedException.NotSupportedException(string)", file="BackgroundJobServerOptionsFacts.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m3_96 [cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="154-154"];
m3_91 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="BackgroundJobServerOptionsFacts.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m3_89 [cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="139-139"];
m3_86 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="76-76"];
m3_90 [cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="146-146"];
m3_84 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="111-111"];
m3_81 [cluster="Hangfire.Storage.JobStorageConnection.GetSetCount(string)", file="BackgroundJobServerOptionsFacts.cs", label="Entry Hangfire.Storage.JobStorageConnection.GetSetCount(string)", span="53-53"];
m3_98 [file="BackgroundJobServerOptionsFacts.cs", label="Hangfire.Continuations.AwaitingJobsPage", span=""];
m4_8 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int)", file="BootstrapperConfigurationExtensions.cs", label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int)", span="43-43"];
m4_9 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int)", file="BootstrapperConfigurationExtensions.cs", label="var options = new BackgroundJobServerOptions\r\n            {\r\n                WorkerCount = workerCount\r\n            }", span="47-50"];
m4_10 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int)", file="BootstrapperConfigurationExtensions.cs", label="configuration.UseServer(() => new BackgroundJobServer(options))", span="52-52"];
m4_11 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int)", file="BootstrapperConfigurationExtensions.cs", label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int)", span="43-43"];
m4_44 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", file="BootstrapperConfigurationExtensions.cs", label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", span="141-141"];
m4_45 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", file="BootstrapperConfigurationExtensions.cs", label="configuration.UseServer(() => new BackgroundJobServer(options, storage))", span="146-146"];
m4_46 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", file="BootstrapperConfigurationExtensions.cs", label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", span="141-141"];
m4_16 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", file="BootstrapperConfigurationExtensions.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="58-58"];
m4_7 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", file="BootstrapperConfigurationExtensions.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer()", span="38-38"];
m4_17 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", file="BootstrapperConfigurationExtensions.cs", label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", span="63-63"];
m4_18 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", file="BootstrapperConfigurationExtensions.cs", label="var options = new BackgroundJobServerOptions\r\n            {\r\n                Queues = queues\r\n            }", span="67-70"];
m4_19 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", file="BootstrapperConfigurationExtensions.cs", label="configuration.UseServer(() => new BackgroundJobServer(options))", span="72-72"];
m4_20 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", file="BootstrapperConfigurationExtensions.cs", label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, params string[])", span="63-63"];
m4_43 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BootstrapperConfigurationExtensions.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="69-69"];
m4_47 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="146-146"];
m4_4 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="32-32"];
m4_5 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="new BackgroundJobServer()", span="32-32"];
m4_6 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="32-32"];
m4_14 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="new BackgroundJobServer(options)", span="52-52"];
m4_13 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="52-52"];
m4_15 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="52-52"];
m4_22 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="new BackgroundJobServer(options)", span="72-72"];
m4_21 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="72-72"];
m4_23 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="72-72"];
m4_29 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="new BackgroundJobServer(options)", span="96-96"];
m4_28 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="96-96"];
m4_30 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="96-96"];
m4_35 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="new BackgroundJobServer(options)", span="111-111"];
m4_34 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="111-111"];
m4_36 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="111-111"];
m4_41 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="new BackgroundJobServer(\r\n                new BackgroundJobServerOptions(),\r\n                storage)", span="126-128"];
m4_40 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="126-128"];
m4_42 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="126-128"];
m4_48 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="new BackgroundJobServer(options, storage)", span="146-146"];
m4_49 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="146-146"];
m4_3 [cluster="Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", file="BootstrapperConfigurationExtensions.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", span="82-82"];
m4_12 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BootstrapperConfigurationExtensions.cs", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="34-34"];
m4_24 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int, params string[])", file="BootstrapperConfigurationExtensions.cs", label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int, params string[])", span="85-85"];
m4_25 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int, params string[])", file="BootstrapperConfigurationExtensions.cs", label="var options = new BackgroundJobServerOptions\r\n            {\r\n                WorkerCount = workerCount,\r\n                Queues = queues\r\n            }", span="90-94"];
m4_26 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int, params string[])", file="BootstrapperConfigurationExtensions.cs", label="configuration.UseServer(() => new BackgroundJobServer(options))", span="96-96"];
m4_27 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int, params string[])", file="BootstrapperConfigurationExtensions.cs", label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, int, params string[])", span="85-85"];
m4_31 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.BackgroundJobServerOptions)", file="BootstrapperConfigurationExtensions.cs", label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.BackgroundJobServerOptions)", span="107-107"];
m4_32 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.BackgroundJobServerOptions)", file="BootstrapperConfigurationExtensions.cs", label="configuration.UseServer(() => new BackgroundJobServer(options))", span="111-111"];
m4_33 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.BackgroundJobServerOptions)", file="BootstrapperConfigurationExtensions.cs", label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.BackgroundJobServerOptions)", span="107-107"];
m4_0 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration)", file="BootstrapperConfigurationExtensions.cs", label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration)", span="30-30"];
m4_1 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration)", file="BootstrapperConfigurationExtensions.cs", label="configuration.UseServer(() => new BackgroundJobServer())", span="32-32"];
m4_2 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration)", file="BootstrapperConfigurationExtensions.cs", label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration)", span="30-30"];
m4_37 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage)", file="BootstrapperConfigurationExtensions.cs", label="Entry Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage)", span="122-122"];
m4_38 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage)", file="BootstrapperConfigurationExtensions.cs", label="configuration.UseServer(() => new BackgroundJobServer(\r\n                new BackgroundJobServerOptions(),\r\n                storage))", span="126-128"];
m4_39 [cluster="Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage)", file="BootstrapperConfigurationExtensions.cs", label="Exit Hangfire.BootstrapperConfigurationExtensions.UseServer(Hangfire.IBootstrapperConfiguration, Hangfire.JobStorage)", span="122-122"];
m4_50 [file="BootstrapperConfigurationExtensions.cs", label=options, span=""];
m4_51 [file="BootstrapperConfigurationExtensions.cs", label=options, span=""];
m4_52 [file="BootstrapperConfigurationExtensions.cs", label=options, span=""];
m4_53 [file="BootstrapperConfigurationExtensions.cs", label="Hangfire.BackgroundJobServerOptions", span=""];
m4_54 [file="BootstrapperConfigurationExtensions.cs", label="Hangfire.JobStorage", span=""];
m4_55 [file="BootstrapperConfigurationExtensions.cs", label="Hangfire.JobStorage", span=""];
m4_56 [file="BootstrapperConfigurationExtensions.cs", label="Hangfire.BackgroundJobServerOptions", span=""];
m6_23 [cluster="Hangfire.States.IStateMachine.ApplyState(Hangfire.States.ApplyStateContext)", file="CoreJobCreationProcess.cs", label="Entry Hangfire.States.IStateMachine.ApplyState(Hangfire.States.ApplyStateContext)", span="30-30"];
m6_19 [cluster="Unk.CreateExpiredJob", file="CoreJobCreationProcess.cs", label="Entry Unk.CreateExpiredJob", span=""];
m6_21 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", file="CoreJobCreationProcess.cs", label="Entry Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", span="33-33"];
m6_6 [cluster="Hangfire.Client.CoreJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="CoreJobCreationProcess.cs", label="Entry Hangfire.Client.CoreJobCreationProcess.Run(Hangfire.Client.CreateContext)", span="34-34"];
m6_7 [cluster="Hangfire.Client.CoreJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="CoreJobCreationProcess.cs", label="var parameters = context.Parameters.ToDictionary(x => x.Key, x => JobHelper.ToJson(x.Value))", span="36-36"];
m6_9 [cluster="Hangfire.Client.CoreJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="CoreJobCreationProcess.cs", label="var jobId = context.Connection.CreateExpiredJob(\r\n                context.Job,\r\n                parameters,\r\n                createdAt,\r\n                TimeSpan.FromHours(1))", span="39-43"];
m6_10 [cluster="Hangfire.Client.CoreJobCreationProcess.Run(Hangfire.Client.CreateContext)", color=green, community=0, file="CoreJobCreationProcess.cs", label="context.InitialState != null", prediction=9, span="45-45"];
m6_11 [cluster="Hangfire.Client.CoreJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="CoreJobCreationProcess.cs", label="var transaction = context.Connection.CreateWriteTransaction()", span="47-47"];
m6_12 [cluster="Hangfire.Client.CoreJobCreationProcess.Run(Hangfire.Client.CreateContext)", color=green, community=0, file="CoreJobCreationProcess.cs", label="var applyContext = new ApplyStateContext(\r\n                        context.Storage,\r\n                        context.Connection,\r\n                        transaction,\r\n                        new BackgroundJob(jobId, context.Job, createdAt),\r\n                        context.InitialState,\r\n                        null)", prediction=10, span="49-55"];
m6_8 [cluster="Hangfire.Client.CoreJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="CoreJobCreationProcess.cs", label="var createdAt = DateTime.UtcNow", span="38-38"];
m6_14 [cluster="Hangfire.Client.CoreJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="CoreJobCreationProcess.cs", label="transaction.Commit()", span="59-59"];
m6_13 [cluster="Hangfire.Client.CoreJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="CoreJobCreationProcess.cs", label="_stateMachine.ApplyState(applyContext)", span="57-57"];
m6_16 [cluster="Hangfire.Client.CoreJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="CoreJobCreationProcess.cs", label="Exit Hangfire.Client.CoreJobCreationProcess.Run(Hangfire.Client.CreateContext)", span="34-34"];
m6_24 [cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="CoreJobCreationProcess.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54"];
m6_17 [cluster="Unk.ToDictionary", file="CoreJobCreationProcess.cs", label="Entry Unk.ToDictionary", span=""];
m6_18 [cluster="System.TimeSpan.FromHours(double)", file="CoreJobCreationProcess.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m6_22 [cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="CoreJobCreationProcess.cs", label="Entry Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", span="25-25"];
m6_20 [cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", file="CoreJobCreationProcess.cs", label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27"];
m6_31 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="CoreJobCreationProcess.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m6_28 [cluster="lambda expression", file="CoreJobCreationProcess.cs", label="Entry lambda expression", span="36-36"];
m6_25 [cluster="lambda expression", file="CoreJobCreationProcess.cs", label="Entry lambda expression", span="36-36"];
m6_26 [cluster="lambda expression", file="CoreJobCreationProcess.cs", label="x.Key", span="36-36"];
m6_27 [cluster="lambda expression", file="CoreJobCreationProcess.cs", label="Exit lambda expression", span="36-36"];
m6_29 [cluster="lambda expression", file="CoreJobCreationProcess.cs", label="JobHelper.ToJson(x.Value)", span="36-36"];
m6_30 [cluster="lambda expression", file="CoreJobCreationProcess.cs", label="Exit lambda expression", span="36-36"];
m6_0 [cluster="Hangfire.Client.CoreJobCreationProcess.CoreJobCreationProcess(Hangfire.States.IStateMachine)", file="CoreJobCreationProcess.cs", label="Entry Hangfire.Client.CoreJobCreationProcess.CoreJobCreationProcess(Hangfire.States.IStateMachine)", span="28-28"];
m6_1 [cluster="Hangfire.Client.CoreJobCreationProcess.CoreJobCreationProcess(Hangfire.States.IStateMachine)", color=green, community=0, file="CoreJobCreationProcess.cs", label="stateMachine == null", prediction=11, span="30-30"];
m6_3 [cluster="Hangfire.Client.CoreJobCreationProcess.CoreJobCreationProcess(Hangfire.States.IStateMachine)", file="CoreJobCreationProcess.cs", label="_stateMachine = stateMachine", span="31-31"];
m6_2 [cluster="Hangfire.Client.CoreJobCreationProcess.CoreJobCreationProcess(Hangfire.States.IStateMachine)", color=green, community=0, file="CoreJobCreationProcess.cs", label="throw new ArgumentNullException(''StateChangeProcess'');", prediction=12, span="30-30"];
m6_4 [cluster="Hangfire.Client.CoreJobCreationProcess.CoreJobCreationProcess(Hangfire.States.IStateMachine)", file="CoreJobCreationProcess.cs", label="Exit Hangfire.Client.CoreJobCreationProcess.CoreJobCreationProcess(Hangfire.States.IStateMachine)", span="28-28"];
m6_32 [file="CoreJobCreationProcess.cs", label="Hangfire.Client.CoreJobCreationProcess", span=""];
m7_83 [cluster="Hangfire.IGlobalConfiguration.UseSqlServerStorage(string)", file="CoreJobCreationProcessFacts.cs", label="Entry Hangfire.IGlobalConfiguration.UseSqlServerStorage(string)", span="25-25"];
m7_128 [cluster="System.Console.WriteLine(string, object)", file="CoreJobCreationProcessFacts.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m7_151 [cluster="System.Collections.Generic.List<T>.List()", file="CoreJobCreationProcessFacts.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m7_92 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", file="CoreJobCreationProcessFacts.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="60-60"];
m7_85 [cluster="Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogProvider()", file="CoreJobCreationProcessFacts.cs", label="Entry Hangfire.Logging.LogProviders.ColouredConsoleLogProvider.ColouredConsoleLogProvider()", span="1356-1356"];
m7_0 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="Entry ConsoleSample.Program.Main()", span="10-10"];
m7_3 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="CoreJobCreationProcessFacts.cs", label="RecurringJob.AddOrUpdate(''hourly'', () => Console.WriteLine(''Hello''), ''25 15 * * *'')", prediction=13, span="18-18"];
m7_2 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="RecurringJob.AddOrUpdate(() => Console.WriteLine(''Hello, world!''), Cron.Minutely)", span="17-17"];
m7_4 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="RecurringJob.AddOrUpdate(''Hawaiian'', () => Console.WriteLine(''Hawaiian''),  ''15 08 * * *'', TimeZoneInfo.FindSystemTimeZoneById(''Hawaiian Standard Time''))", span="20-20"];
m7_12 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="CoreJobCreationProcessFacts.cs", label="command == null || command.Equals(''stop'', StringComparison.OrdinalIgnoreCase)", prediction=14, span="37-37"];
m7_11 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="var command = Console.ReadLine()", span="35-35"];
m7_13 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="command.StartsWith(''add'', StringComparison.OrdinalIgnoreCase)", span="42-42"];
m7_80 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="Console.WriteLine(''Press Enter to exit...'')", span="190-190"];
m7_32 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="CoreJobCreationProcessFacts.cs", label="command.StartsWith(''error'', StringComparison.OrdinalIgnoreCase)", prediction=15, span="77-77"];
m7_23 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="command.StartsWith(''static'', StringComparison.OrdinalIgnoreCase)", span="60-60"];
m7_29 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="Console.WriteLine(''Jobs enqueued.'')", span="69-69"];
m7_31 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="Console.WriteLine(ex.Message)", span="73-73"];
m7_33 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="var workCount = int.Parse(command.Substring(6))", span="79-79"];
m7_38 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="command.StartsWith(''args'', StringComparison.OrdinalIgnoreCase)", span="86-86"];
m7_15 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="CoreJobCreationProcessFacts.cs", label="var i = 0", prediction=16, span="47-47"];
m7_14 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="var workCount = int.Parse(command.Substring(4))", span="46-46"];
m7_16 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="CoreJobCreationProcessFacts.cs", label="i < workCount", prediction=17, span="47-47"];
m7_17 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="CoreJobCreationProcessFacts.cs", label="var number = i", prediction=18, span="49-49"];
m7_19 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="CoreJobCreationProcessFacts.cs", label="i++", prediction=16, span="47-47"];
m7_20 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="Console.WriteLine(''Jobs enqueued.'')", span="52-52"];
m7_18 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="BackgroundJob.Enqueue<Services>(x => x.Random(number))", span="50-50"];
m7_34 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="CoreJobCreationProcessFacts.cs", label="var i = 0", prediction=20, span="80-80"];
m7_35 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="CoreJobCreationProcessFacts.cs", label="i < workCount", prediction=21, span="80-80"];
m7_37 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="CoreJobCreationProcessFacts.cs", label="i++", prediction=20, span="80-80"];
m7_36 [cluster="ConsoleSample.Program.Main()", color=green, community=0, file="CoreJobCreationProcessFacts.cs", label="BackgroundJob.Enqueue<Services>(x => x.Error())", prediction=23, span="82-82"];
m7_1 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="GlobalConfiguration.Configuration\r\n                .UseSqlServerStorage(@''Server=.\sqlexpress;Database=Hangfire.Sample;Trusted_Connection=True;'')\r\n                .UseMsmqQueues(@''.\Private$\hangfire{0}'', ''default'', ''critical'')\r\n                .UseLogProvider(new ColouredConsoleLogProvider())", span="12-15"];
m7_5 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="RecurringJob.AddOrUpdate(''UTC'', () => Console.WriteLine(''UTC''), ''15 18 * * *'')", span="21-21"];
m7_10 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label=true, span="33-33"];
m7_24 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="var workCount = int.Parse(command.Substring(7))", span="64-64"];
m7_39 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="var workCount = int.Parse(command.Substring(5))", span="88-88"];
m7_44 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="command.StartsWith(''custom'', StringComparison.OrdinalIgnoreCase)", span="95-95"];
m7_45 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="var workCount = int.Parse(command.Substring(7))", span="97-97"];
m7_50 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="command.StartsWith(''fullargs'', StringComparison.OrdinalIgnoreCase)", span="109-109"];
m7_51 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="var workCount = int.Parse(command.Substring(9))", span="111-111"];
m7_56 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="command.StartsWith(''in'', StringComparison.OrdinalIgnoreCase)", span="131-131"];
m7_57 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="var seconds = int.Parse(command.Substring(2))", span="133-133"];
m7_60 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="command.StartsWith(''cancelable'', StringComparison.OrdinalIgnoreCase)", span="138-138"];
m7_61 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="var iterations = int.Parse(command.Substring(11))", span="140-140"];
m7_63 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="command.StartsWith(''delete'', StringComparison.OrdinalIgnoreCase)", span="144-144"];
m7_64 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="var workCount = int.Parse(command.Substring(7))", span="146-146"];
m7_70 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="command.StartsWith(''fast'', StringComparison.OrdinalIgnoreCase)", span="154-154"];
m7_71 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="var workCount = int.Parse(command.Substring(5))", span="158-158"];
m7_76 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="command.StartsWith(''generic'', StringComparison.OrdinalIgnoreCase)", span="178-178"];
m7_78 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="command.StartsWith(''continuations'', StringComparison.OrdinalIgnoreCase)", span="183-183"];
m7_81 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="Console.ReadLine()", span="191-191"];
m7_22 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="Console.WriteLine(ex.Message)", span="56-56"];
m7_26 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="i < workCount", span="65-65"];
m7_30 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label=Exception, span="71-71"];
m7_21 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label=Exception, span="54-54"];
m7_42 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="BackgroundJob.Enqueue<Services>(x => x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow))", span="91-91"];
m7_48 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="BackgroundJob.Enqueue<Services>(x => x.Custom(\r\n                                new Random().Next(),\r\n                                new []{ ''Hello'', ''world!'' },\r\n                                new Services.CustomObject { Id = 123 },\r\n                                DayOfWeek.Friday\r\n                                ))", span="100-105"];
m7_54 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="BackgroundJob.Enqueue<Services>(x => x.FullArgs(\r\n                                false,\r\n                                123,\r\n                                'c',\r\n                                DayOfWeek.Monday,\r\n                                ''hello'',\r\n                                new TimeSpan(12, 13, 14),\r\n                                new DateTime(2012, 11, 10),\r\n                                new Services.CustomObject { Id = 123 },\r\n                                new[] { ''1'', ''2'', ''3'' },\r\n                                new[] { 4, 5, 6 },\r\n                                new long[0],\r\n                                null,\r\n                                new List<string> { ''7'', ''8'', ''9'' }))", span="114-127"];
m7_62 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="BackgroundJob.Enqueue<Services>(x => x.Cancelable(iterations, JobCancellationToken.Null))", span="141-141"];
m7_67 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="var jobId = BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="149-149"];
m7_77 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="BackgroundJob.Enqueue<GenericServices<string>>(x => x.Method(''hello'', 1))", span="180-180"];
m7_73 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="Console.WriteLine(''Jobs enqueued.'')", span="170-170"];
m7_75 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="Console.WriteLine(ex.Message)", span="174-174"];
m7_6 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="RecurringJob.AddOrUpdate(''Russian'', () => Console.WriteLine(''Russian''), ''15 21 * * *'', TimeZoneInfo.Local)", span="22-22"];
m7_9 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="var count = 1", span="31-31"];
m7_79 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="WriteString(''Hello, Hangfire continuations!'')", span="185-185"];
m7_25 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="var i = 0", span="65-65"];
m7_40 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="var i = 0", span="89-89"];
m7_41 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="i < workCount", span="89-89"];
m7_46 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="var i = 0", span="98-98"];
m7_47 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="i < workCount", span="98-98"];
m7_52 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="var i = 0", span="112-112"];
m7_53 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="i < workCount", span="112-112"];
m7_58 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="var number = count++", span="134-134"];
m7_59 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="BackgroundJob.Schedule<Services>(x => x.Random(number), TimeSpan.FromSeconds(seconds))", span="135-135"];
m7_65 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="var i = 0", span="147-147"];
m7_66 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="i < workCount", span="147-147"];
m7_72 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="Parallel.For(0, workCount, i =>\r\n                            {\r\n                                if (i % 2 == 0)\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyCritical());\r\n                                }\r\n                                else\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyDefault());\r\n                                }\r\n                            })", span="159-169"];
m7_28 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="i++", span="65-65"];
m7_27 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="BackgroundJob.Enqueue(() => Console.WriteLine(''Hello, {0}!'', ''world''))", span="67-67"];
m7_43 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="i++", span="89-89"];
m7_49 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="i++", span="98-98"];
m7_55 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="i++", span="112-112"];
m7_68 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="BackgroundJob.Delete(jobId)", span="150-150"];
m7_74 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label=Exception, span="172-172"];
m7_7 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="var options = new BackgroundJobServerOptions\r\n            {\r\n                Queues = new[] { ''critical'', ''default'' }\r\n            }", span="24-27"];
m7_8 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="new BackgroundJobServer(options)", span="29-29"];
m7_69 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="i++", span="147-147"];
m7_82 [cluster="ConsoleSample.Program.Main()", file="CoreJobCreationProcessFacts.cs", label="Exit ConsoleSample.Program.Main()", span="10-10"];
m7_142 [cluster="System.Random.Random()", file="CoreJobCreationProcessFacts.cs", label="Entry System.Random.Random()", span="0-0"];
m7_144 [cluster="ConsoleSample.Services.CustomObject.CustomObject()", file="CoreJobCreationProcessFacts.cs", label="Entry ConsoleSample.Services.CustomObject.CustomObject()", span="93-93"];
m7_152 [cluster="ConsoleSample.Services.FullArgs(bool, int, char, System.DayOfWeek, string, System.TimeSpan, System.DateTime, ConsoleSample.Services.CustomObject, string[], int[], long[], object[], System.Collections.Generic.List<string>)", file="CoreJobCreationProcessFacts.cs", label="Entry ConsoleSample.Services.FullArgs(bool, int, char, System.DayOfWeek, string, System.TimeSpan, System.DateTime, ConsoleSample.Services.CustomObject, string[], int[], long[], object[], System.Collections.Generic.List<string>)", span="76-76"];
m7_172 [cluster="ConsoleSample.Services.EmptyCritical()", file="CoreJobCreationProcessFacts.cs", label="Entry ConsoleSample.Services.EmptyCritical()", span="18-18"];
m7_150 [cluster="System.DateTime.DateTime(int, int, int)", file="CoreJobCreationProcessFacts.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m7_103 [cluster="Hangfire.BackgroundJob.Delete(string)", file="CoreJobCreationProcessFacts.cs", label="Entry Hangfire.BackgroundJob.Delete(string)", span="149-149"];
m7_132 [cluster="ConsoleSample.Services.Error()", file="CoreJobCreationProcessFacts.cs", label="Entry ConsoleSample.Services.Error()", span="23-23"];
m7_89 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="CoreJobCreationProcessFacts.cs", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
m7_97 [cluster="int.Parse(string)", file="CoreJobCreationProcessFacts.cs", label="Entry int.Parse(string)", span="0-0"];
m7_87 [cluster="Hangfire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", file="CoreJobCreationProcessFacts.cs", label="Entry Hangfire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", span="52-52"];
m7_101 [cluster="System.TimeSpan.FromSeconds(double)", file="CoreJobCreationProcessFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m7_124 [cluster="ConsoleSample.Services.Random(int)", file="CoreJobCreationProcessFacts.cs", label="Entry ConsoleSample.Services.Random(int)", span="30-30"];
m7_137 [cluster="System.Guid.ToString()", file="CoreJobCreationProcessFacts.cs", label="Entry System.Guid.ToString()", span="0-0"];
m7_95 [cluster="string.StartsWith(string, System.StringComparison)", file="CoreJobCreationProcessFacts.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m7_145 [cluster="ConsoleSample.Services.Custom(int, string[], ConsoleSample.Services.CustomObject, System.DayOfWeek)", file="CoreJobCreationProcessFacts.cs", label="Entry ConsoleSample.Services.Custom(int, string[], ConsoleSample.Services.CustomObject, System.DayOfWeek)", span="72-72"];
m7_138 [cluster="ConsoleSample.Services.Args(string, int, System.DateTime)", file="CoreJobCreationProcessFacts.cs", label="Entry ConsoleSample.Services.Args(string, int, System.DateTime)", span="67-67"];
m7_88 [cluster="Hangfire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string)", file="CoreJobCreationProcessFacts.cs", label="Entry Hangfire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string)", span="27-27"];
m7_93 [cluster="System.Console.ReadLine()", file="CoreJobCreationProcessFacts.cs", label="Entry System.Console.ReadLine()", span="0-0"];
m7_159 [cluster="ConsoleSample.Services.Cancelable(int, Hangfire.IJobCancellationToken)", file="CoreJobCreationProcessFacts.cs", label="Entry ConsoleSample.Services.Cancelable(int, Hangfire.IJobCancellationToken)", span="47-47"];
m7_105 [cluster="ConsoleSample.Program.WriteString(string)", file="CoreJobCreationProcessFacts.cs", label="Entry ConsoleSample.Program.WriteString(string)", span="194-194"];
m7_180 [cluster="ConsoleSample.Program.WriteString(string)", file="CoreJobCreationProcessFacts.cs", label="var lastId = BackgroundJob.Enqueue(() => Console.Write(value[0]))", span="196-196"];
m7_182 [cluster="ConsoleSample.Program.WriteString(string)", file="CoreJobCreationProcessFacts.cs", label="i < value.Length", span="198-198"];
m7_183 [cluster="ConsoleSample.Program.WriteString(string)", file="CoreJobCreationProcessFacts.cs", label="lastId = BackgroundJob.ContinueWith(lastId, () => Console.Write(value[i]))", span="200-200"];
m7_185 [cluster="ConsoleSample.Program.WriteString(string)", file="CoreJobCreationProcessFacts.cs", label="BackgroundJob.ContinueWith(lastId, () => Console.WriteLine())", span="203-203"];
m7_181 [cluster="ConsoleSample.Program.WriteString(string)", file="CoreJobCreationProcessFacts.cs", label="var i = 1", span="198-198"];
m7_184 [cluster="ConsoleSample.Program.WriteString(string)", file="CoreJobCreationProcessFacts.cs", label="i++", span="198-198"];
m7_186 [cluster="ConsoleSample.Program.WriteString(string)", file="CoreJobCreationProcessFacts.cs", label="Exit ConsoleSample.Program.WriteString(string)", span="194-194"];
m7_149 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="CoreJobCreationProcessFacts.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m7_187 [cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="CoreJobCreationProcessFacts.cs", label="Entry Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", span="200-200"];
m7_91 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="CoreJobCreationProcessFacts.cs", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="33-33"];
m7_90 [cluster="Hangfire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string, System.TimeZoneInfo)", file="CoreJobCreationProcessFacts.cs", label="Entry Hangfire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string, System.TimeZoneInfo)", span="96-96"];
m7_195 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Entry lambda expression", span="203-203"];
m7_109 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Entry lambda expression", span="18-18"];
m7_122 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="x.Random(number)", span="50-50"];
m7_129 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Entry lambda expression", span="82-82"];
m7_110 [cluster="lambda expression", color=green, community=0, file="CoreJobCreationProcessFacts.cs", label="Console.WriteLine(''Hello'')", prediction=24, span="18-18"];
m7_111 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Exit lambda expression", span="18-18"];
m7_130 [cluster="lambda expression", color=green, community=0, file="CoreJobCreationProcessFacts.cs", label="x.Error()", prediction=25, span="82-82"];
m7_131 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Exit lambda expression", span="82-82"];
m7_106 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Entry lambda expression", span="17-17"];
m7_112 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Entry lambda expression", span="20-20"];
m7_121 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Entry lambda expression", span="50-50"];
m7_123 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Exit lambda expression", span="50-50"];
m7_166 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="BackgroundJob.Enqueue<Services>(x => x.EmptyCritical())", span="163-163"];
m7_167 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="167-167"];
m7_107 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Console.WriteLine(''Hello, world!'')", span="17-17"];
m7_113 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Console.WriteLine(''Hawaiian'')", span="20-20"];
m7_116 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Console.WriteLine(''UTC'')", span="21-21"];
m7_119 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Console.WriteLine(''Russian'')", span="22-22"];
m7_108 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Exit lambda expression", span="17-17"];
m7_115 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Entry lambda expression", span="21-21"];
m7_114 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Exit lambda expression", span="20-20"];
m7_157 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="x.Cancelable(iterations, JobCancellationToken.Null)", span="141-141"];
m7_154 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="x.Random(number)", span="135-135"];
m7_133 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Entry lambda expression", span="91-91"];
m7_139 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Entry lambda expression", span="100-105"];
m7_146 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Entry lambda expression", span="114-127"];
m7_156 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Entry lambda expression", span="141-141"];
m7_160 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Entry lambda expression", span="149-149"];
m7_176 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Entry lambda expression", span="180-180"];
m7_165 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="i % 2 == 0", span="161-161"];
m7_168 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Exit lambda expression", span="159-169"];
m7_169 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Entry lambda expression", span="163-163"];
m7_173 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Entry lambda expression", span="167-167"];
m7_117 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Exit lambda expression", span="21-21"];
m7_118 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Entry lambda expression", span="22-22"];
m7_120 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Exit lambda expression", span="22-22"];
m7_153 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Entry lambda expression", span="135-135"];
m7_158 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Exit lambda expression", span="141-141"];
m7_164 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Entry lambda expression", span="159-169"];
m7_125 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Entry lambda expression", span="67-67"];
m7_155 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Exit lambda expression", span="135-135"];
m7_135 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Exit lambda expression", span="91-91"];
m7_134 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow)", span="91-91"];
m7_141 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Exit lambda expression", span="100-105"];
m7_140 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="x.Custom(\r\n                                new Random().Next(),\r\n                                new []{ ''Hello'', ''world!'' },\r\n                                new Services.CustomObject { Id = 123 },\r\n                                DayOfWeek.Friday\r\n                                )", span="100-105"];
m7_148 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Exit lambda expression", span="114-127"];
m7_147 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="x.FullArgs(\r\n                                false,\r\n                                123,\r\n                                'c',\r\n                                DayOfWeek.Monday,\r\n                                ''hello'',\r\n                                new TimeSpan(12, 13, 14),\r\n                                new DateTime(2012, 11, 10),\r\n                                new Services.CustomObject { Id = 123 },\r\n                                new[] { ''1'', ''2'', ''3'' },\r\n                                new[] { 4, 5, 6 },\r\n                                new long[0],\r\n                                null,\r\n                                new List<string> { ''7'', ''8'', ''9'' })", span="114-127"];
m7_162 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Exit lambda expression", span="149-149"];
m7_161 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="x.EmptyDefault()", span="149-149"];
m7_178 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Exit lambda expression", span="180-180"];
m7_177 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="x.Method(''hello'', 1)", span="180-180"];
m7_171 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Exit lambda expression", span="163-163"];
m7_170 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="x.EmptyCritical()", span="163-163"];
m7_175 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Exit lambda expression", span="167-167"];
m7_174 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="x.EmptyDefault()", span="167-167"];
m7_189 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Console.Write(value[0])", span="196-196"];
m7_193 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Console.Write(value[i])", span="200-200"];
m7_127 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Exit lambda expression", span="67-67"];
m7_126 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Console.WriteLine(''Hello, {0}!'', ''world'')", span="67-67"];
m7_188 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Entry lambda expression", span="196-196"];
m7_190 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Exit lambda expression", span="196-196"];
m7_192 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Entry lambda expression", span="200-200"];
m7_194 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Exit lambda expression", span="200-200"];
m7_196 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Console.WriteLine()", span="203-203"];
m7_197 [cluster="lambda expression", file="CoreJobCreationProcessFacts.cs", label="Exit lambda expression", span="203-203"];
m7_179 [cluster="ConsoleSample.GenericServices<TType>.Method<TMethod>(TType, TMethod)", file="CoreJobCreationProcessFacts.cs", label="Entry ConsoleSample.GenericServices<TType>.Method<TMethod>(TType, TMethod)", span="6-6"];
m7_104 [cluster="System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", file="CoreJobCreationProcessFacts.cs", label="Entry System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", span="0-0"];
m7_136 [cluster="System.Guid.NewGuid()", file="CoreJobCreationProcessFacts.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m7_143 [cluster="System.Random.Next()", file="CoreJobCreationProcessFacts.cs", label="Entry System.Random.Next()", span="0-0"];
m7_84 [cluster="Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>.UseMsmqQueues(string, params string[])", file="CoreJobCreationProcessFacts.cs", label="Entry Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>.UseMsmqQueues(string, params string[])", span="24-24"];
m7_100 [cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="CoreJobCreationProcessFacts.cs", label="Entry Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="61-61"];
m7_191 [cluster="System.Console.Write(char)", file="CoreJobCreationProcessFacts.cs", label="Entry System.Console.Write(char)", span="0-0"];
m7_98 [cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="CoreJobCreationProcessFacts.cs", label="Entry Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="77-77"];
m7_102 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="CoreJobCreationProcessFacts.cs", label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="120-120"];
m7_99 [cluster="System.Console.WriteLine(string)", file="CoreJobCreationProcessFacts.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m7_86 [cluster="Hangfire.IGlobalConfiguration.UseLogProvider<TLogProvider>(TLogProvider)", file="CoreJobCreationProcessFacts.cs", label="Entry Hangfire.IGlobalConfiguration.UseLogProvider<TLogProvider>(TLogProvider)", span="50-50"];
m7_198 [cluster="System.Console.WriteLine()", file="CoreJobCreationProcessFacts.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m7_163 [cluster="ConsoleSample.Services.EmptyDefault()", file="CoreJobCreationProcessFacts.cs", label="Entry ConsoleSample.Services.EmptyDefault()", span="13-13"];
m7_96 [cluster="string.Substring(int)", file="CoreJobCreationProcessFacts.cs", label="Entry string.Substring(int)", span="0-0"];
m7_199 [file="CoreJobCreationProcessFacts.cs", label=number, span=""];
m7_201 [file="CoreJobCreationProcessFacts.cs", label=iterations, span=""];
m7_200 [file="CoreJobCreationProcessFacts.cs", label=number, span=""];
m7_202 [file="CoreJobCreationProcessFacts.cs", label=string, span=""];
m7_203 [file="CoreJobCreationProcessFacts.cs", label=i, span=""];
m8_3 [cluster="Hangfire.Dashboard.DashboardMetrics.DashboardMetrics()", file="CoreJobPerformanceProcess.cs", label="AddMetric(RetriesCount)", span="32-32"];
m8_4 [cluster="Hangfire.Dashboard.DashboardMetrics.DashboardMetrics()", file="CoreJobPerformanceProcess.cs", label="AddMetric(EnqueuedCountOrNull)", span="33-33"];
m8_5 [cluster="Hangfire.Dashboard.DashboardMetrics.DashboardMetrics()", file="CoreJobPerformanceProcess.cs", label="AddMetric(FailedCountOrNull)", span="34-34"];
m8_6 [cluster="Hangfire.Dashboard.DashboardMetrics.DashboardMetrics()", color=green, community=0, file="CoreJobPerformanceProcess.cs", label="AddMetric(EnqueuedAndQueueCount)", prediction=26, span="35-35"];
m8_0 [cluster="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.TypeBinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Type)", file="CoreJobPerformanceProcess.cs", label="Entry HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.TypeBinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Type)", span="17-17"];
m8_7 [cluster="object.Equals(object, object)", file="CoreJobPerformanceProcess.cs", label="Entry object.Equals(object, object)", span="0-0"];
m8_8 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="CoreJobPerformanceProcess.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="32-32"];
m8_1 [cluster="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.TypeBinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Type)", file="CoreJobPerformanceProcess.cs", label="TypeOperand = typeOperand", span="20-20"];
m8_2 [cluster="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.TypeBinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Type)", file="CoreJobPerformanceProcess.cs", label="Exit HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.TypeBinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Type)", span="17-17"];
m8_9 [cluster="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="CoreJobPerformanceProcess.cs", label="Entry HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="34-34"];
m8_10 [cluster="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="CoreJobPerformanceProcess.cs", label="combiner.AddObject(TypeOperand)", span="36-36"];
m8_11 [cluster="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="CoreJobPerformanceProcess.cs", label="base.AddToHashCodeCombiner(combiner)", span="37-37"];
m8_12 [cluster="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="CoreJobPerformanceProcess.cs", label="Exit HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="34-34"];
m8_13 [cluster="Hangfire.Dashboard.DashboardMetrics.AddMetric(Hangfire.Dashboard.DashboardMetric)", file="CoreJobPerformanceProcess.cs", label="Entry Hangfire.Dashboard.DashboardMetrics.AddMetric(Hangfire.Dashboard.DashboardMetric)", span="43-43"];
m8_14 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="CoreJobPerformanceProcess.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="26-26"];
m8_17 [cluster="Hangfire.Dashboard.DashboardMetrics.AddMetric(Hangfire.Dashboard.DashboardMetric)", file="CoreJobPerformanceProcess.cs", label="Metrics[metric.Name] = metric", span="49-49"];
m8_15 [cluster="Hangfire.Dashboard.DashboardMetrics.AddMetric(Hangfire.Dashboard.DashboardMetric)", file="CoreJobPerformanceProcess.cs", label="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint", span=""];
m8_16 [cluster="Hangfire.Dashboard.DashboardMetrics.AddMetric(Hangfire.Dashboard.DashboardMetric)", file="CoreJobPerformanceProcess.cs", label=Metrics, span="47-47"];
m8_18 [cluster="Hangfire.Dashboard.DashboardMetrics.AddMetric(Hangfire.Dashboard.DashboardMetric)", file="CoreJobPerformanceProcess.cs", label="Exit Hangfire.Dashboard.DashboardMetrics.AddMetric(Hangfire.Dashboard.DashboardMetric)", span="43-43"];
m9_199 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="289-289"];
m9_236 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="CoreJobPerformanceProcessFacts.cs", label="token.ThrowIfCancellationRequested()", span="291-291"];
m9_237 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="289-289"];
m9_207 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", span="237-237"];
m9_209 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", prediction=27, span="240-240"];
m9_208 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="CoreJobPerformanceProcessFacts.cs", label="_context.BackgroundJob.Job = Job.FromExpression<JobFacts.Instance>(x => x.FunctionReturningValue())", span="239-239"];
m9_210 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="var result = process.Run(_context.Object)", prediction=28, span="242-242"];
m9_211 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="CoreJobPerformanceProcessFacts.cs", label="Assert.Equal(''Return value'', result)", span="244-244"];
m9_212 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", span="237-237"];
m9_90 [cluster="System.DateTime.ToString(string)", file="CoreJobPerformanceProcessFacts.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m9_77 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="CoreJobPerformanceProcessFacts.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
m9_30 [cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="CoreJobPerformanceProcessFacts.cs", label="return GetType().ToString();", span="78-78"];
m9_242 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.StaticMethod()", file="CoreJobPerformanceProcessFacts.cs", label="_methodInvoked = true", span="303-303"];
m9_243 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.StaticMethod()", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.StaticMethod()", span="301-301"];
m9_29 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="39-39"];
m9_31 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", span="48-48"];
m9_11 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CoreJobPerformanceProcessFacts.cs", label="_storage.UseConnection(connection =>\r\n                {\r\n                    removedCount = connection.Execute(\r\n                        GetAggregationQuery(_storage),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass },\r\n                        commandTimeout: 0);\r\n                })", span="55-61"];
m9_157 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", span="120-120"];
m9_172 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Method()", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Method()", span="267-267"];
m9_224 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Method()", file="CoreJobPerformanceProcessFacts.cs", label="_methodInvoked = true", span="269-269"];
m9_225 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Method()", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Method()", span="267-267"];
m9_32 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="CoreJobPerformanceProcessFacts.cs", label="_methodInvoked = false", span="50-50"];
m9_15 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CoreJobPerformanceProcessFacts.cs", label="removedCount >= NumberOfRecordsInSinglePass", span="69-69"];
m9_16 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CoreJobPerformanceProcessFacts.cs", label="Logger.Trace(''Records from the 'Counter' table aggregated.'')", span="71-71"];
m9_19 [cluster="Hangfire.Logging.ILog.Debug(string)", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Logging.ILog.Debug(string)", prediction=29, span="116-116"];
m9_18 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="47-47"];
m9_20 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<DbConnection>)", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<DbConnection>)", prediction=29, span="170-170"];
m9_21 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="CoreJobPerformanceProcessFacts.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m9_17 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CoreJobPerformanceProcessFacts.cs", label="cancellationToken.WaitHandle.WaitOne(_interval)", span="73-73"];
m9_22 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="CoreJobPerformanceProcessFacts.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m9_33 [cluster="System.Type.ToString()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="Entry System.Type.ToString()", prediction=29, span="0-0"];
m9_35 [cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", prediction=29, span="81-81"];
m9_36 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="CoreJobPerformanceProcessFacts.cs", label="Hangfire.SqlServer.CountersAggregator", span=""];
m9_37 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", span="48-48"];
m9_162 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", span="198-198"];
m9_165 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", prediction=29, span="202-202"];
m9_164 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="CoreJobPerformanceProcessFacts.cs", label="_context.BackgroundJob.Job = Job.FromExpression<BrokenDispose>(x => x.Method())", span="201-201"];
m9_166 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", prediction=29, span="204-205"];
m9_167 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="CoreJobPerformanceProcessFacts.cs", label="Assert.True(_methodInvoked)", span="207-207"];
m9_163 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="CoreJobPerformanceProcessFacts.cs", label="_methodInvoked = false", span="200-200"];
m9_168 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", span="198-198"];
m9_78 [cluster="System.Type.GetMethod(string)", file="CoreJobPerformanceProcessFacts.cs", label="Entry System.Type.GetMethod(string)", span="0-0"];
m9_176 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", span="211-211"];
m9_178 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", prediction=29, span="214-214"];
m9_177 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="CoreJobPerformanceProcessFacts.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => ExceptionMethod())", span="213-213"];
m9_179 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="var thrownException = Assert.Throws<JobPerformanceException>(\r\n                () => process.Run(_context.Object))", prediction=36, span="216-217"];
m9_180 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="CoreJobPerformanceProcessFacts.cs", label="Assert.IsType<InvalidOperationException>(thrownException.InnerException)", span="219-219"];
m9_181 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="CoreJobPerformanceProcessFacts.cs", label="Assert.Equal(''exception'', thrownException.InnerException.Message)", span="220-220"];
m9_182 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", span="211-211"];
m9_79 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="13-13"];
m9_120 [cluster="System.InvalidOperationException.InvalidOperationException()", file="CoreJobPerformanceProcessFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m9_24 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="55-61"];
m9_251 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CreateProcess()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="return new CoreJobPerformanceProcess(_activator.Object);", prediction=29, span="321-321"];
m9_252 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CreateProcess()", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CreateProcess()", span="319-319"];
m9_190 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="224-224"];
m9_193 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", prediction=29, span="229-229"];
m9_192 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="CoreJobPerformanceProcessFacts.cs", label="_context.CancellationToken.Setup(x => x.ThrowIfCancellationRequested()).Throws<OperationCanceledException>()", span="228-228"];
m9_194 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context.Object))", prediction=29, span="232-233"];
m9_191 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="CoreJobPerformanceProcessFacts.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => CancelableJob(JobCancellationToken.Null))", span="227-227"];
m9_195 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="224-224"];
m9_64 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", span="306-306"];
m9_245 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", file="CoreJobPerformanceProcessFacts.cs", label="Assert.Equal(''hello'', stringArg)", span="310-310"];
m9_246 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", file="CoreJobPerformanceProcessFacts.cs", label="Assert.Equal(5, intArg)", span="311-311"];
m9_244 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", file="CoreJobPerformanceProcessFacts.cs", label="_methodInvoked = true", span="308-308"];
m9_247 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", span="306-306"];
m9_203 [cluster="Unk.ThrowIfCancellationRequested", file="CoreJobPerformanceProcessFacts.cs", label="Entry Unk.ThrowIfCancellationRequested", span=""];
m9_8 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="CoreJobPerformanceProcessFacts.cs", label="Assert.Equal(''activator'', exception.ParamName)", span="32-32"];
m9_9 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", span="26-26"];
m9_13 [cluster="lambda expression", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="new CoreJobPerformanceProcess(null)", prediction=40, span="30-30"];
m9_12 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="30-30"];
m9_65 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="87-87"];
m9_69 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="var type = typeof(CoreJobPerformanceProcessFacts)", prediction=41, span="94-94"];
m9_68 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="CoreJobPerformanceProcessFacts.cs", label="var convertedDate = typeConverter.ConvertToInvariantString(SomeDateTime)", span="92-92"];
m9_70 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="CoreJobPerformanceProcessFacts.cs", label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="95-95"];
m9_71 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="CoreJobPerformanceProcessFacts.cs", label="_context.BackgroundJob.Job = new Job(type, method, new[] { convertedDate })", span="97-97"];
m9_72 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", prediction=42, span="98-98"];
m9_73 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="process.Run(_context.Object)", prediction=29, span="101-101"];
m9_74 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="CoreJobPerformanceProcessFacts.cs", label="Assert.True(_methodInvoked)", span="104-104"];
m9_67 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="CoreJobPerformanceProcessFacts.cs", label="var typeConverter = TypeDescriptor.GetConverter(typeof(DateTime))", span="91-91"];
m9_66 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="CoreJobPerformanceProcessFacts.cs", label="_methodInvoked = false", span="90-90"];
m9_75 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="87-87"];
m9_91 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", span="128-128"];
m9_94 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", prediction=44, span="133-133"];
m9_93 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="CoreJobPerformanceProcessFacts.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => MethodWithDateTimeArgument(SomeDateTime))", span="132-132"];
m9_95 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="process.Run(_context.Object)", prediction=29, span="136-136"];
m9_96 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="CoreJobPerformanceProcessFacts.cs", label="Assert.True(_methodInvoked)", span="139-139"];
m9_92 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="CoreJobPerformanceProcessFacts.cs", label="_methodInvoked = false", span="131-131"];
m9_97 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", span="128-128"];
m9_53 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Method()", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Method()", span="254-254"];
m9_219 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Method()", file="CoreJobPerformanceProcessFacts.cs", label="_methodInvoked = true", span="256-256"];
m9_220 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Method()", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Method()", span="254-254"];
m9_7 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                // ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new CoreJobPerformanceProcess(null))", prediction=46, span="28-30"];
m9_113 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", span="158-158"];
m9_117 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", prediction=29, span="165-165"];
m9_116 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="CoreJobPerformanceProcessFacts.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => InstanceMethod())", span="164-164"];
m9_118 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", prediction=29, span="168-169"];
m9_115 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="CoreJobPerformanceProcessFacts.cs", label="_activator.Setup(x => x.ActivateJob(It.IsAny<Type>())).Throws(exception)", span="162-162"];
m9_114 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="CoreJobPerformanceProcessFacts.cs", label="var exception = new InvalidOperationException()", span="161-161"];
m9_119 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", span="158-158"];
m9_54 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", span="72-72"];
m9_57 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", prediction=49, span="77-77"];
m9_56 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", file="CoreJobPerformanceProcessFacts.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => MethodWithArguments(''hello'', 5))", span="76-76"];
m9_58 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="process.Run(_context.Object)", prediction=29, span="80-80"];
m9_59 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", file="CoreJobPerformanceProcessFacts.cs", label="Assert.True(_methodInvoked)", span="83-83"];
m9_55 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", file="CoreJobPerformanceProcessFacts.cs", label="_methodInvoked = false", span="75-75"];
m9_60 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", span="72-72"];
m9_250 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="CoreJobPerformanceProcessFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m9_226 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Dispose()", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Dispose()", span="272-272"];
m9_227 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Dispose()", file="CoreJobPerformanceProcessFacts.cs", label="throw new InvalidOperationException();", span="274-274"];
m9_228 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Dispose()", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Dispose()", span="272-272"];
m9_76 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="CoreJobPerformanceProcessFacts.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m9_42 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.InstanceMethod()", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.InstanceMethod()", span="247-247"];
m9_217 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.InstanceMethod()", file="CoreJobPerformanceProcessFacts.cs", label="_methodInvoked = true", span="249-249"];
m9_218 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.InstanceMethod()", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.InstanceMethod()", span="247-247"];
m9_112 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", span="283-283"];
m9_232 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", file="CoreJobPerformanceProcessFacts.cs", label="_methodInvoked = true", span="285-285"];
m9_233 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", file="CoreJobPerformanceProcessFacts.cs", label="Assert.Null(argument)", span="286-286"];
m9_234 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", span="283-283"];
m9_25 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="removedCount = connection.Execute(\r\n                        GetAggregationQuery(_storage),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass },\r\n                        commandTimeout: 0)", span="57-60"];
m9_158 [cluster="Unk.NotNull", file="CoreJobPerformanceProcessFacts.cs", label="Entry Unk.NotNull", span=""];
m9_186 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.ExceptionMethod()", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.ExceptionMethod()", span="314-314"];
m9_248 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.ExceptionMethod()", file="CoreJobPerformanceProcessFacts.cs", label="throw new InvalidOperationException(''exception'');", span="316-316"];
m9_249 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.ExceptionMethod()", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.ExceptionMethod()", span="314-314"];
m9_43 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", span="60-60"];
m9_46 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", prediction=51, span="64-64"];
m9_45 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="CoreJobPerformanceProcessFacts.cs", label="_context.BackgroundJob.Job = Job.FromExpression<Disposable>(x => x.Method())", span="63-63"];
m9_47 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="process.Run(_context.Object)", prediction=29, span="66-66"];
m9_48 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="CoreJobPerformanceProcessFacts.cs", label="Assert.True(_disposed)", span="68-68"];
m9_44 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="CoreJobPerformanceProcessFacts.cs", label="_disposed = false", span="62-62"];
m9_49 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", span="60-60"];
m9_27 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="39-39"];
m9_121 [cluster="Unk.Setup", file="CoreJobPerformanceProcessFacts.cs", label="Entry Unk.Setup", span=""];
m9_23 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="187-187"];
m9_122 [cluster="Unk.Throws", file="CoreJobPerformanceProcessFacts.cs", label="Entry Unk.Throws", span=""];
m9_235 [cluster="Unk.Null", file="CoreJobPerformanceProcessFacts.cs", label="Entry Unk.Null", span=""];
m9_38 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="230-230"];
m9_133 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="173-173"];
m9_136 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", prediction=29, span="177-177"];
m9_135 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="CoreJobPerformanceProcessFacts.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => InstanceMethod())", span="176-176"];
m9_137 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", prediction=29, span="179-180"];
m9_134 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="CoreJobPerformanceProcessFacts.cs", label="_activator.Setup(x => x.ActivateJob(It.IsNotNull<Type>())).Returns(null)", span="175-175"];
m9_138 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="173-173"];
m9_102 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", span="143-143"];
m9_105 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", prediction=55, span="149-149"];
m9_104 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", file="CoreJobPerformanceProcessFacts.cs", label="_context.BackgroundJob.Job = Job.FromExpression(() => NullArgumentMethod(null))", span="147-147"];
m9_106 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="process.Run(_context.Object)", prediction=29, span="151-151"];
m9_107 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", file="CoreJobPerformanceProcessFacts.cs", label="Assert.True(_methodInvoked)", span="154-154"];
m9_103 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", file="CoreJobPerformanceProcessFacts.cs", label="_methodInvoked = false", span="146-146"];
m9_108 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", span="143-143"];
m9_196 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="227-227"];
m9_26 [cluster="Unk.True", file="CoreJobPerformanceProcessFacts.cs", label="Entry Unk.True", span=""];
m9_39 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="51-51"];
m9_40 [cluster="lambda expression", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="x.InstanceMethod()", prediction=57, span="51-51"];
m9_41 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="51-51"];
m9_131 [cluster="lambda expression", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="process.Run(_context.Object)", prediction=29, span="169-169"];
m9_130 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="169-169"];
m9_132 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="169-169"];
m9_147 [cluster="lambda expression", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="process.Run(_context.Object)", prediction=29, span="180-180"];
m9_146 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="180-180"];
m9_148 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="180-180"];
m9_160 [cluster="lambda expression", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="process.Run(_context.Object)", prediction=29, span="192-192"];
m9_159 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="192-192"];
m9_161 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="192-192"];
m9_174 [cluster="lambda expression", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="process.Run(_context.Object)", prediction=29, span="205-205"];
m9_173 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="205-205"];
m9_175 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="205-205"];
m9_188 [cluster="lambda expression", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="process.Run(_context.Object)", prediction=29, span="217-217"];
m9_187 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="217-217"];
m9_189 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="217-217"];
m9_205 [cluster="lambda expression", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="process.Run(_context.Object)", prediction=29, span="233-233"];
m9_204 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="233-233"];
m9_206 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="233-233"];
m9_124 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="x.ActivateJob(It.IsAny<Type>())", span="162-162"];
m9_141 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="x.ActivateJob(It.IsNotNull<Type>())", span="175-175"];
m9_62 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="MethodWithArguments(''hello'', 5)", span="76-76"];
m9_99 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="MethodWithDateTimeArgument(SomeDateTime)", span="132-132"];
m9_128 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="InstanceMethod()", span="164-164"];
m9_144 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="InstanceMethod()", span="176-176"];
m9_50 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="63-63"];
m9_61 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="76-76"];
m9_98 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="132-132"];
m9_109 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="147-147"];
m9_127 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="164-164"];
m9_143 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="176-176"];
m9_169 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="201-201"];
m9_183 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="213-213"];
m9_200 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="228-228"];
m9_213 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="239-239"];
m9_123 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="162-162"];
m9_125 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="162-162"];
m9_140 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Entry lambda expression", span="175-175"];
m9_142 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="175-175"];
m9_63 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="76-76"];
m9_100 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="132-132"];
m9_129 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="164-164"];
m9_145 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="176-176"];
m9_28 [cluster="Unk.Execute", file="CoreJobPerformanceProcessFacts.cs", label="Entry Unk.Execute", span=""];
m9_52 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="63-63"];
m9_51 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="x.Method()", span="63-63"];
m9_110 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="NullArgumentMethod(null)", span="147-147"];
m9_111 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="147-147"];
m9_171 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="201-201"];
m9_170 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="x.Method()", span="201-201"];
m9_185 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="213-213"];
m9_184 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="ExceptionMethod()", span="213-213"];
m9_202 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="228-228"];
m9_201 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="x.ThrowIfCancellationRequested()", span="228-228"];
m9_215 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="239-239"];
m9_214 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="x.FunctionReturningValue()", span="239-239"];
m9_197 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="CancelableJob(JobCancellationToken.Null)", span="227-227"];
m9_198 [cluster="lambda expression", file="CoreJobPerformanceProcessFacts.cs", label="Exit lambda expression", span="227-227"];
m9_216 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", span="584-584"];
m9_0 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="39-39"];
m9_1 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CoreJobPerformanceProcessFacts.cs", label="storage == null", span="41-41"];
m9_2 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CoreJobPerformanceProcessFacts.cs", label="throw new ArgumentNullException(nameof(storage));", span="41-41"];
m9_3 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CoreJobPerformanceProcessFacts.cs", label="_storage = storage", span="43-43"];
m9_126 [cluster="Unk.ActivateJob", file="CoreJobPerformanceProcessFacts.cs", label="Entry Unk.ActivateJob", span=""];
m9_4 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CoreJobPerformanceProcessFacts.cs", label="_interval = interval", span="44-44"];
m9_238 [cluster="Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", span="24-24"];
m9_5 [cluster="Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", span="12-12"];
m9_6 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", span="26-26"];
m9_149 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", span="184-184"];
m9_153 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", prediction=29, span="189-189"];
m9_152 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="CoreJobPerformanceProcessFacts.cs", label="_context.BackgroundJob.Job = new Job(type, method, new object[] { ''sdfa'' })", span="188-188"];
m9_154 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="var exception = Assert.Throws<JobPerformanceException>(\r\n                () => process.Run(_context.Object))", prediction=65, span="191-192"];
m9_155 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="CoreJobPerformanceProcessFacts.cs", label="Assert.NotNull(exception.InnerException)", span="194-194"];
m9_150 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="CoreJobPerformanceProcessFacts.cs", label="var type = typeof(JobFacts)", span="186-186"];
m9_151 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="CoreJobPerformanceProcessFacts.cs", label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="187-187"];
m9_156 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", span="184-184"];
m9_80 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="108-108"];
m9_83 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="var type = typeof(CoreJobPerformanceProcessFacts)", prediction=66, span="114-114"];
m9_82 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreJobPerformanceProcessFacts.cs", label="var convertedDate = SomeDateTime.ToString(''MM/dd/yyyy HH:mm:ss.ffff'')", span="112-112"];
m9_84 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreJobPerformanceProcessFacts.cs", label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="115-115"];
m9_85 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreJobPerformanceProcessFacts.cs", label="_context.BackgroundJob.Job = new Job(type, method, new[] { convertedDate })", span="117-117"];
m9_86 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="var process = CreateProcess()", prediction=67, span="118-118"];
m9_87 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", color=green, community=0, file="CoreJobPerformanceProcessFacts.cs", label="process.Run(_context.Object)", prediction=29, span="121-121"];
m9_88 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreJobPerformanceProcessFacts.cs", label="Assert.True(_methodInvoked)", span="124-124"];
m9_81 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreJobPerformanceProcessFacts.cs", label="_methodInvoked = false", span="111-111"];
m9_89 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="108-108"];
m9_253 [cluster="CoreJobPerformanceProcess.cstr", file="CoreJobPerformanceProcessFacts.cs", label="Entry CoreJobPerformanceProcess.cstr", span=""];
m9_101 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", file="CoreJobPerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", span="294-294"];
m9_240 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", file="CoreJobPerformanceProcessFacts.cs", label="Assert.Equal(SomeDateTime, argument)", span="298-298"];
m9_239 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", file="CoreJobPerformanceProcessFacts.cs", label="_methodInvoked = true", span="296-296"];
m9_241 [cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", file="CoreJobPerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", span="294-294"];
m9_139 [cluster="Unk.Returns", file="CoreJobPerformanceProcessFacts.cs", label="Entry Unk.Returns", span=""];
m9_254 [file="CoreJobPerformanceProcessFacts.cs", label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", span=""];
m9_255 [file="CoreJobPerformanceProcessFacts.cs", label=process, span=""];
m9_256 [file="CoreJobPerformanceProcessFacts.cs", label=process, span=""];
m9_257 [file="CoreJobPerformanceProcessFacts.cs", label=process, span=""];
m9_258 [file="CoreJobPerformanceProcessFacts.cs", label=process, span=""];
m9_259 [file="CoreJobPerformanceProcessFacts.cs", label=process, span=""];
m9_260 [file="CoreJobPerformanceProcessFacts.cs", label=process, span=""];
m10_25 [cluster="HangFire.Common.Job.DeserializeArguments()", file="CountersAggregator.cs", label="Entry HangFire.Common.Job.DeserializeArguments()", span="237-237"];
m10_92 [cluster="HangFire.Common.Job.DeserializeArguments()", file="CountersAggregator.cs", label="var parameters = Method.GetParameters()", span="241-241"];
m10_93 [cluster="HangFire.Common.Job.DeserializeArguments()", file="CountersAggregator.cs", label="var result = new List<object>(Arguments.Length)", span="242-242"];
m10_95 [cluster="HangFire.Common.Job.DeserializeArguments()", file="CountersAggregator.cs", label="i < parameters.Length", span="244-244"];
m10_96 [cluster="HangFire.Common.Job.DeserializeArguments()", file="CountersAggregator.cs", label="var parameter = parameters[i]", span="246-246"];
m10_94 [cluster="HangFire.Common.Job.DeserializeArguments()", file="CountersAggregator.cs", label="var i = 0", span="244-244"];
m10_103 [cluster="HangFire.Common.Job.DeserializeArguments()", file="CountersAggregator.cs", label="result.Add(value)", span="263-263"];
m10_105 [cluster="HangFire.Common.Job.DeserializeArguments()", file="CountersAggregator.cs", label="return result.ToArray();", span="266-266"];
m10_97 [cluster="HangFire.Common.Job.DeserializeArguments()", file="CountersAggregator.cs", label="var argument = Arguments[i]", span="247-247"];
m10_104 [cluster="HangFire.Common.Job.DeserializeArguments()", file="CountersAggregator.cs", label="i++", span="244-244"];
m10_99 [cluster="HangFire.Common.Job.DeserializeArguments()", file="CountersAggregator.cs", label="parameter.ParameterType == typeof(object)", span="251-251"];
m10_101 [cluster="HangFire.Common.Job.DeserializeArguments()", file="CountersAggregator.cs", label="var converter = TypeDescriptor.GetConverter(parameter.ParameterType)", span="259-259"];
m10_98 [cluster="HangFire.Common.Job.DeserializeArguments()", file="CountersAggregator.cs", label="object value", span="249-249"];
m10_100 [cluster="HangFire.Common.Job.DeserializeArguments()", file="CountersAggregator.cs", label="value = argument", span="255-255"];
m10_102 [cluster="HangFire.Common.Job.DeserializeArguments()", file="CountersAggregator.cs", label="value = converter.ConvertFromInvariantString(argument)", span="260-260"];
m10_106 [cluster="HangFire.Common.Job.DeserializeArguments()", file="CountersAggregator.cs", label=Exception, span="268-268"];
m10_107 [cluster="HangFire.Common.Job.DeserializeArguments()", file="CountersAggregator.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occured during arguments deserialization.'',\r\n                    ex);", span="270-272"];
m10_108 [cluster="HangFire.Common.Job.DeserializeArguments()", file="CountersAggregator.cs", label="Exit HangFire.Common.Job.DeserializeArguments()", span="237-237"];
m10_88 [cluster="HangFire.JobActivator.ActivateJob(System.Type)", file="CountersAggregator.cs", label="Entry HangFire.JobActivator.ActivateJob(System.Type)", span="42-42"];
m10_78 [cluster="string.Format(string, object, object)", file="CountersAggregator.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m10_0 [cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="CountersAggregator.cs", label="Entry HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="45-45"];
m10_1 [cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="CountersAggregator.cs", label="type == null", span="47-47"];
m10_3 [cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="CountersAggregator.cs", label="method == null", span="48-48"];
m10_5 [cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="CountersAggregator.cs", label="arguments == null", span="49-49"];
m10_7 [cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="CountersAggregator.cs", label="Type = type", span="51-51"];
m10_8 [cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="CountersAggregator.cs", label="Method = method", span="52-52"];
m10_9 [cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="CountersAggregator.cs", label="Arguments = arguments", span="53-53"];
m10_2 [cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="CountersAggregator.cs", label="throw new ArgumentNullException(''type'');", span="47-47"];
m10_4 [cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="CountersAggregator.cs", label="throw new ArgumentNullException(''method'');", span="48-48"];
m10_6 [cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="CountersAggregator.cs", label="throw new ArgumentNullException(''arguments'');", span="49-49"];
m10_10 [cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="CountersAggregator.cs", label="Validate()", span="55-55"];
m10_11 [cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="CountersAggregator.cs", label="Exit HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="45-45"];
m10_42 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="CountersAggregator.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m10_76 [cluster="System.Type.IsAssignableFrom(System.Type)", file="CountersAggregator.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m10_144 [cluster="Unk.ConvertToInvariantString", file="CountersAggregator.cs", label="Entry Unk.ConvertToInvariantString", span=""];
m10_90 [cluster="string.Format(string, object)", file="CountersAggregator.cs", label="Entry string.Format(string, object)", span="0-0"];
m10_41 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="CountersAggregator.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m10_38 [cluster="HangFire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", file="CountersAggregator.cs", label="Entry HangFire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", span="38-38"];
m10_91 [cluster="HangFire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="CountersAggregator.cs", label="Entry HangFire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22"];
m10_30 [cluster="HangFire.Common.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", file="CountersAggregator.cs", label="Entry HangFire.Common.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", span="33-33"];
m10_77 [cluster="System.ArgumentException.ArgumentException(string)", file="CountersAggregator.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m10_145 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="CountersAggregator.cs", label="Entry HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", span="335-335"];
m10_146 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="CountersAggregator.cs", label="Debug.Assert(expression != null)", span="337-337"];
m10_147 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="CountersAggregator.cs", label="var constantExpression = expression as ConstantExpression", span="339-339"];
m10_150 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="CountersAggregator.cs", label="return CachedExpressionCompiler.Evaluate(expression);", span="346-346"];
m10_148 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="CountersAggregator.cs", label="constantExpression != null", span="341-341"];
m10_149 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="CountersAggregator.cs", label="return constantExpression.Value;", span="343-343"];
m10_151 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="CountersAggregator.cs", label="Exit HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", span="335-335"];
m10_14 [cluster="HangFire.Common.Job.Perform()", file="CountersAggregator.cs", label="Entry HangFire.Common.Job.Perform()", span="66-66"];
m10_15 [cluster="HangFire.Common.Job.Perform()", file="CountersAggregator.cs", label="Perform(JobActivator.Current)", span="68-68"];
m10_16 [cluster="HangFire.Common.Job.Perform()", file="CountersAggregator.cs", label="Exit HangFire.Common.Job.Perform()", span="66-66"];
m10_24 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="CountersAggregator.cs", label="Entry HangFire.Common.Job.Activate(HangFire.JobActivator)", span="215-215"];
m10_81 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="CountersAggregator.cs", label="var instance = activator.ActivateJob(Type)", span="219-219"];
m10_82 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="CountersAggregator.cs", label="instance == null", span="221-221"];
m10_84 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="CountersAggregator.cs", label="return instance;", span="227-227"];
m10_83 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="CountersAggregator.cs", label="throw new InvalidOperationException(\r\n                        String.Format(''JobActivator returned NULL instance of the '{0}' type.'', Type));", span="223-224"];
m10_85 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="CountersAggregator.cs", label=Exception, span="229-229"];
m10_86 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="CountersAggregator.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occured during job activation.'',\r\n                    ex);", span="231-233"];
m10_87 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="CountersAggregator.cs", label="Exit HangFire.Common.Job.Activate(HangFire.JobActivator)", span="215-215"];
m10_138 [cluster="System.Diagnostics.Debug.Assert(bool)", file="CountersAggregator.cs", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
m10_140 [cluster="Unk.ToArray", file="CountersAggregator.cs", label="Entry Unk.ToArray", span=""];
m10_89 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="CountersAggregator.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m10_110 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="CountersAggregator.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m10_118 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="CountersAggregator.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m10_119 [cluster="HangFire.Common.Job.Dispose(object)", file="CountersAggregator.cs", label="Entry HangFire.Common.Job.Dispose(object)", span="290-290"];
m10_120 [cluster="HangFire.Common.Job.Dispose(object)", file="CountersAggregator.cs", label="var disposable = instance as IDisposable", span="294-294"];
m10_121 [cluster="HangFire.Common.Job.Dispose(object)", file="CountersAggregator.cs", label="disposable != null", span="295-295"];
m10_122 [cluster="HangFire.Common.Job.Dispose(object)", file="CountersAggregator.cs", label="disposable.Dispose()", span="297-297"];
m10_123 [cluster="HangFire.Common.Job.Dispose(object)", file="CountersAggregator.cs", label=Exception, span="300-300"];
m10_124 [cluster="HangFire.Common.Job.Dispose(object)", file="CountersAggregator.cs", label="throw new JobPerformanceException(\r\n                    ''Job has been performed, but an exception occured during disposal.'',\r\n                    ex);", span="302-304"];
m10_125 [cluster="HangFire.Common.Job.Dispose(object)", file="CountersAggregator.cs", label="Exit HangFire.Common.Job.Dispose(object)", span="290-290"];
m10_113 [cluster="System.Collections.Generic.List<T>.ToArray()", file="CountersAggregator.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m10_17 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", file="CountersAggregator.cs", label="Entry HangFire.Common.Job.Perform(HangFire.JobActivator)", span="71-71"];
m10_18 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", file="CountersAggregator.cs", label="object instance = null", span="73-73"];
m10_20 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", file="CountersAggregator.cs", label="instance = Activate(activator)", span="79-79"];
m10_19 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", file="CountersAggregator.cs", label="!Method.IsStatic", span="77-77"];
m10_22 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", file="CountersAggregator.cs", label="InvokeMethod(instance, deserializedArguments)", span="83-83"];
m10_21 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", file="CountersAggregator.cs", label="var deserializedArguments = DeserializeArguments()", span="82-82"];
m10_23 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", file="CountersAggregator.cs", label="Exit HangFire.Common.Job.Perform(HangFire.JobActivator)", span="71-71"];
m10_51 [cluster="System.NotSupportedException.NotSupportedException(string)", file="CountersAggregator.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m10_26 [cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="CountersAggregator.cs", label="Entry HangFire.Common.Job.InvokeMethod(object, object[])", span="276-276"];
m10_114 [cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="CountersAggregator.cs", label="Method.Invoke(instance, deserializedArguments)", span="280-280"];
m10_115 [cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="CountersAggregator.cs", label=TargetInvocationException, span="282-282"];
m10_116 [cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="CountersAggregator.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occurred during performance of the job.'',\r\n                    ex.InnerException);", span="284-286"];
m10_117 [cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="CountersAggregator.cs", label="Exit HangFire.Common.Job.InvokeMethod(object, object[])", span="276-276"];
m10_31 [cluster="HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="CountersAggregator.cs", label="Entry HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="111-111"];
m10_39 [cluster="HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="CountersAggregator.cs", label="return memberInfo\r\n                .GetCustomAttributes(typeof(JobFilterAttribute), inherit: true)\r\n                .Cast<JobFilterAttribute>();", span="113-115"];
m10_40 [cluster="HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="CountersAggregator.cs", label="Exit HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="111-111"];
m10_32 [cluster="HangFire.Common.Job.GetMethodFilterAttributes(bool)", file="CountersAggregator.cs", label="Entry HangFire.Common.Job.GetMethodFilterAttributes(bool)", span="98-98"];
m10_33 [cluster="HangFire.Common.Job.GetMethodFilterAttributes(bool)", file="CountersAggregator.cs", label="Method == null", span="101-101"];
m10_35 [cluster="HangFire.Common.Job.GetMethodFilterAttributes(bool)", file="CountersAggregator.cs", label="return useCache\r\n                ? ReflectedAttributeCache.GetMethodFilterAttributes(Method)\r\n                : GetFilterAttributes(Method);", span="106-108"];
m10_34 [cluster="HangFire.Common.Job.GetMethodFilterAttributes(bool)", file="CountersAggregator.cs", label="return Enumerable.Empty<JobFilterAttribute>();", span="103-103"];
m10_36 [cluster="HangFire.Common.Job.GetMethodFilterAttributes(bool)", file="CountersAggregator.cs", label="Exit HangFire.Common.Job.GetMethodFilterAttributes(bool)", span="98-98"];
m10_139 [cluster="Unk.Select", file="CountersAggregator.cs", label="Entry Unk.Select", span=""];
m10_143 [cluster="Unk.GetConverter", file="CountersAggregator.cs", label="Entry Unk.GetConverter", span=""];
m10_52 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="CountersAggregator.cs", label="Entry HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="308-308"];
m10_127 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="CountersAggregator.cs", label="Debug.Assert(callExpression != null)", span="310-310"];
m10_128 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="CountersAggregator.cs", label="var arguments = callExpression.Arguments.Select(GetArgumentValue).ToArray()", span="312-312"];
m10_129 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="CountersAggregator.cs", label="var serializedArguments = new List<string>(arguments.Length)", span="314-314"];
m10_130 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="CountersAggregator.cs", label=arguments, span="315-315"];
m10_135 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="CountersAggregator.cs", label="serializedArguments.Add(value)", span="329-329"];
m10_136 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="CountersAggregator.cs", label="return serializedArguments.ToArray();", span="332-332"];
m10_131 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="CountersAggregator.cs", label="string value = null", span="317-317"];
m10_132 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="CountersAggregator.cs", label="argument != null", span="319-319"];
m10_133 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="CountersAggregator.cs", label="var converter = TypeDescriptor.GetConverter(argument.GetType())", span="321-321"];
m10_134 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="CountersAggregator.cs", label="value = converter.ConvertToInvariantString(argument)", span="322-322"];
m10_137 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="CountersAggregator.cs", label="Exit HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="308-308"];
m10_142 [cluster="Unk.GetType", file="CountersAggregator.cs", label="Entry Unk.GetType", span=""];
m10_109 [cluster="System.Collections.Generic.List<T>.List(int)", file="CountersAggregator.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m10_80 [cluster="System.ArgumentException.ArgumentException(string, string)", file="CountersAggregator.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m10_141 [cluster="List<string>.cstr", file="CountersAggregator.cs", label="Entry List<string>.cstr", span=""];
m10_112 [cluster="System.Collections.Generic.List<T>.Add(T)", file="CountersAggregator.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m10_43 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="CountersAggregator.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="125-125"];
m10_44 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="CountersAggregator.cs", label="methodCall == null", span="127-127"];
m10_46 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="CountersAggregator.cs", label="var callExpression = methodCall.Body as MethodCallExpression", span="129-129"];
m10_45 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="CountersAggregator.cs", label="throw new ArgumentNullException(''methodCall'');", span="127-127"];
m10_47 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="CountersAggregator.cs", label="callExpression == null", span="130-130"];
m10_49 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="CountersAggregator.cs", label="return new Job(\r\n                callExpression.Method.DeclaringType, \r\n                callExpression.Method, \r\n                GetArguments(callExpression));", span="139-142"];
m10_48 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="CountersAggregator.cs", label="throw new NotSupportedException(''Expression body should be of type `MethodCallExpression`'');", span="132-132"];
m10_50 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="CountersAggregator.cs", label="Exit HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="125-125"];
m10_13 [cluster="HangFire.Common.Job.Validate()", file="CountersAggregator.cs", label="Entry HangFire.Common.Job.Validate()", span="168-168"];
m10_61 [cluster="HangFire.Common.Job.Validate()", file="CountersAggregator.cs", label="Method.DeclaringType == null", span="170-170"];
m10_62 [cluster="HangFire.Common.Job.Validate()", file="CountersAggregator.cs", label="throw new NotSupportedException(''Global methods are not supported. Use class methods instead.'');", span="172-172"];
m10_63 [cluster="HangFire.Common.Job.Validate()", file="CountersAggregator.cs", label="!Method.DeclaringType.IsAssignableFrom(Type)", span="175-175"];
m10_64 [cluster="HangFire.Common.Job.Validate()", file="CountersAggregator.cs", label="throw new ArgumentException(String.Format(\r\n                    ''The type `{0}` must be derived from the `{1}` type.'',\r\n                    Method.DeclaringType,\r\n                    Type));", span="177-180"];
m10_65 [cluster="HangFire.Common.Job.Validate()", file="CountersAggregator.cs", label="!Method.IsPublic", span="183-183"];
m10_66 [cluster="HangFire.Common.Job.Validate()", file="CountersAggregator.cs", label="throw new NotSupportedException(''Only public methods can be invoked in the background.'');", span="185-185"];
m10_67 [cluster="HangFire.Common.Job.Validate()", file="CountersAggregator.cs", label="var parameters = Method.GetParameters()", span="188-188"];
m10_68 [cluster="HangFire.Common.Job.Validate()", file="CountersAggregator.cs", label="parameters.Length != Arguments.Length", span="190-190"];
m10_70 [cluster="HangFire.Common.Job.Validate()", file="CountersAggregator.cs", label=parameters, span="195-195"];
m10_69 [cluster="HangFire.Common.Job.Validate()", file="CountersAggregator.cs", label="throw new ArgumentException(''Argument count must be equal to method parameter count.'', ''arguments'');", span="192-192"];
m10_71 [cluster="HangFire.Common.Job.Validate()", file="CountersAggregator.cs", label="parameter.IsOut", span="201-201"];
m10_73 [cluster="HangFire.Common.Job.Validate()", file="CountersAggregator.cs", label="parameter.ParameterType.IsByRef", span="207-207"];
m10_72 [cluster="HangFire.Common.Job.Validate()", file="CountersAggregator.cs", label="throw new NotSupportedException(\r\n                        ''Output parameters are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="203-204"];
m10_74 [cluster="HangFire.Common.Job.Validate()", file="CountersAggregator.cs", label="throw new NotSupportedException(\r\n                        ''Parameters, passed by reference, are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="209-210"];
m10_75 [cluster="HangFire.Common.Job.Validate()", file="CountersAggregator.cs", label="Exit HangFire.Common.Job.Validate()", span="168-168"];
m10_111 [cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="CountersAggregator.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0"];
m10_79 [cluster="System.Reflection.MethodBase.GetParameters()", file="CountersAggregator.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m10_126 [cluster="System.IDisposable.Dispose()", file="CountersAggregator.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m10_152 [cluster="HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="CountersAggregator.cs", label="Entry HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", span="24-24"];
m10_27 [cluster="HangFire.Common.Job.GetTypeFilterAttributes(bool)", file="CountersAggregator.cs", label="Entry HangFire.Common.Job.GetTypeFilterAttributes(bool)", span="91-91"];
m10_28 [cluster="HangFire.Common.Job.GetTypeFilterAttributes(bool)", file="CountersAggregator.cs", label="return useCache\r\n                ? ReflectedAttributeCache.GetTypeFilterAttributes(Type)\r\n                : GetFilterAttributes(Type);", span="93-95"];
m10_29 [cluster="HangFire.Common.Job.GetTypeFilterAttributes(bool)", file="CountersAggregator.cs", label="Exit HangFire.Common.Job.GetTypeFilterAttributes(bool)", span="91-91"];
m10_37 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="CountersAggregator.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m10_53 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="CountersAggregator.cs", label="Entry HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="152-152"];
m10_54 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="CountersAggregator.cs", label="methodCall == null", span="154-154"];
m10_56 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="CountersAggregator.cs", label="var callExpression = methodCall.Body as MethodCallExpression", span="156-156"];
m10_55 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="CountersAggregator.cs", label="throw new ArgumentNullException(''methodCall'');", span="154-154"];
m10_57 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="CountersAggregator.cs", label="callExpression == null", span="157-157"];
m10_59 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="CountersAggregator.cs", label="return new Job(\r\n                typeof(T), \r\n                callExpression.Method, \r\n                GetArguments(callExpression));", span="162-165"];
m10_58 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="CountersAggregator.cs", label="throw new NotSupportedException(''Expression body should be of type `MethodCallExpression`'');", span="159-159"];
m10_60 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="CountersAggregator.cs", label="Exit HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="152-152"];
m10_153 [file="CountersAggregator.cs", label="HangFire.Common.Job", span=""];
m11_629 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_CanCreateFieldsWithNullValues(bool)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_CanCreateFieldsWithNullValues(bool)", span="886-886"];
m11_630 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_CanCreateFieldsWithNullValues(bool)", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', null }\r\n                });\r\n\r\n                var result = sql.Query(\r\n                        ''select * from HangFire.Hash where [Key] = @key'',\r\n                        new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value);\r\n\r\n                Assert.Equal(null, result[''Key1'']);\r\n            }, useBatching)", span="888-901"];
m11_631 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_CanCreateFieldsWithNullValues(bool)", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_CanCreateFieldsWithNullValues(bool)", span="886-886"];
m11_427 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="255-255"];
m11_699 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="992-992"];
m11_700 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1));\r\n            })", span="994-997"];
m11_701 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="992-992"];
m11_202 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="CreatedContext.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="45-45"];
m11_698 [cluster="System.Collections.Generic.List<T>.List()", file="CreatedContext.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m11_95 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", span="118-118"];
m11_98 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", file="CreatedContext.cs", label="var thread = new Thread(\r\n                () => UseConnection(connection1 =>\r\n                {\r\n                    using (connection1.AcquireDistributedLock(''exclusive'', TimeSpan.FromSeconds(5)))\r\n                    {\r\n                        lockAcquired.Set();\r\n                        releaseLock.Wait();\r\n                    }\r\n                }))", span="123-131"];
m11_101 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", file="CreatedContext.cs", label="UseConnection(connection2 =>\r\n            {\r\n                Assert.Throws<DistributedLockTimeoutException>(\r\n                    () =>\r\n                    {\r\n                        using (connection2.AcquireDistributedLock(''exclusive'', TimeSpan.FromSeconds(5)))\r\n                        {\r\n                        }\r\n                    });\r\n            })", span="136-145"];
m11_96 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", file="CreatedContext.cs", label="var releaseLock = new ManualResetEventSlim(false)", span="120-120"];
m11_97 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", file="CreatedContext.cs", label="var lockAcquired = new ManualResetEventSlim(false)", span="121-121"];
m11_99 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", file="CreatedContext.cs", label="thread.Start()", span="132-132"];
m11_103 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", file="CreatedContext.cs", label="thread.Join()", span="148-148"];
m11_100 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", file="CreatedContext.cs", label="lockAcquired.Wait()", span="134-134"];
m11_102 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", file="CreatedContext.cs", label="releaseLock.Set()", span="147-147"];
m11_104 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", span="118-118"];
m11_465 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="315-315"];
m11_36 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="65-65"];
m11_887 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1307-1307"];
m11_889 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetValueFromHash(''hash-1'', ''field-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(''1'', result);\r\n            })", span="1313-1328"];
m11_888 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="1309-1311"];
m11_890 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1307-1307"];
m11_542 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="760-760"];
m11_543 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="CreatedContext.cs", label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))))", span="762-763"];
m11_544 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="760-760"];
m11_107 [cluster="System.Threading.Thread.Start()", file="CreatedContext.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m11_524 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="353-353"];
m11_428 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="608-608"];
m11_429 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="CreatedContext.cs", label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)))", span="610-611"];
m11_430 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="608-608"];
m11_816 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1193-1193"];
m11_817 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListCount(''my-list'');\r\n                Assert.Equal(0, result);\r\n            })", span="1195-1199"];
m11_818 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1193-1193"];
m11_744 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="1071-1071"];
m11_746 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                Assert.Equal(12, result);\r\n            })", span="1077-1090"];
m11_745 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.AggregatedCounter ([Key], [Value])\r\nvalues (@key, @value)''", span="1073-1075"];
m11_747 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="1071-1071"];
m11_109 [cluster="System.Threading.ManualResetEventSlim.Set()", file="CreatedContext.cs", label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0"];
m11_941 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1401-1401"];
m11_943 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromList(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(new [] { ''3'', ''1'' }, result);\r\n            })", span="1407-1422"];
m11_942 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], Value)\r\nvalues (@key, @value)''", span="1403-1405"];
m11_944 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1401-1401"];
m11_652 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="299-299"];
m11_335 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="456-456"];
m11_336 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="458-464"];
m11_337 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="456-456"];
m11_407 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="572-572"];
m11_409 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single();\r\n\r\n                var value = connection.GetJobParameter(id.ToString(), ''name'');\r\n\r\n                Assert.Equal(''value'', value);\r\n            })", span="583-592"];
m11_408 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ndeclare @id int\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nset @id = scope_identity()\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@id, @name, @value)\r\nselect @id''", span="574-581"];
m11_410 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="572-572"];
m11_986 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="CreatedContext.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m11_368 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="515-515"];
m11_370 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', null);\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal((string) null, parameter.Value);\r\n            })", span="522-534"];
m11_369 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="517-520"];
m11_371 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="515-515"];
m11_200 [cluster="Unk.ToString", file="CreatedContext.cs", label="Entry Unk.ToString", span=""];
m11_125 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_Dispose_ReleasesExclusiveApplicationLock()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_Dispose_ReleasesExclusiveApplicationLock()", span="152-152"];
m11_126 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_Dispose_ReleasesExclusiveApplicationLock()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var distributedLock = connection.AcquireDistributedLock(''hello'', TimeSpan.FromMinutes(5));\r\n                distributedLock.Dispose();\r\n\r\n                var lockMode = sql.Query<string>(\r\n                    ''select applock_mode('public', 'hello', 'session')'').Single();\r\n\r\n                Assert.Equal(''NoLock'', lockMode);\r\n            })", span="154-163"];
m11_127 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_Dispose_ReleasesExclusiveApplicationLock()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_Dispose_ReleasesExclusiveApplicationLock()", span="152-152"];
m11_934 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1391-1391"];
m11_935 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromList(''my-list'');\r\n                Assert.Empty(result);\r\n            })", span="1393-1397"];
m11_936 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1391-1391"];
m11_994 [cluster="SqlServerConnection.cstr", file="CreatedContext.cs", label="Entry SqlServerConnection.cstr", span=""];
m11_273 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="329-329"];
m11_274 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="CreatedContext.cs", label="UseConnection(\r\n                connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null)))", span="331-333"];
m11_275 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="329-329"];
m11_960 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1435-1435"];
m11_961 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetTtl(''my-set'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1437-1441"];
m11_962 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1435-1435"];
m11_514 [cluster="Unk.NotEqual", file="CreatedContext.cs", label="Entry Unk.NotEqual", span=""];
m11_906 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="502-502"];
m11_85 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_AcquiresExclusiveApplicationLock_OnSession()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_AcquiresExclusiveApplicationLock_OnSession()", span="103-103"];
m11_86 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_AcquiresExclusiveApplicationLock_OnSession()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                using (connection.AcquireDistributedLock(''hello'', TimeSpan.FromMinutes(5)))\r\n                {\r\n                    var lockMode = sql.Query<string>(\r\n                        ''select applock_mode('public', 'HangFire:hello', 'session')'').Single();\r\n\r\n                    Assert.Equal(''Exclusive'', lockMode);\r\n                }\r\n            })", span="105-114"];
m11_87 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_AcquiresExclusiveApplicationLock_OnSession()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_AcquiresExclusiveApplicationLock_OnSession()", span="103-103"];
m11_796 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1158-1158"];
m11_798 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashTtl(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1164-1179"];
m11_797 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [ExpireAt])\r\nvalues (@key, @field, @expireAt)''", span="1160-1162"];
m11_799 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1158-1158"];
m11_345 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="468-468"];
m11_347 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''Value'', parameter.Value);\r\n            })", span="475-487"];
m11_346 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="470-473"];
m11_348 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="468-468"];
m11_417 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="596-596"];
m11_418 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="598-604"];
m11_419 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="596-596"];
m11_869 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="460-460"];
m11_494 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="703-703"];
m11_495 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="CreatedContext.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null)))", span="705-706"];
m11_496 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="703-703"];
m11_849 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1248-1248"];
m11_851 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListTtl(''list-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1254-1269"];
m11_850 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [ExpireAt])\r\nvalues (@key, @expireAt)''", span="1250-1252"];
m11_852 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1248-1248"];
m11_453 [cluster="Unk.Execute", file="CreatedContext.cs", label="Entry Unk.Execute", span=""];
m11_303 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="384-384"];
m11_305 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="400-415"];
m11_304 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="386-398"];
m11_306 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="384-384"];
m11_735 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="1046-1046"];
m11_737 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="1052-1067"];
m11_736 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Counter ([Key], [Value])\r\nvalues (@key, @value)''", span="1048-1050"];
m11_738 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="1046-1046"];
m11_323 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="CreatedContext.cs", label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="31-31"];
m11_215 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CanCreateParametersWithNullValues(bool)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CanCreateParametersWithNullValues(bool)", span="258-258"];
m11_216 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CanCreateParametersWithNullValues(bool)", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var createdAt = new DateTime(2012, 12, 12);\r\n                var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', null } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1));\r\n\r\n                var parameters = sql.Query(\r\n                        ''select * from HangFire.JobParameter where JobId = @id'',\r\n                        new { id = jobId })\r\n                    .ToDictionary(x => (string)x.Name, x => (string)x.Value);\r\n\r\n                Assert.Equal(null, parameters[''Key1'']);\r\n            }, useBatching)", span="260-275"];
m11_217 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CanCreateParametersWithNullValues(bool)", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CanCreateParametersWithNullValues(bool)", span="258-258"];
m11_134 [cluster="System.IDisposable.Dispose()", file="CreatedContext.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m11_924 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1381-1381"];
m11_925 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null));\r\n            })", span="1383-1387"];
m11_926 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1381-1381"];
m11_551 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="366-366"];
m11_106 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="CreatedContext.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m11_6 [cluster="Mock<IPersistentJobQueue>.cstr", file="CreatedContext.cs", label="Entry Mock<IPersistentJobQueue>.cstr", span=""];
m11_466 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="660-660"];
m11_467 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null));\r\n\r\n                Assert.Equal(''context'', exception.ParamName);\r\n            })", span="662-668"];
m11_468 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="660-660"];
m11_841 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="485-485"];
m11_762 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="435-435"];
m11_269 [cluster="int.ToString()", file="CreatedContext.cs", label="Entry int.ToString()", span="0-0"];
m11_390 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="550-550"];
m11_391 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="552-558"];
m11_392 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="550-550"];
m11_267 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="CreatedContext.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="70-70"];
m11_314 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="419-419"];
m11_316 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result.LoadException);\r\n            })", span="426-440"];
m11_315 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="421-424"];
m11_317 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="419-419"];
m11_967 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1445-1445"];
m11_969 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetSetTtl(''set-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1451-1466"];
m11_968 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [ExpireAt], [Score])\r\nvalues (@key, @value, @expireAt, 0.0)''", span="1447-1449"];
m11_970 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1445-1445"];
m11_727 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="420-420"];
m11_203 [cluster="System.DateTime.AddDays(double)", file="CreatedContext.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m11_503 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="340-340"];
m11_7 [cluster="Mock<IPersistentJobQueueProvider>.cstr", file="CreatedContext.cs", label="Entry Mock<IPersistentJobQueueProvider>.cstr", span=""];
m11_201 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="CreatedContext.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m11_643 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="905-905"];
m11_644 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null)))", span="907-908"];
m11_645 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="905-905"];
m11_574 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="798-798"];
m11_575 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                Assert.NotNull(result);\r\n                Assert.Equal(0, result.Count);\r\n            })", span="800-806"];
m11_576 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="798-798"];
m11_283 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="337-337"];
m11_284 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetStateData(''1'');\r\n                Assert.Null(result);\r\n            })", span="339-343"];
m11_285 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="337-337"];
m11_653 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="912-912"];
m11_654 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n                Assert.Null(result);\r\n            })", span="914-918"];
m11_655 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="912-912"];
m11_504 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="710-710"];
m11_506 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.RemoveServer(''Server1'');\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase);\r\n            })", span="718-726"];
m11_505 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues \r\n('Server1', '', getutcdate()),\r\n('Server2', '', getutcdate())''", span="712-716"];
m11_507 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="710-710"];
m11_859 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1273-1273"];
m11_860 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1275-1281"];
m11_861 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1273-1273"];
m11_15 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="34-34"];
m11_16 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="CreatedContext.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerConnection(null))", prediction=69, span="36-37"];
m11_17 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="CreatedContext.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="39-39"];
m11_18 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="34-34"];
m11_660 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="922-922"];
m11_662 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n\r\n                // Assert\r\n                Assert.NotNull(result);\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="928-946"];
m11_661 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="924-926"];
m11_663 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="922-922"];
m11_105 [cluster="System.Threading.ManualResetEventSlim.ManualResetEventSlim(bool)", file="CreatedContext.cs", label="Entry System.Threading.ManualResetEventSlim.ManualResetEventSlim(bool)", span="0-0"];
m11_870 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1285-1285"];
m11_871 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="1287-1293"];
m11_872 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1285-1285"];
m11_789 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1148-1148"];
m11_790 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashTtl(''my-hash'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1150-1154"];
m11_791 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1148-1148"];
m11_984 [cluster="SqlServerStorage.cstr", file="CreatedContext.cs", label="Entry SqlServerStorage.cstr", span=""];
m11_476 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="672-672"];
m11_477 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                };\r\n                connection.AnnounceServer(''server'', context1);\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', server.Id);\r\n                Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data);\r\n                Assert.NotNull(server.LastHeartbeat);\r\n\r\n                var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                };\r\n                connection.AnnounceServer(''server'', context2);\r\n                var sameServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', sameServer.Id);\r\n                Assert.Contains(''1000'', sameServer.Data);\r\n            })", span="674-699"];
m11_478 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="672-672"];
m11_270 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="305-305"];
m11_21 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="37-37"];
m11_29 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="45-53"];
m11_30 [cluster="lambda expression", color=green, community=0, file="CreatedContext.cs", label="var token = new CancellationToken()", prediction=70, span="47-47"];
m11_31 [cluster="lambda expression", file="CreatedContext.cs", label="var queues = new[] { ''default'' }", span="48-48"];
m11_32 [cluster="lambda expression", file="CreatedContext.cs", label="connection.FetchNextJob(queues, token)", span="50-50"];
m11_33 [cluster="lambda expression", file="CreatedContext.cs", label="_queue.Verify(x => x.Dequeue(queues, token))", span="52-52"];
m11_39 [cluster="lambda expression", file="CreatedContext.cs", label="x.Dequeue(queues, token)", span="52-52"];
m11_59 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="73-77"];
m11_50 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Throws<InvalidOperationException>(\r\n                    () => connection.FetchNextJob(new[] { ''critical'', ''default'' }, token))", span="65-66"];
m11_78 [cluster="lambda expression", file="CreatedContext.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => connection.AcquireDistributedLock('''', TimeSpan.FromMinutes(5)))", span="95-96"];
m11_91 [cluster="lambda expression", file="CreatedContext.cs", label="var lockMode = sql.Query<string>(\r\n                        ''select applock_mode('public', 'HangFire:hello', 'session')'').Single()", span="109-110"];
m11_120 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Throws<DistributedLockTimeoutException>(\r\n                    () =>\r\n                    {\r\n                        using (connection2.AcquireDistributedLock(''exclusive'', TimeSpan.FromSeconds(5)))\r\n                        {\r\n                        }\r\n                    })", span="138-144"];
m11_131 [cluster="lambda expression", file="CreatedContext.cs", label="var lockMode = sql.Query<string>(\r\n                    ''select applock_mode('public', 'hello', 'session')'').Single()", span="159-160"];
m11_148 [cluster="lambda expression", file="CreatedContext.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero))", span="184-189"];
m11_160 [cluster="lambda expression", file="CreatedContext.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero))", span="200-205"];
m11_237 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null))", span="281-282"];
m11_277 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null))", span="332-333"];
m11_328 [cluster="lambda expression", file="CreatedContext.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''))", span="448-449"];
m11_339 [cluster="lambda expression", file="CreatedContext.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''))", span="460-461"];
m11_383 [cluster="lambda expression", file="CreatedContext.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''))", span="542-543"];
m11_394 [cluster="lambda expression", file="CreatedContext.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null))", span="554-555"];
m11_412 [cluster="lambda expression", file="CreatedContext.cs", label="var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single()", span="585-587"];
m11_421 [cluster="lambda expression", file="CreatedContext.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1))", span="600-601"];
m11_432 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1))", span="610-611"];
m11_458 [cluster="lambda expression", file="CreatedContext.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()))", span="652-653"];
m11_470 [cluster="lambda expression", file="CreatedContext.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null))", span="664-665"];
m11_498 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null))", span="705-706"];
m11_519 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null))", span="732-733"];
m11_546 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5)))", span="762-763"];
m11_568 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null))", span="794-794"];
m11_597 [cluster="lambda expression", file="CreatedContext.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()))", span="841-842"];
m11_608 [cluster="lambda expression", file="CreatedContext.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null))", span="853-854"];
m11_647 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null))", span="908-908"];
m11_676 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null))", span="954-955"];
m11_703 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1))", span="996-996"];
m11_722 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null))", span="1030-1031"];
m11_757 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null))", span="1098-1098"];
m11_783 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null))", span="1142-1143"];
m11_810 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null))", span="1187-1188"];
m11_836 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null))", span="1232-1233"];
m11_863 [cluster="lambda expression", file="CreatedContext.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''))", span="1277-1278"];
m11_874 [cluster="lambda expression", file="CreatedContext.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null))", span="1289-1290"];
m11_900 [cluster="lambda expression", file="CreatedContext.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1))", span="1336-1337"];
m11_928 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null))", span="1385-1386"];
m11_954 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null))", span="1430-1430"];
m11_23 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="37-37"];
m11_22 [cluster="lambda expression", file="CreatedContext.cs", label="new SqlServerConnection(null)", span="37-37"];
m11_49 [cluster="lambda expression", file="CreatedContext.cs", label="_providers.Add(anotherProvider.Object, new [] { ''critical'' })", span="63-63"];
m11_112 [cluster="lambda expression", file="CreatedContext.cs", label="UseConnection(connection1 =>\r\n                {\r\n                    using (connection1.AcquireDistributedLock(''exclusive'', TimeSpan.FromSeconds(5)))\r\n                    {\r\n                        lockAcquired.Set();\r\n                        releaseLock.Wait();\r\n                    }\r\n                })", span="124-131"];
m11_34 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="45-53"];
m11_47 [cluster="lambda expression", file="CreatedContext.cs", label="var token = new CancellationToken()", span="61-61"];
m11_38 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="52-52"];
m11_40 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="52-52"];
m11_62 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="73-77"];
m11_60 [cluster="lambda expression", file="CreatedContext.cs", label="var transaction = connection.CreateWriteTransaction()", span="75-75"];
m11_79 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''resource'', exception.ParamName)", span="98-98"];
m11_92 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''Exclusive'', lockMode)", span="112-112"];
m11_132 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''NoLock'', lockMode)", span="162-162"];
m11_149 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''job'', exception.ParamName)", span="191-191"];
m11_161 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''parameters'', exception.ParamName)", span="207-207"];
m11_181 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(createdAt, sqlJob.CreatedAt)", span="230-230"];
m11_180 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(jobId, sqlJob.Id.ToString())", span="229-229"];
m11_182 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(null, (int?) sqlJob.StateId)", span="231-231"];
m11_183 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(null, (string) sqlJob.StateName)", span="232-232"];
m11_187 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(typeof(SqlServerConnectionFacts), job.Type)", span="238-238"];
m11_188 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''SampleMethod'', job.Method.Name)", span="239-239"];
m11_189 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''Hello'', job.Args[0])", span="240-240"];
m11_193 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''Value1'', parameters[''Key1''])", span="250-250"];
m11_194 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''Value2'', parameters[''Key2''])", span="251-251"];
m11_222 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(null, parameters[''Key1''])", span="274-274"];
m11_261 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''Succeeded'', result.State)", span="320-320"];
m11_262 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''Arguments'', result.Job.Args[0])", span="321-321"];
m11_299 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''Name'', result.Name)", span="377-377"];
m11_300 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''Reason'', result.Reason)", span="378-378"];
m11_301 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''Value'', result.Data[''Key''])", span="379-379"];
m11_312 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''Value'', result.Data[''Key''])", span="414-414"];
m11_329 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''id'', exception.ParamName)", span="451-451"];
m11_340 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''name'', exception.ParamName)", span="463-463"];
m11_354 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''Value'', parameter.Value)", span="486-486"];
m11_366 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''AnotherValue'', parameter.Value)", span="510-510"];
m11_377 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal((string) null, parameter.Value)", span="533-533"];
m11_384 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''id'', exception.ParamName)", span="545-545"];
m11_395 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''name'', exception.ParamName)", span="557-557"];
m11_414 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''value'', value)", span="591-591"];
m11_422 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''key'', exception.ParamName)", span="603-603"];
m11_451 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''-1.0'', result)", span="643-643"];
m11_459 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''serverId'', exception.ParamName)", span="655-655"];
m11_471 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''context'', exception.ParamName)", span="667-667"];
m11_483 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''server'', server.Id)", span="684-684"];
m11_489 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''server'', sameServer.Id)", span="697-697"];
m11_534 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(2012, servers[''server2''].Year)", span="755-755"];
m11_560 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''server2'', liveServer.Id)", span="786-786"];
m11_580 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(0, result.Count)", span="805-805"];
m11_589 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(2, result.Count)", span="830-830"];
m11_598 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''key'', exception.ParamName)", span="844-844"];
m11_609 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''keyValuePairs'', exception.ParamName)", span="856-856"];
m11_620 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''Value1'', result[''Key1''])", span="878-878"];
m11_621 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''Value2'', result[''Key2''])", span="879-879"];
m11_635 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(null, result[''Key1''])", span="900-900"];
m11_668 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(2, result.Count)", span="943-943"];
m11_669 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''Value1'', result[''Key1''])", span="944-944"];
m11_670 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''Value2'', result[''Key2''])", span="945-945"];
m11_687 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(0, result)", span="965-965"];
m11_696 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(2, result)", span="987-987"];
m11_716 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(new [] { ''3'', ''4'' }, result)", span="1021-1021"];
m11_733 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(0, result)", span="1041-1041"];
m11_742 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(2, result)", span="1066-1066"];
m11_751 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(12, result)", span="1089-1089"];
m11_768 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(0, result)", span="1108-1108"];
m11_777 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(2, result)", span="1133-1133"];
m11_821 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(0, result)", span="1198-1198"];
m11_830 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(2, result)", span="1223-1223"];
m11_864 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''key'', exception.ParamName)", span="1280-1280"];
m11_875 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''name'', exception.ParamName)", span="1292-1292"];
m11_894 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''1'', result)", span="1327-1327"];
m11_901 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(''key'', exception.ParamName)", span="1339-1339"];
m11_922 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(new [] { ''4'', ''3'' }, result)", span="1376-1376"];
m11_948 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Equal(new [] { ''3'', ''1'' }, result)", span="1421-1421"];
m11_46 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="59-67"];
m11_51 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="59-67"];
m11_53 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="66-66"];
m11_77 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="93-99"];
m11_81 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="96-96"];
m11_89 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="105-114"];
m11_90 [cluster="lambda expression", file="CreatedContext.cs", label="connection.AcquireDistributedLock(''hello'', TimeSpan.FromMinutes(5))", span="107-107"];
m11_119 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="136-145"];
m11_121 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="136-145"];
m11_122 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="139-144"];
m11_128 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="154-163"];
m11_130 [cluster="lambda expression", file="CreatedContext.cs", label="distributedLock.Dispose()", span="157-157"];
m11_147 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="182-192"];
m11_151 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="185-189"];
m11_159 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="198-208"];
m11_163 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="201-205"];
m11_236 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="281-282"];
m11_238 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="281-282"];
m11_239 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="282-282"];
m11_276 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="332-333"];
m11_278 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="332-333"];
m11_279 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="333-333"];
m11_327 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="446-452"];
m11_331 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="449-449"];
m11_338 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="458-464"];
m11_342 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="461-461"];
m11_382 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="540-546"];
m11_386 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="543-543"];
m11_393 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="552-558"];
m11_397 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="555-555"];
m11_411 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="583-592"];
m11_413 [cluster="lambda expression", file="CreatedContext.cs", label="var value = connection.GetJobParameter(id.ToString(), ''name'')", span="589-589"];
m11_420 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="598-604"];
m11_424 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="601-601"];
m11_431 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="610-611"];
m11_433 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="610-611"];
m11_434 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="611-611"];
m11_457 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="650-656"];
m11_461 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="653-653"];
m11_469 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="662-668"];
m11_473 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="665-665"];
m11_497 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="705-706"];
m11_499 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="705-706"];
m11_500 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="706-706"];
m11_518 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="732-733"];
m11_520 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="732-733"];
m11_521 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="733-733"];
m11_545 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="762-763"];
m11_547 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="762-763"];
m11_548 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="763-763"];
m11_567 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="793-794"];
m11_569 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="793-794"];
m11_570 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="794-794"];
m11_596 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="839-845"];
m11_600 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="842-842"];
m11_607 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="851-857"];
m11_611 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="854-854"];
m11_646 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="907-908"];
m11_648 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="907-908"];
m11_649 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="908-908"];
m11_675 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="952-956"];
m11_677 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="952-956"];
m11_678 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="955-955"];
m11_702 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="994-997"];
m11_704 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="994-997"];
m11_705 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="996-996"];
m11_721 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1028-1032"];
m11_723 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1028-1032"];
m11_724 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1031-1031"];
m11_756 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1096-1099"];
m11_758 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1096-1099"];
m11_759 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1098-1098"];
m11_782 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1140-1144"];
m11_784 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1140-1144"];
m11_785 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1143-1143"];
m11_809 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1185-1189"];
m11_811 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1185-1189"];
m11_812 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1188-1188"];
m11_835 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1230-1234"];
m11_837 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1230-1234"];
m11_838 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1233-1233"];
m11_862 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1275-1281"];
m11_866 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1278-1278"];
m11_873 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1287-1293"];
m11_877 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1290-1290"];
m11_899 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1334-1340"];
m11_903 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1337-1337"];
m11_927 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1383-1387"];
m11_929 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1383-1387"];
m11_930 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1386-1386"];
m11_953 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1428-1431"];
m11_955 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1428-1431"];
m11_956 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1430-1430"];
m11_11 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="27-27"];
m11_48 [cluster="lambda expression", file="CreatedContext.cs", label="var anotherProvider = new Mock<IPersistentJobQueueProvider>()", span="62-62"];
m11_68 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="83-87"];
m11_111 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="124-131"];
m11_113 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="124-131"];
m11_114 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="124-131"];
m11_138 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="169-176"];
m11_174 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="216-252"];
m11_218 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="260-275"];
m11_246 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="288-292"];
m11_255 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="303-325"];
m11_286 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="339-343"];
m11_294 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="363-380"];
m11_307 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="400-415"];
m11_318 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="426-440"];
m11_349 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="475-487"];
m11_360 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="498-511"];
m11_372 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="522-534"];
m11_403 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="564-568"];
m11_440 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="617-623"];
m11_448 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="637-644"];
m11_479 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="674-699"];
m11_508 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="718-726"];
m11_529 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="745-756"];
m11_556 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="773-787"];
m11_577 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="800-806"];
m11_586 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="816-833"];
m11_617 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="865-880"];
m11_632 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="888-901"];
m11_656 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="914-918"];
m11_664 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="928-946"];
m11_685 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="962-966"];
m11_693 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="976-988"];
m11_713 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1007-1022"];
m11_731 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1038-1042"];
m11_739 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1052-1067"];
m11_748 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1077-1090"];
m11_766 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1105-1109"];
m11_774 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1119-1134"];
m11_792 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1150-1154"];
m11_800 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1164-1179"];
m11_819 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1195-1199"];
m11_827 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1209-1224"];
m11_845 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1240-1244"];
m11_853 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1254-1269"];
m11_883 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1299-1303"];
m11_891 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1313-1328"];
m11_910 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1346-1350"];
m11_919 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1360-1377"];
m11_937 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1393-1397"];
m11_945 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1407-1422"];
m11_963 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1437-1441"];
m11_971 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1451-1466"];
m11_996 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="1486-1486"];
m11_54 [cluster="lambda expression", file="CreatedContext.cs", label="connection.FetchNextJob(new[] { ''critical'', ''default'' }, token)", span="66-66"];
m11_61 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.NotNull(transaction)", span="76-76"];
m11_80 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="93-99"];
m11_93 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="105-114"];
m11_133 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="154-163"];
m11_150 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="182-192"];
m11_162 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="198-208"];
m11_175 [cluster="lambda expression", file="CreatedContext.cs", label="var createdAt = new DateTime(2012, 12, 12)", span="218-218"];
m11_179 [cluster="lambda expression", file="CreatedContext.cs", label="var sqlJob = sql.Query(''select * from HangFire.Job'').Single()", span="228-228"];
m11_176 [cluster="lambda expression", file="CreatedContext.cs", label="var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1))", span="219-223"];
m11_184 [cluster="lambda expression", file="CreatedContext.cs", label="var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData)", span="234-234"];
m11_186 [cluster="lambda expression", file="CreatedContext.cs", label="var job = invocationData.Deserialize()", span="237-237"];
m11_190 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt)", span="242-242"];
m11_192 [cluster="lambda expression", file="CreatedContext.cs", label="var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value)", span="245-248"];
m11_195 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="216-252"];
m11_221 [cluster="lambda expression", file="CreatedContext.cs", label="var parameters = sql.Query(\r\n                        ''select * from HangFire.JobParameter where JobId = @id'',\r\n                        new { id = jobId })\r\n                    .ToDictionary(x => (string)x.Name, x => (string)x.Value)", span="269-272"];
m11_223 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="260-275"];
m11_258 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="316-316"];
m11_260 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.NotNull(result.Job)", span="319-319"];
m11_263 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Null(result.LoadException)", span="322-322"];
m11_297 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetStateData(jobId.ToString())", span="374-374"];
m11_298 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.NotNull(result)", span="375-375"];
m11_302 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="363-380"];
m11_310 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetStateData(jobId.ToString())", span="411-411"];
m11_311 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.NotNull(result)", span="412-412"];
m11_313 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="400-415"];
m11_330 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="446-452"];
m11_341 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="458-464"];
m11_353 [cluster="lambda expression", file="CreatedContext.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="482-484"];
m11_355 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="475-487"];
m11_365 [cluster="lambda expression", file="CreatedContext.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="506-508"];
m11_367 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="498-511"];
m11_376 [cluster="lambda expression", file="CreatedContext.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="529-531"];
m11_378 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="522-534"];
m11_385 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="540-546"];
m11_396 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="552-558"];
m11_415 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="583-592"];
m11_423 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="598-604"];
m11_450 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0)", span="641-641"];
m11_452 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="637-644"];
m11_460 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="650-656"];
m11_472 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="662-668"];
m11_482 [cluster="lambda expression", file="CreatedContext.cs", label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="683-683"];
m11_484 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data)", span="685-687"];
m11_488 [cluster="lambda expression", file="CreatedContext.cs", label="var sameServer = sql.Query(''select * from HangFire.Server'').Single()", span="696-696"];
m11_490 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Contains(''1000'', sameServer.Data)", span="698-698"];
m11_532 [cluster="lambda expression", file="CreatedContext.cs", label="var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat)", span="751-752"];
m11_533 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.NotEqual(2012, servers[''server1''].Year)", span="754-754"];
m11_535 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="745-756"];
m11_559 [cluster="lambda expression", file="CreatedContext.cs", label="var liveServer = sql.Query(''select * from HangFire.Server'').Single()", span="785-785"];
m11_561 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="773-787"];
m11_578 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetAllItemsFromSet(''some-set'')", span="802-802"];
m11_579 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.NotNull(result)", span="804-804"];
m11_581 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="800-806"];
m11_588 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetAllItemsFromSet(''some-set'')", span="827-827"];
m11_590 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Contains(''1'', result)", span="831-831"];
m11_599 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="839-845"];
m11_610 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="851-857"];
m11_619 [cluster="lambda expression", file="CreatedContext.cs", label="var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value)", span="873-876"];
m11_622 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="865-880"];
m11_634 [cluster="lambda expression", file="CreatedContext.cs", label="var result = sql.Query(\r\n                        ''select * from HangFire.Hash where [Key] = @key'',\r\n                        new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value)", span="895-898"];
m11_636 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="888-901"];
m11_666 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="939-939"];
m11_667 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.NotNull(result)", span="942-942"];
m11_671 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="928-946"];
m11_686 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetSetCount(''my-set'')", span="964-964"];
m11_688 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="962-966"];
m11_695 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetSetCount(''set-1'')", span="985-985"];
m11_697 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="976-988"];
m11_715 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetRangeFromSet(''set-1'', 2, 3)", span="1019-1019"];
m11_717 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1007-1022"];
m11_732 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetCounter(''my-counter'')", span="1040-1040"];
m11_734 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1038-1042"];
m11_741 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetCounter(''counter-1'')", span="1063-1063"];
m11_743 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1052-1067"];
m11_750 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetCounter(''counter-1'')", span="1087-1087"];
m11_752 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1077-1090"];
m11_767 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetHashCount(''my-hash'')", span="1107-1107"];
m11_769 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1105-1109"];
m11_776 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetHashCount(''hash-1'')", span="1130-1130"];
m11_778 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1119-1134"];
m11_820 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetListCount(''my-list'')", span="1197-1197"];
m11_822 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1195-1199"];
m11_829 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetListCount(''list-1'')", span="1220-1220"];
m11_831 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1209-1224"];
m11_865 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1275-1281"];
m11_876 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1287-1293"];
m11_893 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetValueFromHash(''hash-1'', ''field-1'')", span="1324-1324"];
m11_895 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1313-1328"];
m11_902 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1334-1340"];
m11_921 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetRangeFromList(''list-1'', 1, 2)", span="1373-1373"];
m11_923 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1360-1377"];
m11_947 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetAllItemsFromList(''list-1'')", span="1418-1418"];
m11_949 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1407-1422"];
m11_55 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="66-66"];
m11_82 [cluster="lambda expression", file="CreatedContext.cs", label="connection.AcquireDistributedLock('''', TimeSpan.FromMinutes(5))", span="96-96"];
m11_83 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="96-96"];
m11_257 [cluster="lambda expression", file="CreatedContext.cs", label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="307-314"];
m11_296 [cluster="lambda expression", file="CreatedContext.cs", label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="370-372"];
m11_309 [cluster="lambda expression", file="CreatedContext.cs", label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="407-409"];
m11_319 [cluster="lambda expression", file="CreatedContext.cs", label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="428-435"];
m11_350 [cluster="lambda expression", file="CreatedContext.cs", label="var job = sql.Query(arrangeSql).Single()", span="477-477"];
m11_361 [cluster="lambda expression", file="CreatedContext.cs", label="var job = sql.Query(arrangeSql).Single()", span="500-500"];
m11_373 [cluster="lambda expression", file="CreatedContext.cs", label="var job = sql.Query(arrangeSql).Single()", span="524-524"];
m11_511 [cluster="lambda expression", file="CreatedContext.cs", label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="724-724"];
m11_123 [cluster="lambda expression", file="CreatedContext.cs", label="connection2.AcquireDistributedLock(''exclusive'', TimeSpan.FromSeconds(5))", span="141-141"];
m11_124 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="139-144"];
m11_129 [cluster="lambda expression", file="CreatedContext.cs", label="var distributedLock = connection.AcquireDistributedLock(''hello'', TimeSpan.FromMinutes(5))", span="156-156"];
m11_152 [cluster="lambda expression", file="CreatedContext.cs", label="connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero)", span="185-189"];
m11_153 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="185-189"];
m11_164 [cluster="lambda expression", file="CreatedContext.cs", label="connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero)", span="201-205"];
m11_165 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="201-205"];
m11_240 [cluster="lambda expression", file="CreatedContext.cs", label="connection.GetJobData(null)", span="282-282"];
m11_241 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="282-282"];
m11_280 [cluster="lambda expression", file="CreatedContext.cs", label="connection.GetStateData(null)", span="333-333"];
m11_281 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="333-333"];
m11_332 [cluster="lambda expression", file="CreatedContext.cs", label="connection.SetJobParameter(null, ''name'', ''value'')", span="449-449"];
m11_333 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="449-449"];
m11_343 [cluster="lambda expression", file="CreatedContext.cs", label="connection.SetJobParameter(''1'', null, ''value'')", span="461-461"];
m11_344 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="461-461"];
m11_387 [cluster="lambda expression", file="CreatedContext.cs", label="connection.GetJobParameter(null, ''hello'')", span="543-543"];
m11_388 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="543-543"];
m11_398 [cluster="lambda expression", file="CreatedContext.cs", label="connection.GetJobParameter(''1'', null)", span="555-555"];
m11_399 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="555-555"];
m11_425 [cluster="lambda expression", file="CreatedContext.cs", label="connection.GetFirstByLowestScoreFromSet(null, 0, 1)", span="601-601"];
m11_426 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="601-601"];
m11_435 [cluster="lambda expression", file="CreatedContext.cs", label="connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)", span="611-611"];
m11_436 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="611-611"];
m11_462 [cluster="lambda expression", file="CreatedContext.cs", label="connection.AnnounceServer(null, new ServerContext())", span="653-653"];
m11_463 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="653-653"];
m11_474 [cluster="lambda expression", file="CreatedContext.cs", label="connection.AnnounceServer(''server'', null)", span="665-665"];
m11_475 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="665-665"];
m11_501 [cluster="lambda expression", file="CreatedContext.cs", label="connection.RemoveServer(null)", span="706-706"];
m11_502 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="706-706"];
m11_522 [cluster="lambda expression", file="CreatedContext.cs", label="connection.Heartbeat(null)", span="733-733"];
m11_523 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="733-733"];
m11_549 [cluster="lambda expression", file="CreatedContext.cs", label="connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))", span="763-763"];
m11_550 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="763-763"];
m11_571 [cluster="lambda expression", file="CreatedContext.cs", label="connection.GetAllItemsFromSet(null)", span="794-794"];
m11_572 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="794-794"];
m11_601 [cluster="lambda expression", file="CreatedContext.cs", label="connection.SetRangeInHash(null, new Dictionary<string, string>())", span="842-842"];
m11_602 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="842-842"];
m11_612 [cluster="lambda expression", file="CreatedContext.cs", label="connection.SetRangeInHash(''some-hash'', null)", span="854-854"];
m11_613 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="854-854"];
m11_650 [cluster="lambda expression", file="CreatedContext.cs", label="connection.GetAllEntriesFromHash(null)", span="908-908"];
m11_651 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="908-908"];
m11_679 [cluster="lambda expression", file="CreatedContext.cs", label="connection.GetSetCount(null)", span="955-955"];
m11_680 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="955-955"];
m11_706 [cluster="lambda expression", file="CreatedContext.cs", label="connection.GetRangeFromSet(null, 0, 1)", span="996-996"];
m11_707 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="996-996"];
m11_725 [cluster="lambda expression", file="CreatedContext.cs", label="connection.GetCounter(null)", span="1031-1031"];
m11_726 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1031-1031"];
m11_760 [cluster="lambda expression", file="CreatedContext.cs", label="connection.GetHashCount(null)", span="1098-1098"];
m11_761 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1098-1098"];
m11_786 [cluster="lambda expression", file="CreatedContext.cs", label="connection.GetHashTtl(null)", span="1143-1143"];
m11_787 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1143-1143"];
m11_813 [cluster="lambda expression", file="CreatedContext.cs", label="connection.GetListCount(null)", span="1188-1188"];
m11_814 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1188-1188"];
m11_839 [cluster="lambda expression", file="CreatedContext.cs", label="connection.GetListTtl(null)", span="1233-1233"];
m11_840 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1233-1233"];
m11_867 [cluster="lambda expression", file="CreatedContext.cs", label="connection.GetValueFromHash(null, ''name'')", span="1278-1278"];
m11_868 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1278-1278"];
m11_878 [cluster="lambda expression", file="CreatedContext.cs", label="connection.GetValueFromHash(''key'', null)", span="1290-1290"];
m11_879 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1290-1290"];
m11_904 [cluster="lambda expression", file="CreatedContext.cs", label="connection.GetRangeFromList(null, 0, 1)", span="1337-1337"];
m11_905 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1337-1337"];
m11_931 [cluster="lambda expression", file="CreatedContext.cs", label="connection.GetAllItemsFromList(null)", span="1386-1386"];
m11_932 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1386-1386"];
m11_957 [cluster="lambda expression", file="CreatedContext.cs", label="connection.GetSetTtl(null)", span="1430-1430"];
m11_958 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1430-1430"];
m11_13 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="27-27"];
m11_12 [cluster="lambda expression", file="CreatedContext.cs", label="x.GetJobQueue()", span="27-27"];
m11_71 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="83-87"];
m11_69 [cluster="lambda expression", file="CreatedContext.cs", label="var @lock = connection.AcquireDistributedLock(''1'', TimeSpan.FromSeconds(1))", span="85-85"];
m11_117 [cluster="lambda expression", file="CreatedContext.cs", label="releaseLock.Wait()", span="129-129"];
m11_116 [cluster="lambda expression", file="CreatedContext.cs", label="lockAcquired.Set()", span="128-128"];
m11_118 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="124-131"];
m11_115 [cluster="lambda expression", file="CreatedContext.cs", label="connection1.AcquireDistributedLock(''exclusive'', TimeSpan.FromSeconds(5))", span="126-126"];
m11_142 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="169-176"];
m11_139 [cluster="lambda expression", file="CreatedContext.cs", label="connection.AcquireDistributedLock(''hello'', TimeSpan.FromMinutes(5))", span="171-171"];
m11_140 [cluster="lambda expression", file="CreatedContext.cs", label="connection.AcquireDistributedLock(''hello'', TimeSpan.FromMinutes(5))", span="172-172"];
m11_219 [cluster="lambda expression", file="CreatedContext.cs", label="var createdAt = new DateTime(2012, 12, 12)", span="262-262"];
m11_220 [cluster="lambda expression", file="CreatedContext.cs", label="var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', null } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1))", span="263-267"];
m11_249 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="288-292"];
m11_247 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetJobData(''1'')", span="290-290"];
m11_266 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="303-325"];
m11_256 [cluster="lambda expression", file="CreatedContext.cs", label="var job = Job.FromExpression(() => SampleMethod(''wrong''))", span="305-305"];
m11_289 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="339-343"];
m11_287 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetStateData(''1'')", span="341-341"];
m11_295 [cluster="lambda expression", file="CreatedContext.cs", label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                }", span="365-368"];
m11_308 [cluster="lambda expression", file="CreatedContext.cs", label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                }", span="402-405"];
m11_322 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="426-440"];
m11_320 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="437-437"];
m11_352 [cluster="lambda expression", file="CreatedContext.cs", label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="480-480"];
m11_363 [cluster="lambda expression", file="CreatedContext.cs", label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="503-503"];
m11_364 [cluster="lambda expression", file="CreatedContext.cs", label="connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'')", span="504-504"];
m11_375 [cluster="lambda expression", file="CreatedContext.cs", label="connection.SetJobParameter(jobId, ''Name'', null)", span="527-527"];
m11_406 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="564-568"];
m11_404 [cluster="lambda expression", file="CreatedContext.cs", label="var value = connection.GetJobParameter(''1'', ''hello'')", span="566-566"];
m11_443 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="617-623"];
m11_441 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1)", span="619-620"];
m11_449 [cluster="lambda expression", file="CreatedContext.cs", label="sql.Execute(arrangeSql)", span="639-639"];
m11_491 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="674-699"];
m11_480 [cluster="lambda expression", file="CreatedContext.cs", label="var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                }", span="676-680"];
m11_481 [cluster="lambda expression", file="CreatedContext.cs", label="connection.AnnounceServer(''server'', context1)", span="681-681"];
m11_487 [cluster="lambda expression", file="CreatedContext.cs", label="connection.AnnounceServer(''server'', context2)", span="695-695"];
m11_509 [cluster="lambda expression", file="CreatedContext.cs", label="sql.Execute(arrangeSql)", span="720-720"];
m11_513 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="718-726"];
m11_510 [cluster="lambda expression", file="CreatedContext.cs", label="connection.RemoveServer(''Server1'')", span="722-722"];
m11_530 [cluster="lambda expression", file="CreatedContext.cs", label="sql.Execute(arrangeSql)", span="747-747"];
m11_531 [cluster="lambda expression", file="CreatedContext.cs", label="connection.Heartbeat(''server1'')", span="749-749"];
m11_557 [cluster="lambda expression", file="CreatedContext.cs", label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    })", span="775-781"];
m11_558 [cluster="lambda expression", file="CreatedContext.cs", label="connection.RemoveTimedOutServers(TimeSpan.FromHours(15))", span="783-783"];
m11_587 [cluster="lambda expression", file="CreatedContext.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                })", span="819-824"];
m11_592 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="816-833"];
m11_618 [cluster="lambda expression", file="CreatedContext.cs", label="connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="867-871"];
m11_633 [cluster="lambda expression", file="CreatedContext.cs", label="connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', null }\r\n                })", span="890-893"];
m11_659 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="914-918"];
m11_657 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="916-916"];
m11_665 [cluster="lambda expression", file="CreatedContext.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                })", span="931-936"];
m11_694 [cluster="lambda expression", file="CreatedContext.cs", label="sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { key = ''set-1'', value = ''value-1'' },\r\n                    new { key = ''set-2'', value = ''value-1'' },\r\n                    new { key = ''set-1'', value = ''value-2'' }\r\n                })", span="978-983"];
m11_714 [cluster="lambda expression", file="CreatedContext.cs", label="sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                })", span="1009-1017"];
m11_740 [cluster="lambda expression", file="CreatedContext.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                })", span="1055-1060"];
m11_749 [cluster="lambda expression", file="CreatedContext.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                })", span="1080-1084"];
m11_775 [cluster="lambda expression", file="CreatedContext.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                })", span="1122-1127"];
m11_795 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1150-1154"];
m11_793 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetHashTtl(''my-hash'')", span="1152-1152"];
m11_801 [cluster="lambda expression", file="CreatedContext.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                })", span="1167-1171"];
m11_805 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1164-1179"];
m11_802 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetHashTtl(''hash-1'')", span="1174-1174"];
m11_828 [cluster="lambda expression", file="CreatedContext.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                })", span="1212-1217"];
m11_848 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1240-1244"];
m11_846 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetListTtl(''my-list'')", span="1242-1242"];
m11_854 [cluster="lambda expression", file="CreatedContext.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                })", span="1257-1261"];
m11_858 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1254-1269"];
m11_855 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetListTtl(''list-1'')", span="1264-1264"];
m11_886 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1299-1303"];
m11_884 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetValueFromHash(''my-hash'', ''name'')", span="1301-1301"];
m11_892 [cluster="lambda expression", file="CreatedContext.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                })", span="1316-1321"];
m11_913 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1346-1350"];
m11_911 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetRangeFromList(''my-list'', 0, 1)", span="1348-1348"];
m11_920 [cluster="lambda expression", file="CreatedContext.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                })", span="1363-1370"];
m11_940 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1393-1397"];
m11_938 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetAllItemsFromList(''my-list'')", span="1395-1395"];
m11_946 [cluster="lambda expression", file="CreatedContext.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                })", span="1410-1415"];
m11_966 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1437-1441"];
m11_964 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetSetTtl(''my-set'')", span="1439-1439"];
m11_972 [cluster="lambda expression", file="CreatedContext.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                })", span="1454-1458"];
m11_976 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1451-1466"];
m11_973 [cluster="lambda expression", file="CreatedContext.cs", label="var result = connection.GetSetTtl(''set-1'')", span="1461-1461"];
m11_998 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="1486-1486"];
m11_997 [cluster="lambda expression", file="CreatedContext.cs", label="x.QueueProviders", span="1486-1486"];
m11_191 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1))", span="243-243"];
m11_178 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.NotEmpty(jobId)", span="226-226"];
m11_185 [cluster="lambda expression", file="CreatedContext.cs", label="invocationData.Arguments = sqlJob.Arguments", span="235-235"];
m11_177 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.NotNull(jobId)", span="225-225"];
m11_206 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="220-220"];
m11_351 [cluster="lambda expression", file="CreatedContext.cs", label="string jobId = job.Id.ToString()", span="478-478"];
m11_362 [cluster="lambda expression", file="CreatedContext.cs", label="string jobId = job.Id.ToString()", span="501-501"];
m11_374 [cluster="lambda expression", file="CreatedContext.cs", label="string jobId = job.Id.ToString()", span="525-525"];
m11_209 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="248-248"];
m11_212 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="248-248"];
m11_227 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="272-272"];
m11_230 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="272-272"];
m11_259 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.NotNull(result)", span="318-318"];
m11_264 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt)", span="323-323"];
m11_265 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1))", span="324-324"];
m11_485 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.NotNull(server.LastHeartbeat)", span="688-688"];
m11_536 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="752-752"];
m11_539 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="752-752"];
m11_591 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Contains(''2'', result)", span="832-832"];
m11_623 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="876-876"];
m11_626 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="876-876"];
m11_637 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="898-898"];
m11_640 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="898-898"];
m11_803 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1177-1177"];
m11_804 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1178-1178"];
m11_856 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1267-1267"];
m11_857 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1268-1268"];
m11_974 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1464-1464"];
m11_975 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1465-1465"];
m11_512 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase)", span="725-725"];
m11_167 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="202-202"];
m11_70 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.NotNull(@lock)", span="86-86"];
m11_141 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.True(true)", span="174-174"];
m11_224 [cluster="lambda expression", file="CreatedContext.cs", label="Entry lambda expression", span="264-264"];
m11_248 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Null(result)", span="291-291"];
m11_288 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Null(result)", span="342-342"];
m11_321 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.NotNull(result.LoadException)", span="439-439"];
m11_405 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Null(value)", span="567-567"];
m11_442 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Null(result)", span="622-622"];
m11_486 [cluster="lambda expression", file="CreatedContext.cs", label="var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                }", span="690-694"];
m11_658 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Null(result)", span="917-917"];
m11_794 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.True(result < TimeSpan.Zero)", span="1153-1153"];
m11_847 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.True(result < TimeSpan.Zero)", span="1243-1243"];
m11_885 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Null(result)", span="1302-1302"];
m11_912 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Empty(result)", span="1349-1349"];
m11_939 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.Empty(result)", span="1396-1396"];
m11_965 [cluster="lambda expression", file="CreatedContext.cs", label="Assert.True(result < TimeSpan.Zero)", span="1440-1440"];
m11_208 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="220-220"];
m11_207 [cluster="lambda expression", file="CreatedContext.cs", label="SampleMethod(''Hello'')", span="220-220"];
m11_211 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="248-248"];
m11_210 [cluster="lambda expression", file="CreatedContext.cs", label="(string) x.Name", span="248-248"];
m11_214 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="248-248"];
m11_213 [cluster="lambda expression", file="CreatedContext.cs", label="(string) x.Value", span="248-248"];
m11_229 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="272-272"];
m11_228 [cluster="lambda expression", file="CreatedContext.cs", label="(string)x.Name", span="272-272"];
m11_232 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="272-272"];
m11_231 [cluster="lambda expression", file="CreatedContext.cs", label="(string)x.Value", span="272-272"];
m11_538 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="752-752"];
m11_537 [cluster="lambda expression", file="CreatedContext.cs", label="(string)x.Id", span="752-752"];
m11_541 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="752-752"];
m11_540 [cluster="lambda expression", file="CreatedContext.cs", label="(DateTime)x.LastHeartbeat", span="752-752"];
m11_625 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="876-876"];
m11_624 [cluster="lambda expression", file="CreatedContext.cs", label="(string)x.Field", span="876-876"];
m11_628 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="876-876"];
m11_627 [cluster="lambda expression", file="CreatedContext.cs", label="(string)x.Value", span="876-876"];
m11_639 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="898-898"];
m11_638 [cluster="lambda expression", file="CreatedContext.cs", label="(string)x.Field", span="898-898"];
m11_642 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="898-898"];
m11_641 [cluster="lambda expression", file="CreatedContext.cs", label="(string)x.Value", span="898-898"];
m11_169 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="202-202"];
m11_168 [cluster="lambda expression", file="CreatedContext.cs", label="SampleMethod(''hello'')", span="202-202"];
m11_226 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="264-264"];
m11_225 [cluster="lambda expression", file="CreatedContext.cs", label="SampleMethod(''Hello'')", span="264-264"];
m11_271 [cluster="lambda expression", file="CreatedContext.cs", label="SampleMethod(''wrong'')", span="305-305"];
m11_272 [cluster="lambda expression", file="CreatedContext.cs", label="Exit lambda expression", span="305-305"];
m11_770 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="1113-1113"];
m11_772 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashCount(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="1119-1134"];
m11_771 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field])\r\nvalues (@key, @field)''", span="1115-1117"];
m11_773 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="1113-1113"];
m11_41 [cluster="Unk.Dequeue", file="CreatedContext.cs", label="Entry Unk.Dequeue", span=""];
m11_88 [cluster="Unk.UseConnections", file="CreatedContext.cs", label="Entry Unk.UseConnections", span=""];
m11_63 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="54-54"];
m11_603 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="266-266"];
m11_24 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="39-39"];
m11_9 [cluster="Unk.Returns", file="CreatedContext.cs", label="Entry Unk.Returns", span=""];
m11_454 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="648-648"];
m11_455 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()));\r\n\r\n                Assert.Equal(''serverId'', exception.ParamName);\r\n            })", span="650-656"];
m11_456 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="648-648"];
m11_564 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="791-791"];
m11_565 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null)))", span="793-794"];
m11_566 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="791-791"];
m11_166 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="CreatedContext.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="233-233"];
m11_788 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="445-445"];
m11_324 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="444-444"];
m11_325 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="446-452"];
m11_326 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="444-444"];
m11_110 [cluster="System.Threading.Thread.Join()", file="CreatedContext.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m11_243 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="286-286"];
m11_244 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetJobData(''1'');\r\n                Assert.Null(result);\r\n            })", span="288-292"];
m11_245 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="286-286"];
m11_56 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="71-71"];
m11_57 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", color=green, community=0, file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var transaction = connection.CreateWriteTransaction();\r\n                Assert.NotNull(transaction);\r\n            })", prediction=71, span="73-77"];
m11_58 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="71-71"];
m11_977 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>, bool)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>, bool)", span="1469-1469"];
m11_980 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>, bool)", file="CreatedContext.cs", label="var connection = new SqlServerConnection(storage)", span="1474-1474"];
m11_978 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>, bool)", file="CreatedContext.cs", label="var sqlConnection = ConnectionUtils.CreateConnection()", span="1471-1471"];
m11_979 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>, bool)", file="CreatedContext.cs", label="var storage = new SqlServerStorage(sqlConnection, new SqlServerStorageOptions { CommandBatchMaxTimeout = useBatching ? TimeSpan.FromMinutes(1) : (TimeSpan?)null })", span="1473-1473"];
m11_981 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>, bool)", file="CreatedContext.cs", label="action(sqlConnection, connection)", span="1476-1476"];
m11_982 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>, bool)", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>, bool)", span="1469-1469"];
m11_400 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="562-562"];
m11_401 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var value = connection.GetJobParameter(''1'', ''hello'');\r\n                Assert.Null(value);\r\n            })", span="564-568"];
m11_402 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="562-562"];
m11_204 [cluster="System.DateTime.AddMinutes(double)", file="CreatedContext.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m11_45 [cluster="Unk.UseConnection", file="CreatedContext.cs", label="Entry Unk.UseConnection", span=""];
m11_20 [cluster="Unk.Equal", file="CreatedContext.cs", label="Entry Unk.Equal", span=""];
m11_806 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1183-1183"];
m11_807 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null));\r\n            })", span="1185-1189"];
m11_808 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1183-1183"];
m11_614 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords(bool)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords(bool)", span="863-863"];
m11_615 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords(bool)", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                });\r\n\r\n                var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value);\r\n\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            }, useBatching)", span="865-880"];
m11_616 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords(bool)", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords(bool)", span="863-863"];
m11_708 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="389-389"];
m11_35 [cluster="System.Threading.CancellationToken.CancellationToken()", file="CreatedContext.cs", label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0"];
m11_985 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="31-31"];
m11_170 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", span="1495-1495"];
m11_999 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", span="1495-1495"];
m11_593 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="837-837"];
m11_594 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="839-845"];
m11_595 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="837-837"];
m11_0 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", span="22-22"];
m11_1 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="CreatedContext.cs", label="_queue = new Mock<IPersistentJobQueue>()", span="24-24"];
m11_3 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="CreatedContext.cs", label="provider.Setup(x => x.GetJobQueue())\r\n                .Returns(_queue.Object)", span="27-28"];
m11_4 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="CreatedContext.cs", label="_providers = new PersistentJobQueueProviderCollection(provider.Object)", span="30-30"];
m11_2 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="CreatedContext.cs", label="var provider = new Mock<IPersistentJobQueueProvider>()", span="26-26"];
m11_5 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", span="22-22"];
m11_983 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37"];
m11_242 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="140-140"];
m11_993 [cluster="Mock<SqlServerStorage>.cstr", file="CreatedContext.cs", label="Entry Mock<SqlServerStorage>.cstr", span=""];
m11_73 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="59-59"];
m11_156 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="196-196"];
m11_157 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''parameters'', exception.ParamName);\r\n            })", span="198-208"];
m11_158 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="196-196"];
m11_689 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="970-970"];
m11_691 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { key = ''set-1'', value = ''value-1'' },\r\n                    new { key = ''set-2'', value = ''value-1'' },\r\n                    new { key = ''set-1'', value = ''value-2'' }\r\n                });\r\n\r\n                var result = connection.GetSetCount(''set-1'');\r\n\r\n                Assert.Equal(2, result);\r\n            })", span="976-988"];
m11_690 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score])\r\nvalues (@key, @value, 0.0)''", span="972-974"];
m11_692 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="970-970"];
m11_842 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1238-1238"];
m11_843 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListTtl(''my-list'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1240-1244"];
m11_844 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1238-1238"];
m11_552 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="767-767"];
m11_554 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    });\r\n\r\n                connection.RemoveTimedOutServers(TimeSpan.FromHours(15));\r\n\r\n                var liveServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server2'', liveServer.Id);\r\n            })", span="773-787"];
m11_553 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues (@id, '', @heartbeat)''", span="769-771"];
m11_555 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="767-767"];
m11_832 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1228-1228"];
m11_833 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null));\r\n            })", span="1230-1234"];
m11_834 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1228-1228"];
m11_199 [cluster="Unk.Query", file="CreatedContext.cs", label="Entry Unk.Query", span=""];
m11_995 [cluster="System.Action<T>.Invoke(T)", file="CreatedContext.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m11_290 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="347-347"];
m11_292 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Name'', result.Name);\r\n                Assert.Equal(''Reason'', result.Reason);\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="363-380"];
m11_291 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="349-361"];
m11_293 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="347-347"];
m11_880 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1297-1297"];
m11_881 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetValueFromHash(''my-hash'', ''name'');\r\n                Assert.Null(result);\r\n            })", span="1299-1303"];
m11_882 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1297-1297"];
m11_52 [cluster="Unk.Add", file="CreatedContext.cs", label="Entry Unk.Add", span=""];
m11_64 [cluster="Unk.NotNull", file="CreatedContext.cs", label="Entry Unk.NotNull", span=""];
m11_42 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", span="57-57"];
m11_43 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var token = new CancellationToken();\r\n                var anotherProvider = new Mock<IPersistentJobQueueProvider>();\r\n                _providers.Add(anotherProvider.Object, new [] { ''critical'' });\r\n\r\n                Assert.Throws<InvalidOperationException>(\r\n                    () => connection.FetchNextJob(new[] { ''critical'', ''default'' }, token));\r\n            })", span="59-67"];
m11_44 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", span="57-57"];
m11_171 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters(bool)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters(bool)", span="214-214"];
m11_172 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters(bool)", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var createdAt = new DateTime(2012, 12, 12);\r\n                var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1));\r\n\r\n                Assert.NotNull(jobId);\r\n                Assert.NotEmpty(jobId);\r\n\r\n                var sqlJob = sql.Query(''select * from HangFire.Job'').Single();\r\n                Assert.Equal(jobId, sqlJob.Id.ToString());\r\n                Assert.Equal(createdAt, sqlJob.CreatedAt);\r\n                Assert.Equal(null, (int?) sqlJob.StateId);\r\n                Assert.Equal(null, (string) sqlJob.StateName);\r\n\r\n                var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData);\r\n                invocationData.Arguments = sqlJob.Arguments;\r\n\r\n                var job = invocationData.Deserialize();\r\n                Assert.Equal(typeof(SqlServerConnectionFacts), job.Type);\r\n                Assert.Equal(''SampleMethod'', job.Method.Name);\r\n                Assert.Equal(''Hello'', job.Args[0]);\r\n\r\n                Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt);\r\n                Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1));\r\n\r\n                var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value);\r\n\r\n                Assert.Equal(''Value1'', parameters[''Key1'']);\r\n                Assert.Equal(''Value2'', parameters[''Key2'']);\r\n            }, useBatching)", span="216-252"];
m11_173 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters(bool)", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters(bool)", span="214-214"];
m11_8 [cluster="Unk.Setup", file="CreatedContext.cs", label="Entry Unk.Setup", span=""];
m11_753 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="1094-1094"];
m11_754 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null));\r\n            })", span="1096-1099"];
m11_755 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="1094-1094"];
m11_250 [cluster="Unk.Null", file="CreatedContext.cs", label="Entry Unk.Null", span=""];
m11_25 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", span="43-43"];
m11_26 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", color=green, community=0, file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var token = new CancellationToken();\r\n                var queues = new[] { ''default'' };\r\n\r\n                connection.FetchNextJob(queues, token);\r\n\r\n                _queue.Verify(x => x.Dequeue(queues, token));\r\n            })", prediction=72, span="45-53"];
m11_27 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", span="43-43"];
m11_582 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="810-810"];
m11_584 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Contains(''1'', result);\r\n                Assert.Contains(''2'', result);\r\n            })", span="816-833"];
m11_583 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues (@key, 0.0, @value)''", span="812-814"];
m11_585 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="810-810"];
m11_10 [cluster="PersistentJobQueueProviderCollection.cstr", file="CreatedContext.cs", label="Entry PersistentJobQueueProviderCollection.cstr", span=""];
m11_155 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="84-84"];
m11_268 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="CreatedContext.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m11_562 [cluster="System.DateTime.AddHours(double)", file="CreatedContext.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m11_198 [cluster="Unk.NotEmpty", file="CreatedContext.cs", label="Entry Unk.NotEmpty", span=""];
m11_14 [cluster="Unk.GetJobQueue", file="CreatedContext.cs", label="Entry Unk.GetJobQueue", span=""];
m11_135 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_IsReentrant_FromTheSameConnection_OnTheSameResource()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_IsReentrant_FromTheSameConnection_OnTheSameResource()", span="167-167"];
m11_136 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_IsReentrant_FromTheSameConnection_OnTheSameResource()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                using (connection.AcquireDistributedLock(''hello'', TimeSpan.FromMinutes(5)))\r\n                using (connection.AcquireDistributedLock(''hello'', TimeSpan.FromMinutes(5)))\r\n                {\r\n                    Assert.True(true);\r\n                }\r\n            })", span="169-176"];
m11_137 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_IsReentrant_FromTheSameConnection_OnTheSameResource()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_IsReentrant_FromTheSameConnection_OnTheSameResource()", span="167-167"];
m11_914 [cluster="Unk.Empty", file="CreatedContext.cs", label="Entry Unk.Empty", span=""];
m11_604 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="849-849"];
m11_605 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null));\r\n\r\n                Assert.Equal(''keyValuePairs'', exception.ParamName);\r\n            })", span="851-857"];
m11_606 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="849-849"];
m11_763 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="1103-1103"];
m11_764 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashCount(''my-hash'');\r\n                Assert.Equal(0, result);\r\n            })", span="1105-1109"];
m11_765 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="1103-1103"];
m11_779 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="1138-1138"];
m11_780 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null));\r\n            })", span="1140-1144"];
m11_781 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="1138-1138"];
m11_28 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1481-1481"];
m11_989 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="CreatedContext.cs", label="storage.Setup(x => x.QueueProviders).Returns(_providers)", span="1486-1486"];
m11_987 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="CreatedContext.cs", label="var sql = ConnectionUtils.CreateConnection()", span="1483-1483"];
m11_991 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="CreatedContext.cs", label="action(connection)", span="1490-1490"];
m11_988 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="CreatedContext.cs", label="var storage = new Mock<SqlServerStorage>(sql)", span="1485-1485"];
m11_990 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="CreatedContext.cs", label="var connection = new SqlServerConnection(storage.Object)", span="1488-1488"];
m11_992 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1481-1481"];
m11_718 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="1026-1026"];
m11_719 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null));\r\n            })", span="1028-1032"];
m11_720 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="1026-1026"];
m11_37 [cluster="Unk.Verify", file="CreatedContext.cs", label="Entry Unk.Verify", span=""];
m11_573 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="240-240"];
m11_896 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1332-1332"];
m11_897 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1334-1340"];
m11_898 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1332-1332"];
m11_379 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="538-538"];
m11_380 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="540-546"];
m11_381 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="538-538"];
m11_492 [cluster="string.StartsWith(string)", file="CreatedContext.cs", label="Entry string.StartsWith(string)", span="0-0"];
m11_915 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1354-1354"];
m11_917 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetRangeFromList(''list-1'', 1, 2);\r\n                \r\n                // Assert\r\n                Assert.Equal(new [] { ''4'', ''3'' }, result);\r\n            })", span="1360-1377"];
m11_916 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [Value])\r\nvalues (@key, @value)''", span="1356-1358"];
m11_918 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1354-1354"];
m11_84 [cluster="System.TimeSpan.FromMinutes(double)", file="CreatedContext.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m11_205 [cluster="Unk.ToDictionary", file="CreatedContext.cs", label="Entry Unk.ToDictionary", span=""];
m11_563 [cluster="System.TimeSpan.FromHours(double)", file="CreatedContext.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m11_144 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="180-180"];
m11_145 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''job'', exception.ParamName);\r\n            })", span="182-192"];
m11_146 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="180-180"];
m11_728 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="1036-1036"];
m11_729 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetCounter(''my-counter'');\r\n                Assert.Equal(0, result);\r\n            })", span="1038-1042"];
m11_730 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="1036-1036"];
m11_933 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="518-518"];
m11_950 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1426-1426"];
m11_951 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null));\r\n            })", span="1428-1431"];
m11_952 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1426-1426"];
m11_65 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", span="81-81"];
m11_66 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var @lock = connection.AcquireDistributedLock(''1'', TimeSpan.FromSeconds(1));\r\n                Assert.NotNull(@lock);\r\n            })", span="83-87"];
m11_67 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", span="81-81"];
m11_196 [cluster="System.DateTime.DateTime(int, int, int)", file="CreatedContext.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m11_19 [cluster="Unk.>", file="CreatedContext.cs", label="Entry Unk.>", span=""];
m11_334 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="211-211"];
m11_672 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="950-950"];
m11_673 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null));\r\n            })", span="952-956"];
m11_674 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="950-950"];
m11_444 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="627-627"];
m11_446 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0);\r\n                \r\n                Assert.Equal(''-1.0'', result);\r\n            })", span="637-644"];
m11_445 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues \r\n('key', 1.0, '1.0'),\r\n('key', -1.0, '-1.0'),\r\n('key', -5.0, '-5.0'),\r\n('another-key', -2.0, '-2.0')''", span="629-635"];
m11_447 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="627-627"];
m11_72 [cluster="System.TimeSpan.FromSeconds(double)", file="CreatedContext.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m11_709 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="1001-1001"];
m11_711 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                });\r\n\r\n                var result = connection.GetRangeFromSet(''set-1'', 2, 3);\r\n\r\n                Assert.Equal(new [] { ''3'', ''4'' }, result);\r\n            })", span="1007-1022"];
m11_710 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score])\r\nvalues (@Key, @Value, 0.0)''", span="1003-1005"];
m11_712 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="1001-1001"];
m11_356 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="491-491"];
m11_358 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n                connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''AnotherValue'', parameter.Value);\r\n            })", span="498-511"];
m11_357 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="493-496"];
m11_359 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="491-491"];
m11_197 [cluster="System.TimeSpan.FromDays(double)", file="CreatedContext.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m11_959 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="405-405"];
m11_389 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="229-229"];
m11_464 [cluster="Hangfire.Server.ServerContext.ServerContext()", file="CreatedContext.cs", label="Entry Hangfire.Server.ServerContext.ServerContext()", span="20-20"];
m11_154 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="CreatedContext.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m11_416 [cluster="Unk.GetJobParameter", file="CreatedContext.cs", label="Entry Unk.GetJobParameter", span=""];
m11_282 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="180-180"];
m11_108 [cluster="System.Threading.ManualResetEventSlim.Wait()", file="CreatedContext.cs", label="Entry System.Threading.ManualResetEventSlim.Wait()", span="0-0"];
m11_525 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="737-737"];
m11_527 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.Heartbeat(''server1'');\r\n\r\n                var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat);\r\n\r\n                Assert.NotEqual(2012, servers[''server1''].Year);\r\n                Assert.Equal(2012, servers[''server2''].Year);\r\n            })", span="745-756"];
m11_526 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues\r\n('server1', '', '2012-12-12 12:12:12'),\r\n('server2', '', '2012-12-12 12:12:12')''", span="739-743"];
m11_528 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="737-737"];
m11_907 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1344-1344"];
m11_908 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetRangeFromList(''my-list'', 0, 1);\r\n                Assert.Empty(result);\r\n            })", span="1346-1350"];
m11_909 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1344-1344"];
m11_74 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_WhenResourceIsNullOrEmpty()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_WhenResourceIsNullOrEmpty()", span="91-91"];
m11_75 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_WhenResourceIsNullOrEmpty()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                () => connection.AcquireDistributedLock('''', TimeSpan.FromMinutes(5)));\r\n\r\n                Assert.Equal(''resource'', exception.ParamName);\r\n            })", span="93-99"];
m11_76 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_WhenResourceIsNullOrEmpty()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_WhenResourceIsNullOrEmpty()", span="91-91"];
m11_251 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="296-296"];
m11_253 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = Job.FromExpression(() => SampleMethod(''wrong''));\r\n\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result);\r\n                Assert.NotNull(result.Job);\r\n                Assert.Equal(''Succeeded'', result.State);\r\n                Assert.Equal(''Arguments'', result.Job.Args[0]);\r\n                Assert.Null(result.LoadException);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt);\r\n                Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1));\r\n            })", span="303-325"];
m11_252 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="298-301"];
m11_254 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="296-296"];
m11_493 [cluster="Unk.Contains", file="CreatedContext.cs", label="Entry Unk.Contains", span=""];
m11_515 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="730-730"];
m11_516 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="CreatedContext.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null)))", span="732-733"];
m11_517 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="730-730"];
m11_823 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1203-1203"];
m11_825 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="CreatedContext.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListCount(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="1209-1224"];
m11_824 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="CreatedContext.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key])\r\nvalues (@key)''", span="1205-1207"];
m11_826 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1203-1203"];
m11_681 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="379-379"];
m11_233 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="279-279"];
m11_234 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="CreatedContext.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null)))", span="281-282"];
m11_235 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="279-279"];
m11_94 [cluster="Unk.Single", file="CreatedContext.cs", label="Entry Unk.Single", span=""];
m11_143 [cluster="Unk.True", file="CreatedContext.cs", label="Entry Unk.True", span=""];
m11_437 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="615-615"];
m11_438 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1);\r\n\r\n                Assert.Null(result);\r\n            })", span="617-623"];
m11_439 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="615-615"];
m11_815 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="473-473"];
m11_682 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="CreatedContext.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="960-960"];
m11_683 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="CreatedContext.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetCount(''my-set'');\r\n                Assert.Equal(0, result);\r\n            })", span="962-966"];
m11_684 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="CreatedContext.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="960-960"];
m11_1000 [file="CreatedContext.cs", label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", span=""];
m11_1001 [file="CreatedContext.cs", label=token, span=""];
m11_1002 [file="CreatedContext.cs", label=queues, span=""];
m11_1024 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1006 [file="CreatedContext.cs", label=releaseLock, span=""];
m11_1007 [file="CreatedContext.cs", label=lockAcquired, span=""];
m11_1003 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1004 [file="CreatedContext.cs", label=token, span=""];
m11_1005 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1012 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1014 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1015 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1016 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1019 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1020 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1021 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1008 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1009 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1010 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1011 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1013 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1017 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1018 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1022 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1023 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1025 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1026 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1028 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1029 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1030 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1032 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1034 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1036 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1038 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1039 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1040 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1042 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1044 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1046 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1049 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1051 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1053 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1055 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1057 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1058 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1060 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1062 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1064 [file="CreatedContext.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m11_1027 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1031 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1033 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1035 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1037 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1041 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1043 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1045 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1047 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1048 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1050 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1052 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1054 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1056 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1059 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1061 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1063 [file="CreatedContext.cs", label=arrangeSql, span=""];
m11_1065 [file="CreatedContext.cs", label=arrangeSql, span=""];
m13_0 [cluster="MvcSample.HangFireConfig.Start()", file="DashboardOwinExtensions.cs", label="Entry MvcSample.HangFireConfig.Start()", span="16-16"];
m13_1 [cluster="MvcSample.HangFireConfig.Start()", file="DashboardOwinExtensions.cs", label="RedisFactory.Db = 3", span="20-20"];
m13_2 [cluster="MvcSample.HangFireConfig.Start()", color=green, community=0, file="DashboardOwinExtensions.cs", label="_server = new AspNetBackgroundJobServer(''default'')\r\n            {\r\n                MachineName = Environment.MachineName,\r\n                WorkersCount = Environment.ProcessorCount * 2\r\n            }", prediction=73, span="22-26"];
m13_24 [cluster="Unk.>", file="DashboardOwinExtensions.cs", label="Entry Unk.>", span=""];
m13_7 [cluster="HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", file="DashboardOwinExtensions.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", span="17-17"];
m13_10 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="DashboardOwinExtensions.cs", label="MapHangfireDashboard(app, dashboardPath, appPath, authorizationFilters, JobStorage.Current)", span="95-95"];
m13_11 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="DashboardOwinExtensions.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="89-89"];
m13_20 [cluster="Unk.Map", file="DashboardOwinExtensions.cs", label="Entry Unk.Map", span=""];
m13_12 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", span="109-109"];
m13_13 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="app == null", span="116-116"];
m13_15 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="SignatureConversions.AddConversions(app)", span="118-118"];
m13_16 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="app.Map(dashboardPath, subApp => subApp.Use<DashboardMiddleware>(\r\n                appPath,\r\n                storage,\r\n                DashboardRoutes.Routes,\r\n                authorizationFilters))", span="120-124"];
m13_14 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="throw new ArgumentNullException(''app'');", span="116-116"];
m13_17 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", span="109-109"];
m13_4 [cluster="MvcSample.HangFireConfig.Start()", file="DashboardOwinExtensions.cs", label="Exit MvcSample.HangFireConfig.Start()", span="16-16"];
m13_5 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", file="DashboardOwinExtensions.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", span="10-10"];
m13_6 [cluster="HangFire.PreserveCultureFilter.PreserveCultureFilter()", file="DashboardOwinExtensions.cs", label="Entry HangFire.PreserveCultureFilter.PreserveCultureFilter()", span="8-8"];
m13_3 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="DashboardOwinExtensions.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", span="71-71"];
m13_8 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="DashboardOwinExtensions.cs", label="MapHangfireDashboard(app, dashboardPath, appPath, DefaultAuthorizationFilters)", span="76-76"];
m13_9 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="DashboardOwinExtensions.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", span="71-71"];
m13_19 [cluster="Unk.AddConversions", file="DashboardOwinExtensions.cs", label="Entry Unk.AddConversions", span=""];
m13_21 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="120-124"];
m13_22 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="subApp.Use<DashboardMiddleware>(\r\n                appPath,\r\n                storage,\r\n                DashboardRoutes.Routes,\r\n                authorizationFilters)", span="120-124"];
m13_23 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="120-124"];
m13_25 [file="DashboardOwinExtensions.cs", label=string, span=""];
m13_26 [file="DashboardOwinExtensions.cs", label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", span=""];
m13_27 [file="DashboardOwinExtensions.cs", label="Hangfire.JobStorage", span=""];
m14_81 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label="Entry HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, HangFire.Server.JobPayload)", span="10-10"];
m14_41 [cluster="System.Threading.Thread.Join()", file="DelayedJobScheduler.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m14_59 [cluster="System.Threading.ManualResetEventSlim.Reset()", file="DelayedJobScheduler.cs", label="Entry System.Threading.ManualResetEventSlim.Reset()", span="0-0"];
m14_83 [cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", file="DelayedJobScheduler.cs", label="Entry HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", span="33-33"];
m14_60 [cluster="string.Format(string, params object[])", file="DelayedJobScheduler.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m14_18 [cluster="System.Threading.Thread.Start()", file="DelayedJobScheduler.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m14_42 [cluster="System.Threading.CancellationTokenSource.Dispose()", file="DelayedJobScheduler.cs", label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0"];
m14_8 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="DelayedJobScheduler.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m14_6 [cluster="string.Format(string, object)", file="DelayedJobScheduler.cs", label="Entry string.Format(string, object)", span="0-0"];
m14_31 [cluster="System.Threading.ManualResetEventSlim.Set()", file="DelayedJobScheduler.cs", label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0"];
m14_19 [cluster="HangFire.Server.Worker.Stop()", file="DelayedJobScheduler.cs", label="Entry HangFire.Server.Worker.Stop()", span="60-60"];
m14_20 [cluster="HangFire.Server.Worker.Stop()", file="DelayedJobScheduler.cs", label="Debug.Assert(!_disposed, ''!_disposed'')", span="62-62"];
m14_21 [cluster="HangFire.Server.Worker.Stop()", file="DelayedJobScheduler.cs", label=_started, span="64-64"];
m14_22 [cluster="HangFire.Server.Worker.Stop()", file="DelayedJobScheduler.cs", label="_cts.Cancel()", span="66-66"];
m14_23 [cluster="HangFire.Server.Worker.Stop()", file="DelayedJobScheduler.cs", label="Exit HangFire.Server.Worker.Stop()", span="60-60"];
m14_24 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="DelayedJobScheduler.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m14_0 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.WorkerContext)", file="DelayedJobScheduler.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.WorkerContext)", span="33-33"];
m14_1 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.WorkerContext)", file="DelayedJobScheduler.cs", label="_pool = pool", span="35-35"];
m14_2 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.WorkerContext)", file="DelayedJobScheduler.cs", label="_context = context", span="36-36"];
m14_3 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.WorkerContext)", file="DelayedJobScheduler.cs", label="Logger = LogManager.GetLogger(String.Format(''HangFire.Worker.{0}'', _context.WorkerNumber))", span="38-38"];
m14_5 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.WorkerContext)", file="DelayedJobScheduler.cs", label="Exit HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.WorkerContext)", span="33-33"];
m14_7 [cluster="Unk.GetLogger", file="DelayedJobScheduler.cs", label="Entry Unk.GetLogger", span=""];
m14_57 [cluster="System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", file="DelayedJobScheduler.cs", label="Entry System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", span="0-0"];
m14_44 [cluster="HangFire.Server.Worker.DoWork()", file="DelayedJobScheduler.cs", label="Entry HangFire.Server.Worker.DoWork()", span="117-117"];
m14_45 [cluster="HangFire.Server.Worker.DoWork()", file="DelayedJobScheduler.cs", label=true, span="121-121"];
m14_46 [cluster="HangFire.Server.Worker.DoWork()", file="DelayedJobScheduler.cs", label="_pool.NotifyReady(this)", span="123-123"];
m14_51 [cluster="HangFire.Server.Worker.DoWork()", file="DelayedJobScheduler.cs", label=OperationCanceledException, span="133-133"];
m14_52 [cluster="HangFire.Server.Worker.DoWork()", file="DelayedJobScheduler.cs", label=Exception, span="136-136"];
m14_47 [cluster="HangFire.Server.Worker.DoWork()", file="DelayedJobScheduler.cs", label="_jobIsReady.Wait(_cts.Token)", span="124-124"];
m14_48 [cluster="HangFire.Server.Worker.DoWork()", file="DelayedJobScheduler.cs", label=_jobLock, span="126-126"];
m14_49 [cluster="HangFire.Server.Worker.DoWork()", file="DelayedJobScheduler.cs", label="PerformJob(_jobPayload)", span="128-128"];
m14_50 [cluster="HangFire.Server.Worker.DoWork()", file="DelayedJobScheduler.cs", label="_jobIsReady.Reset()", span="129-129"];
m14_53 [cluster="HangFire.Server.Worker.DoWork()", file="DelayedJobScheduler.cs", label="Crashed = true", span="138-138"];
m14_54 [cluster="HangFire.Server.Worker.DoWork()", file="DelayedJobScheduler.cs", label="Logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. The worker will be stopped.''),\r\n                    ex)", span="139-142"];
m14_55 [cluster="HangFire.Server.Worker.DoWork()", file="DelayedJobScheduler.cs", label="Exit HangFire.Server.Worker.DoWork()", span="117-117"];
m14_86 [cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="DelayedJobScheduler.cs", label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10"];
m14_87 [cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="DelayedJobScheduler.cs", label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="90-90"];
m14_17 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="DelayedJobScheduler.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m14_9 [cluster="HangFire.Server.Worker.Start()", file="DelayedJobScheduler.cs", label="Entry HangFire.Server.Worker.Start()", span="47-47"];
m14_10 [cluster="HangFire.Server.Worker.Start()", file="DelayedJobScheduler.cs", label="Debug.Assert(!_disposed, ''!_disposed'')", span="49-49"];
m14_11 [cluster="HangFire.Server.Worker.Start()", file="DelayedJobScheduler.cs", label=_started, span="51-51"];
m14_12 [cluster="HangFire.Server.Worker.Start()", file="DelayedJobScheduler.cs", label="throw new InvalidOperationException(''Worker has been already started.'');", span="53-53"];
m14_14 [cluster="HangFire.Server.Worker.Start()", file="DelayedJobScheduler.cs", label="_started = true", span="57-57"];
m14_15 [cluster="HangFire.Server.Worker.Start()", file="DelayedJobScheduler.cs", label="Exit HangFire.Server.Worker.Start()", span="47-47"];
m14_79 [cluster="HangFire.States.ProcessingState.ProcessingState(string, string, string)", file="DelayedJobScheduler.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string, string, string)", span="10-10"];
m14_82 [cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="DelayedJobScheduler.cs", label="Entry HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="13-13"];
m14_61 [cluster="Unk.Fatal", file="DelayedJobScheduler.cs", label="Entry Unk.Fatal", span=""];
m14_85 [cluster="HangFire.States.SucceededState.SucceededState(string, string)", file="DelayedJobScheduler.cs", label="Entry HangFire.States.SucceededState.SucceededState(string, string)", span="12-12"];
m14_16 [cluster="System.Diagnostics.Debug.Assert(bool, string)", file="DelayedJobScheduler.cs", label="Entry System.Diagnostics.Debug.Assert(bool, string)", span="0-0"];
m14_80 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="DelayedJobScheduler.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m14_56 [cluster="HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", file="DelayedJobScheduler.cs", label="Entry HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", span="83-83"];
m14_58 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label="Entry HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="147-147"];
m14_62 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label=Redis, span="149-149"];
m14_63 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label="!JobState.Apply(\r\n                    Redis,\r\n                    new ProcessingState(payload.Id, ''Worker has started processing.'', _context.ServerName),\r\n                    EnqueuedState.Name)", span="151-154"];
m14_67 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label="jobDescriptor = new ServerJobDescriptor(\r\n                    _context.Activator, payload)", span="170-171"];
m14_72 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label="Logger.Error(String.Format(\r\n                    ''Failed to process the job '{0}': unexpected exception caught.'',\r\n                    payload.Id))", span="182-184"];
m14_75 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label="JobState.Apply(\r\n                        Redis,\r\n                        new SucceededState(payload.Id, ''The job has been completed successfully.''),\r\n                        ProcessingState.Name)", span="198-201"];
m14_76 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label="JobState.Apply(\r\n                        Redis,\r\n                        new FailedState(payload.Id, ''The job has been failed.'', exception),\r\n                        ProcessingState.Name)", span="205-208"];
m14_77 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label="JobFetcher.RemoveFromFetchedQueue(\r\n                    Redis, payload.Id, payload.Queue)", span="216-217"];
m14_64 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label="return;", span="156-156"];
m14_65 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label="Exception exception = null", span="165-165"];
m14_66 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label="ServerJobDescriptor jobDescriptor = null", span="167-167"];
m14_68 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label="var performContext = new PerformContext(\r\n                    _context, jobDescriptor)", span="173-174"];
m14_69 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label="_context.Performer.PerformJob(performContext)", span="176-176"];
m14_70 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label=Exception, span="178-178"];
m14_73 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label=Redis, span="194-194"];
m14_71 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label="exception = ex", span="180-180"];
m14_74 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label="exception == null", span="196-196"];
m14_78 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label="Exit HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="147-147"];
m14_32 [cluster="HangFire.Server.Worker.Dispose()", file="DelayedJobScheduler.cs", label="Entry HangFire.Server.Worker.Dispose()", span="100-100"];
m14_33 [cluster="HangFire.Server.Worker.Dispose()", file="DelayedJobScheduler.cs", label=_disposed, span="102-102"];
m14_34 [cluster="HangFire.Server.Worker.Dispose()", file="DelayedJobScheduler.cs", label="return;", span="103-103"];
m14_35 [cluster="HangFire.Server.Worker.Dispose()", file="DelayedJobScheduler.cs", label="_disposed = true", span="105-105"];
m14_36 [cluster="HangFire.Server.Worker.Dispose()", file="DelayedJobScheduler.cs", label=_started, span="107-107"];
m14_37 [cluster="HangFire.Server.Worker.Dispose()", file="DelayedJobScheduler.cs", label="_thread.Join()", span="109-109"];
m14_38 [cluster="HangFire.Server.Worker.Dispose()", file="DelayedJobScheduler.cs", label="_cts.Dispose()", span="112-112"];
m14_39 [cluster="HangFire.Server.Worker.Dispose()", file="DelayedJobScheduler.cs", label="_jobIsReady.Dispose()", span="113-113"];
m14_40 [cluster="HangFire.Server.Worker.Dispose()", file="DelayedJobScheduler.cs", label="Exit HangFire.Server.Worker.Dispose()", span="100-100"];
m14_84 [cluster="Unk.Error", file="DelayedJobScheduler.cs", label="Entry Unk.Error", span=""];
m14_43 [cluster="System.Threading.ManualResetEventSlim.Dispose()", file="DelayedJobScheduler.cs", label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0"];
m14_25 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="88-88"];
m14_26 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label="Debug.Assert(!_disposed, ''!_disposed'')", span="90-90"];
m14_28 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label="_jobPayload = payload", span="94-94"];
m14_27 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label=_jobLock, span="92-92"];
m14_29 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label="_jobIsReady.Set()", span="97-97"];
m14_30 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="DelayedJobScheduler.cs", label="Exit HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="88-88"];
m14_88 [file="DelayedJobScheduler.cs", label="HangFire.Server.Worker", span=""];
m15_13 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", file="ExpirationManager.cs", label="Entry HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", span="27-27"];
m15_7 [cluster="HangFire.BackgroundJobServer.Start()", file="ExpirationManager.cs", label="Entry HangFire.BackgroundJobServer.Start()", span="42-42"];
m15_8 [cluster="HangFire.BackgroundJobServer.Start()", file="ExpirationManager.cs", label="_server != null", span="44-44"];
m15_9 [cluster="HangFire.BackgroundJobServer.Start()", file="ExpirationManager.cs", label="throw new InvalidOperationException(''Background job server has already been started. Please stop it first.'');", span="46-46"];
m15_10 [cluster="HangFire.BackgroundJobServer.Start()", file="ExpirationManager.cs", label="_server = new JobServer(MachineName, WorkerPools, PollInterval, JobActivator)", span="49-49"];
m15_11 [cluster="HangFire.BackgroundJobServer.Start()", file="ExpirationManager.cs", label="Exit HangFire.BackgroundJobServer.Start()", span="42-42"];
m15_0 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params HangFire.Server.WorkerPool[])", file="ExpirationManager.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(params HangFire.Server.WorkerPool[])", span="14-14"];
m15_1 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params HangFire.Server.WorkerPool[])", file="ExpirationManager.cs", label="MachineName = Environment.MachineName", span="16-16"];
m15_3 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params HangFire.Server.WorkerPool[])", file="ExpirationManager.cs", label="WorkerPools = workerPools ?? new[] { new WorkerPool() }", span="18-18"];
m15_2 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params HangFire.Server.WorkerPool[])", file="ExpirationManager.cs", label="PollInterval = TimeSpan.FromSeconds(15)", span="17-17"];
m15_4 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params HangFire.Server.WorkerPool[])", file="ExpirationManager.cs", label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(params HangFire.Server.WorkerPool[])", span="14-14"];
m15_6 [cluster="HangFire.Server.WorkerPool.WorkerPool()", file="ExpirationManager.cs", label="Entry HangFire.Server.WorkerPool.WorkerPool()", span="6-6"];
m15_21 [cluster="HangFire.Server.JobServer.Dispose()", file="ExpirationManager.cs", label="Entry HangFire.Server.JobServer.Dispose()", span="58-58"];
m15_5 [cluster="System.TimeSpan.FromSeconds(double)", file="ExpirationManager.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m15_22 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", file="ExpirationManager.cs", label="Entry HangFire.BackgroundJobServer.System.IDisposable.Dispose()", span="68-68"];
m15_23 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", file="ExpirationManager.cs", label="Stop()", span="70-70"];
m15_24 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", file="ExpirationManager.cs", label="Exit HangFire.BackgroundJobServer.System.IDisposable.Dispose()", span="68-68"];
m15_14 [cluster="HangFire.BackgroundJobServer.Stop()", file="ExpirationManager.cs", label="Entry HangFire.BackgroundJobServer.Stop()", span="56-56"];
m15_15 [cluster="HangFire.BackgroundJobServer.Stop()", file="ExpirationManager.cs", label="_server != null", span="58-58"];
m15_16 [cluster="HangFire.BackgroundJobServer.Stop()", file="ExpirationManager.cs", label="_server.Dispose()", span="60-60"];
m15_19 [cluster="HangFire.BackgroundJobServer.Stop()", file="ExpirationManager.cs", label="return false;", span="65-65"];
m15_17 [cluster="HangFire.BackgroundJobServer.Stop()", file="ExpirationManager.cs", label="_server = null", span="61-61"];
m15_18 [cluster="HangFire.BackgroundJobServer.Stop()", file="ExpirationManager.cs", label="return true;", span="63-63"];
m15_20 [cluster="HangFire.BackgroundJobServer.Stop()", file="ExpirationManager.cs", label="Exit HangFire.BackgroundJobServer.Stop()", span="56-56"];
m15_12 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ExpirationManager.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m15_25 [file="ExpirationManager.cs", label="HangFire.BackgroundJobServer", span=""];
m17_8 [cluster="Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", file="IBootstrapperConfiguration.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", span="66-66"];
m17_9 [cluster="Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", file="IBootstrapperConfiguration.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", span="66-66"];
m17_0 [cluster="Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", file="IBootstrapperConfiguration.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", span="36-36"];
m17_1 [cluster="Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", file="IBootstrapperConfiguration.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", span="36-36"];
m17_10 [cluster="Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", file="IBootstrapperConfiguration.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", span="74-74"];
m17_11 [cluster="Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", file="IBootstrapperConfiguration.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", span="74-74"];
m17_4 [cluster="Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)", file="IBootstrapperConfiguration.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)", span="51-51"];
m17_5 [cluster="Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)", file="IBootstrapperConfiguration.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)", span="51-51"];
m17_2 [cluster="Hangfire.IBootstrapperConfiguration.UseFilter(object)", file="IBootstrapperConfiguration.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseFilter(object)", span="43-43"];
m17_3 [cluster="Hangfire.IBootstrapperConfiguration.UseFilter(object)", file="IBootstrapperConfiguration.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseFilter(object)", span="43-43"];
m17_12 [cluster="Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", file="IBootstrapperConfiguration.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", span="82-82"];
m17_13 [cluster="Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", file="IBootstrapperConfiguration.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", span="82-82"];
m17_6 [cluster="Hangfire.IBootstrapperConfiguration.UseAppPath(string)", file="IBootstrapperConfiguration.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseAppPath(string)", span="58-58"];
m17_7 [cluster="Hangfire.IBootstrapperConfiguration.UseAppPath(string)", file="IBootstrapperConfiguration.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseAppPath(string)", span="58-58"];
m18_1 [cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="IJobCreationProcess.cs", label="Exit Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", span="32-32"];
m19_9 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="IJobPerformanceProcess.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", span="22-22"];
m19_10 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="IJobPerformanceProcess.cs", label="var state = CreateState()", span="24-24"];
m19_11 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="IJobPerformanceProcess.cs", label="var data = state.SerializeData()", span="26-26"];
m19_12 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="IJobPerformanceProcess.cs", label="Assert.Equal(JobHelper.ToStringTimestamp(state.SucceededAt), data[''SucceededAt''])", span="28-28"];
m19_13 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="IJobPerformanceProcess.cs", label="Assert.Equal(''123'', data[''PerformanceDuration''])", span="29-29"];
m19_14 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="IJobPerformanceProcess.cs", label="Assert.Equal(''11'', data[''Latency''])", span="30-30"];
m19_15 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="IJobPerformanceProcess.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", span="22-22"];
m19_18 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="IJobPerformanceProcess.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", span="34-34"];
m19_19 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="IJobPerformanceProcess.cs", label="var state = CreateState()", span="36-36"];
m19_20 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="IJobPerformanceProcess.cs", label="Assert.True(state.IsFinal)", span="37-37"];
m19_21 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="IJobPerformanceProcess.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", span="34-34"];
m19_4 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="IJobPerformanceProcess.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", span="15-15"];
m19_5 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="IJobPerformanceProcess.cs", label="var state = CreateState()", span="17-17"];
m19_7 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="IJobPerformanceProcess.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", span="15-15"];
m19_22 [cluster="Unk.True", file="IJobPerformanceProcess.cs", label="Entry Unk.True", span=""];
m19_27 [cluster="Unk.False", file="IJobPerformanceProcess.cs", label="Entry Unk.False", span=""];
m19_0 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", file="IJobPerformanceProcess.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", span="9-9"];
m19_1 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", file="IJobPerformanceProcess.cs", label="Assert.Equal(''Succeeded'', SucceededState.StateName)", span="11-11"];
m19_2 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", file="IJobPerformanceProcess.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", span="9-9"];
m19_3 [cluster="Unk.Equal", file="IJobPerformanceProcess.cs", label="Entry Unk.Equal", span=""];
m19_23 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", file="IJobPerformanceProcess.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", span="41-41"];
m19_24 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", file="IJobPerformanceProcess.cs", label="var state = CreateState()", span="43-43"];
m19_25 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", file="IJobPerformanceProcess.cs", label="Assert.False(state.IgnoreJobLoadException)", span="44-44"];
m19_26 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", file="IJobPerformanceProcess.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", span="41-41"];
m19_16 [cluster="HangFire.States.SucceededState.SerializeData()", file="IJobPerformanceProcess.cs", label="Entry HangFire.States.SucceededState.SerializeData()", span="45-45"];
m19_8 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.CreateState()", file="IJobPerformanceProcess.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.CreateState()", span="47-47"];
m19_28 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.CreateState()", file="IJobPerformanceProcess.cs", label="return new SucceededState(11, 123);", span="49-49"];
m19_29 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.CreateState()", file="IJobPerformanceProcess.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.CreateState()", span="47-47"];
m19_17 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="IJobPerformanceProcess.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m19_30 [cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="IJobPerformanceProcess.cs", label="Entry HangFire.States.SucceededState.SucceededState(long, long)", span="28-28"];
m21_0 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="IServerComponent.cs", label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="24-24"];
m21_1 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="IServerComponent.cs", label="Exit Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="24-24"];
m23_9 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="IState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="45-45"];
m23_5 [cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="IState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="46-46"];
m23_6 [cluster="HangFire.Redis.SucceededStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="IState.cs", label="Entry HangFire.Redis.SucceededStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="29-29"];
m23_7 [cluster="HangFire.Redis.SucceededStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="IState.cs", label="transaction.RemoveFromList(''succeeded'', context.JobId)", span="31-31"];
m23_8 [cluster="HangFire.Redis.SucceededStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="IState.cs", label="Exit HangFire.Redis.SucceededStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="29-29"];
m23_0 [cluster="HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="IState.cs", label="Entry HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23"];
m23_1 [cluster="HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="IState.cs", label="transaction.InsertToList(''succeeded'', context.JobId)", span="25-25"];
m23_2 [cluster="HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="IState.cs", label="transaction.TrimList(''succeeded'', 0, 99)", span="26-26"];
m23_3 [cluster="HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="IState.cs", label="Exit HangFire.Redis.SucceededStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23"];
m23_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="IState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="44-44"];
m24_1 [cluster="Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateChangeContext)", file="IStateChangeProcess.cs", label="Exit Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateChangeContext)", span="25-25"];
m26_132 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="239-239"];
m26_133 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="JobCreationProcess.cs", label="key == null", span="241-241"];
m26_134 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(key));", span="241-241"];
m26_135 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="JobCreationProcess.cs", label="toScore < fromScore", span="242-242"];
m26_137 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="JobCreationProcess.cs", label="return _storage.UseConnection(connection => connection.ExecuteScalar<string>(\r\n                $@''select top 1 Value from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore },\r\n                commandTimeout: _storage.CommandTimeout));", span="244-247"];
m26_136 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="JobCreationProcess.cs", label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="242-242"];
m26_138 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="239-239"];
m26_262 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="420-420"];
m26_263 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="JobCreationProcess.cs", label="key == null", span="422-422"];
m26_264 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(key));", span="422-422"];
m26_266 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="JobCreationProcess.cs", label="return _storage.UseConnection(connection =>\r\n            {\r\n                var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout);\r\n                if (!result.HasValue) return TimeSpan.FromSeconds(-1);\r\n\r\n                return result.Value - DateTime.UtcNow;\r\n            });", span="426-432"];
m26_265 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="JobCreationProcess.cs", label="string query = $@''select min([ExpireAt]) from [{_storage.SchemaName}].Hash with (readcommittedlock) where [Key] = @key''", span="424-424"];
m26_267 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="420-420"];
m26_84 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobCreationProcess.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="45-45"];
m26_82 [cluster="long.Parse(string)", file="JobCreationProcess.cs", label="Entry long.Parse(string)", span="0-0"];
m26_173 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="291-291"];
m26_174 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="JobCreationProcess.cs", label="serverId == null", span="293-293"];
m26_175 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(serverId));", span="293-293"];
m26_176 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="JobCreationProcess.cs", label="context == null", span="294-294"];
m26_177 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(context));", span="294-294"];
m26_178 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="JobCreationProcess.cs", label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="296-301"];
m26_179 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="JobCreationProcess.cs", label="_storage.UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n$@'';merge [{_storage.SchemaName}].Server with (holdlock) as Target\r\nusing (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat)\r\non Target.Id = Source.Id\r\nwhen matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat\r\nwhen not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                    new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n            })", span="303-313"];
m26_180 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="291-291"];
m26_15 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="51-51"];
m26_16 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobCreationProcess.cs", label="queues == null || queues.Length == 0", span="53-53"];
m26_17 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(queues));", span="53-53"];
m26_18 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobCreationProcess.cs", label="var providers = queues\r\n                .Select(queue => _storage.QueueProviders.GetProvider(queue))\r\n                .Distinct()\r\n                .ToArray()", span="55-58"];
m26_20 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobCreationProcess.cs", label="throw new InvalidOperationException(\r\n                    $''Multiple provider instances registered for queues: {String.Join('', '', queues)}. You should choose only one type of persistent queues per server instance.'');", span="62-63"];
m26_22 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobCreationProcess.cs", label="return persistentQueue.Dequeue(queues, cancellationToken);", span="67-67"];
m26_21 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobCreationProcess.cs", label="var persistentQueue = providers[0].GetJobQueue()", span="66-66"];
m26_23 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="51-51"];
m26_161 [cluster="Unk.UseConnection", file="JobCreationProcess.cs", label="Entry Unk.UseConnection", span=""];
m26_34 [cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m26_166 [cluster="Unk.ToDictionary", file="JobCreationProcess.cs", label="Entry Unk.ToDictionary", span=""];
m26_193 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="329-329"];
m26_194 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="JobCreationProcess.cs", label="serverId == null", span="331-331"];
m26_195 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(serverId));", span="331-331"];
m26_196 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="JobCreationProcess.cs", label="_storage.UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n                    $@''update [{_storage.SchemaName}].Server set LastHeartbeat = @now where Id = @id'',\r\n                    new { now = DateTime.UtcNow, id = serverId },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n            })", span="333-339"];
m26_197 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="329-329"];
m26_221 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="365-365"];
m26_222 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="JobCreationProcess.cs", label="key == null", span="367-367"];
m26_223 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(key));", span="367-367"];
m26_225 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="JobCreationProcess.cs", label="return _storage.UseConnection(connection => connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 }, commandTimeout: _storage.CommandTimeout)\r\n                .ToList());", span="376-378"];
m26_224 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="JobCreationProcess.cs", label="string query =\r\n$@''select [Value] from (\r\n	select [Value], row_number() over (order by [Id] ASC) as row_num\r\n	from [{_storage.SchemaName}].[Set] with (readcommittedlock)\r\n	where [Key] = @key \r\n) as s where s.row_num between @startingFrom and @endingAt''", span="369-374"];
m26_226 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="365-365"];
m26_294 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="459-459"];
m26_295 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="JobCreationProcess.cs", label="key == null", span="461-461"];
m26_296 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(key));", span="461-461"];
m26_298 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="JobCreationProcess.cs", label="return _storage.UseConnection(connection =>\r\n            {\r\n                var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout);\r\n                if (!result.HasValue) return TimeSpan.FromSeconds(-1);\r\n\r\n                return result.Value - DateTime.UtcNow;\r\n            });", span="467-473"];
m26_297 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="JobCreationProcess.cs", label="string query = \r\n$@''select min([ExpireAt]) from [{_storage.SchemaName}].List with (readcommittedlock)\r\nwhere [Key] = @key''", span="463-465"];
m26_299 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="459-459"];
m26_315 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="492-492"];
m26_316 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="JobCreationProcess.cs", label="key == null", span="494-494"];
m26_317 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(key));", span="494-494"];
m26_319 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="JobCreationProcess.cs", label="return _storage.UseConnection(connection => connection.Query<string>(query, new { key = key }, commandTimeout: _storage.CommandTimeout).ToList());", span="501-501"];
m26_318 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="JobCreationProcess.cs", label="string query =\r\n$@''select [Value] from [{_storage.SchemaName}].List with (readcommittedlock)\r\nwhere [Key] = @key\r\norder by [Id] desc''", span="496-499"];
m26_320 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="492-492"];
m26_100 [cluster="Hangfire.Storage.StateData.StateData()", file="JobCreationProcess.cs", label="Entry Hangfire.Storage.StateData.StateData()", span="23-23"];
m26_253 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="411-411"];
m26_254 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="JobCreationProcess.cs", label="key == null", span="413-413"];
m26_255 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(key));", span="413-413"];
m26_257 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="JobCreationProcess.cs", label="return _storage.UseConnection(connection => connection.ExecuteScalar<long>(query, new { key = key }, commandTimeout: _storage.CommandTimeout));", span="417-417"];
m26_256 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="JobCreationProcess.cs", label="string query = $@''select count([Id]) from [{_storage.SchemaName}].Hash with (readcommittedlock) where [Key] = @key''", span="415-415"];
m26_258 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="411-411"];
m26_181 [cluster="Hangfire.SqlServer.Entities.ServerData.ServerData()", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.Entities.ServerData.ServerData()", span="20-20"];
m26_63 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="124-124"];
m26_64 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobCreationProcess.cs", label="id == null", span="126-126"];
m26_65 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(id));", span="126-126"];
m26_67 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobCreationProcess.cs", label="return _storage.UseConnection(connection =>\r\n            {\r\n                var jobData = connection.Query<SqlJob>(sql, new { id = long.Parse(id) }, commandTimeout: _storage.CommandTimeout)\r\n                    .SingleOrDefault();\r\n\r\n                if (jobData == null) return null;\r\n\r\n                // TODO: conversion exception could be thrown.\r\n                var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData);\r\n                invocationData.Arguments = jobData.Arguments;\r\n\r\n                Job job = null;\r\n                JobLoadException loadException = null;\r\n\r\n                try\r\n                {\r\n                    job = invocationData.Deserialize();\r\n                }\r\n                catch (JobLoadException ex)\r\n                {\r\n                    loadException = ex;\r\n                }\r\n\r\n                return new JobData\r\n                {\r\n                    Job = job,\r\n                    State = jobData.StateName,\r\n                    CreatedAt = jobData.CreatedAt,\r\n                    LoadException = loadException\r\n                };\r\n            });", span="131-161"];
m26_66 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobCreationProcess.cs", label="string sql =\r\n$@''select InvocationData, StateName, Arguments, CreatedAt from [{_storage.SchemaName}].Job with (readcommittedlock) where Id = @id''", span="128-129"];
m26_68 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="124-124"];
m26_156 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="275-275"];
m26_157 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="JobCreationProcess.cs", label="key == null", span="277-277"];
m26_158 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(key));", span="277-277"];
m26_159 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="JobCreationProcess.cs", label="return _storage.UseConnection(connection =>\r\n            {\r\n                var result = connection.Query<SqlHash>(\r\n                    $''select Field, Value from [{_storage.SchemaName}].Hash with (forceseek, readcommittedlock) where [Key] = @key'',\r\n                    new { key },\r\n                    commandTimeout: _storage.CommandTimeout)\r\n                    .ToDictionary(x => x.Field, x => x.Value);\r\n\r\n                return result.Count != 0 ? result : null;\r\n            });", span="279-288"];
m26_160 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="275-275"];
m26_11 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="46-46"];
m26_13 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="46-46"];
m26_59 [cluster="Unk.>", file="JobCreationProcess.cs", label="Entry Unk.>", span=""];
m26_211 [cluster="System.TimeSpan.Negate()", file="JobCreationProcess.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m26_151 [cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<DbConnection, DbTransaction>)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<DbConnection, DbTransaction>)", span="194-194"];
m26_101 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="195-195"];
m26_102 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="JobCreationProcess.cs", label="id == null", span="197-197"];
m26_103 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(id));", span="197-197"];
m26_104 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="JobCreationProcess.cs", label="name == null", span="198-198"];
m26_105 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(name));", span="198-198"];
m26_106 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="JobCreationProcess.cs", label="_storage.UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n$@'';merge [{_storage.SchemaName}].JobParameter with (holdlock) as Target\r\nusing (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) \r\non Target.JobId = Source.JobId AND Target.Name = Source.Name\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                    new { jobId = long.Parse(id), name, value },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n            })", span="200-210"];
m26_107 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="195-195"];
m26_139 [cluster="System.ArgumentException.ArgumentException(string)", file="JobCreationProcess.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m26_28 [cluster="string.Join(string, params string[])", file="JobCreationProcess.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m26_243 [cluster="System.TimeSpan.FromSeconds(double)", file="JobCreationProcess.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m26_44 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="JobCreationProcess.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="70-70"];
m26_6 [cluster="Unk.nameof", file="JobCreationProcess.cs", label="Entry Unk.nameof", span=""];
m26_231 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="381-381"];
m26_232 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="JobCreationProcess.cs", label="key == null", span="383-383"];
m26_233 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(key));", span="383-383"];
m26_235 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="JobCreationProcess.cs", label="return _storage.UseConnection(connection =>\r\n            {\r\n                var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout);\r\n                if (!result.HasValue) return TimeSpan.FromSeconds(-1);\r\n\r\n                return result.Value - DateTime.UtcNow;\r\n            });", span="387-393"];
m26_234 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="JobCreationProcess.cs", label="string query = $@''select min([ExpireAt]) from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key''", span="385-385"];
m26_236 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="381-381"];
m26_244 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="396-396"];
m26_245 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="JobCreationProcess.cs", label="key == null", span="398-398"];
m26_246 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(key));", span="398-398"];
m26_248 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="JobCreationProcess.cs", label="return _storage.UseConnection(connection => \r\n                connection.ExecuteScalar<long?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout) ?? 0);", span="407-408"];
m26_247 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="JobCreationProcess.cs", label="string query = \r\n$@''select sum(s.[Value]) from (select sum([Value]) as [Value] from [{_storage.SchemaName}].Counter with (readcommittedlock)\r\nwhere [Key] = @key\r\nunion all\r\nselect [Value] from [{_storage.SchemaName}].AggregatedCounter with (readcommittedlock)\r\nwhere [Key] = @key) as s''", span="400-405"];
m26_249 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="396-396"];
m26_26 [cluster="Unk.ToArray", file="JobCreationProcess.cs", label="Entry Unk.ToArray", span=""];
m26_61 [cluster="Unk.Parse", file="JobCreationProcess.cs", label="Entry Unk.Parse", span=""];
m26_27 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JobCreationProcess.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m26_60 [cluster="Unk.ToString", file="JobCreationProcess.cs", label="Entry Unk.ToString", span=""];
m26_99 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", file="JobCreationProcess.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m26_112 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="213-213"];
m26_113 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="JobCreationProcess.cs", label="id == null", span="215-215"];
m26_114 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(id));", span="215-215"];
m26_115 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="JobCreationProcess.cs", label="name == null", span="216-216"];
m26_116 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(name));", span="216-216"];
m26_117 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="JobCreationProcess.cs", label="return _storage.UseConnection(connection => connection.ExecuteScalar<string>(\r\n                $@''select top (1) Value from [{_storage.SchemaName}].JobParameter with (readcommittedlock) where JobId = @id and Name = @name'',\r\n                new { id = long.Parse(id), name = name },\r\n                commandTimeout: _storage.CommandTimeout));", span="218-221"];
m26_118 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="213-213"];
m26_58 [cluster="System.DateTime.Add(System.TimeSpan)", file="JobCreationProcess.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m26_14 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="60-60"];
m26_185 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="316-316"];
m26_186 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="JobCreationProcess.cs", label="serverId == null", span="318-318"];
m26_187 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(serverId));", span="318-318"];
m26_188 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="JobCreationProcess.cs", label="_storage.UseConnection(connection =>\r\n            {\r\n                connection.Execute(\r\n                    $@''delete from [{_storage.SchemaName}].Server where Id = @id'',\r\n                    new { id = serverId },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n            })", span="320-326"];
m26_189 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="316-316"];
m26_86 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="164-164"];
m26_87 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="JobCreationProcess.cs", label="jobId == null", span="166-166"];
m26_88 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(jobId));", span="166-166"];
m26_90 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="JobCreationProcess.cs", label="return _storage.UseConnection(connection =>\r\n            {\r\n                var sqlState = connection.Query<SqlState>(sql, new { jobId = long.Parse(jobId) }, commandTimeout: _storage.CommandTimeout).SingleOrDefault();\r\n                if (sqlState == null)\r\n                {\r\n                    return null;\r\n                }\r\n\r\n                var data = new Dictionary<string, string>(\r\n                    JobHelper.FromJson<Dictionary<string, string>>(sqlState.Data),\r\n                    StringComparer.OrdinalIgnoreCase);\r\n\r\n                return new StateData\r\n                {\r\n                    Name = sqlState.Name,\r\n                    Reason = sqlState.Reason,\r\n                    Data = data\r\n                };\r\n            });", span="174-192"];
m26_89 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="JobCreationProcess.cs", label="string sql = \r\n$@''select s.Name, s.Reason, s.Data\r\nfrom [{_storage.SchemaName}].State s with (readcommittedlock)\r\ninner join [{_storage.SchemaName}].Job j with (readcommittedlock) on j.StateId = s.Id\r\nwhere j.Id = @jobId''", span="168-172"];
m26_91 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="164-164"];
m26_306 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="476-476"];
m26_307 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="JobCreationProcess.cs", label="key == null", span="478-478"];
m26_308 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(key));", span="478-478"];
m26_310 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="JobCreationProcess.cs", label="return _storage.UseConnection(connection => connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 }, commandTimeout: _storage.CommandTimeout)\r\n                .ToList());", span="487-489"];
m26_309 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="JobCreationProcess.cs", label="string query =\r\n$@''select [Value] from (\r\n	select [Value], row_number() over (order by [Id] desc) as row_num \r\n	from [{_storage.SchemaName}].List with (readcommittedlock)\r\n	where [Key] = @key \r\n) as s where s.row_num between @startingFrom and @endingAt''", span="480-485"];
m26_311 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="476-476"];
m26_10 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", span="42-42"];
m26_206 [cluster="System.TimeSpan.Duration()", file="JobCreationProcess.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m26_35 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="70-70"];
m26_36 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="JobCreationProcess.cs", label="job == null", span="76-76"];
m26_37 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(job));", span="76-76"];
m26_38 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="JobCreationProcess.cs", label="parameters == null", span="77-77"];
m26_39 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(parameters));", span="77-77"];
m26_41 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="JobCreationProcess.cs", label="var invocationData = InvocationData.Serialize(job)", span="84-84"];
m26_40 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="JobCreationProcess.cs", label="string createJobSql =\r\n$@''insert into [{_storage.SchemaName}].Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\noutput inserted.Id\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt)''", span="79-82"];
m26_43 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="70-70"];
m26_57 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="JobCreationProcess.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m26_30 [cluster="Unk.Dequeue", file="JobCreationProcess.cs", label="Entry Unk.Dequeue", span=""];
m26_321 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="501-501"];
m26_31 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="56-56"];
m26_32 [cluster="lambda expression", file="JobCreationProcess.cs", label="_storage.QueueProviders.GetProvider(queue)", span="56-56"];
m26_33 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="56-56"];
m26_48 [cluster="lambda expression", file="JobCreationProcess.cs", label="parameters.Count > 0", span="99-99"];
m26_49 [cluster="lambda expression", file="JobCreationProcess.cs", label="var parameterArray = new object[parameters.Count]", span="101-101"];
m26_51 [cluster="lambda expression", file="JobCreationProcess.cs", label=parameters, span="103-103"];
m26_46 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="86-121"];
m26_54 [cluster="lambda expression", file="JobCreationProcess.cs", label="connection.Execute(insertParameterSql, parameterArray, commandTimeout: _storage.CommandTimeout)", span="117-117"];
m26_52 [cluster="lambda expression", file="JobCreationProcess.cs", label="parameterArray[parameterIndex++] = new\r\n                        {\r\n                            jobId = long.Parse(jobId),\r\n                            name = parameter.Key,\r\n                            value = parameter.Value\r\n                        }", span="105-110"];
m26_55 [cluster="lambda expression", file="JobCreationProcess.cs", label="return jobId;", span="120-120"];
m26_50 [cluster="lambda expression", file="JobCreationProcess.cs", label="int parameterIndex = 0", span="102-102"];
m26_53 [cluster="lambda expression", file="JobCreationProcess.cs", label="string insertParameterSql =\r\n$@''insert into [{_storage.SchemaName}].JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="113-115"];
m26_56 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="86-121"];
m26_70 [cluster="lambda expression", file="JobCreationProcess.cs", label="var jobData = connection.Query<SqlJob>(sql, new { id = long.Parse(id) }, commandTimeout: _storage.CommandTimeout)\r\n                    .SingleOrDefault()", span="133-134"];
m26_69 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="131-161"];
m26_71 [cluster="lambda expression", file="JobCreationProcess.cs", label="jobData == null", span="136-136"];
m26_73 [cluster="lambda expression", file="JobCreationProcess.cs", label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="139-139"];
m26_74 [cluster="lambda expression", file="JobCreationProcess.cs", label="invocationData.Arguments = jobData.Arguments", span="140-140"];
m26_80 [cluster="lambda expression", file="JobCreationProcess.cs", label="return new JobData\r\n                {\r\n                    Job = job,\r\n                    State = jobData.StateName,\r\n                    CreatedAt = jobData.CreatedAt,\r\n                    LoadException = loadException\r\n                };", span="154-160"];
m26_72 [cluster="lambda expression", file="JobCreationProcess.cs", label="return null;", span="136-136"];
m26_77 [cluster="lambda expression", file="JobCreationProcess.cs", label="job = invocationData.Deserialize()", span="147-147"];
m26_75 [cluster="lambda expression", file="JobCreationProcess.cs", label="Job job = null", span="142-142"];
m26_76 [cluster="lambda expression", file="JobCreationProcess.cs", label="JobLoadException loadException = null", span="143-143"];
m26_78 [cluster="lambda expression", file="JobCreationProcess.cs", label=JobLoadException, span="149-149"];
m26_79 [cluster="lambda expression", file="JobCreationProcess.cs", label="loadException = ex", span="151-151"];
m26_81 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="131-161"];
m26_93 [cluster="lambda expression", file="JobCreationProcess.cs", label="var sqlState = connection.Query<SqlState>(sql, new { jobId = long.Parse(jobId) }, commandTimeout: _storage.CommandTimeout).SingleOrDefault()", span="176-176"];
m26_92 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="174-192"];
m26_94 [cluster="lambda expression", file="JobCreationProcess.cs", label="sqlState == null", span="177-177"];
m26_96 [cluster="lambda expression", file="JobCreationProcess.cs", label="var data = new Dictionary<string, string>(\r\n                    JobHelper.FromJson<Dictionary<string, string>>(sqlState.Data),\r\n                    StringComparer.OrdinalIgnoreCase)", span="182-184"];
m26_97 [cluster="lambda expression", file="JobCreationProcess.cs", label="return new StateData\r\n                {\r\n                    Name = sqlState.Name,\r\n                    Reason = sqlState.Reason,\r\n                    Data = data\r\n                };", span="186-191"];
m26_95 [cluster="lambda expression", file="JobCreationProcess.cs", label="return null;", span="179-179"];
m26_98 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="174-192"];
m26_110 [cluster="lambda expression", file="JobCreationProcess.cs", label="connection.Execute(\r\n$@'';merge [{_storage.SchemaName}].JobParameter with (holdlock) as Target\r\nusing (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) \r\non Target.JobId = Source.JobId AND Target.Name = Source.Name\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                    new { jobId = long.Parse(id), name, value },\r\n                    commandTimeout: _storage.CommandTimeout)", span="202-209"];
m26_109 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="200-210"];
m26_111 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="200-210"];
m26_120 [cluster="lambda expression", file="JobCreationProcess.cs", label="connection.ExecuteScalar<string>(\r\n                $@''select top (1) Value from [{_storage.SchemaName}].JobParameter with (readcommittedlock) where JobId = @id and Name = @name'',\r\n                new { id = long.Parse(id), name = name },\r\n                commandTimeout: _storage.CommandTimeout)", span="218-221"];
m26_119 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="218-221"];
m26_121 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="218-221"];
m26_128 [cluster="lambda expression", file="JobCreationProcess.cs", label="var result = connection.Query<string>(\r\n                    $@''select Value from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key'',\r\n                    new { key },\r\n                    commandTimeout: _storage.CommandTimeout)", span="230-233"];
m26_127 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="228-236"];
m26_129 [cluster="lambda expression", file="JobCreationProcess.cs", label="return new HashSet<string>(result);", span="235-235"];
m26_130 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="228-236"];
m26_141 [cluster="lambda expression", file="JobCreationProcess.cs", label="connection.ExecuteScalar<string>(\r\n                $@''select top 1 Value from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore },\r\n                commandTimeout: _storage.CommandTimeout)", span="244-247"];
m26_140 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="244-247"];
m26_142 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="244-247"];
m26_153 [cluster="lambda expression", file="JobCreationProcess.cs", label=keyValuePairs, span="264-264"];
m26_154 [cluster="lambda expression", file="JobCreationProcess.cs", label="connection.Execute(\r\n                        sql, \r\n                        new { key = key, field = keyValuePair.Key, value = keyValuePair.Value }, \r\n                        transaction,\r\n                        commandTimeout: _storage.CommandTimeout)", span="266-270"];
m26_152 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="262-272"];
m26_155 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="262-272"];
m26_163 [cluster="lambda expression", file="JobCreationProcess.cs", label="var result = connection.Query<SqlHash>(\r\n                    $''select Field, Value from [{_storage.SchemaName}].Hash with (forceseek, readcommittedlock) where [Key] = @key'',\r\n                    new { key },\r\n                    commandTimeout: _storage.CommandTimeout)\r\n                    .ToDictionary(x => x.Field, x => x.Value)", span="281-285"];
m26_162 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="279-288"];
m26_164 [cluster="lambda expression", file="JobCreationProcess.cs", label="return result.Count != 0 ? result : null;", span="287-287"];
m26_167 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="285-285"];
m26_170 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="285-285"];
m26_165 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="279-288"];
m26_168 [cluster="lambda expression", file="JobCreationProcess.cs", label="x.Field", span="285-285"];
m26_169 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="285-285"];
m26_171 [cluster="lambda expression", file="JobCreationProcess.cs", label="x.Value", span="285-285"];
m26_172 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="285-285"];
m26_183 [cluster="lambda expression", file="JobCreationProcess.cs", label="connection.Execute(\r\n$@'';merge [{_storage.SchemaName}].Server with (holdlock) as Target\r\nusing (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat)\r\non Target.Id = Source.Id\r\nwhen matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat\r\nwhen not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                    new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow },\r\n                    commandTimeout: _storage.CommandTimeout)", span="305-312"];
m26_182 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="303-313"];
m26_184 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="303-313"];
m26_191 [cluster="lambda expression", file="JobCreationProcess.cs", label="connection.Execute(\r\n                    $@''delete from [{_storage.SchemaName}].Server where Id = @id'',\r\n                    new { id = serverId },\r\n                    commandTimeout: _storage.CommandTimeout)", span="322-325"];
m26_190 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="320-326"];
m26_192 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="320-326"];
m26_199 [cluster="lambda expression", file="JobCreationProcess.cs", label="connection.Execute(\r\n                    $@''update [{_storage.SchemaName}].Server set LastHeartbeat = @now where Id = @id'',\r\n                    new { now = DateTime.UtcNow, id = serverId },\r\n                    commandTimeout: _storage.CommandTimeout)", span="335-338"];
m26_198 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="333-339"];
m26_200 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="333-339"];
m26_208 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="349-352"];
m26_209 [cluster="lambda expression", file="JobCreationProcess.cs", label="connection.Execute(\r\n                $@''delete from [{_storage.SchemaName}].Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) },\r\n                commandTimeout: _storage.CommandTimeout)", span="349-352"];
m26_210 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="349-352"];
m26_218 [cluster="lambda expression", file="JobCreationProcess.cs", label="connection.Query<int>(\r\n                $''select count([Key]) from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key'',\r\n                new { key = key },\r\n                commandTimeout: _storage.CommandTimeout).First()", span="359-362"];
m26_217 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="359-362"];
m26_219 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="359-362"];
m26_228 [cluster="lambda expression", file="JobCreationProcess.cs", label="connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 }, commandTimeout: _storage.CommandTimeout)\r\n                .ToList()", span="376-378"];
m26_227 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="376-378"];
m26_229 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="376-378"];
m26_238 [cluster="lambda expression", file="JobCreationProcess.cs", label="var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="389-389"];
m26_237 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="387-393"];
m26_239 [cluster="lambda expression", file="JobCreationProcess.cs", label="!result.HasValue", span="390-390"];
m26_241 [cluster="lambda expression", file="JobCreationProcess.cs", label="return result.Value - DateTime.UtcNow;", span="392-392"];
m26_240 [cluster="lambda expression", file="JobCreationProcess.cs", label="return TimeSpan.FromSeconds(-1);", span="390-390"];
m26_242 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="387-393"];
m26_251 [cluster="lambda expression", file="JobCreationProcess.cs", label="connection.ExecuteScalar<long?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout) ?? 0", span="408-408"];
m26_250 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="407-408"];
m26_252 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="407-408"];
m26_260 [cluster="lambda expression", file="JobCreationProcess.cs", label="connection.ExecuteScalar<long>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="417-417"];
m26_259 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="417-417"];
m26_261 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="417-417"];
m26_269 [cluster="lambda expression", file="JobCreationProcess.cs", label="var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="428-428"];
m26_268 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="426-432"];
m26_270 [cluster="lambda expression", file="JobCreationProcess.cs", label="!result.HasValue", span="429-429"];
m26_272 [cluster="lambda expression", file="JobCreationProcess.cs", label="return result.Value - DateTime.UtcNow;", span="431-431"];
m26_271 [cluster="lambda expression", file="JobCreationProcess.cs", label="return TimeSpan.FromSeconds(-1);", span="429-429"];
m26_273 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="426-432"];
m26_283 [cluster="lambda expression", file="JobCreationProcess.cs", label="connection\r\n                .ExecuteScalar<string>(query, new { key = key, field = name }, commandTimeout: _storage.CommandTimeout)", span="444-445"];
m26_282 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="444-445"];
m26_284 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="444-445"];
m26_292 [cluster="lambda expression", file="JobCreationProcess.cs", label="connection.ExecuteScalar<long>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="456-456"];
m26_291 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="456-456"];
m26_293 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="456-456"];
m26_301 [cluster="lambda expression", file="JobCreationProcess.cs", label="var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="469-469"];
m26_300 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="467-473"];
m26_302 [cluster="lambda expression", file="JobCreationProcess.cs", label="!result.HasValue", span="470-470"];
m26_304 [cluster="lambda expression", file="JobCreationProcess.cs", label="return result.Value - DateTime.UtcNow;", span="472-472"];
m26_303 [cluster="lambda expression", file="JobCreationProcess.cs", label="return TimeSpan.FromSeconds(-1);", span="470-470"];
m26_305 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="467-473"];
m26_313 [cluster="lambda expression", file="JobCreationProcess.cs", label="connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 }, commandTimeout: _storage.CommandTimeout)\r\n                .ToList()", span="487-489"];
m26_312 [cluster="lambda expression", file="JobCreationProcess.cs", label="Entry lambda expression", span="487-489"];
m26_314 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="487-489"];
m26_322 [cluster="lambda expression", file="JobCreationProcess.cs", label="connection.Query<string>(query, new { key = key }, commandTimeout: _storage.CommandTimeout).ToList()", span="501-501"];
m26_323 [cluster="lambda expression", file="JobCreationProcess.cs", label="Exit lambda expression", span="501-501"];
m26_25 [cluster="Unk.Distinct", file="JobCreationProcess.cs", label="Entry Unk.Distinct", span=""];
m26_143 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="250-250"];
m26_144 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JobCreationProcess.cs", label="key == null", span="252-252"];
m26_145 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(key));", span="252-252"];
m26_146 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JobCreationProcess.cs", label="keyValuePairs == null", span="253-253"];
m26_147 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(keyValuePairs));", span="253-253"];
m26_149 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JobCreationProcess.cs", label="_storage.UseTransaction((connection, transaction) =>\r\n            {\r\n                foreach (var keyValuePair in keyValuePairs)\r\n                {\r\n                    connection.Execute(\r\n                        sql, \r\n                        new { key = key, field = keyValuePair.Key, value = keyValuePair.Value }, \r\n                        transaction,\r\n                        commandTimeout: _storage.CommandTimeout);\r\n                }\r\n            })", span="262-272"];
m26_148 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JobCreationProcess.cs", label="string sql =\r\n$@'';merge [{_storage.SchemaName}].Hash with (holdlock) as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="255-260"];
m26_150 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="250-250"];
m26_85 [cluster="Hangfire.Storage.JobData.JobData()", file="JobCreationProcess.cs", label="Entry Hangfire.Storage.JobData.JobData()", span="21-21"];
m26_7 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="41-41"];
m26_8 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="JobCreationProcess.cs", label="return new SqlServerWriteOnlyTransaction(_storage);", span="43-43"];
m26_9 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="41-41"];
m26_220 [cluster="Unk.First", file="JobCreationProcess.cs", label="Entry Unk.First", span=""];
m26_24 [cluster="Unk.Select", file="JobCreationProcess.cs", label="Entry Unk.Select", span=""];
m26_274 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="435-435"];
m26_275 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="JobCreationProcess.cs", label="key == null", span="437-437"];
m26_276 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(key));", span="437-437"];
m26_277 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="JobCreationProcess.cs", label="name == null", span="438-438"];
m26_278 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(name));", span="438-438"];
m26_280 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="JobCreationProcess.cs", label="return _storage.UseConnection(connection => connection\r\n                .ExecuteScalar<string>(query, new { key = key, field = name }, commandTimeout: _storage.CommandTimeout));", span="444-445"];
m26_279 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="JobCreationProcess.cs", label="string query =\r\n$@''select [Value] from [{_storage.SchemaName}].Hash with (readcommittedlock)\r\nwhere [Key] = @key and [Field] = @field''", span="440-442"];
m26_281 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="435-435"];
m26_212 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="355-355"];
m26_213 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="JobCreationProcess.cs", label="key == null", span="357-357"];
m26_214 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(key));", span="357-357"];
m26_215 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="JobCreationProcess.cs", label="return _storage.UseConnection(connection => connection.Query<int>(\r\n                $''select count([Key]) from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key'',\r\n                new { key = key },\r\n                commandTimeout: _storage.CommandTimeout).First());", span="359-362"];
m26_216 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="355-355"];
m26_0 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="35-35"];
m26_1 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="JobCreationProcess.cs", label="storage == null", span="37-37"];
m26_2 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(storage));", span="37-37"];
m26_3 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="JobCreationProcess.cs", label="_storage = storage", span="38-38"];
m26_4 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="35-35"];
m26_207 [cluster="System.ArgumentException.ArgumentException(string, string)", file="JobCreationProcess.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m26_108 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<DbConnection>)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<DbConnection>)", span="170-170"];
m26_230 [cluster="Unk.ToList", file="JobCreationProcess.cs", label="Entry Unk.ToList", span=""];
m26_62 [cluster="Unk.Execute", file="JobCreationProcess.cs", label="Entry Unk.Execute", span=""];
m26_29 [cluster="Unk.GetJobQueue", file="JobCreationProcess.cs", label="Entry Unk.GetJobQueue", span=""];
m26_131 [cluster="HashSet<string>.cstr", file="JobCreationProcess.cs", label="Entry HashSet<string>.cstr", span=""];
m26_45 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<DbConnection, T>)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<DbConnection, T>)", span="179-179"];
m26_122 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="224-224"];
m26_123 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="JobCreationProcess.cs", label="key == null", span="226-226"];
m26_124 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(key));", span="226-226"];
m26_125 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="JobCreationProcess.cs", label="return _storage.UseConnection(connection =>\r\n            {\r\n                var result = connection.Query<string>(\r\n                    $@''select Value from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key'',\r\n                    new { key },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n\r\n                return new HashSet<string>(result);\r\n            });", span="228-236"];
m26_126 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="224-224"];
m26_83 [cluster="Unk.SingleOrDefault", file="JobCreationProcess.cs", label="Entry Unk.SingleOrDefault", span=""];
m26_285 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="448-448"];
m26_286 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="JobCreationProcess.cs", label="key == null", span="450-450"];
m26_287 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="JobCreationProcess.cs", label="throw new ArgumentNullException(nameof(key));", span="450-450"];
m26_289 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="JobCreationProcess.cs", label="return _storage.UseConnection(connection => connection.ExecuteScalar<long>(query, new { key = key }, commandTimeout: _storage.CommandTimeout));", span="456-456"];
m26_288 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="JobCreationProcess.cs", label="string query = \r\n$@''select count([Id]) from [{_storage.SchemaName}].List with (readcommittedlock)\r\nwhere [Key] = @key''", span="452-454"];
m26_290 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="448-448"];
m26_201 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="JobCreationProcess.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="342-342"];
m26_202 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="JobCreationProcess.cs", label="timeOut.Duration() != timeOut", span="344-344"];
m26_203 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="JobCreationProcess.cs", label="throw new ArgumentException(''The `timeOut` value must be positive.'', nameof(timeOut));", span="346-346"];
m26_204 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="JobCreationProcess.cs", label="return _storage.UseConnection(connection => connection.Execute(\r\n                $@''delete from [{_storage.SchemaName}].Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) },\r\n                commandTimeout: _storage.CommandTimeout));", span="349-352"];
m26_205 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="JobCreationProcess.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="342-342"];
m26_324 [file="JobCreationProcess.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m26_325 [file="JobCreationProcess.cs", label="System.DateTime", span=""];
m26_326 [file="JobCreationProcess.cs", label="System.TimeSpan", span=""];
m26_327 [file="JobCreationProcess.cs", label=createJobSql, span=""];
m26_328 [file="JobCreationProcess.cs", label=invocationData, span=""];
m26_329 [file="JobCreationProcess.cs", label="System.Collections.Generic.IDictionary<string, string>", span=""];
m26_330 [file="JobCreationProcess.cs", label=string, span=""];
m26_331 [file="JobCreationProcess.cs", label=sql, span=""];
m26_332 [file="JobCreationProcess.cs", label=string, span=""];
m26_333 [file="JobCreationProcess.cs", label=sql, span=""];
m26_334 [file="JobCreationProcess.cs", label=string, span=""];
m26_335 [file="JobCreationProcess.cs", label=string, span=""];
m26_336 [file="JobCreationProcess.cs", label=string, span=""];
m26_337 [file="JobCreationProcess.cs", label=string, span=""];
m26_338 [file="JobCreationProcess.cs", label=string, span=""];
m26_339 [file="JobCreationProcess.cs", label=string, span=""];
m26_340 [file="JobCreationProcess.cs", label=string, span=""];
m26_341 [file="JobCreationProcess.cs", label=double, span=""];
m26_342 [file="JobCreationProcess.cs", label=double, span=""];
m26_343 [file="JobCreationProcess.cs", label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", span=""];
m26_344 [file="JobCreationProcess.cs", label=string, span=""];
m26_345 [file="JobCreationProcess.cs", label=sql, span=""];
m26_346 [file="JobCreationProcess.cs", label=string, span=""];
m26_347 [file="JobCreationProcess.cs", label=string, span=""];
m26_348 [file="JobCreationProcess.cs", label=data, span=""];
m26_349 [file="JobCreationProcess.cs", label=string, span=""];
m26_350 [file="JobCreationProcess.cs", label=string, span=""];
m26_351 [file="JobCreationProcess.cs", label="System.TimeSpan", span=""];
m26_352 [file="JobCreationProcess.cs", label=string, span=""];
m26_353 [file="JobCreationProcess.cs", label=string, span=""];
m26_354 [file="JobCreationProcess.cs", label=int, span=""];
m26_355 [file="JobCreationProcess.cs", label=int, span=""];
m26_356 [file="JobCreationProcess.cs", label=query, span=""];
m26_357 [file="JobCreationProcess.cs", label=string, span=""];
m26_358 [file="JobCreationProcess.cs", label=query, span=""];
m26_359 [file="JobCreationProcess.cs", label=string, span=""];
m26_360 [file="JobCreationProcess.cs", label=query, span=""];
m26_361 [file="JobCreationProcess.cs", label=string, span=""];
m26_362 [file="JobCreationProcess.cs", label=query, span=""];
m26_363 [file="JobCreationProcess.cs", label=string, span=""];
m26_364 [file="JobCreationProcess.cs", label=query, span=""];
m26_365 [file="JobCreationProcess.cs", label=string, span=""];
m26_366 [file="JobCreationProcess.cs", label=string, span=""];
m26_367 [file="JobCreationProcess.cs", label=query, span=""];
m26_368 [file="JobCreationProcess.cs", label=string, span=""];
m26_369 [file="JobCreationProcess.cs", label=query, span=""];
m26_370 [file="JobCreationProcess.cs", label=string, span=""];
m26_371 [file="JobCreationProcess.cs", label=query, span=""];
m26_372 [file="JobCreationProcess.cs", label=string, span=""];
m26_373 [file="JobCreationProcess.cs", label=int, span=""];
m26_374 [file="JobCreationProcess.cs", label=int, span=""];
m26_375 [file="JobCreationProcess.cs", label=query, span=""];
m26_376 [file="JobCreationProcess.cs", label=string, span=""];
m26_377 [file="JobCreationProcess.cs", label=query, span=""];
m27_81 [cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140"];
m27_71 [cluster="int.TryParse(string, out int)", file="JobCreationProcessFacts.cs", label="Entry int.TryParse(string, out int)", span="0-0"];
m27_73 [cluster="Hangfire.Dashboard.Pager.Pager(int, int, long)", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Dashboard.Pager.Pager(int, int, long)", span="29-29"];
m27_75 [cluster="Hangfire.Storage.IMonitoringApi.DeletedJobs(int, int)", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Storage.IMonitoringApi.DeletedJobs(int, int)", span="36-36"];
m27_79 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="75-75"];
m27_76 [cluster="Hangfire.Dashboard.HtmlHelper.JobsSidebar()", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobsSidebar()", span="46-46"];
m27_80 [cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135"];
m27_68 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="105-105"];
m27_74 [cluster="Hangfire.Storage.IMonitoringApi.DeletedListCount()", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Storage.IMonitoringApi.DeletedListCount()", span="45-45"];
m27_83 [cluster="Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", span="69-69"];
m27_82 [cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145"];
m27_70 [cluster="Hangfire.Dashboard.RazorPage.Query(string)", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Dashboard.RazorPage.Query(string)", span="63-63"];
m27_0 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", span="41-41"];
m27_2 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="JobCreationProcessFacts.cs", label="Layout = new LayoutPage(Strings.DeletedJobsPage_Title)", prediction=74, span="55-55"];
m27_1 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''\r\n'')", span="45-45"];
m27_3 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="JobCreationProcessFacts.cs", label="int from, perPage", prediction=75, span="57-57"];
m27_4 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="int.TryParse(Query(''from''), out from)", span="59-59"];
m27_7 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="JobCreationProcessFacts.cs", label="var pager = new Pager(from, perPage, monitor.DeletedListCount())", prediction=76, span="63-63"];
m27_5 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="int.TryParse(Query(''count''), out perPage)", span="60-60"];
m27_6 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="var monitor = Storage.GetMonitoringApi()", span="62-62"];
m27_8 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="var jobs = monitor.DeletedJobs(pager.FromRecord, pager.RecordsPerPage)", span="64-64"];
m27_14 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="pager.TotalPageCount == 0", span="95-95"];
m27_25 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="Write(Html.PerPageSelector(pager))", span="161-161"];
m27_64 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="Write(Html.Paginator(pager))", span="411-411"];
m27_13 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="JobCreationProcessFacts.cs", label="WriteLiteral(''</h1>\r\n\r\n'')", prediction=77, span="90-90"];
m27_12 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="Write(Strings.DeletedJobsPage_Title)", span="85-85"];
m27_15 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="JobCreationProcessFacts.cs", label="WriteLiteral(''            <div class=\''alert alert-info\''>\r\n                '')", prediction=77, span="101-101"];
m27_16 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="Write(Strings.DeletedJobsPage_NoJobs)", span="106-106"];
m27_17 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="JobCreationProcessFacts.cs", label="WriteLiteral(''\r\n            </div>\r\n'')", prediction=77, span="111-111"];
m27_66 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''    </div>\r\n</div>\r\n\r\n'')", span="426-426"];
m27_22 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="JobCreationProcessFacts.cs", label="WriteLiteral(''\''\r\n                            disabled=\''disabled\''>\r\n                        <spa'' +\r\n''n class=\''glyphicon glyphicon-repeat\''></span>\r\n                        '')", prediction=77, span="145-146"];
m27_21 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="Write(Strings.Common_Enqueueing)", span="140-140"];
m27_23 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="Write(Strings.Common_RequeueJobs)", span="151-151"];
m27_26 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="JobCreationProcessFacts.cs", label="WriteLiteral(@''\r\n                </div>\r\n                <div class=''''table-responsive''''>\r\n                    <table class=''''table''''>\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=''''min-width''''>\r\n                                    <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                                </th>\r\n                                <th class=''''min-width''''>'')", prediction=77, span="166-175"];
m27_27 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="Write(Strings.Common_Id)", span="180-180"];
m27_36 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="JobCreationProcessFacts.cs", label="WriteLiteral('' '')", prediction=77, span="227-227"];
m27_35 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="Write(job.Value == null || !job.Value.InDeletedState ? ''obsolete-data'' : null)", span="222-222"];
m27_37 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="Write(job.Value != null && job.Value.InDeletedState && job.Value != null ? ''hover'' : null)", span="232-232"];
m27_48 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="JobCreationProcessFacts.cs", label="Write(Strings.Common_JobStateChanged_Text)", prediction=77, span="296-296"];
m27_47 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''                                            <span title=\'''')", span="291-291"];
m27_49 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="301-301"];
m27_56 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="JobCreationProcessFacts.cs", label="Write(Html.JobNameLink(job.Key, job.Value.Job))", prediction=77, span="350-350"];
m27_51 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="job.Value == null", span="316-316"];
m27_55 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''                                        <td>\r\n                                   '' +\r\n''         '')", span="344-345"];
m27_57 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''\r\n                                        </td>\r\n'')", span="355-355"];
m27_59 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="job.Value.DeletedAt.HasValue", span="364-364"];
m27_60 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="JobCreationProcessFacts.cs", label="Write(Html.RelativeTime(job.Value.DeletedAt.Value))", prediction=77, span="372-372"];
m27_61 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="JobCreationProcessFacts.cs", label="WriteLiteral(''                                        </td>\r\n'')", prediction=77, span="385-385"];
m27_62 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''                                </tr>\r\n'')", span="395-395"];
m27_9 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''\r\n<div class=\''row\''>\r\n    <div class=\''col-md-3\''>\r\n        '')", span="70-70"];
m27_10 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="Write(Html.JobsSidebar())", span="75-75"];
m27_11 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''\r\n    </div>\r\n    <div class=\''col-md-9\''>\r\n        <h1 class=\''page-header\''>'')", span="80-80"];
m27_18 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''            <div class=\''js-jobs-list\''>\r\n                <div class=\''btn-toolbar b'' +\r\n''tn-toolbar-top\''>\r\n                    <button class=\''js-jobs-list-command btn bt'' +\r\n''n-sm btn-primary\''\r\n                            data-url=\'''')", span="123-125"];
m27_19 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="Write(Url.To(''/jobs/deleted/requeue''))", span="130-130"];
m27_20 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''\''\r\n                            data-loading-text=\'''')", span="135-135"];
m27_24 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''\r\n                    </button>\r\n                    '')", span="156-156"];
m27_28 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''</th>\r\n                                <th>'')", span="185-185"];
m27_29 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="Write(Strings.Common_Job)", span="190-190"];
m27_30 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''</th>\r\n                                <th class=\''align-right\''>'')", span="195-195"];
m27_31 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="Write(Strings.DeletedJobsPage_Table_Deleted)", span="200-200"];
m27_32 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''</th>\r\n                            </tr>\r\n                        </thead>\r\n     '' +\r\n''                   <tbody>\r\n'')", span="205-206"];
m27_34 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''                                <tr class=\''js-jobs-list-row '')", span="217-217"];
m27_38 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''\''>\r\n                                    <td>\r\n'')", span="237-237"];
m27_40 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''                                            <input type=\''checkbox\'' class=\''js-jobs'' +\r\n''-list-checkbox\'' name=\''jobs[]\'' value=\'''')", span="248-249"];
m27_41 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="Write(job.Key)", span="254-254"];
m27_42 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''\'' />\r\n'')", span="259-259"];
m27_43 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''                                    </td>\r\n                                    <t'' +\r\n''d class=\''min-width\''>\r\n                                        '')", span="269-270"];
m27_44 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="Write(Html.JobIdLink(job.Key))", span="275-275"];
m27_45 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''\r\n'')", span="280-280"];
m27_50 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''                                    </td>\r\n\r\n'')", span="311-311"];
m27_52 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''                                        <td colspan=\''2\''><em>'')", span="322-322"];
m27_53 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="Write(Strings.Common_JobExpired)", span="327-327"];
m27_54 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''</em></td>\r\n'')", span="332-332"];
m27_58 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''                                        <td class=\''align-right\''>\r\n'')", span="359-359"];
m27_63 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''                        </tbody>\r\n                    </table>\r\n                <'' +\r\n''/div>\r\n\r\n                '')", span="405-406"];
m27_65 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="WriteLiteral(''\r\n            </div>\r\n'')", span="416-416"];
m27_33 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label=jobs, span="211-211"];
m27_39 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="job.Value == null || job.Value.InDeletedState", span="242-242"];
m27_46 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="job.Value != null && !job.Value.InDeletedState", span="285-285"];
m27_67 [cluster="Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", file="JobCreationProcessFacts.cs", label="Exit Hangfire.Dashboard.Pages.DeletedJobsPage.Execute()", span="41-41"];
m27_72 [cluster="Hangfire.JobStorage.GetMonitoringApi()", file="JobCreationProcessFacts.cs", label="Entry Hangfire.JobStorage.GetMonitoringApi()", span="54-54"];
m27_77 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="113-113"];
m27_78 [cluster="Hangfire.Dashboard.UrlHelper.To(string)", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Dashboard.UrlHelper.To(string)", span="43-43"];
m27_69 [cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="JobCreationProcessFacts.cs", label="Entry Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", span="4-4"];
m27_84 [file="JobCreationProcessFacts.cs", label="Hangfire.Dashboard.Pages.DeletedJobsPage", span=""];
m28_18 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheMethodIsNull()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheMethodIsNull()", span="45-45"];
m28_19 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheMethodIsNull()", file="JobFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new Job(_type, null, _arguments))", span="47-48"];
m28_20 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheMethodIsNull()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheMethodIsNull()", span="45-45"];
m28_315 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", span="374-374"];
m28_316 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="JobFacts.cs", label="var exception = new InvalidOperationException()", span="376-376"];
m28_317 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="JobFacts.cs", label="_activator.Setup(x => x.ActivateJob(It.IsAny<Type>())).Throws(exception)", span="377-377"];
m28_320 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="JobFacts.cs", label="Assert.Same(exception, thrownException.InnerException)", span="384-384"];
m28_318 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="JobFacts.cs", label="var job = Job.FromExpression(() => InstanceMethod())", span="379-379"];
m28_319 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="JobFacts.cs", label="var thrownException = Assert.Throws<JobPerformanceException>(\r\n                () => job.Perform(_activator.Object, _token.Object))", span="381-382"];
m28_321 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", span="374-374"];
m28_336 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="388-388"];
m28_337 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="JobFacts.cs", label="_activator.Setup(x => x.ActivateJob(It.IsNotNull<Type>())).Returns(null)", span="390-390"];
m28_338 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="JobFacts.cs", label="var job = Job.FromExpression(() => InstanceMethod())", span="391-391"];
m28_339 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="JobFacts.cs", label="var thrownException = Assert.Throws<JobPerformanceException>(\r\n                () => job.Perform(_activator.Object, _token.Object))", span="393-394"];
m28_340 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="JobFacts.cs", label="Assert.IsType<InvalidOperationException>(thrownException.InnerException)", span="396-396"];
m28_341 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="388-388"];
m28_361 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", span="410-410"];
m28_362 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="JobFacts.cs", label="_methodInvoked = false", span="412-412"];
m28_363 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="JobFacts.cs", label="var job = Job.FromExpression<BrokenDispose>(x => x.Method())", span="414-414"];
m28_364 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="JobFacts.cs", label="var exception = Assert.Throws<JobPerformanceException>(\r\n                () => job.Perform(_activator.Object, _token.Object))", span="416-417"];
m28_365 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="JobFacts.cs", label="Assert.True(_methodInvoked)", span="419-419"];
m28_366 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="JobFacts.cs", label="Assert.NotNull(exception.InnerException)", span="420-420"];
m28_367 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", span="410-410"];
m28_17 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="JobFacts.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="13-13"];
m28_214 [cluster="Hangfire.Core.Tests.Common.JobFacts.PrivateMethod()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.PrivateMethod()", span="495-495"];
m28_457 [cluster="Hangfire.Core.Tests.Common.JobFacts.PrivateMethod()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.PrivateMethod()", span="495-495"];
m28_385 [cluster="Hangfire.Core.Tests.Common.JobFacts.ExceptionMethod()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.ExceptionMethod()", span="555-555"];
m28_485 [cluster="Hangfire.Core.Tests.Common.JobFacts.ExceptionMethod()", file="JobFacts.cs", label="throw new InvalidOperationException(''exception'');", span="557-557"];
m28_486 [cluster="Hangfire.Core.Tests.Common.JobFacts.ExceptionMethod()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.ExceptionMethod()", span="555-555"];
m28_101 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", span="138-138"];
m28_102 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", file="JobFacts.cs", label="var date = new DateTime(2014, 5, 30, 12, 0, 0, 777)", span="140-140"];
m28_103 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", file="JobFacts.cs", label="var expected = date.ToString(''o'')", span="141-141"];
m28_104 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", file="JobFacts.cs", label="var job = Job.FromExpression(() => MethodWithDateTimeArgument(date))", span="143-143"];
m28_105 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", file="JobFacts.cs", label="Assert.Equal(expected, job.Arguments[0])", span="145-145"];
m28_106 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ConvertsDateTimeRepresentation_ToIso8601Format()", span="138-138"];
m28_480 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithCustomArgument(Hangfire.Core.Tests.Common.JobFacts.Instance)", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.MethodWithCustomArgument(Hangfire.Core.Tests.Common.JobFacts.Instance)", span="544-544"];
m28_481 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithCustomArgument(Hangfire.Core.Tests.Common.JobFacts.Instance)", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.MethodWithCustomArgument(Hangfire.Core.Tests.Common.JobFacts.Instance)", span="544-544"];
m28_137 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", span="172-172"];
m28_138 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", file="JobFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => Job.FromExpression<JobFacts>(null))", span="174-175"];
m28_139 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", file="JobFacts.cs", label="Assert.Equal(''methodCall'', exception.ParamName)", span="177-177"];
m28_140 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", span="172-172"];
m28_352 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", span="400-400"];
m28_353 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", file="JobFacts.cs", label="var type = typeof (JobFacts)", span="402-402"];
m28_354 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", file="JobFacts.cs", label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="403-403"];
m28_355 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", file="JobFacts.cs", label="Assert.Throws<JsonReaderException>(\r\n                () => new Job(type, method, new []{ JobHelper.ToJson(''sdfa'') }))", span="405-406"];
m28_356 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", span="400-400"];
m28_449 [cluster="Unk.NotEqual", file="JobFacts.cs", label="Entry Unk.NotEqual", span=""];
m28_144 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="JobFacts.cs", label="Entry Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="230-230"];
m28_0 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobFacts()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.JobFacts()", span="27-27"];
m28_1 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobFacts()", file="JobFacts.cs", label="_type = typeof (JobFacts)", span="29-29"];
m28_2 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobFacts()", file="JobFacts.cs", label="_method = _type.GetMethod(''StaticMethod'')", span="30-30"];
m28_3 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobFacts()", file="JobFacts.cs", label="_arguments = new string[0]", span="31-31"];
m28_4 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobFacts()", file="JobFacts.cs", label="_activator = new Mock<JobActivator> { CallBase = true }", span="33-33"];
m28_5 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobFacts()", file="JobFacts.cs", label="_token = new Mock<IJobCancellationToken>()", span="34-34"];
m28_6 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobFacts()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.JobFacts()", span="27-27"];
m28_413 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", span="584-584"];
m28_500 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", file="JobFacts.cs", label="return ''Return value'';", span="586-586"];
m28_501 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", span="584-584"];
m28_287 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="327-327"];
m28_288 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="JobFacts.cs", label="_methodInvoked = false", span="330-330"];
m28_289 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="JobFacts.cs", label="var convertedDate = SomeDateTime.ToString(''MM/dd/yyyy HH:mm:ss.ffff'')", span="331-331"];
m28_290 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="JobFacts.cs", label="var type = typeof(JobFacts)", span="333-333"];
m28_292 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="JobFacts.cs", label="var job = new Job(type, method, new[] { convertedDate })", span="336-336"];
m28_291 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="JobFacts.cs", label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="334-334"];
m28_293 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="JobFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="339-339"];
m28_294 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="JobFacts.cs", label="Assert.True(_methodInvoked)", span="342-342"];
m28_295 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="327-327"];
m28_467 [cluster="Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", file="JobFacts.cs", label="Entry Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", span="24-24"];
m28_193 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithReferenceParameter(ref string)", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.MethodWithReferenceParameter(ref string)", span="499-499"];
m28_458 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithReferenceParameter(ref string)", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.MethodWithReferenceParameter(ref string)", span="499-499"];
m28_162 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.Method()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.Method()", span="574-574"];
m28_495 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.Method()", file="JobFacts.cs", label="_methodInvoked = true", span="576-576"];
m28_496 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.Method()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Instance.Method()", span="574-574"];
m28_437 [cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="JobFacts.cs", label="Entry Hangfire.Common.Job.GetMethodFilterAttributes(bool)", span="166-166"];
m28_453 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobClassWrapper<T>.Dispose()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.JobClassWrapper<T>.Dispose()", span="605-605"];
m28_507 [cluster="Hangfire.Core.Tests.Common.JobFacts.JobClassWrapper<T>.Dispose()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.JobClassWrapper<T>.Dispose()", span="605-605"];
m28_266 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", span="293-293"];
m28_267 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="JobFacts.cs", label="_methodInvoked = false", span="296-296"];
m28_268 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="JobFacts.cs", label="var job = Job.FromExpression(() => MethodWithArguments(''hello'', 5))", span="297-297"];
m28_269 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="JobFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="300-300"];
m28_270 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="JobFacts.cs", label="Assert.True(_methodInvoked)", span="303-303"];
m28_271 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", span="293-293"];
m28_172 [cluster="System.IDisposable.Dispose()", file="JobFacts.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m28_376 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", span="424-424"];
m28_377 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="JobFacts.cs", label="var job = Job.FromExpression(() => ExceptionMethod())", span="426-426"];
m28_378 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="JobFacts.cs", label="var thrownException = Assert.Throws<JobPerformanceException>(\r\n                () => job.Perform(_activator.Object, _token.Object))", span="428-429"];
m28_379 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="JobFacts.cs", label="Assert.IsType<InvalidOperationException>(thrownException.InnerException)", span="431-431"];
m28_380 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="JobFacts.cs", label="Assert.Equal(''exception'', thrownException.InnerException.Message)", span="432-432"];
m28_381 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", span="424-424"];
m28_424 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JobFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m28_154 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", span="188-188"];
m28_155 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", file="JobFacts.cs", label="var job = Job.FromExpression<Instance>(x => x.Method())", span="190-190"];
m28_156 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", file="JobFacts.cs", label="Assert.Equal(typeof(Instance), job.Type)", span="192-192"];
m28_157 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", file="JobFacts.cs", label="Assert.Equal(''Method'', job.Method.Name)", span="193-193"];
m28_158 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", span="188-188"];
m28_51 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentCountIsNotEqualToParameterCount()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentCountIsNotEqualToParameterCount()", span="84-84"];
m28_52 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentCountIsNotEqualToParameterCount()", file="JobFacts.cs", label="var exception = Assert.Throws<ArgumentException>(\r\n                () => new Job(_type, _method, new[] { ''hello!'' }))", span="86-87"];
m28_53 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentCountIsNotEqualToParameterCount()", file="JobFacts.cs", label="Assert.Contains(''count'', exception.Message)", span="89-89"];
m28_54 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentCountIsNotEqualToParameterCount()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentCountIsNotEqualToParameterCount()", span="84-84"];
m28_173 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", span="206-206"];
m28_174 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", file="JobFacts.cs", label="IDisposable instance = null", span="208-208"];
m28_175 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", file="JobFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => Job.FromExpression(() => instance.Dispose()))", span="210-211"];
m28_176 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", span="206-206"];
m28_113 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", span="149-149"];
m28_114 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", file="JobFacts.cs", label="var job = Job.FromExpression(() => MethodWithArguments(''123'', 1))", span="151-151"];
m28_115 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", file="JobFacts.cs", label="Assert.Equal(''\''123\'''', job.Arguments[0])", span="153-153"];
m28_116 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", file="JobFacts.cs", label="Assert.Equal(''1'', job.Arguments[1])", span="154-154"];
m28_117 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", span="149-149"];
m28_121 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", span="529-529"];
m28_472 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", file="JobFacts.cs", label="_methodInvoked = true", span="531-531"];
m28_473 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", file="JobFacts.cs", label="Assert.Equal(''hello'', stringArg)", span="533-533"];
m28_474 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", file="JobFacts.cs", label="Assert.Equal(5, intArg)", span="534-534"];
m28_475 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", span="529-529"];
m28_75 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", span="113-113"];
m28_76 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", file="JobFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => Job.FromExpression(null))", span="115-116"];
m28_77 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", file="JobFacts.cs", label="Assert.Equal(''methodCall'', exception.ParamName)", span="118-118"];
m28_78 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", span="113-113"];
m28_68 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", span="104-104"];
m28_69 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", file="JobFacts.cs", label="var method = _type.GetMethod(''AsyncMethod'')", span="106-106"];
m28_70 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", file="JobFacts.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => new Job(_type, method, new string[0]))", span="108-109"];
m28_71 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", span="104-104"];
m28_7 [cluster="System.Type.GetMethod(string)", file="JobFacts.cs", label="Entry System.Type.GetMethod(string)", span="0-0"];
m28_423 [cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", file="JobFacts.cs", label="Entry Hangfire.Common.Job.GetTypeFilterAttributes(bool)", span="159-159"];
m28_204 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithOutputParameter(out string)", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.MethodWithOutputParameter(out string)", span="503-503"];
m28_459 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithOutputParameter(out string)", file="JobFacts.cs", label="a = ''hello''", span="505-505"];
m28_460 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithOutputParameter(out string)", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.MethodWithOutputParameter(out string)", span="503-503"];
m28_112 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", span="548-548"];
m28_482 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", file="JobFacts.cs", label="_methodInvoked = true", span="550-550"];
m28_483 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", file="JobFacts.cs", label="Assert.Equal(SomeDateTime, argument)", span="552-552"];
m28_484 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", span="548-548"];
m28_36 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", span="66-66"];
m28_37 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", file="JobFacts.cs", label="var job = new Job(_type, _method, _arguments)", span="68-68"];
m28_38 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", file="JobFacts.cs", label="Assert.Same(_type, job.Type)", span="70-70"];
m28_39 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", file="JobFacts.cs", label="Assert.Same(_method, job.Method)", span="71-71"];
m28_40 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", file="JobFacts.cs", label="Assert.True(_arguments.SequenceEqual(job.Arguments))", span="72-72"];
m28_41 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldInitializeAllProperties()", span="66-66"];
m28_332 [cluster="Hangfire.Core.Tests.Common.JobFacts.InstanceMethod()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.InstanceMethod()", span="513-513"];
m28_463 [cluster="Hangfire.Core.Tests.Common.JobFacts.InstanceMethod()", file="JobFacts.cs", label="_methodInvoked = true", span="515-515"];
m28_464 [cluster="Hangfire.Core.Tests.Common.JobFacts.InstanceMethod()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.InstanceMethod()", span="513-513"];
m28_372 [cluster="Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Method()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Method()", span="592-592"];
m28_502 [cluster="Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Method()", file="JobFacts.cs", label="_methodInvoked = true", span="594-594"];
m28_503 [cluster="Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Method()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Method()", span="592-592"];
m28_488 [cluster="Hangfire.Core.Tests.Common.JobFacts.GenericMethod<T>(T)", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.GenericMethod<T>(T)", span="560-560"];
m28_489 [cluster="Hangfire.Core.Tests.Common.JobFacts.GenericMethod<T>(T)", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.GenericMethod<T>(T)", span="560-560"];
m28_239 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", span="260-260"];
m28_240 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="JobFacts.cs", label="_methodInvoked = false", span="262-262"];
m28_241 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="JobFacts.cs", label="var job = Job.FromExpression(() => StaticMethod())", span="263-263"];
m28_242 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="JobFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="265-265"];
m28_243 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="JobFacts.cs", label="Assert.True(_methodInvoked)", span="267-267"];
m28_244 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", span="260-260"];
m28_305 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", span="360-360"];
m28_306 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="JobFacts.cs", label="_methodInvoked = false", span="363-363"];
m28_307 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="JobFacts.cs", label="var job = Job.FromExpression(() => NullArgumentMethod(null))", span="364-364"];
m28_308 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="JobFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="367-367"];
m28_309 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="JobFacts.cs", label="Assert.True(_methodInvoked)", span="370-370"];
m28_310 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", span="360-360"];
m28_454 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="488-488"];
m28_14 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="41-41"];
m28_15 [cluster="lambda expression", file="JobFacts.cs", label="new Job(null, _method, _arguments)", span="41-41"];
m28_16 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="41-41"];
m28_21 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="48-48"];
m28_22 [cluster="lambda expression", file="JobFacts.cs", label="new Job(_type, null, _arguments)", span="48-48"];
m28_23 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="48-48"];
m28_27 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="55-55"];
m28_28 [cluster="lambda expression", file="JobFacts.cs", label="new Job(typeof(Job), _method, _arguments)", span="55-55"];
m28_29 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="55-55"];
m28_33 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="62-62"];
m28_34 [cluster="lambda expression", file="JobFacts.cs", label="new Job(_type, _method, null)", span="62-62"];
m28_35 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="62-62"];
m28_56 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="87-87"];
m28_57 [cluster="lambda expression", file="JobFacts.cs", label="new Job(_type, _method, new[] { ''hello!'' })", span="87-87"];
m28_58 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="87-87"];
m28_66 [cluster="lambda expression", file="JobFacts.cs", label="new Job(_type, method, new[] { ''hello!'' })", span="98-98"];
m28_65 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="98-98"];
m28_67 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="98-98"];
m28_73 [cluster="lambda expression", file="JobFacts.cs", label="new Job(_type, method, new string[0])", span="109-109"];
m28_72 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="109-109"];
m28_74 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="109-109"];
m28_79 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="116-116"];
m28_80 [cluster="lambda expression", file="JobFacts.cs", label="Job.FromExpression(null)", span="116-116"];
m28_81 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="116-116"];
m28_86 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="125-125"];
m28_87 [cluster="lambda expression", file="JobFacts.cs", label="Job.FromExpression(() => new JobFacts())", span="125-125"];
m28_88 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="125-125"];
m28_89 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="125-125"];
m28_90 [cluster="lambda expression", file="JobFacts.cs", label="new JobFacts()", span="125-125"];
m28_91 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="125-125"];
m28_97 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="131-131"];
m28_98 [cluster="lambda expression", file="JobFacts.cs", label="Console.WriteLine()", span="131-131"];
m28_99 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="131-131"];
m28_110 [cluster="lambda expression", file="JobFacts.cs", label="MethodWithDateTimeArgument(date)", span="143-143"];
m28_109 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="143-143"];
m28_111 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="143-143"];
m28_118 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="151-151"];
m28_119 [cluster="lambda expression", file="JobFacts.cs", label="MethodWithArguments(''123'', 1)", span="151-151"];
m28_120 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="151-151"];
m28_132 [cluster="lambda expression", file="JobFacts.cs", label="MethodWithDateTimeArgument(date)", span="163-163"];
m28_135 [cluster="lambda expression", file="JobFacts.cs", label="MethodWithDateTimeArgument(date)", span="166-166"];
m28_131 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="163-163"];
m28_134 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="166-166"];
m28_133 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="163-163"];
m28_136 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="166-166"];
m28_141 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="175-175"];
m28_142 [cluster="lambda expression", file="JobFacts.cs", label="Job.FromExpression<JobFacts>(null)", span="175-175"];
m28_143 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="175-175"];
m28_148 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="184-184"];
m28_149 [cluster="lambda expression", file="JobFacts.cs", label="Job.FromExpression<JobFacts>(x => new JobFacts())", span="184-184"];
m28_150 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="184-184"];
m28_151 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="184-184"];
m28_152 [cluster="lambda expression", file="JobFacts.cs", label="new JobFacts()", span="184-184"];
m28_153 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="184-184"];
m28_159 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="190-190"];
m28_160 [cluster="lambda expression", file="JobFacts.cs", label="x.Method()", span="190-190"];
m28_161 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="190-190"];
m28_170 [cluster="lambda expression", file="JobFacts.cs", label="instance.Dispose()", span="200-200"];
m28_169 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="200-200"];
m28_171 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="200-200"];
m28_178 [cluster="lambda expression", file="JobFacts.cs", label="Job.FromExpression(() => instance.Dispose())", span="211-211"];
m28_181 [cluster="lambda expression", file="JobFacts.cs", label="instance.Dispose()", span="211-211"];
m28_177 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="211-211"];
m28_179 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="211-211"];
m28_180 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="211-211"];
m28_182 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="211-211"];
m28_187 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="219-219"];
m28_188 [cluster="lambda expression", file="JobFacts.cs", label="Job.FromExpression(() => MethodWithReferenceParameter(ref test))", span="219-219"];
m28_189 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="219-219"];
m28_190 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="219-219"];
m28_191 [cluster="lambda expression", file="JobFacts.cs", label="MethodWithReferenceParameter(ref test)", span="219-219"];
m28_192 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="219-219"];
m28_198 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="227-227"];
m28_199 [cluster="lambda expression", file="JobFacts.cs", label="Job.FromExpression(() => MethodWithOutputParameter(out test))", span="227-227"];
m28_200 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="227-227"];
m28_201 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="227-227"];
m28_202 [cluster="lambda expression", file="JobFacts.cs", label="MethodWithOutputParameter(out test)", span="227-227"];
m28_203 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="227-227"];
m28_208 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="234-234"];
m28_209 [cluster="lambda expression", file="JobFacts.cs", label="Job.FromExpression(() => PrivateMethod())", span="234-234"];
m28_210 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="234-234"];
m28_211 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="234-234"];
m28_212 [cluster="lambda expression", file="JobFacts.cs", label="PrivateMethod()", span="234-234"];
m28_213 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="234-234"];
m28_220 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="240-240"];
m28_225 [cluster="lambda expression", file="JobFacts.cs", label="job.Perform(null, _token.Object)", span="243-243"];
m28_224 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="243-243"];
m28_221 [cluster="lambda expression", file="JobFacts.cs", label="StaticMethod()", span="240-240"];
m28_222 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="240-240"];
m28_226 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="243-243"];
m28_233 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="251-251"];
m28_237 [cluster="lambda expression", file="JobFacts.cs", label="job.Perform(_activator.Object, null)", span="254-254"];
m28_236 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="254-254"];
m28_234 [cluster="lambda expression", file="JobFacts.cs", label="StaticMethod()", span="251-251"];
m28_235 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="251-251"];
m28_238 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="254-254"];
m28_245 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="263-263"];
m28_246 [cluster="lambda expression", file="JobFacts.cs", label="StaticMethod()", span="263-263"];
m28_247 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="263-263"];
m28_254 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="274-274"];
m28_255 [cluster="lambda expression", file="JobFacts.cs", label="x.Method()", span="274-274"];
m28_256 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="274-274"];
m28_263 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="285-285"];
m28_264 [cluster="lambda expression", file="JobFacts.cs", label="x.Method()", span="285-285"];
m28_265 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="285-285"];
m28_272 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="297-297"];
m28_273 [cluster="lambda expression", file="JobFacts.cs", label="MethodWithArguments(''hello'', 5)", span="297-297"];
m28_274 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="297-297"];
m28_302 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="350-350"];
m28_303 [cluster="lambda expression", file="JobFacts.cs", label="MethodWithDateTimeArgument(SomeDateTime)", span="350-350"];
m28_304 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="350-350"];
m28_311 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="364-364"];
m28_312 [cluster="lambda expression", file="JobFacts.cs", label="NullArgumentMethod(null)", span="364-364"];
m28_313 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="364-364"];
m28_325 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="377-377"];
m28_329 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="379-379"];
m28_334 [cluster="lambda expression", file="JobFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="382-382"];
m28_333 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="382-382"];
m28_326 [cluster="lambda expression", file="JobFacts.cs", label="x.ActivateJob(It.IsAny<Type>())", span="377-377"];
m28_327 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="377-377"];
m28_330 [cluster="lambda expression", file="JobFacts.cs", label="InstanceMethod()", span="379-379"];
m28_331 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="379-379"];
m28_335 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="382-382"];
m28_343 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="390-390"];
m28_346 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="391-391"];
m28_350 [cluster="lambda expression", file="JobFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="394-394"];
m28_349 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="394-394"];
m28_344 [cluster="lambda expression", file="JobFacts.cs", label="x.ActivateJob(It.IsNotNull<Type>())", span="390-390"];
m28_345 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="390-390"];
m28_347 [cluster="lambda expression", file="JobFacts.cs", label="InstanceMethod()", span="391-391"];
m28_348 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="391-391"];
m28_351 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="394-394"];
m28_358 [cluster="lambda expression", file="JobFacts.cs", label="new Job(type, method, new []{ JobHelper.ToJson(''sdfa'') })", span="406-406"];
m28_357 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="406-406"];
m28_359 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="406-406"];
m28_369 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="414-414"];
m28_374 [cluster="lambda expression", file="JobFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="417-417"];
m28_373 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="417-417"];
m28_370 [cluster="lambda expression", file="JobFacts.cs", label="x.Method()", span="414-414"];
m28_371 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="414-414"];
m28_375 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="417-417"];
m28_382 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="426-426"];
m28_387 [cluster="lambda expression", file="JobFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="429-429"];
m28_386 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="429-429"];
m28_383 [cluster="lambda expression", file="JobFacts.cs", label="ExceptionMethod()", span="426-426"];
m28_384 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="426-426"];
m28_388 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="429-429"];
m28_394 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="439-439"];
m28_403 [cluster="lambda expression", file="JobFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="444-444"];
m28_398 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="440-440"];
m28_402 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="444-444"];
m28_395 [cluster="lambda expression", file="JobFacts.cs", label="CancelableJob(JobCancellationToken.Null)", span="439-439"];
m28_396 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="439-439"];
m28_399 [cluster="lambda expression", file="JobFacts.cs", label="x.ThrowIfCancellationRequested()", span="440-440"];
m28_400 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="440-440"];
m28_404 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="444-444"];
m28_410 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="450-450"];
m28_411 [cluster="lambda expression", file="JobFacts.cs", label="x.FunctionReturningValue()", span="450-450"];
m28_412 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="450-450"];
m28_425 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="459-459"];
m28_426 [cluster="lambda expression", file="JobFacts.cs", label="x.Method()", span="459-459"];
m28_427 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="459-459"];
m28_438 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="473-473"];
m28_439 [cluster="lambda expression", file="JobFacts.cs", label="x.Method()", span="473-473"];
m28_440 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="473-473"];
m28_450 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="487-487"];
m28_451 [cluster="lambda expression", file="JobFacts.cs", label="x.Dispose()", span="487-487"];
m28_452 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="487-487"];
m28_455 [cluster="lambda expression", file="JobFacts.cs", label="x.Dispose()", span="488-488"];
m28_456 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="488-488"];
m28_183 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", span="215-215"];
m28_184 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", file="JobFacts.cs", label="string test = null", span="217-217"];
m28_185 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", file="JobFacts.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => Job.FromExpression(() => MethodWithReferenceParameter(ref test)))", span="218-219"];
m28_186 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", span="215-215"];
m28_296 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", span="346-346"];
m28_297 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="JobFacts.cs", label="_methodInvoked = false", span="349-349"];
m28_298 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="JobFacts.cs", label="var job = Job.FromExpression(() => MethodWithDateTimeArgument(SomeDateTime))", span="350-350"];
m28_299 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="JobFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="353-353"];
m28_300 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="JobFacts.cs", label="Assert.True(_methodInvoked)", span="356-356"];
m28_301 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", span="346-346"];
m28_8 [cluster="Mock<JobActivator>.cstr", file="JobFacts.cs", label="Entry Mock<JobActivator>.cstr", span=""];
m28_223 [cluster="Hangfire.Core.Tests.Common.JobFacts.StaticMethod()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.StaticMethod()", span="508-508"];
m28_461 [cluster="Hangfire.Core.Tests.Common.JobFacts.StaticMethod()", file="JobFacts.cs", label="_methodInvoked = true", span="510-510"];
m28_462 [cluster="Hangfire.Core.Tests.Common.JobFacts.StaticMethod()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.StaticMethod()", span="508-508"];
m28_497 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.Dispose()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.Dispose()", span="579-579"];
m28_498 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.Dispose()", file="JobFacts.cs", label="_disposed = true", span="581-581"];
m28_499 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.Dispose()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Instance.Dispose()", span="579-579"];
m28_342 [cluster="Unk.Returns", file="JobFacts.cs", label="Entry Unk.Returns", span=""];
m28_82 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="187-187"];
m28_30 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentsArrayIsNull()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentsArrayIsNull()", span="59-59"];
m28_31 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentsArrayIsNull()", file="JobFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new Job(_type, _method, null))", span="61-62"];
m28_32 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentsArrayIsNull()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentsArrayIsNull()", span="59-59"];
m28_10 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeIsNull()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeIsNull()", span="38-38"];
m28_11 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeIsNull()", file="JobFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new Job(null, _method, _arguments))", span="40-41"];
m28_12 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeIsNull()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeIsNull()", span="38-38"];
m28_108 [cluster="System.DateTime.ToString(string)", file="JobFacts.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m28_64 [cluster="Unk.Equal", file="JobFacts.cs", label="Entry Unk.Equal", span=""];
m28_322 [cluster="System.InvalidOperationException.InvalidOperationException()", file="JobFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m28_92 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldReturnTheJob()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldReturnTheJob()", span="129-129"];
m28_93 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldReturnTheJob()", file="JobFacts.cs", label="var job = Job.FromExpression(() => Console.WriteLine())", span="131-131"];
m28_94 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldReturnTheJob()", file="JobFacts.cs", label="Assert.Equal(typeof(Console), job.Type)", span="133-133"];
m28_95 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldReturnTheJob()", file="JobFacts.cs", label="Assert.Equal(''WriteLine'', job.Method.Name)", span="134-134"];
m28_96 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldReturnTheJob()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldReturnTheJob()", span="129-129"];
m28_45 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", span="76-76"];
m28_46 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", file="JobFacts.cs", label="var job = new Job(_type, _method)", span="78-78"];
m28_47 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", file="JobFacts.cs", label="Assert.Empty(job.Arguments)", span="80-80"];
m28_48 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", span="76-76"];
m28_215 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", span="238-238"];
m28_216 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", file="JobFacts.cs", label="var job = Job.FromExpression(() => StaticMethod())", span="240-240"];
m28_217 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", file="JobFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => job.Perform(null, _token.Object))", span="242-243"];
m28_218 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", file="JobFacts.cs", label="Assert.Equal(''activator'', exception.ParamName)", span="245-245"];
m28_219 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", span="238-238"];
m28_107 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int)", file="JobFacts.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int)", span="0-0"];
m28_487 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JobFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m28_414 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", span="457-457"];
m28_415 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="JobFacts.cs", label="var job = Job.FromExpression<Instance>(x => x.Method())", span="459-459"];
m28_416 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="JobFacts.cs", label="var nonCachedAttributes = job.GetTypeFilterAttributes(false).ToArray()", span="460-460"];
m28_417 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="JobFacts.cs", label="var cachedAttributes = job.GetTypeFilterAttributes(true).ToArray()", span="461-461"];
m28_418 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="JobFacts.cs", label="Assert.Equal(1, nonCachedAttributes.Length)", span="463-463"];
m28_420 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="JobFacts.cs", label="Assert.True(nonCachedAttributes[0] is TestTypeAttribute)", span="466-466"];
m28_419 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="JobFacts.cs", label="Assert.Equal(1, cachedAttributes.Length)", span="464-464"];
m28_421 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="JobFacts.cs", label="Assert.True(cachedAttributes[0] is TestTypeAttribute)", span="467-467"];
m28_422 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", span="457-457"];
m28_368 [cluster="Unk.NotNull", file="JobFacts.cs", label="Entry Unk.NotNull", span=""];
m28_494 [cluster="System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource()", file="JobFacts.cs", label="Entry System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource()", span="0-0"];
m28_323 [cluster="Unk.Setup", file="JobFacts.cs", label="Entry Unk.Setup", span=""];
m28_504 [cluster="Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Dispose()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Dispose()", span="597-597"];
m28_505 [cluster="Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Dispose()", file="JobFacts.cs", label="throw new InvalidOperationException();", span="599-599"];
m28_506 [cluster="Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Dispose()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Dispose()", span="597-597"];
m28_471 [cluster="Unk.Null", file="JobFacts.cs", label="Entry Unk.Null", span=""];
m28_360 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="JobFacts.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m28_428 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", span="471-471"];
m28_429 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="JobFacts.cs", label="var job = Job.FromExpression<Instance>(x => x.Method())", span="473-473"];
m28_430 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="JobFacts.cs", label="var nonCachedAttributes = job.GetMethodFilterAttributes(false).ToArray()", span="474-474"];
m28_431 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="JobFacts.cs", label="var cachedAttributes = job.GetMethodFilterAttributes(true).ToArray()", span="475-475"];
m28_432 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="JobFacts.cs", label="Assert.Equal(1, nonCachedAttributes.Length)", span="477-477"];
m28_434 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="JobFacts.cs", label="Assert.True(nonCachedAttributes[0] is TestMethodAttribute)", span="480-480"];
m28_433 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="JobFacts.cs", label="Assert.Equal(1, cachedAttributes.Length)", span="478-478"];
m28_435 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="JobFacts.cs", label="Assert.True(cachedAttributes[0] is TestMethodAttribute)", span="481-481"];
m28_436 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", span="471-471"];
m28_314 [cluster="Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", span="523-523"];
m28_468 [cluster="Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", file="JobFacts.cs", label="_methodInvoked = true", span="525-525"];
m28_469 [cluster="Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", file="JobFacts.cs", label="Assert.Null(argument)", span="526-526"];
m28_470 [cluster="Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", span="523-523"];
m28_83 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ThrowsAnException_WhenNewExpressionIsGiven()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ThrowsAnException_WhenNewExpressionIsGiven()", span="122-122"];
m28_84 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ThrowsAnException_WhenNewExpressionIsGiven()", file="JobFacts.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => Job.FromExpression(() => new JobFacts()))", span="124-125"];
m28_85 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ThrowsAnException_WhenNewExpressionIsGiven()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ThrowsAnException_WhenNewExpressionIsGiven()", span="122-122"];
m28_9 [cluster="Mock<IJobCancellationToken>.cstr", file="JobFacts.cs", label="Entry Mock<IJobCancellationToken>.cstr", span=""];
m28_168 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.Instance()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.Instance()", span="571-571"];
m28_205 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodIsNotPublic()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodIsNotPublic()", span="231-231"];
m28_206 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodIsNotPublic()", file="JobFacts.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => Job.FromExpression(() => PrivateMethod()))", span="233-234"];
m28_207 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodIsNotPublic()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodIsNotPublic()", span="231-231"];
m28_50 [cluster="Unk.Empty", file="JobFacts.cs", label="Entry Unk.Empty", span=""];
m28_397 [cluster="Hangfire.Core.Tests.Common.JobFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="518-518"];
m28_465 [cluster="Hangfire.Core.Tests.Common.JobFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="JobFacts.cs", label="token.ThrowIfCancellationRequested()", span="520-520"];
m28_466 [cluster="Hangfire.Core.Tests.Common.JobFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="518-518"];
m28_228 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", span="249-249"];
m28_229 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", file="JobFacts.cs", label="var job = Job.FromExpression(() => StaticMethod())", span="251-251"];
m28_230 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", file="JobFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => job.Perform(_activator.Object, null))", span="253-254"];
m28_231 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", file="JobFacts.cs", label="Assert.Equal(''cancellationToken'', exception.ParamName)", span="256-256"];
m28_232 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", span="249-249"];
m28_49 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", file="JobFacts.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", span="100-100"];
m28_194 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", span="223-223"];
m28_195 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", file="JobFacts.cs", label="string test", span="225-225"];
m28_196 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", file="JobFacts.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => Job.FromExpression(() => MethodWithOutputParameter(out test)))", span="226-227"];
m28_197 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", span="223-223"];
m28_248 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", span="271-271"];
m28_249 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="JobFacts.cs", label="_methodInvoked = false", span="273-273"];
m28_250 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="JobFacts.cs", label="var job = Job.FromExpression<Instance>(x => x.Method())", span="274-274"];
m28_251 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="JobFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="276-276"];
m28_252 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="JobFacts.cs", label="Assert.True(_methodInvoked)", span="278-278"];
m28_253 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", span="271-271"];
m28_42 [cluster="Unk.Same", file="JobFacts.cs", label="Entry Unk.Same", span=""];
m28_286 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="JobFacts.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
m28_122 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", span="158-158"];
m28_123 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="JobFacts.cs", label="var date = DateTime.UtcNow", span="160-160"];
m28_124 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="JobFacts.cs", label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''en-US'')", span="162-162"];
m28_125 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="JobFacts.cs", label="var enJob = Job.FromExpression(() => MethodWithDateTimeArgument(date))", span="163-163"];
m28_127 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="JobFacts.cs", label="var ruJob = Job.FromExpression(() => MethodWithDateTimeArgument(date))", span="166-166"];
m28_126 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="JobFacts.cs", label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''ru-RU'')", span="165-165"];
m28_128 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="JobFacts.cs", label="Assert.Equal(enJob.Arguments[0], ruJob.Arguments[0])", span="168-168"];
m28_129 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", span="158-158"];
m28_441 [cluster="Hangfire.Core.Tests.Common.JobFacts.Jobs_With_Generics_Have_Different_Ids()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Jobs_With_Generics_Have_Different_Ids()", span="485-485"];
m28_442 [cluster="Hangfire.Core.Tests.Common.JobFacts.Jobs_With_Generics_Have_Different_Ids()", file="JobFacts.cs", label="var job1 = Job.FromExpression<JobClassWrapper<Instance>>(x => x.Dispose())", span="487-487"];
m28_443 [cluster="Hangfire.Core.Tests.Common.JobFacts.Jobs_With_Generics_Have_Different_Ids()", file="JobFacts.cs", label="var job2 = Job.FromExpression<JobClassWrapper<BrokenDispose>>(x => x.Dispose())", span="488-488"];
m28_444 [cluster="Hangfire.Core.Tests.Common.JobFacts.Jobs_With_Generics_Have_Different_Ids()", file="JobFacts.cs", label="var id1 = job1.ToString()", span="489-489"];
m28_445 [cluster="Hangfire.Core.Tests.Common.JobFacts.Jobs_With_Generics_Have_Different_Ids()", file="JobFacts.cs", label="var id2 = job2.ToString()", span="490-490"];
m28_446 [cluster="Hangfire.Core.Tests.Common.JobFacts.Jobs_With_Generics_Have_Different_Ids()", file="JobFacts.cs", label="Assert.NotEqual(id1, id2)", span="492-492"];
m28_447 [cluster="Hangfire.Core.Tests.Common.JobFacts.Jobs_With_Generics_Have_Different_Ids()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Jobs_With_Generics_Have_Different_Ids()", span="485-485"];
m28_13 [cluster="Unk.>", file="JobFacts.cs", label="Entry Unk.>", span=""];
m28_401 [cluster="Unk.ThrowIfCancellationRequested", file="JobFacts.cs", label="Entry Unk.ThrowIfCancellationRequested", span=""];
m28_163 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", span="197-197"];
m28_164 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", file="JobFacts.cs", label="IDisposable instance = new Instance()", span="199-199"];
m28_165 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", file="JobFacts.cs", label="var job = Job.FromExpression(() => instance.Dispose())", span="200-200"];
m28_166 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", file="JobFacts.cs", label="Assert.Equal(typeof(Instance), job.Type)", span="202-202"];
m28_167 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", span="197-197"];
m28_24 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", span="52-52"];
m28_25 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", file="JobFacts.cs", label="Assert.Throws<ArgumentException>(\r\n                () => new Job(typeof(Job), _method, _arguments))", span="54-55"];
m28_26 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", span="52-52"];
m28_145 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ThrowsAnException_WhenNewExpressionIsGiven()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ThrowsAnException_WhenNewExpressionIsGiven()", span="181-181"];
m28_146 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ThrowsAnException_WhenNewExpressionIsGiven()", file="JobFacts.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => Job.FromExpression<JobFacts>(x => new JobFacts()))", span="183-184"];
m28_147 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ThrowsAnException_WhenNewExpressionIsGiven()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ThrowsAnException_WhenNewExpressionIsGiven()", span="181-181"];
m28_285 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="JobFacts.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m28_43 [cluster="Unk.SequenceEqual", file="JobFacts.cs", label="Entry Unk.SequenceEqual", span=""];
m28_257 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", span="282-282"];
m28_258 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="JobFacts.cs", label="_disposed = false", span="284-284"];
m28_259 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="JobFacts.cs", label="var job = Job.FromExpression<Instance>(x => x.Method())", span="285-285"];
m28_260 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="JobFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="287-287"];
m28_261 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="JobFacts.cs", label="Assert.True(_disposed)", span="289-289"];
m28_262 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", span="282-282"];
m28_324 [cluster="Unk.Throws", file="JobFacts.cs", label="Entry Unk.Throws", span=""];
m28_227 [cluster="Unk.Perform", file="JobFacts.cs", label="Entry Unk.Perform", span=""];
m28_275 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="307-307"];
m28_276 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="JobFacts.cs", label="_methodInvoked = false", span="310-310"];
m28_277 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="JobFacts.cs", label="var typeConverter = TypeDescriptor.GetConverter(typeof (DateTime))", span="311-311"];
m28_278 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="JobFacts.cs", label="var convertedDate = typeConverter.ConvertToInvariantString(SomeDateTime)", span="312-312"];
m28_279 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="JobFacts.cs", label="var type = typeof (JobFacts)", span="314-314"];
m28_281 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="JobFacts.cs", label="var job = new Job(type, method, new[] { convertedDate })", span="317-317"];
m28_280 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="JobFacts.cs", label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="315-315"];
m28_282 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="JobFacts.cs", label="job.Perform(_activator.Object, _token.Object)", span="320-320"];
m28_283 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="JobFacts.cs", label="Assert.True(_methodInvoked)", span="323-323"];
m28_284 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="307-307"];
m28_476 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithObjectArgument(object)", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.MethodWithObjectArgument(object)", span="537-537"];
m28_477 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithObjectArgument(object)", file="JobFacts.cs", label="_methodInvoked = true", span="539-539"];
m28_478 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithObjectArgument(object)", file="JobFacts.cs", label="Assert.Equal(''5'', argument)", span="541-541"];
m28_479 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithObjectArgument(object)", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.MethodWithObjectArgument(object)", span="537-537"];
m28_389 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="436-436"];
m28_390 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="JobFacts.cs", label="var job = Job.FromExpression(() => CancelableJob(JobCancellationToken.Null))", span="439-439"];
m28_391 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="JobFacts.cs", label="_token.Setup(x => x.ThrowIfCancellationRequested()).Throws<OperationCanceledException>()", span="440-440"];
m28_392 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="JobFacts.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => job.Perform(_activator.Object, _token.Object))", span="443-444"];
m28_393 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="436-436"];
m28_55 [cluster="Unk.Contains", file="JobFacts.cs", label="Entry Unk.Contains", span=""];
m28_328 [cluster="Unk.ActivateJob", file="JobFacts.cs", label="Entry Unk.ActivateJob", span=""];
m28_44 [cluster="Unk.True", file="JobFacts.cs", label="Entry Unk.True", span=""];
m28_59 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", span="93-93"];
m28_60 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", file="JobFacts.cs", label="var method = _type.GetMethod(''GenericMethod'')", span="95-95"];
m28_63 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", span="93-93"];
m28_448 [cluster="Hangfire.Common.Job.ToString()", file="JobFacts.cs", label="Entry Hangfire.Common.Job.ToString()", span="154-154"];
m28_490 [cluster="Hangfire.Core.Tests.Common.JobFacts.AsyncMethod()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.AsyncMethod()", span="564-564"];
m28_491 [cluster="Hangfire.Core.Tests.Common.JobFacts.AsyncMethod()", file="JobFacts.cs", label="var source = new TaskCompletionSource<bool>()", span="566-566"];
m28_492 [cluster="Hangfire.Core.Tests.Common.JobFacts.AsyncMethod()", file="JobFacts.cs", label="return source.Task;", span="567-567"];
m28_493 [cluster="Hangfire.Core.Tests.Common.JobFacts.AsyncMethod()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.AsyncMethod()", span="564-564"];
m28_130 [cluster="System.Globalization.CultureInfo.GetCultureInfo(string)", file="JobFacts.cs", label="Entry System.Globalization.CultureInfo.GetCultureInfo(string)", span="0-0"];
m28_100 [cluster="System.Console.WriteLine()", file="JobFacts.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m28_405 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", file="JobFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", span="448-448"];
m28_406 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", file="JobFacts.cs", label="var job = Job.FromExpression<Instance>(x => x.FunctionReturningValue())", span="450-450"];
m28_407 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", file="JobFacts.cs", label="var result = job.Perform(_activator.Object, _token.Object)", span="452-452"];
m28_408 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", file="JobFacts.cs", label="Assert.Equal(''Return value'', result)", span="454-454"];
m28_409 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", file="JobFacts.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", span="448-448"];
m28_508 [file="JobFacts.cs", label="Hangfire.Core.Tests.Common.JobFacts", span=""];
m28_509 [file="JobFacts.cs", label=method, span=""];
m28_510 [file="JobFacts.cs", label=method, span=""];
m28_511 [file="JobFacts.cs", label=date, span=""];
m28_512 [file="JobFacts.cs", label=date, span=""];
m28_513 [file="JobFacts.cs", label=instance, span=""];
m28_514 [file="JobFacts.cs", label=instance, span=""];
m28_515 [file="JobFacts.cs", label=test, span=""];
m28_516 [file="JobFacts.cs", label=job, span=""];
m28_517 [file="JobFacts.cs", label=job, span=""];
m28_518 [file="JobFacts.cs", label=job, span=""];
m28_519 [file="JobFacts.cs", label=job, span=""];
m28_520 [file="JobFacts.cs", label=type, span=""];
m28_521 [file="JobFacts.cs", label=method, span=""];
m28_522 [file="JobFacts.cs", label=job, span=""];
m28_523 [file="JobFacts.cs", label=job, span=""];
m28_524 [file="JobFacts.cs", label=job, span=""];
m29_22 [cluster="Hangfire.Server.JobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="JobPerformanceProcess.cs", label=Exception, span="71-71"];
m29_23 [cluster="Hangfire.Server.JobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="JobPerformanceProcess.cs", label="var exceptionContext = new ServerExceptionContext(context, ex)", span="73-73"];
m29_24 [cluster="Hangfire.Server.JobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="JobPerformanceProcess.cs", label="InvokeServerExceptionFilters(exceptionContext, filterInfo.ServerExceptionFilters)", span="74-74"];
m29_11 [cluster="Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess(Hangfire.Common.IJobFilterProvider, Hangfire.Server.IJobPerformanceProcess)", file="JobPerformanceProcess.cs", label="_filterProvider = filterProvider", span="53-53"];
m29_15 [cluster="System.Func<TResult>.Invoke()", file="JobPerformanceProcess.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m29_16 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", file="JobPerformanceProcess.cs", label="Entry HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", span="40-40"];
m29_18 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", file="JobPerformanceProcess.cs", label="var id = GetRecurringJobId(job)", span="43-43"];
m29_19 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", file="JobPerformanceProcess.cs", label="Instance.Value.AddOrUpdate(id, job, cronExpression)", span="45-45"];
m29_17 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", color=green, community=0, file="JobPerformanceProcess.cs", label="var job = Job.FromExpression(methodCall)", prediction=87, span="42-42"];
m29_20 [cluster="HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", file="JobPerformanceProcess.cs", label="Exit HangFire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", span="40-40"];
m29_21 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="JobPerformanceProcess.cs", label="Entry HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="144-144"];
m29_25 [cluster="HangFire.RecurringJob.GetRecurringJobId(HangFire.Common.Job)", file="JobPerformanceProcess.cs", label="return String.Format(''{0}.{1}'', job.Type.FullName, job.Method.Name);", span="55-55"];
m29_26 [cluster="HangFire.RecurringJob.GetRecurringJobId(HangFire.Common.Job)", file="JobPerformanceProcess.cs", label="Exit HangFire.RecurringJob.GetRecurringJobId(HangFire.Common.Job)", span="53-53"];
m29_27 [cluster="string.Format(string, object, object)", file="JobPerformanceProcess.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m29_28 [cluster="Hangfire.Server.JobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="JobPerformanceProcess.cs", label="Exit Hangfire.Server.JobPerformanceProcess.Run(Hangfire.Server.PerformContext)", span="57-57"];
m29_44 [cluster="Hangfire.Server.PerformingContext.PerformingContext(Hangfire.Server.PerformContext)", file="JobPerformanceProcess.cs", label="Entry Hangfire.Server.PerformingContext.PerformingContext(Hangfire.Server.PerformContext)", span="24-24"];
m29_45 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="JobPerformanceProcess.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m29_93 [cluster="Hangfire.Server.IServerExceptionFilter.OnServerException(Hangfire.Server.ServerExceptionContext)", file="JobPerformanceProcess.cs", label="Entry Hangfire.Server.IServerExceptionFilter.OnServerException(Hangfire.Server.ServerExceptionContext)", span="27-27"];
m29_36 [cluster="Hangfire.Common.IJobFilterProvider.GetFilters(Hangfire.Common.Job)", file="JobPerformanceProcess.cs", label="Entry Hangfire.Common.IJobFilterProvider.GetFilters(Hangfire.Common.Job)", span="32-32"];
m29_86 [cluster="Hangfire.Server.IServerFilter.OnPerforming(Hangfire.Server.PerformingContext)", file="JobPerformanceProcess.cs", label="Entry Hangfire.Server.IServerFilter.OnPerforming(Hangfire.Server.PerformingContext)", span="27-27"];
m29_32 [cluster="Hangfire.Server.JobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", file="JobPerformanceProcess.cs", label="Entry Hangfire.Server.JobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", span="185-185"];
m29_90 [cluster="Hangfire.Server.JobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", file="JobPerformanceProcess.cs", label="filters.Reverse()", span="189-189"];
m29_91 [cluster="Hangfire.Server.JobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", file="JobPerformanceProcess.cs", label="filter.OnServerException(context)", span="191-191"];
m29_92 [cluster="Hangfire.Server.JobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", file="JobPerformanceProcess.cs", label="Exit Hangfire.Server.JobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", span="185-185"];
m29_47 [cluster="Unk.thunk", file="JobPerformanceProcess.cs", label="Entry Unk.thunk", span=""];
m29_52 [cluster="Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="JobPerformanceProcess.cs", label="Entry Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", span="20-20"];
m29_4 [cluster="HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, string)", file="JobPerformanceProcess.cs", label="Entry HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, string)", span="27-27"];
m29_5 [cluster="HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, string)", color=green, community=0, file="JobPerformanceProcess.cs", label="var job = Job.FromExpression(methodCall)", prediction=88, span="29-29"];
m29_59 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label="Entry Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", span="109-109"];
m29_60 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label="filter.OnPerforming(preContext)", span="116-116"];
m29_65 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label="preContext.Canceled", span="129-129"];
m29_66 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label="return new PerformedContext(\r\n                    preContext, null, true, null);", span="131-132"];
m29_69 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label="postContext = continuation()", span="139-139"];
m29_72 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label="postContext = new PerformedContext(\r\n                    preContext, null, false, ex)", span="144-145"];
m29_73 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label="filter.OnPerformed(postContext)", span="149-149"];
m29_79 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label="filter.OnPerformed(postContext)", span="168-168"];
m29_61 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label=OperationCanceledException, span="118-118"];
m29_63 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label=Exception, span="122-122"];
m29_62 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label="throw;", span="120-120"];
m29_64 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occurred during execution of one of the filters'',\r\n                    filterException);", span="124-126"];
m29_67 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label="var wasError = false", span="135-135"];
m29_68 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label="PerformedContext postContext", span="136-136"];
m29_70 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label=Exception, span="141-141"];
m29_78 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label="!wasError", span="164-164"];
m29_71 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label="wasError = true", span="143-143"];
m29_76 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label="!postContext.ExceptionHandled", span="158-158"];
m29_84 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label="return postContext;", span="182-182"];
m29_74 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label=Exception, span="151-151"];
m29_75 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label="throw new JobPerformanceException(\r\n                        ''An exception occurred during execution of one of the filters'',\r\n                        filterException);", span="153-155"];
m29_77 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label="throw;", span="160-160"];
m29_80 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label=OperationCanceledException, span="170-170"];
m29_82 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label=Exception, span="174-174"];
m29_81 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label="throw;", span="172-172"];
m29_83 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label="throw new JobPerformanceException(\r\n                        ''An exception occurred during execution of one of the filters'',\r\n                        filterException);", span="176-178"];
m29_85 [cluster="Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", file="JobPerformanceProcess.cs", label="Exit Hangfire.Server.JobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", span="109-109"];
m29_31 [cluster="Hangfire.Server.ServerExceptionContext.ServerExceptionContext(Hangfire.Server.PerformContext, System.Exception)", file="JobPerformanceProcess.cs", label="Entry Hangfire.Server.ServerExceptionContext.ServerExceptionContext(Hangfire.Server.PerformContext, System.Exception)", span="26-26"];
m29_46 [cluster="Unk.Aggregate", file="JobPerformanceProcess.cs", label="Entry Unk.Aggregate", span=""];
m29_13 [cluster="Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess(Hangfire.Common.IJobFilterProvider, Hangfire.Server.IJobPerformanceProcess)", file="JobPerformanceProcess.cs", label="Exit Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess(Hangfire.Common.IJobFilterProvider, Hangfire.Server.IJobPerformanceProcess)", span="46-46"];
m29_14 [cluster="HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", file="JobPerformanceProcess.cs", label="Exit HangFire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", span="35-35"];
m29_2 [cluster="Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess(Hangfire.Common.IJobFilterProvider)", file="JobPerformanceProcess.cs", label="Entry Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess(Hangfire.Common.IJobFilterProvider)", span="34-34"];
m29_3 [cluster="Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess(Hangfire.Common.IJobFilterProvider)", file="JobPerformanceProcess.cs", label="Exit Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess(Hangfire.Common.IJobFilterProvider)", span="34-34"];
m29_88 [cluster="System.Func<TResult>.Invoke()", file="JobPerformanceProcess.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m29_53 [cluster="Hangfire.Server.PerformedContext.PerformedContext(Hangfire.Server.PerformContext, object, bool, System.Exception)", file="JobPerformanceProcess.cs", label="Entry Hangfire.Server.PerformedContext.PerformedContext(Hangfire.Server.PerformContext, object, bool, System.Exception)", span="26-26"];
m29_6 [cluster="Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess(Hangfire.Common.IJobFilterProvider, Hangfire.Server.IJobPerformanceProcess)", file="JobPerformanceProcess.cs", label="Entry Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess(Hangfire.Common.IJobFilterProvider, Hangfire.Server.IJobPerformanceProcess)", span="46-46"];
m29_7 [cluster="Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess(Hangfire.Common.IJobFilterProvider, Hangfire.Server.IJobPerformanceProcess)", file="JobPerformanceProcess.cs", label="filterProvider == null", span="50-50"];
m29_8 [cluster="Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess(Hangfire.Common.IJobFilterProvider, Hangfire.Server.IJobPerformanceProcess)", file="JobPerformanceProcess.cs", label="throw new ArgumentNullException(''filterProvider'');", span="50-50"];
m29_56 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Entry lambda expression", span="102-102"];
m29_50 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="return new PerformedContext(context, result, false, null);", span="98-98"];
m29_57 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="InvokePerformFilter(filter, preContext, next)", span="102-102"];
m29_54 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Entry lambda expression", span="102-102"];
m29_48 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Entry lambda expression", span="95-99"];
m29_51 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Exit lambda expression", span="95-99"];
m29_55 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Exit lambda expression", span="102-102"];
m29_58 [cluster="lambda expression", file="JobPerformanceProcess.cs", label="Exit lambda expression", span="102-102"];
m29_29 [cluster="Hangfire.Server.JobPerformanceProcess.GetFilters(Hangfire.Common.Job)", file="JobPerformanceProcess.cs", label="Entry Hangfire.Server.JobPerformanceProcess.GetFilters(Hangfire.Common.Job)", span="85-85"];
m29_33 [cluster="Hangfire.Server.JobPerformanceProcess.GetFilters(Hangfire.Common.Job)", file="JobPerformanceProcess.cs", label="return new JobFilterInfo(_filterProvider.GetFilters(job));", span="87-87"];
m29_34 [cluster="Hangfire.Server.JobPerformanceProcess.GetFilters(Hangfire.Common.Job)", file="JobPerformanceProcess.cs", label="Exit Hangfire.Server.JobPerformanceProcess.GetFilters(Hangfire.Common.Job)", span="85-85"];
m29_87 [cluster="Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="JobPerformanceProcess.cs", label="Entry Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22"];
m29_0 [cluster="Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess()", file="JobPerformanceProcess.cs", label="Entry Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess()", span="29-29"];
m29_1 [cluster="Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess()", file="JobPerformanceProcess.cs", label="Exit Hangfire.Server.JobPerformanceProcess.JobPerformanceProcess()", span="29-29"];
m29_35 [cluster="Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="JobPerformanceProcess.cs", label="Entry Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="40-40"];
m29_30 [cluster="Hangfire.Server.JobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="JobPerformanceProcess.cs", label="Entry Hangfire.Server.JobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", span="90-90"];
m29_37 [cluster="Hangfire.Server.JobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="JobPerformanceProcess.cs", label="object result = null", span="92-92"];
m29_38 [cluster="Hangfire.Server.JobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="JobPerformanceProcess.cs", label="var preContext = new PerformingContext(context)", span="94-94"];
m29_40 [cluster="Hangfire.Server.JobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="JobPerformanceProcess.cs", label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokePerformFilter(filter, preContext, next))", span="101-102"];
m29_41 [cluster="Hangfire.Server.JobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="JobPerformanceProcess.cs", label="thunk()", span="104-104"];
m29_42 [cluster="Hangfire.Server.JobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="JobPerformanceProcess.cs", label="return result;", span="106-106"];
m29_43 [cluster="Hangfire.Server.JobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", file="JobPerformanceProcess.cs", label="Exit Hangfire.Server.JobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", span="90-90"];
m29_89 [cluster="Hangfire.Server.IServerFilter.OnPerformed(Hangfire.Server.PerformedContext)", file="JobPerformanceProcess.cs", label="Entry Hangfire.Server.IServerFilter.OnPerformed(Hangfire.Server.PerformedContext)", span="33-33"];
m29_94 [file="JobPerformanceProcess.cs", label="Hangfire.Server.JobPerformanceProcess", span=""];
m29_95 [file="JobPerformanceProcess.cs", label="Hangfire.Server.PerformContext", span=""];
m29_96 [file="JobPerformanceProcess.cs", label=preContext, span=""];
m29_97 [file="JobPerformanceProcess.cs", label="System.Func<Hangfire.Server.PerformedContext>", span=""];
m29_98 [file="JobPerformanceProcess.cs", label="Hangfire.Server.IServerFilter", span=""];
m30_0 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", span="27-27"];
m30_2 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", file="JobPerformanceProcessFacts.cs", label="_pollInterval = pollInterval", span="34-34"];
m30_3 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", file="JobPerformanceProcessFacts.cs", label="workerPools == null", span="36-36"];
m30_5 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", file="JobPerformanceProcessFacts.cs", label="pollInterval != pollInterval.Duration()", span="38-38"];
m30_7 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", file="JobPerformanceProcessFacts.cs", label="var serverName = String.Format(''{0}:{1}'', machineName, Process.GetCurrentProcess().Id)", span="43-43"];
m30_8 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", file="JobPerformanceProcessFacts.cs", label="_context = new ServerContext(\r\n                serverName,\r\n                jobActivator ?? new JobActivator(),\r\n                JobPerformer.Current)", span="45-48"];
m30_4 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", file="JobPerformanceProcessFacts.cs", label="throw new ArgumentNullException(''workerPools'');", span="36-36"];
m30_6 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", file="JobPerformanceProcessFacts.cs", label="throw new ArgumentOutOfRangeException(''pollInterval'', ''Poll interval value must be positive.'');", span="40-40"];
m30_10 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", file="JobPerformanceProcessFacts.cs", label="_serverThread.Start()", span="55-55"];
m30_11 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", file="JobPerformanceProcessFacts.cs", label="Exit HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", span="27-27"];
m30_18 [cluster="HangFire.JobActivator.JobActivator()", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.JobActivator.JobActivator()", span="4-4"];
m30_26 [cluster="System.Threading.Thread.Join()", file="JobPerformanceProcessFacts.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m30_34 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JobPerformanceProcessFacts.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m30_49 [cluster="HangFire.Server.JobServer.RunServer()", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Server.JobServer.RunServer()", span="92-92"];
m30_50 [cluster="HangFire.Server.JobServer.RunServer()", file="JobPerformanceProcessFacts.cs", label="AnnounceServer()", span="96-96"];
m30_51 [cluster="HangFire.Server.JobServer.RunServer()", file="JobPerformanceProcessFacts.cs", label="StartServer()", span="97-97"];
m30_53 [cluster="HangFire.Server.JobServer.RunServer()", file="JobPerformanceProcessFacts.cs", label="StopServer()", span="101-101"];
m30_54 [cluster="HangFire.Server.JobServer.RunServer()", file="JobPerformanceProcessFacts.cs", label="RemoveServer()", span="102-102"];
m30_55 [cluster="HangFire.Server.JobServer.RunServer()", file="JobPerformanceProcessFacts.cs", label=Exception, span="104-104"];
m30_56 [cluster="HangFire.Server.JobServer.RunServer()", file="JobPerformanceProcessFacts.cs", label="_logger.Fatal(''Unexpected exception caught.'', ex)", span="106-106"];
m30_57 [cluster="HangFire.Server.JobServer.RunServer()", file="JobPerformanceProcessFacts.cs", label="Exit HangFire.Server.JobServer.RunServer()", span="92-92"];
m30_83 [cluster="Unk.SetRangeInHash", file="JobPerformanceProcessFacts.cs", label="Entry Unk.SetRangeInHash", span=""];
m30_16 [cluster="string.Format(string, object, object)", file="JobPerformanceProcessFacts.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m30_20 [cluster="System.Threading.Thread.Start()", file="JobPerformanceProcessFacts.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m30_21 [cluster="HangFire.Server.JobServer.Dispose()", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Server.JobServer.Dispose()", span="58-58"];
m30_22 [cluster="HangFire.Server.JobServer.Dispose()", file="JobPerformanceProcessFacts.cs", label="_stopped.Set()", span="60-60"];
m30_24 [cluster="HangFire.Server.JobServer.Dispose()", file="JobPerformanceProcessFacts.cs", label="Exit HangFire.Server.JobServer.Dispose()", span="58-58"];
m30_76 [cluster="Unk.AddItemToSet", file="JobPerformanceProcessFacts.cs", label="Entry Unk.AddItemToSet", span=""];
m30_80 [cluster="string.Format(string, object)", file="JobPerformanceProcessFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m30_82 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m30_99 [cluster="Unk.RemoveEntry", file="JobPerformanceProcessFacts.cs", label="Entry Unk.RemoveEntry", span=""];
m30_14 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="JobPerformanceProcessFacts.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m30_15 [cluster="System.Diagnostics.Process.GetCurrentProcess()", file="JobPerformanceProcessFacts.cs", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
m30_35 [cluster="HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", span="10-10"];
m30_25 [cluster="System.Threading.EventWaitHandle.Set()", file="JobPerformanceProcessFacts.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m30_36 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="17-17"];
m30_38 [cluster="HangFire.Server.JobServer.StopServer()", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Server.JobServer.StopServer()", span="75-75"];
m30_39 [cluster="HangFire.Server.JobServer.StopServer()", file="JobPerformanceProcessFacts.cs", label="_fetchedJobsWatcher.Dispose()", span="77-77"];
m30_40 [cluster="HangFire.Server.JobServer.StopServer()", file="JobPerformanceProcessFacts.cs", label="_schedulePoller.Dispose()", span="78-78"];
m30_42 [cluster="HangFire.Server.JobServer.StopServer()", file="JobPerformanceProcessFacts.cs", label="manager.SendStop()", span="82-82"];
m30_43 [cluster="HangFire.Server.JobServer.StopServer()", file="JobPerformanceProcessFacts.cs", label=_managers, span="85-85"];
m30_44 [cluster="HangFire.Server.JobServer.StopServer()", file="JobPerformanceProcessFacts.cs", label="manager.Dispose()", span="87-87"];
m30_45 [cluster="HangFire.Server.JobServer.StopServer()", file="JobPerformanceProcessFacts.cs", label="Exit HangFire.Server.JobServer.StopServer()", span="75-75"];
m30_81 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobPerformanceProcessFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m30_46 [cluster="HangFire.Server.ThreadWrapper.Dispose()", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Server.ThreadWrapper.Dispose()", span="23-23"];
m30_58 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Server.JobServer.AnnounceServer()", span="110-110"];
m30_62 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobPerformanceProcessFacts.cs", label="var transaction = _redis.CreateTransaction()", span="112-112"];
m30_63 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobPerformanceProcessFacts.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName))", span="114-115"];
m30_64 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobPerformanceProcessFacts.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                        }))", span="117-122"];
m30_65 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobPerformanceProcessFacts.cs", label=_workerPools, span="124-124"];
m30_69 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobPerformanceProcessFacts.cs", label="Exit HangFire.Server.JobServer.AnnounceServer()", span="110-110"];
m30_33 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext, HangFire.Server.WorkerPool)", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext, HangFire.Server.WorkerPool)", span="23-23"];
m30_95 [cluster="Unk.RemoveItemFromSet", file="JobPerformanceProcessFacts.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m30_61 [cluster="Unk.Fatal", file="JobPerformanceProcessFacts.cs", label="Entry Unk.Fatal", span=""];
m30_13 [cluster="System.TimeSpan.Duration()", file="JobPerformanceProcessFacts.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m30_27 [cluster="HangFire.Server.JobServer.StartServer()", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Server.JobServer.StartServer()", span="64-64"];
m30_28 [cluster="HangFire.Server.JobServer.StartServer()", file="JobPerformanceProcessFacts.cs", label=_workerPools, span="66-66"];
m30_29 [cluster="HangFire.Server.JobServer.StartServer()", file="JobPerformanceProcessFacts.cs", label="_managers.Add(new JobManager(_context, pool))", span="68-68"];
m30_30 [cluster="HangFire.Server.JobServer.StartServer()", file="JobPerformanceProcessFacts.cs", label="_schedulePoller = new ThreadWrapper(new SchedulePoller(_pollInterval))", span="71-71"];
m30_31 [cluster="HangFire.Server.JobServer.StartServer()", file="JobPerformanceProcessFacts.cs", label="_fetchedJobsWatcher = new ThreadWrapper(new DequeuedJobsWatcher())", span="72-72"];
m30_32 [cluster="HangFire.Server.JobServer.StartServer()", file="JobPerformanceProcessFacts.cs", label="Exit HangFire.Server.JobServer.StartServer()", span="64-64"];
m30_97 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    String.Format(''hangfire:server:{0}:queues'', _context.ServerName))", span="144-146"];
m30_73 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="114-115"];
m30_77 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="117-122"];
m30_84 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="127-129"];
m30_74 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName)", span="114-115"];
m30_75 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="114-115"];
m30_78 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                        })", span="117-122"];
m30_79 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="117-122"];
m30_86 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="127-129"];
m30_92 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="140-142"];
m30_96 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="144-146"];
m30_93 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    _context.ServerName)", span="140-142"];
m30_94 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="140-142"];
m30_98 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="144-146"];
m30_47 [cluster="HangFire.Server.JobManager.SendStop()", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Server.JobManager.SendStop()", span="51-51"];
m30_72 [cluster="Unk.Commit", file="JobPerformanceProcessFacts.cs", label="Entry Unk.Commit", span=""];
m30_37 [cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", span="8-8"];
m30_17 [cluster="HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="9-9"];
m30_71 [cluster="Unk.QueueCommand", file="JobPerformanceProcessFacts.cs", label="Entry Unk.QueueCommand", span=""];
m30_48 [cluster="HangFire.Server.JobManager.Dispose()", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Server.JobManager.Dispose()", span="63-63"];
m30_59 [cluster="System.Threading.WaitHandle.WaitOne()", file="JobPerformanceProcessFacts.cs", label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0"];
m30_70 [cluster="Unk.CreateTransaction", file="JobPerformanceProcessFacts.cs", label="Entry Unk.CreateTransaction", span=""];
m30_19 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="JobPerformanceProcessFacts.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m30_89 [cluster="HangFire.Server.JobServer.RemoveServer()", file="JobPerformanceProcessFacts.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    String.Format(''hangfire:server:{0}:queues'', _context.ServerName)))", span="144-146"];
m30_60 [cluster="HangFire.Server.JobServer.RemoveServer()", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Server.JobServer.RemoveServer()", span="136-136"];
m30_87 [cluster="HangFire.Server.JobServer.RemoveServer()", file="JobPerformanceProcessFacts.cs", label="var transaction = _redis.CreateTransaction()", span="138-138"];
m30_88 [cluster="HangFire.Server.JobServer.RemoveServer()", file="JobPerformanceProcessFacts.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    _context.ServerName))", span="140-142"];
m30_91 [cluster="HangFire.Server.JobServer.RemoveServer()", file="JobPerformanceProcessFacts.cs", label="Exit HangFire.Server.JobServer.RemoveServer()", span="136-136"];
m30_100 [file="JobPerformanceProcessFacts.cs", label="HangFire.Server.JobServer", span=""];
m30_101 [file="JobPerformanceProcessFacts.cs", label=pool, span=""];
m32_19 [cluster="HangFire.JobActivator.JobActivator()", file="OwinBootstrapper.cs", label="Entry HangFire.JobActivator.JobActivator()", span="4-4"];
m32_27 [cluster="System.Threading.Thread.Join()", file="OwinBootstrapper.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m32_44 [cluster="HangFire.Server.JobServer.RunServer()", file="OwinBootstrapper.cs", label="Entry HangFire.Server.JobServer.RunServer()", span="86-86"];
m32_45 [cluster="HangFire.Server.JobServer.RunServer()", file="OwinBootstrapper.cs", label="AnnounceServer()", span="90-90"];
m32_46 [cluster="HangFire.Server.JobServer.RunServer()", file="OwinBootstrapper.cs", label="StartServer()", span="91-91"];
m32_47 [cluster="HangFire.Server.JobServer.RunServer()", file="OwinBootstrapper.cs", label="_stopped.WaitOne()", span="93-93"];
m32_48 [cluster="HangFire.Server.JobServer.RunServer()", file="OwinBootstrapper.cs", label="StopServer()", span="95-95"];
m32_49 [cluster="HangFire.Server.JobServer.RunServer()", file="OwinBootstrapper.cs", label="RemoveServer()", span="96-96"];
m32_50 [cluster="HangFire.Server.JobServer.RunServer()", file="OwinBootstrapper.cs", label=Exception, span="98-98"];
m32_51 [cluster="HangFire.Server.JobServer.RunServer()", file="OwinBootstrapper.cs", label="_logger.Fatal(''Unexpected exception caught.'', ex)", span="100-100"];
m32_52 [cluster="HangFire.Server.JobServer.RunServer()", file="OwinBootstrapper.cs", label="Exit HangFire.Server.JobServer.RunServer()", span="86-86"];
m32_79 [cluster="Unk.SetRangeInHash", file="OwinBootstrapper.cs", label="Entry Unk.SetRangeInHash", span=""];
m32_16 [cluster="string.Format(string, object, object)", file="OwinBootstrapper.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m32_21 [cluster="System.Threading.Thread.Start()", file="OwinBootstrapper.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m32_22 [cluster="HangFire.Server.JobServer.Dispose()", file="OwinBootstrapper.cs", label="Entry HangFire.Server.JobServer.Dispose()", span="65-65"];
m32_23 [cluster="HangFire.Server.JobServer.Dispose()", file="OwinBootstrapper.cs", label="_stopped.Set()", span="67-67"];
m32_24 [cluster="HangFire.Server.JobServer.Dispose()", file="OwinBootstrapper.cs", label="_serverThread.Join()", span="68-68"];
m32_25 [cluster="HangFire.Server.JobServer.Dispose()", file="OwinBootstrapper.cs", label="Exit HangFire.Server.JobServer.Dispose()", span="65-65"];
m32_17 [cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, System.TimeSpan, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="OwinBootstrapper.cs", label="Entry HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, System.TimeSpan, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="12-12"];
m32_71 [cluster="Unk.AddItemToSet", file="OwinBootstrapper.cs", label="Entry Unk.AddItemToSet", span=""];
m32_75 [cluster="string.Format(string, object)", file="OwinBootstrapper.cs", label="Entry string.Format(string, object)", span="0-0"];
m32_78 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="OwinBootstrapper.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m32_95 [cluster="Unk.RemoveEntry", file="OwinBootstrapper.cs", label="Entry Unk.RemoveEntry", span=""];
m32_13 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="OwinBootstrapper.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m32_77 [cluster="int.ToString()", file="OwinBootstrapper.cs", label="Entry int.ToString()", span="0-0"];
m32_15 [cluster="System.Diagnostics.Process.GetCurrentProcess()", file="OwinBootstrapper.cs", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
m32_34 [cluster="HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", file="OwinBootstrapper.cs", label="Entry HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", span="10-10"];
m32_26 [cluster="System.Threading.EventWaitHandle.Set()", file="OwinBootstrapper.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m32_0 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="OwinBootstrapper.cs", label="Entry HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", span="25-25"];
m32_1 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="OwinBootstrapper.cs", label="queues == null", span="32-32"];
m32_3 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="OwinBootstrapper.cs", label="concurrency <= 0", span="37-37"];
m32_5 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="OwinBootstrapper.cs", label="pollInterval != pollInterval.Duration()", span="42-42"];
m32_7 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="OwinBootstrapper.cs", label="var serverName = String.Format(''{0}:{1}'', machineName, Process.GetCurrentProcess().Id)", span="47-47"];
m32_8 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="OwinBootstrapper.cs", label="_context = new ServerContext(\r\n                serverName,\r\n                queues.ToList(),\r\n                concurrency,\r\n                pollInterval,\r\n                jobActivator ?? new JobActivator(),\r\n                JobPerformer.Current)", span="49-55"];
m32_2 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="OwinBootstrapper.cs", label="throw new ArgumentNullException(''queues'');", span="34-34"];
m32_4 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="OwinBootstrapper.cs", label="throw new ArgumentOutOfRangeException(''concurrency'', ''Concurrency value can not be negative or zero.'');", span="39-39"];
m32_6 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="OwinBootstrapper.cs", label="throw new ArgumentOutOfRangeException(''pollInterval'', ''Poll interval value must be positive.'');", span="44-44"];
m32_9 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="OwinBootstrapper.cs", label="_serverThread = new Thread(RunServer)\r\n                {\r\n                    Name = typeof(JobServer).Name,\r\n                    IsBackground = true\r\n                }", span="57-61"];
m32_10 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="OwinBootstrapper.cs", label="_serverThread.Start()", span="62-62"];
m32_11 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="OwinBootstrapper.cs", label="Exit HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", span="25-25"];
m32_35 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="OwinBootstrapper.cs", label="Entry HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="17-17"];
m32_37 [cluster="HangFire.Server.JobServer.StopServer()", file="OwinBootstrapper.cs", label="Entry HangFire.Server.JobServer.StopServer()", span="78-78"];
m32_38 [cluster="HangFire.Server.JobServer.StopServer()", file="OwinBootstrapper.cs", label="_fetchedJobsWatcher.Dispose()", span="80-80"];
m32_39 [cluster="HangFire.Server.JobServer.StopServer()", file="OwinBootstrapper.cs", label="_schedulePoller.Dispose()", span="81-81"];
m32_40 [cluster="HangFire.Server.JobServer.StopServer()", file="OwinBootstrapper.cs", label="_manager.Dispose()", span="82-82"];
m32_41 [cluster="HangFire.Server.JobServer.StopServer()", file="OwinBootstrapper.cs", label="Exit HangFire.Server.JobServer.StopServer()", span="78-78"];
m32_76 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="OwinBootstrapper.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m32_42 [cluster="HangFire.Server.ThreadWrapper.Dispose()", file="OwinBootstrapper.cs", label="Entry HangFire.Server.ThreadWrapper.Dispose()", span="23-23"];
m32_53 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="OwinBootstrapper.cs", label="Entry HangFire.Server.JobServer.AnnounceServer()", span="104-104"];
m32_57 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="OwinBootstrapper.cs", label="var transaction = _redis.CreateTransaction()", span="106-106"];
m32_58 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="OwinBootstrapper.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName))", span="108-109"];
m32_59 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="OwinBootstrapper.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''Workers'', _context.WorkersCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                        }))", span="111-117"];
m32_62 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="OwinBootstrapper.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queueName))", span="122-124"];
m32_63 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="OwinBootstrapper.cs", label="transaction.Commit()", span="127-127"];
m32_60 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="OwinBootstrapper.cs", label="_context.Queues", span="119-119"];
m32_61 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="OwinBootstrapper.cs", label="var queueName = queue", span="121-121"];
m32_64 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="OwinBootstrapper.cs", label="Exit HangFire.Server.JobServer.AnnounceServer()", span="104-104"];
m32_91 [cluster="Unk.RemoveItemFromSet", file="OwinBootstrapper.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m32_18 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="OwinBootstrapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m32_56 [cluster="Unk.Fatal", file="OwinBootstrapper.cs", label="Entry Unk.Fatal", span=""];
m32_14 [cluster="System.TimeSpan.Duration()", file="OwinBootstrapper.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m32_28 [cluster="HangFire.Server.JobServer.StartServer()", file="OwinBootstrapper.cs", label="Entry HangFire.Server.JobServer.StartServer()", span="71-71"];
m32_29 [cluster="HangFire.Server.JobServer.StartServer()", file="OwinBootstrapper.cs", label="_manager = new JobManager(_context)", span="73-73"];
m32_30 [cluster="HangFire.Server.JobServer.StartServer()", file="OwinBootstrapper.cs", label="_schedulePoller = new ThreadWrapper(new SchedulePoller(_context.PollInterval))", span="74-74"];
m32_31 [cluster="HangFire.Server.JobServer.StartServer()", file="OwinBootstrapper.cs", label="_fetchedJobsWatcher = new ThreadWrapper(new DequeuedJobsWatcher())", span="75-75"];
m32_32 [cluster="HangFire.Server.JobServer.StartServer()", file="OwinBootstrapper.cs", label="Exit HangFire.Server.JobServer.StartServer()", span="71-71"];
m32_93 [cluster="lambda expression", file="OwinBootstrapper.cs", label="x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    String.Format(''hangfire:server:{0}:queues'', _context.ServerName))", span="139-141"];
m32_68 [cluster="lambda expression", file="OwinBootstrapper.cs", label="Entry lambda expression", span="108-109"];
m32_72 [cluster="lambda expression", file="OwinBootstrapper.cs", label="Entry lambda expression", span="111-117"];
m32_81 [cluster="lambda expression", file="OwinBootstrapper.cs", label="x.AddItemToSet(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queueName)", span="122-124"];
m32_80 [cluster="lambda expression", file="OwinBootstrapper.cs", label="Entry lambda expression", span="122-124"];
m32_69 [cluster="lambda expression", file="OwinBootstrapper.cs", label="x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName)", span="108-109"];
m32_70 [cluster="lambda expression", file="OwinBootstrapper.cs", label="Exit lambda expression", span="108-109"];
m32_73 [cluster="lambda expression", file="OwinBootstrapper.cs", label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''Workers'', _context.WorkersCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                        })", span="111-117"];
m32_74 [cluster="lambda expression", file="OwinBootstrapper.cs", label="Exit lambda expression", span="111-117"];
m32_82 [cluster="lambda expression", file="OwinBootstrapper.cs", label="Exit lambda expression", span="122-124"];
m32_88 [cluster="lambda expression", file="OwinBootstrapper.cs", label="Entry lambda expression", span="135-137"];
m32_92 [cluster="lambda expression", file="OwinBootstrapper.cs", label="Entry lambda expression", span="139-141"];
m32_89 [cluster="lambda expression", file="OwinBootstrapper.cs", label="x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    _context.ServerName)", span="135-137"];
m32_90 [cluster="lambda expression", file="OwinBootstrapper.cs", label="Exit lambda expression", span="135-137"];
m32_94 [cluster="lambda expression", file="OwinBootstrapper.cs", label="Exit lambda expression", span="139-141"];
m32_67 [cluster="Unk.Commit", file="OwinBootstrapper.cs", label="Entry Unk.Commit", span=""];
m32_33 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext)", file="OwinBootstrapper.cs", label="Entry HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext)", span="24-24"];
m32_36 [cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", file="OwinBootstrapper.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", span="8-8"];
m32_66 [cluster="Unk.QueueCommand", file="OwinBootstrapper.cs", label="Entry Unk.QueueCommand", span=""];
m32_43 [cluster="HangFire.Server.JobManager.Dispose()", file="OwinBootstrapper.cs", label="Entry HangFire.Server.JobManager.Dispose()", span="44-44"];
m32_54 [cluster="System.Threading.WaitHandle.WaitOne()", file="OwinBootstrapper.cs", label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0"];
m32_65 [cluster="Unk.CreateTransaction", file="OwinBootstrapper.cs", label="Entry Unk.CreateTransaction", span=""];
m32_20 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="OwinBootstrapper.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m32_85 [cluster="HangFire.Server.JobServer.RemoveServer()", file="OwinBootstrapper.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    String.Format(''hangfire:server:{0}:queues'', _context.ServerName)))", span="139-141"];
m32_55 [cluster="HangFire.Server.JobServer.RemoveServer()", file="OwinBootstrapper.cs", label="Entry HangFire.Server.JobServer.RemoveServer()", span="131-131"];
m32_83 [cluster="HangFire.Server.JobServer.RemoveServer()", file="OwinBootstrapper.cs", label="var transaction = _redis.CreateTransaction()", span="133-133"];
m32_84 [cluster="HangFire.Server.JobServer.RemoveServer()", file="OwinBootstrapper.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    _context.ServerName))", span="135-137"];
m32_86 [cluster="HangFire.Server.JobServer.RemoveServer()", file="OwinBootstrapper.cs", label="transaction.Commit()", span="143-143"];
m32_87 [cluster="HangFire.Server.JobServer.RemoveServer()", file="OwinBootstrapper.cs", label="Exit HangFire.Server.JobServer.RemoveServer()", span="131-131"];
m32_96 [file="OwinBootstrapper.cs", label="HangFire.Server.JobServer", span=""];
m32_97 [file="OwinBootstrapper.cs", label=queueName, span=""];
m33_31 [cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28"];
m33_65 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44"];
m33_80 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m33_30 [cluster="Hangfire.JobStorage.GetConnection()", file="RecurringJobScheduler.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m33_82 [cluster="string.Format(string, object, object)", file="RecurringJobScheduler.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m33_38 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.ToString()", span="100-100"];
m33_40 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.ToString()", span="100-100"];
m33_74 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="RecurringJobScheduler.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87"];
m33_69 [cluster="Unk._instantFactory", file="RecurringJobScheduler.cs", label="Entry Unk._instantFactory", span=""];
m33_72 [cluster="Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime?)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime?)", span="25-25"];
m33_81 [cluster="Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="61-61"];
m33_33 [cluster="string.Format(string, object)", file="RecurringJobScheduler.cs", label="Entry string.Format(string, object)", span="0-0"];
m33_2 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess)", span="43-43"];
m33_3 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess)", span="43-43"];
m33_67 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m33_0 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="38-38"];
m33_1 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="38-38"];
m33_36 [cluster="Hangfire.Logging.ILog.WarnException(string, System.Exception)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Logging.ILog.WarnException(string, System.Exception)", span="278-278"];
m33_68 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="RecurringJobScheduler.cs", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
m33_73 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m33_76 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="37-37"];
m33_77 [cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", span="32-32"];
m33_66 [cluster="Unk.Parse", file="RecurringJobScheduler.cs", label="Entry Unk.Parse", span=""];
m33_29 [cluster="Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", span="22-22"];
m33_71 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m33_79 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m33_64 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m33_75 [cluster="string.IsNullOrEmpty(string)", file="RecurringJobScheduler.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m33_70 [cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73"];
m33_16 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="63-63"];
m33_17 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="_throttler.Throttle(context.CancellationToken)", span="65-65"];
m33_18 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="var connection = context.Storage.GetConnection()", span="67-67"];
m33_24 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="TryScheduleJob(context.Storage, connection, recurringJobId, recurringJob)", span="84-84"];
m33_27 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="_throttler.Delay(context.CancellationToken)", span="96-96"];
m33_19 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="connection.AcquireDistributedLock(''recurring-jobs:lock'', LockTimeout)", span="68-68"];
m33_20 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="var recurringJobIds = connection.GetAllItemsFromSet(''recurring-jobs'')", span="70-70"];
m33_22 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="var recurringJob = connection.GetAllEntriesFromHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId))", span="74-75"];
m33_21 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label=recurringJobIds, span="72-72"];
m33_26 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="Logger.WarnException(\r\n                            String.Format(\r\n                                ''Recurring job '{0}' can not be scheduled due to job load exception.'',\r\n                                recurringJobId),\r\n                            ex)", span="88-92"];
m33_23 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="recurringJob == null", span="77-77"];
m33_25 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label=JobLoadException, span="86-86"];
m33_28 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="63-63"];
m33_37 [cluster="Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", span="23-23"];
m33_32 [cluster="Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55"];
m33_35 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", span="105-105"];
m33_41 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs", label="var serializedJob = JobHelper.FromJson<InvocationData>(recurringJob[''Job''])", span="111-111"];
m33_43 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs", label="var cron = recurringJob[''Cron'']", span="113-113"];
m33_45 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs", label="var timeZone = recurringJob.ContainsKey(''TimeZoneId'')\r\n                    ? TimeZoneInfo.FindSystemTimeZoneById(recurringJob[''TimeZoneId''])\r\n                    : TimeZoneInfo.Utc", span="118-120"];
m33_47 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs", label="var lastExecutionTime = recurringJob.ContainsKey(''LastExecution'')\r\n                    ? JobHelper.DeserializeDateTime(recurringJob[''LastExecution''])\r\n                    : (DateTime?)null", span="124-126"];
m33_51 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs", label="recurringJob.ContainsKey(''Queue'') && !String.IsNullOrEmpty(recurringJob[''Queue''])", span="133-133"];
m33_52 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs", label="state.Queue = recurringJob[''Queue'']", span="135-135"];
m33_53 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs", label="var context = new CreateContext(storage, connection, job, state)", span="138-138"];
m33_56 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs", label="Logger.DebugFormat(\r\n                            ''Recurring job '{0}' execution at '{1}' has been canceled.'',\r\n                            recurringJobId,\r\n                            instant.NowInstant)", span="143-146"];
m33_60 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs", label="connection.SetRangeInHash(\r\n                    String.Format(''recurring-job:{0}'', recurringJobId),\r\n                    changedFields)", span="155-157"];
m33_62 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs", label="Logger.ErrorException(\r\n                    String.Format(''Recurring job '{0}' was not triggered: {1}.'', recurringJobId, ex.Message),\r\n                    ex)", span="161-163"];
m33_42 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs", label="var job = serializedJob.Deserialize()", span="112-112"];
m33_44 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs", label="var cronSchedule = CrontabSchedule.Parse(cron)", span="114-114"];
m33_46 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs", label="var instant = _instantFactory(cronSchedule, timeZone)", span="122-122"];
m33_49 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs", label="instant.GetNextInstants(lastExecutionTime).Any()", span="130-130"];
m33_57 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs", label="changedFields.Add(''LastExecution'', JobHelper.SerializeDateTime(instant.NowInstant))", span="149-149"];
m33_59 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs", label="changedFields.Add(''NextExecution'', JobHelper.SerializeDateTime(instant.NextInstant))", span="153-153"];
m33_48 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs", label="var changedFields = new Dictionary<string, string>()", span="128-128"];
m33_58 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs", label="changedFields.Add(''LastJobId'', jobId ?? String.Empty)", span="150-150"];
m33_50 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs", label="var state = new EnqueuedState { Reason = ''Triggered by recurring job scheduler'' }", span="132-132"];
m33_55 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs", label="String.IsNullOrEmpty(jobId)", span="141-141"];
m33_61 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs", label=TimeZoneNotFoundException, span="159-159"];
m33_63 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", span="105-105"];
m33_34 [cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
m33_78 [cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="RecurringJobScheduler.cs", label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122"];
m33_83 [cluster="Hangfire.Logging.ILog.ErrorException(string, System.Exception)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Logging.ILog.ErrorException(string, System.Exception)", span="159-159"];
m33_4 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", span="49-49"];
m33_7 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="instantFactory == null", span="55-55"];
m33_9 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="throttler == null", span="56-56"];
m33_12 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="_instantFactory = instantFactory", span="59-59"];
m33_13 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="_throttler = throttler", span="60-60"];
m33_8 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(''instantFactory'');", span="55-55"];
m33_10 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(''throttler'');", span="56-56"];
m33_14 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", span="49-49"];
m33_84 [file="RecurringJobScheduler.cs", label="Hangfire.Server.RecurringJobScheduler", span=""];
m34_64 [cluster="RecurringJobScheduler.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry RecurringJobScheduler.cstr", span=""];
m34_15 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="11-11"];
m34_113 [cluster="Unk.SetRangeInHash", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.SetRangeInHash", span=""];
m34_16 [cluster="Mock<IThrottler>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IThrottler>.cstr", span=""];
m34_150 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", span="160-160"];
m34_151 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="var time = DateTime.UtcNow", span="162-162"];
m34_152 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''LastExecution''] = JobHelper.SerializeDateTime(time)", span="163-163"];
m34_155 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="_instant.Verify(x => x.GetNextInstants(time))", span="168-168"];
m34_153 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="164-164"];
m34_154 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="166-166"];
m34_156 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", span="160-160"];
m34_51 [cluster="Unk.GetAllEntriesFromHash", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m34_60 [cluster="Unk.Equal", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Equal", span=""];
m34_161 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", span="172-172"];
m34_162 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="_connection.Setup(x => x.GetAllItemsFromSet(It.IsAny<string>()))\r\n                .Returns(new HashSet<string> { ''non-existing-job'' })", span="174-175"];
m34_163 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="176-176"];
m34_164 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="Assert.DoesNotThrow(() => scheduler.Execute(_context.Object))", span="178-178"];
m34_165 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", span="172-172"];
m34_50 [cluster="string.Format(string, object)", file="RecurringJobSchedulerFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m34_26 [cluster="Mock<IJobCreationProcess>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IJobCreationProcess>.cstr", span=""];
m34_102 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", span="113-113"];
m34_103 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="116-116"];
m34_104 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="119-119"];
m34_105 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="var jobKey = String.Format(''recurring-job:{0}'', RecurringJobId)", span="122-122"];
m34_107 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant))))", span="129-133"];
m34_108 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant))))", span="135-139"];
m34_109 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", span="113-113"];
m34_55 [cluster="Unk.Run", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Run", span=""];
m34_131 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", span="143-143"];
m34_132 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="_instant.Setup(x => x.GetNextInstants(It.IsAny<DateTime?>())).Returns(Enumerable.Empty<DateTime>)", span="145-145"];
m34_133 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="146-146"];
m34_134 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="148-148"];
m34_136 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', RecurringJobId),\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant))))", span="152-156"];
m34_137 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", span="143-143"];
m34_166 [cluster="Unk.DoesNotThrow", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m34_65 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", span="71-71"];
m34_67 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="RecurringJobSchedulerFacts.cs", label="Assert.Equal(''instantFactory'', exception.ParamName)", span="77-77"];
m34_68 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", span="71-71"];
m34_84 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="240-240"];
m34_227 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="240-240"];
m34_201 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", span="214-214"];
m34_202 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs", label="_instantFactory = (schedule, timeZoneInfo) =>\r\n            {\r\n                if (!timeZoneInfo.Equals(TimeZoneInfo.Utc)) throw new InvalidOperationException(''Invalid timezone'');\r\n                return _instant.Object;\r\n            }", span="217-221"];
m34_203 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob.Remove(''TimeZoneId'')", span="222-222"];
m34_204 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="223-223"];
m34_205 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs", label="Assert.DoesNotThrow(() => scheduler.Execute(_context.Object))", span="226-226"];
m34_206 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", span="214-214"];
m34_30 [cluster="Unk.>", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.>", span=""];
m34_213 [cluster="System.TimeZoneInfo.Equals(System.TimeZoneInfo)", file="RecurringJobSchedulerFacts.cs", label="Entry System.TimeZoneInfo.Equals(System.TimeZoneInfo)", span="0-0"];
m34_191 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="RecurringJobSchedulerFacts.cs", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
m34_22 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="72-72"];
m34_0 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", span="26-26"];
m34_1 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_context = new BackgroundProcessContextMock()", span="28-28"];
m34_2 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_throttler = new Mock<IThrottler>()", span="30-30"];
m34_3 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_instant = new Mock<IScheduleInstant>()", span="33-33"];
m34_4 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_instant.Setup(x => x.GetNextInstants(It.IsAny<DateTime?>())).Returns(new[] { _instant.Object.NowInstant })", span="34-34"];
m34_5 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="var timeZone1 = TimeZoneInfo.Local", span="36-36"];
m34_6 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_instantFactory = (schedule, timeZone) => _instant.Object", span="38-38"];
m34_7 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob = new Dictionary<string, string>\r\n            {\r\n                { ''Cron'', ''* * * * *'' },\r\n                { ''Job'', JobHelper.ToJson(InvocationData.Serialize(Job.FromExpression(() => Console.WriteLine()))) },\r\n                { ''TimeZoneId'', timeZone1.Id }\r\n            }", span="40-45"];
m34_8 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="47-47"];
m34_9 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_context.Storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="48-48"];
m34_10 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_connection.Setup(x => x.GetAllItemsFromSet(''recurring-jobs''))\r\n                .Returns(new HashSet<string> { RecurringJobId })", span="50-51"];
m34_11 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_connection.Setup(x => x.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', RecurringJobId)))\r\n                .Returns(_recurringJob)", span="53-54"];
m34_14 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", span="26-26"];
m34_17 [cluster="Mock<IScheduleInstant>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IScheduleInstant>.cstr", span=""];
m34_42 [cluster="Unk.GetConnection", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetConnection", span=""];
m34_190 [cluster="System.Type.GetType(string)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Type.GetType(string)", span="0-0"];
m34_197 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="RecurringJobSchedulerFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m34_124 [cluster="Unk.SerializeDateTime", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.SerializeDateTime", span=""];
m34_20 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m34_90 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", span="101-101"];
m34_91 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''Queue''] = ''critical''", span="103-103"];
m34_92 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="104-104"];
m34_93 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="106-106"];
m34_95 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", span="101-101"];
m34_157 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m34_18 [cluster="Unk.Setup", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Setup", span=""];
m34_217 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", span="230-230"];
m34_218 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''TimeZoneId''] = ''Some garbage''", span="232-232"];
m34_219 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="233-233"];
m34_220 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="235-235"];
m34_222 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", span="230-230"];
m34_79 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", span="91-91"];
m34_80 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="93-93"];
m34_81 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="95-95"];
m34_83 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", span="91-91"];
m34_182 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", span="195-195"];
m34_183 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="var timeZoneId = Type.GetType(''Mono.Runtime'') != null ? ''Pacific/Honolulu'' : ''Hawaiian Standard Time''", span="197-197"];
m34_184 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="_instantFactory = (schedule, timeZoneInfo) =>\r\n            {\r\n                if (timeZoneInfo.Id != timeZoneId) throw new InvalidOperationException(''Invalid timezone'');\r\n                return _instant.Object;\r\n            }", span="199-203"];
m34_185 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="var timeZone = TimeZoneInfo.FindSystemTimeZoneById(timeZoneId)", span="205-205"];
m34_186 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''TimeZoneId''] = timeZone.Id", span="206-206"];
m34_187 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="207-207"];
m34_188 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="Assert.DoesNotThrow(() => scheduler.Execute(_context.Object))", span="210-210"];
m34_189 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", span="195-195"];
m34_23 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m34_85 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="63-63"];
m34_223 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="237-237"];
m34_27 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="34-34"];
m34_35 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="43-43"];
m34_39 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="48-48"];
m34_43 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="50-50"];
m34_47 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="53-53"];
m34_52 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="57-57"];
m34_28 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetNextInstants(It.IsAny<DateTime?>())", span="34-34"];
m34_29 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="34-34"];
m34_32 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="38-38"];
m34_33 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="_instant.Object", span="38-38"];
m34_34 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="38-38"];
m34_36 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Console.WriteLine()", span="43-43"];
m34_37 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="43-43"];
m34_40 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetConnection()", span="48-48"];
m34_41 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="48-48"];
m34_44 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetAllItemsFromSet(''recurring-jobs'')", span="50-50"];
m34_45 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="50-50"];
m34_48 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', RecurringJobId))", span="53-53"];
m34_49 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="53-53"];
m34_54 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="57-57"];
m34_61 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="65-65"];
m34_62 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="new RecurringJobScheduler(null, _instantFactory, _throttler.Object)", span="65-65"];
m34_63 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="65-65"];
m34_69 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="75-75"];
m34_71 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="75-75"];
m34_76 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="85-85"];
m34_78 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="85-85"];
m34_87 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="97-97"];
m34_89 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="97-97"];
m34_96 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="108-109"];
m34_98 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="108-109"];
m34_99 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="109-109"];
m34_100 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="((EnqueuedState)cc.InitialState).Queue == ''critical''", span="109-109"];
m34_101 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="109-109"];
m34_119 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)))", span="129-133"];
m34_126 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)))", span="135-139"];
m34_110 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="124-127"];
m34_118 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="129-133"];
m34_125 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="135-139"];
m34_112 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="124-127"];
m34_114 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="126-127"];
m34_116 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="126-127"];
m34_120 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="129-133"];
m34_121 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="131-133"];
m34_122 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)", span="132-133"];
m34_123 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="131-133"];
m34_127 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="135-139"];
m34_128 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="137-139"];
m34_129 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)", span="138-139"];
m34_130 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="137-139"];
m34_138 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="145-145"];
m34_141 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="150-150"];
m34_144 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="152-156"];
m34_139 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetNextInstants(It.IsAny<DateTime?>())", span="145-145"];
m34_140 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="145-145"];
m34_143 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="150-150"];
m34_145 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', RecurringJobId),\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant)))", span="152-156"];
m34_146 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="152-156"];
m34_147 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="154-156"];
m34_148 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant)", span="155-156"];
m34_149 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="154-156"];
m34_159 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetNextInstants(time)", span="168-168"];
m34_158 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="168-168"];
m34_160 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="168-168"];
m34_167 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="174-174"];
m34_171 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="178-178"];
m34_170 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="178-178"];
m34_168 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetAllItemsFromSet(It.IsAny<string>())", span="174-174"];
m34_169 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="174-174"];
m34_172 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="178-178"];
m34_180 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="191-191"];
m34_179 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="191-191"];
m34_181 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="191-191"];
m34_193 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="timeZoneInfo.Id != timeZoneId", span="201-201"];
m34_199 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="210-210"];
m34_198 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="210-210"];
m34_192 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="199-203"];
m34_194 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="throw new InvalidOperationException(''Invalid timezone'');", span="201-201"];
m34_195 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="return _instant.Object;", span="202-202"];
m34_196 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="199-203"];
m34_200 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="210-210"];
m34_209 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="!timeZoneInfo.Equals(TimeZoneInfo.Utc)", span="219-219"];
m34_215 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="scheduler.Execute(_context.Object)", span="226-226"];
m34_214 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="226-226"];
m34_208 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="217-221"];
m34_210 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="throw new InvalidOperationException(''Invalid timezone'');", span="219-219"];
m34_211 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="return _instant.Object;", span="220-220"];
m34_212 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="217-221"];
m34_216 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="226-226"];
m34_225 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="237-237"];
m34_31 [cluster="Unk.GetNextInstants", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetNextInstants", span=""];
m34_56 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="61-61"];
m34_57 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="RecurringJobSchedulerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(null, _instantFactory, _throttler.Object))", span="63-65"];
m34_59 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="61-61"];
m34_86 [cluster="Unk.Verify", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Verify", span=""];
m34_46 [cluster="Unk.GetAllItemsFromSet", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m34_178 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="30-30"];
m34_19 [cluster="Unk.Returns", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Returns", span=""];
m34_72 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", span="81-81"];
m34_74 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="RecurringJobSchedulerFacts.cs", label="Assert.Equal(''throttler'', exception.ParamName)", span="87-87"];
m34_75 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", span="81-81"];
m34_173 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="182-182"];
m34_174 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''Job''] =\r\n                JobHelper.ToJson(new InvocationData(''SomeType'', ''SomeMethod'', ''Parameters'', ''arguments''))", span="185-186"];
m34_175 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="188-188"];
m34_176 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="Assert.DoesNotThrow(() => scheduler.Execute(_context.Object))", span="191-191"];
m34_177 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="182-182"];
m34_207 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m34_24 [cluster="Mock<IStorageConnection>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m34_38 [cluster="System.Console.WriteLine()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m34_21 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="187-187"];
m34_117 [cluster="Unk.ContainsKey", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.ContainsKey", span=""];
m34_25 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m34_228 [file="RecurringJobSchedulerFacts.cs", label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", span=""];
m34_229 [file="RecurringJobSchedulerFacts.cs", label=jobKey, span=""];
m34_230 [file="RecurringJobSchedulerFacts.cs", label=time, span=""];
m34_231 [file="RecurringJobSchedulerFacts.cs", label=scheduler, span=""];
m34_232 [file="RecurringJobSchedulerFacts.cs", label=scheduler, span=""];
m34_233 [file="RecurringJobSchedulerFacts.cs", label=timeZoneId, span=""];
m34_234 [file="RecurringJobSchedulerFacts.cs", label=scheduler, span=""];
m34_235 [file="RecurringJobSchedulerFacts.cs", label=scheduler, span=""];
m35_0 [cluster="Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", file="ServerHeartbeat.cs", label="Entry Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", span="37-37"];
m35_1 [cluster="Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", file="ServerHeartbeat.cs", label="Exit Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", span="37-37"];
m35_2 [cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", file="ServerHeartbeat.cs", label="Exit Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", span="26-26"];
m35_3 [cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerHeartbeat.cs", label="Entry Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", span="31-31"];
m35_6 [cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerHeartbeat.cs", label="context.Sleep(_heartbeatInterval)", span="38-38"];
m35_5 [cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerHeartbeat.cs", label="connection.Heartbeat(context.ServerId)", span="35-35"];
m35_4 [cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerHeartbeat.cs", label="var connection = context.Storage.GetConnection()", span="33-33"];
m35_7 [cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerHeartbeat.cs", label="Exit Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", span="31-31"];
m35_10 [cluster="Hangfire.Server.BackgroundProcessContext.Sleep(System.TimeSpan)", file="ServerHeartbeat.cs", label="Entry Hangfire.Server.BackgroundProcessContext.Sleep(System.TimeSpan)", span="23-23"];
m35_11 [cluster="Hangfire.Server.ServerHeartbeat.ToString()", file="ServerHeartbeat.cs", label="Entry Hangfire.Server.ServerHeartbeat.ToString()", span="41-41"];
m35_12 [cluster="Hangfire.Server.ServerHeartbeat.ToString()", color=green, community=0, file="ServerHeartbeat.cs", label="return GetType().Name;", prediction=89, span="43-43"];
m35_13 [cluster="Hangfire.Server.ServerHeartbeat.ToString()", file="ServerHeartbeat.cs", label="Exit Hangfire.Server.ServerHeartbeat.ToString()", span="41-41"];
m35_14 [cluster="object.GetType()", file="ServerHeartbeat.cs", label="Entry object.GetType()", span="0-0"];
m35_9 [cluster="Hangfire.Storage.IStorageConnection.Heartbeat(string)", file="ServerHeartbeat.cs", label="Entry Hangfire.Storage.IStorageConnection.Heartbeat(string)", span="49-49"];
m35_15 [file="ServerHeartbeat.cs", label="Hangfire.Server.ServerHeartbeat", span=""];
m36_0 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="Entry Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", span="39-39"];
m36_1 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="Servers.Add(server)", span="43-43"];
m36_2 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="server.Start()", span="45-45"];
m36_3 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="var context = new OwinContext(app.Properties)", span="47-47"];
m36_6 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="token.Register(server.Dispose)", span="52-52"];
m36_4 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="var token = context.Get<CancellationToken>(''host.OnAppDisposing'')", span="48-48"];
m36_5 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="token != CancellationToken.None", span="50-50"];
m36_7 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="Exit Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", span="39-39"];
m36_11 [cluster="Unk.>", file="ServerOwinExtensions.cs", label="Entry Unk.>", span=""];
m36_12 [cluster="Unk.Register", file="ServerOwinExtensions.cs", label="Entry Unk.Register", span=""];
m36_9 [cluster="Hangfire.BackgroundJobServer.Start()", file="ServerOwinExtensions.cs", label="Entry Hangfire.BackgroundJobServer.Start()", span="148-148"];
m36_8 [cluster="System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", file="ServerOwinExtensions.cs", label="Entry System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", span="0-0"];
m36_10 [cluster="OwinContext.cstr", file="ServerOwinExtensions.cs", label="Entry OwinContext.cstr", span=""];
m37_1 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="ServerWatchdogOptions.cs", label="ServerTimeout = ServerWatchdog.DefaultServerTimeout", span="25-25"];
m37_2 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="ServerWatchdogOptions.cs", label="CheckInterval = ServerWatchdog.DefaultCheckInterval", span="26-26"];
m37_4 [file="ServerWatchdogOptions.cs", label="Hangfire.Server.ServerWatchdogOptions", span=""];
m38_0 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()", file="StartupConfiguration.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()", span="12-12"];
m38_1 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()", file="StartupConfiguration.cs", label="var result = JobHelper.ToJson(null)", span="14-14"];
m38_2 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()", file="StartupConfiguration.cs", label="Assert.Null(result)", span="15-15"];
m38_3 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()", file="StartupConfiguration.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()", span="12-12"];
m38_42 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="StartupConfiguration.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="55-55"];
m38_4 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="StartupConfiguration.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m38_32 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()", file="StartupConfiguration.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()", span="60-60"];
m38_34 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()", file="StartupConfiguration.cs", label="Assert.Equal(_wellKnownTimestamp.ToString(), result)", span="64-64"];
m38_33 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()", file="StartupConfiguration.cs", label="var result = JobHelper.ToStringTimestamp(_wellKnownDateTime)", span="62-62"];
m38_35 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()", file="StartupConfiguration.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()", span="60-60"];
m38_37 [cluster="int.ToString()", file="StartupConfiguration.cs", label="Entry int.ToString()", span="0-0"];
m38_17 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="StartupConfiguration.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30"];
m38_26 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="StartupConfiguration.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39"];
m38_5 [cluster="Unk.Null", file="StartupConfiguration.cs", label="Entry Unk.Null", span=""];
m38_47 [cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="StartupConfiguration.cs", label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="60-60"];
m38_43 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", file="StartupConfiguration.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", span="76-76"];
m38_44 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", file="StartupConfiguration.cs", label="Assert.Null(JobHelper.FromNullableStringTimestamp(''''))", span="78-78"];
m38_45 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", file="StartupConfiguration.cs", label="Assert.Null(JobHelper.FromNullableStringTimestamp(null))", span="79-79"];
m38_46 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", file="StartupConfiguration.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", span="76-76"];
m38_10 [cluster="Unk.Equal", file="StartupConfiguration.cs", label="Entry Unk.Equal", span=""];
m38_22 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()", file="StartupConfiguration.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()", span="43-43"];
m38_24 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()", file="StartupConfiguration.cs", label="Assert.Equal(_wellKnownTimestamp, result)", span="48-48"];
m38_23 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()", file="StartupConfiguration.cs", label="var result = JobHelper.ToTimestamp(\r\n                _wellKnownDateTime)", span="45-46"];
m38_25 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()", file="StartupConfiguration.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()", span="43-43"];
m38_27 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", file="StartupConfiguration.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", span="52-52"];
m38_29 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", file="StartupConfiguration.cs", label="Assert.Equal(_wellKnownDateTime, result)", span="56-56"];
m38_28 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", file="StartupConfiguration.cs", label="var result = JobHelper.FromTimestamp(_wellKnownTimestamp)", span="54-54"];
m38_30 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", file="StartupConfiguration.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", span="52-52"];
m38_31 [cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="StartupConfiguration.cs", label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="45-45"];
m38_18 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", file="StartupConfiguration.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", span="36-36"];
m38_20 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", file="StartupConfiguration.cs", label="Assert.Equal(''hello'', result)", span="39-39"];
m38_19 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", file="StartupConfiguration.cs", label="var result = JobHelper.FromJson<string>(''\''hello\'''')", span="38-38"];
m38_21 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", file="StartupConfiguration.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", span="36-36"];
m38_11 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", file="StartupConfiguration.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", span="26-26"];
m38_15 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", file="StartupConfiguration.cs", label="Assert.Equal(0, intResult)", span="32-32"];
m38_13 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", file="StartupConfiguration.cs", label="var intResult = JobHelper.FromJson<int>(null)", span="29-29"];
m38_14 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", file="StartupConfiguration.cs", label="Assert.Null(stringResult)", span="31-31"];
m38_12 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", file="StartupConfiguration.cs", label="var stringResult = JobHelper.FromJson<string>(null)", span="28-28"];
m38_16 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", file="StartupConfiguration.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", span="26-26"];
m38_6 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", file="StartupConfiguration.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", span="19-19"];
m38_8 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", color=green, community=0, file="StartupConfiguration.cs", label="Assert.Equal(''\''hello\'''', result)", prediction=90, span="22-22"];
m38_7 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", file="StartupConfiguration.cs", label="var result = JobHelper.ToJson(''hello'')", span="21-21"];
m38_9 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", file="StartupConfiguration.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", span="19-19"];
m38_38 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()", file="StartupConfiguration.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()", span="68-68"];
m38_40 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()", file="StartupConfiguration.cs", label="Assert.Equal(_wellKnownDateTime, result)", span="72-72"];
m38_39 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()", file="StartupConfiguration.cs", label="var result = JobHelper.FromStringTimestamp(_wellKnownTimestamp.ToString())", span="70-70"];
m38_41 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()", file="StartupConfiguration.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()", span="68-68"];
m38_36 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="StartupConfiguration.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m38_48 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()", file="StartupConfiguration.cs", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()", span="83-83"];
m38_50 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()", file="StartupConfiguration.cs", label="Assert.Equal(_wellKnownDateTime, result)", span="86-86"];
m38_49 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()", file="StartupConfiguration.cs", label="var result = JobHelper.FromNullableStringTimestamp(_wellKnownTimestamp.ToString())", span="85-85"];
m38_51 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()", file="StartupConfiguration.cs", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()", span="83-83"];
m38_52 [file="StartupConfiguration.cs", label="HangFire.Core.Tests.Common.JobHelperFacts", span=""];
m39_26 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="StateChangeProcess.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="104-104"];
m39_28 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="StateChangeProcess.cs", label="throw new ArgumentNullException(''client'');", span="106-106"];
m39_29 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="StateChangeProcess.cs", label="return client.Create(methodCall, new ScheduledState(delay));", span="108-108"];
m39_27 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="StateChangeProcess.cs", label="client == null", span="106-106"];
m39_30 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="StateChangeProcess.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="104-104"];
m39_77 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="StateChangeProcess.cs", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="279-279"];
m39_78 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="StateChangeProcess.cs", label="return ContinueWith(client, parentId, methodCall, nextState, JobContinuationOptions.OnlyOnSucceededState);", span="285-285"];
m39_79 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="StateChangeProcess.cs", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="279-279"];
m39_6 [cluster="Unk.>", file="StateChangeProcess.cs", label="Entry Unk.>", span=""];
m39_36 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="StateChangeProcess.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="138-138"];
m39_38 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="StateChangeProcess.cs", label="throw new ArgumentNullException(''client'');", span="143-143"];
m39_37 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="StateChangeProcess.cs", label="client == null", span="143-143"];
m39_39 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="StateChangeProcess.cs", label="return client.Create(Job.FromExpression(methodCall), state);", span="145-145"];
m39_40 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="StateChangeProcess.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="138-138"];
m39_68 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", file="StateChangeProcess.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", span="265-265"];
m39_71 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", file="StateChangeProcess.cs", label="var state = new EnqueuedState()", span="269-269"];
m39_69 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", file="StateChangeProcess.cs", label="client == null", span="267-267"];
m39_72 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", file="StateChangeProcess.cs", label="return client.ChangeState(jobId, state, fromState);", span="270-270"];
m39_70 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", file="StateChangeProcess.cs", label="throw new ArgumentNullException(''client'');", span="267-267"];
m39_73 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", file="StateChangeProcess.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", span="265-265"];
m39_55 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", file="StateChangeProcess.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", span="204-204"];
m39_56 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", file="StateChangeProcess.cs", label="return Delete(client, jobId, null);", span="206-206"];
m39_57 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", file="StateChangeProcess.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", span="204-204"];
m39_31 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="StateChangeProcess.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="120-120"];
m39_33 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="StateChangeProcess.cs", label="throw new ArgumentNullException(''client'');", span="125-125"];
m39_34 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="StateChangeProcess.cs", label="return client.Create(methodCall, new ScheduledState(enqueueAt.UtcDateTime));", span="127-127"];
m39_32 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="StateChangeProcess.cs", label="client == null", span="125-125"];
m39_35 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="StateChangeProcess.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="120-120"];
m39_49 [cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", file="StateChangeProcess.cs", label="Entry Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", span="177-177"];
m39_51 [cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", file="StateChangeProcess.cs", label="throw new ArgumentNullException(''client'');", span="179-179"];
m39_50 [cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", file="StateChangeProcess.cs", label="client == null", span="179-179"];
m39_52 [cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", file="StateChangeProcess.cs", label="return client.ChangeState(jobId, state, null);", span="180-180"];
m39_53 [cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", file="StateChangeProcess.cs", label="Exit Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", span="177-177"];
m39_58 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="StateChangeProcess.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", span="233-233"];
m39_60 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="StateChangeProcess.cs", label="throw new ArgumentNullException(''client'');", span="235-235"];
m39_59 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="StateChangeProcess.cs", label="client == null", span="235-235"];
m39_62 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="StateChangeProcess.cs", label="return client.ChangeState(jobId, state, fromState);", span="238-238"];
m39_61 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="StateChangeProcess.cs", label="var state = new DeletedState()", span="237-237"];
m39_63 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="StateChangeProcess.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", span="233-233"];
m39_14 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="StateChangeProcess.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="69-69"];
m39_17 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="StateChangeProcess.cs", label="return client.Create(methodCall, new ScheduledState(delay));", span="73-73"];
m39_15 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="StateChangeProcess.cs", label="client == null", span="71-71"];
m39_16 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="StateChangeProcess.cs", label="throw new ArgumentNullException(''client'');", span="71-71"];
m39_18 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="StateChangeProcess.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="69-69"];
m39_13 [cluster="Hangfire.IBackgroundJobClient.Create<T>(System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", file="StateChangeProcess.cs", label="Entry Hangfire.IBackgroundJobClient.Create<T>(System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="158-158"];
m39_20 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="StateChangeProcess.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="84-84"];
m39_23 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="StateChangeProcess.cs", label="return client.Create(methodCall, new ScheduledState(enqueueAt.UtcDateTime));", span="91-91"];
m39_21 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="StateChangeProcess.cs", label="client == null", span="89-89"];
m39_22 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="StateChangeProcess.cs", label="throw new ArgumentNullException(''client'');", span="89-89"];
m39_24 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="StateChangeProcess.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="84-84"];
m39_42 [cluster="Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="StateChangeProcess.cs", label="Entry Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="41-41"];
m39_8 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="StateChangeProcess.cs", label="HangFire.SqlServer.SqlStoredSets", span=""];
m39_11 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="StateChangeProcess.cs", label="return client.Create(methodCall, new EnqueuedState());", span="58-58"];
m39_9 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="StateChangeProcess.cs", label="client == null", span="56-56"];
m39_10 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="StateChangeProcess.cs", label="throw new ArgumentNullException(''client'');", span="56-56"];
m39_12 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="StateChangeProcess.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="54-54"];
m39_43 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", file="StateChangeProcess.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="158-158"];
m39_45 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", file="StateChangeProcess.cs", label="throw new ArgumentNullException(''client'');", span="163-163"];
m39_44 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", file="StateChangeProcess.cs", label="client == null", span="163-163"];
m39_46 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", file="StateChangeProcess.cs", label="return client.Create(Job.FromExpression(methodCall), state);", span="165-165"];
m39_47 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", file="StateChangeProcess.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="158-158"];
m39_0 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", file="StateChangeProcess.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", span="36-36"];
m39_1 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", file="StateChangeProcess.cs", label="client == null", span="38-38"];
m39_2 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", file="StateChangeProcess.cs", label="throw new ArgumentNullException(''client'');", span="38-38"];
m39_64 [cluster="Hangfire.States.DeletedState.DeletedState()", file="StateChangeProcess.cs", label="Entry Hangfire.States.DeletedState.DeletedState()", span="27-27"];
m39_19 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="StateChangeProcess.cs", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="28-28"];
m39_80 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", file="StateChangeProcess.cs", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", span="297-297"];
m39_85 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", file="StateChangeProcess.cs", label="throw new ArgumentNullException(''client'');", span="304-304"];
m39_84 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", file="StateChangeProcess.cs", label="client == null", span="304-304"];
m39_86 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", file="StateChangeProcess.cs", label="var state = new AwaitingState(parentId, nextState, options)", span="306-306"];
m39_87 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", file="StateChangeProcess.cs", label="return client.Create(Job.FromExpression(methodCall), state);", span="307-307"];
m39_88 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", file="StateChangeProcess.cs", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", span="297-297"];
m39_65 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", file="StateChangeProcess.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", span="249-249"];
m39_66 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", file="StateChangeProcess.cs", label="return Requeue(client, jobId, null);", span="251-251"];
m39_67 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", file="StateChangeProcess.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", span="249-249"];
m39_48 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="StateChangeProcess.cs", label="Entry Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="191-191"];
m39_3 [cluster="HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", color=green, community=0, file="StateChangeProcess.cs", label="Entry HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", prediction=91, span="16-16"];
m39_4 [cluster="HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", file="StateChangeProcess.cs", label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="18-21"];
m39_5 [cluster="HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", file="StateChangeProcess.cs", label="Exit HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", span="16-16"];
m39_7 [cluster="Unk.SingleOrDefault", file="StateChangeProcess.cs", label="Entry Unk.SingleOrDefault", span=""];
m39_74 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", file="StateChangeProcess.cs", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", span="273-273"];
m39_75 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", file="StateChangeProcess.cs", label="return ContinueWith(client, parentId, methodCall, new EnqueuedState());", span="276-276"];
m39_76 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", file="StateChangeProcess.cs", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", span="273-273"];
m39_81 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="StateChangeProcess.cs", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="288-288"];
m39_82 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="StateChangeProcess.cs", label="return ContinueWith(client, parentId, methodCall, new EnqueuedState(), options);", span="294-294"];
m39_83 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="StateChangeProcess.cs", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="288-288"];
m39_54 [cluster="Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="StateChangeProcess.cs", label="Entry Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="54-54"];
m39_89 [cluster="Hangfire.States.AwaitingState.AwaitingState(string, Hangfire.States.IState, Hangfire.JobContinuationOptions)", file="StateChangeProcess.cs", label="Entry Hangfire.States.AwaitingState.AwaitingState(string, Hangfire.States.IState, Hangfire.JobContinuationOptions)", span="40-40"];
m39_41 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateChangeProcess.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149"];
m39_25 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", file="StateChangeProcess.cs", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", span="34-34"];
m40_42 [cluster="Hangfire.Storage.IStorageConnection.GetStateData(string)", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Storage.IStorageConnection.GetStateData(string)", span="45-45"];
m40_69 [cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="StateChangeProcessFacts.cs", label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m40_66 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="StateChangeProcessFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m40_99 [cluster="System.Collections.Generic.List<T>.List()", file="StateChangeProcessFacts.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m40_86 [cluster="string.Format(string, object, object)", file="StateChangeProcessFacts.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m40_64 [cluster="string.IsNullOrWhiteSpace(string)", file="StateChangeProcessFacts.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m40_41 [cluster="string.Format(string, object)", file="StateChangeProcessFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m40_67 [cluster="JsonSerializerSettings.cstr", file="StateChangeProcessFacts.cs", label="Entry JsonSerializerSettings.cstr", span=""];
m40_35 [cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", span="26-26"];
m40_90 [cluster="System.Threading.Thread.Sleep(int)", file="StateChangeProcessFacts.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m40_94 [cluster="Hangfire.Storage.IStorageConnection.SetJobParameter(string, string, string)", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Storage.IStorageConnection.SetJobParameter(string, string, string)", span="38-38"];
m40_68 [cluster="Unk.>", file="StateChangeProcessFacts.cs", label="Entry Unk.>", span=""];
m40_43 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.Continuations.ContinuationsSupportAttribute.Continuation>)", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.Continuations.ContinuationsSupportAttribute.Continuation>)", span="213-213"];
m40_91 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.Continuations.ContinuationsSupportAttribute.Continuation>)", file="StateChangeProcessFacts.cs", label="connection.SetJobParameter(jobId, ''Continuations'', JobHelper.ToJson(continuations))", span="216-216"];
m40_92 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.Continuations.ContinuationsSupportAttribute.Continuation>)", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.Continuations.ContinuationsSupportAttribute.Continuation>)", span="213-213"];
m40_44 [cluster="System.Enum.HasFlag(System.Enum)", file="StateChangeProcessFacts.cs", label="Entry System.Enum.HasFlag(System.Enum)", span="0-0"];
m40_15 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", span="117-117"];
m40_46 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateChangeProcessFacts.cs", label="var continuations = GetContinuations(context.Connection, context.JobId)", span="121-121"];
m40_50 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateChangeProcessFacts.cs", label="var currentState = GetContinuaionState(context, continuation.JobId, ContinuationStateFetchTimeout)", span="130-130"];
m40_53 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateChangeProcessFacts.cs", label="continuation.Options.HasFlag(JobContinuationOptions.OnlyOnSucceededState) &&\r\n                    context.CandidateState.Name != SucceededState.StateName", span="140-141"];
m40_61 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateChangeProcessFacts.cs", label="context.StateMachine.ChangeState(tuple.Key, tuple.Value, new[] { AwaitingState.StateName })", span="168-168"];
m40_47 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateChangeProcessFacts.cs", label="var nextStates = new Dictionary<string, IState>()", span="122-122"];
m40_48 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateChangeProcessFacts.cs", label=continuations, span="126-126"];
m40_54 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateChangeProcessFacts.cs", label="nextStates.Add(continuation.JobId, new DeletedState { Reason = ''Missed continuation'' })", span="143-143"];
m40_59 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateChangeProcessFacts.cs", label="nextStates.Add(continuation.JobId, nextState)", span="163-163"];
m40_60 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateChangeProcessFacts.cs", label=nextStates, span="166-166"];
m40_49 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateChangeProcessFacts.cs", label="String.IsNullOrWhiteSpace(continuation.JobId)", span="128-128"];
m40_52 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateChangeProcessFacts.cs", label="currentState.Name != AwaitingState.StateName", span="138-138"];
m40_56 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateChangeProcessFacts.cs", label="nextState = JsonConvert.DeserializeObject<IState>(\r\n                        currentState.Data[''NextState''],\r\n                        new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.Objects })", span="151-153"];
m40_55 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateChangeProcessFacts.cs", label="IState nextState", span="147-147"];
m40_62 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", span="117-117"];
m40_39 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m40_6 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="50-50"];
m40_7 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="StateChangeProcessFacts.cs", label="var awaitingState = context.CandidateState as AwaitingState", span="52-52"];
m40_9 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="StateChangeProcessFacts.cs", label="AddContinuation(context, awaitingState)", span="56-56"];
m40_10 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="StateChangeProcessFacts.cs", label="_knownFinalStates.Contains(context.CandidateState.Name)", span="58-58"];
m40_11 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="StateChangeProcessFacts.cs", label="ExecuteContinuationsIfExist(context)", span="61-61"];
m40_8 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="StateChangeProcessFacts.cs", label="awaitingState != null", span="53-53"];
m40_12 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="50-50"];
m40_40 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="StateChangeProcessFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m40_45 [cluster="Hangfire.States.DeletedState.DeletedState()", file="StateChangeProcessFacts.cs", label="Entry Hangfire.States.DeletedState.DeletedState()", span="27-27"];
m40_88 [cluster="System.DateTime.Add(System.TimeSpan)", file="StateChangeProcessFacts.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m40_63 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateChangeProcessFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m40_16 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="65-65"];
m40_17 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="StateChangeProcessFacts.cs", label="var awaitingState = context.NewState as AwaitingState", span="67-67"];
m40_19 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="StateChangeProcessFacts.cs", label="context.JobExpirationTimeout = awaitingState.Expiration", span="70-70"];
m40_18 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="StateChangeProcessFacts.cs", label="awaitingState != null", span="68-68"];
m40_20 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="65-65"];
m40_98 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m40_89 [cluster="System.TimeoutException.TimeoutException(string)", file="StateChangeProcessFacts.cs", label="Entry System.TimeoutException.TimeoutException(string)", span="0-0"];
m40_100 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="225-225"];
m40_101 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="225-225"];
m40_37 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.Continuation.Continuation()", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.Continuation.Continuation()", span="229-229"];
m40_0 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", span="36-36"];
m40_1 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", span="36-36"];
m40_87 [cluster="Hangfire.Logging.ILog.Warn(string)", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Logging.ILog.Warn(string)", span="261-261"];
m40_93 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m40_70 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateChangeProcessFacts.cs", label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="31-31"];
m40_36 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", span="219-219"];
m40_96 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", span="219-219"];
m40_65 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", span="172-172"];
m40_71 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="StateChangeProcessFacts.cs", label="StateData currentState = null", span="174-174"];
m40_78 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="StateChangeProcessFacts.cs", label="currentState = context.Connection.GetStateData(continuationJobId)", span="192-192"];
m40_80 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="StateChangeProcessFacts.cs", label="DateTime.UtcNow >= started.Add(timeout)", span="198-198"];
m40_72 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="StateChangeProcessFacts.cs", label="var started = DateTime.UtcNow", span="176-176"];
m40_84 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="StateChangeProcessFacts.cs", label="return currentState;", span="210-210"];
m40_73 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="StateChangeProcessFacts.cs", label="var firstAttempt = true", span="177-177"];
m40_74 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="StateChangeProcessFacts.cs", label=true, span="179-179"];
m40_82 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="StateChangeProcessFacts.cs", label="Thread.Sleep(firstAttempt ? 0 : 1)", span="206-206"];
m40_76 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="StateChangeProcessFacts.cs", label="continuationData == null", span="182-182"];
m40_79 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="StateChangeProcessFacts.cs", label="currentState != null", span="193-193"];
m40_83 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="StateChangeProcessFacts.cs", label="firstAttempt = false", span="207-207"];
m40_85 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", span="172-172"];
m40_38 [cluster="System.Collections.Generic.List<T>.Add(T)", file="StateChangeProcessFacts.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m40_97 [cluster="Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", span="39-39"];
m40_13 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", span="74-74"];
m40_22 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="StateChangeProcessFacts.cs", label="var parentId = awaitingState.ParentId", span="77-77"];
m40_32 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="StateChangeProcessFacts.cs", label="var startImmediately = !awaitingState.Options.HasFlag(JobContinuationOptions.OnlyOnSucceededState) ||\r\n                        currentState.Name == SucceededState.StateName", span="107-108"];
m40_33 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="StateChangeProcessFacts.cs", label="context.CandidateState = startImmediately\r\n                        ? awaitingState.NextState\r\n                        : new DeletedState { Reason = ''Missed continuation'' }", span="110-112"];
m40_23 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="StateChangeProcessFacts.cs", label="connection.AcquireDistributedJobLock(parentId, AddJobLockTimeout)", span="83-83"];
m40_24 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="StateChangeProcessFacts.cs", label="var continuations = GetContinuations(connection, parentId)", span="85-85"];
m40_26 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="StateChangeProcessFacts.cs", label="var jobData = connection.GetJobData(parentId)", span="88-88"];
m40_30 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="StateChangeProcessFacts.cs", label="SetContinuations(connection, parentId, continuations)", span="103-103"];
m40_27 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="StateChangeProcessFacts.cs", label="jobData == null", span="89-89"];
m40_31 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="StateChangeProcessFacts.cs", label="currentState != null && _knownFinalStates.Contains(currentState.Name)", span="105-105"];
m40_34 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.Continuations.AwaitingState)", span="74-74"];
m40_2 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", file="StateChangeProcessFacts.cs", label="Entry Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", span="41-41"];
m40_3 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", file="StateChangeProcessFacts.cs", label="_knownFinalStates = knownFinalStates", span="43-43"];
m40_4 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", file="StateChangeProcessFacts.cs", label="Order = 1000", span="47-47"];
m40_5 [cluster="Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", file="StateChangeProcessFacts.cs", label="Exit Hangfire.Continuations.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", span="41-41"];
m40_14 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="StateChangeProcessFacts.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m40_102 [file="StateChangeProcessFacts.cs", label="Hangfire.Continuations.ContinuationsSupportAttribute", span=""];
m42_59 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="Worker.cs", label="var handler1 = new Mock<IStateHandler>()", span="79-79"];
m42_60 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="Worker.cs", label="handler1.Setup(x => x.StateName).Returns(OldState)", span="80-80"];
m42_61 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="Worker.cs", label="var handler2 = new Mock<IStateHandler>()", span="82-82"];
m42_0 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="Worker.cs", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", span="22-22"];
m42_1 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="Worker.cs", label="_job = Job.FromExpression(() => Console.WriteLine())", span="24-24"];
m42_2 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="Worker.cs", label="_newStateMock = new Mock<State>()", span="25-25"];
m42_3 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="Worker.cs", label="_newStateMock.Setup(x => x.Name).Returns(NewState)", span="26-26"];
m42_4 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateChangeProcess)", file="Worker.cs", label="Entry Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateChangeProcess)", span="47-47"];
m42_5 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateChangeProcess)", file="Worker.cs", label="queues == null", span="52-52"];
m42_6 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateChangeProcess)", file="Worker.cs", label="throw new ArgumentNullException(''queues'');", span="52-52"];
m42_7 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateChangeProcess)", file="Worker.cs", label="performanceProcess == null", span="53-53"];
m42_13 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateChangeProcess)", color=green, community=0, file="Worker.cs", label="_stateChangeProcess = stateChangeProcess", prediction=92, span="58-58"];
m42_87 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="90-90"];
m42_33 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var state = PerformJob(fetchedJob.JobId, connection, jobCancellationToken)", span="108-108"];
m42_17 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="24-24"];
m42_56 [cluster="Unk.Commit", file="Worker.cs", label="Entry Unk.Commit", span=""];
m42_190 [cluster="Unk.Same", file="Worker.cs", label="Entry Unk.Same", span=""];
m42_44 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", file="Worker.cs", label="_transaction.Setup(x => x.Commit()).InSequence()", span="63-63"];
m42_12 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateChangeProcess)", file="Worker.cs", label="_performanceProcess = performanceProcess", span="57-57"];
m42_113 [cluster="Unk.Apply", file="Worker.cs", label="Entry Unk.Apply", span=""];
m42_64 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="Worker.cs", label="_handlers.AddHandler(handler2.Object)", span="86-86"];
m42_29 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="context.CancellationToken.ThrowIfCancellationRequested()", span="92-92"];
m42_57 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="Worker.cs", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", span="74-74"];
m42_195 [cluster="Mock<IStorageConnection>.cstr", file="Worker.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m42_52 [cluster="string.Equals(string, System.StringComparison)", file="Worker.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m42_62 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="Worker.cs", label="handler2.Setup(x => x.StateName).Returns(OldState)", span="83-83"];
m42_160 [cluster="Unk.OnStateUnapplied", file="Worker.cs", label="Entry Unk.OnStateUnapplied", span=""];
m42_130 [cluster="Unk.ExpireJob", file="Worker.cs", label="Entry Unk.ExpireJob", span=""];
m42_50 [cluster="lambda expression", file="Worker.cs", label="x.SetJobState(\r\n                JobId, _newStateMock.Object)", span="60-61"];
m42_47 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", file="Worker.cs", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", span="57-57"];
m42_28 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="appliedState == null || !appliedState.Name.Equals(ProcessingState.StateName, StringComparison.OrdinalIgnoreCase)", span="88-88"];
m42_197 [cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", file="Worker.cs", label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23"];
m42_51 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="60-61"];
m42_155 [cluster="Mock<IApplyStateFilter>.cstr", file="Worker.cs", label="Entry Mock<IApplyStateFilter>.cstr", span=""];
m42_196 [cluster="ApplyStateContext.cstr", file="Worker.cs", label="Entry ApplyStateContext.cstr", span=""];
m42_88 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="Worker.cs", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", span="100-100"];
m42_89 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="Worker.cs", label="var context = CreateContext()", span="103-103"];
m42_90 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="Worker.cs", label="var handler1 = new Mock<IStateHandler>()", span="105-105"];
m42_180 [cluster="Unk.OnStateApplied", file="Worker.cs", label="Entry Unk.OnStateApplied", span=""];
m42_184 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="Worker.cs", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", span="199-199"];
m42_185 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="Worker.cs", label="var context = CreateContext()", span="201-201"];
m42_186 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="Worker.cs", label="Assert.Equal(OldState, context.OldStateName)", span="203-203"];
m42_187 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="Worker.cs", label="Assert.Same(_newStateMock.Object, context.NewState)", span="204-204"];
m42_188 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="Worker.cs", label="Assert.Same(_job, context.Job)", span="205-205"];
m42_189 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="Worker.cs", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", span="199-199"];
m42_27 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="Worker.cs", label="var appliedState = _stateChangeProcess.ChangeState(new StateChangeContext(\r\n                            context.Storage,\r\n                            connection,\r\n                            fetchedJob.JobId,\r\n                            processingState,\r\n                            new[] { EnqueuedState.StateName, ProcessingState.StateName },\r\n                            linkedCts.Token))", prediction=93, span="78-84"];
m42_191 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", file="Worker.cs", label="var connectionMock = new Mock<IStorageConnection>()", span="210-210"];
m42_192 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", file="Worker.cs", label="connectionMock.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="211-211"];
m42_193 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", file="Worker.cs", label="return new ApplyStateContext(\r\n                connectionMock.Object,\r\n                new StateContext(JobId, _job),\r\n                _newStateMock.Object,\r\n                OldState);", span="213-217"];
m42_194 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", file="Worker.cs", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.CreateContext()", span="208-208"];
m42_19 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="26-26"];
m42_63 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_UnapplyHandlers_ShouldBeCalled_BeforeSettingTheState()", file="Worker.cs", label="_handlers.AddHandler(handler1.Object)", span="85-85"];
m42_14 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateChangeProcess)", color=green, community=0, file="Worker.cs", label="_workerId = Guid.NewGuid().ToString()", prediction=94, span="59-59"];
m42_46 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", file="Worker.cs", label="context.ApplyState(_handlers, _filters)", span="68-68"];
m42_83 [cluster="lambda expression", file="Worker.cs", label="x.Unapply(context, _transaction.Object)", span="89-89"];
m42_48 [cluster="System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", file="Worker.cs", label="Entry System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", span="0-0"];
m42_156 [cluster="Unk.Add", file="Worker.cs", label="Entry Unk.Add", span=""];
m42_144 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="Worker.cs", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", span="150-150"];
m42_145 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="Worker.cs", label="var context = CreateContext()", span="153-153"];
m42_146 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="Worker.cs", label="var filter1 = new Mock<IApplyStateFilter>()", span="155-155"];
m42_150 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="Worker.cs", label="filter1.Setup(x => x.OnStateUnapplied(context, _transaction.Object))\r\n                .InSequence()", span="161-162"];
m42_151 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="Worker.cs", label="filter2.Setup(x => x.OnStateUnapplied(context, _transaction.Object))\r\n                .InSequence()", span="163-164"];
m42_153 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="Worker.cs", label="context.ApplyState(_handlers, _filters)", span="170-170"];
m42_147 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="Worker.cs", label="var filter2 = new Mock<IApplyStateFilter>()", span="156-156"];
m42_148 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="Worker.cs", label="_filters.Add(filter1.Object)", span="158-158"];
m42_149 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="Worker.cs", label="_filters.Add(filter2.Object)", span="159-159"];
m42_152 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="Worker.cs", label="_transaction\r\n                .Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<State>()))\r\n                .InSequence()", span="165-167"];
m42_154 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", file="Worker.cs", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_StateUnappliedFilters_ShouldBeCalled_BeforeSettingTheState()", span="150-150"];
m42_58 [cluster="Hangfire.Storage.IFetchedJob.Requeue()", file="Worker.cs", label="Entry Hangfire.Storage.IFetchedJob.Requeue()", span="25-25"];
m42_65 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="var jobData = connection.GetJobData(jobId)", span="154-154"];
m42_66 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="jobData == null", span="155-155"];
m42_68 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="jobData.EnsureLoaded()", span="164-164"];
m42_67 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="return null;", span="161-161"];
m42_69 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="Worker.cs", label="var backgroundJob = new BackgroundJob(jobId, jobData.Job, jobData.CreatedAt)", span="166-166"];
m42_53 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="63-63"];
m42_117 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", file="Worker.cs", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", span="128-128"];
m42_118 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", file="Worker.cs", label="var context = CreateContext()", span="130-130"];
m42_119 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", file="Worker.cs", label="_newStateMock.Setup(x => x.ExpireJobOnApply).Returns(true)", span="131-131"];
m42_120 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", file="Worker.cs", label="context.ApplyState(_handlers, _filters)", span="133-133"];
m42_121 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", file="Worker.cs", label="_transaction.Verify(x => x.ExpireJob(JobId, It.IsAny<TimeSpan>()))", span="135-135"];
m42_122 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", file="Worker.cs", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldSetJobExpiration_WhenTheStateSaysToDoSo()", span="128-128"];
m42_34 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="state != null", span="110-110"];
m42_35 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="Worker.cs", label="_stateChangeProcess.ChangeState(new StateChangeContext(\r\n                            context.Storage,\r\n                            connection,\r\n                            fetchedJob.JobId, \r\n                            state, \r\n                            ProcessingState.StateName))", prediction=95, span="113-118"];
m42_38 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="fetchedJob.RemoveFromQueue()", span="133-133"];
m42_84 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="89-89"];
m42_9 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateChangeProcess)", color=green, community=0, file="Worker.cs", label="stateChangeProcess == null", prediction=96, span="54-54"];
m42_10 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateChangeProcess)", color=green, community=0, file="Worker.cs", label="throw new ArgumentNullException(''stateChangeProcess'');", prediction=97, span="54-54"];
m42_22 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var fetchedJob = connection.FetchNextJob(_queues, context.CancellationToken)", span="65-65"];
m42_23 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="context.CancellationToken.ThrowIfCancellationRequested()", span="67-67"];
m42_24 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var timeoutCts = new CancellationTokenSource(JobInitializationWaitTimeout)", span="71-71"];
m42_25 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var linkedCts = CancellationTokenSource.CreateLinkedTokenSource(\r\n                        context.CancellationToken,\r\n                        timeoutCts.Token)", span="72-74"];
m42_26 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var processingState = new ProcessingState(context.ServerId, _workerId)", span="76-76"];
m42_11 [cluster="Unk.Returns", file="Worker.cs", label="Entry Unk.Returns", span=""];
m42_8 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Worker.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="125-125"];
m42_15 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="24-24"];
m42_55 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="63-63"];
m42_74 [cluster="lambda expression", color=green, community=0, file="Worker.cs", label="Exit lambda expression", prediction=98, span="80-80"];
m42_73 [cluster="lambda expression", file="Worker.cs", label="x.StateName", span="80-80"];
m42_72 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="80-80"];
m42_75 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="83-83"];
m42_70 [cluster="Mock<IStateHandler>.cstr", file="Worker.cs", label="Entry Mock<IStateHandler>.cstr", span=""];
m42_71 [cluster="Unk.AddHandler", file="Worker.cs", label="Entry Unk.AddHandler", span=""];
m42_77 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="83-83"];
m42_79 [cluster="lambda expression", file="Worker.cs", label="x.Unapply(context, _transaction.Object)", span="88-88"];
m42_81 [cluster="Unk.Unapply", file="Worker.cs", label="Entry Unk.Unapply", span=""];
m42_76 [cluster="lambda expression", file="Worker.cs", label="x.StateName", span="83-83"];
m42_78 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="88-88"];
m42_80 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="88-88"];
m42_82 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="89-89"];
m42_49 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="60-61"];
m42_198 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="211-211"];
m42_16 [cluster="lambda expression", file="Worker.cs", label="Console.WriteLine()", span="24-24"];
m42_20 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="Entry Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="62-62"];
m42_21 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var connection = context.Storage.GetConnection()", span="64-64"];
m42_31 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="return;", span="96-96"];
m42_30 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="fetchedJob.RemoveFromQueue()", span="95-95"];
m42_32 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var jobCancellationToken = new ServerJobCancellationToken(\r\n                        connection, fetchedJob.JobId, _workerId, context.CancellationToken)", span="105-106"];
m42_40 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="Logger.DebugException(''An exception occurred while processing a job. It will be re-queued.'', ex)", span="137-137"];
m42_39 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label=Exception, span="135-135"];
m42_41 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="fetchedJob.Requeue()", span="139-139"];
m42_54 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="Worker.cs", label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", span="31-31"];
m42_85 [cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="Worker.cs", label="Entry Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", span="25-25"];
m42_86 [cluster="Hangfire.Server.PerformContext.PerformContext(Hangfire.Storage.IStorageConnection, Hangfire.BackgroundJob, Hangfire.IJobCancellationToken)", file="Worker.cs", label="Entry Hangfire.Server.PerformContext.PerformContext(Hangfire.Storage.IStorageConnection, Hangfire.BackgroundJob, Hangfire.IJobCancellationToken)", span="36-36"];
m42_111 [cluster="lambda expression", file="Worker.cs", label="x.Apply(context, _transaction.Object)", span="118-118"];
m42_115 [cluster="lambda expression", file="Worker.cs", label="x.Apply(context, _transaction.Object)", span="119-119"];
m42_101 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="106-106"];
m42_104 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="109-109"];
m42_107 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="115-115"];
m42_110 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="118-118"];
m42_114 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="119-119"];
m42_102 [cluster="lambda expression", file="Worker.cs", label="x.StateName", span="106-106"];
m42_103 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="106-106"];
m42_105 [cluster="lambda expression", file="Worker.cs", label="x.StateName", span="109-109"];
m42_106 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="109-109"];
m42_108 [cluster="lambda expression", file="Worker.cs", label="x.SetJobState(It.IsAny<string>(), It.IsAny<State>())", span="115-115"];
m42_109 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="115-115"];
m42_112 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="118-118"];
m42_116 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="119-119"];
m42_124 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="131-131"];
m42_127 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="135-135"];
m42_125 [cluster="lambda expression", file="Worker.cs", label="x.ExpireJobOnApply", span="131-131"];
m42_126 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="131-131"];
m42_128 [cluster="lambda expression", file="Worker.cs", label="x.ExpireJob(JobId, It.IsAny<TimeSpan>())", span="135-135"];
m42_129 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="135-135"];
m42_137 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="142-142"];
m42_140 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="146-146"];
m42_138 [cluster="lambda expression", file="Worker.cs", label="x.ExpireJobOnApply", span="142-142"];
m42_139 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="142-142"];
m42_141 [cluster="lambda expression", file="Worker.cs", label="x.PersistJob(JobId)", span="146-146"];
m42_142 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="146-146"];
m42_158 [cluster="lambda expression", file="Worker.cs", label="x.OnStateUnapplied(context, _transaction.Object)", span="161-161"];
m42_162 [cluster="lambda expression", file="Worker.cs", label="x.OnStateUnapplied(context, _transaction.Object)", span="163-163"];
m42_157 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="161-161"];
m42_161 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="163-163"];
m42_164 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="166-166"];
m42_159 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="161-161"];
m42_163 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="163-163"];
m42_165 [cluster="lambda expression", file="Worker.cs", label="x.SetJobState(It.IsAny<string>(), It.IsAny<State>())", span="166-166"];
m42_166 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="166-166"];
m42_178 [cluster="lambda expression", file="Worker.cs", label="x.OnStateApplied(context, _transaction.Object)", span="187-187"];
m42_182 [cluster="lambda expression", file="Worker.cs", label="x.OnStateApplied(context, _transaction.Object)", span="189-189"];
m42_177 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="187-187"];
m42_181 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="189-189"];
m42_179 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="187-187"];
m42_183 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="189-189"];
m42_199 [cluster="lambda expression", file="Worker.cs", label="x.CreateWriteTransaction()", span="211-211"];
m42_200 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="211-211"];
m42_131 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", file="Worker.cs", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", span="139-139"];
m42_132 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", file="Worker.cs", label="var context = CreateContext()", span="141-141"];
m42_133 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", file="Worker.cs", label="_newStateMock.Setup(x => x.ExpireJobOnApply).Returns(false)", span="142-142"];
m42_134 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", file="Worker.cs", label="context.ApplyState(_handlers, _filters)", span="144-144"];
m42_135 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", file="Worker.cs", label="_transaction.Verify(x => x.PersistJob(JobId))", span="146-146"];
m42_136 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", file="Worker.cs", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ShouldPersistTheJob_WhenTheStateSaysToNotToExpireIt()", span="139-139"];
m42_18 [cluster="System.Console.WriteLine()", file="Worker.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m42_167 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="Worker.cs", label="Entry HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", span="176-176"];
m42_168 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="Worker.cs", label="var context = CreateContext()", span="179-179"];
m42_169 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="Worker.cs", label="var filter1 = new Mock<IApplyStateFilter>()", span="181-181"];
m42_173 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="Worker.cs", label="filter1.Setup(x => x.OnStateApplied(context, _transaction.Object))\r\n                .InSequence()", span="187-188"];
m42_174 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="Worker.cs", label="filter2.Setup(x => x.OnStateApplied(context, _transaction.Object))\r\n                .InSequence()", span="189-190"];
m42_175 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="Worker.cs", label="context.ApplyState(_handlers, _filters)", span="193-193"];
m42_170 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="Worker.cs", label="var filter2 = new Mock<IApplyStateFilter>()", span="182-182"];
m42_171 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="Worker.cs", label="_filters.Add(filter1.Object)", span="184-184"];
m42_172 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="Worker.cs", label="_filters.Add(filter2.Object)", span="185-185"];
m42_176 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", file="Worker.cs", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyStateFilters_ShouldBeCalled_AfterSettingTheJobState()", span="176-176"];
m42_201 [cluster="Unk.CreateWriteTransaction", file="Worker.cs", label="Entry Unk.CreateWriteTransaction", span=""];
m42_45 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_NewState_ShouldBeCommitted()", file="Worker.cs", label="var context = CreateContext()", span="65-65"];
m42_91 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="Worker.cs", label="handler1.Setup(x => x.StateName).Returns(NewState)", span="106-106"];
m42_42 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="throw;", span="140-140"];
m42_43 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="Exit Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="62-62"];
m42_97 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="Worker.cs", label="handler1.Setup(x => x.Apply(context, _transaction.Object)).InSequence()", span="118-118"];
m42_98 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="Worker.cs", label="handler2.Setup(x => x.Apply(context, _transaction.Object)).InSequence()", span="119-119"];
m42_99 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="Worker.cs", label="context.ApplyState(_handlers, _filters)", span="122-122"];
m42_94 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="Worker.cs", label="_handlers.AddHandler(handler1.Object)", span="111-111"];
m42_92 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="Worker.cs", label="Hangfire.Server.Worker", span=""];
m42_93 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="Worker.cs", label="handler2.Setup(x => x.StateName).Returns(NewState)", span="109-109"];
m42_95 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="Worker.cs", label="_handlers.AddHandler(handler2.Object)", span="112-112"];
m42_96 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="Worker.cs", label="_transaction\r\n                .Setup(x => x.SetJobState(It.IsAny<string>(), It.IsAny<State>()))\r\n                .InSequence()", span="114-116"];
m42_100 [cluster="HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", file="Worker.cs", label="Exit HangFire.Core.Tests.States.ApplyStateContextFacts.ApplyState_ApplyHandlers_ShouldBeCalled_AfterSettingTheState()", span="100-100"];
m42_143 [cluster="Unk.PersistJob", file="Worker.cs", label="Entry Unk.PersistJob", span=""];
m42_123 [cluster="Unk.Verify", file="Worker.cs", label="Entry Unk.Verify", span=""];
m42_202 [file="Worker.cs", label="HangFire.Core.Tests.States.ApplyStateContextFacts", span=""];
m42_203 [file="Worker.cs", label=context, span=""];
m42_204 [file="Worker.cs", label=context, span=""];
m42_205 [file="Worker.cs", label=context, span=""];
m42_206 [file="Worker.cs", label=context, span=""];
m42_207 [file="Worker.cs", label=context, span=""];
m42_208 [file="Worker.cs", label=context, span=""];
m43_2 [cluster="HangFire.States.SucceededState.GetProperties()", file="WorkerFacts.cs", label="Entry HangFire.States.SucceededState.GetProperties()", span="19-19"];
m43_3 [cluster="HangFire.States.SucceededState.GetProperties()", color=green, community=0, file="WorkerFacts.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''SucceededAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                };", prediction=99, span="21-24"];
m43_4 [cluster="HangFire.States.SucceededState.GetProperties()", file="WorkerFacts.cs", label="Exit HangFire.States.SucceededState.GetProperties()", span="19-19"];
m43_5 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="WorkerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m43_6 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="WorkerFacts.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
d6 -> d9  [color=green, key=1, label="Hangfire.States.IStateChangeProcess", style=dashed];
d6 -> d11  [color=darkseagreen4, key=1, label="Hangfire.Client.IJobCreationProcess", style=dashed];
d45 -> d25  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobClient", style=dashed];
d18 -> d21  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
d33 -> d36  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
d33 -> d40  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m0_64 -> m0_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_15 -> m0_50  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m0_15 -> m0_53  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m0_15 -> m0_61  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m0_29 -> m0_31  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m0_63 -> m0_69  [color=darkseagreen4, key=1, label=client, style=dashed];
m0_65 -> m0_80  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m0_65 -> m0_77  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m0_65 -> m0_81  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m0_53 -> m0_53  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m0_53 -> m0_59  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m0_54 -> m0_59  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m0_55 -> m0_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_50 -> m0_50  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m0_50 -> m0_52  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m0_50 -> m0_53  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m0_61 -> m0_61  [color=darkseagreen4, key=1, label=tuple, style=dashed];
m0_49 -> m0_49  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m0_59 -> m0_59  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m0_13 -> m0_22  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingState", style=dashed];
m0_13 -> m0_25  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m0_22 -> m0_28  [color=green, key=1, label=parentId, style=dashed];
m0_22 -> m0_24  [color=darkseagreen4, key=1, label=parentId, style=dashed];
m0_22 -> m0_26  [color=darkseagreen4, key=1, label=parentId, style=dashed];
m0_21 -> m0_23  [color=darkseagreen4, key=1, label=connection, style=dashed];
m0_21 -> m0_24  [color=darkseagreen4, key=1, label=connection, style=dashed];
m0_21 -> m0_26  [color=darkseagreen4, key=1, label=connection, style=dashed];
m0_6 -> m0_10  [color=green, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m0_6 -> m0_9  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m0_6 -> m0_11  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m0_8 -> m0_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_7 -> m0_9  [color=darkseagreen4, key=1, label=awaitingState, style=dashed];
m0_7 -> m0_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_101 -> m0_112  [color=darkseagreen4, key=1, label=client, style=dashed];
m0_103 -> m0_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_103 -> m0_105  [color=darkseagreen4, key=1, label=exception, style=dashed];
m0_72 -> m0_80  [color=green, key=1, label=started, style=dashed];
m0_73 -> m0_82  [color=darkseagreen4, key=1, label=firstAttempt, style=dashed];
m0_74 -> m0_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_115 -> m0_120  [color=darkseagreen4, key=1, label=client, style=dashed];
m0_116 -> m0_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_3 -> m0_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_124 -> m0_129  [color=darkseagreen4, key=1, label=client, style=dashed];
m0_125 -> m0_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_168 -> m0_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_168 -> m0_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_168 -> m0_63  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_168 -> m0_69  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_168 -> m0_74  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_168 -> m0_82  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_168 -> m0_112  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_168 -> m0_120  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_168 -> m0_134  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_168 -> m0_141  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_168 -> m0_145  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_168 -> m0_152  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m0_169 -> m0_69  [color=darkseagreen4, key=1, label=client, style=dashed];
m0_171 -> m0_112  [color=darkseagreen4, key=1, label=client, style=dashed];
m0_172 -> m0_120  [color=darkseagreen4, key=1, label=client, style=dashed];
m0_173 -> m0_129  [color=darkseagreen4, key=1, label=client, style=dashed];
m1_15 -> m1_53  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m1_15 -> m1_61  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m1_50 -> m1_52  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m1_50 -> m1_53  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m1_53 -> m1_53  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m1_53 -> m1_59  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m1_61 -> m1_61  [color=darkseagreen4, key=1, label=tuple, style=dashed];
m1_54 -> m1_59  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m1_59 -> m1_59  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m1_49 -> m1_49  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m1_6 -> m1_9  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m1_6 -> m1_10  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m1_6 -> m1_11  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m1_7 -> m1_9  [color=darkseagreen4, key=1, label=awaitingState, style=dashed];
m1_65 -> m1_77  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m1_65 -> m1_80  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_65 -> m1_81  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m1_71 -> m1_84  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m1_78 -> m1_84  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m1_72 -> m1_80  [color=darkseagreen4, key=1, label=started, style=dashed];
m1_73 -> m1_82  [color=darkseagreen4, key=1, label=firstAttempt, style=dashed];
m1_21 -> m1_23  [color=darkseagreen4, key=1, label=connection, style=dashed];
m1_21 -> m1_30  [color=darkseagreen4, key=1, label=connection, style=dashed];
m1_22 -> m1_28  [color=darkseagreen4, key=1, label=parentId, style=dashed];
m1_22 -> m1_30  [color=darkseagreen4, key=1, label=parentId, style=dashed];
m1_24 -> m1_30  [color=darkseagreen4, key=1, label=continuations, style=dashed];
m1_29 -> m1_31  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m1_102 -> m1_9  [color=darkseagreen4, key=1, label="Hangfire.Continuations.ContinuationsSupportAttribute", style=dashed];
m1_102 -> m1_10  [color=darkseagreen4, key=1, label="Hangfire.Continuations.ContinuationsSupportAttribute", style=dashed];
m1_102 -> m1_31  [color=darkseagreen4, key=1, label="Hangfire.Continuations.ContinuationsSupportAttribute", style=dashed];
m3_12 -> m3_23  [color=darkseagreen4, key=1, label=pager, style=dashed];
m3_12 -> m3_69  [color=darkseagreen4, key=1, label=pager, style=dashed];
m3_13 -> m3_17  [color=darkseagreen4, key=1, label=jobIds, style=dashed];
m3_13 -> m3_25  [color=darkseagreen4, key=1, label=jobIds, style=dashed];
m3_25 -> m3_37  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m3_25 -> m3_39  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m3_25 -> m3_44  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m3_30 -> m3_35  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m3_30 -> m3_41  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m3_30 -> m3_44  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m3_30 -> m3_65  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m3_31 -> m3_47  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m3_31 -> m3_49  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m3_31 -> m3_56  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m3_28 -> m3_54  [color=darkseagreen4, key=1, label=parentStateData, style=dashed];
m3_28 -> m3_58  [color=darkseagreen4, key=1, label=parentStateData, style=dashed];
m3_28 -> m3_60  [color=darkseagreen4, key=1, label=parentStateData, style=dashed];
m3_33 -> m3_54  [color=darkseagreen4, key=1, label=parentStateData, style=dashed];
m3_33 -> m3_58  [color=darkseagreen4, key=1, label=parentStateData, style=dashed];
m3_33 -> m3_60  [color=darkseagreen4, key=1, label=parentStateData, style=dashed];
m3_98 -> m3_4  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_5  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_14  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_15  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_16  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_18  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_19  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_20  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_21  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_22  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_23  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_24  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_34  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_35  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_36  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_37  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_38  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_39  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_40  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_42  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_43  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_44  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_45  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_46  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_48  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_49  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_50  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_51  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_52  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_53  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_55  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_56  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_57  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_58  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_59  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_60  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_61  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_62  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_63  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_64  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_65  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_66  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_67  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_68  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_69  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_70  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_71  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m3_98 -> m3_72  [color=darkseagreen4, key=1, label="Hangfire.Continuations.AwaitingJobsPage", style=dashed];
m4_8 -> m4_10  [color=darkseagreen4, key=1, label="Hangfire.IBootstrapperConfiguration", style=dashed];
m4_9 -> m4_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_10 -> m4_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_44 -> m4_48  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m4_45 -> m4_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_17 -> m4_19  [color=darkseagreen4, key=1, label="Hangfire.IBootstrapperConfiguration", style=dashed];
m4_18 -> m4_22  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_19 -> m4_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_24 -> m4_26  [color=darkseagreen4, key=1, label="Hangfire.IBootstrapperConfiguration", style=dashed];
m4_25 -> m4_29  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_26 -> m4_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_31 -> m4_35  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m4_32 -> m4_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1 -> m4_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_37 -> m4_41  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m4_38 -> m4_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_50 -> m4_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_51 -> m4_22  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_52 -> m4_29  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_53 -> m4_35  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m4_54 -> m4_41  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m4_55 -> m4_48  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m4_56 -> m4_48  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m6_6 -> m6_10  [color=green, key=1, label="Hangfire.Client.CreateContext", style=dashed];
m6_7 -> m6_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_7 -> m6_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_11 -> m6_14  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m6_26 -> m6_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, object>", style=dashed];
m6_29 -> m6_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, object>", style=dashed];
m6_32 -> m6_13  [color=darkseagreen4, key=1, label="Hangfire.Client.CoreJobCreationProcess", style=dashed];
m7_3 -> m7_109  [color=green, key=1, label="lambda expression", style=dashed];
m7_2 -> m7_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_4 -> m7_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_11 -> m7_32  [color=green, key=1, label=command, style=dashed];
m7_11 -> m7_13  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_11 -> m7_23  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_11 -> m7_38  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_11 -> m7_44  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_11 -> m7_50  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_11 -> m7_56  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_11 -> m7_60  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_11 -> m7_63  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_11 -> m7_70  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_11 -> m7_76  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_11 -> m7_78  [color=darkseagreen4, key=1, label=command, style=dashed];
m7_33 -> m7_35  [color=green, key=1, label=workCount, style=dashed];
m7_15 -> m7_19  [color=green, key=1, label=i, style=dashed];
m7_14 -> m7_16  [color=green, key=1, label=workCount, style=dashed];
m7_17 -> m7_122  [color=green, key=1, label=number, style=dashed];
m7_19 -> m7_19  [color=green, key=1, label=i, style=dashed];
m7_18 -> m7_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_34 -> m7_37  [color=green, key=1, label=i, style=dashed];
m7_37 -> m7_37  [color=green, key=1, label=i, style=dashed];
m7_36 -> m7_129  [color=green, key=1, label="lambda expression", style=dashed];
m7_5 -> m7_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_24 -> m7_26  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m7_39 -> m7_41  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m7_45 -> m7_47  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m7_51 -> m7_53  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m7_57 -> m7_59  [color=darkseagreen4, key=1, label=seconds, style=dashed];
m7_61 -> m7_157  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m7_64 -> m7_66  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m7_42 -> m7_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_48 -> m7_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_54 -> m7_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_62 -> m7_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_67 -> m7_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_77 -> m7_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_6 -> m7_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_25 -> m7_28  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_40 -> m7_43  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_46 -> m7_49  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_52 -> m7_55  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_58 -> m7_154  [color=darkseagreen4, key=1, label=number, style=dashed];
m7_59 -> m7_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_65 -> m7_69  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_72 -> m7_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_28 -> m7_28  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_27 -> m7_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_43 -> m7_43  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_49 -> m7_49  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_55 -> m7_55  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_69 -> m7_69  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_105 -> m7_189  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_105 -> m7_182  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_105 -> m7_193  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_180 -> m7_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_180 -> m7_185  [color=darkseagreen4, key=1, label=lastId, style=dashed];
m7_183 -> m7_192  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_183 -> m7_185  [color=darkseagreen4, key=1, label=lastId, style=dashed];
m7_185 -> m7_195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_181 -> m7_193  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_181 -> m7_184  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_184 -> m7_184  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_166 -> m7_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_167 -> m7_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_199 -> m7_122  [color=darkseagreen4, key=1, label=number, style=dashed];
m7_201 -> m7_157  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m7_200 -> m7_154  [color=darkseagreen4, key=1, label=number, style=dashed];
m7_202 -> m7_189  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_202 -> m7_193  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_203 -> m7_193  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_9 -> m8_11  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m8_15 -> m8_5  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint", style=dashed];
m8_15 -> m8_10  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint", style=dashed];
m8_15 -> m8_11  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.TypeBinaryExpressionFingerprint", style=dashed];
m9_208 -> m9_213  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_11 -> m9_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_11 -> m9_15  [color=darkseagreen4, key=1, label=removedCount, style=dashed];
m9_18 -> m9_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_17 -> m9_17  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m9_33 -> m9_39  [color=green, key=1, label="lambda expression", style=dashed];
m9_36 -> m9_17  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m9_36 -> m9_30  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m9_165 -> m9_174  [color=green, key=1, label=process, style=dashed];
m9_164 -> m9_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_166 -> m9_173  [color=green, key=1, label="lambda expression", style=dashed];
m9_178 -> m9_188  [color=green, key=1, label=process, style=dashed];
m9_177 -> m9_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_179 -> m9_187  [color=green, key=1, label="lambda expression", style=dashed];
m9_179 -> m9_181  [color=green, key=1, label=thrownException, style=dashed];
m9_193 -> m9_205  [color=green, key=1, label=process, style=dashed];
m9_192 -> m9_200  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_194 -> m9_204  [color=green, key=1, label="lambda expression", style=dashed];
m9_191 -> m9_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_64 -> m9_245  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_64 -> m9_246  [color=darkseagreen4, key=1, label=int, style=dashed];
m9_8 -> m9_13  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m9_8 -> m9_17  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m9_13 -> m9_13  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m9_93 -> m9_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_7 -> m9_12  [color=green, key=1, label="lambda expression", style=dashed];
m9_117 -> m9_131  [color=green, key=1, label=process, style=dashed];
m9_116 -> m9_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_118 -> m9_130  [color=green, key=1, label="lambda expression", style=dashed];
m9_115 -> m9_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_56 -> m9_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_112 -> m9_233  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m9_45 -> m9_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_136 -> m9_147  [color=green, key=1, label=process, style=dashed];
m9_135 -> m9_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_137 -> m9_146  [color=green, key=1, label="lambda expression", style=dashed];
m9_134 -> m9_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_104 -> m9_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_0 -> m9_2  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m9_153 -> m9_160  [color=green, key=1, label=process, style=dashed];
m9_154 -> m9_159  [color=green, key=1, label="lambda expression", style=dashed];
m9_101 -> m9_240  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m9_254 -> m9_19  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_20  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_33  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_35  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_47  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_58  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_73  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_87  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_95  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_106  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_118  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_131  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_137  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_147  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_160  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_166  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_174  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_188  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_194  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_205  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_251  [color=green, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_18  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_62  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_99  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_115  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_128  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_134  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_144  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_254 -> m9_192  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", style=dashed];
m9_255 -> m9_131  [color=green, key=1, label=process, style=dashed];
m9_256 -> m9_147  [color=green, key=1, label=process, style=dashed];
m9_257 -> m9_160  [color=green, key=1, label=process, style=dashed];
m9_258 -> m9_174  [color=green, key=1, label=process, style=dashed];
m9_259 -> m9_188  [color=green, key=1, label=process, style=dashed];
m9_260 -> m9_205  [color=green, key=1, label=process, style=dashed];
m10_92 -> m10_95  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m10_93 -> m10_103  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_93 -> m10_105  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_96 -> m10_99  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m10_94 -> m10_104  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_104 -> m10_104  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_0 -> m10_3  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m10_0 -> m10_5  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m10_145 -> m10_150  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression", style=dashed];
m10_147 -> m10_149  [color=darkseagreen4, key=1, label=constantExpression, style=dashed];
m10_81 -> m10_84  [color=darkseagreen4, key=1, label=instance, style=dashed];
m10_120 -> m10_122  [color=darkseagreen4, key=1, label=disposable, style=dashed];
m10_18 -> m10_22  [color=darkseagreen4, key=1, label=instance, style=dashed];
m10_20 -> m10_22  [color=darkseagreen4, key=1, label=instance, style=dashed];
m10_32 -> m10_35  [color=darkseagreen4, key=1, label=bool, style=dashed];
m10_128 -> m10_130  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m10_129 -> m10_135  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m10_129 -> m10_136  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m10_130 -> m10_132  [color=darkseagreen4, key=1, label=argument, style=dashed];
m10_131 -> m10_135  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_46 -> m10_49  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m10_67 -> m10_70  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m10_70 -> m10_73  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m10_56 -> m10_59  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m10_153 -> m10_10  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m10_153 -> m10_15  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m10_153 -> m10_19  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m10_153 -> m10_22  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m10_153 -> m10_28  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m10_153 -> m10_33  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m10_153 -> m10_35  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m10_153 -> m10_61  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m10_153 -> m10_63  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m10_153 -> m10_64  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m10_153 -> m10_65  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m10_153 -> m10_68  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m10_153 -> m10_83  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m10_153 -> m10_114  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m11_630 -> m11_632  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_700 -> m11_702  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_98 -> m11_103  [color=darkseagreen4, key=1, label=thread, style=dashed];
m11_101 -> m11_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_96 -> m11_112  [color=darkseagreen4, key=1, label=releaseLock, style=dashed];
m11_96 -> m11_117  [color=darkseagreen4, key=1, label=releaseLock, style=dashed];
m11_96 -> m11_102  [color=darkseagreen4, key=1, label=releaseLock, style=dashed];
m11_97 -> m11_112  [color=darkseagreen4, key=1, label=lockAcquired, style=dashed];
m11_97 -> m11_116  [color=darkseagreen4, key=1, label=lockAcquired, style=dashed];
m11_97 -> m11_100  [color=darkseagreen4, key=1, label=lockAcquired, style=dashed];
m11_889 -> m11_891  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_543 -> m11_545  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_429 -> m11_431  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_817 -> m11_819  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_746 -> m11_748  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_943 -> m11_945  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_336 -> m11_338  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_409 -> m11_411  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_370 -> m11_372  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_126 -> m11_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_935 -> m11_937  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_274 -> m11_276  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_961 -> m11_963  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_86 -> m11_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_798 -> m11_800  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_347 -> m11_349  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_418 -> m11_420  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_495 -> m11_497  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_851 -> m11_853  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_305 -> m11_307  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_737 -> m11_739  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_216 -> m11_218  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_925 -> m11_927  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_467 -> m11_469  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_391 -> m11_393  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_316 -> m11_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_969 -> m11_971  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_644 -> m11_646  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_575 -> m11_577  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_284 -> m11_286  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_654 -> m11_656  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_506 -> m11_508  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_505 -> m11_509  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m11_860 -> m11_862  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_16 -> m11_21  [color=green, key=1, label="lambda expression", style=dashed];
m11_662 -> m11_664  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_871 -> m11_873  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_790 -> m11_792  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_477 -> m11_479  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_29 -> m11_32  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_30 -> m11_32  [color=green, key=1, label=token, style=dashed];
m11_30 -> m11_33  [color=green, key=1, label=token, style=dashed];
m11_30 -> m11_39  [color=green, key=1, label=token, style=dashed];
m11_31 -> m11_33  [color=darkseagreen4, key=1, label=queues, style=dashed];
m11_31 -> m11_39  [color=darkseagreen4, key=1, label=queues, style=dashed];
m11_33 -> m11_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_50 -> m11_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_78 -> m11_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_120 -> m11_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_148 -> m11_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_160 -> m11_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_237 -> m11_239  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_277 -> m11_279  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_328 -> m11_331  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_339 -> m11_342  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_383 -> m11_386  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_394 -> m11_397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_421 -> m11_424  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_432 -> m11_434  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_458 -> m11_461  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_470 -> m11_473  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_498 -> m11_500  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_519 -> m11_521  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_546 -> m11_548  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_568 -> m11_570  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_597 -> m11_600  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_608 -> m11_611  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_647 -> m11_649  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_676 -> m11_678  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_703 -> m11_705  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_722 -> m11_724  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_757 -> m11_759  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_783 -> m11_785  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_810 -> m11_812  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_836 -> m11_838  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_863 -> m11_866  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_874 -> m11_877  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_900 -> m11_903  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_928 -> m11_930  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_954 -> m11_956  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_112 -> m11_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_47 -> m11_50  [color=darkseagreen4, key=1, label=token, style=dashed];
m11_47 -> m11_54  [color=darkseagreen4, key=1, label=token, style=dashed];
m11_46 -> m11_50  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_46 -> m11_54  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_77 -> m11_82  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_119 -> m11_123  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_147 -> m11_152  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_159 -> m11_164  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_236 -> m11_240  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_276 -> m11_280  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_327 -> m11_332  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_338 -> m11_343  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_382 -> m11_387  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_393 -> m11_398  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_420 -> m11_425  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_431 -> m11_435  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_457 -> m11_462  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_469 -> m11_474  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_497 -> m11_501  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_518 -> m11_522  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_545 -> m11_549  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_567 -> m11_571  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_596 -> m11_601  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_607 -> m11_612  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_646 -> m11_650  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_675 -> m11_679  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_702 -> m11_706  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_721 -> m11_725  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_756 -> m11_760  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_782 -> m11_786  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_809 -> m11_813  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_835 -> m11_839  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_862 -> m11_867  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_873 -> m11_878  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_899 -> m11_904  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_927 -> m11_931  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_953 -> m11_957  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_138 -> m11_140  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_349 -> m11_352  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_360 -> m11_363  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_360 -> m11_364  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_372 -> m11_375  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_479 -> m11_481  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_479 -> m11_487  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_508 -> m11_510  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_529 -> m11_531  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_556 -> m11_558  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_175 -> m11_181  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m11_175 -> m11_190  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m11_175 -> m11_191  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m11_179 -> m11_181  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m11_179 -> m11_182  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m11_179 -> m11_183  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m11_179 -> m11_190  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m11_179 -> m11_191  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m11_176 -> m11_180  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m11_176 -> m11_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_176 -> m11_178  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m11_186 -> m11_188  [color=darkseagreen4, key=1, label=job, style=dashed];
m11_186 -> m11_189  [color=darkseagreen4, key=1, label=job, style=dashed];
m11_192 -> m11_194  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m11_192 -> m11_209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_192 -> m11_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_221 -> m11_227  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_221 -> m11_230  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_258 -> m11_261  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_258 -> m11_262  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_258 -> m11_260  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_258 -> m11_263  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_258 -> m11_264  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_258 -> m11_265  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_297 -> m11_299  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_297 -> m11_300  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_297 -> m11_301  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_310 -> m11_312  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_482 -> m11_484  [color=darkseagreen4, key=1, label=server, style=dashed];
m11_482 -> m11_485  [color=darkseagreen4, key=1, label=server, style=dashed];
m11_488 -> m11_490  [color=darkseagreen4, key=1, label=sameServer, style=dashed];
m11_532 -> m11_534  [color=darkseagreen4, key=1, label=servers, style=dashed];
m11_532 -> m11_536  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_532 -> m11_539  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_578 -> m11_580  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_588 -> m11_590  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_588 -> m11_591  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_619 -> m11_621  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_619 -> m11_623  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_619 -> m11_626  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_634 -> m11_637  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_634 -> m11_640  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_666 -> m11_668  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_666 -> m11_669  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_666 -> m11_670  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_164 -> m11_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_220 -> m11_224  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_256 -> m11_270  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_802 -> m11_804  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_855 -> m11_857  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_973 -> m11_975  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_362 -> m11_364  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m11_772 -> m11_774  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_455 -> m11_457  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_565 -> m11_567  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_325 -> m11_327  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_244 -> m11_246  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_57 -> m11_59  [color=green, key=1, label="lambda expression", style=dashed];
m11_977 -> m11_981  [color=darkseagreen4, key=1, label="System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>", style=dashed];
m11_978 -> m11_981  [color=darkseagreen4, key=1, label=sqlConnection, style=dashed];
m11_401 -> m11_403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_807 -> m11_809  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_615 -> m11_617  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_594 -> m11_596  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_3 -> m11_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_157 -> m11_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_691 -> m11_693  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_843 -> m11_845  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_554 -> m11_556  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_833 -> m11_835  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_292 -> m11_294  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_881 -> m11_883  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_43 -> m11_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_172 -> m11_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_754 -> m11_756  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_26 -> m11_29  [color=green, key=1, label="lambda expression", style=dashed];
m11_584 -> m11_586  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_136 -> m11_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_605 -> m11_607  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_764 -> m11_766  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_780 -> m11_782  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_28 -> m11_991  [color=darkseagreen4, key=1, label="System.Action<Hangfire.SqlServer.SqlServerConnection>", style=dashed];
m11_989 -> m11_996  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_719 -> m11_721  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_897 -> m11_899  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_380 -> m11_382  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_917 -> m11_919  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_145 -> m11_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_729 -> m11_731  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_951 -> m11_953  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_66 -> m11_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_673 -> m11_675  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_446 -> m11_448  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_445 -> m11_449  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m11_711 -> m11_713  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_358 -> m11_360  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_527 -> m11_529  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_526 -> m11_530  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m11_908 -> m11_910  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_75 -> m11_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_253 -> m11_255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_516 -> m11_518  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_825 -> m11_827  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_234 -> m11_236  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_438 -> m11_440  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_683 -> m11_685  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1000 -> m11_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1000 -> m11_33  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1000 -> m11_49  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1000 -> m11_112  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1000 -> m11_101  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1000 -> m11_136  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1000 -> m11_234  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1000 -> m11_274  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1000 -> m11_429  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1000 -> m11_495  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1000 -> m11_516  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1000 -> m11_543  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1000 -> m11_565  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1000 -> m11_644  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1000 -> m11_673  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1000 -> m11_700  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1000 -> m11_719  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1000 -> m11_754  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1000 -> m11_780  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1000 -> m11_807  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1000 -> m11_833  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1000 -> m11_925  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1000 -> m11_951  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1000 -> m11_989  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m11_1001 -> m11_39  [color=darkseagreen4, key=1, label=token, style=dashed];
m11_1002 -> m11_39  [color=darkseagreen4, key=1, label=queues, style=dashed];
m11_1006 -> m11_112  [color=darkseagreen4, key=1, label=releaseLock, style=dashed];
m11_1006 -> m11_117  [color=darkseagreen4, key=1, label=releaseLock, style=dashed];
m11_1007 -> m11_112  [color=darkseagreen4, key=1, label=lockAcquired, style=dashed];
m11_1007 -> m11_116  [color=darkseagreen4, key=1, label=lockAcquired, style=dashed];
m11_1003 -> m11_54  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1004 -> m11_54  [color=darkseagreen4, key=1, label=token, style=dashed];
m11_1005 -> m11_82  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1008 -> m11_123  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1009 -> m11_152  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1010 -> m11_164  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1011 -> m11_240  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1013 -> m11_280  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1017 -> m11_332  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1018 -> m11_343  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1022 -> m11_387  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1023 -> m11_398  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1025 -> m11_425  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1026 -> m11_435  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1028 -> m11_462  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1029 -> m11_474  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1030 -> m11_501  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1032 -> m11_522  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1034 -> m11_549  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1036 -> m11_571  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1038 -> m11_601  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1039 -> m11_612  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1040 -> m11_650  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1042 -> m11_679  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1044 -> m11_706  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1046 -> m11_725  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1049 -> m11_760  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1051 -> m11_786  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1053 -> m11_813  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1055 -> m11_839  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1057 -> m11_867  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1058 -> m11_878  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1060 -> m11_904  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1062 -> m11_931  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1064 -> m11_957  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m11_1027 -> m11_449  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m11_1031 -> m11_509  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m11_1033 -> m11_530  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_12 -> m13_15  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m13_12 -> m13_16  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m13_12 -> m13_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_16 -> m13_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_25 -> m13_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_26 -> m13_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", style=dashed];
m13_27 -> m13_22  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m14_58 -> m14_63  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m14_58 -> m14_72  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m14_58 -> m14_75  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m14_58 -> m14_76  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m14_58 -> m14_77  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m14_71 -> m14_74  [color=darkseagreen4, key=1, label=exception, style=dashed];
m14_71 -> m14_76  [color=darkseagreen4, key=1, label=exception, style=dashed];
m14_88 -> m14_10  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_88 -> m14_11  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_88 -> m14_20  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_88 -> m14_21  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_88 -> m14_22  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_88 -> m14_26  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_88 -> m14_27  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_88 -> m14_29  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_88 -> m14_33  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_88 -> m14_36  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_88 -> m14_37  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_88 -> m14_38  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_88 -> m14_39  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_88 -> m14_46  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_88 -> m14_47  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_88 -> m14_48  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_88 -> m14_49  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_88 -> m14_50  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_88 -> m14_54  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_88 -> m14_63  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_88 -> m14_69  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_88 -> m14_72  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m15_25 -> m15_8  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m15_25 -> m15_15  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m15_25 -> m15_16  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m15_25 -> m15_23  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m19_10 -> m19_12  [color=darkseagreen4, key=1, label=state, style=dashed];
m19_11 -> m19_13  [color=darkseagreen4, key=1, label=data, style=dashed];
m19_11 -> m19_14  [color=darkseagreen4, key=1, label=data, style=dashed];
m23_0 -> m23_2  [color=darkseagreen4, key=1, label="HangFire.Storage.IWriteOnlyTransaction", style=dashed];
m26_132 -> m26_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_132 -> m26_135  [color=darkseagreen4, key=1, label=double, style=dashed];
m26_137 -> m26_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_262 -> m26_264  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_266 -> m26_268  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_173 -> m26_175  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_173 -> m26_176  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerContext", style=dashed];
m26_173 -> m26_177  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerContext", style=dashed];
m26_179 -> m26_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_15 -> m26_17  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m26_15 -> m26_20  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m26_15 -> m26_22  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m26_18 -> m26_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_193 -> m26_195  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_196 -> m26_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_221 -> m26_223  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_225 -> m26_227  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_294 -> m26_296  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_298 -> m26_300  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_315 -> m26_317  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_319 -> m26_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_253 -> m26_255  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_257 -> m26_259  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_63 -> m26_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_67 -> m26_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_156 -> m26_158  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_159 -> m26_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_101 -> m26_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_101 -> m26_104  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_101 -> m26_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_106 -> m26_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_231 -> m26_233  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_235 -> m26_237  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_244 -> m26_246  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_248 -> m26_250  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_112 -> m26_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_112 -> m26_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_112 -> m26_116  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_117 -> m26_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_185 -> m26_187  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_188 -> m26_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_86 -> m26_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_90 -> m26_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_306 -> m26_308  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_310 -> m26_312  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_35 -> m26_37  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m26_35 -> m26_38  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m26_35 -> m26_39  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m26_35 -> m26_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m26_35 -> m26_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m26_49 -> m26_54  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m26_46 -> m26_54  [color=darkseagreen4, key=1, label=DbConnection, style=dashed];
m26_163 -> m26_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_163 -> m26_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_238 -> m26_241  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_269 -> m26_272  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_301 -> m26_304  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_143 -> m26_145  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_143 -> m26_146  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m26_143 -> m26_147  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m26_143 -> m26_153  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m26_149 -> m26_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_274 -> m26_276  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_274 -> m26_277  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_274 -> m26_278  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_280 -> m26_282  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_212 -> m26_214  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_215 -> m26_217  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_0 -> m26_2  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m26_122 -> m26_124  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_125 -> m26_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_285 -> m26_287  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_289 -> m26_291  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_202 -> m26_202  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m26_204 -> m26_208  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_324 -> m26_8  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m26_324 -> m26_32  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m26_324 -> m26_40  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m26_324 -> m26_53  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m26_324 -> m26_54  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m26_329 -> m26_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m26_329 -> m26_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m26_343 -> m26_153  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m27_7 -> m27_14  [color=green, key=1, label=pager, style=dashed];
m27_7 -> m27_25  [color=green, key=1, label=pager, style=dashed];
m27_7 -> m27_64  [color=green, key=1, label=pager, style=dashed];
m27_8 -> m27_33  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m27_35 -> m27_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_35 -> m27_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_37 -> m27_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_37 -> m27_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_56 -> m27_56  [color=green, key=1, label=job, style=dashed];
m27_56 -> m27_59  [color=green, key=1, label=job, style=dashed];
m27_51 -> m27_56  [color=green, key=1, label=job, style=dashed];
m27_51 -> m27_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_59 -> m27_59  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_60 -> m27_60  [color=green, key=1, label=job, style=dashed];
m27_41 -> m27_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_41 -> m27_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_44 -> m27_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_44 -> m27_46  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_33 -> m27_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_39 -> m27_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_39 -> m27_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_39 -> m27_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_46 -> m27_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_46 -> m27_46  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_84 -> m27_13  [color=green, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_15  [color=green, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_17  [color=green, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_22  [color=green, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_26  [color=green, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_36  [color=green, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_48  [color=green, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_56  [color=green, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_60  [color=green, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_61  [color=green, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_4  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_5  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_10  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_11  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_12  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_16  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_18  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_19  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_20  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_21  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_23  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_24  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_25  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_27  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_28  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_29  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_30  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_31  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_32  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_34  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_35  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_37  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_38  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_40  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_41  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_42  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_43  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_44  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_45  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_47  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_49  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_50  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_52  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_53  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_54  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_55  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_57  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_58  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_62  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_63  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_64  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_65  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m27_84 -> m27_66  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.DeletedJobsPage", style=dashed];
m28_19 -> m28_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_316 -> m28_320  [color=darkseagreen4, key=1, label=exception, style=dashed];
m28_317 -> m28_325  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_318 -> m28_329  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_318 -> m28_334  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_319 -> m28_333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_337 -> m28_343  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_338 -> m28_346  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_338 -> m28_350  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_339 -> m28_349  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_363 -> m28_369  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_363 -> m28_374  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_364 -> m28_373  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_364 -> m28_366  [color=darkseagreen4, key=1, label=exception, style=dashed];
m28_102 -> m28_110  [color=darkseagreen4, key=1, label=date, style=dashed];
m28_103 -> m28_105  [color=darkseagreen4, key=1, label=expected, style=dashed];
m28_104 -> m28_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_138 -> m28_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_353 -> m28_355  [color=darkseagreen4, key=1, label=type, style=dashed];
m28_353 -> m28_358  [color=darkseagreen4, key=1, label=type, style=dashed];
m28_354 -> m28_358  [color=darkseagreen4, key=1, label=method, style=dashed];
m28_355 -> m28_357  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_268 -> m28_272  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_377 -> m28_382  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_377 -> m28_387  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_378 -> m28_386  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_378 -> m28_380  [color=darkseagreen4, key=1, label=thrownException, style=dashed];
m28_155 -> m28_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_155 -> m28_157  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_52 -> m28_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_174 -> m28_178  [color=darkseagreen4, key=1, label=instance, style=dashed];
m28_174 -> m28_181  [color=darkseagreen4, key=1, label=instance, style=dashed];
m28_175 -> m28_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_114 -> m28_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_114 -> m28_116  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_121 -> m28_473  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_121 -> m28_474  [color=darkseagreen4, key=1, label=int, style=dashed];
m28_76 -> m28_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_69 -> m28_73  [color=darkseagreen4, key=1, label=method, style=dashed];
m28_70 -> m28_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_112 -> m28_483  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m28_37 -> m28_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_37 -> m28_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_241 -> m28_245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_307 -> m28_311  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_87 -> m28_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_149 -> m28_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_178 -> m28_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_188 -> m28_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_188 -> m28_191  [color=darkseagreen4, key=1, label=test, style=dashed];
m28_191 -> m28_191  [color=darkseagreen4, key=1, label=test, style=dashed];
m28_199 -> m28_201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_209 -> m28_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_185 -> m28_187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_185 -> m28_188  [color=darkseagreen4, key=1, label=test, style=dashed];
m28_298 -> m28_302  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_31 -> m28_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_11 -> m28_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_93 -> m28_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_93 -> m28_95  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_216 -> m28_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_216 -> m28_225  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_217 -> m28_224  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_415 -> m28_425  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_416 -> m28_418  [color=darkseagreen4, key=1, label=nonCachedAttributes, style=dashed];
m28_416 -> m28_420  [color=darkseagreen4, key=1, label=nonCachedAttributes, style=dashed];
m28_417 -> m28_419  [color=darkseagreen4, key=1, label=cachedAttributes, style=dashed];
m28_417 -> m28_421  [color=darkseagreen4, key=1, label=cachedAttributes, style=dashed];
m28_429 -> m28_438  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_430 -> m28_432  [color=darkseagreen4, key=1, label=nonCachedAttributes, style=dashed];
m28_430 -> m28_434  [color=darkseagreen4, key=1, label=nonCachedAttributes, style=dashed];
m28_431 -> m28_433  [color=darkseagreen4, key=1, label=cachedAttributes, style=dashed];
m28_431 -> m28_435  [color=darkseagreen4, key=1, label=cachedAttributes, style=dashed];
m28_314 -> m28_469  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m28_84 -> m28_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_206 -> m28_208  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_229 -> m28_233  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_229 -> m28_237  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_230 -> m28_236  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_196 -> m28_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_250 -> m28_254  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_123 -> m28_132  [color=darkseagreen4, key=1, label=date, style=dashed];
m28_123 -> m28_135  [color=darkseagreen4, key=1, label=date, style=dashed];
m28_125 -> m28_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_125 -> m28_128  [color=darkseagreen4, key=1, label=enJob, style=dashed];
m28_127 -> m28_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_442 -> m28_450  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_443 -> m28_454  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_444 -> m28_446  [color=darkseagreen4, key=1, label=id1, style=dashed];
m28_164 -> m28_170  [color=darkseagreen4, key=1, label=instance, style=dashed];
m28_165 -> m28_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_25 -> m28_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_146 -> m28_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_259 -> m28_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_476 -> m28_478  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_390 -> m28_394  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_390 -> m28_392  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_390 -> m28_403  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_391 -> m28_398  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_392 -> m28_402  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_60 -> m28_66  [color=darkseagreen4, key=1, label=method, style=dashed];
m28_406 -> m28_410  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_508 -> m28_11  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_15  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_19  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_22  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_25  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_28  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_31  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_34  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_38  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_39  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_40  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_57  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_66  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_70  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_110  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_119  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_132  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_135  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_225  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_237  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_242  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_251  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_260  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_273  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_269  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_282  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_293  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_303  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_299  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_308  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_317  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_330  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_334  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_337  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_347  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_350  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_374  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_387  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_391  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_392  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_508 -> m28_403  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m28_509 -> m28_66  [color=darkseagreen4, key=1, label=method, style=dashed];
m28_510 -> m28_73  [color=darkseagreen4, key=1, label=method, style=dashed];
m28_511 -> m28_110  [color=darkseagreen4, key=1, label=date, style=dashed];
m28_512 -> m28_132  [color=darkseagreen4, key=1, label=date, style=dashed];
m28_512 -> m28_135  [color=darkseagreen4, key=1, label=date, style=dashed];
m28_513 -> m28_170  [color=darkseagreen4, key=1, label=instance, style=dashed];
m28_514 -> m28_178  [color=darkseagreen4, key=1, label=instance, style=dashed];
m28_514 -> m28_181  [color=darkseagreen4, key=1, label=instance, style=dashed];
m28_515 -> m28_188  [color=darkseagreen4, key=1, label=test, style=dashed];
m28_515 -> m28_191  [color=darkseagreen4, key=1, label=test, style=dashed];
m28_516 -> m28_225  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_517 -> m28_237  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_518 -> m28_334  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_519 -> m28_350  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_520 -> m28_358  [color=darkseagreen4, key=1, label=type, style=dashed];
m28_521 -> m28_358  [color=darkseagreen4, key=1, label=method, style=dashed];
m28_522 -> m28_374  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_523 -> m28_387  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_524 -> m28_403  [color=darkseagreen4, key=1, label=job, style=dashed];
m29_23 -> m29_25  [color=darkseagreen4, key=1, label=exceptionContext, style=dashed];
m29_15 -> m29_19  [color=darkseagreen4, key=1, label="Hangfire.Server.PerformContext", style=dashed];
m29_16 -> m29_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_18 -> m29_24  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m29_17 -> m29_19  [color=green, key=1, label=job, style=dashed];
m29_32 -> m29_91  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerExceptionContext", style=dashed];
m29_4 -> m29_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_5 -> m29_7  [color=green, key=1, label=job, style=dashed];
m29_59 -> m29_65  [color=darkseagreen4, key=1, label="Hangfire.Server.PerformingContext", style=dashed];
m29_59 -> m29_66  [color=darkseagreen4, key=1, label="Hangfire.Server.PerformingContext", style=dashed];
m29_59 -> m29_73  [color=darkseagreen4, key=1, label="Hangfire.Server.IServerFilter", style=dashed];
m29_59 -> m29_79  [color=darkseagreen4, key=1, label="Hangfire.Server.IServerFilter", style=dashed];
m29_72 -> m29_76  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m29_72 -> m29_79  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m29_72 -> m29_84  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m29_71 -> m29_78  [color=darkseagreen4, key=1, label=wasError, style=dashed];
m29_54 -> m29_57  [color=darkseagreen4, key=1, label="System.Func<Hangfire.Server.PerformedContext>", style=dashed];
m29_30 -> m29_50  [color=darkseagreen4, key=1, label="Hangfire.Server.PerformContext", style=dashed];
m29_38 -> m29_57  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m29_40 -> m29_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_94 -> m29_19  [color=darkseagreen4, key=1, label="Hangfire.Server.JobPerformanceProcess", style=dashed];
m29_94 -> m29_33  [color=darkseagreen4, key=1, label="Hangfire.Server.JobPerformanceProcess", style=dashed];
m29_95 -> m29_50  [color=darkseagreen4, key=1, label="Hangfire.Server.PerformContext", style=dashed];
m29_96 -> m29_57  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m29_97 -> m29_57  [color=darkseagreen4, key=1, label="System.Func<Hangfire.Server.PerformedContext>", style=dashed];
m29_98 -> m29_57  [color=darkseagreen4, key=1, label="Hangfire.Server.IServerFilter", style=dashed];
m30_0 -> m30_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>", style=dashed];
m30_0 -> m30_5  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m30_5 -> m30_5  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m30_62 -> m30_64  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m30_63 -> m30_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_64 -> m30_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_89 -> m30_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_87 -> m30_89  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m30_88 -> m30_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_100 -> m30_10  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m30_100 -> m30_22  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m30_100 -> m30_28  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m30_100 -> m30_29  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m30_100 -> m30_39  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m30_100 -> m30_40  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m30_100 -> m30_43  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m30_100 -> m30_50  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m30_100 -> m30_51  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m30_100 -> m30_53  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m30_100 -> m30_54  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m30_100 -> m30_56  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m30_100 -> m30_63  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m30_100 -> m30_74  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m30_100 -> m30_64  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m30_100 -> m30_78  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m30_100 -> m30_65  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m30_100 -> m30_88  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m30_100 -> m30_93  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m30_100 -> m30_89  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m30_100 -> m30_97  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_0 -> m32_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m32_0 -> m32_5  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m32_5 -> m32_5  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m32_57 -> m32_59  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m32_57 -> m32_62  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m32_57 -> m32_63  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m32_58 -> m32_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_59 -> m32_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_62 -> m32_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_61 -> m32_81  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m32_85 -> m32_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_83 -> m32_85  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m32_83 -> m32_86  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m32_84 -> m32_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_96 -> m32_10  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_96 -> m32_23  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_96 -> m32_24  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_96 -> m32_38  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_96 -> m32_39  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_96 -> m32_40  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_96 -> m32_45  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_96 -> m32_46  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_96 -> m32_47  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_96 -> m32_48  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_96 -> m32_49  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_96 -> m32_51  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_96 -> m32_58  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_96 -> m32_69  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_96 -> m32_59  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_96 -> m32_73  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_96 -> m32_60  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_96 -> m32_62  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_96 -> m32_81  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_96 -> m32_84  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_96 -> m32_89  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_96 -> m32_85  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_96 -> m32_93  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m32_97 -> m32_81  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m33_16 -> m33_24  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m33_16 -> m33_27  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m33_18 -> m33_24  [color=darkseagreen4, key=1, label=connection, style=dashed];
m33_22 -> m33_24  [color=darkseagreen4, key=1, label=recurringJob, style=dashed];
m33_21 -> m33_24  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
m33_21 -> m33_26  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
m33_35 -> m33_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m33_35 -> m33_56  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_35 -> m33_60  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m33_35 -> m33_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_47 -> m33_49  [color=darkseagreen4, key=1, label=lastExecutionTime, style=dashed];
m33_46 -> m33_49  [color=darkseagreen4, key=1, label=instant, style=dashed];
m33_46 -> m33_56  [color=darkseagreen4, key=1, label=instant, style=dashed];
m33_46 -> m33_57  [color=darkseagreen4, key=1, label=instant, style=dashed];
m33_46 -> m33_59  [color=darkseagreen4, key=1, label=instant, style=dashed];
m33_48 -> m33_57  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m33_48 -> m33_58  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m33_48 -> m33_59  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m33_48 -> m33_60  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m33_4 -> m33_7  [color=darkseagreen4, key=1, label="System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>", style=dashed];
m33_4 -> m33_9  [color=darkseagreen4, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m33_84 -> m33_17  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m33_84 -> m33_24  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m33_84 -> m33_27  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m34_151 -> m34_155  [color=darkseagreen4, key=1, label=time, style=dashed];
m34_151 -> m34_159  [color=darkseagreen4, key=1, label=time, style=dashed];
m34_155 -> m34_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_162 -> m34_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_163 -> m34_171  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m34_164 -> m34_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_105 -> m34_107  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m34_105 -> m34_119  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m34_105 -> m34_108  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m34_105 -> m34_126  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m34_107 -> m34_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_108 -> m34_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_132 -> m34_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_136 -> m34_144  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_202 -> m34_209  [color=darkseagreen4, key=1, label="System.TimeZoneInfo", style=dashed];
m34_204 -> m34_215  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m34_205 -> m34_214  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_4 -> m34_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_7 -> m34_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_9 -> m34_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_10 -> m34_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_11 -> m34_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_183 -> m34_193  [color=darkseagreen4, key=1, label=timeZoneId, style=dashed];
m34_184 -> m34_193  [color=darkseagreen4, key=1, label="System.TimeZoneInfo", style=dashed];
m34_187 -> m34_199  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m34_188 -> m34_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_119 -> m34_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_126 -> m34_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_145 -> m34_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_57 -> m34_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_175 -> m34_180  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m34_176 -> m34_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_228 -> m34_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_33  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_9  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_10  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_11  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_62  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_81  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_93  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_104  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_107  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_119  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_122  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_108  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_126  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_129  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_132  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_134  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_136  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_145  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_148  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_154  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_155  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_162  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_164  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_171  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_174  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_176  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_180  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_195  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_188  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_199  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_211  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_203  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_205  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_215  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_228 -> m34_220  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m34_229 -> m34_119  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m34_229 -> m34_126  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m34_230 -> m34_159  [color=darkseagreen4, key=1, label=time, style=dashed];
m34_231 -> m34_171  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m34_232 -> m34_180  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m34_233 -> m34_193  [color=darkseagreen4, key=1, label=timeZoneId, style=dashed];
m34_234 -> m34_199  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m34_235 -> m34_215  [color=darkseagreen4, key=1, label=scheduler, style=dashed];
m35_3 -> m35_6  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m35_3 -> m35_5  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m35_15 -> m35_12  [color=green, key=1, label="Hangfire.Server.ServerHeartbeat", style=dashed];
m35_15 -> m35_1  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerHeartbeat", style=dashed];
m35_15 -> m35_6  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerHeartbeat", style=dashed];
m36_0 -> m36_2  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m36_0 -> m36_6  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m36_4 -> m36_6  [color=darkseagreen4, key=1, label=token, style=dashed];
m38_13 -> m38_15  [color=darkseagreen4, key=1, label=intResult, style=dashed];
m38_12 -> m38_14  [color=darkseagreen4, key=1, label=stringResult, style=dashed];
m38_52 -> m38_24  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
m38_52 -> m38_29  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
m38_52 -> m38_34  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
m38_52 -> m38_40  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
m38_52 -> m38_50  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
m39_26 -> m39_29  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m39_36 -> m39_39  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m39_68 -> m39_72  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m39_31 -> m39_34  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m39_34 -> m39_34  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m39_49 -> m39_52  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m39_58 -> m39_62  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m39_14 -> m39_17  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m39_20 -> m39_23  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m39_23 -> m39_23  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m39_8 -> m39_11  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m39_8 -> m39_1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStoredSets", style=dashed];
m39_43 -> m39_46  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m39_0 -> m39_3  [color=green, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m39_80 -> m39_87  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m40_15 -> m40_53  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m40_15 -> m40_61  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m40_46 -> m40_48  [color=darkseagreen4, key=1, label=continuations, style=dashed];
m40_50 -> m40_52  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m40_50 -> m40_53  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m40_53 -> m40_53  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m40_53 -> m40_59  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m40_61 -> m40_61  [color=darkseagreen4, key=1, label=tuple, style=dashed];
m40_47 -> m40_59  [color=darkseagreen4, key=1, label=nextStates, style=dashed];
m40_47 -> m40_60  [color=darkseagreen4, key=1, label=nextStates, style=dashed];
m40_54 -> m40_59  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m40_59 -> m40_59  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m40_49 -> m40_49  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m40_6 -> m40_9  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m40_6 -> m40_10  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m40_6 -> m40_11  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m40_7 -> m40_9  [color=darkseagreen4, key=1, label=awaitingState, style=dashed];
m40_65 -> m40_80  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m40_71 -> m40_84  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m40_78 -> m40_84  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m40_72 -> m40_80  [color=darkseagreen4, key=1, label=started, style=dashed];
m40_73 -> m40_82  [color=darkseagreen4, key=1, label=firstAttempt, style=dashed];
m40_22 -> m40_30  [color=darkseagreen4, key=1, label=parentId, style=dashed];
m40_24 -> m40_30  [color=darkseagreen4, key=1, label=continuations, style=dashed];
m40_102 -> m40_9  [color=darkseagreen4, key=1, label="Hangfire.Continuations.ContinuationsSupportAttribute", style=dashed];
m40_102 -> m40_10  [color=darkseagreen4, key=1, label="Hangfire.Continuations.ContinuationsSupportAttribute", style=dashed];
m40_102 -> m40_31  [color=darkseagreen4, key=1, label="Hangfire.Continuations.ContinuationsSupportAttribute", style=dashed];
m42_59 -> m42_63  [color=darkseagreen4, key=1, label=handler1, style=dashed];
m42_60 -> m42_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_61 -> m42_64  [color=darkseagreen4, key=1, label=handler2, style=dashed];
m42_61 -> m42_66  [color=darkseagreen4, key=1, label=handler2, style=dashed];
m42_1 -> m42_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_3 -> m42_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_4 -> m42_9  [color=green, key=1, label="Hangfire.States.IStateChangeProcess", style=dashed];
m42_4 -> m42_7  [color=darkseagreen4, key=1, label="Hangfire.Server.IJobPerformanceProcess", style=dashed];
m42_4 -> m42_11  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m42_33 -> m42_35  [color=green, key=1, label=state, style=dashed];
m42_44 -> m42_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_62 -> m42_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_89 -> m42_97  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_89 -> m42_111  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_89 -> m42_98  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_89 -> m42_115  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_89 -> m42_99  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_90 -> m42_94  [color=darkseagreen4, key=1, label=handler1, style=dashed];
m42_90 -> m42_97  [color=darkseagreen4, key=1, label=handler1, style=dashed];
m42_185 -> m42_187  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_185 -> m42_188  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_191 -> m42_193  [color=darkseagreen4, key=1, label=connectionMock, style=dashed];
m42_192 -> m42_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_145 -> m42_150  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_145 -> m42_158  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_145 -> m42_151  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_145 -> m42_162  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_145 -> m42_153  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_146 -> m42_148  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m42_146 -> m42_150  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m42_150 -> m42_157  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_151 -> m42_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_147 -> m42_149  [color=darkseagreen4, key=1, label=filter2, style=dashed];
m42_147 -> m42_151  [color=darkseagreen4, key=1, label=filter2, style=dashed];
m42_152 -> m42_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_58 -> m42_79  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_58 -> m42_66  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_58 -> m42_83  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_58 -> m42_68  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_65 -> m42_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_65 -> m42_71  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m42_65 -> m42_68  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m42_66 -> m42_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_67 -> m42_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_118 -> m42_120  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_119 -> m42_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_121 -> m42_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_35 -> m42_40  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_22 -> m42_35  [color=green, key=1, label=fetchedJob, style=dashed];
m42_22 -> m42_30  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m42_22 -> m42_38  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m42_22 -> m42_41  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m42_23 -> m42_31  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_24 -> m42_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_55 -> m42_70  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m42_73 -> m42_75  [color=darkseagreen4, key=1, label=result, style=dashed];
m42_72 -> m42_74  [color=green, key=1, label=duration, style=dashed];
m42_72 -> m42_75  [color=darkseagreen4, key=1, label=duration, style=dashed];
m42_70 -> m42_73  [color=darkseagreen4, key=1, label=performContext, style=dashed];
m42_71 -> m42_75  [color=darkseagreen4, key=1, label=latency, style=dashed];
m42_20 -> m42_35  [color=green, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m42_20 -> m42_23  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m42_20 -> m42_29  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m42_21 -> m42_35  [color=green, key=1, label=connection, style=dashed];
m42_132 -> m42_134  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_133 -> m42_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_135 -> m42_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_168 -> m42_173  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_168 -> m42_178  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_168 -> m42_174  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_168 -> m42_182  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_168 -> m42_175  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_169 -> m42_171  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m42_169 -> m42_173  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m42_173 -> m42_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_174 -> m42_181  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_170 -> m42_172  [color=darkseagreen4, key=1, label=filter2, style=dashed];
m42_170 -> m42_174  [color=darkseagreen4, key=1, label=filter2, style=dashed];
m42_91 -> m42_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_43 -> m42_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_97 -> m42_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_98 -> m42_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_92 -> m42_95  [color=darkseagreen4, key=1, label=handler2, style=dashed];
m42_92 -> m42_98  [color=darkseagreen4, key=1, label=handler2, style=dashed];
m42_92 -> m42_35  [color=green, key=1, label="Hangfire.Server.Worker", style=dashed];
m42_92 -> m42_11  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m42_92 -> m42_60  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m42_92 -> m42_73  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m42_93 -> m42_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_96 -> m42_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_202 -> m42_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_23  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_31  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_35  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_40  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_43  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_50  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_44  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_46  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_58  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_63  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_64  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_79  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_66  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_83  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_67  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_68  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_94  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_95  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_96  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_97  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_111  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_98  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_115  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_99  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_119  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_120  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_121  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_133  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_134  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_135  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_148  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_149  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_150  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_158  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_151  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_162  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_152  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_153  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_171  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_172  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_173  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_178  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_174  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_182  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_175  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_187  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_188  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_192  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_202 -> m42_193  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m42_203 -> m42_31  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_204 -> m42_40  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_205 -> m42_79  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_205 -> m42_83  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_206 -> m42_111  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_206 -> m42_115  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_207 -> m42_158  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_207 -> m42_162  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_208 -> m42_178  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_208 -> m42_182  [color=darkseagreen4, key=1, label=context, style=dashed];
}
