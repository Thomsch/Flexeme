digraph  {
n0 [label="Entry Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", span="12-12", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()"];
n1 [label="string createSql = @''\r\ninsert into HangFire.Counter ([Key], [Value], ExpireAt) \r\nvalues ('key', 1, @expireAt)''", span="14-16", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()"];
n2 [label="var connection = CreateConnection()", span="18-18", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()"];
n3 [label="connection.Execute(createSql, new { expireAt = DateTime.UtcNow.AddHours(1) })", span="21-21", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()"];
n10 [label="Entry Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateConnection()", span="35-35", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateConnection()"];
n4 [label="var aggregator = CreateAggregator(connection)", span="23-23", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()"];
n8 [label="Assert.Equal(1, connection.Query<int>(@''select count(*) from HangFire.AggregatedCounter'').Single())", span="31-31", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()"];
n11 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)"];
n12 [label="Entry Unk.Execute", span="", cluster="Unk.Execute"];
n5 [label="var cts = new CancellationTokenSource()", span="24-24", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()"];
n13 [label="Entry Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)", span="40-40", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)"];
n7 [label="aggregator.Execute(cts.Token)", span="28-28", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()"];
n6 [label="cts.Cancel()", span="25-25", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()"];
n14 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()"];
n15 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()"];
n16 [label="Entry Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="42-42", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)"];
n9 [label="Exit Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", span="12-12", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()"];
n17 [label="Entry Unk.>", span="", cluster="Unk.>"];
n18 [label="Entry Unk.Single", span="", cluster="Unk.Single"];
n19 [label="Entry Unk.Equal", span="", cluster="Unk.Equal"];
n20 [label="return ConnectionUtils.CreateConnection();", span="37-37", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateConnection()"];
n21 [label="Exit Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateConnection()", span="35-35", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateConnection()"];
n22 [label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37", cluster="Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()"];
n23 [label="var storage = new SqlServerStorage(connection)", span="42-42", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)"];
n24 [label="return new CountersAggregator(storage, TimeSpan.Zero);", span="43-43", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)"];
n26 [label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", span="93-93", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)"];
n25 [label="Exit Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)", span="40-40", cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)"];
n27 [label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)"];
m1_23 [label="_redis.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''Checked'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="74-77", cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", file="IWriteOnlyTransaction.cs"];
m1_18 [label="Entry HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", span="44-44", cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", file="IWriteOnlyTransaction.cs"];
m1_19 [label="var flags = _redis.GetValuesFromHash(\r\n                String.Format(''hangfire:job:{0}'', jobId),\r\n                ''Fetched'',\r\n                ''Checked'')", span="46-49", cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", color=red, community=0, file="IWriteOnlyTransaction.cs"];
m1_25 [label="TryToRequeueTheJob(jobId)", span="86-86", cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", file="IWriteOnlyTransaction.cs"];
m1_26 [label="JobFetcher.RemoveFromFetchedQueue(_redis, jobId, queue)", span="87-87", cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", file="IWriteOnlyTransaction.cs"];
m1_20 [label="var fetched = flags[0]", span="51-51", cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", color=red, community=0, file="IWriteOnlyTransaction.cs"];
m1_21 [label="var @checked = flags[1]", span="52-52", cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", color=red, community=0, file="IWriteOnlyTransaction.cs"];
m1_22 [label="String.IsNullOrEmpty(fetched) && String.IsNullOrEmpty(@checked)", span="54-54", cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", file="IWriteOnlyTransaction.cs"];
m1_24 [label="TimedOutByFetchedTime(fetched) || TimedOutByCheckedTime(fetched, @checked)", span="84-84", cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", file="IWriteOnlyTransaction.cs"];
m1_27 [label="Exit HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", span="44-44", cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", file="IWriteOnlyTransaction.cs"];
m1_75 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="IWriteOnlyTransaction.cs"];
m1_47 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="IWriteOnlyTransaction.cs"];
m1_14 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="IWriteOnlyTransaction.cs"];
m1_32 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="IWriteOnlyTransaction.cs"];
m1_28 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="IWriteOnlyTransaction.cs"];
m1_31 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="IWriteOnlyTransaction.cs"];
m1_55 [label="Entry HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", span="127-127", cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="IWriteOnlyTransaction.cs"];
m1_56 [label="!String.IsNullOrEmpty(fetchedTimestamp)", span="132-132", cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="IWriteOnlyTransaction.cs"];
m1_58 [label="return !String.IsNullOrEmpty(checkedTimestamp) &&\r\n                   (DateTime.UtcNow - JobHelper.FromStringTimestamp(checkedTimestamp) > CheckedTimeout);", span="137-138", cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="IWriteOnlyTransaction.cs"];
m1_57 [label="return false;", span="134-134", cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="IWriteOnlyTransaction.cs"];
m1_59 [label="Exit HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", span="127-127", cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="IWriteOnlyTransaction.cs"];
m1_4 [label="Entry HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", span="23-23", cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="IWriteOnlyTransaction.cs"];
m1_5 [label="var queues = _redis.GetAllItemsFromSet(''hangfire:queues'')", span="25-25", cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="IWriteOnlyTransaction.cs"];
m1_6 [label=queues, span="27-27", cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="IWriteOnlyTransaction.cs"];
m1_7 [label="_redis.AcquireLock(\r\n                    String.Format(''hangfire:queue:{0}:dequeued:lock'', queue),\r\n                    TimeSpan.FromMinutes(1))", span="29-31", cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="IWriteOnlyTransaction.cs"];
m1_8 [label="var jobIds = _redis.GetAllItemsFromList(\r\n                        String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="33-34", cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="IWriteOnlyTransaction.cs"];
m1_10 [label="RequeueJobIfTimedOut(jobId, queue)", span="38-38", cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="IWriteOnlyTransaction.cs"];
m1_9 [label=jobIds, span="36-36", cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="IWriteOnlyTransaction.cs"];
m1_11 [label="Exit HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", span="23-23", cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="IWriteOnlyTransaction.cs"];
m1_45 [label="Entry Unk.TryToGetQueue", span="", cluster="Unk.TryToGetQueue", file="IWriteOnlyTransaction.cs"];
m1_49 [label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10", cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="IWriteOnlyTransaction.cs"];
m1_68 [label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0", cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m1_74 [label="Entry System.Threading.Thread.Interrupt()", span="0-0", cluster="System.Threading.Thread.Interrupt()", file="IWriteOnlyTransaction.cs"];
m1_36 [label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="84-84", cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="IWriteOnlyTransaction.cs"];
m1_0 [label="Entry HangFire.Server.DequeuedJobsWatcher.Dispose()", span="18-18", cluster="HangFire.Server.DequeuedJobsWatcher.Dispose()", file="IWriteOnlyTransaction.cs"];
m1_1 [label="_redis.Dispose()", span="20-20", cluster="HangFire.Server.DequeuedJobsWatcher.Dispose()", file="IWriteOnlyTransaction.cs"];
m1_2 [label="Exit HangFire.Server.DequeuedJobsWatcher.Dispose()", span="18-18", cluster="HangFire.Server.DequeuedJobsWatcher.Dispose()", file="IWriteOnlyTransaction.cs"];
m1_50 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="IWriteOnlyTransaction.cs"];
m1_33 [label="Entry Unk.TimedOutByFetchedTime", span="", cluster="Unk.TimedOutByFetchedTime", file="IWriteOnlyTransaction.cs"];
m1_34 [label="Entry Unk.TimedOutByCheckedTime", span="", cluster="Unk.TimedOutByCheckedTime", file="IWriteOnlyTransaction.cs"];
m1_60 [label="Entry HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", span="141-141", cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="IWriteOnlyTransaction.cs"];
m1_61 [label=true, span="145-145", cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="IWriteOnlyTransaction.cs"];
m1_62 [label="FindAndRequeueTimedOutJobs()", span="147-147", cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="IWriteOnlyTransaction.cs"];
m1_64 [label=ThreadInterruptedException, span="151-151", cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="IWriteOnlyTransaction.cs"];
m1_65 [label=Exception, span="154-154", cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="IWriteOnlyTransaction.cs"];
m1_63 [label="Thread.Sleep(SleepTimeout)", span="148-148", cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="IWriteOnlyTransaction.cs"];
m1_66 [label="_logger.Fatal(\r\n                    ''Unexpected exception caught in the timed out jobs thread. Timed out jobs will not be re-queued.'',\r\n                    ex)", span="156-158", cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="IWriteOnlyTransaction.cs"];
m1_67 [label="Exit HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", span="141-141", cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="IWriteOnlyTransaction.cs"];
m1_46 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="IWriteOnlyTransaction.cs"];
m1_3 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="IWriteOnlyTransaction.cs"];
m1_35 [label="Entry HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", span="92-92", cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="IWriteOnlyTransaction.cs"];
m1_37 [label="var jobType = _redis.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', jobId),\r\n                ''Type'')", span="94-96", cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="IWriteOnlyTransaction.cs"];
m1_41 [label="JobState.Apply(\r\n                    _redis,\r\n                    new EnqueuedState(jobId, ''Requeued due to time out'', queue),\r\n                    recoverFromStates)", span="104-107", cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="IWriteOnlyTransaction.cs"];
m1_42 [label="JobState.Apply(\r\n                    _redis,\r\n                    new FailedState(\r\n                        jobId,\r\n                        ''Failed to re-queue the job.'',\r\n                        new InvalidOperationException(String.Format(''Could not find type '{0}'.'', jobType))),\r\n                    recoverFromStates)", span="111-117", cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="IWriteOnlyTransaction.cs"];
m1_38 [label="var queue = JobHelper.TryToGetQueue(jobType)", span="98-98", cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="IWriteOnlyTransaction.cs"];
m1_39 [label="var recoverFromStates = new[] { EnqueuedState.Name, ProcessingState.Name }", span="100-100", cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="IWriteOnlyTransaction.cs"];
m1_40 [label="!String.IsNullOrEmpty(queue)", span="102-102", cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="IWriteOnlyTransaction.cs"];
m1_43 [label="Exit HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", span="92-92", cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="IWriteOnlyTransaction.cs"];
m1_69 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="IWriteOnlyTransaction.cs"];
m1_16 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="IWriteOnlyTransaction.cs"];
m1_48 [label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="IWriteOnlyTransaction.cs"];
m1_51 [label="Entry HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", span="121-121", cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", file="IWriteOnlyTransaction.cs"];
m1_52 [label="return !String.IsNullOrEmpty(fetchedTimestamp) &&\r\n                   (DateTime.UtcNow - JobHelper.FromStringTimestamp(fetchedTimestamp) > JobTimeout);", span="123-124", cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", file="IWriteOnlyTransaction.cs"];
m1_53 [label="Exit HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", span="121-121", cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", file="IWriteOnlyTransaction.cs"];
m1_44 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="IWriteOnlyTransaction.cs"];
m1_12 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="IWriteOnlyTransaction.cs"];
m1_30 [label="Entry Unk.IsNullOrEmpty", span="", cluster="Unk.IsNullOrEmpty", file="IWriteOnlyTransaction.cs"];
m1_17 [label="Entry Unk.RequeueJobIfTimedOut", span="", cluster="Unk.RequeueJobIfTimedOut", file="IWriteOnlyTransaction.cs"];
m1_13 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="IWriteOnlyTransaction.cs"];
m1_29 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="IWriteOnlyTransaction.cs"];
m1_54 [label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="60-60", cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="IWriteOnlyTransaction.cs"];
m1_70 [label="Entry HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="162-162", cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="IWriteOnlyTransaction.cs"];
m1_71 [label="thread.Interrupt()", span="164-164", cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="IWriteOnlyTransaction.cs"];
m1_72 [label="thread.Join()", span="165-165", cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="IWriteOnlyTransaction.cs"];
m1_73 [label="Exit HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="162-162", cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="IWriteOnlyTransaction.cs"];
m1_15 [label="Entry Unk.AcquireLock", span="", cluster="Unk.AcquireLock", file="IWriteOnlyTransaction.cs"];
m1_76 [label="HangFire.Server.DequeuedJobsWatcher", span="", file="IWriteOnlyTransaction.cs"];
m2_6 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", span="36-36", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="RedisWriteOnlyTransaction.cs"];
m2_7 [label="_transaction.Dispose()", span="38-38", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="RedisWriteOnlyTransaction.cs"];
m2_8 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", span="36-36", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="RedisWriteOnlyTransaction.cs"];
m2_128 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn))", span="158-158", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_126 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="155-155", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_127 [label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="157-157", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_129 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="155-155", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisWriteOnlyTransaction.cs"];
m2_90 [label="Entry Unk.EnqueueItemOnList", span="", cluster="Unk.EnqueueItemOnList", file="RedisWriteOnlyTransaction.cs"];
m2_65 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisWriteOnlyTransaction.cs"];
m2_156 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="179-179", cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_157 [label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value))", span="181-182", cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_158 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="179-179", cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_78 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="RedisWriteOnlyTransaction.cs"];
m2_111 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn))", span="147-147", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_109 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="144-144", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_110 [label="_transaction.QueueCommand(x => x.IncrementValue(RedisStorage.Prefix + key))", span="146-146", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_112 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="144-144", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_169 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="191-191", cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="RedisWriteOnlyTransaction.cs"];
m2_170 [label="_transaction.QueueCommand(x => x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt))", span="194-195", cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="RedisWriteOnlyTransaction.cs"];
m2_171 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="191-191", cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="RedisWriteOnlyTransaction.cs"];
m2_55 [label="_transaction.QueueCommand(x => x.RemoveEntry(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId)))", span="94-95", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_53 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="87-87", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_54 [label="_transaction.QueueCommand(x => x.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''State'',\r\n                state.Name))", span="89-92", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_56 [label="var storedData = new Dictionary<string, string>(state.SerializeData())", span="101-101", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_57 [label="storedData.Add(''State'', state.Name)", span="102-102", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_58 [label="state.Reason != null", span="104-104", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_59 [label="storedData.Add(''Reason'', state.Reason)", span="106-106", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_60 [label="_transaction.QueueCommand(x => x.SetRangeInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                storedData))", span="109-111", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_61 [label="AddJobState(jobId, state)", span="113-113", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_62 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="87-87", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_70 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="RedisWriteOnlyTransaction.cs"];
m2_98 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="RedisWriteOnlyTransaction.cs"];
m2_30 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RedisWriteOnlyTransaction.cs"];
m2_189 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                RedisStorage.Prefix + key, expireIn))", span="211-212", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", color=red, community=0, file="RedisWriteOnlyTransaction.cs"];
m2_188 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="209-209", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_190 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="209-209", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_74 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="RedisWriteOnlyTransaction.cs"];
m2_108 [label="Entry Unk.IncrementValue", span="", cluster="Unk.IncrementValue", file="RedisWriteOnlyTransaction.cs"];
m2_38 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="77-77", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs"];
m2_39 [label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId)))", span="79-80", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs"];
m2_40 [label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId)))", span="81-82", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs"];
m2_41 [label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId)))", span="83-84", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs"];
m2_42 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="77-77", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs"];
m2_31 [label="Entry Unk.ExpireEntryIn", span="", cluster="Unk.ExpireEntryIn", file="RedisWriteOnlyTransaction.cs"];
m2_142 [label="Entry Unk.AddItemToSortedSet", span="", cluster="Unk.AddItemToSortedSet", file="RedisWriteOnlyTransaction.cs"];
m2_119 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="150-150", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="RedisWriteOnlyTransaction.cs"];
m2_120 [label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="152-152", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="RedisWriteOnlyTransaction.cs"];
m2_121 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="150-150", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="RedisWriteOnlyTransaction.cs"];
m2_136 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="161-161", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_137 [label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="163-164", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_138 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="161-161", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_149 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="173-173", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_150 [label="_transaction.QueueCommand(x => x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="175-176", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_151 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="173-173", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_63 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="RedisWriteOnlyTransaction.cs"];
m2_9 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="RedisWriteOnlyTransaction.cs"];
m2_10 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="41-41", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m2_11 [label="!_transaction.Commit()", span="43-43", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m2_12 [label="int replayCount = 1", span="49-49", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m2_13 [label="int maxReplayCount = 3", span="50-50", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m2_15 [label="replayCount++ >= maxReplayCount", span="54-54", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m2_14 [label="!_transaction.Replay()", span="52-52", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m2_16 [label="throw new RedisException(''Transaction commit was failed due to WATCH condition failure. Retry attempts exceeded.'');", span="56-56", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m2_17 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="41-41", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs"];
m2_176 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", span="198-198", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", file="RedisWriteOnlyTransaction.cs"];
m2_177 [label="_transaction.QueueCommand(x => x.IncrementValue(\r\n                RedisStorage.Prefix + key))", span="200-201", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", color=red, community=0, file="RedisWriteOnlyTransaction.cs"];
m2_178 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", span="198-198", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", file="RedisWriteOnlyTransaction.cs"];
m2_64 [label="Entry HangFire.States.State.SerializeData()", span="27-27", cluster="HangFire.States.State.SerializeData()", file="RedisWriteOnlyTransaction.cs"];
m2_191 [label="Entry lambda expression", span="211-212", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_28 [label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                expireIn)", span="64-66", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_33 [label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                expireIn)", span="68-70", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_36 [label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                expireIn)", span="72-74", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_27 [label="Entry lambda expression", span="64-66", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_32 [label="Entry lambda expression", span="68-70", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_35 [label="Entry lambda expression", span="72-74", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_29 [label="Exit lambda expression", span="64-66", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_34 [label="Exit lambda expression", span="68-70", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_37 [label="Exit lambda expression", span="72-74", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_44 [label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId))", span="79-80", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_48 [label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId))", span="81-82", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_51 [label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId))", span="83-84", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_43 [label="Entry lambda expression", span="79-80", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_47 [label="Entry lambda expression", span="81-82", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_50 [label="Entry lambda expression", span="83-84", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_45 [label="Exit lambda expression", span="79-80", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_49 [label="Exit lambda expression", span="81-82", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_52 [label="Exit lambda expression", span="83-84", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_68 [label="x.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''State'',\r\n                state.Name)", span="89-92", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_72 [label="x.RemoveEntry(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId))", span="94-95", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_76 [label="x.SetRangeInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                storedData)", span="109-111", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_67 [label="Entry lambda expression", span="89-92", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_71 [label="Entry lambda expression", span="94-95", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_75 [label="Entry lambda expression", span="109-111", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_69 [label="Exit lambda expression", span="89-92", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_73 [label="Exit lambda expression", span="94-95", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_77 [label="Exit lambda expression", span="109-111", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_87 [label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                JobHelper.ToJson(storedData))", span="125-127", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_86 [label="Entry lambda expression", span="125-127", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_88 [label="Exit lambda expression", span="125-127", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_96 [label="x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue)", span="132-133", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_100 [label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId)", span="135-136", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_95 [label="Entry lambda expression", span="132-133", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_99 [label="Entry lambda expression", span="135-136", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_97 [label="Exit lambda expression", span="132-133", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_101 [label="Exit lambda expression", span="135-136", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_106 [label="x.IncrementValue(RedisStorage.Prefix + key)", span="141-141", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_105 [label="Entry lambda expression", span="141-141", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_107 [label="Exit lambda expression", span="141-141", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_114 [label="x.IncrementValue(RedisStorage.Prefix + key)", span="146-146", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_117 [label="x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn)", span="147-147", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_113 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_116 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_115 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_118 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_123 [label="x.DecrementValue(RedisStorage.Prefix + key)", span="152-152", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_122 [label="Entry lambda expression", span="152-152", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_124 [label="Exit lambda expression", span="152-152", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_131 [label="x.DecrementValue(RedisStorage.Prefix + key)", span="157-157", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_134 [label="x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn)", span="158-158", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_130 [label="Entry lambda expression", span="157-157", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_133 [label="Entry lambda expression", span="158-158", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_132 [label="Exit lambda expression", span="157-157", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_135 [label="Exit lambda expression", span="158-158", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_140 [label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="163-164", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_139 [label="Entry lambda expression", span="163-164", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_141 [label="Exit lambda expression", span="163-164", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_147 [label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score)", span="169-170", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_146 [label="Entry lambda expression", span="169-170", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_148 [label="Exit lambda expression", span="169-170", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_153 [label="x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="175-176", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_152 [label="Entry lambda expression", span="175-176", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_154 [label="Exit lambda expression", span="175-176", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_160 [label="x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value)", span="181-182", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_159 [label="Entry lambda expression", span="181-182", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_161 [label="Exit lambda expression", span="181-182", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_166 [label="x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value)", span="187-188", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_165 [label="Entry lambda expression", span="187-188", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_167 [label="Exit lambda expression", span="187-188", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_173 [label="x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt)", span="194-195", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_172 [label="Entry lambda expression", span="194-195", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_174 [label="Exit lambda expression", span="194-195", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_180 [label="x.IncrementValue(\r\n                RedisStorage.Prefix + key)", span="200-201", cluster="lambda expression", color=red, community=0, file="RedisWriteOnlyTransaction.cs"];
m2_179 [label="Entry lambda expression", span="200-201", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_181 [label="Exit lambda expression", span="200-201", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_186 [label="x.DecrementValue(RedisStorage.Prefix + key)", span="206-206", cluster="lambda expression", color=red, community=0, file="RedisWriteOnlyTransaction.cs"];
m2_185 [label="Entry lambda expression", span="206-206", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_187 [label="Exit lambda expression", span="206-206", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_192 [label="x.ExpireEntryIn(\r\n                RedisStorage.Prefix + key, expireIn)", span="211-212", cluster="lambda expression", color=red, community=0, file="RedisWriteOnlyTransaction.cs"];
m2_193 [label="Exit lambda expression", span="211-212", cluster="lambda expression", file="RedisWriteOnlyTransaction.cs"];
m2_85 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RedisWriteOnlyTransaction.cs"];
m2_143 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="167-167", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="RedisWriteOnlyTransaction.cs"];
m2_144 [label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score))", span="169-170", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="RedisWriteOnlyTransaction.cs"];
m2_145 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="167-167", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="RedisWriteOnlyTransaction.cs"];
m2_182 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", span="204-204", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", file="RedisWriteOnlyTransaction.cs"];
m2_183 [label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="206-206", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", color=red, community=0, file="RedisWriteOnlyTransaction.cs"];
m2_184 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", span="204-204", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", file="RedisWriteOnlyTransaction.cs"];
m2_102 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="139-139", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="RedisWriteOnlyTransaction.cs"];
m2_103 [label="_transaction.QueueCommand(x => x.IncrementValue(RedisStorage.Prefix + key))", span="141-141", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="RedisWriteOnlyTransaction.cs"];
m2_104 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="139-139", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="RedisWriteOnlyTransaction.cs"];
m2_168 [label="Entry Unk.RemoveItemFromList", span="", cluster="Unk.RemoveItemFromList", file="RedisWriteOnlyTransaction.cs"];
m2_24 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                expireIn))", span="72-74", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_21 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_22 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                expireIn))", span="64-66", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_23 [label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                expireIn))", span="68-70", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_25 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs"];
m2_91 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="130-130", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_92 [label="_transaction.QueueCommand(x => x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue))", span="132-133", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_93 [label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId))", span="135-136", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_94 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="130-130", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_89 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="RedisWriteOnlyTransaction.cs"];
m2_46 [label="Entry Unk.Persist", span="", cluster="Unk.Persist", file="RedisWriteOnlyTransaction.cs"];
m2_18 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="RedisWriteOnlyTransaction.cs"];
m2_66 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="116-116", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_79 [label="var storedData = new Dictionary<string, string>(state.SerializeData())", span="120-120", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_80 [label="storedData.Add(''State'', state.Name)", span="121-121", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_81 [label="storedData.Add(''Reason'', state.Reason)", span="122-122", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_83 [label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                JobHelper.ToJson(storedData)))", span="125-127", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_82 [label="storedData.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="123-123", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_84 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="116-116", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs"];
m2_19 [label="Entry Unk.Replay", span="", cluster="Unk.Replay", file="RedisWriteOnlyTransaction.cs"];
m2_20 [label="Entry RedisException.cstr", span="", cluster="RedisException.cstr", file="RedisWriteOnlyTransaction.cs"];
m2_26 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="RedisWriteOnlyTransaction.cs"];
m2_125 [label="Entry Unk.DecrementValue", span="", cluster="Unk.DecrementValue", file="RedisWriteOnlyTransaction.cs"];
m2_175 [label="Entry Unk.TrimList", span="", cluster="Unk.TrimList", file="RedisWriteOnlyTransaction.cs"];
m2_162 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="185-185", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_163 [label="_transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value))", span="187-188", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_164 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="185-185", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="RedisWriteOnlyTransaction.cs"];
m2_155 [label="Entry Unk.RemoveItemFromSortedSet", span="", cluster="Unk.RemoveItemFromSortedSet", file="RedisWriteOnlyTransaction.cs"];
m2_0 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="29-29", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs"];
m2_1 [label="transaction == null", span="31-31", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs"];
m2_3 [label="_transaction = transaction", span="33-33", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs"];
m2_2 [label="throw new ArgumentNullException(''transaction'');", span="31-31", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs"];
m2_4 [label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="29-29", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs"];
m2_194 [label="HangFire.Redis.RedisWriteOnlyTransaction", span="", file="RedisWriteOnlyTransaction.cs"];
m2_195 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_196 [label="System.TimeSpan", span="", file="RedisWriteOnlyTransaction.cs"];
m2_197 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_198 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_199 [label="HangFire.States.State", span="", file="RedisWriteOnlyTransaction.cs"];
m2_200 [label=storedData, span="", file="RedisWriteOnlyTransaction.cs"];
m2_201 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_202 [label=storedData, span="", file="RedisWriteOnlyTransaction.cs"];
m2_203 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_204 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_205 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_206 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_207 [label="System.TimeSpan", span="", file="RedisWriteOnlyTransaction.cs"];
m2_208 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_209 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_210 [label="System.TimeSpan", span="", file="RedisWriteOnlyTransaction.cs"];
m2_211 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_212 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_213 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_214 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_215 [label=double, span="", file="RedisWriteOnlyTransaction.cs"];
m2_216 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_217 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_218 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_219 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_220 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_221 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_222 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_223 [label=int, span="", file="RedisWriteOnlyTransaction.cs"];
m2_224 [label=int, span="", file="RedisWriteOnlyTransaction.cs"];
m2_225 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_226 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_227 [label=string, span="", file="RedisWriteOnlyTransaction.cs"];
m2_228 [label="System.TimeSpan", span="", file="RedisWriteOnlyTransaction.cs"];
m3_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerConnection.cs"];
m3_117 [label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="236-236", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m3_118 [label="serverId == null", span="238-238", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m3_120 [label="context == null", span="239-239", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m3_122 [label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="241-246", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m3_123 [label="_connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data)) as Source (Id, Data) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = null ''\r\n                + @''when not matched then insert (Id, Data) values (Source.Id, Source.Data);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data) })", span="250-256", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m3_119 [label="throw new ArgumentNullException(''serverId'');", span="238-238", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m3_121 [label="throw new ArgumentNullException(''context'');", span="239-239", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m3_124 [label="Exit HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="236-236", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs"];
m3_95 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="205-205", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m3_96 [label="id == null", span="207-207", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m3_98 [label="name == null", span="208-208", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m3_100 [label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="210-213", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m3_97 [label="throw new ArgumentNullException(''id'');", span="207-207", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m3_99 [label="throw new ArgumentNullException(''name'');", span="208-208", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m3_101 [label="Exit HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="205-205", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m3_125 [label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="20-20", cluster="HangFire.SqlServer.Entities.ServerData.ServerData()", file="SqlServerConnection.cs"];
m3_47 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="106-106", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m3_48 [label="job == null", span="111-111", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m3_50 [label="parameters == null", span="112-112", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m3_53 [label="var invocationData = InvocationData.Serialize(job)", span="119-119", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m3_54 [label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = invocationData.Arguments,\r\n                    createdAt = DateTime.UtcNow,\r\n                    expireAt = DateTime.UtcNow.Add(expireIn)\r\n                }).Single().ToString()", span="121-129", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m3_55 [label="parameters.Count > 0", span="131-131", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m3_56 [label="var parameterArray = new object[parameters.Count]", span="133-133", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m3_58 [label=parameters, span="135-135", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m3_49 [label="throw new ArgumentNullException(''job'');", span="111-111", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m3_51 [label="throw new ArgumentNullException(''parameters'');", span="112-112", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m3_52 [label="string createJobSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="114-117", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m3_59 [label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="137-142", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m3_62 [label="return jobId;", span="152-152", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m3_57 [label="int parameterIndex = 0", span="134-134", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m3_61 [label="_connection.Execute(insertParameterSql, parameterArray)", span="149-149", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m3_60 [label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="145-147", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m3_63 [label="Exit HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="106-106", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs"];
m3_18 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SqlServerConnection.cs"];
m3_40 [label="Entry System.TimeSpan.Negate()", span="0-0", cluster="System.TimeSpan.Negate()", file="SqlServerConnection.cs"];
m3_45 [label="Entry HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", span="22-22", cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="SqlServerConnection.cs"];
m3_70 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="155-155", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m3_71 [label="id == null", span="157-157", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m3_74 [label="var jobData = _connection.Query<SqlJob>(sql, new { id = id })\r\n                .SingleOrDefault()", span="162-163", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m3_72 [label="throw new ArgumentNullException(''id'');", span="157-157", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m3_73 [label="string sql = \r\n                @''select InvocationData, StateName, Arguments from HangFire.Job where id = @id''", span="159-160", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m3_75 [label="jobData == null", span="165-165", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m3_77 [label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="168-168", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m3_78 [label="invocationData.Arguments = jobData.Arguments", span="169-169", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m3_84 [label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = jobData.StateName,\r\n                LoadException = loadException\r\n            };", span="183-188", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m3_76 [label="return null;", span="165-165", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m3_81 [label="job = invocationData.Deserialize()", span="176-176", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m3_79 [label="Job job = null", span="171-171", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m3_80 [label="JobLoadException loadException = null", span="172-172", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m3_82 [label=JobLoadException, span="178-178", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m3_83 [label="loadException = ex", span="180-180", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m3_85 [label="Exit HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="155-155", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m3_10 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="47-47", cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs"];
m3_11 [label="return new SqlServerWriteOnlyTransaction(_connection);", span="49-49", cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs"];
m3_12 [label="Exit HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="47-47", cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs"];
m3_116 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="SqlServerConnection.cs"];
m3_43 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerConnection.cs"];
m3_41 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="SqlServerConnection.cs"];
m3_46 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="SqlServerConnection.cs"];
m3_39 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="SqlServerConnection.cs"];
m3_66 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerConnection.cs"];
m3_19 [label="Entry HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="59-59", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m3_20 [label="queues == null", span="61-61", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m3_22 [label="queues.Length == 0", span="62-62", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m3_28 [label="cancellationToken.ThrowIfCancellationRequested()", span="80-80", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m3_29 [label="idAndQueue = _connection.Query(\r\n                    String.Format(fetchJobSqlTemplate, fetchConditions[currentQueryIndex]),\r\n                    new { queues = queues, timeout = JobInvisibilityTimeOut.Negate().TotalSeconds })\r\n                    .SingleOrDefault()", span="82-85", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m3_21 [label="throw new ArgumentNullException(''queues'');", span="61-61", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m3_23 [label="throw new ArgumentException(''Queue array must be non-empty.'', ''queues'');", span="62-62", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m3_24 [label="dynamic idAndQueue", span="64-64", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m3_25 [label="string fetchJobSqlTemplate = @''\r\nset transaction isolation level read committed\r\nupdate top (1) HangFire.JobQueue set FetchedAt = GETUTCDATE()\r\noutput INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt {0}\r\nand Queue in @queues''", span="66-71", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m3_26 [label="var fetchConditions = new[] { ''is null'', ''< DATEADD(second, @timeout, GETUTCDATE())'' }", span="75-75", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m3_27 [label="var currentQueryIndex = 0", span="76-76", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m3_31 [label="currentQueryIndex == fetchConditions.Length - 1", span="89-89", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m3_34 [label="currentQueryIndex = (currentQueryIndex + 1) % fetchConditions.Length", span="98-98", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m3_32 [label="cancellationToken.WaitHandle.WaitOne(TimeSpan.FromSeconds(5))", span="91-91", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerConnection.cs"];
m3_30 [label="idAndQueue == null", span="87-87", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m3_35 [label="idAndQueue == null", span="99-99", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m3_36 [label="return new ProcessingJob(\r\n                idAndQueue.JobId.ToString(CultureInfo.InvariantCulture),\r\n                idAndQueue.Queue);", span="101-103", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m3_33 [label="cancellationToken.ThrowIfCancellationRequested()", span="93-93", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerConnection.cs"];
m3_37 [label="Exit HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="59-59", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m3_136 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="277-277", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m3_137 [label="timeOut.Duration() != timeOut", span="279-279", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m3_138 [label="throw new ArgumentException(''The `timeOut` value must be positive.'', ''timeOut'');", span="281-281", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m3_139 [label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="284-286", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m3_140 [label="Exit HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="277-277", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m3_0 [label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", span="35-35", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", file="SqlServerConnection.cs"];
m3_1 [label="connection == null", span="37-37", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", file="SqlServerConnection.cs"];
m3_3 [label="_connection = connection", span="39-39", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", file="SqlServerConnection.cs"];
m3_2 [label="throw new ArgumentNullException(''connection'');", span="37-37", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", file="SqlServerConnection.cs"];
m3_4 [label="Exit HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", span="35-35", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", file="SqlServerConnection.cs"];
m3_9 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="SqlServerConnection.cs"];
m3_141 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()", file="SqlServerConnection.cs"];
m3_6 [label="Entry HangFire.SqlServer.SqlServerConnection.Dispose()", span="42-42", cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs"];
m3_7 [label="_connection.Dispose()", span="44-44", cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs"];
m3_8 [label="Exit HangFire.SqlServer.SqlServerConnection.Dispose()", span="42-42", cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs"];
m3_17 [label="Entry HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", span="44-44", cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", file="SqlServerConnection.cs"];
m3_102 [label="Entry HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="216-216", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="SqlServerConnection.cs"];
m3_103 [label="id == null", span="218-218", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="SqlServerConnection.cs"];
m3_105 [label="queue == null", span="219-219", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="SqlServerConnection.cs"];
m3_107 [label="_connection.Execute(''delete from HangFire.JobQueue where JobId = @id and Queue = @queueName'',\r\n                new { id = id, queueName = queue })", span="221-222", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="SqlServerConnection.cs"];
m3_104 [label="throw new ArgumentNullException(''id'');", span="218-218", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="SqlServerConnection.cs"];
m3_106 [label="throw new ArgumentNullException(''queue'');", span="219-219", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="SqlServerConnection.cs"];
m3_108 [label="Exit HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="216-216", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="SqlServerConnection.cs"];
m3_88 [label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="191-191", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m3_89 [label="id == null", span="193-193", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m3_91 [label="name == null", span="194-194", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m3_93 [label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="196-202", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m3_90 [label="throw new ArgumentNullException(''id'');", span="193-193", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m3_92 [label="throw new ArgumentNullException(''name'');", span="194-194", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m3_94 [label="Exit HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="191-191", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m3_13 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerConnection.cs"];
m3_109 [label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="225-225", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m3_110 [label="key == null", span="227-227", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m3_112 [label="toScore < fromScore", span="228-228", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m3_114 [label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="230-233", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m3_111 [label="throw new ArgumentNullException(''key'');", span="227-227", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m3_113 [label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="228-228", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m3_115 [label="Exit HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="225-225", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m3_65 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlServerConnection.cs"];
m3_14 [label="Entry HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="52-52", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="SqlServerConnection.cs"];
m3_15 [label="return new SqlServerDistributedLock(\r\n                String.Format(''HangFire:Job:{0}'', jobId), \r\n                _connection);", span="54-56", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="SqlServerConnection.cs"];
m3_16 [label="Exit HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="52-52", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="SqlServerConnection.cs"];
m3_38 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerConnection.cs"];
m3_68 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="SqlServerConnection.cs"];
m3_44 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SqlServerConnection.cs"];
m3_87 [label="Entry HangFire.Storage.JobData.JobData()", span="20-20", cluster="HangFire.Storage.JobData.JobData()", file="SqlServerConnection.cs"];
m3_69 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerConnection.cs"];
m3_86 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()", file="SqlServerConnection.cs"];
m3_126 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="259-259", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m3_127 [label="serverId == null", span="261-261", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m3_129 [label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="263-265", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m3_128 [label="throw new ArgumentNullException(''serverId'');", span="261-261", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m3_130 [label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="259-259", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m3_131 [label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="268-268", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m3_132 [label="serverId == null", span="270-270", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m3_134 [label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="272-274", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m3_133 [label="throw new ArgumentNullException(''serverId'');", span="270-270", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m3_135 [label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="268-268", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m3_42 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="SqlServerConnection.cs"];
m3_64 [label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65", cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="SqlServerConnection.cs"];
m3_142 [label="HangFire.SqlServer.SqlServerConnection", span="", file="SqlServerConnection.cs"];
m5_60 [label="Entry HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Dispose_ReleasesExclusiveApplicationLock()", span="76-76", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Dispose_ReleasesExclusiveApplicationLock()", file="SqlServerDistributedLockFacts.cs"];
m5_61 [label="UseConnection(sql =>\r\n            {\r\n                var distributedLock = new SqlServerDistributedLock(''hello'', sql);\r\n                distributedLock.Dispose();\r\n\r\n                var lockMode = sql.Query<string>(\r\n                    ''select applock_mode('public', 'hello', 'session')'').Single();\r\n\r\n                Assert.Equal(''NoLock'', lockMode);\r\n            })", span="78-87", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Dispose_ReleasesExclusiveApplicationLock()", color=green, community=1, file="SqlServerDistributedLockFacts.cs"];
m5_62 [label="Exit HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Dispose_ReleasesExclusiveApplicationLock()", span="76-76", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Dispose_ReleasesExclusiveApplicationLock()", file="SqlServerDistributedLockFacts.cs"];
m5_44 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="SqlServerDistributedLockFacts.cs"];
m5_22 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="SqlServerDistributedLockFacts.cs"];
m5_41 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()", file="SqlServerDistributedLockFacts.cs"];
m5_43 [label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Set()", file="SqlServerDistributedLockFacts.cs"];
m5_10 [label="Entry Mock<IDbConnection>.cstr", span="", cluster="Mock<IDbConnection>.cstr", file="SqlServerDistributedLockFacts.cs"];
m5_4 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerDistributedLockFacts.cs"];
m5_48 [label="Entry HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<SqlConnection>)", span="90-90", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<SqlConnection>)", file="SqlServerDistributedLockFacts.cs"];
m5_70 [label="var connection = ConnectionUtils.CreateConnection()", span="92-92", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<SqlConnection>)", color=green, community=0, file="SqlServerDistributedLockFacts.cs"];
m5_71 [label="action(connection)", span="94-94", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<SqlConnection>)", color=green, community=0, file="SqlServerDistributedLockFacts.cs"];
m5_72 [label="Exit HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<SqlConnection>)", span="90-90", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<SqlConnection>)", file="SqlServerDistributedLockFacts.cs"];
m5_74 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="SqlServerDistributedLockFacts.cs"];
m5_9 [label="Entry SqlServerDistributedLock.cstr", span="", cluster="SqlServerDistributedLock.cstr", file="SqlServerDistributedLockFacts.cs"];
m5_18 [label="Entry HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, IDbConnection)", span="44-44", cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, IDbConnection)", file="SqlServerDistributedLockFacts.cs"];
m5_29 [label="Entry HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", span="49-49", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerDistributedLockFacts.cs"];
m5_30 [label="var releaseLock = new ManualResetEventSlim(false)", span="51-51", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", color=green, community=0, file="SqlServerDistributedLockFacts.cs"];
m5_31 [label="var lockAcquired = new ManualResetEventSlim(false)", span="52-52", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", color=green, community=0, file="SqlServerDistributedLockFacts.cs"];
m5_32 [label="var thread = new Thread(\r\n                () => UseConnection(connection1 =>\r\n                {\r\n                    using (new SqlServerDistributedLock(''exclusive'', connection1))\r\n                    {\r\n                        lockAcquired.Set();\r\n                        releaseLock.Wait();\r\n                    }\r\n                }))", span="54-62", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", color=green, community=1, file="SqlServerDistributedLockFacts.cs"];
m5_36 [label="releaseLock.Set()", span="71-71", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", color=green, community=0, file="SqlServerDistributedLockFacts.cs"];
m5_34 [label="lockAcquired.Wait()", span="65-65", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", color=green, community=0, file="SqlServerDistributedLockFacts.cs"];
m5_33 [label="thread.Start()", span="63-63", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", color=green, community=0, file="SqlServerDistributedLockFacts.cs"];
m5_37 [label="thread.Join()", span="72-72", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", color=green, community=0, file="SqlServerDistributedLockFacts.cs"];
m5_35 [label="UseConnection(connection2 => \r\n                Assert.Throws<SqlServerDistributedLockException>(\r\n                    () => new SqlServerDistributedLock(''exclusive'', connection2)))", span="67-69", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", color=green, community=0, file="SqlServerDistributedLockFacts.cs"];
m5_38 [label="Exit HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", span="49-49", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerDistributedLockFacts.cs"];
m5_42 [label="Entry System.Threading.ManualResetEventSlim.Wait()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Wait()", file="SqlServerDistributedLockFacts.cs"];
m5_39 [label="Entry System.Threading.ManualResetEventSlim.ManualResetEventSlim(bool)", span="0-0", cluster="System.Threading.ManualResetEventSlim.ManualResetEventSlim(bool)", file="SqlServerDistributedLockFacts.cs"];
m5_63 [label="Entry lambda expression", span="78-87", cluster="lambda expression", file="SqlServerDistributedLockFacts.cs"];
m5_6 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="SqlServerDistributedLockFacts.cs"];
m5_7 [label="new SqlServerDistributedLock('''', new Mock<IDbConnection>().Object)", span="17-17", cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs"];
m5_8 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="SqlServerDistributedLockFacts.cs"];
m5_15 [label="Entry lambda expression", span="26-26", cluster="lambda expression", file="SqlServerDistributedLockFacts.cs"];
m5_16 [label="new SqlServerDistributedLock(''hello'', null)", span="26-26", cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs"];
m5_17 [label="Exit lambda expression", span="26-26", cluster="lambda expression", file="SqlServerDistributedLockFacts.cs"];
m5_23 [label="Entry lambda expression", span="34-43", cluster="lambda expression", file="SqlServerDistributedLockFacts.cs"];
m5_24 [label="var distributedLock = new SqlServerDistributedLock(''hello'', sql)", span="37-37", cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs"];
m5_25 [label="var lockMode = sql.Query<string>(\r\n                    ''select applock_mode('public', 'hello', 'session')'').Single()", span="39-40", cluster="lambda expression", color=green, community=1, file="SqlServerDistributedLockFacts.cs"];
m5_26 [label="Assert.Equal(''Exclusive'', lockMode)", span="42-42", cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs"];
m5_27 [label="Exit lambda expression", span="34-43", cluster="lambda expression", file="SqlServerDistributedLockFacts.cs"];
m5_46 [label="UseConnection(connection1 =>\r\n                {\r\n                    using (new SqlServerDistributedLock(''exclusive'', connection1))\r\n                    {\r\n                        lockAcquired.Set();\r\n                        releaseLock.Wait();\r\n                    }\r\n                })", span="55-62", cluster="lambda expression", color=green, community=1, file="SqlServerDistributedLockFacts.cs"];
m5_52 [label="releaseLock.Wait()", span="60-60", cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs"];
m5_51 [label="lockAcquired.Set()", span="59-59", cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs"];
m5_45 [label="Entry lambda expression", span="55-62", cluster="lambda expression", file="SqlServerDistributedLockFacts.cs"];
m5_47 [label="Exit lambda expression", span="55-62", cluster="lambda expression", file="SqlServerDistributedLockFacts.cs"];
m5_49 [label="Entry lambda expression", span="55-62", cluster="lambda expression", file="SqlServerDistributedLockFacts.cs"];
m5_53 [label="Exit lambda expression", span="55-62", cluster="lambda expression", file="SqlServerDistributedLockFacts.cs"];
m5_50 [label="new SqlServerDistributedLock(''exclusive'', connection1)", span="57-57", cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs"];
m5_54 [label="Entry lambda expression", span="67-69", cluster="lambda expression", file="SqlServerDistributedLockFacts.cs"];
m5_55 [label="Assert.Throws<SqlServerDistributedLockException>(\r\n                    () => new SqlServerDistributedLock(''exclusive'', connection2))", span="68-69", cluster="lambda expression", color=green, community=1, file="SqlServerDistributedLockFacts.cs"];
m5_56 [label="Exit lambda expression", span="67-69", cluster="lambda expression", file="SqlServerDistributedLockFacts.cs"];
m5_57 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="SqlServerDistributedLockFacts.cs"];
m5_58 [label="new SqlServerDistributedLock(''exclusive'', connection2)", span="69-69", cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs"];
m5_59 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="SqlServerDistributedLockFacts.cs"];
m5_64 [label="var distributedLock = new SqlServerDistributedLock(''hello'', sql)", span="80-80", cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs"];
m5_65 [label="distributedLock.Dispose()", span="81-81", cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs"];
m5_66 [label="var lockMode = sql.Query<string>(\r\n                    ''select applock_mode('public', 'hello', 'session')'').Single()", span="83-84", cluster="lambda expression", color=green, community=1, file="SqlServerDistributedLockFacts.cs"];
m5_67 [label="Assert.Equal(''NoLock'', lockMode)", span="86-86", cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs"];
m5_68 [label="Exit lambda expression", span="78-87", cluster="lambda expression", file="SqlServerDistributedLockFacts.cs"];
m5_11 [label="Entry HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="23-23", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerDistributedLockFacts.cs"];
m5_12 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerDistributedLock(''hello'', null))", span="25-26", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=green, community=1, file="SqlServerDistributedLockFacts.cs"];
m5_13 [label="Assert.Equal(''connection'', exception.ParamName)", span="28-28", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=green, community=0, file="SqlServerDistributedLockFacts.cs"];
m5_14 [label="Exit HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="23-23", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerDistributedLockFacts.cs"];
m5_19 [label="Entry HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", span="32-32", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", file="SqlServerDistributedLockFacts.cs"];
m5_20 [label="UseConnection(sql =>\r\n            {\r\n                // ReSharper disable once UnusedVariable\r\n                var distributedLock = new SqlServerDistributedLock(''hello'', sql);\r\n\r\n                var lockMode = sql.Query<string>(\r\n                    ''select applock_mode('public', 'hello', 'session')'').Single();\r\n\r\n                Assert.Equal(''Exclusive'', lockMode);\r\n            })", span="34-43", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", color=green, community=1, file="SqlServerDistributedLockFacts.cs"];
m5_21 [label="Exit HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", span="32-32", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", file="SqlServerDistributedLockFacts.cs"];
m5_28 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="SqlServerDistributedLockFacts.cs"];
m5_69 [label="Entry HangFire.SqlServer.SqlServerDistributedLock.Dispose()", span="79-79", cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLockFacts.cs"];
m5_73 [label="Entry HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37", cluster="HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="SqlServerDistributedLockFacts.cs"];
m5_0 [label="Entry HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenResourceIsNullOrEmpty()", span="14-14", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenResourceIsNullOrEmpty()", file="SqlServerDistributedLockFacts.cs"];
m5_1 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerDistributedLock('''', new Mock<IDbConnection>().Object))", span="16-17", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenResourceIsNullOrEmpty()", color=green, community=1, file="SqlServerDistributedLockFacts.cs"];
m5_2 [label="Assert.Equal(''resource'', exception.ParamName)", span="19-19", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenResourceIsNullOrEmpty()", color=green, community=0, file="SqlServerDistributedLockFacts.cs"];
m5_3 [label="Exit HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenResourceIsNullOrEmpty()", span="14-14", cluster="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenResourceIsNullOrEmpty()", file="SqlServerDistributedLockFacts.cs"];
m5_40 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="SqlServerDistributedLockFacts.cs"];
m5_75 [label="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts", span="", file="SqlServerDistributedLockFacts.cs"];
m5_76 [label=releaseLock, span="", file="SqlServerDistributedLockFacts.cs"];
m5_77 [label=lockAcquired, span="", file="SqlServerDistributedLockFacts.cs"];
m5_78 [label=SqlConnection, span="", file="SqlServerDistributedLockFacts.cs"];
m6_16 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="SqlServerObjectsInstaller.cs"];
m6_11 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerObjectsInstaller.cs"];
m6_0 [label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="32-32", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m6_1 [label="connection == null", span="34-34", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m6_4 [label="!IsSqlEditionSupported(connection)", span="38-38", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m6_8 [label="connection.Execute(script)", span="49-49", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m6_2 [label="throw new ArgumentNullException(''connection'');", span="34-34", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m6_3 [label="Log.Debug(''Start installing HangFire SQL objects...'')", span="36-36", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m6_5 [label="throw new PlatformNotSupportedException(''The SQL Server edition of the target server is unsupported, e.g. SQL Azure.'');", span="40-40", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m6_6 [label="var script = GetStringResource(\r\n                typeof(SqlServerObjectsInstaller).Assembly, \r\n                ''HangFire.SqlServer.Install.sql'')", span="43-45", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m6_7 [label="script = script.Replace(''SET @TARGET_SCHEMA_VERSION = 2;'', ''SET @TARGET_SCHEMA_VERSION = '' + RequiredSchemaVersion + '';'')", span="47-47", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m6_9 [label="Log.Debug(''HangFire SQL objects installed.'')", span="51-51", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m6_10 [label="Exit HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="32-32", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m6_32 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="SqlServerObjectsInstaller.cs"];
m6_22 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="SqlServerObjectsInstaller.cs"];
m6_30 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SqlServerObjectsInstaller.cs"];
m6_17 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerObjectsInstaller.cs"];
m6_31 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="SqlServerObjectsInstaller.cs"];
m6_33 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="SqlServerObjectsInstaller.cs"];
m6_12 [label="Entry Unk.Debug", span="", cluster="Unk.Debug", file="SqlServerObjectsInstaller.cs"];
m6_15 [label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="60-60", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs"];
m6_23 [label="var stream = assembly.GetManifestResourceStream(resourceName)", span="62-62", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs"];
m6_25 [label="throw new InvalidOperationException(String.Format(\r\n                        ''Requested resource `{0}` was not found in the assembly `{1}`.'',\r\n                        resourceName,\r\n                        assembly));", span="66-69", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs"];
m6_24 [label="stream == null", span="64-64", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs"];
m6_26 [label="var reader = new StreamReader(stream)", span="72-72", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs"];
m6_27 [label="return reader.ReadToEnd();", span="74-74", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs"];
m6_28 [label="Exit HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="60-60", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs"];
m6_13 [label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", span="54-54", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m6_18 [label="var edition = connection.Query<int>(''SELECT SERVERPROPERTY ( 'EngineEdition' )'').Single()", span="56-56", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m6_19 [label="return edition >= SqlEngineEdition.Standard && edition <= SqlEngineEdition.Express;", span="57-57", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m6_20 [label="Exit HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", span="54-54", cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m6_29 [label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0", cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="SqlServerObjectsInstaller.cs"];
m6_14 [label="Entry System.PlatformNotSupportedException.PlatformNotSupportedException(string)", span="0-0", cluster="System.PlatformNotSupportedException.PlatformNotSupportedException(string)", file="SqlServerObjectsInstaller.cs"];
m7_12 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerWriteOnlyTransaction.cs"];
m7_0 [label="Entry Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", span="25-25", cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="SqlServerWriteOnlyTransaction.cs"];
m7_1 [label="jobStorage == null", span="31-31", cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="SqlServerWriteOnlyTransaction.cs"];
m7_3 [label="owinEnvironment == null", span="32-32", cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="SqlServerWriteOnlyTransaction.cs"];
m7_5 [label="uriMatch == null", span="33-33", cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="SqlServerWriteOnlyTransaction.cs"];
m7_7 [label="AppPath = appPath", span="35-35", cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="SqlServerWriteOnlyTransaction.cs"];
m7_8 [label="JobStorage = jobStorage", span="36-36", cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="SqlServerWriteOnlyTransaction.cs"];
m7_9 [label="OwinEnvironment = owinEnvironment", span="37-37", cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="SqlServerWriteOnlyTransaction.cs"];
m7_10 [label="UriMatch = uriMatch", span="38-38", cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="SqlServerWriteOnlyTransaction.cs"];
m7_2 [label="throw new ArgumentNullException(''jobStorage'');", span="31-31", cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="SqlServerWriteOnlyTransaction.cs"];
m7_4 [label="throw new ArgumentNullException(''owinEnvironment'');", span="32-32", cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="SqlServerWriteOnlyTransaction.cs"];
m7_6 [label="throw new ArgumentNullException(''uriMatch'');", span="33-33", cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="SqlServerWriteOnlyTransaction.cs"];
m7_11 [label="Exit Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", span="25-25", cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="SqlServerWriteOnlyTransaction.cs"];
m7_13 [label="Hangfire.Dashboard.RequestDispatcherContext", span="", file="SqlServerWriteOnlyTransaction.cs"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=1, style=dashed, color=darkseagreen4, label=createSql];
n2 -> n3  [key=0, style=solid];
n2 -> n10  [key=2, style=dotted];
n2 -> n4  [key=1, style=dashed, color=darkseagreen4, label=connection];
n2 -> n8  [key=1, style=dashed, color=darkseagreen4, label=connection];
n3 -> n4  [key=0, style=solid];
n3 -> n11  [key=2, style=dotted];
n3 -> n12  [key=2, style=dotted];
n10 -> n20  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n4 -> n13  [key=2, style=dotted];
n4 -> n7  [key=1, style=dashed, color=darkseagreen4, label=aggregator];
n8 -> n9  [key=0, style=solid];
n8 -> n17  [key=2, style=dotted];
n8 -> n18  [key=2, style=dotted];
n8 -> n19  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n14  [key=2, style=dotted];
n5 -> n7  [key=1, style=dashed, color=darkseagreen4, label=cts];
n13 -> n23  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n16  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n6 -> n15  [key=2, style=dotted];
n9 -> n0  [key=0, style=bold, color=blue];
n20 -> n21  [key=0, style=solid];
n20 -> n22  [key=2, style=dotted];
n21 -> n10  [key=0, style=bold, color=blue];
n23 -> n24  [key=0, style=solid];
n23 -> n26  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n27  [key=2, style=dotted];
n25 -> n13  [key=0, style=bold, color=blue];
m1_23 -> m1_27  [key=0, style=solid];
m1_23 -> m1_28  [key=2, style=dotted];
m1_23 -> m1_31  [key=2, style=dotted];
m1_23 -> m1_32  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid, color=red];
m1_18 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_18 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_18 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_19 -> m1_20  [key=0, style=solid, color=red];
m1_19 -> m1_28  [key=2, style=dotted, color=red];
m1_19 -> m1_29  [key=2, style=dotted, color=red];
m1_19 -> m1_21  [key=1, style=dashed, color=red, label=flags];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_35  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_36  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid, color=red];
m1_20 -> m1_22  [key=1, style=dashed, color=red, label=fetched];
m1_20 -> m1_24  [key=1, style=dashed, color=red, label=fetched];
m1_21 -> m1_22  [key=0, style=solid, color=red];
m1_21 -> m1_24  [key=1, style=dashed, color=red, label="@checked"];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_24  [key=0, style=solid];
m1_22 -> m1_30  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_27  [key=0, style=solid];
m1_24 -> m1_33  [key=2, style=dotted];
m1_24 -> m1_34  [key=2, style=dotted];
m1_27 -> m1_18  [key=0, style=bold, color=blue];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_55 -> m1_57  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TimedOutByCheckedTime"];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_58  [key=0, style=solid];
m1_56 -> m1_46  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_46  [key=2, style=dotted];
m1_58 -> m1_54  [key=2, style=dotted];
m1_57 -> m1_59  [key=0, style=solid];
m1_59 -> m1_55  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_12  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_11  [key=0, style=solid];
m1_6 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_6 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_13  [key=2, style=dotted];
m1_7 -> m1_14  [key=2, style=dotted];
m1_7 -> m1_15  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_13  [key=2, style=dotted];
m1_8 -> m1_16  [key=2, style=dotted];
m1_10 -> m1_9  [key=0, style=solid];
m1_10 -> m1_17  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_6  [key=0, style=solid];
m1_11 -> m1_4  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_60 -> m1_61  [key=0, style=solid];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_64  [key=0, style=solid];
m1_61 -> m1_65  [key=0, style=solid];
m1_61 -> m1_67  [key=0, style=solid];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_4  [key=2, style=dotted];
m1_64 -> m1_67  [key=0, style=solid];
m1_65 -> m1_66  [key=0, style=solid];
m1_63 -> m1_61  [key=0, style=solid];
m1_63 -> m1_68  [key=2, style=dotted];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_69  [key=2, style=dotted];
m1_67 -> m1_60  [key=0, style=bold, color=blue];
m1_35 -> m1_37  [key=0, style=solid];
m1_35 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_35 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_35 -> m1_18  [key=3, color=darkorchid, style=bold, label="Parameter variable string jobId"];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_28  [key=2, style=dotted];
m1_37 -> m1_44  [key=2, style=dotted];
m1_37 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=jobType];
m1_41 -> m1_43  [key=0, style=solid];
m1_41 -> m1_47  [key=2, style=dotted];
m1_41 -> m1_48  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_49  [key=2, style=dotted];
m1_42 -> m1_50  [key=2, style=dotted];
m1_42 -> m1_13  [key=2, style=dotted];
m1_42 -> m1_48  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_45  [key=2, style=dotted];
m1_38 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_38 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=recoverFromStates];
m1_39 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=recoverFromStates];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_42  [key=0, style=solid];
m1_40 -> m1_46  [key=2, style=dotted];
m1_43 -> m1_35  [key=0, style=bold, color=blue];
m1_51 -> m1_52  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_46  [key=2, style=dotted];
m1_52 -> m1_54  [key=2, style=dotted];
m1_53 -> m1_51  [key=0, style=bold, color=blue];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_72  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.Thread"];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_74  [key=2, style=dotted];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_75  [key=2, style=dotted];
m1_73 -> m1_70  [key=0, style=bold, color=blue];
m1_76 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m1_76 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m1_76 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m1_76 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m1_76 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m1_76 -> m1_19  [key=1, style=dashed, color=red, label="HangFire.Server.DequeuedJobsWatcher"];
m1_76 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m1_76 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m1_76 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m1_76 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m1_76 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m1_76 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m1_76 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m1_76 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m1_76 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_9  [key=2, style=dotted];
m2_8 -> m2_6  [key=0, style=bold, color=blue];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_26  [key=2, style=dotted];
m2_128 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_126 -> m2_128  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_126 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_26  [key=2, style=dotted];
m2_127 -> m2_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_129 -> m2_126  [key=0, style=bold, color=blue];
m2_156 -> m2_157  [key=0, style=solid];
m2_156 -> m2_160  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_157 -> m2_158  [key=0, style=solid];
m2_157 -> m2_26  [key=2, style=dotted];
m2_157 -> m2_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_158 -> m2_156  [key=0, style=bold, color=blue];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_26  [key=2, style=dotted];
m2_111 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_114  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_109 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_109 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_26  [key=2, style=dotted];
m2_110 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_112 -> m2_109  [key=0, style=bold, color=blue];
m2_169 -> m2_170  [key=0, style=solid];
m2_169 -> m2_173  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_170 -> m2_171  [key=0, style=solid];
m2_170 -> m2_26  [key=2, style=dotted];
m2_170 -> m2_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_171 -> m2_169  [key=0, style=bold, color=blue];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_26  [key=2, style=dotted];
m2_55 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_53 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_53 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_53 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m2_53 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m2_53 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m2_53 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m2_53 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_53 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_53 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_26  [key=2, style=dotted];
m2_54 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_63  [key=2, style=dotted];
m2_56 -> m2_64  [key=2, style=dotted];
m2_56 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m2_56 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m2_56 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_65  [key=2, style=dotted];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_60  [key=0, style=solid];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_65  [key=2, style=dotted];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_26  [key=2, style=dotted];
m2_60 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_66  [key=2, style=dotted];
m2_62 -> m2_53  [key=0, style=bold, color=blue];
m2_189 -> m2_190  [key=0, style=solid, color=red];
m2_189 -> m2_26  [key=2, style=dotted, color=red];
m2_189 -> m2_191  [key=1, style=dashed, color=red, label="lambda expression"];
m2_188 -> m2_189  [key=0, style=solid, color=red];
m2_188 -> m2_192  [key=1, style=dashed, color=red, label=string];
m2_190 -> m2_188  [key=0, style=bold, color=blue];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_38 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_38 -> m2_48  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_38 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_38 -> m2_51  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_26  [key=2, style=dotted];
m2_39 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_26  [key=2, style=dotted];
m2_40 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_26  [key=2, style=dotted];
m2_41 -> m2_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_42 -> m2_38  [key=0, style=bold, color=blue];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_26  [key=2, style=dotted];
m2_120 -> m2_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_121 -> m2_119  [key=0, style=bold, color=blue];
m2_136 -> m2_137  [key=0, style=solid];
m2_136 -> m2_140  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_26  [key=2, style=dotted];
m2_137 -> m2_139  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_138 -> m2_136  [key=0, style=bold, color=blue];
m2_149 -> m2_150  [key=0, style=solid];
m2_149 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_26  [key=2, style=dotted];
m2_150 -> m2_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_151 -> m2_149  [key=0, style=bold, color=blue];
m2_10 -> m2_11  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_17  [key=0, style=solid];
m2_11 -> m2_18  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label=replayCount];
m2_12 -> m2_12  [key=3, color=darkorchid, style=bold, label="Local variable int replayCount"];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label=maxReplayCount];
m2_13 -> m2_13  [key=3, color=darkorchid, style=bold, label="Local variable int maxReplayCount"];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_14  [key=0, style=solid];
m2_15 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label=replayCount];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_17  [key=0, style=solid];
m2_14 -> m2_19  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_20  [key=2, style=dotted];
m2_17 -> m2_10  [key=0, style=bold, color=blue];
m2_176 -> m2_177  [key=0, style=solid, color=red];
m2_176 -> m2_180  [key=1, style=dashed, color=red, label=string];
m2_177 -> m2_178  [key=0, style=solid, color=red];
m2_177 -> m2_26  [key=2, style=dotted, color=red];
m2_177 -> m2_179  [key=1, style=dashed, color=red, label="lambda expression"];
m2_178 -> m2_176  [key=0, style=bold, color=blue];
m2_64 -> m2_0  [key=3, color=darkorchid, style=bold, label="Field variable IRedisTransaction _transaction"];
m2_191 -> m2_192  [key=0, style=solid, color=red];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_30  [key=2, style=dotted];
m2_28 -> m2_31  [key=2, style=dotted];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_30  [key=2, style=dotted];
m2_33 -> m2_31  [key=2, style=dotted];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_30  [key=2, style=dotted];
m2_36 -> m2_31  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_35 -> m2_36  [key=0, style=solid];
m2_29 -> m2_27  [key=0, style=bold, color=blue];
m2_34 -> m2_32  [key=0, style=bold, color=blue];
m2_37 -> m2_35  [key=0, style=bold, color=blue];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_30  [key=2, style=dotted];
m2_44 -> m2_46  [key=2, style=dotted];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_30  [key=2, style=dotted];
m2_48 -> m2_46  [key=2, style=dotted];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_30  [key=2, style=dotted];
m2_51 -> m2_46  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_47 -> m2_48  [key=0, style=solid];
m2_50 -> m2_51  [key=0, style=solid];
m2_45 -> m2_43  [key=0, style=bold, color=blue];
m2_49 -> m2_47  [key=0, style=bold, color=blue];
m2_52 -> m2_50  [key=0, style=bold, color=blue];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_30  [key=2, style=dotted];
m2_68 -> m2_70  [key=2, style=dotted];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_30  [key=2, style=dotted];
m2_72 -> m2_74  [key=2, style=dotted];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_30  [key=2, style=dotted];
m2_76 -> m2_78  [key=2, style=dotted];
m2_67 -> m2_68  [key=0, style=solid];
m2_71 -> m2_72  [key=0, style=solid];
m2_75 -> m2_76  [key=0, style=solid];
m2_69 -> m2_67  [key=0, style=bold, color=blue];
m2_73 -> m2_71  [key=0, style=bold, color=blue];
m2_77 -> m2_75  [key=0, style=bold, color=blue];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_30  [key=2, style=dotted];
m2_87 -> m2_89  [key=2, style=dotted];
m2_87 -> m2_90  [key=2, style=dotted];
m2_86 -> m2_87  [key=0, style=solid];
m2_88 -> m2_86  [key=0, style=bold, color=blue];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_98  [key=2, style=dotted];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_30  [key=2, style=dotted];
m2_100 -> m2_90  [key=2, style=dotted];
m2_95 -> m2_96  [key=0, style=solid];
m2_99 -> m2_100  [key=0, style=solid];
m2_97 -> m2_95  [key=0, style=bold, color=blue];
m2_101 -> m2_99  [key=0, style=bold, color=blue];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_108  [key=2, style=dotted];
m2_105 -> m2_106  [key=0, style=solid];
m2_107 -> m2_105  [key=0, style=bold, color=blue];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_108  [key=2, style=dotted];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_31  [key=2, style=dotted];
m2_113 -> m2_114  [key=0, style=solid];
m2_116 -> m2_117  [key=0, style=solid];
m2_115 -> m2_113  [key=0, style=bold, color=blue];
m2_118 -> m2_116  [key=0, style=bold, color=blue];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_125  [key=2, style=dotted];
m2_122 -> m2_123  [key=0, style=solid];
m2_124 -> m2_122  [key=0, style=bold, color=blue];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_125  [key=2, style=dotted];
m2_134 -> m2_135  [key=0, style=solid];
m2_134 -> m2_31  [key=2, style=dotted];
m2_130 -> m2_131  [key=0, style=solid];
m2_133 -> m2_134  [key=0, style=solid];
m2_132 -> m2_130  [key=0, style=bold, color=blue];
m2_135 -> m2_133  [key=0, style=bold, color=blue];
m2_140 -> m2_141  [key=0, style=solid];
m2_140 -> m2_142  [key=2, style=dotted];
m2_139 -> m2_140  [key=0, style=solid];
m2_141 -> m2_139  [key=0, style=bold, color=blue];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_142  [key=2, style=dotted];
m2_146 -> m2_147  [key=0, style=solid];
m2_148 -> m2_146  [key=0, style=bold, color=blue];
m2_153 -> m2_154  [key=0, style=solid];
m2_153 -> m2_155  [key=2, style=dotted];
m2_152 -> m2_153  [key=0, style=solid];
m2_154 -> m2_152  [key=0, style=bold, color=blue];
m2_160 -> m2_161  [key=0, style=solid];
m2_160 -> m2_90  [key=2, style=dotted];
m2_159 -> m2_160  [key=0, style=solid];
m2_161 -> m2_159  [key=0, style=bold, color=blue];
m2_166 -> m2_167  [key=0, style=solid];
m2_166 -> m2_168  [key=2, style=dotted];
m2_165 -> m2_166  [key=0, style=solid];
m2_167 -> m2_165  [key=0, style=bold, color=blue];
m2_173 -> m2_174  [key=0, style=solid];
m2_173 -> m2_175  [key=2, style=dotted];
m2_172 -> m2_173  [key=0, style=solid];
m2_174 -> m2_172  [key=0, style=bold, color=blue];
m2_180 -> m2_181  [key=0, style=solid, color=red];
m2_180 -> m2_108  [key=2, style=dotted, color=red];
m2_179 -> m2_180  [key=0, style=solid, color=red];
m2_181 -> m2_179  [key=0, style=bold, color=blue];
m2_186 -> m2_187  [key=0, style=solid, color=red];
m2_186 -> m2_125  [key=2, style=dotted, color=red];
m2_185 -> m2_186  [key=0, style=solid, color=red];
m2_187 -> m2_185  [key=0, style=bold, color=blue];
m2_192 -> m2_193  [key=0, style=solid, color=red];
m2_192 -> m2_31  [key=2, style=dotted, color=red];
m2_193 -> m2_191  [key=0, style=bold, color=blue];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_144 -> m2_145  [key=0, style=solid];
m2_144 -> m2_26  [key=2, style=dotted];
m2_144 -> m2_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_145 -> m2_143  [key=0, style=bold, color=blue];
m2_182 -> m2_183  [key=0, style=solid, color=red];
m2_182 -> m2_186  [key=1, style=dashed, color=red, label=string];
m2_183 -> m2_184  [key=0, style=solid, color=red];
m2_183 -> m2_26  [key=2, style=dotted, color=red];
m2_183 -> m2_185  [key=1, style=dashed, color=red, label="lambda expression"];
m2_184 -> m2_182  [key=0, style=bold, color=blue];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_26  [key=2, style=dotted];
m2_103 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_104 -> m2_102  [key=0, style=bold, color=blue];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [key=2, style=dotted];
m2_24 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_21 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_21 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_21 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_21 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_26  [key=2, style=dotted];
m2_22 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_26  [key=2, style=dotted];
m2_23 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_25 -> m2_21  [key=0, style=bold, color=blue];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_91 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_91 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_26  [key=2, style=dotted];
m2_92 -> m2_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_26  [key=2, style=dotted];
m2_93 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_94 -> m2_91  [key=0, style=bold, color=blue];
m2_66 -> m2_79  [key=0, style=solid];
m2_66 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m2_66 -> m2_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m2_66 -> m2_83  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_66 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_66 -> m2_53  [key=3, color=darkorchid, style=bold, label="Parameter variable HangFire.States.State state"];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_63  [key=2, style=dotted];
m2_79 -> m2_64  [key=2, style=dotted];
m2_79 -> m2_81  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m2_79 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m2_79 -> m2_83  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m2_79 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_65  [key=2, style=dotted];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_65  [key=2, style=dotted];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_26  [key=2, style=dotted];
m2_83 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_85  [key=2, style=dotted];
m2_82 -> m2_65  [key=2, style=dotted];
m2_84 -> m2_66  [key=0, style=bold, color=blue];
m2_162 -> m2_163  [key=0, style=solid];
m2_162 -> m2_166  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> m2_26  [key=2, style=dotted];
m2_163 -> m2_165  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_164 -> m2_162  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_2 -> m2_4  [key=0, style=solid];
m2_2 -> m2_5  [key=2, style=dotted];
m2_4 -> m2_0  [key=0, style=bold, color=blue];
m2_194 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_128  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_137  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_144  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_150  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_163  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_170  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_177  [key=1, style=dashed, color=red, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_183  [key=1, style=dashed, color=red, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_194 -> m2_189  [key=1, style=dashed, color=red, label="HangFire.Redis.RedisWriteOnlyTransaction"];
m2_195 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_195 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_195 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_196 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_196 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_196 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_197 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_197 -> m2_48  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_197 -> m2_51  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_198 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_198 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_198 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_199 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m2_200 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m2_201 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_202 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m2_203 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_203 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_204 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_205 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_206 -> m2_114  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_206 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_207 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_208 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_209 -> m2_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_209 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_210 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_211 -> m2_140  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_212 -> m2_140  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_213 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_214 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_215 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label=double];
m2_216 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_217 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_218 -> m2_160  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_219 -> m2_160  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_220 -> m2_166  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_221 -> m2_166  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_222 -> m2_173  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_223 -> m2_173  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_224 -> m2_173  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_225 -> m2_180  [key=1, style=dashed, color=red, label=string];
m2_226 -> m2_186  [key=1, style=dashed, color=red, label=string];
m2_227 -> m2_192  [key=1, style=dashed, color=red, label=string];
m2_228 -> m2_192  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m3_117 -> m3_118  [key=0, style=solid];
m3_117 -> m3_120  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m3_117 -> m3_122  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m3_117 -> m3_123  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> m3_120  [key=0, style=solid];
m3_120 -> m3_121  [key=0, style=solid];
m3_120 -> m3_122  [key=0, style=solid];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_125  [key=2, style=dotted];
m3_123 -> m3_124  [key=0, style=solid];
m3_123 -> m3_65  [key=2, style=dotted];
m3_123 -> m3_69  [key=2, style=dotted];
m3_119 -> m3_124  [key=0, style=solid];
m3_119 -> m3_5  [key=2, style=dotted];
m3_121 -> m3_124  [key=0, style=solid];
m3_121 -> m3_5  [key=2, style=dotted];
m3_124 -> m3_117  [key=0, style=bold, color=blue];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_98  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_95 -> m3_100  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_98  [key=0, style=solid];
m3_98 -> m3_99  [key=0, style=solid];
m3_98 -> m3_100  [key=0, style=solid];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> n17  [key=2, style=dotted];
m3_100 -> m3_42  [key=2, style=dotted];
m3_97 -> m3_101  [key=0, style=solid];
m3_97 -> m3_5  [key=2, style=dotted];
m3_99 -> m3_101  [key=0, style=solid];
m3_99 -> m3_5  [key=2, style=dotted];
m3_101 -> m3_95  [key=0, style=bold, color=blue];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_50  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m3_47 -> m3_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m3_47 -> m3_54  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m3_47 -> m3_55  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m3_47 -> m3_56  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m3_47 -> m3_58  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_50  [key=0, style=solid];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_52  [key=0, style=solid];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_64  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_65  [key=2, style=dotted];
m3_54 -> m3_66  [key=2, style=dotted];
m3_54 -> n17  [key=2, style=dotted];
m3_54 -> m3_68  [key=2, style=dotted];
m3_54 -> m3_46  [key=2, style=dotted];
m3_54 -> m3_59  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m3_54 -> m3_62  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m3_55 -> m3_56  [key=0, style=solid];
m3_55 -> m3_62  [key=0, style=solid];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_59  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
m3_56 -> m3_61  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_60  [key=0, style=solid];
m3_49 -> m3_63  [key=0, style=solid];
m3_49 -> m3_5  [key=2, style=dotted];
m3_51 -> m3_63  [key=0, style=solid];
m3_51 -> m3_5  [key=2, style=dotted];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_54  [key=1, style=dashed, color=darkseagreen4, label=createJobSql];
m3_52 -> m3_52  [key=3, color=darkorchid, style=bold, label="Local variable string createJobSql"];
m3_59 -> m3_58  [key=0, style=solid];
m3_59 -> m3_59  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
m3_62 -> m3_63  [key=0, style=solid];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_59  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
m3_57 -> m3_27  [key=3, color=darkorchid, style=bold, label="Local variable int parameterIndex"];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_69  [key=2, style=dotted];
m3_60 -> m3_61  [key=0, style=solid];
m3_60 -> m3_60  [key=3, color=darkorchid, style=bold, label="Local variable string insertParameterSql"];
m3_63 -> m3_47  [key=0, style=bold, color=blue];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_74  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_70 -> m3_75  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.Storage.JobData GetJobData"];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_73  [key=0, style=solid];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> n17  [key=2, style=dotted];
m3_74 -> m3_42  [key=2, style=dotted];
m3_74 -> m3_77  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m3_74 -> m3_78  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m3_74 -> m3_84  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m3_72 -> m3_85  [key=0, style=solid];
m3_72 -> m3_5  [key=2, style=dotted];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_73  [key=3, color=darkorchid, style=bold, label="Local variable string sql"];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_77  [key=0, style=solid];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> n17  [key=2, style=dotted];
m3_77 -> m3_81  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m3_78 -> m3_79  [key=0, style=solid];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_87  [key=2, style=dotted];
m3_76 -> m3_85  [key=0, style=solid];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_84  [key=0, style=solid];
m3_81 -> m3_86  [key=2, style=dotted];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_75  [key=3, color=darkorchid, style=bold, label="Local variable HangFire.Common.Job job"];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_75  [key=3, color=darkorchid, style=bold, label="Local variable HangFire.Common.JobLoadException loadException"];
m3_80 -> m3_82  [key=3, color=darkorchid, style=bold, label="Local variable HangFire.Common.JobLoadException loadException"];
m3_82 -> m3_83  [key=0, style=solid];
m3_83 -> m3_84  [key=0, style=solid];
m3_85 -> m3_70  [key=0, style=bold, color=blue];
m3_10 -> m3_11  [key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_13  [key=2, style=dotted];
m3_12 -> m3_10  [key=0, style=bold, color=blue];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m3_19 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m3_19 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_22  [key=0, style=solid];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_24  [key=0, style=solid];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_39  [key=2, style=dotted];
m3_28 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m3_28 -> m3_32  [key=1, style=dashed, color=red, label="System.Threading.CancellationToken"];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_18  [key=2, style=dotted];
m3_29 -> m3_40  [key=2, style=dotted];
m3_29 -> m3_41  [key=2, style=dotted];
m3_29 -> m3_42  [key=2, style=dotted];
m3_29 -> m3_35  [key=1, style=dashed, color=darkseagreen4, label=idAndQueue];
m3_29 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label=idAndQueue];
m3_21 -> m3_37  [key=0, style=solid];
m3_21 -> m3_5  [key=2, style=dotted];
m3_23 -> m3_37  [key=0, style=solid];
m3_23 -> m3_38  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label=fetchJobSqlTemplate];
m3_25 -> m3_25  [key=3, color=darkorchid, style=bold, label="Local variable string fetchJobSqlTemplate"];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label=fetchConditions];
m3_26 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label=fetchConditions];
m3_26 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label=fetchConditions];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m3_27 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m3_27 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m3_27 -> m3_27  [key=3, color=darkorchid, style=bold, label="Local variable int currentQueryIndex"];
m3_31 -> m3_32  [key=0, style=solid, color=red];
m3_31 -> m3_34  [key=0, style=solid];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m3_32 -> m3_33  [key=0, style=solid, color=red];
m3_32 -> m3_34  [key=0, style=solid, color=red];
m3_32 -> m3_43  [key=2, style=dotted, color=red];
m3_32 -> m3_44  [key=2, style=dotted, color=red];
m3_32 -> m3_32  [key=1, style=dashed, color=red, label="System.Threading.CancellationToken"];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_34  [key=0, style=solid];
m3_35 -> m3_27  [key=0, style=solid];
m3_35 -> m3_36  [key=0, style=solid];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_45  [key=2, style=dotted];
m3_36 -> m3_46  [key=2, style=dotted];
m3_33 -> m3_34  [key=0, style=solid, color=red];
m3_33 -> m3_39  [key=2, style=dotted, color=red];
m3_33 -> m3_33  [key=1, style=dashed, color=red, label="System.Threading.CancellationToken"];
m3_37 -> m3_19  [key=0, style=bold, color=blue];
m3_136 -> m3_137  [key=0, style=solid];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_139  [key=0, style=solid];
m3_137 -> m3_141  [key=2, style=dotted];
m3_137 -> m3_137  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m3_138 -> m3_140  [key=0, style=solid];
m3_138 -> m3_38  [key=2, style=dotted];
m3_139 -> m3_140  [key=0, style=solid];
m3_139 -> m3_40  [key=2, style=dotted];
m3_139 -> m3_66  [key=2, style=dotted];
m3_139 -> m3_69  [key=2, style=dotted];
m3_139 -> m3_139  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m3_140 -> m3_136  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_2 -> m3_4  [key=0, style=solid];
m3_2 -> m3_5  [key=2, style=dotted];
m3_4 -> m3_0  [key=0, style=bold, color=blue];
m3_6 -> m3_7  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_9  [key=2, style=dotted];
m3_8 -> m3_6  [key=0, style=bold, color=blue];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_105  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_102 -> m3_107  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_105  [key=0, style=solid];
m3_105 -> m3_106  [key=0, style=solid];
m3_105 -> m3_107  [key=0, style=solid];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_69  [key=2, style=dotted];
m3_104 -> m3_108  [key=0, style=solid];
m3_104 -> m3_5  [key=2, style=dotted];
m3_106 -> m3_108  [key=0, style=solid];
m3_106 -> m3_5  [key=2, style=dotted];
m3_108 -> m3_102  [key=0, style=bold, color=blue];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_91  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_88 -> m3_93  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_91  [key=0, style=solid];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_93  [key=0, style=solid];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_69  [key=2, style=dotted];
m3_90 -> m3_94  [key=0, style=solid];
m3_90 -> m3_5  [key=2, style=dotted];
m3_92 -> m3_94  [key=0, style=solid];
m3_92 -> m3_5  [key=2, style=dotted];
m3_94 -> m3_88  [key=0, style=bold, color=blue];
m3_109 -> m3_110  [key=0, style=solid];
m3_109 -> m3_112  [key=1, style=dashed, color=darkseagreen4, label=double];
m3_109 -> m3_114  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_110 -> m3_111  [key=0, style=solid];
m3_110 -> m3_112  [key=0, style=solid];
m3_112 -> m3_113  [key=0, style=solid];
m3_112 -> m3_114  [key=0, style=solid];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> n17  [key=2, style=dotted];
m3_114 -> m3_42  [key=2, style=dotted];
m3_111 -> m3_115  [key=0, style=solid];
m3_111 -> m3_5  [key=2, style=dotted];
m3_113 -> m3_115  [key=0, style=solid];
m3_113 -> m3_116  [key=2, style=dotted];
m3_115 -> m3_109  [key=0, style=bold, color=blue];
m3_14 -> m3_15  [key=0, style=solid];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_17  [key=2, style=dotted];
m3_15 -> m3_18  [key=2, style=dotted];
m3_16 -> m3_14  [key=0, style=bold, color=blue];
m3_126 -> m3_127  [key=0, style=solid];
m3_126 -> m3_129  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_127 -> m3_128  [key=0, style=solid];
m3_127 -> m3_129  [key=0, style=solid];
m3_129 -> m3_130  [key=0, style=solid];
m3_129 -> m3_69  [key=2, style=dotted];
m3_128 -> m3_130  [key=0, style=solid];
m3_128 -> m3_5  [key=2, style=dotted];
m3_130 -> m3_126  [key=0, style=bold, color=blue];
m3_131 -> m3_132  [key=0, style=solid];
m3_131 -> m3_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_132 -> m3_133  [key=0, style=solid];
m3_132 -> m3_134  [key=0, style=solid];
m3_134 -> m3_135  [key=0, style=solid];
m3_134 -> m3_69  [key=2, style=dotted];
m3_133 -> m3_135  [key=0, style=solid];
m3_133 -> m3_5  [key=2, style=dotted];
m3_135 -> m3_131  [key=0, style=bold, color=blue];
m3_142 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m3_142 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m3_142 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m3_142 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m3_142 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m3_142 -> m3_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m3_142 -> m3_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m3_142 -> m3_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m3_142 -> m3_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m3_142 -> m3_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m3_142 -> m3_107  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m3_142 -> m3_114  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m3_142 -> m3_123  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m3_142 -> m3_129  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m3_142 -> m3_134  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m3_142 -> m3_139  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m5_60 -> m5_61  [key=0, style=solid, color=green];
m5_61 -> m5_62  [key=0, style=solid, color=green];
m5_61 -> m5_22  [key=2, style=dotted, color=green];
m5_61 -> m5_63  [key=1, style=dashed, color=green, label="lambda expression"];
m5_62 -> m5_60  [key=0, style=bold, color=blue];
m5_48 -> m5_32  [key=3, color=green, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m5_48 -> m5_70  [key=0, style=solid, color=green];
m5_48 -> m5_71  [key=1, style=dashed, color=green, label="System.Action<SqlConnection>"];
m5_70 -> m5_71  [key=0, style=solid, color=green];
m5_70 -> m5_73  [key=2, style=dotted, color=green];
m5_71 -> m5_72  [key=0, style=solid, color=green];
m5_71 -> m5_74  [key=2, style=dotted, color=green];
m5_72 -> m5_48  [key=0, style=bold, color=blue];
m5_29 -> m5_30  [key=0, style=solid, color=green];
m5_30 -> m5_31  [key=0, style=solid, color=green];
m5_30 -> m5_39  [key=2, style=dotted, color=green];
m5_30 -> m5_32  [key=1, style=dashed, color=green, label=releaseLock];
m5_30 -> m5_46  [key=1, style=dashed, color=green, label=releaseLock];
m5_30 -> m5_52  [key=1, style=dashed, color=green, label=releaseLock];
m5_30 -> m5_36  [key=1, style=dashed, color=green, label=releaseLock];
m5_31 -> m5_32  [key=0, style=solid, color=green];
m5_31 -> m5_39  [key=2, style=dotted, color=green];
m5_31 -> m5_46  [key=1, style=dashed, color=green, label=lockAcquired];
m5_31 -> m5_51  [key=1, style=dashed, color=green, label=lockAcquired];
m5_31 -> m5_34  [key=1, style=dashed, color=green, label=lockAcquired];
m5_32 -> m5_33  [key=0, style=solid, color=green];
m5_32 -> m5_40  [key=2, style=dotted, color=green];
m5_32 -> m5_37  [key=1, style=dashed, color=green, label=thread];
m5_36 -> m5_37  [key=0, style=solid, color=green];
m5_36 -> m5_43  [key=2, style=dotted, color=green];
m5_34 -> m5_35  [key=0, style=solid, color=green];
m5_34 -> m5_42  [key=2, style=dotted, color=green];
m5_33 -> m5_34  [key=0, style=solid, color=green];
m5_33 -> m5_41  [key=2, style=dotted, color=green];
m5_37 -> m5_38  [key=0, style=solid, color=green];
m5_37 -> m5_44  [key=2, style=dotted, color=green];
m5_35 -> m5_36  [key=0, style=solid, color=green];
m5_35 -> m5_22  [key=2, style=dotted, color=green];
m5_35 -> m5_54  [key=1, style=dashed, color=green, label="lambda expression"];
m5_38 -> m5_29  [key=0, style=bold, color=blue];
m5_63 -> m5_64  [key=0, style=solid, color=green];
m5_63 -> m5_66  [key=1, style=dashed, color=green, label=SqlConnection];
m5_6 -> m5_7  [key=0, style=solid, color=green];
m5_7 -> m5_8  [key=0, style=solid, color=green];
m5_7 -> m5_9  [key=2, style=dotted, color=green];
m5_7 -> m5_10  [key=2, style=dotted, color=green];
m5_8 -> m5_6  [key=0, style=bold, color=blue];
m5_15 -> m5_16  [key=0, style=solid, color=green];
m5_16 -> m5_17  [key=0, style=solid, color=green];
m5_16 -> m5_18  [key=2, style=dotted, color=green];
m5_17 -> m5_15  [key=0, style=bold, color=blue];
m5_23 -> m5_24  [key=0, style=solid, color=green];
m5_23 -> m5_25  [key=1, style=dashed, color=green, label=SqlConnection];
m5_24 -> m5_25  [key=0, style=solid, color=green];
m5_24 -> m5_9  [key=2, style=dotted, color=green];
m5_25 -> m5_26  [key=0, style=solid, color=green];
m5_25 -> m5_4  [key=2, style=dotted, color=green];
m5_25 -> m5_28  [key=2, style=dotted, color=green];
m5_26 -> m5_27  [key=0, style=solid, color=green];
m5_26 -> n19  [key=2, style=dotted, color=green];
m5_27 -> m5_23  [key=0, style=bold, color=blue];
m5_46 -> m5_47  [key=0, style=solid, color=green];
m5_46 -> m5_48  [key=2, style=dotted, color=green];
m5_46 -> m5_49  [key=1, style=dashed, color=green, label="lambda expression"];
m5_52 -> m5_53  [key=0, style=solid, color=green];
m5_52 -> m5_42  [key=2, style=dotted, color=green];
m5_51 -> m5_52  [key=0, style=solid, color=green];
m5_51 -> m5_43  [key=2, style=dotted, color=green];
m5_45 -> m5_46  [key=0, style=solid, color=green];
m5_47 -> m5_45  [key=0, style=bold, color=blue];
m5_49 -> m5_50  [key=0, style=solid, color=green];
m5_53 -> m5_49  [key=0, style=bold, color=blue];
m5_50 -> m5_51  [key=0, style=solid, color=green];
m5_50 -> m5_9  [key=2, style=dotted, color=green];
m5_54 -> m5_55  [key=0, style=solid, color=green];
m5_54 -> m5_58  [key=1, style=dashed, color=green, label=SqlConnection];
m5_55 -> m5_56  [key=0, style=solid, color=green];
m5_55 -> m5_4  [key=2, style=dotted, color=green];
m5_55 -> m5_57  [key=1, style=dashed, color=green, label="lambda expression"];
m5_56 -> m5_54  [key=0, style=bold, color=blue];
m5_57 -> m5_58  [key=0, style=solid, color=green];
m5_58 -> m5_59  [key=0, style=solid, color=green];
m5_58 -> m5_9  [key=2, style=dotted, color=green];
m5_59 -> m5_57  [key=0, style=bold, color=blue];
m5_64 -> m5_65  [key=0, style=solid, color=green];
m5_64 -> m5_9  [key=2, style=dotted, color=green];
m5_65 -> m5_66  [key=0, style=solid, color=green];
m5_65 -> m5_69  [key=2, style=dotted, color=green];
m5_66 -> m5_67  [key=0, style=solid, color=green];
m5_66 -> m5_4  [key=2, style=dotted, color=green];
m5_66 -> m5_28  [key=2, style=dotted, color=green];
m5_67 -> m5_68  [key=0, style=solid, color=green];
m5_67 -> n19  [key=2, style=dotted, color=green];
m5_68 -> m5_63  [key=0, style=bold, color=blue];
m5_11 -> m5_12  [key=0, style=solid, color=green];
m5_12 -> m5_13  [key=0, style=solid, color=green];
m5_12 -> m5_4  [key=2, style=dotted, color=green];
m5_12 -> m5_15  [key=1, style=dashed, color=green, label="lambda expression"];
m5_13 -> m5_14  [key=0, style=solid, color=green];
m5_13 -> n19  [key=2, style=dotted, color=green];
m5_14 -> m5_11  [key=0, style=bold, color=blue];
m5_19 -> m5_20  [key=0, style=solid, color=green];
m5_20 -> m5_21  [key=0, style=solid, color=green];
m5_20 -> m5_22  [key=2, style=dotted, color=green];
m5_20 -> m5_23  [key=1, style=dashed, color=green, label="lambda expression"];
m5_21 -> m5_19  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid, color=green];
m5_1 -> m5_2  [key=0, style=solid, color=green];
m5_1 -> m5_4  [key=2, style=dotted, color=green];
m5_1 -> m5_6  [key=1, style=dashed, color=green, label="lambda expression"];
m5_2 -> m5_3  [key=0, style=solid, color=green];
m5_2 -> n19  [key=2, style=dotted, color=green];
m5_3 -> m5_0  [key=0, style=bold, color=blue];
m5_75 -> m5_20  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m5_75 -> m5_32  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m5_75 -> m5_46  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m5_75 -> m5_35  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m5_75 -> m5_61  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m5_76 -> m5_46  [key=1, style=dashed, color=green, label=releaseLock];
m5_76 -> m5_52  [key=1, style=dashed, color=green, label=releaseLock];
m5_77 -> m5_46  [key=1, style=dashed, color=green, label=lockAcquired];
m5_77 -> m5_51  [key=1, style=dashed, color=green, label=lockAcquired];
m5_78 -> m5_58  [key=1, style=dashed, color=green, label=SqlConnection];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_0 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=0, style=solid];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_6  [key=0, style=solid];
m6_4 -> m6_13  [key=2, style=dotted];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_17  [key=2, style=dotted];
m6_2 -> m6_10  [key=0, style=solid];
m6_2 -> m6_11  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_12  [key=2, style=dotted];
m6_5 -> m6_10  [key=0, style=solid];
m6_5 -> m6_14  [key=2, style=dotted];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_15  [key=2, style=dotted];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_16  [key=2, style=dotted];
m6_7 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label=script];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_12  [key=2, style=dotted];
m6_10 -> m6_0  [key=0, style=bold, color=blue];
m6_15 -> m6_23  [key=0, style=solid];
m6_15 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.Assembly"];
m6_15 -> m6_6  [key=3, color=darkorchid, style=bold, label="Parameter variable string resourceName"];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_29  [key=2, style=dotted];
m6_23 -> m6_26  [key=1, style=dashed, color=darkseagreen4, label=stream];
m6_25 -> m6_28  [key=0, style=solid];
m6_25 -> m6_30  [key=2, style=dotted];
m6_25 -> m6_31  [key=2, style=dotted];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_26  [key=0, style=solid];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_32  [key=2, style=dotted];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_33  [key=2, style=dotted];
m6_28 -> m6_15  [key=0, style=bold, color=blue];
m6_13 -> m6_18  [key=0, style=solid];
m6_13 -> m6_0  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> n17  [key=2, style=dotted];
m6_18 -> m6_22  [key=2, style=dotted];
m6_19 -> m6_20  [key=0, style=solid];
m6_20 -> m6_13  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, object>"];
m7_0 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label="System.Text.RegularExpressions.Match"];
m7_0 -> m7_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_0 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m7_0 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, object>"];
m7_0 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label="System.Text.RegularExpressions.Match"];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=0, style=solid];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_5  [key=0, style=solid];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_7  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_8 -> m7_9  [key=0, style=solid];
m7_9 -> m7_10  [key=0, style=solid];
m7_10 -> m7_11  [key=0, style=solid];
m7_2 -> m7_11  [key=0, style=solid];
m7_2 -> m7_12  [key=2, style=dotted];
m7_4 -> m7_11  [key=0, style=solid];
m7_4 -> m7_12  [key=2, style=dotted];
m7_6 -> m7_11  [key=0, style=solid];
m7_6 -> m7_12  [key=2, style=dotted];
m7_11 -> m7_0  [key=0, style=bold, color=blue];
m7_13 -> m7_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RequestDispatcherContext"];
m7_13 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RequestDispatcherContext"];
m7_13 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RequestDispatcherContext"];
m7_13 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RequestDispatcherContext"];
}
