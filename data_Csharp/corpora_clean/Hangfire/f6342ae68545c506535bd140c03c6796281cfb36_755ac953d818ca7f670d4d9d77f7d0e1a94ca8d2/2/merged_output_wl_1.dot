digraph  {
n30 [label="HangFire.BackgroundJobServer", span=""];
n0 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", span="15-15"];
n1 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", span="15-15"];
n2 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", span="20-20"];
n3 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", label="MachineName = Environment.MachineName", span="22-22"];
n5 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", label="WorkerCount = workerCount", span="25-25"];
n6 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", label="Queues = queues ?? new[] { ''default'' }", span="26-26"];
n4 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", label="PollInterval = TimeSpan.FromSeconds(15)", span="23-23"];
n8 [cluster="System.TimeSpan.FromSeconds(double)", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
n7 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", span="20-20"];
n9 [cluster="HangFire.BackgroundJobServer.Start()", label="Entry HangFire.BackgroundJobServer.Start()", span="52-52"];
n10 [cluster="HangFire.BackgroundJobServer.Start()", label="_server != null", span="54-54"];
n11 [cluster="HangFire.BackgroundJobServer.Start()", label="throw new InvalidOperationException(''Background job server has already been started. Please stop it first.'');", span="56-56"];
n12 [cluster="HangFire.BackgroundJobServer.Start()", label="var serverName = String.Format(''{0}:{1}'', MachineName, Process.GetCurrentProcess().Id)", span="59-59"];
n13 [cluster="HangFire.BackgroundJobServer.Start()", label="_server = new JobServer(\r\n                RedisFactory.BasicManager,\r\n                serverName, WorkerCount, Queues, JobActivator, PollInterval, TimeSpan.FromSeconds(5))", span="61-63"];
n16 [cluster="System.Diagnostics.Process.GetCurrentProcess()", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
n17 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
n14 [cluster="HangFire.BackgroundJobServer.Start()", label="Exit HangFire.BackgroundJobServer.Start()", span="52-52"];
n18 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", label="Entry HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", span="33-33"];
n15 [cluster="System.InvalidOperationException.InvalidOperationException(string)", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
n19 [cluster="HangFire.BackgroundJobServer.Stop()", label="Entry HangFire.BackgroundJobServer.Stop()", span="70-70"];
n20 [cluster="HangFire.BackgroundJobServer.Stop()", label="_server != null", span="72-72"];
n21 [cluster="HangFire.BackgroundJobServer.Stop()", label="_server.Dispose()", span="74-74"];
n24 [cluster="HangFire.BackgroundJobServer.Stop()", label="return false;", span="79-79"];
n22 [cluster="HangFire.BackgroundJobServer.Stop()", label="_server = null", span="75-75"];
n26 [cluster="HangFire.Server.JobServer.Dispose()", label="Entry HangFire.Server.JobServer.Dispose()", span="70-70"];
n23 [cluster="HangFire.BackgroundJobServer.Stop()", label="return true;", span="77-77"];
n25 [cluster="HangFire.BackgroundJobServer.Stop()", label="Exit HangFire.BackgroundJobServer.Stop()", span="70-70"];
n27 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", label="Entry HangFire.BackgroundJobServer.System.IDisposable.Dispose()", span="82-82"];
n28 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", label="Stop()", span="84-84"];
n29 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", label="Exit HangFire.BackgroundJobServer.System.IDisposable.Dispose()", span="82-82"];
d12 [cluster="HangFire.BackgroundJobServer.Start()", color=green, community=0, label="0: var serverName = String.Format(''{0}:{1}'', MachineName, Process.GetCurrentProcess().Id)", span="59-59"];
d13 [cluster="HangFire.BackgroundJobServer.Start()", color=green, community=0, label="0: _server = new JobServer(\r\n                RedisFactory.BasicManager,\r\n                serverName, WorkerCount, Queues, JobActivator, PollInterval, TimeSpan.FromSeconds(5))", span="61-63"];
m0_100 [cluster="Mock<T>.cstr", file="Client.feature.cs", label="Entry Mock<T>.cstr", span=""];
m0_8 [cluster="System.Collections.Generic.List<T>.List()", file="Client.feature.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_17 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="Client.feature.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="29-29"];
m0_18 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="Client.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundProcessServer(null, _processes, _properties))", span="31-32"];
m0_19 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="Client.feature.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="34-34"];
m0_20 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="Client.feature.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="29-29"];
m0_48 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateServer()", file="Client.feature.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateServer()", span="84-84"];
m0_94 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateServer()", color=red, community=0, file="Client.feature.cs", label="0: return new BackgroundProcessServer(_storage.Object, _processes, _properties);", span="86-86"];
m0_95 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateServer()", file="Client.feature.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateServer()", span="84-84"];
m0_22 [cluster="Unk.Equal", file="Client.feature.cs", label="Entry Unk.Equal", span=""];
m0_10 [cluster="Mock<IStorageConnection>.cstr", file="Client.feature.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m0_0 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", file="Client.feature.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", span="18-18"];
m0_1 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", file="Client.feature.cs", label="_storage = new Mock<JobStorage>()", span="20-20"];
m0_2 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", file="Client.feature.cs", label="_processes = new List<IServerProcess>()", span="21-21"];
m0_3 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", file="Client.feature.cs", label="_properties = new Dictionary<string, object> { { ''Queues'', _queues } }", span="22-22"];
m0_4 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", file="Client.feature.cs", label="_connection = new Mock<IStorageConnection>()", span="24-24"];
m0_5 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", file="Client.feature.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="25-25"];
m0_6 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", file="Client.feature.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", span="18-18"];
m0_49 [cluster="System.Threading.Thread.Sleep(int)", file="Client.feature.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m0_21 [cluster="Unk.>", file="Client.feature.cs", label="Entry Unk.>", span=""];
m0_34 [cluster="BackgroundProcessServer.cstr", file="Client.feature.cs", label="Entry BackgroundProcessServer.cstr", span=""];
m0_72 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateProcessMock<T>()", file="Client.feature.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateProcessMock<T>()", span="89-89"];
m0_96 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateProcessMock<T>()", color=red, community=0, file="Client.feature.cs", label="0: var mock = new Mock<T>()", span="92-92"];
m0_97 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateProcessMock<T>()", color=red, community=0, file="Client.feature.cs", label="0: _processes.Add(mock.Object)", span="93-93"];
m0_98 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateProcessMock<T>()", file="Client.feature.cs", label="return mock;", span="95-95"];
m0_99 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateProcessMock<T>()", file="Client.feature.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateProcessMock<T>()", span="89-89"];
m0_62 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="Client.feature.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", span="68-68"];
m0_63 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="Client.feature.cs", label="var component1 = CreateProcessMock<IServerComponent>()", span="71-71"];
m0_64 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="Client.feature.cs", label="component1.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Callback(() => Thread.Sleep(10))", span="72-72"];
m0_69 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", color=red, community=0, file="Client.feature.cs", label="0: component1.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.AtLeast(5))", span="80-80"];
m0_65 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="Client.feature.cs", label="var component2 = CreateProcessMock<IBackgroundProcess>()", span="73-73"];
m0_66 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="Client.feature.cs", label="component2.Setup(x => x.Execute(It.IsAny<BackgroundProcessContext>())).Callback(() => Thread.Sleep(10))", span="74-74"];
m0_70 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="Client.feature.cs", label="component2.Verify(x => x.Execute(It.IsNotNull<BackgroundProcessContext>()), Times.AtLeast(5))", span="81-81"];
m0_67 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="Client.feature.cs", label="CreateServer()", span="77-77"];
m0_68 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="Client.feature.cs", label="Thread.Sleep(100)", span="77-77"];
m0_71 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="Client.feature.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", span="68-68"];
m0_16 [cluster="Unk.GetConnection", file="Client.feature.cs", label="Entry Unk.GetConnection", span=""];
m0_35 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", file="Client.feature.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", span="47-47"];
m0_36 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", file="Client.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundProcessServer(_storage.Object, _processes, null))", span="49-50"];
m0_37 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", file="Client.feature.cs", label="Assert.Equal(''properties'', exception.ParamName)", span="52-52"];
m0_38 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", file="Client.feature.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", span="47-47"];
m0_101 [cluster="Unk.Add", file="Client.feature.cs", label="Entry Unk.Add", span=""];
m0_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Client.feature.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_11 [cluster="Unk.Setup", file="Client.feature.cs", label="Entry Unk.Setup", span=""];
m0_54 [cluster="Unk.AnnounceServer", file="Client.feature.cs", label="Entry Unk.AnnounceServer", span=""];
m0_91 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="81-81"];
m0_13 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="25-25"];
m0_14 [cluster="lambda expression", file="Client.feature.cs", label="x.GetConnection()", span="25-25"];
m0_15 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="25-25"];
m0_23 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="32-32"];
m0_24 [cluster="lambda expression", file="Client.feature.cs", label="new BackgroundProcessServer(null, _processes, _properties)", span="32-32"];
m0_25 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="32-32"];
m0_31 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="41-41"];
m0_32 [cluster="lambda expression", file="Client.feature.cs", label="new BackgroundProcessServer(_storage.Object, null, _properties)", span="41-41"];
m0_33 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="41-41"];
m0_39 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="50-50"];
m0_40 [cluster="lambda expression", file="Client.feature.cs", label="new BackgroundProcessServer(_storage.Object, _processes, null)", span="50-50"];
m0_41 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="50-50"];
m0_51 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="60-62"];
m0_58 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="64-64"];
m0_52 [cluster="lambda expression", file="Client.feature.cs", label="x.AnnounceServer(\r\n                It.IsNotNull<string>(),\r\n                It.Is<ServerContext>(y => y.Queues == _queues))", span="60-62"];
m0_53 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="60-62"];
m0_55 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="62-62"];
m0_56 [cluster="lambda expression", file="Client.feature.cs", label="y.Queues == _queues", span="62-62"];
m0_57 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="62-62"];
m0_59 [cluster="lambda expression", file="Client.feature.cs", label="x.RemoveServer(It.IsNotNull<string>())", span="64-64"];
m0_60 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="64-64"];
m0_75 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="72-72"];
m0_79 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="72-72"];
m0_82 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="74-74"];
m0_85 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="74-74"];
m0_88 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="80-80"];
m0_76 [cluster="lambda expression", file="Client.feature.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="72-72"];
m0_77 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="72-72"];
m0_80 [cluster="lambda expression", file="Client.feature.cs", label="Thread.Sleep(10)", span="72-72"];
m0_81 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="72-72"];
m0_83 [cluster="lambda expression", file="Client.feature.cs", label="x.Execute(It.IsAny<BackgroundProcessContext>())", span="74-74"];
m0_84 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="74-74"];
m0_86 [cluster="lambda expression", file="Client.feature.cs", label="Thread.Sleep(10)", span="74-74"];
m0_87 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="74-74"];
m0_89 [cluster="lambda expression", color=red, community=0, file="Client.feature.cs", label="0: x.Execute(It.IsAny<CancellationToken>())", span="80-80"];
m0_90 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="80-80"];
m0_92 [cluster="lambda expression", file="Client.feature.cs", label="x.Execute(It.IsNotNull<BackgroundProcessContext>())", span="81-81"];
m0_93 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="81-81"];
m0_50 [cluster="Unk.Verify", file="Client.feature.cs", label="Entry Unk.Verify", span=""];
m0_74 [cluster="Unk.AtLeast", file="Client.feature.cs", label="Entry Unk.AtLeast", span=""];
m0_61 [cluster="Unk.RemoveServer", file="Client.feature.cs", label="Entry Unk.RemoveServer", span=""];
m0_78 [cluster="Unk.Execute", file="Client.feature.cs", label="Entry Unk.Execute", span=""];
m0_73 [cluster="Unk.Callback", file="Client.feature.cs", label="Entry Unk.Callback", span=""];
m0_12 [cluster="Unk.Returns", file="Client.feature.cs", label="Entry Unk.Returns", span=""];
m0_42 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", file="Client.feature.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", span="56-56"];
m0_43 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", file="Client.feature.cs", label="CreateServer()", span="58-58"];
m0_44 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", file="Client.feature.cs", label="Thread.Sleep(50)", span="58-58"];
m0_45 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", file="Client.feature.cs", label="_connection.Verify(x => x.AnnounceServer(\r\n                It.IsNotNull<string>(),\r\n                It.Is<ServerContext>(y => y.Queues == _queues)))", span="60-62"];
m0_46 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", file="Client.feature.cs", label="_connection.Verify(x => x.RemoveServer(It.IsNotNull<string>()))", span="64-64"];
m0_47 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", file="Client.feature.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", span="56-56"];
m0_27 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenProcessesArgumentIsNull()", file="Client.feature.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenProcessesArgumentIsNull()", span="38-38"];
m0_28 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenProcessesArgumentIsNull()", file="Client.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundProcessServer(_storage.Object, null, _properties))", span="40-41"];
m0_29 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenProcessesArgumentIsNull()", file="Client.feature.cs", label="Assert.Equal(''processes'', exception.ParamName)", span="43-43"];
m0_30 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenProcessesArgumentIsNull()", file="Client.feature.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenProcessesArgumentIsNull()", span="38-38"];
m0_7 [cluster="Mock<JobStorage>.cstr", file="Client.feature.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m0_26 [cluster="Hangfire.Server.BackgroundProcessServer.BackgroundProcessServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerProcess>, System.Collections.Generic.IDictionary<string, object>)", file="Client.feature.cs", label="Entry Hangfire.Server.BackgroundProcessServer.BackgroundProcessServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerProcess>, System.Collections.Generic.IDictionary<string, object>)", span="38-38"];
m0_102 [file="Client.feature.cs", label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", span=""];
m1_21 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(HangFire.Server.SharedWorkerContext)", file="ClientSteps.cs", label="Entry HangFire.Server.SharedWorkerContext.SharedWorkerContext(HangFire.Server.SharedWorkerContext)", span="46-46"];
m1_22 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(HangFire.Server.SharedWorkerContext)", file="ClientSteps.cs", label="Exit HangFire.Server.SharedWorkerContext.SharedWorkerContext(HangFire.Server.SharedWorkerContext)", span="46-46"];
m1_20 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ClientSteps.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_0 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", file="ClientSteps.cs", label="Entry HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", span="23-23"];
m1_1 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=red, community=0, file="ClientSteps.cs", label="0: serverId == null", span="31-31"];
m1_3 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=red, community=0, file="ClientSteps.cs", label="0: queues == null", span="32-32"];
m1_5 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=red, community=0, file="ClientSteps.cs", label="0: storage == null", span="33-33"];
m1_7 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=red, community=0, file="ClientSteps.cs", label="0: performanceProcess == null", span="34-34"];
m1_9 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=red, community=0, file="ClientSteps.cs", label="0: activator == null", span="35-35"];
m1_11 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=red, community=0, file="ClientSteps.cs", label="0: stateMachineFactory == null", span="36-36"];
m1_13 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=red, community=0, file="ClientSteps.cs", label="0: ServerId = serverId", span="38-38"];
m1_14 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=red, community=0, file="ClientSteps.cs", label="0: Queues = queues", span="39-39"];
m1_15 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=red, community=0, file="ClientSteps.cs", label="0: Storage = storage", span="40-40"];
m1_16 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=red, community=0, file="ClientSteps.cs", label="0: PerformanceProcess = performanceProcess", span="41-41"];
m1_17 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=red, community=0, file="ClientSteps.cs", label="0: Activator = activator", span="42-42"];
m1_18 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=red, community=0, file="ClientSteps.cs", label="0: StateMachineFactory = stateMachineFactory", span="43-43"];
m1_2 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=red, community=0, file="ClientSteps.cs", label="0: throw new ArgumentNullException(''serverId'');", span="31-31"];
m1_4 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=red, community=0, file="ClientSteps.cs", label="0: throw new ArgumentNullException(''queues'');", span="32-32"];
m1_6 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=red, community=0, file="ClientSteps.cs", label="0: throw new ArgumentNullException(''storage'');", span="33-33"];
m1_8 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=red, community=0, file="ClientSteps.cs", label="0: throw new ArgumentNullException(''performanceProcess'');", span="34-34"];
m1_10 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=red, community=0, file="ClientSteps.cs", label="0: throw new ArgumentNullException(''activator'');", span="35-35"];
m1_12 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", color=red, community=0, file="ClientSteps.cs", label="0: throw new ArgumentNullException(''stateMachineFactory'');", span="36-36"];
m1_19 [cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", file="ClientSteps.cs", label="Exit HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", span="23-23"];
m1_23 [file="ClientSteps.cs", label="HangFire.Server.SharedWorkerContext", span=""];
m7_0 [cluster="HangFire.Client.IJobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="IJobClient.cs", label="Entry HangFire.Client.IJobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="7-7"];
m7_1 [cluster="HangFire.Client.IJobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="IJobClient.cs", label="Exit HangFire.Client.IJobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="7-7"];
m9_10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobClient.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m9_77 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JobClient.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m9_16 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="33-33"];
m9_27 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="JobClient.cs", label="0: var jobParameters = CreateJobParameters(jobType, args)", span="50-50"];
m9_25 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="!typeof(BackgroundJob).IsAssignableFrom(jobType)", span="41-41"];
m9_28 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", color=green, community=1, file="JobClient.cs", label="0: var context = new CreateContext(\r\n                    new ClientJobDescriptor(_redis, jobId, jobParameters, state))", span="52-53"];
m9_29 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="JobClient.cs", label="0: _jobCreator.CreateJob(context)", span="55-55"];
m9_30 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="JobClient.cs", label="0: return jobId;", span="57-57"];
m9_31 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="JobClient.cs", label="0: Exception", span="59-59"];
m9_32 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="JobClient.cs", label="0: throw new CreateJobFailedException(''Job creation was failed. See the inner exception for details.'', ex);", span="61-61"];
m9_17 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="String.IsNullOrEmpty(jobId)", span="36-36"];
m9_19 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="jobType == null", span="37-37"];
m9_21 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="state == null", span="38-38"];
m9_23 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="args == null", span="39-39"];
m9_26 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="throw new ArgumentException(\r\n                    String.Format(''The type '{0}' must inherit '{1}'.'', jobType, typeof(BackgroundJob)),\r\n                    ''jobType'');", span="43-45"];
m9_18 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="throw new ArgumentNullException(''jobId'');", span="36-36"];
m9_20 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="throw new ArgumentNullException(''jobType'');", span="37-37"];
m9_22 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="throw new ArgumentNullException(''state'');", span="38-38"];
m9_24 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="throw new ArgumentNullException(''args'');", span="39-39"];
m9_33 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="33-33"];
m9_75 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="JobClient.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
m9_43 [cluster="HangFire.Client.JobClient.Dispose()", file="JobClient.cs", label="Entry HangFire.Client.JobClient.Dispose()", span="65-65"];
m9_44 [cluster="HangFire.Client.JobClient.Dispose()", file="JobClient.cs", label="_redis.Dispose()", span="67-67"];
m9_45 [cluster="HangFire.Client.JobClient.Dispose()", file="JobClient.cs", label="Exit HangFire.Client.JobClient.Dispose()", span="65-65"];
m9_38 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="Entry HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="70-70"];
m9_47 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="var job = new Dictionary<string, string>()", span="73-73"];
m9_48 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="job[''Type''] = jobType.AssemblyQualifiedName", span="74-74"];
m9_49 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="job[''Args''] = JobHelper.ToJson(jobArgs)", span="75-75"];
m9_52 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="return job;", span="79-79"];
m9_50 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="job[''State''] = String.Empty", span="76-76"];
m9_51 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="job[''CreatedAt''] = JobHelper.ToStringTimestamp(DateTime.UtcNow)", span="77-77"];
m9_53 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="Exit HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="70-70"];
m9_35 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JobClient.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m9_73 [cluster="object.GetType()", file="JobClient.cs", label="Entry object.GetType()", span="0-0"];
m9_55 [cluster="HangFire.JobHelper.ToJson(object)", file="JobClient.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="40-40"];
m9_56 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobClient.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="63-63"];
m9_71 [cluster="System.ComponentModel.TypeDescriptor.GetProperties(object)", file="JobClient.cs", label="Entry System.ComponentModel.TypeDescriptor.GetProperties(object)", span="0-0"];
m9_2 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs", label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="18-18"];
m9_7 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs", label="_redis = redisManager.GetClient()", span="23-23"];
m9_8 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs", label="_jobCreator = jobCreator", span="24-24"];
m9_5 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs", label="jobCreator == null", span="21-21"];
m9_3 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs", label="redisManager == null", span="20-20"];
m9_6 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs", label="throw new ArgumentNullException(''jobCreator'');", span="21-21"];
m9_4 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs", label="throw new ArgumentNullException(''redisManager'');", span="20-20"];
m9_9 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClient.cs", label="Exit HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="18-18"];
m9_74 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="JobClient.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m9_11 [cluster="Unk.GetClient", file="JobClient.cs", label="Entry Unk.GetClient", span=""];
m9_54 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobClient.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m9_76 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="JobClient.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m9_72 [cluster="System.ComponentModel.PropertyDescriptor.GetValue(object)", file="JobClient.cs", label="Entry System.ComponentModel.PropertyDescriptor.GetValue(object)", span="0-0"];
m9_34 [cluster="string.IsNullOrEmpty(string)", file="JobClient.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m9_46 [cluster="Unk.Dispose", file="JobClient.cs", label="Entry Unk.Dispose", span=""];
m9_41 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobClient.cs", label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="38-38"];
m9_42 [cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="JobClient.cs", label="Entry HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="22-22"];
m9_15 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="Entry HangFire.Client.JobClient.PropertiesToDictionary(object)", span="82-82"];
m9_57 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="var result = new Dictionary<string, string>()", span="84-84"];
m9_58 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="obj == null", span="85-85"];
m9_60 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="TypeDescriptor.GetProperties(obj)", span="87-87"];
m9_61 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="var propertyValue = descriptor.GetValue(obj)", span="89-89"];
m9_67 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="throw new InvalidOperationException(\r\n                            String.Format(\r\n                                ''Could not convert property '{0}' of type '{1}' to a string. See the inner exception for details.'',\r\n                                descriptor.Name,\r\n                                descriptor.PropertyType),\r\n                            ex);", span="101-106"];
m9_59 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="return result;", span="85-85"];
m9_69 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="return result;", span="113-113"];
m9_68 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="result.Add(descriptor.Name, value)", span="110-110"];
m9_62 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="string value = null", span="90-90"];
m9_63 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="propertyValue != null", span="92-92"];
m9_64 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="var converter = TypeDescriptor.GetConverter(propertyValue.GetType())", span="96-96"];
m9_65 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="value = converter.ConvertToInvariantString(propertyValue)", span="97-97"];
m9_66 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label=Exception, span="99-99"];
m9_70 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="Exit HangFire.Client.JobClient.PropertiesToDictionary(object)", span="82-82"];
m9_40 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="JobClient.cs", label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="15-15"];
m9_36 [cluster="System.ArgumentException.ArgumentException(string, string)", file="JobClient.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m9_12 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="JobClient.cs", label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27"];
m9_13 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="JobClient.cs", label="return CreateJob(jobId, jobType, state, PropertiesToDictionary(args));", span="30-30"];
m9_14 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="JobClient.cs", label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27"];
m9_39 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", file="JobClient.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12"];
m9_78 [file="JobClient.cs", label="HangFire.Client.JobClient", span=""];
m10_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobClient.feature.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m10_8 [cluster="Hangfire.Dashboard.OwinDashboardResponse.SetExpire(System.DateTimeOffset?)", file="JobClient.feature.cs", label="Entry Hangfire.Dashboard.OwinDashboardResponse.SetExpire(System.DateTimeOffset?)", span="49-49"];
m10_9 [cluster="Hangfire.Dashboard.OwinDashboardResponse.SetExpire(System.DateTimeOffset?)", color=green, community=0, file="JobClient.feature.cs", label="0: _context.Response.Expires = value", span="51-51"];
m10_10 [cluster="Hangfire.Dashboard.OwinDashboardResponse.SetExpire(System.DateTimeOffset?)", file="JobClient.feature.cs", label="Exit Hangfire.Dashboard.OwinDashboardResponse.SetExpire(System.DateTimeOffset?)", span="49-49"];
m10_11 [cluster="Hangfire.Dashboard.OwinDashboardResponse.WriteAsync(string)", file="JobClient.feature.cs", label="Entry Hangfire.Dashboard.OwinDashboardResponse.WriteAsync(string)", span="54-54"];
m10_12 [cluster="Hangfire.Dashboard.OwinDashboardResponse.WriteAsync(string)", color=green, community=0, file="JobClient.feature.cs", label="0: return _context.Response.WriteAsync(text);", span="56-56"];
m10_13 [cluster="Hangfire.Dashboard.OwinDashboardResponse.WriteAsync(string)", file="JobClient.feature.cs", label="Exit Hangfire.Dashboard.OwinDashboardResponse.WriteAsync(string)", span="54-54"];
m10_14 [cluster="Unk.WriteAsync", file="JobClient.feature.cs", label="Entry Unk.WriteAsync", span=""];
m10_6 [cluster="Unk.nameof", file="JobClient.feature.cs", label="Entry Unk.nameof", span=""];
m10_7 [cluster="OwinContext.cstr", file="JobClient.feature.cs", label="Entry OwinContext.cstr", span=""];
m10_0 [cluster="Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", file="JobClient.feature.cs", label="Entry Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", span="29-29"];
m10_1 [cluster="Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", color=green, community=0, file="JobClient.feature.cs", label="0: environment == null", span="31-31"];
m10_2 [cluster="Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", color=green, community=0, file="JobClient.feature.cs", label="0: throw new ArgumentNullException(nameof(environment));", span="31-31"];
m10_3 [cluster="Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", color=green, community=0, file="JobClient.feature.cs", label="0: _context = new OwinContext(environment)", span="32-32"];
m10_4 [cluster="Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", file="JobClient.feature.cs", label="Exit Hangfire.Dashboard.OwinDashboardResponse.OwinDashboardResponse(System.Collections.Generic.IDictionary<string, object>)", span="29-29"];
m10_15 [file="JobClient.feature.cs", label="Hangfire.Dashboard.OwinDashboardResponse", span=""];
m15_16 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobServer.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m15_22 [cluster="HangFire.JobActivator.JobActivator()", file="JobServer.cs", label="Entry HangFire.JobActivator.JobActivator()", span="4-4"];
m15_31 [cluster="System.Threading.Thread.Join()", file="JobServer.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m15_51 [cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs", label="Entry HangFire.Server.JobServer.RunServer()", span="98-98"];
m15_52 [cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs", label="AnnounceServer()", span="102-102"];
m15_53 [cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs", label="StartServer()", span="103-103"];
m15_54 [cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs", label=true, span="105-105"];
m15_55 [cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs", label="Heartbeat()", span="107-107"];
m15_57 [cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs", label="StopServer()", span="115-115"];
m15_56 [cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs", label="_stopped.WaitOne(HeartbeatInterval)", span="109-109"];
m15_58 [cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs", label="RemoveServer(_redis, _context.ServerName)", span="116-116"];
m15_59 [cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs", label=Exception, span="118-118"];
m15_60 [cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs", label="_logger.Fatal(''Unexpected exception caught.'', ex)", span="120-120"];
m15_61 [cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs", label="Exit HangFire.Server.JobServer.RunServer()", span="98-98"];
m15_0 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="Entry HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", span="33-33"];
m15_1 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="_redis = redisManager.GetClient()", span="41-41"];
m15_2 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="_redisManager = redisManager", span="43-43"];
m15_3 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="_workerCount = workerCount", span="44-44"];
m15_4 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="_queues = queues", span="45-45"];
m15_5 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="_pollInterval = pollInterval", span="46-46"];
m15_6 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="queues == null", span="48-48"];
m15_8 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="pollInterval != pollInterval.Duration()", span="50-50"];
m15_10 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", color=red, community=0, file="JobServer.cs", label="0: var serverName = String.Format(''{0}:{1}'', machineName, Process.GetCurrentProcess().Id)", span="55-55"];
m15_11 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="_context = new ServerContext(\r\n                serverName,\r\n                jobActivator ?? new JobActivator(),\r\n                new JobPerformer())", span="57-60"];
m15_7 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="throw new ArgumentNullException(''queues'');", span="48-48"];
m15_9 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="throw new ArgumentOutOfRangeException(''pollInterval'', ''Poll interval value must be positive.'');", span="52-52"];
m15_12 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="_serverThread = new Thread(RunServer)\r\n                {\r\n                    Name = typeof(JobServer).Name,\r\n                    IsBackground = true\r\n                }", span="62-66"];
m15_13 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="_serverThread.Start()", span="67-67"];
m15_14 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="Exit HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", span="33-33"];
m15_89 [cluster="Unk.SetRangeInHash", file="JobServer.cs", label="Entry Unk.SetRangeInHash", span=""];
m15_25 [cluster="System.Threading.Thread.Start()", file="JobServer.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m15_26 [cluster="HangFire.Server.JobServer.Dispose()", file="JobServer.cs", label="Entry HangFire.Server.JobServer.Dispose()", span="70-70"];
m15_27 [cluster="HangFire.Server.JobServer.Dispose()", file="JobServer.cs", label="_stopped.Set()", span="72-72"];
m15_28 [cluster="HangFire.Server.JobServer.Dispose()", file="JobServer.cs", label="_serverThread.Join()", span="73-73"];
m15_29 [cluster="HangFire.Server.JobServer.Dispose()", file="JobServer.cs", label="Exit HangFire.Server.JobServer.Dispose()", span="70-70"];
m15_42 [cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", file="JobServer.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", span="21-21"];
m15_96 [cluster="Unk.SetEntryInHash", file="JobServer.cs", label="Entry Unk.SetEntryInHash", span=""];
m15_81 [cluster="Unk.AddItemToSet", file="JobServer.cs", label="Entry Unk.AddItemToSet", span=""];
m15_85 [cluster="string.Format(string, object)", file="JobServer.cs", label="Entry string.Format(string, object)", span="0-0"];
m15_88 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobServer.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m15_41 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", file="JobServer.cs", label="Entry HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", span="21-21"];
m15_109 [cluster="Unk.RemoveEntry", file="JobServer.cs", label="Entry Unk.RemoveEntry", span=""];
m15_18 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="JobServer.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m15_87 [cluster="int.ToString()", file="JobServer.cs", label="Entry int.ToString()", span="0-0"];
m15_19 [cluster="System.Diagnostics.Process.GetCurrentProcess()", file="JobServer.cs", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
m15_38 [cluster="HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", file="JobServer.cs", label="Entry HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", span="10-10"];
m15_30 [cluster="System.Threading.EventWaitHandle.Set()", file="JobServer.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m15_94 [cluster="HangFire.Server.JobServer.Heartbeat()", file="JobServer.cs", label="_redis.SetEntryInHash(\r\n                String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="153-156"];
m15_63 [cluster="HangFire.Server.JobServer.Heartbeat()", file="JobServer.cs", label="Entry HangFire.Server.JobServer.Heartbeat()", span="151-151"];
m15_95 [cluster="HangFire.Server.JobServer.Heartbeat()", file="JobServer.cs", label="Exit HangFire.Server.JobServer.Heartbeat()", span="151-151"];
m15_99 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobServer.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', serverName),\r\n                    String.Format(''hangfire:server:{0}:queues'', serverName)))", span="167-169"];
m15_65 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobServer.cs", label="Entry HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", span="159-159"];
m15_97 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobServer.cs", label="var transaction = redis.CreateTransaction()", span="161-161"];
m15_98 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobServer.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    serverName))", span="163-165"];
m15_100 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobServer.cs", label="transaction.Commit()", span="171-171"];
m15_101 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobServer.cs", label="Exit HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", span="159-159"];
m15_44 [cluster="HangFire.Server.JobServer.StopServer()", file="JobServer.cs", label="Entry HangFire.Server.JobServer.StopServer()", span="89-89"];
m15_45 [cluster="HangFire.Server.JobServer.StopServer()", file="JobServer.cs", label="_serverWatchdog.Dispose()", span="91-91"];
m15_46 [cluster="HangFire.Server.JobServer.StopServer()", file="JobServer.cs", label="_fetchedJobsWatcher.Dispose()", span="92-92"];
m15_47 [cluster="HangFire.Server.JobServer.StopServer()", file="JobServer.cs", label="_schedulePoller.Dispose()", span="93-93"];
m15_48 [cluster="HangFire.Server.JobServer.StopServer()", file="JobServer.cs", label="_manager.Dispose()", span="94-94"];
m15_49 [cluster="HangFire.Server.JobServer.StopServer()", file="JobServer.cs", label="Exit HangFire.Server.JobServer.StopServer()", span="89-89"];
m15_23 [cluster="HangFire.Server.JobPerformer.JobPerformer()", file="JobServer.cs", label="Entry HangFire.Server.JobPerformer.JobPerformer()", span="13-13"];
m15_15 [cluster="Unk.GetClient", file="JobServer.cs", label="Entry Unk.GetClient", span=""];
m15_86 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobServer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m15_50 [cluster="HangFire.Server.ThreadWrapper.Dispose()", file="JobServer.cs", label="Entry HangFire.Server.ThreadWrapper.Dispose()", span="23-23"];
m15_93 [cluster="Unk.AddItemToList", file="JobServer.cs", label="Entry Unk.AddItemToList", span=""];
m15_62 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="Entry HangFire.Server.JobServer.AnnounceServer()", span="124-124"];
m15_67 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="var transaction = _redis.CreateTransaction()", span="126-126"];
m15_68 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName))", span="128-129"];
m15_69 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', _workerCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="131-137"];
m15_72 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queue1))", span="142-144"];
m15_73 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="transaction.Commit()", span="147-147"];
m15_70 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label=_queues, span="139-139"];
m15_71 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="var queue1 = queue", span="141-141"];
m15_74 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="Exit HangFire.Server.JobServer.AnnounceServer()", span="124-124"];
m15_105 [cluster="Unk.RemoveItemFromSet", file="JobServer.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m15_66 [cluster="Unk.Fatal", file="JobServer.cs", label="Entry Unk.Fatal", span=""];
m15_17 [cluster="System.TimeSpan.Duration()", file="JobServer.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m15_32 [cluster="HangFire.Server.JobServer.StartServer()", file="JobServer.cs", label="Entry HangFire.Server.JobServer.StartServer()", span="76-76"];
m15_33 [cluster="HangFire.Server.JobServer.StartServer()", color=red, community=0, file="JobServer.cs", label="0: _manager = new ThreadWrapper(new JobManager(\r\n                new PrioritizedJobFetcher(_redisManager, _queues, _workerCount),\r\n                _redisManager, \r\n                _context, \r\n                _workerCount))", span="78-82"];
m15_34 [cluster="HangFire.Server.JobServer.StartServer()", file="JobServer.cs", label="_schedulePoller = new ThreadWrapper(new SchedulePoller(_redisManager, _pollInterval))", span="84-84"];
m15_35 [cluster="HangFire.Server.JobServer.StartServer()", file="JobServer.cs", label="_fetchedJobsWatcher = new ThreadWrapper(new DequeuedJobsWatcher(_redisManager))", span="85-85"];
m15_36 [cluster="HangFire.Server.JobServer.StartServer()", file="JobServer.cs", label="_serverWatchdog = new ThreadWrapper(new ServerWatchdog(_redisManager))", span="86-86"];
m15_37 [cluster="HangFire.Server.JobServer.StartServer()", file="JobServer.cs", label="Exit HangFire.Server.JobServer.StartServer()", span="76-76"];
m15_106 [cluster="lambda expression", file="JobServer.cs", label="Entry lambda expression", span="167-169"];
m15_78 [cluster="lambda expression", file="JobServer.cs", label="Entry lambda expression", span="128-129"];
m15_82 [cluster="lambda expression", file="JobServer.cs", label="Entry lambda expression", span="131-137"];
m15_91 [cluster="lambda expression", file="JobServer.cs", label="x.AddItemToList(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queue1)", span="142-144"];
m15_90 [cluster="lambda expression", file="JobServer.cs", label="Entry lambda expression", span="142-144"];
m15_79 [cluster="lambda expression", file="JobServer.cs", label="x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName)", span="128-129"];
m15_80 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="128-129"];
m15_83 [cluster="lambda expression", file="JobServer.cs", label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', _workerCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="131-137"];
m15_84 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="131-137"];
m15_92 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="142-144"];
m15_103 [cluster="lambda expression", file="JobServer.cs", label="x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    serverName)", span="163-165"];
m15_107 [cluster="lambda expression", file="JobServer.cs", label="x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', serverName),\r\n                    String.Format(''hangfire:server:{0}:queues'', serverName))", span="167-169"];
m15_102 [cluster="lambda expression", file="JobServer.cs", label="Entry lambda expression", span="163-165"];
m15_104 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="163-165"];
m15_108 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="167-169"];
m15_77 [cluster="Unk.Commit", file="JobServer.cs", label="Entry Unk.Commit", span=""];
m15_64 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="JobServer.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m15_21 [cluster="HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="JobServer.cs", label="Entry HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="9-9"];
m15_40 [cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", file="JobServer.cs", label="Entry HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", span="13-13"];
m15_43 [cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(IRedisClientsManager)", file="JobServer.cs", label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(IRedisClientsManager)", span="18-18"];
m15_76 [cluster="Unk.QueueCommand", file="JobServer.cs", label="Entry Unk.QueueCommand", span=""];
m15_39 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.IJobFetcher, IRedisClientsManager, HangFire.Server.ServerContext, int)", file="JobServer.cs", label="Entry HangFire.Server.JobManager.JobManager(HangFire.Server.IJobFetcher, IRedisClientsManager, HangFire.Server.ServerContext, int)", span="18-18"];
m15_75 [cluster="Unk.CreateTransaction", file="JobServer.cs", label="Entry Unk.CreateTransaction", span=""];
m15_24 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="JobServer.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m15_110 [file="JobServer.cs", label="HangFire.Server.JobServer", span=""];
m15_111 [file="JobServer.cs", label=queue1, span=""];
m15_112 [file="JobServer.cs", label=string, span=""];
m18_28 [cluster="System.InvalidOperationException.InvalidOperationException()", file="PrioritizedJobFetcher.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m18_4 [cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", span="27-27"];
m18_6 [cluster="System.Collections.Generic.List<T>.Add(T)", file="PrioritizedJobFetcher.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m18_22 [cluster="Unk.ToList", file="PrioritizedJobFetcher.cs", label="Entry Unk.ToList", span=""];
m18_25 [cluster="Unk.WaitAny", file="PrioritizedJobFetcher.cs", label="Entry Unk.WaitAny", span=""];
m18_26 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="PrioritizedJobFetcher.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m18_0 [cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", span="13-13"];
m18_1 [cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", file="PrioritizedJobFetcher.cs", label=queues, span="17-17"];
m18_2 [cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", color=red, community=0, file="PrioritizedJobFetcher.cs", label="0: _fetchers.Add(new PrefetchJobFetcher(\r\n                    new JobFetcher(redisManager, queue), prefetchCount))", span="19-20"];
m18_3 [cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", span="13-13"];
m18_10 [cluster="HangFire.Server.DisposableCollection<T>.Dispose()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Server.DisposableCollection<T>.Dispose()", span="8-8"];
m18_11 [cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="29-29"];
m18_12 [cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs", label="var waitHandles = _fetchers.Select(x => x.JobIsReady).ToList()", span="31-31"];
m18_13 [cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs", label="waitHandles.Add(cancellationToken.WaitHandle)", span="32-32"];
m18_14 [cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs", label="WaitHandle.WaitAny(waitHandles.ToArray())", span="34-34"];
m18_15 [cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="36-36"];
m18_16 [cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs", label=_fetchers, span="38-38"];
m18_18 [cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs", label="return fetcher.DequeueJob(cancellationToken);", span="42-42"];
m18_17 [cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs", label="fetcher.PrefetchedCount > 0", span="40-40"];
m18_19 [cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs", label="throw new InvalidOperationException();", span="46-46"];
m18_20 [cluster="HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Server.PrioritizedJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="29-29"];
m18_23 [cluster="Unk.Add", file="PrioritizedJobFetcher.cs", label="Entry Unk.Add", span=""];
m18_27 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="50-50"];
m18_24 [cluster="Unk.ToArray", file="PrioritizedJobFetcher.cs", label="Entry Unk.ToArray", span=""];
m18_29 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="31-31"];
m18_30 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.JobIsReady", span="31-31"];
m18_31 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="31-31"];
m18_7 [cluster="HangFire.Server.PrioritizedJobFetcher.Dispose()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Server.PrioritizedJobFetcher.Dispose()", span="24-24"];
m18_8 [cluster="HangFire.Server.PrioritizedJobFetcher.Dispose()", file="PrioritizedJobFetcher.cs", label="_fetchers.Dispose()", span="26-26"];
m18_9 [cluster="HangFire.Server.PrioritizedJobFetcher.Dispose()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Server.PrioritizedJobFetcher.Dispose()", span="24-24"];
m18_5 [cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", span="12-12"];
m18_21 [cluster="Unk.Select", file="PrioritizedJobFetcher.cs", label="Entry Unk.Select", span=""];
m18_32 [file="PrioritizedJobFetcher.cs", label="HangFire.Server.PrioritizedJobFetcher", span=""];
m19_15 [cluster="Unk.InfoFormat", file="SchedulePoller.feature.cs", label="Entry Unk.InfoFormat", span=""];
m19_8 [cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="SchedulePoller.feature.cs", label="Entry HangFire.BackgroundJobServerOptions.Log(ILog)", span="59-59"];
m19_9 [cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="SchedulePoller.feature.cs", label="logger.InfoFormat(''Using the following options for HangFire Server:'')", span="61-61"];
m19_10 [cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="SchedulePoller.feature.cs", label="logger.InfoFormat(''    Worker count: {0}.'', WorkerCount)", span="62-62"];
m19_11 [cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="SchedulePoller.feature.cs", label="logger.InfoFormat(''    Listening queues: {0}.'', String.Join('', '', Queues.Select(x => ''''' + x + ''''')))", span="63-63"];
m19_12 [cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="SchedulePoller.feature.cs", label="logger.InfoFormat(''    Shutdown timeout: {0}.'', ShutdownTimeout)", span="64-64"];
m19_13 [cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="SchedulePoller.feature.cs", label="logger.InfoFormat(''    Schedule polling interval: {0}.'', SchedulePollingInterval)", span="65-65"];
m19_14 [cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="SchedulePoller.feature.cs", label="Exit HangFire.BackgroundJobServerOptions.Log(ILog)", span="59-59"];
m19_0 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="SchedulePoller.feature.cs", label="Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="13-13"];
m19_1 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="SchedulePoller.feature.cs", label="WorkerCount = Environment.ProcessorCount * 5", span="15-15"];
m19_2 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="SchedulePoller.feature.cs", label="ServerName = Environment.MachineName", span="16-16"];
m19_3 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="SchedulePoller.feature.cs", label="Queues = new[] { EnqueuedState.DefaultQueue }", span="17-17"];
m19_4 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="SchedulePoller.feature.cs", label="ShutdownTimeout = TimeSpan.FromSeconds(15)", span="18-18"];
m19_5 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="SchedulePoller.feature.cs", label="SchedulePollingInterval = TimeSpan.FromSeconds(15)", span="19-19"];
m19_6 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="SchedulePoller.feature.cs", label="Exit HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="13-13"];
m19_17 [cluster="Unk.Join", file="SchedulePoller.feature.cs", label="Entry Unk.Join", span=""];
m19_18 [cluster="lambda expression", file="SchedulePoller.feature.cs", label="Entry lambda expression", span="63-63"];
m19_19 [cluster="lambda expression", file="SchedulePoller.feature.cs", label="''''' + x + '''''", span="63-63"];
m19_20 [cluster="lambda expression", file="SchedulePoller.feature.cs", label="Exit lambda expression", span="63-63"];
m19_16 [cluster="Unk.Select", file="SchedulePoller.feature.cs", label="Entry Unk.Select", span=""];
m19_21 [file="SchedulePoller.feature.cs", label="HangFire.BackgroundJobServerOptions", span=""];
m20_5 [cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", file="Server.feature.cs", label="Entry HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", span="11-11"];
m20_10 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", file="Server.feature.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", span="27-27"];
m20_6 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="Server.feature.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m20_0 [cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="Server.feature.cs", label="Entry HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9"];
m20_1 [cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", color=green, community=0, file="Server.feature.cs", label="0: SharedContext = new SharedWorkerContextMock()", span="11-11"];
m20_2 [cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", color=green, community=0, file="Server.feature.cs", label="0: WorkerNumber = 1", span="12-12"];
m20_3 [cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", color=green, community=0, file="Server.feature.cs", label="0: _context = new Lazy<WorkerContext>(\r\n                () => new WorkerContext(SharedContext.Object, WorkerNumber))", span="14-15"];
m20_4 [cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="Server.feature.cs", label="Exit HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9"];
m20_7 [cluster="lambda expression", file="Server.feature.cs", label="Entry lambda expression", span="15-15"];
m20_8 [cluster="lambda expression", color=green, community=0, file="Server.feature.cs", label="0: new WorkerContext(SharedContext.Object, WorkerNumber)", span="15-15"];
m20_9 [cluster="lambda expression", file="Server.feature.cs", label="Exit lambda expression", span="15-15"];
m20_11 [file="Server.feature.cs", label="HangFire.Core.Tests.WorkerContextMock", span=""];
m21_91 [cluster="System.Collections.Generic.List<T>.List()", file="ServerSteps.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m21_398 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="ServerSteps.cs", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
m21_115 [cluster="long.Parse(string)", file="ServerSteps.cs", label="Entry long.Parse(string)", span="0-0"];
m21_0 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(string, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(string, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35"];
m21_1 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(string, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="ServerSteps.cs", label="_connectionString = connectionString", span="39-39"];
m21_2 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(string, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="ServerSteps.cs", label="_queueProviders = queueProviders", span="40-40"];
m21_3 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(string, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(string, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35"];
m21_48 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="518-518"];
m21_385 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="ServerSteps.cs", label="string jobsSql = @''\r\nselect * from (\r\n  select j.*, s.Reason as StateReason, s.Data as StateData, row_number() over (order by j.Id desc) as row_num\r\n  from HangFire.Job j\r\n  left join HangFire.State s on j.StateId = s.Id\r\n  where j.StateName = @stateName\r\n) as j where j.row_num between @start and @end\r\n''", span="525-532"];
m21_386 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="ServerSteps.cs", label="var jobs = connection.Query<SqlJob>(\r\n                        jobsSql,\r\n                        new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                        .ToList()", span="534-537"];
m21_387 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="ServerSteps.cs", label="return DeserializeJobs(jobs, selector);", span="539-539"];
m21_388 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="518-518"];
m21_399 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="ServerSteps.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m21_234 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="314-314"];
m21_235 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="ServerSteps.cs", label="return UseConnection(connection =>\r\n            {\r\n                const string sql = @''\r\nselect StateName as [State], count(id) as [Count] From HangFire.Job \r\ngroup by StateName\r\nhaving StateName is not null;\r\nselect count(Id) from HangFire.Server;\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:succeeded';\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:deleted';\r\nselect count(*) from HangFire.[Set] where [Key] = N'recurring-jobs';\r\n'';\r\n\r\n                var stats = new StatisticsDto();\r\n                using (var multi = connection.QueryMultiple(sql))\r\n                {\r\n                    var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count);\r\n\r\n                    Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0;\r\n\r\n                    stats.Enqueued = getCountIfExists(EnqueuedState.StateName);\r\n                    stats.Failed = getCountIfExists(FailedState.StateName);\r\n                    stats.Processing = getCountIfExists(ProcessingState.StateName);\r\n                    stats.Scheduled = getCountIfExists(ScheduledState.StateName);\r\n\r\n                    stats.Servers = multi.Read<int>().Single();\r\n\r\n                    stats.Succeeded = multi.Read<int?>().SingleOrDefault() ?? 0;\r\n                    stats.Deleted = multi.Read<int?>().SingleOrDefault() ?? 0;\r\n\r\n                    stats.Recurring = multi.Read<int>().Single();\r\n                }\r\n\r\n                stats.Queues = _queueProviders\r\n                    .SelectMany(x => x.GetJobQueueMonitoringApi(connection).GetQueues())\r\n                    .Count();\r\n\r\n                return stats;\r\n            });", span="316-353"];
m21_236 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="314-314"];
m21_52 [cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="ServerSteps.cs", label="Entry HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="23-23"];
m21_72 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="117-117"];
m21_73 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="ServerSteps.cs", label="return UseConnection(connection => \r\n                GetTimelineStats(connection, ''failed''));", span="119-120"];
m21_74 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="117-117"];
m21_361 [cluster="Unk.Open", file="ServerSteps.cs", label="Entry Unk.Open", span=""];
m21_7 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="447-447"];
m21_351 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="ServerSteps.cs", label="var transaction = new TransactionScope(TransactionScopeOption.Required, new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted })", span="449-449"];
m21_354 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="ServerSteps.cs", label="var result = action(connection)", span="454-454"];
m21_352 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="ServerSteps.cs", label="var connection = new SqlConnection(_connectionString)", span="450-450"];
m21_355 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="ServerSteps.cs", label="transaction.Complete()", span="456-456"];
m21_353 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="ServerSteps.cs", label="connection.Open()", span="452-452"];
m21_356 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="ServerSteps.cs", label="return result;", span="458-458"];
m21_357 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="447-447"];
m21_360 [cluster="SqlConnection.cstr", file="ServerSteps.cs", label="Entry SqlConnection.cstr", span=""];
m21_273 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", file="ServerSteps.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", span="22-22"];
m21_411 [cluster="Unk.ToString", file="ServerSteps.cs", label="Entry Unk.ToString", span=""];
m21_194 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="263-263"];
m21_195 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="ServerSteps.cs", label="return UseConnection(connection =>\r\n            {\r\n\r\n                const string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc'';\r\n\r\n                using (var multi = connection.QueryMultiple(sql, new { id = jobId }))\r\n                {\r\n                    var job = multi.Read<SqlJob>().SingleOrDefault();\r\n                    if (job == null) return null;\r\n\r\n                    var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value);\r\n                    var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                            })\r\n                            .ToList();\r\n\r\n                    return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };\r\n                }\r\n            });", span="265-299"];
m21_196 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="263-263"];
m21_258 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="ServerSteps.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m21_104 [cluster="HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", file="ServerSteps.cs", label="Entry HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", span="67-67"];
m21_367 [cluster="Unk.DeserializeJobs", file="ServerSteps.cs", label="Entry Unk.DeserializeJobs", span=""];
m21_36 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="77-77"];
m21_37 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="ServerSteps.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ProcessingState.StateName));", span="79-80"];
m21_38 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="77-77"];
m21_181 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="251-251"];
m21_182 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="ServerSteps.cs", label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''succeeded''));", span="253-254"];
m21_183 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="251-251"];
m21_179 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="24-24"];
m21_255 [cluster="Unk.Read", file="ServerSteps.cs", label="Entry Unk.Read", span=""];
m21_384 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="ServerSteps.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m21_105 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="168-168"];
m21_106 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="ServerSteps.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }));", span="170-182"];
m21_107 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="168-168"];
m21_94 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="150-150"];
m21_95 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="ServerSteps.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }));", span="152-165"];
m21_96 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="150-150"];
m21_269 [cluster="Unk.ContainsKey", file="ServerSteps.cs", label="Entry Unk.ContainsKey", span=""];
m21_64 [cluster="HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", file="ServerSteps.cs", label="Entry HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", span="23-23"];
m21_146 [cluster="Unk.EnqueuedJobs", file="ServerSteps.cs", label="Entry Unk.EnqueuedJobs", span=""];
m21_65 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="111-111"];
m21_66 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="ServerSteps.cs", label="return UseConnection(connection => \r\n                GetTimelineStats(connection, ''succeeded''));", span="113-114"];
m21_67 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="111-111"];
m21_383 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="ServerSteps.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="31-31"];
m21_22 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="60-60"];
m21_23 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="ServerSteps.cs", label="return UseConnection(connection =>\r\n            {\r\n                var queueApi = GetQueueApi(connection, queue);\r\n                var counters = queueApi.GetEnqueuedAndFetchedCount(queue);\r\n\r\n                return counters.FetchedCount ?? 0;\r\n            });", span="62-68"];
m21_24 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="60-60"];
m21_53 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="ServerSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m21_254 [cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="ServerSteps.cs", label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18"];
m21_256 [cluster="System.Func<T, TResult>.Invoke(T)", file="ServerSteps.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m21_400 [cluster="int.ToString()", file="ServerSteps.cs", label="Entry int.ToString()", span="0-0"];
m21_30 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="71-71"];
m21_31 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="ServerSteps.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, FailedState.StateName));", span="73-74"];
m21_32 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="71-71"];
m21_92 [cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="ServerSteps.cs", label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="21-21"];
m21_389 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="542-542"];
m21_390 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="ServerSteps.cs", label="var result = new List<KeyValuePair<string, TDto>>(jobs.Count)", span="546-546"];
m21_391 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="ServerSteps.cs", label=jobs, span="548-548"];
m21_393 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="ServerSteps.cs", label="var dto = selector(job, DeserializeJob(job.InvocationData, job.Arguments), stateData)", span="551-551"];
m21_394 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="ServerSteps.cs", label="result.Add(new KeyValuePair<string, TDto>(\r\n                    job.Id.ToString(), dto))", span="553-554"];
m21_395 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="ServerSteps.cs", label="return new JobList<TDto>(result);", span="557-557"];
m21_392 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="ServerSteps.cs", label="var stateData = JobHelper.FromJson<Dictionary<string, string>>(job.StateData)", span="550-550"];
m21_396 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="542-542"];
m21_358 [cluster="TransactionScope.cstr", file="ServerSteps.cs", label="Entry TransactionScope.cstr", span=""];
m21_141 [cluster="Unk.ToArray", file="ServerSteps.cs", label="Entry Unk.ToArray", span=""];
m21_332 [cluster="System.DateTime.AddDays(double)", file="ServerSteps.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m21_210 [cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="ServerSteps.cs", label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="22-22"];
m21_350 [cluster="HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m21_125 [cluster="HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", file="ServerSteps.cs", label="Entry HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", span="7-7"];
m21_368 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="480-487"];
m21_8 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="45-46"];
m21_9 [cluster="lambda expression", file="ServerSteps.cs", label="GetNumberOfJobsByStateName(connection, ScheduledState.StateName)", span="46-46"];
m21_10 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="45-46"];
m21_16 [cluster="lambda expression", file="ServerSteps.cs", label="var queueApi = GetQueueApi(connection, queue)", span="53-53"];
m21_17 [cluster="lambda expression", file="ServerSteps.cs", label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="54-54"];
m21_15 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="51-57"];
m21_18 [cluster="lambda expression", file="ServerSteps.cs", label="return counters.EnqueuedCount ?? 0;", span="56-56"];
m21_19 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="51-57"];
m21_26 [cluster="lambda expression", file="ServerSteps.cs", label="var queueApi = GetQueueApi(connection, queue)", span="64-64"];
m21_27 [cluster="lambda expression", file="ServerSteps.cs", label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="65-65"];
m21_25 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="62-68"];
m21_28 [cluster="lambda expression", file="ServerSteps.cs", label="return counters.FetchedCount ?? 0;", span="67-67"];
m21_29 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="62-68"];
m21_33 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="73-74"];
m21_34 [cluster="lambda expression", file="ServerSteps.cs", label="GetNumberOfJobsByStateName(connection, FailedState.StateName)", span="74-74"];
m21_35 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="73-74"];
m21_39 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="79-80"];
m21_40 [cluster="lambda expression", file="ServerSteps.cs", label="GetNumberOfJobsByStateName(connection, ProcessingState.StateName)", span="80-80"];
m21_41 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="79-80"];
m21_46 [cluster="lambda expression", file="ServerSteps.cs", label="GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                })", span="85-94"];
m21_45 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="85-94"];
m21_47 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="85-94"];
m21_49 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="89-94"];
m21_50 [cluster="lambda expression", file="ServerSteps.cs", label="new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                }", span="89-94"];
m21_51 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="89-94"];
m21_59 [cluster="lambda expression", file="ServerSteps.cs", label="GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                })", span="99-108"];
m21_58 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="99-108"];
m21_60 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="99-108"];
m21_61 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="103-108"];
m21_62 [cluster="lambda expression", file="ServerSteps.cs", label="new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                }", span="103-108"];
m21_63 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="103-108"];
m21_68 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="113-114"];
m21_69 [cluster="lambda expression", file="ServerSteps.cs", label="GetTimelineStats(connection, ''succeeded'')", span="114-114"];
m21_70 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="113-114"];
m21_75 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="119-120"];
m21_76 [cluster="lambda expression", file="ServerSteps.cs", label="GetTimelineStats(connection, ''failed'')", span="120-120"];
m21_77 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="119-120"];
m21_82 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="125-147"];
m21_83 [cluster="lambda expression", file="ServerSteps.cs", label="var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList()", span="127-129"];
m21_84 [cluster="lambda expression", file="ServerSteps.cs", label="var result = new List<ServerDto>()", span="131-131"];
m21_85 [cluster="lambda expression", file="ServerSteps.cs", label=servers, span="133-133"];
m21_87 [cluster="lambda expression", file="ServerSteps.cs", label="result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    })", span="136-143"];
m21_88 [cluster="lambda expression", file="ServerSteps.cs", label="return result;", span="146-146"];
m21_86 [cluster="lambda expression", file="ServerSteps.cs", label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="135-135"];
m21_89 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="125-147"];
m21_98 [cluster="lambda expression", file="ServerSteps.cs", label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                })", span="152-165"];
m21_97 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="152-165"];
m21_99 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="152-165"];
m21_100 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="157-165"];
m21_101 [cluster="lambda expression", file="ServerSteps.cs", label="new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }", span="157-165"];
m21_102 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="157-165"];
m21_109 [cluster="lambda expression", file="ServerSteps.cs", label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                })", span="170-182"];
m21_108 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="170-182"];
m21_110 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="170-182"];
m21_111 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="175-182"];
m21_112 [cluster="lambda expression", file="ServerSteps.cs", label="new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }", span="175-182"];
m21_113 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="175-182"];
m21_120 [cluster="lambda expression", file="ServerSteps.cs", label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                })", span="187-196"];
m21_119 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="187-196"];
m21_121 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="187-196"];
m21_122 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="192-196"];
m21_123 [cluster="lambda expression", file="ServerSteps.cs", label="new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                }", span="192-196"];
m21_124 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="192-196"];
m21_129 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="201-226"];
m21_130 [cluster="lambda expression", file="ServerSteps.cs", label="var tuples = _queueProviders\r\n                    .Select(x => x.GetJobQueueMonitoringApi(connection))\r\n                    .SelectMany(x => x.GetQueues(), (monitoring, queue) => new { Monitoring = monitoring, Queue = queue })\r\n                    .OrderBy(x => x.Queue)\r\n                    .ToArray()", span="203-207"];
m21_148 [cluster="lambda expression", file="ServerSteps.cs", label="x.GetJobQueueMonitoringApi(connection)", span="204-204"];
m21_135 [cluster="lambda expression", file="ServerSteps.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = tuple.Queue,\r\n                        Length = counters.EnqueuedCount ?? 0,\r\n                        Fetched = counters.FetchedCount,\r\n                        FirstJobs = EnqueuedJobs(connection, enqueuedJobIds)\r\n                    })", span="216-222"];
m21_131 [cluster="lambda expression", file="ServerSteps.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length)", span="209-209"];
m21_147 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="204-204"];
m21_151 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="205-205"];
m21_155 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="205-205"];
m21_158 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="206-206"];
m21_132 [cluster="lambda expression", file="ServerSteps.cs", label=tuples, span="211-211"];
m21_136 [cluster="lambda expression", file="ServerSteps.cs", label="return result;", span="225-225"];
m21_133 [cluster="lambda expression", file="ServerSteps.cs", label="var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue, 0, 5)", span="213-213"];
m21_134 [cluster="lambda expression", file="ServerSteps.cs", label="var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue)", span="214-214"];
m21_137 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="201-226"];
m21_149 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="204-204"];
m21_152 [cluster="lambda expression", file="ServerSteps.cs", label="x.GetQueues()", span="205-205"];
m21_153 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="205-205"];
m21_156 [cluster="lambda expression", file="ServerSteps.cs", label="new { Monitoring = monitoring, Queue = queue }", span="205-205"];
m21_157 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="205-205"];
m21_159 [cluster="lambda expression", file="ServerSteps.cs", label="x.Queue", span="206-206"];
m21_160 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="206-206"];
m21_165 [cluster="lambda expression", file="ServerSteps.cs", label="var queueApi = GetQueueApi(connection, queue)", span="233-233"];
m21_166 [cluster="lambda expression", file="ServerSteps.cs", label="var enqueuedJobIds = queueApi.GetEnqueuedJobIds(queue, from, perPage)", span="234-234"];
m21_164 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="231-237"];
m21_167 [cluster="lambda expression", file="ServerSteps.cs", label="return EnqueuedJobs(connection, enqueuedJobIds);", span="236-236"];
m21_168 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="231-237"];
m21_175 [cluster="lambda expression", file="ServerSteps.cs", label="var queueApi = GetQueueApi(connection, queue)", span="244-244"];
m21_176 [cluster="lambda expression", file="ServerSteps.cs", label="var fetchedJobIds = queueApi.GetFetchedJobIds(queue, from, perPage)", span="245-245"];
m21_174 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="242-248"];
m21_177 [cluster="lambda expression", file="ServerSteps.cs", label="return FetchedJobs(connection, fetchedJobIds);", span="247-247"];
m21_178 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="242-248"];
m21_184 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="253-254"];
m21_185 [cluster="lambda expression", file="ServerSteps.cs", label="GetHourlyTimelineStats(connection, ''succeeded'')", span="254-254"];
m21_186 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="253-254"];
m21_191 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="259-260"];
m21_192 [cluster="lambda expression", file="ServerSteps.cs", label="GetHourlyTimelineStats(connection, ''failed'')", span="260-260"];
m21_193 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="259-260"];
m21_199 [cluster="lambda expression", file="ServerSteps.cs", label="var multi = connection.QueryMultiple(sql, new { id = jobId })", span="273-273"];
m21_197 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="265-299"];
m21_198 [cluster="lambda expression", file="ServerSteps.cs", label="string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc''", span="268-271"];
m21_200 [cluster="lambda expression", file="ServerSteps.cs", label="var job = multi.Read<SqlJob>().SingleOrDefault()", span="275-275"];
m21_203 [cluster="lambda expression", file="ServerSteps.cs", label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="278-278"];
m21_204 [cluster="lambda expression", file="ServerSteps.cs", label="var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                            })\r\n                            .ToList()", span="279-289"];
m21_201 [cluster="lambda expression", file="ServerSteps.cs", label="job == null", span="276-276"];
m21_205 [cluster="lambda expression", file="ServerSteps.cs", label="return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };", span="291-297"];
m21_202 [cluster="lambda expression", file="ServerSteps.cs", label="return null;", span="276-276"];
m21_212 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="278-278"];
m21_215 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="278-278"];
m21_218 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="282-288"];
m21_206 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="265-299"];
m21_213 [cluster="lambda expression", file="ServerSteps.cs", label="x.Name", span="278-278"];
m21_214 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="278-278"];
m21_216 [cluster="lambda expression", file="ServerSteps.cs", label="x.Value", span="278-278"];
m21_217 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="278-278"];
m21_219 [cluster="lambda expression", file="ServerSteps.cs", label="new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                            }", span="282-288"];
m21_220 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="282-288"];
m21_225 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="304-305"];
m21_226 [cluster="lambda expression", file="ServerSteps.cs", label="GetNumberOfJobsByStateName(connection, SucceededState.StateName)", span="305-305"];
m21_227 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="304-305"];
m21_231 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="310-311"];
m21_232 [cluster="lambda expression", file="ServerSteps.cs", label="GetNumberOfJobsByStateName(connection, DeletedState.StateName)", span="311-311"];
m21_233 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="310-311"];
m21_237 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="316-353"];
m21_238 [cluster="lambda expression", file="ServerSteps.cs", label="string sql = @''\r\nselect StateName as [State], count(id) as [Count] From HangFire.Job \r\ngroup by StateName\r\nhaving StateName is not null;\r\nselect count(Id) from HangFire.Server;\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:succeeded';\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:deleted';\r\nselect count(*) from HangFire.[Set] where [Key] = N'recurring-jobs';\r\n''", span="318-326"];
m21_240 [cluster="lambda expression", file="ServerSteps.cs", label="var multi = connection.QueryMultiple(sql)", span="329-329"];
m21_251 [cluster="lambda expression", file="ServerSteps.cs", label="stats.Queues = _queueProviders\r\n                    .SelectMany(x => x.GetJobQueueMonitoringApi(connection).GetQueues())\r\n                    .Count()", span="348-350"];
m21_271 [cluster="lambda expression", file="ServerSteps.cs", label="x.GetJobQueueMonitoringApi(connection).GetQueues()", span="349-349"];
m21_239 [cluster="lambda expression", file="ServerSteps.cs", label="var stats = new StatisticsDto()", span="328-328"];
m21_243 [cluster="lambda expression", file="ServerSteps.cs", label="stats.Enqueued = getCountIfExists(EnqueuedState.StateName)", span="335-335"];
m21_244 [cluster="lambda expression", file="ServerSteps.cs", label="stats.Failed = getCountIfExists(FailedState.StateName)", span="336-336"];
m21_245 [cluster="lambda expression", file="ServerSteps.cs", label="stats.Processing = getCountIfExists(ProcessingState.StateName)", span="337-337"];
m21_246 [cluster="lambda expression", file="ServerSteps.cs", label="stats.Scheduled = getCountIfExists(ScheduledState.StateName)", span="338-338"];
m21_247 [cluster="lambda expression", file="ServerSteps.cs", label="stats.Servers = multi.Read<int>().Single()", span="340-340"];
m21_248 [cluster="lambda expression", file="ServerSteps.cs", label="stats.Succeeded = multi.Read<int?>().SingleOrDefault() ?? 0", span="342-342"];
m21_249 [cluster="lambda expression", file="ServerSteps.cs", label="stats.Deleted = multi.Read<int?>().SingleOrDefault() ?? 0", span="343-343"];
m21_250 [cluster="lambda expression", file="ServerSteps.cs", label="stats.Recurring = multi.Read<int>().Single()", span="345-345"];
m21_252 [cluster="lambda expression", file="ServerSteps.cs", label="return stats;", span="352-352"];
m21_241 [cluster="lambda expression", file="ServerSteps.cs", label="var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count)", span="331-331"];
m21_242 [cluster="lambda expression", file="ServerSteps.cs", label="Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0", span="333-333"];
m21_260 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="331-331"];
m21_263 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="331-331"];
m21_267 [cluster="lambda expression", file="ServerSteps.cs", label="countByStates.ContainsKey(name) ? countByStates[name] : 0", span="333-333"];
m21_270 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="349-349"];
m21_253 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="316-353"];
m21_261 [cluster="lambda expression", file="ServerSteps.cs", label="x.State", span="331-331"];
m21_262 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="331-331"];
m21_264 [cluster="lambda expression", file="ServerSteps.cs", label="x.Count", span="331-331"];
m21_265 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="331-331"];
m21_266 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="333-333"];
m21_268 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="333-333"];
m21_272 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="349-349"];
m21_301 [cluster="lambda expression", file="ServerSteps.cs", label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="368-368"];
m21_300 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="368-368"];
m21_305 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="378-378"];
m21_308 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="378-378"];
m21_302 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="368-368"];
m21_306 [cluster="lambda expression", file="ServerSteps.cs", label="(string)x.Key", span="378-378"];
m21_307 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="378-378"];
m21_309 [cluster="lambda expression", file="ServerSteps.cs", label="(long)x.Count", span="378-378"];
m21_310 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="378-378"];
m21_337 [cluster="lambda expression", file="ServerSteps.cs", label="String.Format(''stats:{0}:{1}'', type, x)", span="410-410"];
m21_333 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="409-409"];
m21_336 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="410-410"];
m21_340 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="420-420"];
m21_343 [cluster="lambda expression", file="ServerSteps.cs", label="Entry lambda expression", span="420-420"];
m21_334 [cluster="lambda expression", file="ServerSteps.cs", label="x.ToString(''yyyy-MM-dd'')", span="409-409"];
m21_335 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="409-409"];
m21_338 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="410-410"];
m21_341 [cluster="lambda expression", file="ServerSteps.cs", label="(string)x.Key", span="420-420"];
m21_342 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="420-420"];
m21_344 [cluster="lambda expression", file="ServerSteps.cs", label="(long)x.Count", span="420-420"];
m21_345 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="420-420"];
m21_369 [cluster="lambda expression", file="ServerSteps.cs", label="new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                }", span="480-487"];
m21_370 [cluster="lambda expression", file="ServerSteps.cs", label="Exit lambda expression", span="480-487"];
m21_180 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="560-560"];
m21_402 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="ServerSteps.cs", label="string fetchedJobsSql = @''\r\nselect j.*, jq.FetchedAt, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is not null''", span="564-569"];
m21_403 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="ServerSteps.cs", label="var jobs = connection.Query<SqlJob>(\r\n                fetchedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="571-574"];
m21_404 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="ServerSteps.cs", label="var result = new List<KeyValuePair<string, FetchedJobDto>>(jobs.Count)", span="576-576"];
m21_405 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="ServerSteps.cs", label=jobs, span="578-578"];
m21_406 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="ServerSteps.cs", label="result.Add(new KeyValuePair<string, FetchedJobDto>(\r\n                    job.Id.ToString(),\r\n                    new FetchedJobDto\r\n                    {\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        State = job.StateName,\r\n                        FetchedAt = job.FetchedAt\r\n                    }))", span="580-587"];
m21_407 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="ServerSteps.cs", label="return new JobList<FetchedJobDto>(result);", span="590-590"];
m21_408 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="560-560"];
m21_145 [cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="ServerSteps.cs", label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="18-18"];
m21_93 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ServerSteps.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m21_90 [cluster="Unk.ToList", file="ServerSteps.cs", label="Entry Unk.ToList", span=""];
m21_54 [cluster="HangFire.Common.JobHelper.DeserializeDateTime(string)", file="ServerSteps.cs", label="Entry HangFire.Common.JobHelper.DeserializeDateTime(string)", span="56-56"];
m21_339 [cluster="Unk.Format", file="ServerSteps.cs", label="Entry Unk.Format", span=""];
m21_412 [cluster="HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="ServerSteps.cs", label="Entry HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21"];
m21_303 [cluster="System.DateTime.ToString(string)", file="ServerSteps.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m21_171 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="240-240"];
m21_172 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="ServerSteps.cs", label="return UseConnection(connection =>\r\n            {\r\n                var queueApi = GetQueueApi(connection, queue);\r\n                var fetchedJobIds = queueApi.GetFetchedJobIds(queue, from, perPage);\r\n\r\n                return FetchedJobs(connection, fetchedJobIds);\r\n            });", span="242-248"];
m21_173 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="240-240"];
m21_142 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="ServerSteps.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m21_299 [cluster="Unk.ElementAt", file="ServerSteps.cs", label="Entry Unk.ElementAt", span=""];
m21_410 [cluster="KeyValuePair<string, FetchedJobDto>.cstr", file="ServerSteps.cs", label="Entry KeyValuePair<string, FetchedJobDto>.cstr", span=""];
m21_296 [cluster="Unk.Query", file="ServerSteps.cs", label="Entry Unk.Query", span=""];
m21_42 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="83-83"];
m21_43 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="ServerSteps.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                }));", span="85-94"];
m21_44 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="83-83"];
m21_297 [cluster="Unk.Add", file="ServerSteps.cs", label="Entry Unk.Add", span=""];
m21_362 [cluster="Unk.Complete", file="ServerSteps.cs", label="Entry Unk.Complete", span=""];
m21_359 [cluster="TransactionOptions.cstr", file="ServerSteps.cs", label="Entry TransactionOptions.cstr", span=""];
m21_409 [cluster="List<KeyValuePair<string, FetchedJobDto>>.cstr", file="ServerSteps.cs", label="Entry List<KeyValuePair<string, FetchedJobDto>>.cstr", span=""];
m21_20 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", span="437-437"];
m21_346 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", file="ServerSteps.cs", label="var provider = _queueProviders.GetProvider(queueName)", span="441-441"];
m21_347 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", file="ServerSteps.cs", label="var monitoringApi = provider.GetJobQueueMonitoringApi(connection)", span="442-442"];
m21_348 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", file="ServerSteps.cs", label="return monitoringApi;", span="444-444"];
m21_349 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", span="437-437"];
m21_295 [cluster="System.DateTime.AddHours(double)", file="ServerSteps.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m21_4 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="43-43"];
m21_5 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="ServerSteps.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ScheduledState.StateName));", span="45-46"];
m21_6 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="43-43"];
m21_207 [cluster="Unk.QueryMultiple", file="ServerSteps.cs", label="Entry Unk.QueryMultiple", span=""];
m21_114 [cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="ServerSteps.cs", label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="23-23"];
m21_55 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="97-97"];
m21_56 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="ServerSteps.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                }));", span="99-108"];
m21_57 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="97-97"];
m21_228 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="308-308"];
m21_229 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="ServerSteps.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, DeletedState.StateName));", span="310-311"];
m21_230 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="308-308"];
m21_161 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="229-229"];
m21_162 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="ServerSteps.cs", label="return UseConnection(connection =>\r\n            {\r\n                var queueApi = GetQueueApi(connection, queue);\r\n                var enqueuedJobIds = queueApi.GetEnqueuedJobIds(queue, from, perPage);\r\n\r\n                return EnqueuedJobs(connection, enqueuedJobIds);\r\n            });", span="231-237"];
m21_163 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="229-229"];
m21_78 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="123-123"];
m21_79 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="ServerSteps.cs", label="return UseConnection<IList<ServerDto>>(connection =>\r\n            {\r\n                var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList();\r\n\r\n                var result = new List<ServerDto>();\r\n\r\n                foreach (var server in servers)\r\n                {\r\n                    var data = JobHelper.FromJson<ServerData>(server.Data);\r\n                    result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", span="125-147"];
m21_80 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="123-123"];
m21_139 [cluster="Unk.SelectMany", file="ServerSteps.cs", label="Entry Unk.SelectMany", span=""];
m21_209 [cluster="Unk.ToDictionary", file="ServerSteps.cs", label="Entry Unk.ToDictionary", span=""];
m21_222 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="302-302"];
m21_223 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="ServerSteps.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, SucceededState.StateName));", span="304-305"];
m21_224 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="302-302"];
m21_376 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="503-503"];
m21_377 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="ServerSteps.cs", label="var data = JobHelper.FromJson<InvocationData>(invocationData)", span="505-505"];
m21_378 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="ServerSteps.cs", label="data.Arguments = arguments", span="506-506"];
m21_379 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="ServerSteps.cs", label="return data.Deserialize();", span="510-510"];
m21_380 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="ServerSteps.cs", label=JobLoadException, span="512-512"];
m21_381 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="ServerSteps.cs", label="return null;", span="514-514"];
m21_382 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="503-503"];
m21_371 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="ServerSteps.cs", label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="23-23"];
m21_103 [cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="ServerSteps.cs", label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="23-23"];
m21_21 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="25-25"];
m21_81 [cluster="Unk.>", file="ServerSteps.cs", label="Entry Unk.>", span=""];
m21_143 [cluster="Unk.GetEnqueuedJobIds", file="ServerSteps.cs", label="Entry Unk.GetEnqueuedJobIds", span=""];
m21_140 [cluster="Unk.OrderBy", file="ServerSteps.cs", label="Entry Unk.OrderBy", span=""];
m21_144 [cluster="Unk.GetEnqueuedAndFetchedCount", file="ServerSteps.cs", label="Entry Unk.GetEnqueuedAndFetchedCount", span=""];
m21_11 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", span="490-490"];
m21_372 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="ServerSteps.cs", label="string sqlQuery = @''\r\nselect count(Id) from HangFire.Job where StateName = @state''", span="492-493"];
m21_373 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="ServerSteps.cs", label="var count = connection.Query<int>(\r\n                 sqlQuery,\r\n                 new { state = stateName })\r\n                 .Single()", span="495-498"];
m21_374 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="ServerSteps.cs", label="return count;", span="500-500"];
m21_375 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", span="490-490"];
m21_154 [cluster="Unk.GetQueues", file="ServerSteps.cs", label="Entry Unk.GetQueues", span=""];
m21_298 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ServerSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m21_401 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="ServerSteps.cs", label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="22-22"];
m21_116 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="185-185"];
m21_117 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="ServerSteps.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                }));", span="187-196"];
m21_118 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="185-185"];
m21_12 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="49-49"];
m21_13 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="ServerSteps.cs", label="return UseConnection(connection =>\r\n            {\r\n                var queueApi = GetQueueApi(connection, queue);\r\n                var counters = queueApi.GetEnqueuedAndFetchedCount(queue);\r\n\r\n                return counters.EnqueuedCount ?? 0;\r\n            });", span="51-57"];
m21_14 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="49-49"];
m21_170 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="462-462"];
m21_363 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="ServerSteps.cs", label="string enqueuedJobsSql = @''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is null''", span="466-471"];
m21_364 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="ServerSteps.cs", label="var jobs = connection.Query<SqlJob>(\r\n                enqueuedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="473-476"];
m21_365 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="ServerSteps.cs", label="return DeserializeJobs(\r\n                jobs,\r\n                (sqlJob, job, stateData) => new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                });", span="478-487"];
m21_366 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="462-462"];
m21_188 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="257-257"];
m21_189 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="ServerSteps.cs", label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''failed''));", span="259-260"];
m21_190 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="257-257"];
m21_169 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="23-23"];
m21_259 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="ServerSteps.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m21_138 [cluster="Unk.Select", file="ServerSteps.cs", label="Entry Unk.Select", span=""];
m21_150 [cluster="Unk.GetJobQueueMonitoringApi", file="ServerSteps.cs", label="Entry Unk.GetJobQueueMonitoringApi", span=""];
m21_221 [cluster="HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="ServerSteps.cs", label="Entry HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21"];
m21_397 [cluster="System.Collections.Generic.List<T>.List(int)", file="ServerSteps.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m21_257 [cluster="Unk.Single", file="ServerSteps.cs", label="Entry Unk.Single", span=""];
m21_71 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", span="395-395"];
m21_311 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="var endDate = DateTime.UtcNow.Date", span="399-399"];
m21_318 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="var keys = stringDates.Select(x => String.Format(''stats:{0}:{1}'', type, x)).ToList()", span="410-410"];
m21_320 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="var valuesMap = connection.Query(\r\n                sqlQuery,\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="417-420"];
m21_312 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="var startDate = endDate.AddDays(-7)", span="400-400"];
m21_314 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="startDate <= endDate", span="403-403"];
m21_315 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="dates.Add(endDate)", span="405-405"];
m21_316 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="endDate = endDate.AddDays(-1)", span="406-406"];
m21_313 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="var dates = new List<DateTime>()", span="401-401"];
m21_317 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="409-409"];
m21_328 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="result.Add(dates[i], value)", span="431-431"];
m21_326 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="i < stringDates.Count", span="428-428"];
m21_319 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="412-415"];
m21_321 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label=keys, span="422-422"];
m21_322 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="!valuesMap.ContainsKey(key)", span="424-424"];
m21_323 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="valuesMap.Add(key, 0)", span="424-424"];
m21_327 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="430-430"];
m21_324 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="var result = new Dictionary<DateTime, long>()", span="427-427"];
m21_325 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="var i = 0", span="428-428"];
m21_330 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="return result;", span="434-434"];
m21_329 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="i++", span="428-428"];
m21_331 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", span="395-395"];
m21_126 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="199-199"];
m21_127 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="ServerSteps.cs", label="return UseConnection<IList<QueueWithTopEnqueuedJobsDto>>(connection =>\r\n            {\r\n                var tuples = _queueProviders\r\n                    .Select(x => x.GetJobQueueMonitoringApi(connection))\r\n                    .SelectMany(x => x.GetQueues(), (monitoring, queue) => new { Monitoring = monitoring, Queue = queue })\r\n                    .OrderBy(x => x.Queue)\r\n                    .ToArray();\r\n\r\n                var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length);\r\n\r\n                foreach (var tuple in tuples)\r\n                {\r\n                    var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue, 0, 5);\r\n                    var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue);\r\n\r\n                    result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = tuple.Queue,\r\n                        Length = counters.EnqueuedCount ?? 0,\r\n                        Fetched = counters.FetchedCount,\r\n                        FirstJobs = EnqueuedJobs(connection, enqueuedJobIds)\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", span="201-226"];
m21_128 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="199-199"];
m21_187 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="356-356"];
m21_274 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="var endDate = DateTime.UtcNow", span="360-360"];
m21_281 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="var keys = dates.Select(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="368-368"];
m21_283 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="var valuesMap = connection.Query(\r\n                sqlQuery,\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="375-378"];
m21_275 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="var dates = new List<DateTime>()", span="361-361"];
m21_278 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="dates.Add(endDate)", span="364-364"];
m21_279 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="endDate = endDate.AddHours(-1)", span="365-365"];
m21_276 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="var i = 0", span="362-362"];
m21_289 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="i < dates.Count", span="386-386"];
m21_291 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="result.Add(dates[i], value)", span="389-389"];
m21_277 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="i < 24", span="362-362"];
m21_280 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="i++", span="362-362"];
m21_282 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="370-373"];
m21_284 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label=keys, span="380-380"];
m21_285 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="!valuesMap.ContainsKey(key)", span="382-382"];
m21_286 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="valuesMap.Add(key, 0)", span="382-382"];
m21_290 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="388-388"];
m21_287 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="var result = new Dictionary<DateTime, long>()", span="385-385"];
m21_288 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="var i = 0", span="386-386"];
m21_293 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="return result;", span="392-392"];
m21_292 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="i++", span="386-386"];
m21_294 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="ServerSteps.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="356-356"];
m21_208 [cluster="Unk.SingleOrDefault", file="ServerSteps.cs", label="Entry Unk.SingleOrDefault", span=""];
m21_211 [cluster="Unk.DeserializeJob", file="ServerSteps.cs", label="Entry Unk.DeserializeJob", span=""];
m21_413 [file="ServerSteps.cs", label="HangFire.SqlServer.SqlServerMonitoringApi", span=""];
m21_414 [file="ServerSteps.cs", label=string, span=""];
m21_415 [file="ServerSteps.cs", label=string, span=""];
m21_416 [file="ServerSteps.cs", label=int, span=""];
m21_417 [file="ServerSteps.cs", label=int, span=""];
m21_418 [file="ServerSteps.cs", label=int, span=""];
m21_419 [file="ServerSteps.cs", label=int, span=""];
m21_420 [file="ServerSteps.cs", label=int, span=""];
m21_421 [file="ServerSteps.cs", label=int, span=""];
m21_422 [file="ServerSteps.cs", label=int, span=""];
m21_423 [file="ServerSteps.cs", label=int, span=""];
m21_424 [file="ServerSteps.cs", label=int, span=""];
m21_425 [file="ServerSteps.cs", label=int, span=""];
m21_426 [file="ServerSteps.cs", label=SqlConnection, span=""];
m21_427 [file="ServerSteps.cs", label=string, span=""];
m21_428 [file="ServerSteps.cs", label=int, span=""];
m21_429 [file="ServerSteps.cs", label=int, span=""];
m21_430 [file="ServerSteps.cs", label=string, span=""];
m21_431 [file="ServerSteps.cs", label=int, span=""];
m21_432 [file="ServerSteps.cs", label=int, span=""];
m21_433 [file="ServerSteps.cs", label=string, span=""];
m21_434 [file="ServerSteps.cs", label=countByStates, span=""];
m21_435 [file="ServerSteps.cs", label=SqlConnection, span=""];
m21_436 [file="ServerSteps.cs", label=string, span=""];
m21_437 [file="ServerSteps.cs", label=string, span=""];
m22_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ServerWatchdog.feature.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m22_150 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="ServerWatchdog.feature.cs", label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="277-277"];
m22_151 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="ServerWatchdog.feature.cs", label="serverId == null", span="279-279"];
m22_153 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="ServerWatchdog.feature.cs", label="context == null", span="280-280"];
m22_155 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="ServerWatchdog.feature.cs", label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="282-287"];
m22_156 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="ServerWatchdog.feature.cs", label="_connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat ''\r\n                + @''when not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow })", span="289-295"];
m22_152 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="ServerWatchdog.feature.cs", label="throw new ArgumentNullException(''serverId'');", span="279-279"];
m22_154 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="ServerWatchdog.feature.cs", label="throw new ArgumentNullException(''context'');", span="280-280"];
m22_157 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="ServerWatchdog.feature.cs", label="Exit HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="277-277"];
m22_102 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ServerWatchdog.feature.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="209-209"];
m22_103 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ServerWatchdog.feature.cs", label="id == null", span="211-211"];
m22_105 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ServerWatchdog.feature.cs", label="name == null", span="212-212"];
m22_107 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ServerWatchdog.feature.cs", label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="214-217"];
m22_104 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ServerWatchdog.feature.cs", label="throw new ArgumentNullException(''id'');", span="211-211"];
m22_106 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ServerWatchdog.feature.cs", label="throw new ArgumentNullException(''name'');", span="212-212"];
m22_108 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ServerWatchdog.feature.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="209-209"];
m22_124 [cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerWatchdog.feature.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="242-242"];
m22_125 [cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerWatchdog.feature.cs", label="key == null", span="244-244"];
m22_127 [cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerWatchdog.feature.cs", label="keyValuePairs == null", span="245-245"];
m22_131 [cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerWatchdog.feature.cs", label=keyValuePairs, span="256-256"];
m22_132 [cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerWatchdog.feature.cs", label="_connection.Execute(sql, new { key = key, field = keyValuePair.Key, value = keyValuePair.Value })", span="258-258"];
m22_126 [cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerWatchdog.feature.cs", label="throw new ArgumentNullException(''key'');", span="244-244"];
m22_128 [cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerWatchdog.feature.cs", label="throw new ArgumentNullException(''keyValuePairs'');", span="245-245"];
m22_129 [cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerWatchdog.feature.cs", label="string sql = @''\r\nmerge HangFire.Hash as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="247-252"];
m22_130 [cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerWatchdog.feature.cs", label="var transaction = new TransactionScope()", span="254-254"];
m22_133 [cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerWatchdog.feature.cs", label="transaction.Complete()", span="261-261"];
m22_134 [cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerWatchdog.feature.cs", label="Exit HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="242-242"];
m22_158 [cluster="HangFire.SqlServer.Entities.ServerData.ServerData()", file="ServerWatchdog.feature.cs", label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="20-20"];
m22_85 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="ServerWatchdog.feature.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetStateData(string)", span="171-171"];
m22_86 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="ServerWatchdog.feature.cs", label="jobId == null", span="173-173"];
m22_89 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="ServerWatchdog.feature.cs", label="var sqlState = _connection.Query<SqlState>(sql, new { jobId = jobId }).SingleOrDefault()", span="181-181"];
m22_87 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="ServerWatchdog.feature.cs", label="throw new ArgumentNullException(''jobId'');", span="173-173"];
m22_88 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="ServerWatchdog.feature.cs", label="string sql = @''\r\nselect s.Name, s.Reason, s.Data\r\nfrom HangFire.State s\r\ninner join HangFire.Job j on j.StateId = s.Id\r\nwhere j.Id = @jobId''", span="175-179"];
m22_90 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="ServerWatchdog.feature.cs", label="sqlState == null", span="182-182"];
m22_92 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="ServerWatchdog.feature.cs", label="return new StateData\r\n            {\r\n                Name = sqlState.Name,\r\n                Reason = sqlState.Reason,\r\n                Data = JobHelper.FromJson<Dictionary<string, string>>(sqlState.Data)\r\n            };", span="187-192"];
m22_91 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="ServerWatchdog.feature.cs", label="return null;", span="184-184"];
m22_93 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="ServerWatchdog.feature.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetStateData(string)", span="171-171"];
m22_143 [cluster="Unk.ToDictionary", file="ServerWatchdog.feature.cs", label="Entry Unk.ToDictionary", span=""];
m22_21 [cluster="string.Format(string, object)", file="ServerWatchdog.feature.cs", label="Entry string.Format(string, object)", span="0-0"];
m22_17 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="ServerWatchdog.feature.cs", label="Entry HangFire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="56-56"];
m22_18 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="ServerWatchdog.feature.cs", label="return new SqlServerDistributedLock(\r\n                String.Format(''HangFire:{0}'', resource),\r\n                timeout,\r\n                _connection);", span="58-61"];
m22_19 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="ServerWatchdog.feature.cs", label="Exit HangFire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="56-56"];
m22_176 [cluster="System.TimeSpan.Negate()", file="ServerWatchdog.feature.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m22_62 [cluster="Unk.>", file="ServerWatchdog.feature.cs", label="Entry Unk.>", span=""];
m22_66 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="ServerWatchdog.feature.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="134-134"];
m22_67 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="ServerWatchdog.feature.cs", label="id == null", span="136-136"];
m22_70 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="ServerWatchdog.feature.cs", label="var jobData = _connection.Query<SqlJob>(sql, new { id = id })\r\n                .SingleOrDefault()", span="141-142"];
m22_68 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="ServerWatchdog.feature.cs", label="throw new ArgumentNullException(''id'');", span="136-136"];
m22_69 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="ServerWatchdog.feature.cs", label="string sql = \r\n                @''select InvocationData, StateName, Arguments, CreatedAt from HangFire.Job where id = @id''", span="138-139"];
m22_71 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="ServerWatchdog.feature.cs", label="jobData == null", span="144-144"];
m22_73 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="ServerWatchdog.feature.cs", label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="147-147"];
m22_74 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="ServerWatchdog.feature.cs", label="invocationData.Arguments = jobData.Arguments", span="148-148"];
m22_80 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="ServerWatchdog.feature.cs", label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = jobData.StateName,\r\n                CreatedAt = jobData.CreatedAt,\r\n                LoadException = loadException\r\n            };", span="162-168"];
m22_72 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="ServerWatchdog.feature.cs", label="return null;", span="144-144"];
m22_77 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="ServerWatchdog.feature.cs", label="job = invocationData.Deserialize()", span="155-155"];
m22_75 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="ServerWatchdog.feature.cs", label="Job job = null", span="150-150"];
m22_76 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="ServerWatchdog.feature.cs", label="JobLoadException loadException = null", span="151-151"];
m22_78 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="ServerWatchdog.feature.cs", label=JobLoadException, span="157-157"];
m22_79 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="ServerWatchdog.feature.cs", label="loadException = ex", span="159-159"];
m22_81 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="ServerWatchdog.feature.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="134-134"];
m22_13 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="ServerWatchdog.feature.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="51-51"];
m22_14 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="ServerWatchdog.feature.cs", label="return new SqlServerWriteOnlyTransaction(_connection, _queueProviders);", span="53-53"];
m22_15 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="ServerWatchdog.feature.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="51-51"];
m22_16 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="ServerWatchdog.feature.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35"];
m22_123 [cluster="System.ArgumentException.ArgumentException(string)", file="ServerWatchdog.feature.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m22_35 [cluster="string.Join(string, params string[])", file="ServerWatchdog.feature.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m22_135 [cluster="TransactionScope.cstr", file="ServerWatchdog.feature.cs", label="Entry TransactionScope.cstr", span=""];
m22_33 [cluster="Unk.ToArray", file="ServerWatchdog.feature.cs", label="Entry Unk.ToArray", span=""];
m22_20 [cluster="SqlServerDistributedLock.cstr", file="ServerWatchdog.feature.cs", label="Entry SqlServerDistributedLock.cstr", span=""];
m22_64 [cluster="Unk.ToString", file="ServerWatchdog.feature.cs", label="Entry Unk.ToString", span=""];
m22_61 [cluster="System.DateTime.Add(System.TimeSpan)", file="ServerWatchdog.feature.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m22_136 [cluster="Unk.Complete", file="ServerWatchdog.feature.cs", label="Entry Unk.Complete", span=""];
m22_94 [cluster="HangFire.Storage.StateData.StateData()", file="ServerWatchdog.feature.cs", label="Entry HangFire.Storage.StateData.StateData()", span="21-21"];
m22_22 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ServerWatchdog.feature.cs", label="Entry HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="64-64"];
m22_23 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ServerWatchdog.feature.cs", label="queues == null || queues.Length == 0", span="66-66"];
m22_25 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ServerWatchdog.feature.cs", label="var providers = queues\r\n                .Select(queue => _queueProviders.GetProvider(queue))\r\n                .Distinct()\r\n                .ToArray()", span="68-71"];
m22_27 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ServerWatchdog.feature.cs", label="throw new InvalidOperationException(String.Format(\r\n                    ''Multiple provider instances registered for queues: {0}. You should choose only one type of persistent queues per server instance.'',\r\n                    String.Join('', '', queues)));", span="75-77"];
m22_29 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ServerWatchdog.feature.cs", label="return persistentQueue.Dequeue(queues, cancellationToken);", span="81-81"];
m22_24 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ServerWatchdog.feature.cs", label="throw new ArgumentNullException(''queues'');", span="66-66"];
m22_26 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ServerWatchdog.feature.cs", label="providers.Length != 1", span="73-73"];
m22_28 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ServerWatchdog.feature.cs", label="var persistentQueue = providers[0].GetJobQueue(_connection)", span="80-80"];
m22_30 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ServerWatchdog.feature.cs", label="Exit HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="64-64"];
m22_169 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="ServerWatchdog.feature.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="316-316"];
m22_170 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="ServerWatchdog.feature.cs", label="timeOut.Duration() != timeOut", span="318-318"];
m22_171 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="ServerWatchdog.feature.cs", label="throw new ArgumentException(''The `timeOut` value must be positive.'', ''timeOut'');", span="320-320"];
m22_172 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="ServerWatchdog.feature.cs", label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="323-325"];
m22_173 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="ServerWatchdog.feature.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="316-316"];
m22_12 [cluster="Unk.Dispose", file="ServerWatchdog.feature.cs", label="Entry Unk.Dispose", span=""];
m22_109 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="ServerWatchdog.feature.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="220-220"];
m22_110 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="ServerWatchdog.feature.cs", label="key == null", span="222-222"];
m22_112 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="ServerWatchdog.feature.cs", label="var result = _connection.Query<string>(\r\n                @''select Value from HangFire.[Set] where [Key] = @key'',\r\n                new { key })", span="224-226"];
m22_111 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="ServerWatchdog.feature.cs", label="throw new ArgumentNullException(''key'');", span="222-222"];
m22_113 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="ServerWatchdog.feature.cs", label="return new HashSet<string>(result);", span="228-228"];
m22_114 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="ServerWatchdog.feature.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="220-220"];
m22_174 [cluster="System.TimeSpan.Duration()", file="ServerWatchdog.feature.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m22_41 [cluster="HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="ServerWatchdog.feature.cs", label="Entry HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m22_42 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ServerWatchdog.feature.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="84-84"];
m22_43 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ServerWatchdog.feature.cs", label="job == null", span="90-90"];
m22_45 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ServerWatchdog.feature.cs", label="parameters == null", span="91-91"];
m22_48 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ServerWatchdog.feature.cs", label="var invocationData = InvocationData.Serialize(job)", span="98-98"];
m22_49 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ServerWatchdog.feature.cs", label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = invocationData.Arguments,\r\n                    createdAt = createdAt,\r\n                    expireAt = createdAt.Add(expireIn)\r\n                }).Single().ToString()", span="100-108"];
m22_50 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ServerWatchdog.feature.cs", label="parameters.Count > 0", span="110-110"];
m22_51 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ServerWatchdog.feature.cs", label="var parameterArray = new object[parameters.Count]", span="112-112"];
m22_53 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ServerWatchdog.feature.cs", label=parameters, span="114-114"];
m22_44 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ServerWatchdog.feature.cs", label="throw new ArgumentNullException(''job'');", span="90-90"];
m22_46 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ServerWatchdog.feature.cs", label="throw new ArgumentNullException(''parameters'');", span="91-91"];
m22_47 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ServerWatchdog.feature.cs", label="string createJobSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="93-96"];
m22_54 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ServerWatchdog.feature.cs", label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="116-121"];
m22_57 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ServerWatchdog.feature.cs", label="return jobId;", span="131-131"];
m22_52 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ServerWatchdog.feature.cs", label="int parameterIndex = 0", span="113-113"];
m22_56 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ServerWatchdog.feature.cs", label="_connection.Execute(insertParameterSql, parameterArray)", span="128-128"];
m22_55 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ServerWatchdog.feature.cs", label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="124-126"];
m22_58 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ServerWatchdog.feature.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="84-84"];
m22_9 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="ServerWatchdog.feature.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Dispose()", span="46-46"];
m22_10 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="ServerWatchdog.feature.cs", label="_connection.Dispose()", span="48-48"];
m22_11 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="ServerWatchdog.feature.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Dispose()", span="46-46"];
m22_37 [cluster="Unk.Dequeue", file="ServerWatchdog.feature.cs", label="Entry Unk.Dequeue", span=""];
m22_32 [cluster="Unk.Distinct", file="ServerWatchdog.feature.cs", label="Entry Unk.Distinct", span=""];
m22_147 [cluster="lambda expression", file="ServerWatchdog.feature.cs", label="Entry lambda expression", span="272-272"];
m22_38 [cluster="lambda expression", file="ServerWatchdog.feature.cs", label="Entry lambda expression", span="69-69"];
m22_39 [cluster="lambda expression", file="ServerWatchdog.feature.cs", label="_queueProviders.GetProvider(queue)", span="69-69"];
m22_40 [cluster="lambda expression", file="ServerWatchdog.feature.cs", label="Exit lambda expression", span="69-69"];
m22_144 [cluster="lambda expression", file="ServerWatchdog.feature.cs", label="Entry lambda expression", span="272-272"];
m22_145 [cluster="lambda expression", file="ServerWatchdog.feature.cs", label="x.Field", span="272-272"];
m22_146 [cluster="lambda expression", file="ServerWatchdog.feature.cs", label="Exit lambda expression", span="272-272"];
m22_148 [cluster="lambda expression", file="ServerWatchdog.feature.cs", label="x.Value", span="272-272"];
m22_149 [cluster="lambda expression", file="ServerWatchdog.feature.cs", label="Exit lambda expression", span="272-272"];
m22_95 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ServerWatchdog.feature.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="195-195"];
m22_96 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ServerWatchdog.feature.cs", label="id == null", span="197-197"];
m22_98 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ServerWatchdog.feature.cs", label="name == null", span="198-198"];
m22_100 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ServerWatchdog.feature.cs", label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="200-206"];
m22_97 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ServerWatchdog.feature.cs", label="throw new ArgumentNullException(''id'');", span="197-197"];
m22_99 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ServerWatchdog.feature.cs", label="throw new ArgumentNullException(''name'');", span="198-198"];
m22_101 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ServerWatchdog.feature.cs", label="Exit HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="195-195"];
m22_31 [cluster="Unk.Select", file="ServerWatchdog.feature.cs", label="Entry Unk.Select", span=""];
m22_116 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ServerWatchdog.feature.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="231-231"];
m22_117 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ServerWatchdog.feature.cs", label="key == null", span="233-233"];
m22_119 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ServerWatchdog.feature.cs", label="toScore < fromScore", span="234-234"];
m22_121 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ServerWatchdog.feature.cs", label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="236-239"];
m22_118 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ServerWatchdog.feature.cs", label="throw new ArgumentNullException(''key'');", span="233-233"];
m22_120 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ServerWatchdog.feature.cs", label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="234-234"];
m22_122 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ServerWatchdog.feature.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="231-231"];
m22_60 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="ServerWatchdog.feature.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="24-24"];
m22_63 [cluster="Unk.Single", file="ServerWatchdog.feature.cs", label="Entry Unk.Single", span=""];
m22_175 [cluster="System.ArgumentException.ArgumentException(string, string)", file="ServerWatchdog.feature.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m22_84 [cluster="HangFire.Storage.JobData.JobData()", file="ServerWatchdog.feature.cs", label="Entry HangFire.Storage.JobData.JobData()", span="21-21"];
m22_65 [cluster="Unk.Execute", file="ServerWatchdog.feature.cs", label="Entry Unk.Execute", span=""];
m22_83 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="ServerWatchdog.feature.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m22_36 [cluster="Unk.GetJobQueue", file="ServerWatchdog.feature.cs", label="Entry Unk.GetJobQueue", span=""];
m22_137 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="ServerWatchdog.feature.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="265-265"];
m22_138 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="ServerWatchdog.feature.cs", label="key == null", span="267-267"];
m22_140 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="ServerWatchdog.feature.cs", label="var result = _connection.Query<SqlHash>(\r\n                ''select Field, Value from HangFire.Hash where [Key] = @key'',\r\n                new { key })\r\n                .ToDictionary(x => x.Field, x => x.Value)", span="269-272"];
m22_139 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="ServerWatchdog.feature.cs", label="throw new ArgumentNullException(''key'');", span="267-267"];
m22_141 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="ServerWatchdog.feature.cs", label="return result.Count != 0 ? result : null;", span="274-274"];
m22_142 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="ServerWatchdog.feature.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="265-265"];
m22_115 [cluster="HashSet<string>.cstr", file="ServerWatchdog.feature.cs", label="Entry HashSet<string>.cstr", span=""];
m22_159 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="ServerWatchdog.feature.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="298-298"];
m22_160 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="ServerWatchdog.feature.cs", label="serverId == null", span="300-300"];
m22_162 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="ServerWatchdog.feature.cs", label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="302-304"];
m22_161 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="ServerWatchdog.feature.cs", label="throw new ArgumentNullException(''serverId'');", span="300-300"];
m22_163 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="ServerWatchdog.feature.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="298-298"];
m22_164 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="ServerWatchdog.feature.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="307-307"];
m22_165 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="ServerWatchdog.feature.cs", label="serverId == null", span="309-309"];
m22_167 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="ServerWatchdog.feature.cs", label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="311-313"];
m22_166 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="ServerWatchdog.feature.cs", label="throw new ArgumentNullException(''serverId'');", span="309-309"];
m22_168 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="ServerWatchdog.feature.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="307-307"];
m22_82 [cluster="Unk.SingleOrDefault", file="ServerWatchdog.feature.cs", label="Entry Unk.SingleOrDefault", span=""];
m22_59 [cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="ServerWatchdog.feature.cs", label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65"];
m22_0 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="ServerWatchdog.feature.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35"];
m22_1 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="ServerWatchdog.feature.cs", label="connection == null", span="39-39"];
m22_3 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="ServerWatchdog.feature.cs", label="queueProviders == null", span="40-40"];
m22_5 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="ServerWatchdog.feature.cs", label="_connection = connection", span="42-42"];
m22_6 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="ServerWatchdog.feature.cs", label="_queueProviders = queueProviders", span="43-43"];
m22_2 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="ServerWatchdog.feature.cs", label="throw new ArgumentNullException(''connection'');", span="39-39"];
m22_4 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="ServerWatchdog.feature.cs", label="throw new ArgumentNullException(''queueProviders'');", span="40-40"];
m22_7 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="ServerWatchdog.feature.cs", label="Exit HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35"];
m22_177 [file="ServerWatchdog.feature.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
n30 -> n3  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
n30 -> n4  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
n30 -> n5  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
n30 -> n6  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
n30 -> n10  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
n30 -> n12  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
n30 -> n13  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
n30 -> n20  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
n30 -> n21  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
n30 -> n22  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
n30 -> n28  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
n30 -> d12  [color=green, key=1, label="HangFire.BackgroundJobServer", style=dashed];
n30 -> d13  [color=green, key=1, label="HangFire.BackgroundJobServer", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [key=0, style=solid];
n2 -> n5  [color=darkseagreen4, key=1, label=int, style=dashed];
n2 -> n6  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
n3 -> n4  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n4 -> n8  [key=2, style=dotted];
n7 -> n2  [color=blue, key=0, style=bold];
n9 -> n10  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n10 -> n12  [key=0, style=solid];
n10 -> d12  [color=green, key=0, style=solid];
n11 -> n14  [key=0, style=solid];
n11 -> n15  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n16  [key=2, style=dotted];
n12 -> n17  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n18  [key=2, style=dotted];
n13 -> n8  [key=2, style=dotted];
n14 -> n9  [color=blue, key=0, style=bold];
n19 -> n20  [key=0, style=solid];
n19 -> n23  [color=green, key=3, label="method methodReturn bool Stop", style=bold];
n19 -> n24  [color=green, key=3, label="method methodReturn bool Stop", style=bold];
n20 -> n21  [key=0, style=solid];
n20 -> n24  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n21 -> n26  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n23 -> n25  [key=0, style=solid];
n25 -> n19  [color=blue, key=0, style=bold];
n27 -> n28  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n28 -> n19  [key=2, style=dotted];
n29 -> n27  [color=blue, key=0, style=bold];
d12 -> d13  [color=green, key=0, style=solid];
d12 -> n16  [color=green, key=2, style=dotted];
d12 -> n17  [color=green, key=2, style=dotted];
d13 -> n14  [color=green, key=0, style=solid];
d13 -> n18  [color=green, key=2, style=dotted];
d13 -> n8  [color=green, key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_21  [key=2, style=dotted];
m0_18 -> m0_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_22  [key=2, style=dotted];
m0_20 -> m0_17  [color=blue, key=0, style=bold];
m0_48 -> m0_94  [color=red, key=0, style=solid];
m0_94 -> m0_95  [color=red, key=0, style=solid];
m0_94 -> m0_34  [color=red, key=2, style=dotted];
m0_95 -> m0_48  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_7  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_8  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_9  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_10  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_11  [key=2, style=dotted];
m0_5 -> m0_12  [key=2, style=dotted];
m0_5 -> m0_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_6 -> m0_0  [color=blue, key=0, style=bold];
m0_72 -> m0_96  [color=red, key=0, style=solid];
m0_96 -> m0_97  [color=red, key=0, style=solid];
m0_96 -> m0_100  [color=red, key=2, style=dotted];
m0_96 -> m0_98  [color=red, key=1, label=mock, style=dashed];
m0_97 -> m0_98  [color=red, key=0, style=solid];
m0_97 -> m0_101  [color=red, key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_99 -> m0_72  [color=blue, key=0, style=bold];
m0_62 -> m0_63  [key=0, style=solid];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_72  [key=2, style=dotted];
m0_63 -> m0_69  [color=red, key=1, label=component1, style=dashed];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_11  [key=2, style=dotted];
m0_64 -> m0_73  [key=2, style=dotted];
m0_64 -> m0_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_64 -> m0_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_69 -> m0_70  [color=red, key=0, style=solid];
m0_69 -> m0_74  [color=red, key=2, style=dotted];
m0_69 -> m0_50  [color=red, key=2, style=dotted];
m0_69 -> m0_88  [color=red, key=1, label="lambda expression", style=dashed];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_72  [key=2, style=dotted];
m0_65 -> m0_70  [color=darkseagreen4, key=1, label=component2, style=dashed];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_11  [key=2, style=dotted];
m0_66 -> m0_73  [key=2, style=dotted];
m0_66 -> m0_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_66 -> m0_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_74  [key=2, style=dotted];
m0_70 -> m0_50  [key=2, style=dotted];
m0_70 -> m0_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_48  [key=2, style=dotted];
m0_68 -> m0_69  [color=red, key=0, style=solid];
m0_68 -> m0_49  [key=2, style=dotted];
m0_71 -> m0_62  [color=blue, key=0, style=bold];
m0_35 -> m0_36  [key=0, style=solid];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_21  [key=2, style=dotted];
m0_36 -> m0_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_22  [key=2, style=dotted];
m0_38 -> m0_35  [color=blue, key=0, style=bold];
m0_91 -> m0_92  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_16  [key=2, style=dotted];
m0_15 -> m0_13  [color=blue, key=0, style=bold];
m0_23 -> m0_24  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_26  [key=2, style=dotted];
m0_25 -> m0_23  [color=blue, key=0, style=bold];
m0_31 -> m0_32  [key=0, style=solid];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_34  [key=2, style=dotted];
m0_33 -> m0_31  [color=blue, key=0, style=bold];
m0_39 -> m0_40  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_34  [key=2, style=dotted];
m0_41 -> m0_39  [color=blue, key=0, style=bold];
m0_51 -> m0_52  [key=0, style=solid];
m0_58 -> m0_59  [key=0, style=solid];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_21  [key=2, style=dotted];
m0_52 -> m0_54  [key=2, style=dotted];
m0_52 -> m0_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_53 -> m0_51  [color=blue, key=0, style=bold];
m0_55 -> m0_56  [key=0, style=solid];
m0_56 -> m0_57  [key=0, style=solid];
m0_57 -> m0_55  [color=blue, key=0, style=bold];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_21  [key=2, style=dotted];
m0_59 -> m0_61  [key=2, style=dotted];
m0_60 -> m0_58  [color=blue, key=0, style=bold];
m0_75 -> m0_76  [key=0, style=solid];
m0_79 -> m0_80  [key=0, style=solid];
m0_82 -> m0_83  [key=0, style=solid];
m0_85 -> m0_86  [key=0, style=solid];
m0_88 -> m0_89  [color=red, key=0, style=solid];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_21  [key=2, style=dotted];
m0_76 -> m0_78  [key=2, style=dotted];
m0_77 -> m0_75  [color=blue, key=0, style=bold];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_49  [key=2, style=dotted];
m0_81 -> m0_79  [color=blue, key=0, style=bold];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_21  [key=2, style=dotted];
m0_83 -> m0_78  [key=2, style=dotted];
m0_84 -> m0_82  [color=blue, key=0, style=bold];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_49  [key=2, style=dotted];
m0_87 -> m0_85  [color=blue, key=0, style=bold];
m0_89 -> m0_90  [color=red, key=0, style=solid];
m0_89 -> m0_21  [color=red, key=2, style=dotted];
m0_89 -> m0_78  [color=red, key=2, style=dotted];
m0_90 -> m0_88  [color=blue, key=0, style=bold];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_21  [key=2, style=dotted];
m0_92 -> m0_78  [key=2, style=dotted];
m0_93 -> m0_91  [color=blue, key=0, style=bold];
m0_42 -> m0_43  [key=0, style=solid];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_48  [key=2, style=dotted];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_49  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_50  [key=2, style=dotted];
m0_45 -> m0_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_50  [key=2, style=dotted];
m0_46 -> m0_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_47 -> m0_42  [color=blue, key=0, style=bold];
m0_27 -> m0_28  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_21  [key=2, style=dotted];
m0_28 -> m0_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_22  [key=2, style=dotted];
m0_30 -> m0_27  [color=blue, key=0, style=bold];
m0_102 -> m0_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m0_102 -> m0_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m0_102 -> m0_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m0_102 -> m0_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m0_102 -> m0_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m0_102 -> m0_18  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m0_102 -> m0_24  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m0_102 -> m0_28  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m0_102 -> m0_32  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m0_102 -> m0_36  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m0_102 -> m0_40  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m0_102 -> m0_43  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m0_102 -> m0_45  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m0_102 -> m0_52  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m0_102 -> m0_56  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m0_102 -> m0_46  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m0_102 -> m0_63  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m0_102 -> m0_65  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m0_102 -> m0_67  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m0_102 -> m0_94  [color=red, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m0_102 -> m0_97  [color=red, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m1_21 -> m1_22  [key=0, style=solid];
m1_22 -> m1_21  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [color=red, key=0, style=solid];
m1_0 -> m1_3  [color=red, key=1, label="string[]", style=dashed];
m1_0 -> m1_5  [color=red, key=1, label="HangFire.JobStorage", style=dashed];
m1_0 -> m1_7  [color=red, key=1, label="HangFire.Server.IJobPerformanceProcess", style=dashed];
m1_0 -> m1_9  [color=red, key=1, label="HangFire.JobActivator", style=dashed];
m1_0 -> m1_11  [color=red, key=1, label="HangFire.States.IStateMachineFactory", style=dashed];
m1_0 -> m1_13  [color=red, key=1, label=string, style=dashed];
m1_0 -> m1_14  [color=red, key=1, label="string[]", style=dashed];
m1_0 -> m1_15  [color=red, key=1, label="HangFire.JobStorage", style=dashed];
m1_0 -> m1_16  [color=red, key=1, label="HangFire.Server.IJobPerformanceProcess", style=dashed];
m1_0 -> m1_17  [color=red, key=1, label="HangFire.JobActivator", style=dashed];
m1_0 -> m1_18  [color=red, key=1, label="HangFire.States.IStateMachineFactory", style=dashed];
m1_1 -> m1_2  [color=red, key=0, style=solid];
m1_1 -> m1_3  [color=red, key=0, style=solid];
m1_3 -> m1_4  [color=red, key=0, style=solid];
m1_3 -> m1_5  [color=red, key=0, style=solid];
m1_5 -> m1_6  [color=red, key=0, style=solid];
m1_5 -> m1_7  [color=red, key=0, style=solid];
m1_7 -> m1_8  [color=red, key=0, style=solid];
m1_7 -> m1_9  [color=red, key=0, style=solid];
m1_9 -> m1_10  [color=red, key=0, style=solid];
m1_9 -> m1_11  [color=red, key=0, style=solid];
m1_11 -> m1_12  [color=red, key=0, style=solid];
m1_11 -> m1_13  [color=red, key=0, style=solid];
m1_13 -> m1_14  [color=red, key=0, style=solid];
m1_14 -> m1_15  [color=red, key=0, style=solid];
m1_15 -> m1_16  [color=red, key=0, style=solid];
m1_16 -> m1_17  [color=red, key=0, style=solid];
m1_17 -> m1_18  [color=red, key=0, style=solid];
m1_18 -> m1_19  [color=red, key=0, style=solid];
m1_2 -> m1_19  [color=red, key=0, style=solid];
m1_2 -> m1_20  [color=red, key=2, style=dotted];
m1_4 -> m1_19  [color=red, key=0, style=solid];
m1_4 -> m1_20  [color=red, key=2, style=dotted];
m1_6 -> m1_19  [color=red, key=0, style=solid];
m1_6 -> m1_20  [color=red, key=2, style=dotted];
m1_8 -> m1_19  [color=red, key=0, style=solid];
m1_8 -> m1_20  [color=red, key=2, style=dotted];
m1_10 -> m1_19  [color=red, key=0, style=solid];
m1_10 -> m1_20  [color=red, key=2, style=dotted];
m1_12 -> m1_19  [color=red, key=0, style=solid];
m1_12 -> m1_20  [color=red, key=2, style=dotted];
m1_19 -> m1_0  [color=blue, key=0, style=bold];
m1_23 -> m1_13  [color=red, key=1, label="HangFire.Server.SharedWorkerContext", style=dashed];
m1_23 -> m1_14  [color=red, key=1, label="HangFire.Server.SharedWorkerContext", style=dashed];
m1_23 -> m1_15  [color=red, key=1, label="HangFire.Server.SharedWorkerContext", style=dashed];
m1_23 -> m1_16  [color=red, key=1, label="HangFire.Server.SharedWorkerContext", style=dashed];
m1_23 -> m1_17  [color=red, key=1, label="HangFire.Server.SharedWorkerContext", style=dashed];
m1_23 -> m1_18  [color=red, key=1, label="HangFire.Server.SharedWorkerContext", style=dashed];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [color=blue, key=0, style=bold];
m9_16 -> m9_27  [color=green, key=1, label="System.Type", style=dashed];
m9_16 -> m9_28  [color=green, key=1, label=string, style=dashed];
m9_16 -> m9_30  [color=green, key=1, label=string, style=dashed];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_19  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m9_16 -> m9_21  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m9_16 -> m9_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m9_16 -> m9_25  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m9_16 -> m9_26  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m9_27 -> m9_28  [color=green, key=0, style=solid];
m9_27 -> m9_38  [color=green, key=2, style=dotted];
m9_25 -> m9_27  [color=green, key=0, style=solid];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_35  [key=2, style=dotted];
m9_28 -> m9_29  [color=green, key=0, style=solid];
m9_28 -> m9_39  [color=green, key=2, style=dotted];
m9_28 -> m9_40  [color=green, key=2, style=dotted];
m9_29 -> m9_30  [color=green, key=0, style=solid];
m9_29 -> m9_41  [color=green, key=2, style=dotted];
m9_30 -> m9_33  [color=green, key=0, style=solid];
m9_31 -> m9_32  [color=green, key=0, style=solid];
m9_32 -> m9_33  [color=green, key=0, style=solid];
m9_32 -> m9_42  [color=green, key=2, style=dotted];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_19  [key=0, style=solid];
m9_17 -> m9_34  [key=2, style=dotted];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_21  [key=0, style=solid];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_23  [key=0, style=solid];
m9_23 -> m9_25  [key=0, style=solid];
m9_23 -> m9_24  [key=0, style=solid];
m9_26 -> m9_33  [key=0, style=solid];
m9_26 -> m9_36  [key=2, style=dotted];
m9_26 -> n17  [key=2, style=dotted];
m9_18 -> m9_33  [key=0, style=solid];
m9_18 -> m9_10  [key=2, style=dotted];
m9_20 -> m9_33  [key=0, style=solid];
m9_20 -> m9_10  [key=2, style=dotted];
m9_22 -> m9_33  [key=0, style=solid];
m9_22 -> m9_10  [key=2, style=dotted];
m9_24 -> m9_33  [key=0, style=solid];
m9_24 -> m9_10  [key=2, style=dotted];
m9_33 -> m9_16  [color=blue, key=0, style=bold];
m9_43 -> m9_44  [key=0, style=solid];
m9_44 -> m9_45  [key=0, style=solid];
m9_44 -> m9_46  [key=2, style=dotted];
m9_45 -> m9_43  [color=blue, key=0, style=bold];
m9_38 -> m9_47  [key=0, style=solid];
m9_38 -> m9_48  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m9_38 -> m9_49  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m9_47 -> m9_48  [key=0, style=solid];
m9_47 -> m9_54  [key=2, style=dotted];
m9_47 -> m9_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_47 -> m9_50  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_47 -> m9_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_47 -> m9_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_48 -> m9_49  [key=0, style=solid];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_55  [key=2, style=dotted];
m9_52 -> m9_53  [key=0, style=solid];
m9_50 -> m9_51  [key=0, style=solid];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_56  [key=2, style=dotted];
m9_53 -> m9_38  [color=blue, key=0, style=bold];
m9_2 -> m9_7  [color=darkseagreen4, key=1, label=IRedisClientsManager, style=dashed];
m9_2 -> m9_8  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_5  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_11  [key=2, style=dotted];
m9_8 -> m9_9  [key=0, style=solid];
m9_5 -> m9_7  [key=0, style=solid];
m9_5 -> m9_6  [key=0, style=solid];
m9_3 -> m9_5  [key=0, style=solid];
m9_3 -> m9_4  [key=0, style=solid];
m9_6 -> m9_9  [key=0, style=solid];
m9_6 -> m9_10  [key=2, style=dotted];
m9_4 -> m9_9  [key=0, style=solid];
m9_4 -> m9_10  [key=2, style=dotted];
m9_9 -> m9_2  [color=blue, key=0, style=bold];
m9_15 -> m9_57  [key=0, style=solid];
m9_15 -> m9_58  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_15 -> m9_60  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_15 -> m9_61  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_57 -> m9_54  [key=2, style=dotted];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_59  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_57 -> m9_68  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_57 -> m9_69  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_58 -> m9_59  [key=0, style=solid];
m9_58 -> m9_60  [key=0, style=solid];
m9_60 -> m9_61  [key=0, style=solid];
m9_60 -> m9_69  [key=0, style=solid];
m9_60 -> m9_71  [key=2, style=dotted];
m9_60 -> m9_67  [color=darkseagreen4, key=1, label=descriptor, style=dashed];
m9_60 -> m9_68  [color=darkseagreen4, key=1, label=descriptor, style=dashed];
m9_61 -> m9_62  [key=0, style=solid];
m9_61 -> m9_72  [key=2, style=dotted];
m9_61 -> m9_63  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m9_61 -> m9_64  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m9_61 -> m9_65  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m9_67 -> n17  [key=2, style=dotted];
m9_67 -> m9_70  [key=0, style=solid];
m9_67 -> m9_76  [key=2, style=dotted];
m9_59 -> m9_70  [key=0, style=solid];
m9_69 -> m9_70  [key=0, style=solid];
m9_68 -> m9_60  [key=0, style=solid];
m9_68 -> m9_77  [key=2, style=dotted];
m9_62 -> m9_68  [color=darkseagreen4, key=1, label=value, style=dashed];
m9_62 -> m9_62  [color=darkorchid, key=3, label="Local variable string value", style=bold];
m9_62 -> m9_63  [key=0, style=solid];
m9_63 -> m9_68  [key=0, style=solid];
m9_63 -> m9_64  [key=0, style=solid];
m9_64 -> m9_65  [key=0, style=solid];
m9_64 -> m9_73  [key=2, style=dotted];
m9_64 -> m9_74  [key=2, style=dotted];
m9_65 -> m9_68  [key=0, style=solid];
m9_65 -> m9_66  [key=0, style=solid];
m9_65 -> m9_75  [key=2, style=dotted];
m9_66 -> m9_67  [key=0, style=solid];
m9_70 -> m9_15  [color=blue, key=0, style=bold];
m9_12 -> m9_16  [color=darkorchid, key=3, label="method methodReturn string CreateJob", style=bold];
m9_12 -> m9_13  [key=0, style=solid];
m9_13 -> m9_16  [key=2, style=dotted];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_15  [key=2, style=dotted];
m9_14 -> m9_12  [color=blue, key=0, style=bold];
m9_78 -> m9_28  [color=green, key=1, label="HangFire.Client.JobClient", style=dashed];
m9_78 -> m9_29  [color=green, key=1, label="HangFire.Client.JobClient", style=dashed];
m9_78 -> m9_7  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m9_78 -> m9_8  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m9_78 -> m9_13  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m9_78 -> m9_44  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m10_8 -> m10_9  [color=green, key=0, style=solid];
m10_9 -> m10_10  [color=green, key=0, style=solid];
m10_10 -> m10_8  [color=blue, key=0, style=bold];
m10_11 -> m10_12  [color=green, key=0, style=solid];
m10_12 -> m10_13  [color=green, key=0, style=solid];
m10_12 -> m10_14  [color=green, key=2, style=dotted];
m10_13 -> m10_11  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [color=green, key=0, style=solid];
m10_0 -> m10_2  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m10_0 -> m10_3  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m10_1 -> m10_2  [color=green, key=0, style=solid];
m10_1 -> m10_3  [color=green, key=0, style=solid];
m10_2 -> m10_4  [color=green, key=0, style=solid];
m10_2 -> m10_5  [color=green, key=2, style=dotted];
m10_2 -> m10_6  [color=green, key=2, style=dotted];
m10_3 -> m10_4  [color=green, key=0, style=solid];
m10_3 -> m10_7  [color=green, key=2, style=dotted];
m10_4 -> m10_0  [color=blue, key=0, style=bold];
m10_15 -> m10_3  [color=green, key=1, label="Hangfire.Dashboard.OwinDashboardResponse", style=dashed];
m10_15 -> m10_9  [color=green, key=1, label="Hangfire.Dashboard.OwinDashboardResponse", style=dashed];
m10_15 -> m10_12  [color=green, key=1, label="Hangfire.Dashboard.OwinDashboardResponse", style=dashed];
m15_51 -> m15_52  [key=0, style=solid];
m15_52 -> m15_53  [key=0, style=solid];
m15_52 -> m15_62  [key=2, style=dotted];
m15_53 -> m15_54  [key=0, style=solid];
m15_53 -> m15_32  [key=2, style=dotted];
m15_54 -> m15_55  [key=0, style=solid];
m15_54 -> m15_57  [key=0, style=solid];
m15_55 -> m15_56  [key=0, style=solid];
m15_55 -> m15_63  [key=2, style=dotted];
m15_57 -> m15_58  [key=0, style=solid];
m15_57 -> m15_44  [key=2, style=dotted];
m15_56 -> m15_54  [key=0, style=solid];
m15_56 -> m15_57  [key=0, style=solid];
m15_56 -> m15_64  [key=2, style=dotted];
m15_58 -> m15_59  [key=0, style=solid];
m15_58 -> m15_61  [key=0, style=solid];
m15_58 -> m15_65  [key=2, style=dotted];
m15_59 -> m15_60  [key=0, style=solid];
m15_60 -> m15_61  [key=0, style=solid];
m15_60 -> m15_66  [key=2, style=dotted];
m15_61 -> m15_51  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_2  [color=darkseagreen4, key=1, label=IRedisClientsManager, style=dashed];
m15_0 -> m15_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m15_0 -> m15_4  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m15_0 -> m15_5  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m15_0 -> m15_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m15_0 -> m15_8  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m15_0 -> m15_10  [color=red, key=1, label=string, style=dashed];
m15_0 -> m15_11  [color=darkseagreen4, key=1, label="HangFire.JobActivator", style=dashed];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_15  [key=2, style=dotted];
m15_2 -> m15_3  [key=0, style=solid];
m15_3 -> m15_4  [key=0, style=solid];
m15_4 -> m15_5  [key=0, style=solid];
m15_5 -> m15_6  [key=0, style=solid];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_8  [key=0, style=solid];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_10  [color=red, key=0, style=solid];
m15_8 -> m15_17  [key=2, style=dotted];
m15_8 -> m15_8  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m15_10 -> m15_11  [color=red, key=0, style=solid];
m15_10 -> m15_19  [color=red, key=2, style=dotted];
m15_10 -> n17  [color=red, key=2, style=dotted];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_21  [key=2, style=dotted];
m15_11 -> m15_22  [key=2, style=dotted];
m15_11 -> m15_23  [key=2, style=dotted];
m15_7 -> m15_14  [key=0, style=solid];
m15_7 -> m15_16  [key=2, style=dotted];
m15_9 -> m15_14  [key=0, style=solid];
m15_9 -> m15_18  [key=2, style=dotted];
m15_12 -> m15_13  [key=0, style=solid];
m15_12 -> m15_24  [key=2, style=dotted];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_25  [key=2, style=dotted];
m15_14 -> m15_0  [color=blue, key=0, style=bold];
m15_26 -> m15_27  [key=0, style=solid];
m15_27 -> m15_28  [key=0, style=solid];
m15_27 -> m15_30  [key=2, style=dotted];
m15_28 -> m15_29  [key=0, style=solid];
m15_28 -> m15_31  [key=2, style=dotted];
m15_29 -> m15_26  [color=blue, key=0, style=bold];
m15_94 -> m15_95  [key=0, style=solid];
m15_94 -> m15_85  [key=2, style=dotted];
m15_94 -> m15_88  [key=2, style=dotted];
m15_94 -> m15_96  [key=2, style=dotted];
m15_63 -> m15_94  [key=0, style=solid];
m15_95 -> m15_63  [color=blue, key=0, style=bold];
m15_99 -> m15_100  [key=0, style=solid];
m15_99 -> m15_76  [key=2, style=dotted];
m15_99 -> m15_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_65 -> m15_97  [key=0, style=solid];
m15_65 -> m15_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_65 -> m15_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_65 -> m15_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_65 -> m15_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_97 -> m15_98  [key=0, style=solid];
m15_97 -> m15_75  [key=2, style=dotted];
m15_97 -> m15_99  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m15_97 -> m15_100  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m15_98 -> m15_99  [key=0, style=solid];
m15_98 -> m15_76  [key=2, style=dotted];
m15_98 -> m15_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_100 -> m15_101  [key=0, style=solid];
m15_100 -> m15_77  [key=2, style=dotted];
m15_101 -> m15_65  [color=blue, key=0, style=bold];
m15_44 -> m15_45  [key=0, style=solid];
m15_45 -> m15_46  [key=0, style=solid];
m15_45 -> m15_50  [key=2, style=dotted];
m15_46 -> m15_47  [key=0, style=solid];
m15_46 -> m15_50  [key=2, style=dotted];
m15_47 -> m15_48  [key=0, style=solid];
m15_47 -> m15_50  [key=2, style=dotted];
m15_48 -> m15_49  [key=0, style=solid];
m15_48 -> m15_50  [key=2, style=dotted];
m15_49 -> m15_44  [color=blue, key=0, style=bold];
m15_62 -> m15_67  [key=0, style=solid];
m15_67 -> m15_68  [key=0, style=solid];
m15_67 -> m15_75  [key=2, style=dotted];
m15_67 -> m15_69  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m15_67 -> m15_72  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m15_67 -> m15_73  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m15_68 -> m15_69  [key=0, style=solid];
m15_68 -> m15_76  [key=2, style=dotted];
m15_68 -> m15_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_69 -> m15_70  [key=0, style=solid];
m15_69 -> m15_76  [key=2, style=dotted];
m15_69 -> m15_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_72 -> m15_70  [key=0, style=solid];
m15_72 -> m15_76  [key=2, style=dotted];
m15_72 -> m15_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_73 -> m15_74  [key=0, style=solid];
m15_73 -> m15_77  [key=2, style=dotted];
m15_70 -> m15_71  [key=0, style=solid];
m15_70 -> m15_73  [key=0, style=solid];
m15_71 -> m15_72  [key=0, style=solid];
m15_71 -> m15_91  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m15_71 -> m15_70  [color=darkorchid, key=3, label="Local variable string queue1", style=bold];
m15_74 -> m15_62  [color=blue, key=0, style=bold];
m15_32 -> m15_33  [color=red, key=0, style=solid];
m15_33 -> m15_34  [color=red, key=0, style=solid];
m15_33 -> m15_38  [color=red, key=2, style=dotted];
m15_33 -> m15_39  [color=red, key=2, style=dotted];
m15_33 -> m15_40  [color=red, key=2, style=dotted];
m15_34 -> m15_35  [key=0, style=solid];
m15_34 -> m15_38  [key=2, style=dotted];
m15_34 -> m15_41  [key=2, style=dotted];
m15_35 -> m15_36  [key=0, style=solid];
m15_35 -> m15_38  [key=2, style=dotted];
m15_35 -> m15_42  [key=2, style=dotted];
m15_36 -> m15_37  [key=0, style=solid];
m15_36 -> m15_38  [key=2, style=dotted];
m15_36 -> m15_43  [key=2, style=dotted];
m15_37 -> m15_32  [color=blue, key=0, style=bold];
m15_106 -> m15_107  [key=0, style=solid];
m15_78 -> m15_79  [key=0, style=solid];
m15_82 -> m15_83  [key=0, style=solid];
m15_91 -> m15_92  [key=0, style=solid];
m15_91 -> m15_85  [key=2, style=dotted];
m15_91 -> m15_93  [key=2, style=dotted];
m15_90 -> m15_91  [key=0, style=solid];
m15_79 -> m15_80  [key=0, style=solid];
m15_79 -> m15_81  [key=2, style=dotted];
m15_80 -> m15_78  [color=blue, key=0, style=bold];
m15_83 -> m15_84  [key=0, style=solid];
m15_83 -> m15_85  [key=2, style=dotted];
m15_83 -> m15_86  [key=2, style=dotted];
m15_83 -> m15_87  [key=2, style=dotted];
m15_83 -> m15_88  [key=2, style=dotted];
m15_83 -> m15_89  [key=2, style=dotted];
m15_84 -> m15_82  [color=blue, key=0, style=bold];
m15_92 -> m15_90  [color=blue, key=0, style=bold];
m15_103 -> m15_104  [key=0, style=solid];
m15_103 -> m15_105  [key=2, style=dotted];
m15_107 -> m15_108  [key=0, style=solid];
m15_107 -> m15_85  [key=2, style=dotted];
m15_107 -> m15_109  [key=2, style=dotted];
m15_102 -> m15_103  [key=0, style=solid];
m15_104 -> m15_102  [color=blue, key=0, style=bold];
m15_108 -> m15_106  [color=blue, key=0, style=bold];
m15_110 -> m15_1  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_2  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_3  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_4  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_5  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_11  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_12  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_13  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_27  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_28  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_33  [color=red, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_34  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_35  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_36  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_45  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_46  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_47  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_48  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_52  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_53  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_55  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_56  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_57  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_58  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_60  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_67  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_68  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_79  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_69  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_83  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_70  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_72  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_91  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_94  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_111 -> m15_91  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m15_112 -> m15_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_112 -> m15_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_0 -> m18_1  [key=0, style=solid];
m18_0 -> m18_2  [color=red, key=1, label=IRedisClientsManager, style=dashed];
m18_1 -> m18_2  [color=red, key=0, style=solid];
m18_1 -> m18_3  [key=0, style=solid];
m18_2 -> m18_1  [color=red, key=0, style=solid];
m18_2 -> m18_4  [color=red, key=2, style=dotted];
m18_2 -> m18_5  [color=red, key=2, style=dotted];
m18_2 -> m18_6  [color=red, key=2, style=dotted];
m18_3 -> m18_0  [color=blue, key=0, style=bold];
m18_11 -> m18_12  [key=0, style=solid];
m18_11 -> m18_13  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m18_12 -> m18_13  [key=0, style=solid];
m18_12 -> m18_21  [key=2, style=dotted];
m18_12 -> m18_22  [key=2, style=dotted];
m18_12 -> m18_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_12 -> m18_14  [color=darkseagreen4, key=1, label=waitHandles, style=dashed];
m18_13 -> m18_14  [key=0, style=solid];
m18_13 -> m18_23  [key=2, style=dotted];
m18_13 -> m18_13  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m18_13 -> m18_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m18_14 -> m18_15  [key=0, style=solid];
m18_14 -> m18_24  [key=2, style=dotted];
m18_14 -> m18_25  [key=2, style=dotted];
m18_15 -> m18_16  [key=0, style=solid];
m18_15 -> m18_26  [key=2, style=dotted];
m18_15 -> m18_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m18_15 -> m18_18  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m18_16 -> m18_17  [key=0, style=solid];
m18_16 -> m18_19  [key=0, style=solid];
m18_16 -> m18_18  [color=darkseagreen4, key=1, label=fetcher, style=dashed];
m18_18 -> m18_20  [key=0, style=solid];
m18_18 -> m18_27  [key=2, style=dotted];
m18_17 -> m18_18  [key=0, style=solid];
m18_17 -> m18_16  [key=0, style=solid];
m18_19 -> m18_20  [key=0, style=solid];
m18_19 -> m18_28  [key=2, style=dotted];
m18_20 -> m18_11  [color=blue, key=0, style=bold];
m18_29 -> m18_30  [key=0, style=solid];
m18_30 -> m18_31  [key=0, style=solid];
m18_31 -> m18_29  [color=blue, key=0, style=bold];
m18_7 -> m18_8  [key=0, style=solid];
m18_8 -> m18_9  [key=0, style=solid];
m18_8 -> m18_10  [key=2, style=dotted];
m18_9 -> m18_7  [color=blue, key=0, style=bold];
m18_32 -> m18_2  [color=red, key=1, label="HangFire.Server.PrioritizedJobFetcher", style=dashed];
m18_32 -> m18_8  [color=darkseagreen4, key=1, label="HangFire.Server.PrioritizedJobFetcher", style=dashed];
m18_32 -> m18_12  [color=darkseagreen4, key=1, label="HangFire.Server.PrioritizedJobFetcher", style=dashed];
m18_32 -> m18_16  [color=darkseagreen4, key=1, label="HangFire.Server.PrioritizedJobFetcher", style=dashed];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_10  [color=darkseagreen4, key=1, label=ILog, style=dashed];
m19_8 -> m19_11  [color=darkseagreen4, key=1, label=ILog, style=dashed];
m19_8 -> m19_12  [color=darkseagreen4, key=1, label=ILog, style=dashed];
m19_8 -> m19_13  [color=darkseagreen4, key=1, label=ILog, style=dashed];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_15  [key=2, style=dotted];
m19_10 -> m19_11  [key=0, style=solid];
m19_10 -> m19_15  [key=2, style=dotted];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_16  [key=2, style=dotted];
m19_11 -> m19_17  [key=2, style=dotted];
m19_11 -> m19_15  [key=2, style=dotted];
m19_11 -> m19_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_12 -> m19_13  [key=0, style=solid];
m19_12 -> m19_15  [key=2, style=dotted];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_15  [key=2, style=dotted];
m19_14 -> m19_8  [color=blue, key=0, style=bold];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_2  [key=0, style=solid];
m19_2 -> m19_3  [key=0, style=solid];
m19_3 -> m19_4  [key=0, style=solid];
m19_4 -> m19_5  [key=0, style=solid];
m19_4 -> n8  [key=2, style=dotted];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> n8  [key=2, style=dotted];
m19_6 -> m19_0  [color=blue, key=0, style=bold];
m19_18 -> m19_19  [key=0, style=solid];
m19_19 -> m19_20  [key=0, style=solid];
m19_20 -> m19_18  [color=blue, key=0, style=bold];
m19_21 -> m19_1  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m19_21 -> m19_2  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m19_21 -> m19_3  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m19_21 -> m19_4  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m19_21 -> m19_5  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m19_21 -> m19_10  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m19_21 -> m19_11  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m19_21 -> m19_12  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m19_21 -> m19_13  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m20_0 -> m20_1  [color=green, key=0, style=solid];
m20_1 -> m20_2  [color=green, key=0, style=solid];
m20_1 -> m20_5  [color=green, key=2, style=dotted];
m20_2 -> m20_3  [color=green, key=0, style=solid];
m20_3 -> m20_4  [color=green, key=0, style=solid];
m20_3 -> m20_6  [color=green, key=2, style=dotted];
m20_4 -> m20_0  [color=blue, key=0, style=bold];
m20_7 -> m20_8  [color=green, key=0, style=solid];
m20_8 -> m20_9  [color=green, key=0, style=solid];
m20_8 -> m20_10  [color=green, key=2, style=dotted];
m20_9 -> m20_7  [color=blue, key=0, style=bold];
m20_11 -> m20_1  [color=green, key=1, label="HangFire.Core.Tests.WorkerContextMock", style=dashed];
m20_11 -> m20_2  [color=green, key=1, label="HangFire.Core.Tests.WorkerContextMock", style=dashed];
m20_11 -> m20_3  [color=green, key=1, label="HangFire.Core.Tests.WorkerContextMock", style=dashed];
m20_11 -> m20_8  [color=green, key=1, label="HangFire.Core.Tests.WorkerContextMock", style=dashed];
m21_0 -> m21_1  [key=0, style=solid];
m21_0 -> m21_2  [color=darkseagreen4, key=1, label="HangFire.SqlServer.PersistentJobQueueProviderCollection", style=dashed];
m21_1 -> m21_2  [key=0, style=solid];
m21_2 -> m21_3  [key=0, style=solid];
m21_3 -> m21_0  [color=blue, key=0, style=bold];
m21_48 -> m21_385  [key=0, style=solid];
m21_48 -> m21_386  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m21_48 -> m21_387  [color=darkseagreen4, key=1, label="System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m21_385 -> m21_386  [key=0, style=solid];
m21_386 -> m21_387  [key=0, style=solid];
m21_386 -> m21_81  [key=2, style=dotted];
m21_386 -> m21_90  [key=2, style=dotted];
m21_387 -> m21_388  [key=0, style=solid];
m21_387 -> m21_367  [key=2, style=dotted];
m21_388 -> m21_48  [color=blue, key=0, style=bold];
m21_234 -> m21_235  [key=0, style=solid];
m21_235 -> m21_236  [key=0, style=solid];
m21_235 -> m21_7  [key=2, style=dotted];
m21_235 -> m21_237  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_236 -> m21_234  [color=blue, key=0, style=bold];
m21_72 -> m21_73  [key=0, style=solid];
m21_73 -> m21_74  [key=0, style=solid];
m21_73 -> m21_7  [key=2, style=dotted];
m21_73 -> m21_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_74 -> m21_72  [color=blue, key=0, style=bold];
m21_7 -> m21_351  [key=0, style=solid];
m21_7 -> m21_354  [color=darkseagreen4, key=1, label="System.Func<SqlConnection, T>", style=dashed];
m21_351 -> m21_352  [key=0, style=solid];
m21_351 -> m21_358  [key=2, style=dotted];
m21_351 -> m21_359  [key=2, style=dotted];
m21_351 -> m21_355  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m21_354 -> m21_355  [key=0, style=solid];
m21_354 -> m21_256  [key=2, style=dotted];
m21_354 -> m21_356  [color=darkseagreen4, key=1, label=result, style=dashed];
m21_352 -> m21_353  [key=0, style=solid];
m21_352 -> m21_360  [key=2, style=dotted];
m21_352 -> m21_354  [color=darkseagreen4, key=1, label=connection, style=dashed];
m21_355 -> m21_356  [key=0, style=solid];
m21_355 -> m21_362  [key=2, style=dotted];
m21_353 -> m21_354  [key=0, style=solid];
m21_353 -> m21_361  [key=2, style=dotted];
m21_356 -> m21_357  [key=0, style=solid];
m21_357 -> m21_7  [color=blue, key=0, style=bold];
m21_194 -> m21_195  [key=0, style=solid];
m21_194 -> m21_199  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_195 -> m21_196  [key=0, style=solid];
m21_195 -> m21_7  [key=2, style=dotted];
m21_195 -> m21_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_196 -> m21_194  [color=blue, key=0, style=bold];
m21_36 -> m21_37  [key=0, style=solid];
m21_37 -> m21_38  [key=0, style=solid];
m21_37 -> m21_7  [key=2, style=dotted];
m21_37 -> m21_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_38 -> m21_36  [color=blue, key=0, style=bold];
m21_181 -> m21_182  [key=0, style=solid];
m21_182 -> m21_183  [key=0, style=solid];
m21_182 -> m21_7  [key=2, style=dotted];
m21_182 -> m21_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_183 -> m21_181  [color=blue, key=0, style=bold];
m21_105 -> m21_106  [key=0, style=solid];
m21_105 -> m21_109  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_106 -> m21_107  [key=0, style=solid];
m21_106 -> m21_7  [key=2, style=dotted];
m21_106 -> m21_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_107 -> m21_105  [color=blue, key=0, style=bold];
m21_94 -> m21_95  [key=0, style=solid];
m21_94 -> m21_98  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_95 -> m21_96  [key=0, style=solid];
m21_95 -> m21_7  [key=2, style=dotted];
m21_95 -> m21_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_96 -> m21_94  [color=blue, key=0, style=bold];
m21_65 -> m21_66  [key=0, style=solid];
m21_66 -> m21_67  [key=0, style=solid];
m21_66 -> m21_7  [key=2, style=dotted];
m21_66 -> m21_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_67 -> m21_65  [color=blue, key=0, style=bold];
m21_22 -> m21_23  [key=0, style=solid];
m21_22 -> m21_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_22 -> m21_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_23 -> m21_24  [key=0, style=solid];
m21_23 -> m21_7  [key=2, style=dotted];
m21_23 -> m21_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_24 -> m21_22  [color=blue, key=0, style=bold];
m21_30 -> m21_31  [key=0, style=solid];
m21_31 -> m21_32  [key=0, style=solid];
m21_31 -> m21_7  [key=2, style=dotted];
m21_31 -> m21_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_32 -> m21_30  [color=blue, key=0, style=bold];
m21_389 -> m21_390  [key=0, style=solid];
m21_389 -> m21_391  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>", style=dashed];
m21_389 -> m21_393  [color=darkseagreen4, key=1, label="System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m21_390 -> m21_391  [key=0, style=solid];
m21_390 -> m21_397  [key=2, style=dotted];
m21_390 -> m21_394  [color=darkseagreen4, key=1, label=result, style=dashed];
m21_390 -> m21_395  [color=darkseagreen4, key=1, label=result, style=dashed];
m21_391 -> m21_392  [key=0, style=solid];
m21_391 -> m21_395  [key=0, style=solid];
m21_391 -> m21_393  [color=darkseagreen4, key=1, label=job, style=dashed];
m21_391 -> m21_394  [color=darkseagreen4, key=1, label=job, style=dashed];
m21_393 -> m21_394  [key=0, style=solid];
m21_393 -> m21_376  [key=2, style=dotted];
m21_393 -> m21_398  [key=2, style=dotted];
m21_394 -> m21_391  [key=0, style=solid];
m21_394 -> m21_399  [key=2, style=dotted];
m21_394 -> m21_400  [key=2, style=dotted];
m21_394 -> m21_93  [key=2, style=dotted];
m21_395 -> m21_396  [key=0, style=solid];
m21_395 -> m21_401  [key=2, style=dotted];
m21_392 -> m21_393  [key=0, style=solid];
m21_392 -> m21_383  [key=2, style=dotted];
m21_396 -> m21_389  [color=blue, key=0, style=bold];
m21_368 -> m21_369  [key=0, style=solid];
m21_8 -> m21_9  [key=0, style=solid];
m21_9 -> m21_10  [key=0, style=solid];
m21_9 -> m21_11  [key=2, style=dotted];
m21_10 -> m21_8  [color=blue, key=0, style=bold];
m21_16 -> m21_17  [key=0, style=solid];
m21_16 -> m21_20  [key=2, style=dotted];
m21_17 -> m21_18  [key=0, style=solid];
m21_17 -> m21_21  [key=2, style=dotted];
m21_15 -> m21_16  [key=0, style=solid];
m21_18 -> m21_19  [key=0, style=solid];
m21_19 -> m21_15  [color=blue, key=0, style=bold];
m21_26 -> m21_27  [key=0, style=solid];
m21_26 -> m21_20  [key=2, style=dotted];
m21_27 -> m21_28  [key=0, style=solid];
m21_27 -> m21_21  [key=2, style=dotted];
m21_25 -> m21_26  [key=0, style=solid];
m21_28 -> m21_29  [key=0, style=solid];
m21_29 -> m21_25  [color=blue, key=0, style=bold];
m21_33 -> m21_34  [key=0, style=solid];
m21_34 -> m21_35  [key=0, style=solid];
m21_34 -> m21_11  [key=2, style=dotted];
m21_35 -> m21_33  [color=blue, key=0, style=bold];
m21_39 -> m21_40  [key=0, style=solid];
m21_40 -> m21_41  [key=0, style=solid];
m21_40 -> m21_11  [key=2, style=dotted];
m21_41 -> m21_39  [color=blue, key=0, style=bold];
m21_46 -> m21_47  [key=0, style=solid];
m21_46 -> m21_48  [key=2, style=dotted];
m21_46 -> m21_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_45 -> m21_46  [key=0, style=solid];
m21_47 -> m21_45  [color=blue, key=0, style=bold];
m21_49 -> m21_50  [key=0, style=solid];
m21_50 -> m21_51  [key=0, style=solid];
m21_50 -> m21_52  [key=2, style=dotted];
m21_50 -> m21_53  [key=2, style=dotted];
m21_50 -> m21_54  [key=2, style=dotted];
m21_51 -> m21_49  [color=blue, key=0, style=bold];
m21_59 -> m21_60  [key=0, style=solid];
m21_59 -> m21_48  [key=2, style=dotted];
m21_59 -> m21_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_58 -> m21_59  [key=0, style=solid];
m21_60 -> m21_58  [color=blue, key=0, style=bold];
m21_61 -> m21_62  [key=0, style=solid];
m21_62 -> m21_63  [key=0, style=solid];
m21_62 -> m21_64  [key=2, style=dotted];
m21_62 -> m21_54  [key=2, style=dotted];
m21_63 -> m21_61  [color=blue, key=0, style=bold];
m21_68 -> m21_69  [key=0, style=solid];
m21_69 -> m21_70  [key=0, style=solid];
m21_69 -> m21_71  [key=2, style=dotted];
m21_70 -> m21_68  [color=blue, key=0, style=bold];
m21_75 -> m21_76  [key=0, style=solid];
m21_76 -> m21_77  [key=0, style=solid];
m21_76 -> m21_71  [key=2, style=dotted];
m21_77 -> m21_75  [color=blue, key=0, style=bold];
m21_82 -> m21_83  [key=0, style=solid];
m21_83 -> m21_84  [key=0, style=solid];
m21_83 -> m21_81  [key=2, style=dotted];
m21_83 -> m21_90  [key=2, style=dotted];
m21_83 -> m21_85  [color=darkseagreen4, key=1, label=servers, style=dashed];
m21_84 -> m21_85  [key=0, style=solid];
m21_84 -> m21_91  [key=2, style=dotted];
m21_84 -> m21_87  [color=darkseagreen4, key=1, label=result, style=dashed];
m21_84 -> m21_88  [color=darkseagreen4, key=1, label=result, style=dashed];
m21_85 -> m21_86  [key=0, style=solid];
m21_85 -> m21_88  [key=0, style=solid];
m21_85 -> m21_87  [color=darkseagreen4, key=1, label=server, style=dashed];
m21_87 -> m21_85  [key=0, style=solid];
m21_87 -> m21_92  [key=2, style=dotted];
m21_87 -> m21_93  [key=2, style=dotted];
m21_88 -> m21_89  [key=0, style=solid];
m21_86 -> m21_87  [key=0, style=solid];
m21_86 -> m21_81  [key=2, style=dotted];
m21_89 -> m21_82  [color=blue, key=0, style=bold];
m21_98 -> m21_99  [key=0, style=solid];
m21_98 -> m21_48  [key=2, style=dotted];
m21_98 -> m21_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_97 -> m21_98  [key=0, style=solid];
m21_99 -> m21_97  [color=blue, key=0, style=bold];
m21_100 -> m21_101  [key=0, style=solid];
m21_101 -> m21_102  [key=0, style=solid];
m21_101 -> m21_103  [key=2, style=dotted];
m21_101 -> m21_104  [key=2, style=dotted];
m21_102 -> m21_100  [color=blue, key=0, style=bold];
m21_109 -> m21_110  [key=0, style=solid];
m21_109 -> m21_48  [key=2, style=dotted];
m21_109 -> m21_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_108 -> m21_109  [key=0, style=solid];
m21_110 -> m21_108  [color=blue, key=0, style=bold];
m21_111 -> m21_112  [key=0, style=solid];
m21_112 -> m21_113  [key=0, style=solid];
m21_112 -> m21_114  [key=2, style=dotted];
m21_112 -> m21_53  [key=2, style=dotted];
m21_112 -> m21_115  [key=2, style=dotted];
m21_112 -> m21_104  [key=2, style=dotted];
m21_113 -> m21_111  [color=blue, key=0, style=bold];
m21_120 -> m21_121  [key=0, style=solid];
m21_120 -> m21_48  [key=2, style=dotted];
m21_120 -> m21_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_119 -> m21_120  [key=0, style=solid];
m21_121 -> m21_119  [color=blue, key=0, style=bold];
m21_122 -> m21_123  [key=0, style=solid];
m21_123 -> m21_124  [key=0, style=solid];
m21_123 -> m21_125  [key=2, style=dotted];
m21_123 -> m21_104  [key=2, style=dotted];
m21_124 -> m21_122  [color=blue, key=0, style=bold];
m21_129 -> m21_130  [key=0, style=solid];
m21_129 -> m21_148  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m21_129 -> m21_135  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m21_130 -> m21_131  [key=0, style=solid];
m21_130 -> m21_138  [key=2, style=dotted];
m21_130 -> m21_139  [key=2, style=dotted];
m21_130 -> m21_140  [key=2, style=dotted];
m21_130 -> m21_141  [key=2, style=dotted];
m21_130 -> m21_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_130 -> m21_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_130 -> m21_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_130 -> m21_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_130 -> m21_132  [color=darkseagreen4, key=1, label=tuples, style=dashed];
m21_148 -> m21_149  [key=0, style=solid];
m21_148 -> m21_150  [key=2, style=dotted];
m21_135 -> m21_132  [key=0, style=solid];
m21_135 -> m21_145  [key=2, style=dotted];
m21_135 -> m21_146  [key=2, style=dotted];
m21_135 -> m21_93  [key=2, style=dotted];
m21_131 -> m21_132  [key=0, style=solid];
m21_131 -> m21_142  [key=2, style=dotted];
m21_131 -> m21_135  [color=darkseagreen4, key=1, label=result, style=dashed];
m21_131 -> m21_136  [color=darkseagreen4, key=1, label=result, style=dashed];
m21_147 -> m21_148  [key=0, style=solid];
m21_151 -> m21_152  [key=0, style=solid];
m21_155 -> m21_156  [key=0, style=solid];
m21_158 -> m21_159  [key=0, style=solid];
m21_132 -> m21_133  [key=0, style=solid];
m21_132 -> m21_136  [key=0, style=solid];
m21_132 -> m21_134  [color=darkseagreen4, key=1, label=tuple, style=dashed];
m21_132 -> m21_135  [color=darkseagreen4, key=1, label=tuple, style=dashed];
m21_136 -> m21_137  [key=0, style=solid];
m21_133 -> m21_134  [key=0, style=solid];
m21_133 -> m21_143  [key=2, style=dotted];
m21_133 -> m21_135  [color=darkseagreen4, key=1, label=enqueuedJobIds, style=dashed];
m21_134 -> m21_135  [key=0, style=solid];
m21_134 -> m21_144  [key=2, style=dotted];
m21_137 -> m21_129  [color=blue, key=0, style=bold];
m21_149 -> m21_147  [color=blue, key=0, style=bold];
m21_152 -> m21_153  [key=0, style=solid];
m21_152 -> m21_154  [key=2, style=dotted];
m21_153 -> m21_151  [color=blue, key=0, style=bold];
m21_156 -> m21_157  [key=0, style=solid];
m21_157 -> m21_155  [color=blue, key=0, style=bold];
m21_159 -> m21_160  [key=0, style=solid];
m21_160 -> m21_158  [color=blue, key=0, style=bold];
m21_165 -> m21_166  [key=0, style=solid];
m21_165 -> m21_20  [key=2, style=dotted];
m21_166 -> m21_167  [key=0, style=solid];
m21_166 -> m21_169  [key=2, style=dotted];
m21_164 -> m21_165  [key=0, style=solid];
m21_164 -> m21_167  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m21_167 -> m21_168  [key=0, style=solid];
m21_167 -> m21_170  [key=2, style=dotted];
m21_168 -> m21_164  [color=blue, key=0, style=bold];
m21_175 -> m21_176  [key=0, style=solid];
m21_175 -> m21_20  [key=2, style=dotted];
m21_176 -> m21_177  [key=0, style=solid];
m21_176 -> m21_179  [key=2, style=dotted];
m21_174 -> m21_175  [key=0, style=solid];
m21_174 -> m21_177  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m21_177 -> m21_178  [key=0, style=solid];
m21_177 -> m21_180  [key=2, style=dotted];
m21_178 -> m21_174  [color=blue, key=0, style=bold];
m21_184 -> m21_185  [key=0, style=solid];
m21_185 -> m21_186  [key=0, style=solid];
m21_185 -> m21_187  [key=2, style=dotted];
m21_186 -> m21_184  [color=blue, key=0, style=bold];
m21_191 -> m21_192  [key=0, style=solid];
m21_192 -> m21_193  [key=0, style=solid];
m21_192 -> m21_187  [key=2, style=dotted];
m21_193 -> m21_191  [color=blue, key=0, style=bold];
m21_199 -> m21_200  [key=0, style=solid];
m21_199 -> m21_207  [key=2, style=dotted];
m21_199 -> m21_203  [color=darkseagreen4, key=1, label=multi, style=dashed];
m21_199 -> m21_204  [color=darkseagreen4, key=1, label=multi, style=dashed];
m21_197 -> m21_198  [key=0, style=solid];
m21_197 -> m21_199  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m21_198 -> m21_199  [key=0, style=solid];
m21_200 -> m21_201  [key=0, style=solid];
m21_200 -> m21_81  [key=2, style=dotted];
m21_200 -> m21_208  [key=2, style=dotted];
m21_200 -> m21_205  [color=darkseagreen4, key=1, label=job, style=dashed];
m21_203 -> m21_204  [key=0, style=solid];
m21_203 -> m21_81  [key=2, style=dotted];
m21_203 -> m21_209  [key=2, style=dotted];
m21_203 -> m21_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_203 -> m21_215  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_203 -> m21_205  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m21_204 -> m21_205  [key=0, style=solid];
m21_204 -> m21_81  [key=2, style=dotted];
m21_204 -> m21_90  [key=2, style=dotted];
m21_204 -> m21_138  [key=2, style=dotted];
m21_204 -> m21_218  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_201 -> m21_202  [key=0, style=solid];
m21_201 -> m21_203  [key=0, style=solid];
m21_205 -> m21_206  [key=0, style=solid];
m21_205 -> m21_210  [key=2, style=dotted];
m21_205 -> m21_211  [key=2, style=dotted];
m21_202 -> m21_206  [key=0, style=solid];
m21_212 -> m21_213  [key=0, style=solid];
m21_215 -> m21_216  [key=0, style=solid];
m21_218 -> m21_219  [key=0, style=solid];
m21_206 -> m21_197  [color=blue, key=0, style=bold];
m21_213 -> m21_214  [key=0, style=solid];
m21_214 -> m21_212  [color=blue, key=0, style=bold];
m21_216 -> m21_217  [key=0, style=solid];
m21_217 -> m21_215  [color=blue, key=0, style=bold];
m21_219 -> m21_220  [key=0, style=solid];
m21_219 -> m21_221  [key=2, style=dotted];
m21_219 -> m21_81  [key=2, style=dotted];
m21_220 -> m21_218  [color=blue, key=0, style=bold];
m21_225 -> m21_226  [key=0, style=solid];
m21_226 -> m21_227  [key=0, style=solid];
m21_226 -> m21_11  [key=2, style=dotted];
m21_227 -> m21_225  [color=blue, key=0, style=bold];
m21_231 -> m21_232  [key=0, style=solid];
m21_232 -> m21_233  [key=0, style=solid];
m21_232 -> m21_11  [key=2, style=dotted];
m21_233 -> m21_231  [color=blue, key=0, style=bold];
m21_237 -> m21_238  [key=0, style=solid];
m21_237 -> m21_240  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m21_237 -> m21_251  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m21_237 -> m21_271  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m21_238 -> m21_239  [key=0, style=solid];
m21_238 -> m21_240  [color=darkseagreen4, key=1, label=sql, style=dashed];
m21_240 -> m21_241  [key=0, style=solid];
m21_240 -> m21_207  [key=2, style=dotted];
m21_240 -> m21_247  [color=darkseagreen4, key=1, label=multi, style=dashed];
m21_240 -> m21_248  [color=darkseagreen4, key=1, label=multi, style=dashed];
m21_240 -> m21_249  [color=darkseagreen4, key=1, label=multi, style=dashed];
m21_240 -> m21_250  [color=darkseagreen4, key=1, label=multi, style=dashed];
m21_251 -> m21_252  [key=0, style=solid];
m21_251 -> m21_258  [key=2, style=dotted];
m21_251 -> m21_259  [key=2, style=dotted];
m21_251 -> m21_270  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_271 -> m21_272  [key=0, style=solid];
m21_271 -> m21_150  [key=2, style=dotted];
m21_271 -> m21_273  [key=2, style=dotted];
m21_239 -> m21_240  [key=0, style=solid];
m21_239 -> m21_254  [key=2, style=dotted];
m21_239 -> m21_243  [color=darkseagreen4, key=1, label=stats, style=dashed];
m21_239 -> m21_244  [color=darkseagreen4, key=1, label=stats, style=dashed];
m21_239 -> m21_245  [color=darkseagreen4, key=1, label=stats, style=dashed];
m21_239 -> m21_246  [color=darkseagreen4, key=1, label=stats, style=dashed];
m21_239 -> m21_247  [color=darkseagreen4, key=1, label=stats, style=dashed];
m21_239 -> m21_248  [color=darkseagreen4, key=1, label=stats, style=dashed];
m21_239 -> m21_249  [color=darkseagreen4, key=1, label=stats, style=dashed];
m21_239 -> m21_250  [color=darkseagreen4, key=1, label=stats, style=dashed];
m21_239 -> m21_251  [color=darkseagreen4, key=1, label=stats, style=dashed];
m21_239 -> m21_252  [color=darkseagreen4, key=1, label=stats, style=dashed];
m21_243 -> m21_244  [key=0, style=solid];
m21_243 -> m21_256  [key=2, style=dotted];
m21_244 -> m21_245  [key=0, style=solid];
m21_244 -> m21_256  [key=2, style=dotted];
m21_245 -> m21_246  [key=0, style=solid];
m21_245 -> m21_256  [key=2, style=dotted];
m21_246 -> m21_247  [key=0, style=solid];
m21_246 -> m21_256  [key=2, style=dotted];
m21_247 -> m21_248  [key=0, style=solid];
m21_247 -> m21_81  [key=2, style=dotted];
m21_247 -> m21_257  [key=2, style=dotted];
m21_248 -> m21_249  [key=0, style=solid];
m21_248 -> m21_81  [key=2, style=dotted];
m21_248 -> m21_208  [key=2, style=dotted];
m21_249 -> m21_250  [key=0, style=solid];
m21_249 -> m21_81  [key=2, style=dotted];
m21_249 -> m21_208  [key=2, style=dotted];
m21_250 -> m21_251  [key=0, style=solid];
m21_250 -> m21_81  [key=2, style=dotted];
m21_250 -> m21_257  [key=2, style=dotted];
m21_252 -> m21_253  [key=0, style=solid];
m21_241 -> m21_242  [key=0, style=solid];
m21_241 -> m21_255  [key=2, style=dotted];
m21_241 -> m21_209  [key=2, style=dotted];
m21_241 -> m21_260  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_241 -> m21_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_241 -> m21_267  [color=darkseagreen4, key=1, label=countByStates, style=dashed];
m21_242 -> m21_243  [key=0, style=solid];
m21_242 -> m21_267  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_242 -> m21_244  [color=darkseagreen4, key=1, label=getCountIfExists, style=dashed];
m21_242 -> m21_245  [color=darkseagreen4, key=1, label=getCountIfExists, style=dashed];
m21_242 -> m21_246  [color=darkseagreen4, key=1, label=getCountIfExists, style=dashed];
m21_260 -> m21_261  [key=0, style=solid];
m21_263 -> m21_264  [key=0, style=solid];
m21_267 -> m21_268  [key=0, style=solid];
m21_267 -> m21_269  [key=2, style=dotted];
m21_270 -> m21_271  [key=0, style=solid];
m21_253 -> m21_237  [color=blue, key=0, style=bold];
m21_261 -> m21_262  [key=0, style=solid];
m21_262 -> m21_260  [color=blue, key=0, style=bold];
m21_264 -> m21_265  [key=0, style=solid];
m21_265 -> m21_263  [color=blue, key=0, style=bold];
m21_266 -> m21_267  [key=0, style=solid];
m21_268 -> m21_266  [color=blue, key=0, style=bold];
m21_272 -> m21_270  [color=blue, key=0, style=bold];
m21_301 -> m21_302  [key=0, style=solid];
m21_301 -> m21_303  [key=2, style=dotted];
m21_301 -> n17  [key=2, style=dotted];
m21_300 -> m21_301  [key=0, style=solid];
m21_305 -> m21_306  [key=0, style=solid];
m21_308 -> m21_309  [key=0, style=solid];
m21_302 -> m21_300  [color=blue, key=0, style=bold];
m21_306 -> m21_307  [key=0, style=solid];
m21_307 -> m21_305  [color=blue, key=0, style=bold];
m21_309 -> m21_310  [key=0, style=solid];
m21_310 -> m21_308  [color=blue, key=0, style=bold];
m21_337 -> m21_338  [key=0, style=solid];
m21_337 -> m21_339  [key=2, style=dotted];
m21_333 -> m21_334  [key=0, style=solid];
m21_336 -> m21_337  [key=0, style=solid];
m21_340 -> m21_341  [key=0, style=solid];
m21_343 -> m21_344  [key=0, style=solid];
m21_334 -> m21_335  [key=0, style=solid];
m21_334 -> m21_303  [key=2, style=dotted];
m21_335 -> m21_333  [color=blue, key=0, style=bold];
m21_338 -> m21_336  [color=blue, key=0, style=bold];
m21_341 -> m21_342  [key=0, style=solid];
m21_342 -> m21_340  [color=blue, key=0, style=bold];
m21_344 -> m21_345  [key=0, style=solid];
m21_345 -> m21_343  [color=blue, key=0, style=bold];
m21_369 -> m21_370  [key=0, style=solid];
m21_369 -> m21_371  [key=2, style=dotted];
m21_369 -> m21_104  [key=2, style=dotted];
m21_370 -> m21_368  [color=blue, key=0, style=bold];
m21_180 -> m21_402  [key=0, style=solid];
m21_180 -> m21_403  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m21_402 -> m21_403  [key=0, style=solid];
m21_403 -> m21_404  [key=0, style=solid];
m21_403 -> m21_81  [key=2, style=dotted];
m21_403 -> m21_90  [key=2, style=dotted];
m21_403 -> m21_405  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m21_404 -> m21_405  [key=0, style=solid];
m21_404 -> m21_409  [key=2, style=dotted];
m21_404 -> m21_406  [color=darkseagreen4, key=1, label=result, style=dashed];
m21_404 -> m21_407  [color=darkseagreen4, key=1, label=result, style=dashed];
m21_405 -> m21_406  [key=0, style=solid];
m21_405 -> m21_407  [key=0, style=solid];
m21_406 -> m21_405  [key=0, style=solid];
m21_406 -> m21_410  [key=2, style=dotted];
m21_406 -> m21_411  [key=2, style=dotted];
m21_406 -> m21_412  [key=2, style=dotted];
m21_406 -> m21_211  [key=2, style=dotted];
m21_406 -> m21_93  [key=2, style=dotted];
m21_407 -> m21_408  [key=0, style=solid];
m21_407 -> m21_401  [key=2, style=dotted];
m21_408 -> m21_180  [color=blue, key=0, style=bold];
m21_171 -> m21_172  [key=0, style=solid];
m21_171 -> m21_175  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_171 -> m21_176  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_172 -> m21_173  [key=0, style=solid];
m21_172 -> m21_7  [key=2, style=dotted];
m21_172 -> m21_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_173 -> m21_171  [color=blue, key=0, style=bold];
m21_42 -> m21_43  [key=0, style=solid];
m21_42 -> m21_46  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_43 -> m21_44  [key=0, style=solid];
m21_43 -> m21_7  [key=2, style=dotted];
m21_43 -> m21_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_44 -> m21_42  [color=blue, key=0, style=bold];
m21_20 -> m21_346  [key=0, style=solid];
m21_20 -> m21_347  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m21_346 -> m21_347  [key=0, style=solid];
m21_346 -> m21_350  [key=2, style=dotted];
m21_347 -> m21_348  [key=0, style=solid];
m21_347 -> m21_150  [key=2, style=dotted];
m21_348 -> m21_349  [key=0, style=solid];
m21_349 -> m21_20  [color=blue, key=0, style=bold];
m21_4 -> m21_5  [key=0, style=solid];
m21_5 -> m21_6  [key=0, style=solid];
m21_5 -> m21_7  [key=2, style=dotted];
m21_5 -> m21_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_6 -> m21_4  [color=blue, key=0, style=bold];
m21_55 -> m21_56  [key=0, style=solid];
m21_55 -> m21_59  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_56 -> m21_57  [key=0, style=solid];
m21_56 -> m21_7  [key=2, style=dotted];
m21_56 -> m21_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_57 -> m21_55  [color=blue, key=0, style=bold];
m21_228 -> m21_229  [key=0, style=solid];
m21_229 -> m21_230  [key=0, style=solid];
m21_229 -> m21_7  [key=2, style=dotted];
m21_229 -> m21_231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_230 -> m21_228  [color=blue, key=0, style=bold];
m21_161 -> m21_162  [key=0, style=solid];
m21_161 -> m21_165  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_161 -> m21_166  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_162 -> m21_163  [key=0, style=solid];
m21_162 -> m21_7  [key=2, style=dotted];
m21_162 -> m21_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_163 -> m21_161  [color=blue, key=0, style=bold];
m21_78 -> m21_79  [key=0, style=solid];
m21_79 -> m21_80  [key=0, style=solid];
m21_79 -> m21_81  [key=2, style=dotted];
m21_79 -> m21_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_80 -> m21_78  [color=blue, key=0, style=bold];
m21_222 -> m21_223  [key=0, style=solid];
m21_223 -> m21_224  [key=0, style=solid];
m21_223 -> m21_7  [key=2, style=dotted];
m21_223 -> m21_225  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_224 -> m21_222  [color=blue, key=0, style=bold];
m21_376 -> m21_377  [key=0, style=solid];
m21_376 -> m21_378  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_377 -> m21_378  [key=0, style=solid];
m21_377 -> m21_383  [key=2, style=dotted];
m21_377 -> m21_379  [color=darkseagreen4, key=1, label=data, style=dashed];
m21_378 -> m21_379  [key=0, style=solid];
m21_379 -> m21_382  [key=0, style=solid];
m21_379 -> m21_384  [key=2, style=dotted];
m21_380 -> m21_381  [key=0, style=solid];
m21_381 -> m21_382  [key=0, style=solid];
m21_382 -> m21_376  [color=blue, key=0, style=bold];
m21_11 -> m21_372  [key=0, style=solid];
m21_11 -> m21_373  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m21_372 -> m21_373  [key=0, style=solid];
m21_373 -> m21_374  [key=0, style=solid];
m21_373 -> m21_81  [key=2, style=dotted];
m21_373 -> m21_257  [key=2, style=dotted];
m21_374 -> m21_375  [key=0, style=solid];
m21_375 -> m21_11  [color=blue, key=0, style=bold];
m21_116 -> m21_117  [key=0, style=solid];
m21_116 -> m21_120  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_117 -> m21_118  [key=0, style=solid];
m21_117 -> m21_7  [key=2, style=dotted];
m21_117 -> m21_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_118 -> m21_116  [color=blue, key=0, style=bold];
m21_12 -> m21_13  [key=0, style=solid];
m21_12 -> m21_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_12 -> m21_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_13 -> m21_14  [key=0, style=solid];
m21_13 -> m21_7  [key=2, style=dotted];
m21_13 -> m21_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_14 -> m21_12  [color=blue, key=0, style=bold];
m21_170 -> m21_363  [key=0, style=solid];
m21_170 -> m21_364  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m21_363 -> m21_364  [key=0, style=solid];
m21_364 -> m21_365  [key=0, style=solid];
m21_364 -> m21_81  [key=2, style=dotted];
m21_364 -> m21_90  [key=2, style=dotted];
m21_365 -> m21_366  [key=0, style=solid];
m21_365 -> m21_367  [key=2, style=dotted];
m21_365 -> m21_368  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_366 -> m21_170  [color=blue, key=0, style=bold];
m21_188 -> m21_189  [key=0, style=solid];
m21_189 -> m21_190  [key=0, style=solid];
m21_189 -> m21_7  [key=2, style=dotted];
m21_189 -> m21_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_190 -> m21_188  [color=blue, key=0, style=bold];
m21_71 -> m21_311  [key=0, style=solid];
m21_71 -> m21_318  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_71 -> m21_337  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_71 -> m21_320  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m21_311 -> m21_312  [key=0, style=solid];
m21_311 -> m21_314  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m21_311 -> m21_315  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m21_311 -> m21_316  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m21_318 -> m21_319  [key=0, style=solid];
m21_318 -> m21_138  [key=2, style=dotted];
m21_318 -> m21_90  [key=2, style=dotted];
m21_318 -> m21_336  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_318 -> m21_320  [color=darkseagreen4, key=1, label=keys, style=dashed];
m21_318 -> m21_321  [color=darkseagreen4, key=1, label=keys, style=dashed];
m21_320 -> m21_321  [key=0, style=solid];
m21_320 -> m21_296  [key=2, style=dotted];
m21_320 -> m21_209  [key=2, style=dotted];
m21_320 -> m21_340  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_320 -> m21_343  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_320 -> m21_322  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m21_320 -> m21_323  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m21_320 -> m21_327  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m21_312 -> m21_313  [key=0, style=solid];
m21_312 -> m21_332  [key=2, style=dotted];
m21_312 -> m21_314  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m21_314 -> m21_315  [key=0, style=solid];
m21_314 -> m21_317  [key=0, style=solid];
m21_315 -> m21_316  [key=0, style=solid];
m21_315 -> m21_93  [key=2, style=dotted];
m21_316 -> m21_314  [key=0, style=solid];
m21_316 -> m21_332  [key=2, style=dotted];
m21_316 -> m21_316  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m21_313 -> m21_314  [key=0, style=solid];
m21_313 -> m21_91  [key=2, style=dotted];
m21_313 -> m21_315  [color=darkseagreen4, key=1, label=dates, style=dashed];
m21_313 -> m21_317  [color=darkseagreen4, key=1, label=dates, style=dashed];
m21_313 -> m21_328  [color=darkseagreen4, key=1, label=dates, style=dashed];
m21_317 -> m21_318  [key=0, style=solid];
m21_317 -> m21_138  [key=2, style=dotted];
m21_317 -> m21_90  [key=2, style=dotted];
m21_317 -> m21_333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_317 -> m21_326  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m21_328 -> m21_329  [key=0, style=solid];
m21_328 -> m21_297  [key=2, style=dotted];
m21_326 -> m21_327  [key=0, style=solid];
m21_326 -> m21_330  [key=0, style=solid];
m21_319 -> m21_320  [key=0, style=solid];
m21_321 -> m21_322  [key=0, style=solid];
m21_321 -> m21_324  [key=0, style=solid];
m21_321 -> m21_323  [color=darkseagreen4, key=1, label=key, style=dashed];
m21_322 -> m21_323  [key=0, style=solid];
m21_322 -> m21_321  [key=0, style=solid];
m21_322 -> m21_269  [key=2, style=dotted];
m21_323 -> m21_321  [key=0, style=solid];
m21_323 -> m21_297  [key=2, style=dotted];
m21_327 -> m21_328  [key=0, style=solid];
m21_327 -> m21_299  [key=2, style=dotted];
m21_324 -> m21_325  [key=0, style=solid];
m21_324 -> m21_298  [key=2, style=dotted];
m21_324 -> m21_328  [color=darkseagreen4, key=1, label=result, style=dashed];
m21_324 -> m21_330  [color=darkseagreen4, key=1, label=result, style=dashed];
m21_325 -> m21_326  [key=0, style=solid];
m21_325 -> m21_327  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_325 -> m21_328  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_325 -> m21_329  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_330 -> m21_331  [key=0, style=solid];
m21_329 -> m21_326  [key=0, style=solid];
m21_329 -> m21_329  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_331 -> m21_71  [color=blue, key=0, style=bold];
m21_126 -> m21_127  [key=0, style=solid];
m21_127 -> m21_128  [key=0, style=solid];
m21_127 -> m21_81  [key=2, style=dotted];
m21_127 -> m21_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_128 -> m21_126  [color=blue, key=0, style=bold];
m21_187 -> m21_274  [key=0, style=solid];
m21_187 -> m21_281  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_187 -> m21_301  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_187 -> m21_283  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m21_274 -> m21_275  [key=0, style=solid];
m21_274 -> m21_278  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m21_274 -> m21_279  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m21_281 -> m21_282  [key=0, style=solid];
m21_281 -> m21_138  [key=2, style=dotted];
m21_281 -> m21_90  [key=2, style=dotted];
m21_281 -> m21_300  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_281 -> m21_283  [color=darkseagreen4, key=1, label=keys, style=dashed];
m21_281 -> m21_284  [color=darkseagreen4, key=1, label=keys, style=dashed];
m21_283 -> m21_284  [key=0, style=solid];
m21_283 -> m21_296  [key=2, style=dotted];
m21_283 -> m21_209  [key=2, style=dotted];
m21_283 -> m21_305  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_283 -> m21_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_283 -> m21_285  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m21_283 -> m21_286  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m21_283 -> m21_290  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m21_275 -> m21_276  [key=0, style=solid];
m21_275 -> m21_91  [key=2, style=dotted];
m21_275 -> m21_278  [color=darkseagreen4, key=1, label=dates, style=dashed];
m21_275 -> m21_281  [color=darkseagreen4, key=1, label=dates, style=dashed];
m21_275 -> m21_289  [color=darkseagreen4, key=1, label=dates, style=dashed];
m21_275 -> m21_291  [color=darkseagreen4, key=1, label=dates, style=dashed];
m21_278 -> m21_279  [key=0, style=solid];
m21_278 -> m21_93  [key=2, style=dotted];
m21_279 -> m21_280  [key=0, style=solid];
m21_279 -> m21_295  [key=2, style=dotted];
m21_279 -> m21_279  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m21_276 -> m21_277  [key=0, style=solid];
m21_276 -> m21_280  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_289 -> m21_290  [key=0, style=solid];
m21_289 -> m21_293  [key=0, style=solid];
m21_291 -> m21_292  [key=0, style=solid];
m21_291 -> m21_297  [key=2, style=dotted];
m21_277 -> m21_278  [key=0, style=solid];
m21_277 -> m21_281  [key=0, style=solid];
m21_280 -> m21_277  [key=0, style=solid];
m21_280 -> m21_280  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_282 -> m21_283  [key=0, style=solid];
m21_284 -> m21_285  [key=0, style=solid];
m21_284 -> m21_287  [key=0, style=solid];
m21_284 -> m21_286  [color=darkseagreen4, key=1, label=key, style=dashed];
m21_285 -> m21_286  [key=0, style=solid];
m21_285 -> m21_284  [key=0, style=solid];
m21_285 -> m21_269  [key=2, style=dotted];
m21_286 -> m21_284  [key=0, style=solid];
m21_286 -> m21_297  [key=2, style=dotted];
m21_290 -> m21_291  [key=0, style=solid];
m21_290 -> m21_299  [key=2, style=dotted];
m21_287 -> m21_288  [key=0, style=solid];
m21_287 -> m21_298  [key=2, style=dotted];
m21_287 -> m21_291  [color=darkseagreen4, key=1, label=result, style=dashed];
m21_287 -> m21_293  [color=darkseagreen4, key=1, label=result, style=dashed];
m21_288 -> m21_289  [key=0, style=solid];
m21_288 -> m21_290  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_288 -> m21_291  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_288 -> m21_292  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_293 -> m21_294  [key=0, style=solid];
m21_292 -> m21_289  [key=0, style=solid];
m21_292 -> m21_292  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_294 -> m21_187  [color=blue, key=0, style=bold];
m21_413 -> m21_1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_2  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_13  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_16  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_23  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_26  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_31  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_34  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_37  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_40  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_43  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_46  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_56  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_59  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_66  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_69  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_73  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_76  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_79  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_95  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_98  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_106  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_109  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_117  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_120  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_127  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_130  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_135  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_162  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_165  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_167  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_172  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_175  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_177  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_182  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_185  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_189  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_192  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_195  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_205  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_223  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_226  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_229  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_232  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_235  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_251  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_346  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_352  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_365  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_387  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_413 -> m21_406  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m21_414 -> m21_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_414 -> m21_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_415 -> m21_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_415 -> m21_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_416 -> m21_46  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_417 -> m21_46  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_418 -> m21_59  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_419 -> m21_59  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_420 -> m21_98  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_421 -> m21_98  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_422 -> m21_109  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_423 -> m21_109  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_424 -> m21_120  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_425 -> m21_120  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_426 -> m21_148  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m21_427 -> m21_165  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_427 -> m21_166  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_428 -> m21_166  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_429 -> m21_166  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_430 -> m21_175  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_430 -> m21_176  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_431 -> m21_176  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_432 -> m21_176  [color=darkseagreen4, key=1, label=int, style=dashed];
m21_433 -> m21_199  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_434 -> m21_267  [color=darkseagreen4, key=1, label=countByStates, style=dashed];
m21_435 -> m21_271  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m21_436 -> m21_301  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_437 -> m21_337  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_150 -> m22_151  [key=0, style=solid];
m22_150 -> m22_153  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m22_150 -> m22_155  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m22_150 -> m22_156  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_151 -> m22_152  [key=0, style=solid];
m22_151 -> m22_153  [key=0, style=solid];
m22_153 -> m22_154  [key=0, style=solid];
m22_153 -> m22_155  [key=0, style=solid];
m22_155 -> m22_156  [key=0, style=solid];
m22_155 -> m22_158  [key=2, style=dotted];
m22_156 -> m22_157  [key=0, style=solid];
m22_156 -> m22_60  [key=2, style=dotted];
m22_156 -> m22_65  [key=2, style=dotted];
m22_152 -> m22_157  [key=0, style=solid];
m22_152 -> m22_8  [key=2, style=dotted];
m22_154 -> m22_157  [key=0, style=solid];
m22_154 -> m22_8  [key=2, style=dotted];
m22_157 -> m22_150  [color=blue, key=0, style=bold];
m22_102 -> m22_103  [key=0, style=solid];
m22_102 -> m22_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_102 -> m22_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_103 -> m22_104  [key=0, style=solid];
m22_103 -> m22_105  [key=0, style=solid];
m22_105 -> m22_106  [key=0, style=solid];
m22_105 -> m22_107  [key=0, style=solid];
m22_107 -> m22_108  [key=0, style=solid];
m22_107 -> m22_62  [key=2, style=dotted];
m22_107 -> m22_82  [key=2, style=dotted];
m22_104 -> m22_108  [key=0, style=solid];
m22_104 -> m22_8  [key=2, style=dotted];
m22_106 -> m22_108  [key=0, style=solid];
m22_106 -> m22_8  [key=2, style=dotted];
m22_108 -> m22_102  [color=blue, key=0, style=bold];
m22_124 -> m22_125  [key=0, style=solid];
m22_124 -> m22_127  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m22_124 -> m22_131  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m22_124 -> m22_132  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_125 -> m22_126  [key=0, style=solid];
m22_125 -> m22_127  [key=0, style=solid];
m22_127 -> m22_128  [key=0, style=solid];
m22_127 -> m22_129  [key=0, style=solid];
m22_131 -> m22_132  [key=0, style=solid];
m22_131 -> m22_133  [key=0, style=solid];
m22_132 -> m22_131  [key=0, style=solid];
m22_132 -> m22_65  [key=2, style=dotted];
m22_132 -> m22_132  [color=darkseagreen4, key=1, label=keyValuePair, style=dashed];
m22_126 -> m22_134  [key=0, style=solid];
m22_126 -> m22_8  [key=2, style=dotted];
m22_128 -> m22_134  [key=0, style=solid];
m22_128 -> m22_8  [key=2, style=dotted];
m22_129 -> m22_130  [key=0, style=solid];
m22_129 -> m22_132  [color=darkseagreen4, key=1, label=sql, style=dashed];
m22_129 -> m22_129  [color=darkorchid, key=3, label="Local variable string sql", style=bold];
m22_130 -> m22_131  [key=0, style=solid];
m22_130 -> m22_135  [key=2, style=dotted];
m22_130 -> m22_133  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m22_133 -> m22_134  [key=0, style=solid];
m22_133 -> m22_136  [key=2, style=dotted];
m22_134 -> m22_124  [color=blue, key=0, style=bold];
m22_85 -> m22_86  [key=0, style=solid];
m22_85 -> m22_89  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_85 -> m22_71  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.StateData GetStateData", style=bold];
m22_86 -> m22_87  [key=0, style=solid];
m22_86 -> m22_88  [key=0, style=solid];
m22_89 -> m22_90  [key=0, style=solid];
m22_89 -> m22_62  [key=2, style=dotted];
m22_89 -> m22_82  [key=2, style=dotted];
m22_89 -> m22_92  [color=darkseagreen4, key=1, label=sqlState, style=dashed];
m22_87 -> m22_93  [key=0, style=solid];
m22_87 -> m22_8  [key=2, style=dotted];
m22_88 -> m22_89  [key=0, style=solid];
m22_88 -> m22_88  [color=darkorchid, key=3, label="Local variable string sql", style=bold];
m22_90 -> m22_91  [key=0, style=solid];
m22_90 -> m22_92  [key=0, style=solid];
m22_92 -> m22_93  [key=0, style=solid];
m22_92 -> m22_94  [key=2, style=dotted];
m22_92 -> m22_62  [key=2, style=dotted];
m22_91 -> m22_93  [key=0, style=solid];
m22_93 -> m22_85  [color=blue, key=0, style=bold];
m22_17 -> m22_18  [key=0, style=solid];
m22_18 -> m22_19  [key=0, style=solid];
m22_18 -> m22_20  [key=2, style=dotted];
m22_18 -> m22_21  [key=2, style=dotted];
m22_19 -> m22_17  [color=blue, key=0, style=bold];
m22_66 -> m22_67  [key=0, style=solid];
m22_66 -> m22_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_66 -> m22_71  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.JobData GetJobData", style=bold];
m22_67 -> m22_68  [key=0, style=solid];
m22_67 -> m22_69  [key=0, style=solid];
m22_70 -> m22_71  [key=0, style=solid];
m22_70 -> m22_62  [key=2, style=dotted];
m22_70 -> m22_82  [key=2, style=dotted];
m22_70 -> m22_73  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m22_70 -> m22_74  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m22_70 -> m22_80  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m22_68 -> m22_81  [key=0, style=solid];
m22_68 -> m22_8  [key=2, style=dotted];
m22_69 -> m22_70  [key=0, style=solid];
m22_69 -> m22_69  [color=darkorchid, key=3, label="Local variable string sql", style=bold];
m22_71 -> m22_72  [key=0, style=solid];
m22_71 -> m22_73  [key=0, style=solid];
m22_73 -> m22_74  [key=0, style=solid];
m22_73 -> m22_62  [key=2, style=dotted];
m22_73 -> m22_77  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m22_74 -> m22_75  [key=0, style=solid];
m22_80 -> m22_81  [key=0, style=solid];
m22_80 -> m22_84  [key=2, style=dotted];
m22_72 -> m22_81  [key=0, style=solid];
m22_77 -> m22_78  [key=0, style=solid];
m22_77 -> m22_80  [key=0, style=solid];
m22_77 -> m22_83  [key=2, style=dotted];
m22_75 -> m22_76  [key=0, style=solid];
m22_75 -> m22_71  [color=darkorchid, key=3, label="Local variable HangFire.Common.Job job", style=bold];
m22_76 -> m22_77  [key=0, style=solid];
m22_76 -> m22_71  [color=darkorchid, key=3, label="Local variable HangFire.Common.JobLoadException loadException", style=bold];
m22_76 -> m22_78  [color=darkorchid, key=3, label="Local variable HangFire.Common.JobLoadException loadException", style=bold];
m22_78 -> m22_79  [key=0, style=solid];
m22_79 -> m22_80  [key=0, style=solid];
m22_81 -> m22_66  [color=blue, key=0, style=bold];
m22_13 -> m22_14  [key=0, style=solid];
m22_14 -> m22_15  [key=0, style=solid];
m22_14 -> m22_16  [key=2, style=dotted];
m22_15 -> m22_13  [color=blue, key=0, style=bold];
m22_22 -> m22_23  [key=0, style=solid];
m22_22 -> m22_25  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m22_22 -> m22_27  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m22_22 -> m22_29  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m22_23 -> m22_24  [key=0, style=solid];
m22_23 -> m22_25  [key=0, style=solid];
m22_25 -> m22_26  [key=0, style=solid];
m22_25 -> m22_31  [key=2, style=dotted];
m22_25 -> m22_32  [key=2, style=dotted];
m22_25 -> m22_33  [key=2, style=dotted];
m22_25 -> m22_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_25 -> m22_28  [color=darkseagreen4, key=1, label=providers, style=dashed];
m22_27 -> m22_30  [key=0, style=solid];
m22_27 -> n15  [key=2, style=dotted];
m22_27 -> m22_35  [key=2, style=dotted];
m22_27 -> m22_21  [key=2, style=dotted];
m22_29 -> m22_30  [key=0, style=solid];
m22_29 -> m22_37  [key=2, style=dotted];
m22_24 -> m22_30  [key=0, style=solid];
m22_24 -> m22_8  [key=2, style=dotted];
m22_26 -> m22_27  [key=0, style=solid];
m22_26 -> m22_28  [key=0, style=solid];
m22_28 -> m22_29  [key=0, style=solid];
m22_28 -> m22_36  [key=2, style=dotted];
m22_30 -> m22_22  [color=blue, key=0, style=bold];
m22_169 -> m22_170  [key=0, style=solid];
m22_170 -> m22_171  [key=0, style=solid];
m22_170 -> m22_172  [key=0, style=solid];
m22_170 -> m22_174  [key=2, style=dotted];
m22_170 -> m22_170  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m22_171 -> m22_173  [key=0, style=solid];
m22_171 -> m22_175  [key=2, style=dotted];
m22_172 -> m22_173  [key=0, style=solid];
m22_172 -> m22_176  [key=2, style=dotted];
m22_172 -> m22_61  [key=2, style=dotted];
m22_172 -> m22_65  [key=2, style=dotted];
m22_172 -> m22_172  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m22_173 -> m22_169  [color=blue, key=0, style=bold];
m22_109 -> m22_110  [key=0, style=solid];
m22_109 -> m22_112  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_110 -> m22_111  [key=0, style=solid];
m22_110 -> m22_112  [key=0, style=solid];
m22_112 -> m22_113  [key=0, style=solid];
m22_112 -> m22_62  [key=2, style=dotted];
m22_111 -> m22_114  [key=0, style=solid];
m22_111 -> m22_8  [key=2, style=dotted];
m22_113 -> m22_114  [key=0, style=solid];
m22_113 -> m22_115  [key=2, style=dotted];
m22_114 -> m22_109  [color=blue, key=0, style=bold];
m22_42 -> m22_43  [key=0, style=solid];
m22_42 -> m22_45  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m22_42 -> m22_48  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m22_42 -> m22_49  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m22_42 -> m22_50  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m22_42 -> m22_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m22_42 -> m22_53  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m22_43 -> m22_44  [key=0, style=solid];
m22_43 -> m22_45  [key=0, style=solid];
m22_45 -> m22_46  [key=0, style=solid];
m22_45 -> m22_47  [key=0, style=solid];
m22_48 -> m22_49  [key=0, style=solid];
m22_48 -> m22_59  [key=2, style=dotted];
m22_49 -> m22_50  [key=0, style=solid];
m22_49 -> m22_60  [key=2, style=dotted];
m22_49 -> m22_61  [key=2, style=dotted];
m22_49 -> m22_62  [key=2, style=dotted];
m22_49 -> m22_63  [key=2, style=dotted];
m22_49 -> m22_64  [key=2, style=dotted];
m22_49 -> m22_54  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m22_49 -> m22_57  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m22_50 -> m22_51  [key=0, style=solid];
m22_50 -> m22_57  [key=0, style=solid];
m22_51 -> m22_52  [key=0, style=solid];
m22_51 -> m22_54  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m22_51 -> m22_56  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m22_53 -> m22_54  [key=0, style=solid];
m22_53 -> m22_55  [key=0, style=solid];
m22_44 -> m22_58  [key=0, style=solid];
m22_44 -> m22_8  [key=2, style=dotted];
m22_46 -> m22_58  [key=0, style=solid];
m22_46 -> m22_8  [key=2, style=dotted];
m22_47 -> m22_48  [key=0, style=solid];
m22_47 -> m22_49  [color=darkseagreen4, key=1, label=createJobSql, style=dashed];
m22_47 -> m22_47  [color=darkorchid, key=3, label="Local variable string createJobSql", style=bold];
m22_54 -> m22_53  [key=0, style=solid];
m22_54 -> m22_54  [color=darkseagreen4, key=1, label=parameterIndex, style=dashed];
m22_57 -> m22_58  [key=0, style=solid];
m22_52 -> m22_53  [key=0, style=solid];
m22_52 -> m22_54  [color=darkseagreen4, key=1, label=parameterIndex, style=dashed];
m22_52 -> m22_52  [color=darkorchid, key=3, label="Local variable int parameterIndex", style=bold];
m22_56 -> m22_57  [key=0, style=solid];
m22_56 -> m22_65  [key=2, style=dotted];
m22_55 -> m22_56  [key=0, style=solid];
m22_55 -> m22_55  [color=darkorchid, key=3, label="Local variable string insertParameterSql", style=bold];
m22_58 -> m22_42  [color=blue, key=0, style=bold];
m22_9 -> m22_10  [key=0, style=solid];
m22_10 -> m22_11  [key=0, style=solid];
m22_10 -> m22_12  [key=2, style=dotted];
m22_11 -> m22_9  [color=blue, key=0, style=bold];
m22_147 -> m22_148  [key=0, style=solid];
m22_38 -> m22_39  [key=0, style=solid];
m22_39 -> m22_40  [key=0, style=solid];
m22_39 -> m22_41  [key=2, style=dotted];
m22_40 -> m22_38  [color=blue, key=0, style=bold];
m22_144 -> m22_145  [key=0, style=solid];
m22_145 -> m22_146  [key=0, style=solid];
m22_146 -> m22_144  [color=blue, key=0, style=bold];
m22_148 -> m22_149  [key=0, style=solid];
m22_149 -> m22_147  [color=blue, key=0, style=bold];
m22_95 -> m22_96  [key=0, style=solid];
m22_95 -> m22_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_95 -> m22_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_96 -> m22_97  [key=0, style=solid];
m22_96 -> m22_98  [key=0, style=solid];
m22_98 -> m22_99  [key=0, style=solid];
m22_98 -> m22_100  [key=0, style=solid];
m22_100 -> m22_101  [key=0, style=solid];
m22_100 -> m22_65  [key=2, style=dotted];
m22_97 -> m22_101  [key=0, style=solid];
m22_97 -> m22_8  [key=2, style=dotted];
m22_99 -> m22_101  [key=0, style=solid];
m22_99 -> m22_8  [key=2, style=dotted];
m22_101 -> m22_95  [color=blue, key=0, style=bold];
m22_116 -> m22_117  [key=0, style=solid];
m22_116 -> m22_119  [color=darkseagreen4, key=1, label=double, style=dashed];
m22_116 -> m22_121  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_117 -> m22_118  [key=0, style=solid];
m22_117 -> m22_119  [key=0, style=solid];
m22_119 -> m22_120  [key=0, style=solid];
m22_119 -> m22_121  [key=0, style=solid];
m22_121 -> m22_122  [key=0, style=solid];
m22_121 -> m22_62  [key=2, style=dotted];
m22_121 -> m22_82  [key=2, style=dotted];
m22_118 -> m22_122  [key=0, style=solid];
m22_118 -> m22_8  [key=2, style=dotted];
m22_120 -> m22_122  [key=0, style=solid];
m22_120 -> m22_123  [key=2, style=dotted];
m22_122 -> m22_116  [color=blue, key=0, style=bold];
m22_137 -> m22_138  [key=0, style=solid];
m22_137 -> m22_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_138 -> m22_139  [key=0, style=solid];
m22_138 -> m22_140  [key=0, style=solid];
m22_140 -> m22_141  [key=0, style=solid];
m22_140 -> m22_62  [key=2, style=dotted];
m22_140 -> m22_143  [key=2, style=dotted];
m22_140 -> m22_144  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_140 -> m22_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_139 -> m22_142  [key=0, style=solid];
m22_139 -> m22_8  [key=2, style=dotted];
m22_141 -> m22_142  [key=0, style=solid];
m22_142 -> m22_137  [color=blue, key=0, style=bold];
m22_159 -> m22_160  [key=0, style=solid];
m22_159 -> m22_162  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_160 -> m22_161  [key=0, style=solid];
m22_160 -> m22_162  [key=0, style=solid];
m22_162 -> m22_163  [key=0, style=solid];
m22_162 -> m22_65  [key=2, style=dotted];
m22_161 -> m22_163  [key=0, style=solid];
m22_161 -> m22_8  [key=2, style=dotted];
m22_163 -> m22_159  [color=blue, key=0, style=bold];
m22_164 -> m22_165  [key=0, style=solid];
m22_164 -> m22_167  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_165 -> m22_166  [key=0, style=solid];
m22_165 -> m22_167  [key=0, style=solid];
m22_167 -> m22_168  [key=0, style=solid];
m22_167 -> m22_65  [key=2, style=dotted];
m22_166 -> m22_168  [key=0, style=solid];
m22_166 -> m22_8  [key=2, style=dotted];
m22_168 -> m22_164  [color=blue, key=0, style=bold];
m22_0 -> m22_1  [key=0, style=solid];
m22_0 -> m22_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.PersistentJobQueueProviderCollection", style=dashed];
m22_0 -> m22_5  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m22_0 -> m22_6  [color=darkseagreen4, key=1, label="HangFire.SqlServer.PersistentJobQueueProviderCollection", style=dashed];
m22_1 -> m22_2  [key=0, style=solid];
m22_1 -> m22_3  [key=0, style=solid];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_5  [key=0, style=solid];
m22_5 -> m22_6  [key=0, style=solid];
m22_6 -> m22_7  [key=0, style=solid];
m22_2 -> m22_7  [key=0, style=solid];
m22_2 -> m22_8  [key=2, style=dotted];
m22_4 -> m22_7  [key=0, style=solid];
m22_4 -> m22_8  [key=2, style=dotted];
m22_7 -> m22_0  [color=blue, key=0, style=bold];
m22_177 -> m22_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m22_177 -> m22_6  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m22_177 -> m22_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m22_177 -> m22_14  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m22_177 -> m22_18  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m22_177 -> m22_25  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m22_177 -> m22_39  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m22_177 -> m22_28  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m22_177 -> m22_49  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m22_177 -> m22_56  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m22_177 -> m22_70  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m22_177 -> m22_89  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m22_177 -> m22_100  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m22_177 -> m22_107  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m22_177 -> m22_112  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m22_177 -> m22_121  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m22_177 -> m22_132  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m22_177 -> m22_140  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m22_177 -> m22_156  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m22_177 -> m22_162  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m22_177 -> m22_167  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m22_177 -> m22_172  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
}
