digraph  {
n5 [label="Hangfire.Server.ServerWatchdogOptions", span=""];
n0 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", label="Entry Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="22-22"];
n1 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", label="ServerTimeout = TimeSpan.FromMinutes(5)", span="24-24"];
n2 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", label="CheckInterval = TimeSpan.FromMinutes(5)", span="25-25"];
n4 [cluster="System.TimeSpan.FromMinutes(double)", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
n3 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", label="Exit Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="22-22"];
d49 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", color=green, community=0, label="Release(_connection, _resource)", prediction=0, span="123-123"];
d97 [label="Hangfire.SqlServer.SqlServerDistributedLock", span=""];
d48 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", label="_timer?.Dispose()", span="121-121"];
d50 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="100-100"];
d53 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", span="212-212"];
d62 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0, label="var lockTimeout = (long) Math.Min(LockTimeout.TotalMilliseconds, timeout.TotalMilliseconds)", prediction=1, span="176-176"];
d33 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", span="153-153"];
d61 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0, label="var started = Stopwatch.StartNew()", prediction=2, span="165-165"];
d76 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", label="started.Elapsed < timeout", span="207-207"];
d63 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0, label="var parameters = new DynamicParameters()", prediction=1, span="180-180"];
d81 [cluster="System.Math.Min(double, double)", label="Entry System.Math.Min(double, double)", span="0-0"];
d70 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0, label="connection.Execute(\r\n                    @''sp_getapplock'',\r\n                    parameters,\r\n                    commandTimeout: (int) (lockTimeout / 1000) + 5,\r\n                    commandType: CommandType.StoredProcedure)", prediction=1, span="188-192"];
d64 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0, label="parameters.Add(''@Resource'', resource)", prediction=1, span="181-181"];
d65 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0, label="parameters.Add(''@DbPrincipal'', ''public'')", prediction=1, span="182-182"];
d83 [cluster="Unk.Add", label="Entry Unk.Add", span=""];
d69 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="186-186"];
d71 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", label="var lockResult = parameters.Get<int>(''@Result'')", span="194-194"];
d58 [cluster="Unk.Execute", label="Entry Unk.Execute", span=""];
d60 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0, label="throw new InvalidOperationException(''Connection must be open before acquiring a distributed lock.'');", prediction=7, span="162-162"];
d59 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", label="connection.State != ConnectionState.Open", span="155-155"];
d78 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", span="153-153"];
d79 [cluster="System.InvalidOperationException.InvalidOperationException(string)", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
d80 [cluster="System.Diagnostics.Stopwatch.StartNew()", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
d82 [cluster="DynamicParameters.cstr", label="Entry DynamicParameters.cstr", span=""];
d66 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0, label="parameters.Add(''@LockMode'', LockMode)", prediction=1, span="183-183"];
d67 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0, label="parameters.Add(''@LockOwner'', LockOwner)", prediction=1, span="184-184"];
d68 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0, label="parameters.Add(''@LockTimeout'', LockTimeout.TotalMilliseconds)", prediction=1, span="185-185"];
d88 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", color=green, community=0, label="var parameters = new DynamicParameters()", prediction=11, span="214-214"];
d89 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", label="parameters.Add(''@Resource'', resource)", span="215-215"];
d90 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", label="parameters.Add(''@LockOwner'', LockOwner)", span="216-216"];
d91 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="217-217"];
d92 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", label="connection.Execute(\r\n                @''sp_releaseapplock'',\r\n                parameters,\r\n                commandType: CommandType.StoredProcedure)", span="219-222"];
d93 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", label="var releaseResult = parameters.Get<int>(''@Result'')", span="224-224"];
d13 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", label="_storage = storage", span="70-70"];
d14 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", label="_resource = resource", span="71-71"];
d15 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", label="!AcquiredLocks.Value.ContainsKey(_resource) || AcquiredLocks.Value[_resource] == 0", span="73-73"];
d16 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", label="_connection = storage.CreateAndOpenConnection()", span="75-75"];
d17 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", label="Acquire(_connection, _resource, timeout)", span="79-79"];
d19 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", label="storage.ReleaseConnection(_connection)", span="83-83"];
d21 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", label="!_storage.IsExistingConnection(_connection)", span="87-87"];
d22 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", label="_timer = new Timer(ExecuteKeepAliveQuery, null, KeepAliveInterval, KeepAliveInterval)", span="89-89"];
d23 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", label="AcquiredLocks.Value[_resource] = 1", span="92-92"];
d24 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", label="AcquiredLocks.Value[_resource]++", span="96-96"];
d38 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", label=_completed, span="102-102"];
d40 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", label="_completed = true", span="104-104"];
d41 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", label="!AcquiredLocks.Value.ContainsKey(_resource)", span="106-106"];
d43 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", label="AcquiredLocks.Value[_resource]--", span="108-108"];
d44 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", label="AcquiredLocks.Value[_resource] != 0", span="110-110"];
d46 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", label=_lockObject, span="112-112"];
d47 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", label="AcquiredLocks.Value.Remove(_resource)", span="119-119"];
d55 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", label=_lockObject, span="135-135"];
d56 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", label="_connection?.Execute(''SELECT 1;'')", span="139-139"];
d52 [cluster="System.Threading.Timer.Dispose()", label="Entry System.Threading.Timer.Dispose()", span="0-0"];
d39 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", label="return;", span="102-102"];
d42 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", label="return;", span="106-106"];
d45 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", label="return;", span="110-110"];
d37 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="100-100"];
d96 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", span="212-212"];
d95 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", label="throw new SqlServerDistributedLockException(\r\n                    $''Could not release a lock on the resource '{resource}': Server returned the '{releaseResult}' error.'');", span="228-229"];
d75 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", label="throw new SqlServerDistributedLockException(\r\n                        $''Could not place a lock on the resource '{resource}': {(LockErrorMessages.ContainsKey(lockResult) ? LockErrorMessages[lockResult] : $''Server returned the '{lockResult}' error.'')}.'');", span="204-205"];
d77 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", label="throw new DistributedLockTimeoutException(resource);", span="209-209"];
d4 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="61-61"];
d74 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", label="lockResult == -999", span="202-202"];
d72 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", label="lockResult >= 0", span="196-196"];
d84 [cluster="Unk.>", label="Entry Unk.>", span=""];
d73 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", label="return;", span="199-199"];
d94 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", label="releaseResult < 0", span="226-226"];
d11 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", label="timeout.TotalMilliseconds > Int32.MaxValue", span="67-67"];
d31 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
d32 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", label="Entry Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="232-232"];
d18 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", label=Exception, span="81-81"];
d20 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", label="throw;", span="84-84"];
d34 [cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", label="Entry Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="249-249"];
d35 [cluster="Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", label="Entry Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", span="244-244"];
d36 [cluster="System.Threading.Timer.Timer(System.Threading.TimerCallback, object, System.TimeSpan, System.TimeSpan)", label="Entry System.Threading.Timer.Timer(System.Threading.TimerCallback, object, System.TimeSpan, System.TimeSpan)", span="0-0"];
d25 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="61-61"];
d51 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
d54 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", span="133-133"];
d57 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", span="133-133"];
d85 [cluster="Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", label="Entry Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", span="22-22"];
d86 [cluster="Unk.ContainsKey", label="Entry Unk.ContainsKey", span=""];
d87 [cluster="Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", label="Entry Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", span="6-6"];
d5 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", label="storage == null", span="63-63"];
d6 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", label="throw new ArgumentNullException(nameof(storage));", span="63-63"];
d7 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", label="String.IsNullOrEmpty(resource)", span="64-64"];
d8 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", label="throw new ArgumentNullException(nameof(resource));", span="64-64"];
d9 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", label="timeout.TotalSeconds + CommandTimeoutAdditionSeconds > Int32.MaxValue", span="65-65"];
d12 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", label="throw new ArgumentException(\r\n                $''The timeout specified is too large. Please supply a timeout equal to or less than {(int)TimeSpan.FromMilliseconds(Int32.MaxValue).TotalSeconds} seconds'', nameof(timeout));", span="67-68"];
d10 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", label="throw new ArgumentException(\r\n                $''The timeout specified is too large. Please supply a timeout equal to or less than {Int32.MaxValue - CommandTimeoutAdditionSeconds} seconds'', nameof(timeout));", span="65-66"];
d26 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
d27 [cluster="Unk.nameof", label="Entry Unk.nameof", span=""];
d28 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
d29 [cluster="System.ArgumentException.ArgumentException(string, string)", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
d30 [cluster="System.TimeSpan.FromMilliseconds(double)", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
d97 -> d49  [color=green, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
d97 -> d15  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
d97 -> d17  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
d97 -> d19  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
d97 -> d21  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
d97 -> d24  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
d97 -> d38  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
d97 -> d41  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
d97 -> d43  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
d97 -> d44  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
d97 -> d46  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
d97 -> d47  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
d97 -> d48  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
d97 -> d55  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
d97 -> d56  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
d53 -> d89  [color=darkseagreen4, key=1, label=string, style=dashed];
d53 -> d92  [color=darkseagreen4, key=1, label=IDbConnection, style=dashed];
d53 -> d95  [color=darkseagreen4, key=1, label=string, style=dashed];
d62 -> d70  [color=green, key=1, label=lockTimeout, style=dashed];
d62 -> d76  [color=green, key=1, label="System.TimeSpan", style=dashed];
d33 -> d64  [color=green, key=1, label=string, style=dashed];
d33 -> d70  [color=green, key=1, label=IDbConnection, style=dashed];
d33 -> d75  [color=darkseagreen4, key=1, label=string, style=dashed];
d33 -> d77  [color=darkseagreen4, key=1, label=string, style=dashed];
d61 -> d76  [color=green, key=1, label=started, style=dashed];
d63 -> d70  [color=green, key=1, label=parameters, style=dashed];
d63 -> d65  [color=green, key=1, label=parameters, style=dashed];
d63 -> d66  [color=green, key=1, label=parameters, style=dashed];
d63 -> d67  [color=green, key=1, label=parameters, style=dashed];
d63 -> d68  [color=green, key=1, label=parameters, style=dashed];
d63 -> d69  [color=green, key=1, label=parameters, style=dashed];
d71 -> d74  [color=darkseagreen4, key=1, label=lockResult, style=dashed];
d71 -> d75  [color=darkseagreen4, key=1, label=lockResult, style=dashed];
d88 -> d90  [color=green, key=1, label=parameters, style=dashed];
d88 -> d91  [color=green, key=1, label=parameters, style=dashed];
d88 -> d92  [color=green, key=1, label=parameters, style=dashed];
d93 -> d95  [color=darkseagreen4, key=1, label=releaseResult, style=dashed];
d4 -> d19  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
d4 -> d6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
d4 -> d7  [color=darkseagreen4, key=1, label=string, style=dashed];
d4 -> d8  [color=darkseagreen4, key=1, label=string, style=dashed];
d4 -> d9  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
d11 -> d17  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
d11 -> d11  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
d9 -> d9  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
}
