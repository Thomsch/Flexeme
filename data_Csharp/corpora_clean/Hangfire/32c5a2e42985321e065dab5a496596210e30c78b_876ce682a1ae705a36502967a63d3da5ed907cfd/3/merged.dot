digraph  {
n7 [label="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint", span=""];
n0 [label="Entry HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.DefaultExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="16-16", cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.DefaultExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)"];
n1 [label="Exit HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.DefaultExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="16-16", cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.DefaultExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)"];
n2 [label="Entry HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)", span="23-23", cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)"];
n3 [label="DefaultExpressionFingerprint other = obj as DefaultExpressionFingerprint", span="25-25", cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)"];
n4 [label="return (other != null)\r\n                   && this.Equals(other);", span="26-27", cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)"];
n5 [label="Exit HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)", span="23-23", cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)"];
n6 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)"];
m0_15 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BackgroundJob.cs"];
m0_31 [label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28", cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="BackgroundJob.cs"];
m0_66 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="BackgroundJob.cs"];
m0_81 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="BackgroundJob.cs"];
m0_30 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()", file="BackgroundJob.cs"];
m0_83 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="BackgroundJob.cs"];
m0_38 [label="Entry Hangfire.Server.RecurringJobScheduler.ToString()", span="100-100", cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="BackgroundJob.cs"];
m0_39 [label="return GetType().Name;", span="102-102", cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="BackgroundJob.cs"];
m0_40 [label="Exit Hangfire.Server.RecurringJobScheduler.ToString()", span="100-100", cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="BackgroundJob.cs"];
m0_75 [label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87", cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="BackgroundJob.cs"];
m0_70 [label="Entry Unk._instantFactory", span="", cluster="Unk._instantFactory", file="BackgroundJob.cs"];
m0_73 [label="Entry Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime?)", span="25-25", cluster="Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime?)", file="BackgroundJob.cs"];
m0_82 [label="Entry Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="61-61", cluster="Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="BackgroundJob.cs"];
m0_41 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="BackgroundJob.cs"];
m0_33 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="BackgroundJob.cs"];
m0_2 [label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess)", span="43-43", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess)", file="BackgroundJob.cs"];
m0_3 [label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess)", span="43-43", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess)", file="BackgroundJob.cs"];
m0_68 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="BackgroundJob.cs"];
m0_0 [label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="38-38", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="BackgroundJob.cs"];
m0_1 [label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="38-38", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="BackgroundJob.cs"];
m0_36 [label="Entry Hangfire.Logging.ILog.WarnException(string, System.Exception)", span="278-278", cluster="Hangfire.Logging.ILog.WarnException(string, System.Exception)", file="BackgroundJob.cs"];
m0_69 [label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0", cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="BackgroundJob.cs"];
m0_74 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="BackgroundJob.cs"];
m0_77 [label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="37-37", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="BackgroundJob.cs"];
m0_78 [label="Entry Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", span="32-32", cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="BackgroundJob.cs"];
m0_67 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="BackgroundJob.cs"];
m0_29 [label="Entry Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", span="22-22", cluster="Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", file="BackgroundJob.cs"];
m0_72 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BackgroundJob.cs"];
m0_80 [label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68", cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="BackgroundJob.cs"];
m0_65 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="BackgroundJob.cs"];
m0_76 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="BackgroundJob.cs"];
m0_71 [label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73", cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="BackgroundJob.cs"];
m0_16 [label="Entry Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="63-63", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJob.cs"];
m0_17 [label="_throttler.Throttle(context.CancellationToken)", span="65-65", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJob.cs"];
m0_18 [label="var connection = context.Storage.GetConnection()", span="67-67", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJob.cs"];
m0_24 [label="TryScheduleJob(context.Storage, connection, recurringJobId, recurringJob)", span="84-84", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJob.cs"];
m0_27 [label="_throttler.Delay(context.CancellationToken)", span="96-96", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJob.cs"];
m0_19 [label="connection.AcquireDistributedLock(''recurring-jobs:lock'', LockTimeout)", span="68-68", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJob.cs"];
m0_20 [label="var recurringJobIds = connection.GetAllItemsFromSet(''recurring-jobs'')", span="70-70", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJob.cs"];
m0_22 [label="var recurringJob = connection.GetAllEntriesFromHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId))", span="74-75", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJob.cs"];
m0_21 [label=recurringJobIds, span="72-72", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJob.cs"];
m0_26 [label="Logger.WarnException(\r\n                            String.Format(\r\n                                ''Recurring job '{0}' can not be scheduled due to job load exception.'',\r\n                                recurringJobId),\r\n                            ex)", span="88-92", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJob.cs"];
m0_23 [label="recurringJob == null", span="77-77", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJob.cs"];
m0_25 [label=JobLoadException, span="86-86", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJob.cs"];
m0_28 [label="Exit Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="63-63", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJob.cs"];
m0_37 [label="Entry Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", span="23-23", cluster="Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", file="BackgroundJob.cs"];
m0_32 [label="Entry Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55", cluster="Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="BackgroundJob.cs"];
m0_35 [label="Entry Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", span="105-105", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_42 [label="var serializedJob = JobHelper.FromJson<InvocationData>(recurringJob[''Job''])", span="111-111", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_44 [label="var cron = recurringJob[''Cron'']", span="113-113", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_46 [label="var timeZone = recurringJob.ContainsKey(''TimeZoneId'')\r\n                    ? TimeZoneInfo.FindSystemTimeZoneById(recurringJob[''TimeZoneId''])\r\n                    : TimeZoneInfo.Utc", span="118-120", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_48 [label="var lastExecutionTime = recurringJob.ContainsKey(''LastExecution'')\r\n                    ? JobHelper.DeserializeDateTime(recurringJob[''LastExecution''])\r\n                    : (DateTime?)null", span="124-126", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_52 [label="recurringJob.ContainsKey(''Queue'') && !String.IsNullOrEmpty(recurringJob[''Queue''])", span="133-133", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_53 [label="state.Queue = recurringJob[''Queue'']", span="135-135", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_54 [label="var context = new CreateContext(storage, connection, job, state)", span="138-138", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_57 [label="Logger.DebugFormat(\r\n                            ''Recurring job '{0}' execution at '{1}' has been canceled.'',\r\n                            recurringJobId,\r\n                            instant.NowInstant)", span="143-146", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_61 [label="connection.SetRangeInHash(\r\n                    String.Format(''recurring-job:{0}'', recurringJobId),\r\n                    changedFields)", span="155-157", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_63 [label="Logger.ErrorException(\r\n                    String.Format(''Recurring job '{0}' was not triggered: {1}.'', recurringJobId, ex.Message),\r\n                    ex)", span="161-163", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_43 [label="var job = serializedJob.Deserialize()", span="112-112", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_45 [label="var cronSchedule = CrontabSchedule.Parse(cron)", span="114-114", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_47 [label="var instant = _instantFactory(cronSchedule, timeZone)", span="122-122", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_50 [label="instant.GetNextInstants(lastExecutionTime).Any()", span="130-130", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_58 [label="changedFields.Add(''LastExecution'', JobHelper.SerializeDateTime(instant.NowInstant))", span="149-149", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_60 [label="changedFields.Add(''NextExecution'', JobHelper.SerializeDateTime(instant.NextInstant))", span="153-153", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_49 [label="var changedFields = new Dictionary<string, string>()", span="128-128", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_59 [label="changedFields.Add(''LastJobId'', jobId ?? String.Empty)", span="150-150", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_51 [label="var state = new EnqueuedState { Reason = ''Triggered by recurring job scheduler'' }", span="132-132", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_55 [label="var jobId = _creationProcess.Run(context)", span="139-139", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_56 [label="String.IsNullOrEmpty(jobId)", span="141-141", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_62 [label=TimeZoneNotFoundException, span="159-159", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_64 [label="Exit Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", span="105-105", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="BackgroundJob.cs"];
m0_34 [label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64", cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="BackgroundJob.cs"];
m0_79 [label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122", cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="BackgroundJob.cs"];
m0_84 [label="Entry Hangfire.Logging.ILog.ErrorException(string, System.Exception)", span="159-159", cluster="Hangfire.Logging.ILog.ErrorException(string, System.Exception)", file="BackgroundJob.cs"];
m0_4 [label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", span="49-49", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="BackgroundJob.cs"];
m0_5 [label="creationProcess == null", span="54-54", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="BackgroundJob.cs"];
m0_7 [label="instantFactory == null", span="55-55", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="BackgroundJob.cs"];
m0_9 [label="throttler == null", span="56-56", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="BackgroundJob.cs"];
m0_11 [label="_creationProcess = creationProcess", span="58-58", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="BackgroundJob.cs"];
m0_12 [label="_instantFactory = instantFactory", span="59-59", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="BackgroundJob.cs"];
m0_13 [label="_throttler = throttler", span="60-60", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="BackgroundJob.cs"];
m0_6 [label="throw new ArgumentNullException(''creationProcess'');", span="54-54", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="BackgroundJob.cs"];
m0_8 [label="throw new ArgumentNullException(''instantFactory'');", span="55-55", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="BackgroundJob.cs"];
m0_10 [label="throw new ArgumentNullException(''throttler'');", span="56-56", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="BackgroundJob.cs"];
m0_14 [label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", span="49-49", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IJobCreationProcess, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="BackgroundJob.cs"];
m0_85 [label="Hangfire.Server.RecurringJobScheduler", span="", file="BackgroundJob.cs"];
m1_13 [label="Entry HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", span="27-27", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", file="BackgroundJobServer.cs"];
m1_7 [label="Entry HangFire.BackgroundJobServer.Start()", span="42-42", cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m1_8 [label="_server != null", span="44-44", cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m1_10 [label="_server = new JobServer(MachineName, WorkerPools, PollInterval, JobActivator)", span="49-49", cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m1_9 [label="throw new InvalidOperationException(''Background job server has already been started. Please stop it first.'');", span="46-46", cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m1_11 [label="Exit HangFire.BackgroundJobServer.Start()", span="42-42", cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m1_0 [label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(params HangFire.Server.WorkerPool[])", span="14-14", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params HangFire.Server.WorkerPool[])", file="BackgroundJobServer.cs"];
m1_1 [label="MachineName = Environment.MachineName", span="16-16", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params HangFire.Server.WorkerPool[])", color=green, community=0, file="BackgroundJobServer.cs"];
m1_2 [label="PollInterval = TimeSpan.FromSeconds(15)", span="17-17", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params HangFire.Server.WorkerPool[])", color=green, community=0, file="BackgroundJobServer.cs"];
m1_3 [label="WorkerPools = workerPools ?? new[] { new WorkerPool() }", span="18-18", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params HangFire.Server.WorkerPool[])", color=green, community=0, file="BackgroundJobServer.cs"];
m1_4 [label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(params HangFire.Server.WorkerPool[])", span="14-14", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params HangFire.Server.WorkerPool[])", file="BackgroundJobServer.cs"];
m1_6 [label="Entry HangFire.Server.WorkerPool.WorkerPool()", span="6-6", cluster="HangFire.Server.WorkerPool.WorkerPool()", file="BackgroundJobServer.cs"];
m1_22 [label="Entry HangFire.BackgroundJobServer.System.IDisposable.Dispose()", span="68-68", cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", file="BackgroundJobServer.cs"];
m1_23 [label="Stop()", span="70-70", cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", file="BackgroundJobServer.cs"];
m1_24 [label="Exit HangFire.BackgroundJobServer.System.IDisposable.Dispose()", span="68-68", cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", file="BackgroundJobServer.cs"];
m1_5 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="BackgroundJobServer.cs"];
m1_21 [label="Entry HangFire.Server.JobServer.Dispose()", span="58-58", cluster="HangFire.Server.JobServer.Dispose()", file="BackgroundJobServer.cs"];
m1_14 [label="Entry HangFire.BackgroundJobServer.Stop()", span="56-56", cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m1_15 [label="_server != null", span="58-58", cluster="HangFire.BackgroundJobServer.Stop()", color=green, community=0, file="BackgroundJobServer.cs"];
m1_16 [label="_server.Dispose()", span="60-60", cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m1_19 [label="return false;", span="65-65", cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m1_17 [label="_server = null", span="61-61", cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m1_18 [label="return true;", span="63-63", cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m1_20 [label="Exit HangFire.BackgroundJobServer.Stop()", span="56-56", cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m1_12 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="BackgroundJobServer.cs"];
m1_25 [label="HangFire.BackgroundJobServer", span="", file="BackgroundJobServer.cs"];
m2_3 [label="Entry HangFire.States.FailedState.GetProperties()", span="20-20", cluster="HangFire.States.FailedState.GetProperties()", file="FailedState.cs"];
m2_4 [label="return new Dictionary<string, string>\r\n                {\r\n                    { ''FailedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''ExceptionType'', Exception.GetType().FullName },\r\n                    { ''ExceptionMessage'', Exception.Message },\r\n                    { ''ExceptionDetails'', Exception.ToString() }\r\n                };", span="22-28", cluster="HangFire.States.FailedState.GetProperties()", file="FailedState.cs"];
m2_5 [label="Exit HangFire.States.FailedState.GetProperties()", span="20-20", cluster="HangFire.States.FailedState.GetProperties()", file="FailedState.cs"];
m2_15 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="FailedState.cs"];
m2_6 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FailedState.cs"];
m2_20 [label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="44-44", cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="FailedState.cs"];
m2_9 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="FailedState.cs"];
m2_10 [label="Entry HangFire.States.FailedState.Apply(IRedisTransaction)", span="31-31", cluster="HangFire.States.FailedState.Apply(IRedisTransaction)", file="FailedState.cs"];
m2_11 [label="transaction == null", span="33-33", cluster="HangFire.States.FailedState.Apply(IRedisTransaction)", file="FailedState.cs"];
m2_13 [label="transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                        ''hangfire:failed'',\r\n                        JobId,\r\n                        JobHelper.ToTimestamp(DateTime.UtcNow)))", span="35-38", cluster="HangFire.States.FailedState.Apply(IRedisTransaction)", file="FailedState.cs"];
m2_12 [label="throw new ArgumentNullException(''transaction'');", span="33-33", cluster="HangFire.States.FailedState.Apply(IRedisTransaction)", file="FailedState.cs"];
m2_14 [label="Exit HangFire.States.FailedState.Apply(IRedisTransaction)", span="31-31", cluster="HangFire.States.FailedState.Apply(IRedisTransaction)", file="FailedState.cs"];
m2_16 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="FailedState.cs"];
m2_21 [label="Entry Unk.AddItemToSortedSet", span="", cluster="Unk.AddItemToSortedSet", file="FailedState.cs"];
m2_0 [label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10", cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="FailedState.cs"];
m2_1 [label="Exception = exception", span="13-13", cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="FailedState.cs"];
m2_2 [label="Exit HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10", cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="FailedState.cs"];
m2_8 [label="Entry System.Exception.GetType()", span="0-0", cluster="System.Exception.GetType()", file="FailedState.cs"];
m2_17 [label="Entry lambda expression", span="35-38", cluster="lambda expression", file="FailedState.cs"];
m2_18 [label="x.AddItemToSortedSet(\r\n                        ''hangfire:failed'',\r\n                        JobId,\r\n                        JobHelper.ToTimestamp(DateTime.UtcNow))", span="35-38", cluster="lambda expression", file="FailedState.cs"];
m2_19 [label="Exit lambda expression", span="35-38", cluster="lambda expression", file="FailedState.cs"];
m2_7 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="FailedState.cs"];
m2_22 [label="HangFire.States.FailedState", span="", file="FailedState.cs"];
m3_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="FailedStateDescriptor.cs"];
m3_0 [label="Entry HangFire.States.FailedStateDescriptor.Unapply(IRedisTransaction, string)", span="7-7", cluster="HangFire.States.FailedStateDescriptor.Unapply(IRedisTransaction, string)", file="FailedStateDescriptor.cs"];
m3_1 [label="transaction == null", span="9-9", cluster="HangFire.States.FailedStateDescriptor.Unapply(IRedisTransaction, string)", color=red, community=0, file="FailedStateDescriptor.cs"];
m3_3 [label="transaction.QueueCommand(x => x.RemoveItemFromSortedSet(''hangfire:failed'', jobId))", span="11-11", cluster="HangFire.States.FailedStateDescriptor.Unapply(IRedisTransaction, string)", color=red, community=0, file="FailedStateDescriptor.cs"];
m3_2 [label="throw new ArgumentNullException(''transaction'');", span="9-9", cluster="HangFire.States.FailedStateDescriptor.Unapply(IRedisTransaction, string)", color=red, community=0, file="FailedStateDescriptor.cs"];
m3_4 [label="Exit HangFire.States.FailedStateDescriptor.Unapply(IRedisTransaction, string)", span="7-7", cluster="HangFire.States.FailedStateDescriptor.Unapply(IRedisTransaction, string)", file="FailedStateDescriptor.cs"];
m3_6 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="FailedStateDescriptor.cs"];
m3_7 [label="Entry lambda expression", span="11-11", cluster="lambda expression", file="FailedStateDescriptor.cs"];
m3_8 [label="x.RemoveItemFromSortedSet(''hangfire:failed'', jobId)", span="11-11", cluster="lambda expression", color=red, community=0, file="FailedStateDescriptor.cs"];
m3_9 [label="Exit lambda expression", span="11-11", cluster="lambda expression", file="FailedStateDescriptor.cs"];
m3_10 [label="Entry Unk.RemoveItemFromSortedSet", span="", cluster="Unk.RemoveItemFromSortedSet", file="FailedStateDescriptor.cs"];
m3_11 [label=string, span="", file="FailedStateDescriptor.cs"];
m4_9 [label="Entry HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="38-38", cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="HangFireConfig.cs"];
m4_10 [label="combiner.AddObject(Method)", span="40-40", cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="HangFireConfig.cs"];
m4_11 [label="base.AddToHashCodeCombiner(combiner)", span="41-41", cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="HangFireConfig.cs"];
m4_12 [label="Exit HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="38-38", cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="HangFireConfig.cs"];
m4_13 [label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", span="53-53", cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="HangFireConfig.cs"];
m4_3 [label="Entry HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.Equals(object)", span="30-30", cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.Equals(object)", file="HangFireConfig.cs"];
m4_4 [label="MethodCallExpressionFingerprint other = obj as MethodCallExpressionFingerprint", span="32-32", cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.Equals(object)", file="HangFireConfig.cs"];
m4_5 [label="return (other != null)\r\n                   && Equals(this.Method, other.Method)\r\n                   && this.Equals(other);", span="33-35", cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.Equals(object)", file="HangFireConfig.cs"];
m4_6 [label="Exit HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.Equals(object)", span="30-30", cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.Equals(object)", file="HangFireConfig.cs"];
m4_7 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)", file="HangFireConfig.cs"];
m4_14 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="26-26", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="HangFireConfig.cs"];
m4_0 [label="Entry HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.MethodCallExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", span="18-18", cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.MethodCallExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="HangFireConfig.cs"];
m4_1 [label="Method = method", span="24-24", cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.MethodCallExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", color=red, community=0, file="HangFireConfig.cs"];
m4_2 [label="Exit HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.MethodCallExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", span="18-18", cluster="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint.MethodCallExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="HangFireConfig.cs"];
m4_15 [label="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint", span="", file="HangFireConfig.cs"];
m6_21 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="JobFetcher.cs"];
m6_35 [label="Entry Unk.SetEntry", span="", cluster="Unk.SetEntry", file="JobFetcher.cs"];
m6_22 [label="Entry Unk.BlockingPopAndPushItemBetweenLists", span="", cluster="Unk.BlockingPopAndPushItemBetweenLists", file="JobFetcher.cs"];
m6_34 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobFetcher.cs"];
m6_0 [label="Entry HangFire.Server.JobFetcher.JobFetcher(string, System.TimeSpan?)", span="13-13", cluster="HangFire.Server.JobFetcher.JobFetcher(string, System.TimeSpan?)", file="JobFetcher.cs"];
m6_1 [label="Queue = queue", span="16-16", cluster="HangFire.Server.JobFetcher.JobFetcher(string, System.TimeSpan?)", color=green, community=0, file="JobFetcher.cs"];
m6_2 [label="_fetchTimeout = fetchTimeout ?? TimeSpan.FromSeconds(5)", span="18-18", cluster="HangFire.Server.JobFetcher.JobFetcher(string, System.TimeSpan?)", color=red, community=0, file="JobFetcher.cs"];
m6_3 [label="Exit HangFire.Server.JobFetcher.JobFetcher(string, System.TimeSpan?)", span="13-13", cluster="HangFire.Server.JobFetcher.JobFetcher(string, System.TimeSpan?)", file="JobFetcher.cs"];
m6_4 [label="Exit HangFire.Server.JobFetcher.JobFetcher(IRedisClient, string, System.TimeSpan?)", span="14-14", cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClient, string, System.TimeSpan?)", file="JobFetcher.cs"];
m6_59 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="JobFetcher.cs"];
m6_13 [label="pipeline.QueueCommand(x => x.SetEntry(\r\n                    String.Format(''hangfire:job:{0}:fetched'', jobId),\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow)))", span="55-57", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m6_6 [label="Entry HangFire.Server.JobFetcher.DequeueJob()", span="23-23", cluster="HangFire.Server.JobFetcher.DequeueJob()", color=green, community=0, file="JobFetcher.cs"];
m6_5 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="JobFetcher.cs"];
m6_9 [label="return null;", span="32-32", cluster="HangFire.Server.JobFetcher.DequeueJob()", color=red, community=0, file="JobFetcher.cs"];
m6_7 [label="var jobId = _redis.BlockingPopAndPushItemBetweenLists(\r\n                    String.Format(''hangfire:queue:{0}'', _queue),\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', _queue),\r\n                    _fetchTimeout)", span="25-28", cluster="HangFire.Server.JobFetcher.DequeueJob()", color=red, community=0, file="JobFetcher.cs"];
m6_8 [label="String.IsNullOrEmpty(jobId)", span="30-30", cluster="HangFire.Server.JobFetcher.DequeueJob()", color=red, community=0, file="JobFetcher.cs"];
m6_14 [label="pipeline.QueueCommand(\r\n                    x => x.GetValuesFromHash(\r\n                        String.Format(''hangfire:job:{0}'', jobId),\r\n                        new[] { ''Type'', ''Args'' }),\r\n                    x => { jobType = x[0]; jobArgs = x[1]; })", span="59-63", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m6_16 [label="String.IsNullOrEmpty(jobType)", span="72-72", cluster="HangFire.Server.JobFetcher.DequeueJob()", color=red, community=0, file="JobFetcher.cs"];
m6_10 [label="string jobArgs = null", span="50-50", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m6_15 [label="pipeline.Flush()", span="65-65", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m6_12 [label="var pipeline = _redis.CreatePipeline()", span="53-53", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m6_11 [label="string jobType = null", span="51-51", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m6_17 [label="_logger.Warn(String.Format(\r\n                    ''Could not process the job '{0}': it does not exist in the storage.'',\r\n                    jobId))", span="74-76", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs", color=red, community=0];
m6_26 [label="x.SetEntry(\r\n                    String.Format(''hangfire:job:{0}:fetched'', jobId),\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="58-60", cluster="lambda expression", file="JobFetcher.cs"];
m6_47 [label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:job:{0}:fetched'', jobId),\r\n                    String.Format(''hangfire:job:{0}:checked'', jobId)))", span="94-96", cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="JobFetcher.cs"];
m6_44 [label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="84-84", cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="JobFetcher.cs"];
m6_45 [label="var transaction = redis.CreateTransaction()", span="87-87", cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="JobFetcher.cs"];
m6_46 [label="transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1))", span="89-92", cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="JobFetcher.cs"];
m6_48 [label="transaction.Commit()", span="98-98", cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="JobFetcher.cs"];
m6_49 [label="Exit HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="84-84", cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="JobFetcher.cs"];
m6_18 [label="return null;", span="78-78", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs", color=red, community=0];
m6_29 [label="Entry Unk.Warn", span="", cluster="Unk.Warn", file="JobFetcher.cs"];
m6_24 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="JobFetcher.cs"];
m6_27 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="JobFetcher.cs"];
m6_41 [label="jobType = x[0]", span="63-63", cluster="lambda expression", file="JobFetcher.cs"];
m6_30 [label="Entry JobPayload.cstr", span="", cluster="JobPayload.cstr", file="JobFetcher.cs"];
m6_38 [label="Exit lambda expression", span="60-62", cluster="lambda expression", file="JobFetcher.cs"];
m6_39 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", color=green, community=0, file="JobFetcher.cs"];
m6_40 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="JobFetcher.cs"];
m6_32 [label="x.SetEntry(\r\n                    String.Format(''hangfire:job:{0}:fetched'', jobId),\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="55-57", cluster="lambda expression", file="JobFetcher.cs"];
m6_37 [label="x.GetValuesFromHash(\r\n                        String.Format(''hangfire:job:{0}'', jobId),\r\n                        new[] { ''Type'', ''Args'' })", span="60-62", cluster="lambda expression", file="JobFetcher.cs"];
m6_31 [label="x.GetValuesFromHash(\r\n                        String.Format(''hangfire:job:{0}'', jobId),\r\n                        new[] { ''Type'', ''Args'' })", span="63-65", cluster="lambda expression", file="JobFetcher.cs"];
m6_36 [label="Entry lambda expression", span="60-62", cluster="lambda expression", file="JobFetcher.cs"];
m6_33 [label="Exit lambda expression", span="55-57", cluster="lambda expression", file="JobFetcher.cs"];
m6_42 [label="jobArgs = x[1]", span="63-63", cluster="lambda expression", file="JobFetcher.cs"];
m6_43 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="JobFetcher.cs"];
m6_53 [label="x.RemoveItemFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1)", span="89-92", cluster="lambda expression", file="JobFetcher.cs"];
m6_57 [label="x.RemoveEntry(\r\n                    String.Format(''hangfire:job:{0}:fetched'', jobId),\r\n                    String.Format(''hangfire:job:{0}:checked'', jobId))", span="94-96", cluster="lambda expression", file="JobFetcher.cs"];
m6_52 [label="Entry lambda expression", span="89-92", cluster="lambda expression", file="JobFetcher.cs"];
m6_56 [label="Entry lambda expression", span="94-96", cluster="lambda expression", file="JobFetcher.cs"];
m6_54 [label="Exit lambda expression", span="89-92", cluster="lambda expression", file="JobFetcher.cs"];
m6_58 [label="Exit lambda expression", span="94-96", cluster="lambda expression", file="JobFetcher.cs"];
m6_55 [label="Entry Unk.RemoveItemFromList", span="", cluster="Unk.RemoveItemFromList", file="JobFetcher.cs"];
m6_19 [label="return new JobPayload(jobId, _queue, jobType, jobArgs);", span="81-81", cluster="HangFire.Server.JobFetcher.DequeueJob()", color=red, community=0, file="JobFetcher.cs"];
m6_20 [label="Exit HangFire.Server.JobFetcher.DequeueJob()", span="23-23", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcher.cs"];
m6_51 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="JobFetcher.cs"];
m6_23 [label="Entry Unk.IsNullOrEmpty", span="", cluster="Unk.IsNullOrEmpty", file="JobFetcher.cs"];
m6_28 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="JobFetcher.cs"];
m6_25 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="JobFetcher.cs"];
m6_50 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="JobFetcher.cs"];
m6_60 [label="HangFire.Server.JobFetcher", span="", file="JobFetcher.cs"];
m6_61 [label=jobId, span="", file="JobFetcher.cs"];
m6_62 [label=string, span="", file="JobFetcher.cs"];
m6_63 [label=string, span="", file="JobFetcher.cs"];
m7_43 [label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsNull()", span="70-70", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsNull()", file="JobFetcherSteps.cs"];
m7_44 [label="Assert.IsNull(_payload)", span="72-72", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsNull()", file="JobFetcherSteps.cs"];
m7_45 [label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsNull()", span="70-70", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsNull()", file="JobFetcherSteps.cs"];
m7_47 [label="Entry HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", span="76-76", cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="JobFetcherSteps.cs"];
m7_48 [label=_queues, span="78-78", cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="JobFetcherSteps.cs"];
m7_49 [label="Then(String.Format(''the '{0}' queue is empty'', queue))", span="80-80", cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="JobFetcherSteps.cs"];
m7_50 [label="Exit HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", span="76-76", cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="JobFetcherSteps.cs"];
m7_3 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="JobFetcherSteps.cs"];
m7_10 [label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", span="29-29", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="JobFetcherSteps.cs"];
m7_11 [label="table.Rows", span="31-31", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="JobFetcherSteps.cs"];
m7_16 [label="_queues = table.Rows.Select(x => x[''Queue'']).ToList()", span="39-39", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="JobFetcherSteps.cs"];
m7_12 [label="var i = 0", span="33-33", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="JobFetcherSteps.cs"];
m7_13 [label="i < int.Parse(row[''Jobs''])", span="33-33", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="JobFetcherSteps.cs"];
m7_14 [label="Given(String.Format(''a job in the '{0}' queue'', row[''Queue'']))", span="35-35", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="JobFetcherSteps.cs"];
m7_15 [label="i++", span="33-33", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="JobFetcherSteps.cs"];
m7_17 [label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", span="29-29", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="JobFetcherSteps.cs"];
m7_8 [label="Entry HangFire.Server.JobFetcher.JobFetcher(IRedisClient, string, System.TimeSpan?)", span="14-14", cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClient, string, System.TimeSpan?)", file="JobFetcherSteps.cs"];
m7_0 [label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", span="17-17", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", file="JobFetcherSteps.cs"];
m7_1 [label="Given(String.Format(''the fetcher listening the '{0}' queue'', QueueSteps.DefaultQueue))", span="19-19", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", file="JobFetcherSteps.cs"];
m7_2 [label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", span="17-17", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", file="JobFetcherSteps.cs"];
m7_9 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="JobFetcherSteps.cs"];
m7_39 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JobFetcherSteps.cs"];
m7_46 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="JobFetcherSteps.cs"];
m7_18 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JobFetcherSteps.cs"];
m7_5 [label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", span="23-23", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="JobFetcherSteps.cs"];
m7_6 [label="_fetcher = new JobFetcher(Redis.Client, queue, TimeSpan.FromSeconds(1))", span="25-25", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", color=red, community=0, file="JobFetcherSteps.cs"];
m7_7 [label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", span="23-23", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="JobFetcherSteps.cs"];
m7_35 [label="Entry Unk.When", span="", cluster="Unk.When", file="JobFetcherSteps.cs"];
m7_40 [label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", span="64-64", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="JobFetcherSteps.cs"];
m7_41 [label="Assert.AreEqual(jobId, _payload.Id)", span="66-66", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="JobFetcherSteps.cs"];
m7_42 [label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", span="64-64", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="JobFetcherSteps.cs"];
m7_25 [label="Entry HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", span="43-43", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="JobFetcherSteps.cs"];
m7_26 [label="_payload = _fetcher.DequeueJob()", span="45-45", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", color=red, community=0, file="JobFetcherSteps.cs"];
m7_27 [label="Exit HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", span="43-43", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="JobFetcherSteps.cs"];
m7_22 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="JobFetcherSteps.cs"];
m7_23 [label="x[''Queue'']", span="39-39", cluster="lambda expression", file="JobFetcherSteps.cs"];
m7_24 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="JobFetcherSteps.cs"];
m7_20 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JobFetcherSteps.cs"];
m7_51 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="JobFetcherSteps.cs"];
m7_4 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="JobFetcherSteps.cs"];
m7_28 [label="Entry HangFire.Server.JobFetcher.DequeueJob()", span="23-23", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobFetcherSteps.cs"];
m7_29 [label="Entry HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", span="49-49", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="JobFetcherSteps.cs"];
m7_30 [label="var i = 0", span="51-51", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="JobFetcherSteps.cs"];
m7_31 [label="i < count", span="51-51", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="JobFetcherSteps.cs"];
m7_33 [label="i++", span="51-51", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="JobFetcherSteps.cs"];
m7_32 [label="When(''it dequeues a job'')", span="53-53", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="JobFetcherSteps.cs"];
m7_34 [label="Exit HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", span="49-49", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="JobFetcherSteps.cs"];
m7_36 [label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="58-58", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="JobFetcherSteps.cs"];
m7_37 [label="Assert.AreEqual(JobSteps.DefaultJobId, _payload.Id)", span="60-60", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="JobFetcherSteps.cs"];
m7_38 [label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="58-58", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="JobFetcherSteps.cs"];
m7_21 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="JobFetcherSteps.cs"];
m7_19 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="JobFetcherSteps.cs"];
m7_52 [label="HangFire.Tests.JobFetcherSteps", span="", file="JobFetcherSteps.cs"];
m8_84 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="JobManager.cs"];
m8_127 [label="Entry System.Console.WriteLine(string, object)", span="0-0", cluster="System.Console.WriteLine(string, object)", file="JobManager.cs"];
m8_12 [label="command == null || command.Equals(''stop'', StringComparison.OrdinalIgnoreCase)", span="36-36", cluster="ConsoleSample.Program.Main()", file="JobManager.cs", color=green, community=0];
m8_85 [label="Entry Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>.UseMsmqQueues(string, params string[])", span="24-24", cluster="Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>.UseMsmqQueues(string, params string[])", file="JobManager.cs"];
m8_86 [label="Entry Hangfire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", span="52-52", cluster="Hangfire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", color=red, community=0, file="JobManager.cs"];
m8_87 [label="Entry Hangfire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string)", span="27-27", cluster="Hangfire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string)", file="JobManager.cs"];
m8_88 [label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0", cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="JobManager.cs"];
m8_89 [label="Entry Hangfire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string, System.TimeZoneInfo)", span="96-96", cluster="Hangfire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string, System.TimeZoneInfo)", file="JobManager.cs"];
m8_90 [label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="33-33", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="JobManager.cs"];
m8_91 [label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="60-60", cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", file="JobManager.cs"];
m8_150 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JobManager.cs"];
m8_18 [label="BackgroundJob.Enqueue<Services>(x => x.Random(number))", span="49-49", cluster="ConsoleSample.Program.Main()", file="JobManager.cs"];
m8_0 [label="Entry Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", span="19-19", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="JobManager.cs"];
m8_1 [label="_context = new BackgroundProcessContextMock()", span="21-21", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", color=green, community=0, file="JobManager.cs"];
m8_2 [label="_context.CancellationTokenSource.Cancel()", span="22-22", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="JobManager.cs"];
m8_7 [label="_connection.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="29-29", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", color=red, community=0, file="JobManager.cs"];
m8_6 [label="_transaction = new Mock<IWriteOnlyTransaction>()", span="28-28", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", color=red, community=0, file="JobManager.cs"];
m8_5 [label="_process = new Mock<IStateChangeProcess>()", span="27-27", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="JobManager.cs", color=red, community=0];
m8_8 [label="_distributedLock = new Mock<IDisposable>()", span="31-31", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", color=green, community=0, file="JobManager.cs"];
m8_9 [label="_connection\r\n                .Setup(x => x.AcquireDistributedLock(''locks:schedulepoller'', It.IsAny<TimeSpan>()))\r\n                .Returns(_distributedLock.Object)", span="32-34", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="JobManager.cs", color=red, community=0];
m8_11 [label="Exit Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", span="19-19", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="JobManager.cs"];
m8_13 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="JobManager.cs"];
m8_80 [label="time > 0", span="68-68", cluster="lambda expression", file="JobManager.cs"];
m8_51 [label="scheduler.Execute(_context.Object)", span="54-54", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", color=green, community=0, file="JobManager.cs"];
m8_50 [label="var scheduler = CreateScheduler()", span="52-52", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", file="JobManager.cs"];
m8_52 [label="_process.Verify(x => x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.BackgroundJobId == JobId &&\r\n                ctx.NewState is EnqueuedState &&\r\n                ctx.ExpectedStates.SequenceEqual(new[] { ScheduledState.StateName }))))", span="56-59", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", file="JobManager.cs"];
m8_53 [label="_connection.Verify(x => x.Dispose())", span="61-61", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", file="JobManager.cs"];
m8_3 [label="_connection = new Mock<IStorageConnection>()", span="24-24", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="JobManager.cs"];
m8_4 [label="_context.Storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="25-25", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="JobManager.cs", color=red, community=0];
m8_10 [label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns(JobId)", span="36-37", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.DelayedJobScheduler()", file="JobManager.cs"];
m8_58 [label="Entry lambda expression", span="56-59", cluster="lambda expression", file="JobManager.cs"];
m8_14 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="JobManager.cs"];
m8_23 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="JobManager.cs"];
m8_24 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="JobManager.cs"];
m8_32 [label="Entry Unk.AcquireDistributedLock", span="", cluster="Unk.AcquireDistributedLock", file="JobManager.cs"];
m8_33 [label="Entry lambda expression", span="36-37", cluster="lambda expression", file="JobManager.cs"];
m8_38 [label="time > 0", span="37-37", cluster="lambda expression", file="JobManager.cs"];
m8_39 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="JobManager.cs"];
m8_44 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="JobManager.cs"];
m8_45 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="JobManager.cs"];
m8_56 [label="Entry Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="53-53", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobManager.cs"];
m8_57 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="JobManager.cs"];
m8_60 [label="Exit lambda expression", span="56-59", cluster="lambda expression", file="JobManager.cs"];
m8_61 [label="Entry Unk.ChangeState", span="", cluster="Unk.ChangeState", file="JobManager.cs"];
m8_63 [label="ctx.BackgroundJobId == JobId &&\r\n                ctx.NewState is EnqueuedState &&\r\n                ctx.ExpectedStates.SequenceEqual(new[] { ScheduledState.StateName })", span="57-59", cluster="lambda expression", file="JobManager.cs"];
m8_64 [label="Exit lambda expression", span="56-59", cluster="lambda expression", file="JobManager.cs"];
m8_70 [label="Entry Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", span="65-65", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", file="JobManager.cs"];
m8_71 [label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns((string)null)", span="67-68", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", file="JobManager.cs"];
m8_76 [label="Entry lambda expression", span="67-68", cluster="lambda expression", file="JobManager.cs"];
m8_78 [label="Exit lambda expression", span="67-68", cluster="lambda expression", file="JobManager.cs"];
m8_81 [label="Exit lambda expression", span="68-68", cluster="lambda expression", file="JobManager.cs"];
m8_47 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="JobManager.cs"];
m8_55 [label="Entry Hangfire.Core.Tests.Server.DelayedJobScheduler.CreateScheduler()", span="104-104", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.CreateScheduler()", file="JobManager.cs"];
m8_15 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="JobManager.cs"];
m8_54 [label="Exit Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", span="50-50", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", file="JobManager.cs"];
m8_20 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="JobManager.cs"];
m8_22 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="JobManager.cs"];
m8_29 [label="x.AcquireDistributedLock(''locks:schedulepoller'', It.IsAny<TimeSpan>())", span="33-33", cluster="lambda expression", file="JobManager.cs", color=red, community=0];
m8_31 [label="Entry Unk.>", span="", cluster="Unk.>", file="JobManager.cs"];
m8_73 [label="scheduler.Execute(_context.Object)", span="71-71", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", file="JobManager.cs"];
m8_75 [label="Exit Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", span="65-65", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", file="JobManager.cs"];
m8_79 [label="Entry lambda expression", span="68-68", cluster="lambda expression", file="JobManager.cs"];
m8_59 [label="x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.BackgroundJobId == JobId &&\r\n                ctx.NewState is EnqueuedState &&\r\n                ctx.ExpectedStates.SequenceEqual(new[] { ScheduledState.StateName })))", span="56-59", cluster="lambda expression", file="JobManager.cs"];
m8_16 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="JobManager.cs"];
m8_25 [label="x.CreateWriteTransaction()", span="29-29", cluster="lambda expression", file="JobManager.cs", color=red, community=0];
m8_26 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="JobManager.cs"];
m8_34 [label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="36-37", cluster="lambda expression", file="JobManager.cs"];
m8_35 [label="Exit lambda expression", span="36-37", cluster="lambda expression", file="JobManager.cs"];
m8_40 [label="Entry Hangfire.Core.Tests.Server.DelayedJobScheduler.Ctor_ThrowsAnException_WhenProcessIsNull()", span="41-41", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Ctor_ThrowsAnException_WhenProcessIsNull()", file="JobManager.cs"];
m8_41 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Hangfire.Server.DelayedJobScheduler(Timeout.InfiniteTimeSpan, null))", span="43-44", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Ctor_ThrowsAnException_WhenProcessIsNull()", file="JobManager.cs", color=red, community=0];
m8_46 [label="new Hangfire.Server.DelayedJobScheduler(Timeout.InfiniteTimeSpan, null)", span="44-44", cluster="lambda expression", file="JobManager.cs"];
m8_62 [label="Entry lambda expression", span="56-59", cluster="lambda expression", file="JobManager.cs"];
m8_65 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual", file="JobManager.cs"];
m8_66 [label="Entry lambda expression", span="61-61", cluster="lambda expression", file="JobManager.cs"];
m8_72 [label="var scheduler = CreateScheduler()", span="69-69", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", file="JobManager.cs"];
m8_77 [label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="67-68", cluster="lambda expression", file="JobManager.cs"];
m8_49 [label="Entry Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", span="50-50", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_MovesJobStateToEnqueued()", file="JobManager.cs"];
m8_48 [label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IStateChangeProcess)", span="45-45", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IStateChangeProcess)", file="JobManager.cs"];
m8_17 [label="Entry Mock<IStateChangeProcess>.cstr", span="", cluster="Mock<IStateChangeProcess>.cstr", file="JobManager.cs"];
m8_19 [label="Entry Mock<IDisposable>.cstr", span="", cluster="Mock<IDisposable>.cstr", file="JobManager.cs"];
m8_21 [label="x.GetConnection()", span="25-25", cluster="lambda expression", file="JobManager.cs", color=red, community=0];
m8_30 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="JobManager.cs"];
m8_74 [label="_process.Verify(\r\n                x => x.ChangeState(It.IsAny<StateChangeContext>()),\r\n                Times.Never)", span="73-75", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_DoesNotCallStateChangeProcess_IfThereAreNoJobsToEnqueue()", file="JobManager.cs"];
m8_28 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="JobManager.cs"];
m8_27 [label="Entry Unk.CreateWriteTransaction", span="", cluster="Unk.CreateWriteTransaction", file="JobManager.cs"];
m8_37 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="JobManager.cs"];
m8_36 [label="Entry Unk.GetFirstByLowestScoreFromSet", span="", cluster="Unk.GetFirstByLowestScoreFromSet", file="JobManager.cs"];
m8_43 [label="Exit Hangfire.Core.Tests.Server.DelayedJobScheduler.Ctor_ThrowsAnException_WhenProcessIsNull()", span="41-41", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Ctor_ThrowsAnException_WhenProcessIsNull()", file="JobManager.cs"];
m8_42 [label="Assert.Equal(''process'', exception.ParamName)", span="46-46", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Ctor_ThrowsAnException_WhenProcessIsNull()", file="JobManager.cs"];
m8_69 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="JobManager.cs"];
m8_67 [label="x.Dispose()", span="61-61", cluster="lambda expression", file="JobManager.cs"];
m8_68 [label="Exit lambda expression", span="61-61", cluster="lambda expression", file="JobManager.cs"];
m8_82 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="JobManager.cs"];
m8_141 [label="Entry System.Random.Random()", span="0-0", cluster="System.Random.Random()", file="JobManager.cs"];
m8_143 [label="Entry ConsoleSample.Services.CustomObject.CustomObject()", span="93-93", cluster="ConsoleSample.Services.CustomObject.CustomObject()", file="JobManager.cs"];
m8_151 [label="Entry ConsoleSample.Services.FullArgs(bool, int, char, System.DayOfWeek, string, System.TimeSpan, System.DateTime, ConsoleSample.Services.CustomObject, string[], int[], long[], object[], System.Collections.Generic.List<string>)", span="76-76", cluster="ConsoleSample.Services.FullArgs(bool, int, char, System.DayOfWeek, string, System.TimeSpan, System.DateTime, ConsoleSample.Services.CustomObject, string[], int[], long[], object[], System.Collections.Generic.List<string>)", file="JobManager.cs"];
m8_171 [label="Entry ConsoleSample.Services.EmptyCritical()", span="18-18", cluster="ConsoleSample.Services.EmptyCritical()", file="JobManager.cs"];
m8_149 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JobManager.cs"];
m8_102 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="JobManager.cs"];
m8_131 [label="Entry ConsoleSample.Services.Error()", span="23-23", cluster="ConsoleSample.Services.Error()", file="JobManager.cs"];
m8_96 [label="x.RemoveFromSet(''schedule'', JobId)", span="89-89", cluster="lambda expression", file="JobManager.cs"];
m8_100 [label="x.Commit()", span="90-90", cluster="lambda expression", file="JobManager.cs"];
m8_123 [label="Entry ConsoleSample.Services.Random(int)", span="30-30", cluster="ConsoleSample.Services.Random(int)", file="JobManager.cs"];
m8_103 [label="Entry System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", span="0-0", cluster="System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", file="JobManager.cs"];
m8_104 [label="Entry ConsoleSample.Program.WriteString(string)", span="193-193", cluster="ConsoleSample.Program.WriteString(string)", file="JobManager.cs"];
m8_105 [label="scheduler.Execute(_context.Object)", span="98-98", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_ActsWithinADistributedLock()", file="JobManager.cs"];
m8_106 [label="Console.WriteLine(''Hello, world!'')", span="16-16", cluster="lambda expression", file="JobManager.cs"];
m8_107 [label="_distributedLock.Verify(x => x.Dispose())", span="101-101", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_ActsWithinADistributedLock()", file="JobManager.cs"];
m8_108 [label="Exit Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_ActsWithinADistributedLock()", span="94-94", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.Execute_ActsWithinADistributedLock()", file="JobManager.cs"];
m8_197 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="JobManager.cs"];
m8_115 [label="Console.WriteLine(''UTC'')", span="20-20", cluster="lambda expression", color=red, community=0, file="JobManager.cs"];
m8_116 [label="Exit Hangfire.Core.Tests.Server.DelayedJobScheduler.CreateScheduler()", span="104-104", cluster="Hangfire.Core.Tests.Server.DelayedJobScheduler.CreateScheduler()", file="JobManager.cs"];
m8_136 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="JobManager.cs"];
m8_94 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="JobManager.cs"];
m8_144 [label="Entry ConsoleSample.Services.Custom(int, string[], ConsoleSample.Services.CustomObject, System.DayOfWeek)", span="72-72", cluster="ConsoleSample.Services.Custom(int, string[], ConsoleSample.Services.CustomObject, System.DayOfWeek)", file="JobManager.cs"];
m8_137 [label="Entry ConsoleSample.Services.Args(string, int, System.DateTime)", span="67-67", cluster="ConsoleSample.Services.Args(string, int, System.DateTime)", file="JobManager.cs"];
m8_92 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="JobManager.cs"];
m8_158 [label="Entry ConsoleSample.Services.Cancelable(int, Hangfire.IJobCancellationToken)", span="47-47", cluster="ConsoleSample.Services.Cancelable(int, Hangfire.IJobCancellationToken)", file="JobManager.cs"];
m8_181 [label="i < value.Length", span="197-197", cluster="ConsoleSample.Program.WriteString(string)", file="JobManager.cs"];
m8_180 [label="var i = 1", span="197-197", cluster="ConsoleSample.Program.WriteString(string)", file="JobManager.cs"];
m8_183 [label="i++", span="197-197", cluster="ConsoleSample.Program.WriteString(string)", file="JobManager.cs"];
m8_182 [label="lastId = BackgroundJob.ContinueWith(lastId, () => Console.Write(value[i]))", span="199-199", cluster="ConsoleSample.Program.WriteString(string)", file="JobManager.cs"];
m8_184 [label="BackgroundJob.ContinueWith(lastId, () => Console.WriteLine())", span="202-202", cluster="ConsoleSample.Program.WriteString(string)", file="JobManager.cs"];
m8_179 [label="var lastId = BackgroundJob.Enqueue(() => Console.Write(value[0]))", span="195-195", cluster="ConsoleSample.Program.WriteString(string)", file="JobManager.cs"];
m8_185 [label="Exit ConsoleSample.Program.WriteString(string)", span="193-193", cluster="ConsoleSample.Program.WriteString(string)", file="JobManager.cs"];
m8_148 [label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int)", file="JobManager.cs"];
m8_186 [label="Entry Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", span="200-200", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="JobManager.cs"];
m8_172 [label="Entry lambda expression", span="166-166", cluster="lambda expression", file="JobManager.cs"];
m8_83 [label="Entry Hangfire.IGlobalConfiguration.UseColouredConsoleLogProvider()", span="71-71", cluster="Hangfire.IGlobalConfiguration.UseColouredConsoleLogProvider()", file="JobManager.cs"];
m8_95 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="JobManager.cs"];
m8_99 [label="Entry Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="61-61", cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="JobManager.cs"];
m8_93 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", color=red, community=0, file="JobManager.cs"];
m8_97 [label="Entry Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="77-77", cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="JobManager.cs"];
m8_101 [label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="120-120", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="JobManager.cs"];
m8_109 [label="Console.WriteLine(''Hello'')", span="17-17", cluster="lambda expression", file="JobManager.cs"];
m8_112 [label="Console.WriteLine(''Hawaiian'')", span="19-19", cluster="lambda expression", file="JobManager.cs"];
m8_110 [label="x.AcquireDistributedLock(It.IsAny<string>(), It.IsAny<TimeSpan>())", span="100-100", cluster="lambda expression", file="JobManager.cs"];
m8_111 [label="Exit lambda expression", span="100-100", cluster="lambda expression", file="JobManager.cs"];
m8_113 [label="x.Dispose()", span="101-101", cluster="lambda expression", file="JobManager.cs"];
m8_114 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="JobManager.cs"];
m8_117 [label="Entry Hangfire.Server.DelayedJobScheduler.cstr", span="", cluster="Hangfire.Server.DelayedJobScheduler.cstr", file="JobManager.cs"];
m8_118 [label="Hangfire.Core.Tests.Server.DelayedJobScheduler", span="", cluster="lambda expression", color=green, community=0, file="JobManager.cs"];
m8_119 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="JobManager.cs"];
m8_153 [label="x.Random(number)", span="134-134", cluster="lambda expression", file="JobManager.cs"];
m8_156 [label="x.Cancelable(iterations, JobCancellationToken.Null)", span="140-140", cluster="lambda expression", file="JobManager.cs"];
m8_145 [label="Entry lambda expression", span="113-126", cluster="lambda expression", file="JobManager.cs"];
m8_188 [label="Console.Write(value[0])", span="195-195", cluster="lambda expression", file="JobManager.cs"];
m8_192 [label="Console.Write(value[i])", span="199-199", cluster="lambda expression", file="JobManager.cs"];
m8_191 [label="Entry lambda expression", span="199-199", cluster="lambda expression", file="JobManager.cs"];
m8_194 [label="Entry lambda expression", span="202-202", cluster="lambda expression", file="JobManager.cs"];
m8_152 [label="Entry lambda expression", span="134-134", cluster="lambda expression", file="JobManager.cs"];
m8_154 [label="Exit lambda expression", span="134-134", cluster="lambda expression", file="JobManager.cs"];
m8_155 [label="Entry lambda expression", span="140-140", cluster="lambda expression", file="JobManager.cs"];
m8_157 [label="Exit lambda expression", span="140-140", cluster="lambda expression", file="JobManager.cs"];
m8_163 [label="Entry lambda expression", span="158-168", cluster="lambda expression", file="JobManager.cs"];
m8_175 [label="Entry lambda expression", span="179-179", cluster="lambda expression", file="JobManager.cs"];
m8_138 [label="Entry lambda expression", span="99-104", cluster="lambda expression", file="JobManager.cs"];
m8_121 [label="x.Random(number)", span="49-49", cluster="lambda expression", file="JobManager.cs"];
m8_165 [label="BackgroundJob.Enqueue<Services>(x => x.EmptyCritical())", span="162-162", cluster="lambda expression", file="JobManager.cs"];
m8_166 [label="BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="166-166", cluster="lambda expression", file="JobManager.cs"];
m8_147 [label="Exit lambda expression", span="113-126", cluster="lambda expression", file="JobManager.cs"];
m8_146 [label="x.FullArgs(\r\n                                false,\r\n                                123,\r\n                                'c',\r\n                                DayOfWeek.Monday,\r\n                                ''hello'',\r\n                                new TimeSpan(12, 13, 14),\r\n                                new DateTime(2012, 11, 10),\r\n                                new Services.CustomObject { Id = 123 },\r\n                                new[] { ''1'', ''2'', ''3'' },\r\n                                new[] { 4, 5, 6 },\r\n                                new long[0],\r\n                                null,\r\n                                new List<string> { ''7'', ''8'', ''9'' })", span="113-126", cluster="lambda expression", file="JobManager.cs"];
m8_187 [label="Entry lambda expression", span="195-195", cluster="lambda expression", file="JobManager.cs"];
m8_189 [label="Exit lambda expression", span="195-195", cluster="lambda expression", file="JobManager.cs"];
m8_193 [label="Exit lambda expression", span="199-199", cluster="lambda expression", file="JobManager.cs"];
m8_196 [label="Exit lambda expression", span="202-202", cluster="lambda expression", file="JobManager.cs"];
m8_195 [label="Console.WriteLine()", span="202-202", cluster="lambda expression", file="JobManager.cs"];
m8_124 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="JobManager.cs"];
m8_128 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="JobManager.cs"];
m8_132 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="JobManager.cs"];
m8_159 [label="Entry lambda expression", span="148-148", cluster="lambda expression", file="JobManager.cs"];
m8_167 [label="Exit lambda expression", span="158-168", cluster="lambda expression", file="JobManager.cs"];
m8_164 [label="i % 2 == 0", span="160-160", cluster="lambda expression", file="JobManager.cs"];
m8_177 [label="Exit lambda expression", span="179-179", cluster="lambda expression", file="JobManager.cs"];
m8_176 [label="x.Method(''hello'', 1)", span="179-179", cluster="lambda expression", file="JobManager.cs"];
m8_140 [label="Exit lambda expression", span="99-104", cluster="lambda expression", file="JobManager.cs"];
m8_139 [label="x.Custom(\r\n                                new Random().Next(),\r\n                                new []{ ''Hello'', ''world!'' },\r\n                                new Services.CustomObject { Id = 123 },\r\n                                DayOfWeek.Friday\r\n                                )", span="99-104", cluster="lambda expression", file="JobManager.cs"];
m8_120 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="JobManager.cs"];
m8_122 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="JobManager.cs"];
m8_168 [label="Entry lambda expression", span="162-162", cluster="lambda expression", file="JobManager.cs"];
m8_126 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="JobManager.cs"];
m8_125 [label="Console.WriteLine(''Hello, {0}!'', ''world'')", span="66-66", cluster="lambda expression", file="JobManager.cs"];
m8_130 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="JobManager.cs"];
m8_129 [label="x.Error()", span="81-81", cluster="lambda expression", file="JobManager.cs"];
m8_134 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="JobManager.cs"];
m8_133 [label="x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow)", span="90-90", cluster="lambda expression", file="JobManager.cs"];
m8_161 [label="Exit lambda expression", span="148-148", cluster="lambda expression", file="JobManager.cs"];
m8_160 [label="x.EmptyDefault()", span="148-148", cluster="lambda expression", file="JobManager.cs"];
m8_170 [label="Exit lambda expression", span="162-162", cluster="lambda expression", file="JobManager.cs"];
m8_169 [label="x.EmptyCritical()", span="162-162", cluster="lambda expression", file="JobManager.cs"];
m8_173 [label="x.EmptyDefault()", span="166-166", cluster="lambda expression", file="JobManager.cs"];
m8_174 [label="Exit lambda expression", span="166-166", cluster="lambda expression", file="JobManager.cs"];
m8_178 [label="Entry ConsoleSample.GenericServices<TType>.Method<TMethod>(TType, TMethod)", span="6-6", cluster="ConsoleSample.GenericServices<TType>.Method<TMethod>(TType, TMethod)", file="JobManager.cs"];
m8_135 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="JobManager.cs"];
m8_142 [label="Entry System.Random.Next()", span="0-0", cluster="System.Random.Next()", file="JobManager.cs"];
m8_190 [label="Entry System.Console.Write(char)", span="0-0", cluster="System.Console.Write(char)", file="JobManager.cs"];
m8_98 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JobManager.cs"];
m8_162 [label="Entry ConsoleSample.Services.EmptyDefault()", span="13-13", cluster="ConsoleSample.Services.EmptyDefault()", file="JobManager.cs"];
m8_199 [label=number, span="", file="JobManager.cs"];
m8_200 [label=iterations, span="", file="JobManager.cs"];
m8_201 [label=string, span="", file="JobManager.cs"];
m8_202 [label=i, span="", file="JobManager.cs"];
m8_198 [label=number, span="", file="JobManager.cs"];
m9_0 [label="Entry HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", span="27-27", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs"];
m9_3 [label="workerPools == null", span="36-36", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobServer.cs"];
m9_2 [label="_pollInterval = pollInterval", span="34-34", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs"];
m9_4 [label="throw new ArgumentNullException(''workerPools'');", span="36-36", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobServer.cs"];
m9_5 [label="pollInterval != pollInterval.Duration()", span="38-38", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs"];
m9_1 [label="_workerPools = workerPools", span="33-33", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs"];
m9_7 [label="var serverName = String.Format(''{0}:{1}'', machineName, Process.GetCurrentProcess().Id)", span="43-43", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs"];
m9_8 [label="_context = new ServerContext(\r\n                serverName,\r\n                jobActivator ?? new JobActivator(),\r\n                JobPerformer.Current)", span="45-48", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs"];
m9_6 [label="throw new ArgumentOutOfRangeException(''pollInterval'', ''Poll interval value must be positive.'');", span="40-40", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs"];
m9_10 [label="_serverThread.Start()", span="55-55", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs"];
m9_9 [label="_serverThread = new Thread(RunServer)\r\n                {\r\n                    Name = typeof(JobServer).Name,\r\n                    IsBackground = true\r\n                }", span="50-54", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs"];
m9_11 [label="Exit HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", span="27-27", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs"];
m9_12 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobServer.cs"];
m9_18 [label="Entry HangFire.JobActivator.JobActivator()", span="4-4", cluster="HangFire.JobActivator.JobActivator()", file="JobServer.cs"];
m9_26 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="JobServer.cs"];
m9_49 [label="Entry HangFire.Server.JobServer.RunServer()", span="92-92", cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs"];
m9_50 [label="AnnounceServer()", span="96-96", cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs"];
m9_51 [label="StartServer()", span="97-97", cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs"];
m9_52 [label="_stopped.WaitOne()", span="99-99", cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs"];
m9_53 [label="StopServer()", span="101-101", cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs"];
m9_54 [label="RemoveServer()", span="102-102", cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs"];
m9_56 [label="_logger.Fatal(''Unexpected exception caught.'', ex)", span="106-106", cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs"];
m9_55 [label=Exception, span="104-104", cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs"];
m9_57 [label="Exit HangFire.Server.JobServer.RunServer()", span="92-92", cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs"];
m9_34 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JobServer.cs"];
m9_83 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="JobServer.cs"];
m9_16 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="JobServer.cs"];
m9_21 [label="Entry HangFire.Server.JobServer.Dispose()", span="58-58", cluster="HangFire.Server.JobServer.Dispose()", file="JobServer.cs"];
m9_22 [label="_stopped.Set()", span="60-60", cluster="HangFire.Server.JobServer.Dispose()", file="JobServer.cs"];
m9_23 [label="_serverThread.Join()", span="61-61", cluster="HangFire.Server.JobServer.Dispose()", file="JobServer.cs"];
m9_24 [label="Exit HangFire.Server.JobServer.Dispose()", span="58-58", cluster="HangFire.Server.JobServer.Dispose()", file="JobServer.cs"];
m9_20 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()", file="JobServer.cs"];
m9_76 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="JobServer.cs"];
m9_80 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="JobServer.cs"];
m9_82 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobServer.cs"];
m9_99 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="JobServer.cs"];
m9_14 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="JobServer.cs"];
m9_15 [label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0", cluster="System.Diagnostics.Process.GetCurrentProcess()", file="JobServer.cs"];
m9_35 [label="Entry HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", span="10-10", cluster="HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", file="JobServer.cs"];
m9_25 [label="Entry System.Threading.EventWaitHandle.Set()", span="0-0", cluster="System.Threading.EventWaitHandle.Set()", file="JobServer.cs"];
m9_36 [label="Entry HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="17-17", cluster="HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="JobServer.cs"];
m9_38 [label="Entry HangFire.Server.JobServer.StopServer()", span="75-75", cluster="HangFire.Server.JobServer.StopServer()", file="JobServer.cs"];
m9_40 [label="_schedulePoller.Dispose()", span="78-78", cluster="HangFire.Server.JobServer.StopServer()", color=green, community=0, file="JobServer.cs"];
m9_39 [label="_fetchedJobsWatcher.Dispose()", span="77-77", cluster="HangFire.Server.JobServer.StopServer()", file="JobServer.cs"];
m9_41 [label=_managers, span="80-80", cluster="HangFire.Server.JobServer.StopServer()", file="JobServer.cs"];
m9_43 [label=_managers, span="85-85", cluster="HangFire.Server.JobServer.StopServer()", file="JobServer.cs"];
m9_42 [label="manager.SendStop()", span="82-82", cluster="HangFire.Server.JobServer.StopServer()", file="JobServer.cs"];
m9_44 [label="manager.Dispose()", span="87-87", cluster="HangFire.Server.JobServer.StopServer()", file="JobServer.cs"];
m9_45 [label="Exit HangFire.Server.JobServer.StopServer()", span="75-75", cluster="HangFire.Server.JobServer.StopServer()", file="JobServer.cs"];
m9_81 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobServer.cs"];
m9_46 [label="Entry HangFire.Server.ThreadWrapper.Dispose()", span="23-23", cluster="HangFire.Server.ThreadWrapper.Dispose()", file="JobServer.cs"];
m9_58 [label="Entry HangFire.Server.JobServer.AnnounceServer()", span="110-110", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs"];
m9_63 [label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName))", span="114-115", cluster="HangFire.Server.JobServer.AnnounceServer()", color=green, community=0, file="JobServer.cs"];
m9_62 [label="var transaction = _redis.CreateTransaction()", span="112-112", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs"];
m9_64 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                        }))", span="117-122", cluster="HangFire.Server.JobServer.AnnounceServer()", color=green, community=0, file="JobServer.cs"];
m9_65 [label=_workerPools, span="124-124", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs"];
m9_67 [label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        pool.Queue))", span="127-129", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs"];
m9_68 [label="transaction.Commit()", span="132-132", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs"];
m9_66 [label="var pool = workerPool", span="126-126", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs"];
m9_69 [label="Exit HangFire.Server.JobServer.AnnounceServer()", span="110-110", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs"];
m9_33 [label="Entry HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext, HangFire.Server.WorkerPool)", span="23-23", cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext, HangFire.Server.WorkerPool)", file="JobServer.cs"];
m9_95 [label="Entry Unk.RemoveItemFromSet", span="", cluster="Unk.RemoveItemFromSet", file="JobServer.cs"];
m9_61 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="JobServer.cs"];
m9_13 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()", file="JobServer.cs"];
m9_27 [label="Entry HangFire.Server.JobServer.StartServer()", span="64-64", cluster="HangFire.Server.JobServer.StartServer()", file="JobServer.cs"];
m9_28 [label=_workerPools, span="66-66", cluster="HangFire.Server.JobServer.StartServer()", file="JobServer.cs"];
m9_29 [label="_managers.Add(new JobManager(_context, pool))", span="68-68", cluster="HangFire.Server.JobServer.StartServer()", file="JobServer.cs"];
m9_30 [label="_schedulePoller = new ThreadWrapper(new SchedulePoller(_pollInterval))", span="71-71", cluster="HangFire.Server.JobServer.StartServer()", file="JobServer.cs"];
m9_31 [label="_fetchedJobsWatcher = new ThreadWrapper(new DequeuedJobsWatcher())", span="72-72", cluster="HangFire.Server.JobServer.StartServer()", file="JobServer.cs"];
m9_32 [label="Exit HangFire.Server.JobServer.StartServer()", span="64-64", cluster="HangFire.Server.JobServer.StartServer()", file="JobServer.cs"];
m9_96 [label="Entry lambda expression", span="144-146", cluster="lambda expression", file="JobServer.cs"];
m9_73 [label="Entry lambda expression", span="114-115", cluster="lambda expression", file="JobServer.cs"];
m9_77 [label="Entry lambda expression", span="117-122", cluster="lambda expression", file="JobServer.cs"];
m9_74 [label="x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName)", span="114-115", cluster="lambda expression", color=green, community=0, file="JobServer.cs"];
m9_75 [label="Exit lambda expression", span="114-115", cluster="lambda expression", file="JobServer.cs"];
m9_78 [label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                        })", span="117-122", cluster="lambda expression", color=green, community=0, file="JobServer.cs"];
m9_79 [label="Exit lambda expression", span="117-122", cluster="lambda expression", file="JobServer.cs"];
m9_85 [label="x.AddItemToSet(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        pool.Queue)", span="127-129", cluster="lambda expression", file="JobServer.cs"];
m9_93 [label="x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    _context.ServerName)", span="140-142", cluster="lambda expression", file="JobServer.cs"];
m9_97 [label="x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    String.Format(''hangfire:server:{0}:queues'', _context.ServerName))", span="144-146", cluster="lambda expression", file="JobServer.cs"];
m9_84 [label="Entry lambda expression", span="127-129", cluster="lambda expression", file="JobServer.cs"];
m9_86 [label="Exit lambda expression", span="127-129", cluster="lambda expression", file="JobServer.cs"];
m9_92 [label="Entry lambda expression", span="140-142", cluster="lambda expression", file="JobServer.cs"];
m9_94 [label="Exit lambda expression", span="140-142", cluster="lambda expression", file="JobServer.cs"];
m9_98 [label="Exit lambda expression", span="144-146", cluster="lambda expression", file="JobServer.cs"];
m9_47 [label="Entry HangFire.Server.JobManager.SendStop()", span="51-51", cluster="HangFire.Server.JobManager.SendStop()", file="JobServer.cs"];
m9_72 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="JobServer.cs"];
m9_37 [label="Entry HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", span="8-8", cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", file="JobServer.cs"];
m9_17 [label="Entry HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="9-9", cluster="HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="JobServer.cs"];
m9_71 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="JobServer.cs"];
m9_48 [label="Entry HangFire.Server.JobManager.Dispose()", span="63-63", cluster="HangFire.Server.JobManager.Dispose()", file="JobServer.cs"];
m9_59 [label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0", cluster="System.Threading.WaitHandle.WaitOne()", file="JobServer.cs"];
m9_70 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="JobServer.cs"];
m9_19 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="JobServer.cs"];
m9_60 [label="Entry HangFire.Server.JobServer.RemoveServer()", span="136-136", cluster="HangFire.Server.JobServer.RemoveServer()", file="JobServer.cs"];
m9_87 [label="var transaction = _redis.CreateTransaction()", span="138-138", cluster="HangFire.Server.JobServer.RemoveServer()", file="JobServer.cs"];
m9_88 [label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    _context.ServerName))", span="140-142", cluster="HangFire.Server.JobServer.RemoveServer()", file="JobServer.cs"];
m9_89 [label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    String.Format(''hangfire:server:{0}:queues'', _context.ServerName)))", span="144-146", cluster="HangFire.Server.JobServer.RemoveServer()", file="JobServer.cs"];
m9_90 [label="transaction.Commit()", span="148-148", cluster="HangFire.Server.JobServer.RemoveServer()", file="JobServer.cs"];
m9_91 [label="Exit HangFire.Server.JobServer.RemoveServer()", span="136-136", cluster="HangFire.Server.JobServer.RemoveServer()", file="JobServer.cs"];
m9_100 [label="HangFire.Server.JobServer", span="", file="JobServer.cs"];
m9_101 [label=pool, span="", file="JobServer.cs"];
m10_74 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", span="105-105", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="JobState.cs"];
m10_75 [label="var context = CreateContext()", span="107-107", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="JobState.cs"];
m10_76 [label="_connectionMock.Setup(x => x.GetJobParameter(''1'', ''Name''))\r\n                .Returns(JobHelper.ToJson(''Value''))", span="108-109", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="JobState.cs"];
m10_77 [label="var value = context.GetJobParameter<string>(''Name'')", span="111-111", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="JobState.cs"];
m10_78 [label="Assert.Equal(''Value'', value)", span="113-113", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="JobState.cs"];
m10_79 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", span="105-105", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="JobState.cs"];
m10_40 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="JobState.cs"];
m10_87 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", span="117-117", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="JobState.cs"];
m10_88 [label="var context = CreateContext()", span="119-119", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="JobState.cs"];
m10_89 [label="_connectionMock.Setup(x => x.GetJobParameter(''1'', ''Value''))\r\n                .Returns(JobHelper.ToJson(null))", span="120-121", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="JobState.cs"];
m10_90 [label="var value = context.GetJobParameter<int>(''Name'')", span="123-123", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="JobState.cs"];
m10_91 [label="Assert.Equal(default(int), value)", span="125-125", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="JobState.cs"];
m10_92 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", span="117-117", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="JobState.cs"];
m10_66 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", span="94-94", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="JobState.cs"];
m10_67 [label="var context = CreateContext()", span="96-96", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="JobState.cs"];
m10_68 [label="context.SetJobParameter(''Name'', (string)null)", span="98-98", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="JobState.cs"];
m10_69 [label="_connectionMock.Verify(x => x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(null)))", span="100-101", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="JobState.cs"];
m10_70 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", span="94-94", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="JobState.cs"];
m10_48 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", span="72-72", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="JobState.cs"];
m10_49 [label="var context = CreateContext()", span="74-74", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="JobState.cs"];
m10_50 [label="var newState = new Mock<State>()", span="75-75", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="JobState.cs"];
m10_51 [label="context.CandidateState = newState.Object", span="77-77", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="JobState.cs"];
m10_52 [label="Assert.Same(newState.Object, context.CandidateState)", span="79-79", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="JobState.cs"];
m10_53 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", span="72-72", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="JobState.cs"];
m10_19 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="JobState.cs"];
m10_41 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", span="64-64", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="JobState.cs"];
m10_42 [label="var context = CreateContext()", span="66-66", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="JobState.cs"];
m10_43 [label="Assert.Throws<ArgumentNullException>(() => context.CandidateState = null)", span="68-68", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="JobState.cs"];
m10_44 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", span="64-64", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="JobState.cs"];
m10_9 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="JobState.cs"];
m10_18 [label="Entry Unk.>", span="", cluster="Unk.>", file="JobState.cs"];
m10_7 [label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23", cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", file="JobState.cs"];
m10_59 [label="Entry HangFire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="58-58", cluster="HangFire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="JobState.cs"];
m10_86 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="JobState.cs"];
m10_0 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", span="16-16", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="JobState.cs"];
m10_1 [label="var job = Job.FromExpression(() => Console.WriteLine())", span="18-18", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="JobState.cs"];
m10_2 [label="_stateContext = new StateContext(JobId, job)", span="19-19", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="JobState.cs"];
m10_3 [label="_candidateStateMock = new Mock<State>()", span="20-20", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="JobState.cs"];
m10_4 [label="_connectionMock = new Mock<IStorageConnection>()", span="21-21", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="JobState.cs"];
m10_5 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", span="16-16", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="JobState.cs"];
m10_8 [label="Entry Mock<State>.cstr", span="", cluster="Mock<State>.cstr", file="JobState.cs"];
m10_80 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="JobState.cs"];
m10_93 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="JobState.cs"];
m10_10 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="JobState.cs"];
m10_11 [label="Console.WriteLine()", span="18-18", cluster="lambda expression", file="JobState.cs"];
m10_12 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="JobState.cs"];
m10_20 [label="Entry lambda expression", span="28-32", cluster="lambda expression", file="JobState.cs"];
m10_21 [label="new ElectStateContext(\r\n                    _stateContext,\r\n                    null,\r\n                    null,\r\n                    _connectionMock.Object)", span="28-32", cluster="lambda expression", file="JobState.cs"];
m10_22 [label="Exit lambda expression", span="28-32", cluster="lambda expression", file="JobState.cs"];
m10_28 [label="Entry lambda expression", span="41-45", cluster="lambda expression", file="JobState.cs"];
m10_29 [label="new ElectStateContext(\r\n                    _stateContext,\r\n                    _candidateStateMock.Object,\r\n                    null,\r\n                    null)", span="41-45", cluster="lambda expression", file="JobState.cs"];
m10_30 [label="Exit lambda expression", span="41-45", cluster="lambda expression", file="JobState.cs"];
m10_46 [label="context.CandidateState = null", span="68-68", cluster="lambda expression", file="JobState.cs"];
m10_45 [label="Entry lambda expression", span="68-68", cluster="lambda expression", file="JobState.cs"];
m10_47 [label="Exit lambda expression", span="68-68", cluster="lambda expression", file="JobState.cs"];
m10_61 [label="Entry lambda expression", span="89-90", cluster="lambda expression", file="JobState.cs"];
m10_62 [label="x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(''Value''))", span="89-90", cluster="lambda expression", file="JobState.cs"];
m10_63 [label="Exit lambda expression", span="89-90", cluster="lambda expression", file="JobState.cs"];
m10_71 [label="Entry lambda expression", span="100-101", cluster="lambda expression", file="JobState.cs"];
m10_72 [label="x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(null))", span="100-101", cluster="lambda expression", file="JobState.cs"];
m10_73 [label="Exit lambda expression", span="100-101", cluster="lambda expression", file="JobState.cs"];
m10_83 [label="Entry lambda expression", span="108-108", cluster="lambda expression", file="JobState.cs"];
m10_84 [label="x.GetJobParameter(''1'', ''Name'')", span="108-108", cluster="lambda expression", file="JobState.cs"];
m10_85 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="JobState.cs"];
m10_94 [label="x.GetJobParameter(''1'', ''Value'')", span="120-120", cluster="lambda expression", file="JobState.cs"];
m10_95 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="JobState.cs"];
m10_54 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", span="83-83", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="JobState.cs"];
m10_55 [label="var context = CreateContext()", span="85-85", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="JobState.cs"];
m10_56 [label="context.SetJobParameter(''Name'', ''Value'')", span="87-87", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="JobState.cs"];
m10_57 [label="_connectionMock.Verify(x => x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(''Value'')))", span="89-90", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="JobState.cs"];
m10_58 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", span="83-83", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="JobState.cs"];
m10_24 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="38-38", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="JobState.cs"];
m10_25 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ElectStateContext(\r\n                    _stateContext,\r\n                    _candidateStateMock.Object,\r\n                    null,\r\n                    null))", span="40-45", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="JobState.cs"];
m10_26 [label="Assert.Equal(''connection'', exception.ParamName)", span="47-47", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="JobState.cs"];
m10_27 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="38-38", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="JobState.cs"];
m10_64 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="JobState.cs"];
m10_65 [label="Entry Unk.SetJobParameter", span="", cluster="Unk.SetJobParameter", file="JobState.cs"];
m10_31 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", span="51-51", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="JobState.cs"];
m10_32 [label="var context = CreateContext()", span="53-53", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="JobState.cs"];
m10_33 [label="Assert.Equal(_stateContext.JobId, context.JobId)", span="55-55", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="JobState.cs"];
m10_34 [label="Assert.Equal(_stateContext.Job, context.Job)", span="56-56", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="JobState.cs"];
m10_35 [label="Assert.Same(_candidateStateMock.Object, context.CandidateState)", span="58-58", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="JobState.cs"];
m10_36 [label="Assert.Equal(''State'', context.CurrentState)", span="59-59", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="JobState.cs"];
m10_37 [label="Assert.Same(_connectionMock.Object, context.Connection)", span="60-60", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="JobState.cs"];
m10_38 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", span="51-51", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="JobState.cs"];
m10_6 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobState.cs"];
m10_82 [label="Entry HangFire.States.ElectStateContext.GetJobParameter<T>(string)", span="63-63", cluster="HangFire.States.ElectStateContext.GetJobParameter<T>(string)", file="JobState.cs"];
m10_14 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", span="25-25", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="JobState.cs"];
m10_15 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ElectStateContext(\r\n                    _stateContext,\r\n                    null,\r\n                    null,\r\n                    _connectionMock.Object))", span="27-32", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="JobState.cs"];
m10_16 [label="Assert.Equal(''candidateState'', exception.ParamName)", span="34-34", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="JobState.cs"];
m10_17 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", span="25-25", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="JobState.cs"];
m10_81 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="JobState.cs"];
m10_23 [label="Entry ElectStateContext.cstr", span="", cluster="ElectStateContext.cstr", file="JobState.cs"];
m10_39 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.CreateContext()", span="128-128", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="JobState.cs"];
m10_96 [label="return new ElectStateContext(\r\n                _stateContext,\r\n                _candidateStateMock.Object,\r\n                ''State'',\r\n                _connectionMock.Object);", span="130-134", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="JobState.cs"];
m10_97 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.CreateContext()", span="128-128", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="JobState.cs"];
m10_60 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="JobState.cs"];
m10_13 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="JobState.cs"];
m10_98 [label="HangFire.Core.Tests.States.ElectStateContextFacts", span="", file="JobState.cs"];
m10_99 [label=context, span="", file="JobState.cs"];
m11_64 [label="Entry RecurringJobScheduler.cstr", span="", cluster="RecurringJobScheduler.cstr", file="PrefetchJobFetcher.cs"];
m11_15 [label="Entry Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="11-11", cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="PrefetchJobFetcher.cs"];
m11_113 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="PrefetchJobFetcher.cs"];
m11_16 [label="Entry Mock<IThrottler>.cstr", span="", cluster="Mock<IThrottler>.cstr", file="PrefetchJobFetcher.cs"];
m11_150 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", span="160-160", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="PrefetchJobFetcher.cs"];
m11_152 [label="_recurringJob[''LastExecution''] = JobHelper.SerializeDateTime(time)", span="163-163", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="PrefetchJobFetcher.cs"];
m11_153 [label="var scheduler = CreateScheduler()", span="164-164", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="PrefetchJobFetcher.cs"];
m11_154 [label="scheduler.Execute(_context.Object)", span="166-166", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="PrefetchJobFetcher.cs"];
m11_155 [label="_instant.Verify(x => x.GetNextInstants(time))", span="168-168", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="PrefetchJobFetcher.cs"];
m11_151 [label="var time = DateTime.UtcNow", span="162-162", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="PrefetchJobFetcher.cs"];
m11_156 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", span="160-160", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="PrefetchJobFetcher.cs"];
m11_51 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="PrefetchJobFetcher.cs"];
m11_60 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="PrefetchJobFetcher.cs"];
m11_161 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", span="172-172", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="PrefetchJobFetcher.cs"];
m11_162 [label="_connection.Setup(x => x.GetAllItemsFromSet(It.IsAny<string>()))\r\n                .Returns(new HashSet<string> { ''non-existing-job'' })", span="174-175", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="PrefetchJobFetcher.cs"];
m11_163 [label="var scheduler = CreateScheduler()", span="176-176", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="PrefetchJobFetcher.cs"];
m11_164 [label="Assert.DoesNotThrow(() => scheduler.Execute(_context.Object))", span="178-178", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="PrefetchJobFetcher.cs"];
m11_165 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", span="172-172", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="PrefetchJobFetcher.cs"];
m11_50 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="PrefetchJobFetcher.cs"];
m11_26 [label="Entry Mock<IJobCreationProcess>.cstr", span="", cluster="Mock<IJobCreationProcess>.cstr", file="PrefetchJobFetcher.cs"];
m11_102 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", span="113-113", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="PrefetchJobFetcher.cs"];
m11_103 [label="var scheduler = CreateScheduler()", span="116-116", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_104 [label="scheduler.Execute(_context.Object)", span="119-119", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_105 [label="var jobKey = String.Format(''recurring-job:{0}'', RecurringJobId)", span="122-122", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_106 [label="_connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == ''job-id'')))", span="124-127", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_107 [label="_connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant))))", span="129-133", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_108 [label="_connection.Verify(x => x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant))))", span="135-139", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_109 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", span="113-113", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_UpdatesRecurringJobParameters_OnCompletion()", file="PrefetchJobFetcher.cs"];
m11_55 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="PrefetchJobFetcher.cs"];
m11_131 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", span="143-143", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="PrefetchJobFetcher.cs"];
m11_132 [label="_instant.Setup(x => x.GetNextInstants(It.IsAny<DateTime?>())).Returns(Enumerable.Empty<DateTime>)", span="145-145", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="PrefetchJobFetcher.cs"];
m11_133 [label="var scheduler = CreateScheduler()", span="146-146", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="PrefetchJobFetcher.cs"];
m11_134 [label="scheduler.Execute(_context.Object)", span="148-148", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="PrefetchJobFetcher.cs"];
m11_135 [label="_process.Verify(x => x.Run(It.IsAny<CreateContext>()), Times.Never)", span="150-150", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="PrefetchJobFetcher.cs"];
m11_136 [label="_connection.Verify(x => x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', RecurringJobId),\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant))))", span="152-156", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="PrefetchJobFetcher.cs"];
m11_137 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", span="143-143", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="PrefetchJobFetcher.cs"];
m11_166 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="PrefetchJobFetcher.cs"];
m11_65 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", span="71-71", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="PrefetchJobFetcher.cs"];
m11_66 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_process.Object, null, _throttler.Object))", span="73-75", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_67 [label="Assert.Equal(''instantFactory'', exception.ParamName)", span="77-77", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_68 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", span="71-71", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenInstantFactoryIsNull()", file="PrefetchJobFetcher.cs"];
m11_84 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="240-240", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="PrefetchJobFetcher.cs"];
m11_226 [label="return new RecurringJobScheduler(\r\n                _process.Object,\r\n                _instantFactory,\r\n                _throttler.Object);", span="242-245", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="PrefetchJobFetcher.cs"];
m11_227 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="240-240", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="PrefetchJobFetcher.cs"];
m11_201 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", span="214-214", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="PrefetchJobFetcher.cs"];
m11_202 [label="_instantFactory = (schedule, timeZoneInfo) =>\r\n            {\r\n                if (!timeZoneInfo.Equals(TimeZoneInfo.Utc)) throw new InvalidOperationException(''Invalid timezone'');\r\n                return _instant.Object;\r\n            }", span="217-221", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="PrefetchJobFetcher.cs"];
m11_203 [label="_recurringJob.Remove(''TimeZoneId'')", span="222-222", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="PrefetchJobFetcher.cs"];
m11_204 [label="var scheduler = CreateScheduler()", span="223-223", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="PrefetchJobFetcher.cs"];
m11_205 [label="Assert.DoesNotThrow(() => scheduler.Execute(_context.Object))", span="226-226", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="PrefetchJobFetcher.cs"];
m11_206 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", span="214-214", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="PrefetchJobFetcher.cs"];
m11_30 [label="Entry Unk.>", span="", cluster="Unk.>", file="PrefetchJobFetcher.cs"];
m11_213 [label="Entry System.TimeZoneInfo.Equals(System.TimeZoneInfo)", span="0-0", cluster="System.TimeZoneInfo.Equals(System.TimeZoneInfo)", file="PrefetchJobFetcher.cs"];
m11_191 [label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0", cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="PrefetchJobFetcher.cs"];
m11_22 [label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="72-72", cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="PrefetchJobFetcher.cs"];
m11_0 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", span="26-26", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="PrefetchJobFetcher.cs"];
m11_1 [label="_context = new BackgroundProcessContextMock()", span="28-28", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_2 [label="_throttler = new Mock<IThrottler>()", span="30-30", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_3 [label="_instant = new Mock<IScheduleInstant>()", span="33-33", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_4 [label="_instant.Setup(x => x.GetNextInstants(It.IsAny<DateTime?>())).Returns(new[] { _instant.Object.NowInstant })", span="34-34", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_5 [label="var timeZone1 = TimeZoneInfo.Local", span="36-36", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_6 [label="_instantFactory = (schedule, timeZone) => _instant.Object", span="38-38", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_7 [label="_recurringJob = new Dictionary<string, string>\r\n            {\r\n                { ''Cron'', ''* * * * *'' },\r\n                { ''Job'', JobHelper.ToJson(InvocationData.Serialize(Job.FromExpression(() => Console.WriteLine()))) },\r\n                { ''TimeZoneId'', timeZone1.Id }\r\n            }", span="40-45", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_8 [label="_connection = new Mock<IStorageConnection>()", span="47-47", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_9 [label="_context.Storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="48-48", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_10 [label="_connection.Setup(x => x.GetAllItemsFromSet(''recurring-jobs''))\r\n                .Returns(new HashSet<string> { RecurringJobId })", span="50-51", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_11 [label="_connection.Setup(x => x.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', RecurringJobId)))\r\n                .Returns(_recurringJob)", span="53-54", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_12 [label="_process = new Mock<IJobCreationProcess>()", span="56-56", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_13 [label="_process.Setup(x => x.Run(It.IsAny<CreateContext>())).Returns(''job-id'')", span="57-57", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_14 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", span="26-26", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="PrefetchJobFetcher.cs"];
m11_17 [label="Entry Mock<IScheduleInstant>.cstr", span="", cluster="Mock<IScheduleInstant>.cstr", file="PrefetchJobFetcher.cs"];
m11_42 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="PrefetchJobFetcher.cs"];
m11_190 [label="Entry System.Type.GetType(string)", span="0-0", cluster="System.Type.GetType(string)", file="PrefetchJobFetcher.cs"];
m11_197 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="PrefetchJobFetcher.cs"];
m11_124 [label="Entry Unk.SerializeDateTime", span="", cluster="Unk.SerializeDateTime", file="PrefetchJobFetcher.cs"];
m11_20 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="PrefetchJobFetcher.cs"];
m11_90 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", span="101-101", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="PrefetchJobFetcher.cs"];
m11_91 [label="_recurringJob[''Queue''] = ''critical''", span="103-103", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_92 [label="var scheduler = CreateScheduler()", span="104-104", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_93 [label="scheduler.Execute(_context.Object)", span="106-106", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_94 [label="_process.Verify(x => x.Run(\r\n                It.Is<CreateContext>(cc => ((EnqueuedState)cc.InitialState).Queue == ''critical'')))", span="108-109", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_95 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", span="101-101", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJobToAGivenQueue_WhenItIsTimeToRunIt()", file="PrefetchJobFetcher.cs"];
m11_157 [label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68", cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="PrefetchJobFetcher.cs"];
m11_18 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="PrefetchJobFetcher.cs"];
m11_217 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", span="230-230", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="PrefetchJobFetcher.cs"];
m11_218 [label="_recurringJob[''TimeZoneId''] = ''Some garbage''", span="232-232", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="PrefetchJobFetcher.cs"];
m11_219 [label="var scheduler = CreateScheduler()", span="233-233", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="PrefetchJobFetcher.cs"];
m11_220 [label="scheduler.Execute(_context.Object)", span="235-235", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="PrefetchJobFetcher.cs"];
m11_221 [label="_process.Verify(x => x.Run(It.IsAny<CreateContext>()), Times.Never)", span="237-237", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="PrefetchJobFetcher.cs"];
m11_222 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", span="230-230", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="PrefetchJobFetcher.cs"];
m11_79 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", span="91-91", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="PrefetchJobFetcher.cs"];
m11_80 [label="var scheduler = CreateScheduler()", span="93-93", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_81 [label="scheduler.Execute(_context.Object)", span="95-95", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_82 [label="_process.Verify(x => x.Run(It.IsNotNull<CreateContext>()))", span="97-97", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_83 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", span="91-91", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_EnqueuesAJob_WhenItIsTimeToRunIt()", file="PrefetchJobFetcher.cs"];
m11_182 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", span="195-195", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="PrefetchJobFetcher.cs"];
m11_184 [label="_instantFactory = (schedule, timeZoneInfo) =>\r\n            {\r\n                if (timeZoneInfo.Id != timeZoneId) throw new InvalidOperationException(''Invalid timezone'');\r\n                return _instant.Object;\r\n            }", span="199-203", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="PrefetchJobFetcher.cs"];
m11_186 [label="_recurringJob[''TimeZoneId''] = timeZone.Id", span="206-206", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="PrefetchJobFetcher.cs"];
m11_187 [label="var scheduler = CreateScheduler()", span="207-207", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="PrefetchJobFetcher.cs"];
m11_188 [label="Assert.DoesNotThrow(() => scheduler.Execute(_context.Object))", span="210-210", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="PrefetchJobFetcher.cs"];
m11_183 [label="var timeZoneId = Type.GetType(''Mono.Runtime'') != null ? ''Pacific/Honolulu'' : ''Hawaiian Standard Time''", span="197-197", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="PrefetchJobFetcher.cs"];
m11_185 [label="var timeZone = TimeZoneInfo.FindSystemTimeZoneById(timeZoneId)", span="205-205", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="PrefetchJobFetcher.cs"];
m11_189 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", span="195-195", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="PrefetchJobFetcher.cs"];
m11_23 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="PrefetchJobFetcher.cs"];
m11_85 [label="Entry Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="63-63", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="PrefetchJobFetcher.cs"];
m11_208 [label="Entry lambda expression", span="217-221", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_27 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_35 [label="Entry lambda expression", span="43-43", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_39 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_43 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_47 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_52 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_28 [label="x.GetNextInstants(It.IsAny<DateTime?>())", span="34-34", cluster="lambda expression", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_29 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_33 [label="_instant.Object", span="38-38", cluster="lambda expression", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_32 [label="Entry lambda expression", span="38-38", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_34 [label="Exit lambda expression", span="38-38", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_36 [label="Console.WriteLine()", span="43-43", cluster="lambda expression", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_37 [label="Exit lambda expression", span="43-43", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_40 [label="x.GetConnection()", span="48-48", cluster="lambda expression", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_41 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_44 [label="x.GetAllItemsFromSet(''recurring-jobs'')", span="50-50", cluster="lambda expression", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_45 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_48 [label="x.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', RecurringJobId))", span="53-53", cluster="lambda expression", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_49 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_53 [label="x.Run(It.IsAny<CreateContext>())", span="57-57", cluster="lambda expression", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_54 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_61 [label="Entry lambda expression", span="65-65", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_62 [label="new RecurringJobScheduler(null, _instantFactory, _throttler.Object)", span="65-65", cluster="lambda expression", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_63 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_69 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_70 [label="new RecurringJobScheduler(_process.Object, null, _throttler.Object)", span="75-75", cluster="lambda expression", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_71 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_76 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_77 [label="new RecurringJobScheduler(_process.Object, _instantFactory, null)", span="85-85", cluster="lambda expression", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_78 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_87 [label="Entry lambda expression", span="97-97", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_88 [label="x.Run(It.IsNotNull<CreateContext>())", span="97-97", cluster="lambda expression", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_89 [label="Exit lambda expression", span="97-97", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_96 [label="Entry lambda expression", span="108-109", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_97 [label="x.Run(\r\n                It.Is<CreateContext>(cc => ((EnqueuedState)cc.InitialState).Queue == ''critical''))", span="108-109", cluster="lambda expression", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_98 [label="Exit lambda expression", span="108-109", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_99 [label="Entry lambda expression", span="109-109", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_100 [label="((EnqueuedState)cc.InitialState).Queue == ''critical''", span="109-109", cluster="lambda expression", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_101 [label="Exit lambda expression", span="109-109", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_111 [label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == ''job-id''))", span="124-127", cluster="lambda expression", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_119 [label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)))", span="129-133", cluster="lambda expression", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_126 [label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)))", span="135-139", cluster="lambda expression", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_110 [label="Entry lambda expression", span="124-127", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_112 [label="Exit lambda expression", span="124-127", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_114 [label="Entry lambda expression", span="126-127", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_118 [label="Entry lambda expression", span="129-133", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_120 [label="Exit lambda expression", span="129-133", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_121 [label="Entry lambda expression", span="131-133", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_125 [label="Entry lambda expression", span="135-139", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_127 [label="Exit lambda expression", span="135-139", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_128 [label="Entry lambda expression", span="137-139", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_115 [label="rj.ContainsKey(''LastJobId'') && rj[''LastJobId''] == ''job-id''", span="127-127", cluster="lambda expression", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_116 [label="Exit lambda expression", span="126-127", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_122 [label="rj.ContainsKey(''LastExecution'') && rj[''LastExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)", span="132-133", cluster="lambda expression", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_123 [label="Exit lambda expression", span="131-133", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_129 [label="rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)", span="138-139", cluster="lambda expression", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_130 [label="Exit lambda expression", span="137-139", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_145 [label="x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', RecurringJobId),\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant)))", span="152-156", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_148 [label="rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant)", span="155-156", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_171 [label="scheduler.Execute(_context.Object)", span="178-178", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_180 [label="scheduler.Execute(_context.Object)", span="191-191", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_195 [label="return _instant.Object;", span="202-202", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_199 [label="scheduler.Execute(_context.Object)", span="210-210", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_211 [label="return _instant.Object;", span="220-220", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_215 [label="scheduler.Execute(_context.Object)", span="226-226", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_139 [label="x.GetNextInstants(It.IsAny<DateTime?>())", span="145-145", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_142 [label="x.Run(It.IsAny<CreateContext>())", span="150-150", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_168 [label="x.GetAllItemsFromSet(It.IsAny<string>())", span="174-174", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_224 [label="x.Run(It.IsAny<CreateContext>())", span="237-237", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_159 [label="x.GetNextInstants(time)", span="168-168", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_138 [label="Entry lambda expression", span="145-145", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_141 [label="Entry lambda expression", span="150-150", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_144 [label="Entry lambda expression", span="152-156", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_146 [label="Exit lambda expression", span="152-156", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_147 [label="Entry lambda expression", span="154-156", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_149 [label="Exit lambda expression", span="154-156", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_158 [label="Entry lambda expression", span="168-168", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_167 [label="Entry lambda expression", span="174-174", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_170 [label="Entry lambda expression", span="178-178", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_172 [label="Exit lambda expression", span="178-178", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_179 [label="Entry lambda expression", span="191-191", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_181 [label="Exit lambda expression", span="191-191", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_193 [label="timeZoneInfo.Id != timeZoneId", span="201-201", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_196 [label="Exit lambda expression", span="199-203", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_198 [label="Entry lambda expression", span="210-210", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_200 [label="Exit lambda expression", span="210-210", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_209 [label="!timeZoneInfo.Equals(TimeZoneInfo.Utc)", span="219-219", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_212 [label="Exit lambda expression", span="217-221", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_214 [label="Entry lambda expression", span="226-226", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_216 [label="Exit lambda expression", span="226-226", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_223 [label="Entry lambda expression", span="237-237", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_140 [label="Exit lambda expression", span="145-145", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_143 [label="Exit lambda expression", span="150-150", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_169 [label="Exit lambda expression", span="174-174", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_225 [label="Exit lambda expression", span="237-237", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_192 [label="Entry lambda expression", span="199-203", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_194 [label="throw new InvalidOperationException(''Invalid timezone'');", span="201-201", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_210 [label="throw new InvalidOperationException(''Invalid timezone'');", span="219-219", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_160 [label="Exit lambda expression", span="168-168", cluster="lambda expression", file="PrefetchJobFetcher.cs"];
m11_31 [label="Entry Unk.GetNextInstants", span="", cluster="Unk.GetNextInstants", file="PrefetchJobFetcher.cs"];
m11_56 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="61-61", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="PrefetchJobFetcher.cs"];
m11_57 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(null, _instantFactory, _throttler.Object))", span="63-65", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_58 [label="Assert.Equal(''creationProcess'', exception.ParamName)", span="67-67", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_59 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="61-61", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="PrefetchJobFetcher.cs"];
m11_86 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="PrefetchJobFetcher.cs"];
m11_46 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="PrefetchJobFetcher.cs"];
m11_178 [label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="30-30", cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="PrefetchJobFetcher.cs"];
m11_19 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="PrefetchJobFetcher.cs"];
m11_72 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", span="81-81", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="PrefetchJobFetcher.cs"];
m11_73 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n// ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new RecurringJobScheduler(_process.Object, _instantFactory, null))", span="83-85", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_74 [label="Assert.Equal(''throttler'', exception.ParamName)", span="87-87", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", color=green, community=0, file="PrefetchJobFetcher.cs"];
m11_75 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", span="81-81", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="PrefetchJobFetcher.cs"];
m11_173 [label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="182-182", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="PrefetchJobFetcher.cs"];
m11_174 [label="_recurringJob[''Job''] =\r\n                JobHelper.ToJson(new InvocationData(''SomeType'', ''SomeMethod'', ''Parameters'', ''arguments''))", span="185-186", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="PrefetchJobFetcher.cs"];
m11_175 [label="var scheduler = CreateScheduler()", span="188-188", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="PrefetchJobFetcher.cs"];
m11_176 [label="Assert.DoesNotThrow(() => scheduler.Execute(_context.Object))", span="191-191", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="PrefetchJobFetcher.cs"];
m11_177 [label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="182-182", cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="PrefetchJobFetcher.cs"];
m11_207 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="PrefetchJobFetcher.cs"];
m11_24 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="PrefetchJobFetcher.cs"];
m11_38 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="PrefetchJobFetcher.cs"];
m11_21 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="187-187", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="PrefetchJobFetcher.cs"];
m11_117 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="PrefetchJobFetcher.cs"];
m11_25 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="PrefetchJobFetcher.cs"];
m11_228 [label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", span="", file="PrefetchJobFetcher.cs"];
m11_229 [label=jobKey, span="", file="PrefetchJobFetcher.cs"];
m11_231 [label=scheduler, span="", file="PrefetchJobFetcher.cs"];
m11_232 [label=scheduler, span="", file="PrefetchJobFetcher.cs"];
m11_234 [label=scheduler, span="", file="PrefetchJobFetcher.cs"];
m11_235 [label=scheduler, span="", file="PrefetchJobFetcher.cs"];
m11_230 [label=time, span="", file="PrefetchJobFetcher.cs"];
m11_233 [label=timeZoneId, span="", file="PrefetchJobFetcher.cs"];
m13_13 [label="throw new ArgumentNullException(''options'');", span="69-69", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="ProcessingState.cs"];
m13_27 [label="Exit lambda expression", span="43-44", cluster="lambda expression", file="ProcessingState.cs"];
m13_37 [label="Entry IAppBuilder.UseHangfireDashboard(string)", span="98-98", cluster="IAppBuilder.UseHangfireDashboard(string)", file="ProcessingState.cs"];
m13_46 [label="Entry IAppBuilder.UseHangfireDashboard(string, Hangfire.DashboardOptions, Hangfire.JobStorage)", span="113-113", cluster="IAppBuilder.UseHangfireDashboard(string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="ProcessingState.cs"];
m13_28 [label="Entry Unk.RemoveItemFromSortedSet", span="", cluster="Unk.RemoveItemFromSortedSet", file="ProcessingState.cs"];
m13_43 [label="Entry Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions)", span="105-105", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions)", file="ProcessingState.cs"];
m13_44 [label="return builder.UseHangfireDashboard(pathMatch, options, JobStorage.Current);", span="110-110", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions)", file="ProcessingState.cs"];
m13_45 [label="Exit Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions)", span="105-105", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions)", file="ProcessingState.cs"];
m13_33 [label="Entry Unk.Register", span="", cluster="Unk.Register", file="ProcessingState.cs"];
m13_67 [label="Entry Hangfire.AppBuilderExtensions.UseOwin(IAppBuilder)", span="133-133", cluster="Hangfire.AppBuilderExtensions.UseOwin(IAppBuilder)", file="ProcessingState.cs"];
m13_68 [label="return middleware => builder.Use(middleware(builder.Properties));", span="135-135", cluster="Hangfire.AppBuilderExtensions.UseOwin(IAppBuilder)", file="ProcessingState.cs"];
m13_69 [label="Exit Hangfire.AppBuilderExtensions.UseOwin(IAppBuilder)", span="133-133", cluster="Hangfire.AppBuilderExtensions.UseOwin(IAppBuilder)", file="ProcessingState.cs"];
m13_34 [label="Entry Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)", span="93-93", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)", file="ProcessingState.cs"];
m13_35 [label="return builder.UseHangfireDashboard(''/hangfire'');", span="95-95", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)", file="ProcessingState.cs"];
m13_36 [label="Exit Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)", span="93-93", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)", file="ProcessingState.cs"];
m13_65 [label="Entry Unk.UseOwin", span="", cluster="Unk.UseOwin", file="ProcessingState.cs"];
m13_60 [label="Entry Unk.AddConversions", span="", cluster="Unk.AddConversions", file="ProcessingState.cs"];
m13_0 [label="Entry HangFire.States.ProcessingState.ProcessingState(string, string, string)", span="10-10", cluster="HangFire.States.ProcessingState.ProcessingState(string, string, string)", file="ProcessingState.cs"];
m13_1 [label="ServerName = serverName", span="13-13", cluster="HangFire.States.ProcessingState.ProcessingState(string, string, string)", file="ProcessingState.cs"];
m13_2 [label="Exit HangFire.States.ProcessingState.ProcessingState(string, string, string)", span="10-10", cluster="HangFire.States.ProcessingState.ProcessingState(string, string, string)", file="ProcessingState.cs"];
m13_4 [label="return new Dictionary<string, string>\r\n                {\r\n                    { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''ServerName'', ServerName }\r\n                };", span="22-26", cluster="HangFire.States.ProcessingState.GetProperties()", file="ProcessingState.cs"];
m13_7 [label="Exit Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions)", span="56-56", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions)", file="ProcessingState.cs"];
m13_18 [label="var context = new OwinContext(builder.Properties)", span="75-75", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="ProcessingState.cs"];
m13_31 [label="Entry Unk.>", span="", cluster="Unk.>", file="ProcessingState.cs"];
m13_19 [label="var token = context.Get<CancellationToken>(''host.OnAppDisposing'')", span="76-76", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="ProcessingState.cs"];
m13_20 [label="token == default(CancellationToken)", span="77-77", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="ProcessingState.cs"];
m13_21 [label="token = context.Get<CancellationToken>(''server.OnDispose'')", span="80-80", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", color=green, community=0, file="ProcessingState.cs"];
m13_22 [label="token == default(CancellationToken)", span="83-83", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", color=green, community=0, file="ProcessingState.cs"];
m13_23 [label="throw new InvalidOperationException(''Current OWIN environment does not contain an instance of the `CancellationToken` class under `host.OnAppDisposing` key.'');", span="85-85", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", color=green, community=1, file="ProcessingState.cs"];
m13_24 [label="token.Register(server.Dispose)", span="88-88", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="ProcessingState.cs"];
m13_29 [label="HangFire.States.ProcessingState", span="", cluster="System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", file="ProcessingState.cs"];
m13_32 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ProcessingState.cs"];
m13_6 [label="return builder.UseHangfireServer(options, JobStorage.Current);", span="60-60", cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions)", file="ProcessingState.cs"];
m13_61 [label="Entry Unk.Map", span="", cluster="Unk.Map", file="ProcessingState.cs"];
m13_9 [label="transaction == null", span="31-31", cluster="HangFire.States.ProcessingState.Apply(IRedisTransaction)", file="ProcessingState.cs"];
m13_10 [label="throw new ArgumentNullException(''transaction'');", span="31-31", cluster="HangFire.States.ProcessingState.Apply(IRedisTransaction)", file="ProcessingState.cs"];
m13_12 [label="Exit HangFire.States.ProcessingState.Apply(IRedisTransaction)", span="29-29", cluster="HangFire.States.ProcessingState.Apply(IRedisTransaction)", file="ProcessingState.cs"];
m13_14 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="ProcessingState.cs"];
m13_25 [label="Entry lambda expression", span="43-44", cluster="lambda expression", file="ProcessingState.cs"];
m13_11 [label="transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                ''hangfire:processing'', JobId, JobHelper.ToTimestamp(DateTime.UtcNow)))", span="33-34", cluster="HangFire.States.ProcessingState.Apply(IRedisTransaction)", file="ProcessingState.cs"];
m13_15 [label="Entry lambda expression", span="33-34", cluster="lambda expression", file="ProcessingState.cs"];
m13_16 [label="x.AddItemToSortedSet(\r\n                ''hangfire:processing'', JobId, JobHelper.ToTimestamp(DateTime.UtcNow))", span="33-34", cluster="lambda expression", file="ProcessingState.cs"];
m13_17 [label="Exit lambda expression", span="33-34", cluster="lambda expression", file="ProcessingState.cs"];
m13_26 [label="x.RemoveItemFromSortedSet(\r\n                    ''hangfire:processing'', jobId)", span="43-44", cluster="lambda expression", file="ProcessingState.cs", color=green, community=1];
m13_41 [label="Entry Hangfire.DashboardOptions.DashboardOptions()", span="23-23", cluster="Hangfire.DashboardOptions.DashboardOptions()", file="ProcessingState.cs"];
m13_42 [label="Entry IAppBuilder.UseHangfireDashboard(string, Hangfire.DashboardOptions)", span="105-105", cluster="IAppBuilder.UseHangfireDashboard(string, Hangfire.DashboardOptions)", file="ProcessingState.cs"];
m13_3 [label="Entry HangFire.States.ProcessingState.GetProperties()", span="20-20", cluster="HangFire.States.ProcessingState.GetProperties()", file="ProcessingState.cs"];
m13_63 [label="subApp\r\n                .UseOwin()\r\n                .UseHangfireDashboard(options, storage, DashboardRoutes.Routes)", span="126-128", cluster="lambda expression", file="ProcessingState.cs"];
m13_62 [label="Entry lambda expression", span="126-128", cluster="lambda expression", file="ProcessingState.cs"];
m13_64 [label="Exit lambda expression", span="126-128", cluster="lambda expression", file="ProcessingState.cs"];
m13_71 [label="builder.Use(middleware(builder.Properties))", span="135-135", cluster="lambda expression", file="ProcessingState.cs"];
m13_70 [label="Entry lambda expression", span="135-135", cluster="lambda expression", file="ProcessingState.cs"];
m13_72 [label="Exit lambda expression", span="135-135", cluster="lambda expression", file="ProcessingState.cs"];
m13_47 [label="Entry Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", span="113-113", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="ProcessingState.cs"];
m13_48 [label="builder == null", span="119-119", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="ProcessingState.cs"];
m13_50 [label="pathMatch == null", span="120-120", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="ProcessingState.cs"];
m13_52 [label="options == null", span="121-121", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="ProcessingState.cs"];
m13_54 [label="storage == null", span="122-122", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="ProcessingState.cs"];
m13_56 [label="SignatureConversions.AddConversions(builder)", span="124-124", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="ProcessingState.cs"];
m13_57 [label="builder.Map(pathMatch, subApp => subApp\r\n                .UseOwin()\r\n                .UseHangfireDashboard(options, storage, DashboardRoutes.Routes))", span="126-128", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="ProcessingState.cs"];
m13_58 [label="return builder;", span="130-130", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="ProcessingState.cs"];
m13_49 [label="throw new ArgumentNullException(''builder'');", span="119-119", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="ProcessingState.cs"];
m13_51 [label="throw new ArgumentNullException(''pathMatch'');", span="120-120", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="ProcessingState.cs"];
m13_53 [label="throw new ArgumentNullException(''options'');", span="121-121", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="ProcessingState.cs"];
m13_55 [label="throw new ArgumentNullException(''storage'');", span="122-122", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="ProcessingState.cs"];
m13_59 [label="Exit Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", span="113-113", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", file="ProcessingState.cs"];
m13_5 [label="Exit HangFire.States.ProcessingState.GetProperties()", span="20-20", cluster="HangFire.States.ProcessingState.GetProperties()", file="ProcessingState.cs"];
m13_8 [label="Entry HangFire.States.ProcessingState.Apply(IRedisTransaction)", span="29-29", cluster="HangFire.States.ProcessingState.Apply(IRedisTransaction)", file="ProcessingState.cs"];
m13_74 [label="Entry Unk.Use", span="", cluster="Unk.Use", file="ProcessingState.cs"];
m13_73 [label="Entry Unk.middleware", span="", cluster="Unk.middleware", file="ProcessingState.cs"];
m13_38 [label="Entry Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", span="98-98", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", file="ProcessingState.cs"];
m13_39 [label="return builder.UseHangfireDashboard(pathMatch, new DashboardOptions());", span="102-102", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", file="ProcessingState.cs"];
m13_40 [label="Exit Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", span="98-98", cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", file="ProcessingState.cs"];
m13_66 [label="Entry System.Action<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Func<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>, System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>>>>.UseHangfireDashboard(Hangfire.DashboardOptions, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection)", span="42-42", cluster="System.Action<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Func<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>, System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>>>>.UseHangfireDashboard(Hangfire.DashboardOptions, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection)", file="ProcessingState.cs"];
m13_30 [label=string, span="", cluster="OwinContext.cstr", file="ProcessingState.cs"];
m13_75 [label="Hangfire.DashboardOptions", span="", file="ProcessingState.cs"];
m13_76 [label="Hangfire.JobStorage", span="", file="ProcessingState.cs"];
m13_77 [label=IAppBuilder, span="", file="ProcessingState.cs"];
m14_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ProcessingStateDescriptor.cs"];
m14_6 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="ProcessingStateDescriptor.cs"];
m14_7 [label="Entry lambda expression", span="11-12", cluster="lambda expression", file="ProcessingStateDescriptor.cs"];
m14_8 [label="x.RemoveItemFromSortedSet(\r\n                ''hangfire:processing'', jobId)", span="11-12", cluster="lambda expression", color=red, community=1, file="ProcessingStateDescriptor.cs"];
m14_9 [label="Exit lambda expression", span="11-12", cluster="lambda expression", file="ProcessingStateDescriptor.cs"];
m14_0 [label="Entry HangFire.States.ProcessingStateDescriptor.Unapply(IRedisTransaction, string)", span="7-7", cluster="HangFire.States.ProcessingStateDescriptor.Unapply(IRedisTransaction, string)", file="ProcessingStateDescriptor.cs"];
m14_1 [label="transaction == null", span="9-9", cluster="HangFire.States.ProcessingStateDescriptor.Unapply(IRedisTransaction, string)", color=red, community=0, file="ProcessingStateDescriptor.cs"];
m14_3 [label="transaction.QueueCommand(x => x.RemoveItemFromSortedSet(\r\n                ''hangfire:processing'', jobId))", span="11-12", cluster="HangFire.States.ProcessingStateDescriptor.Unapply(IRedisTransaction, string)", color=red, community=1, file="ProcessingStateDescriptor.cs"];
m14_2 [label="throw new ArgumentNullException(''transaction'');", span="9-9", cluster="HangFire.States.ProcessingStateDescriptor.Unapply(IRedisTransaction, string)", color=red, community=0, file="ProcessingStateDescriptor.cs"];
m14_4 [label="Exit HangFire.States.ProcessingStateDescriptor.Unapply(IRedisTransaction, string)", span="7-7", cluster="HangFire.States.ProcessingStateDescriptor.Unapply(IRedisTransaction, string)", file="ProcessingStateDescriptor.cs"];
m14_10 [label="Entry Unk.RemoveItemFromSortedSet", span="", cluster="Unk.RemoveItemFromSortedSet", file="ProcessingStateDescriptor.cs"];
m14_11 [label=string, span="", file="ProcessingStateDescriptor.cs"];
m16_199 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="289-289", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="ScheduledState.cs"];
m16_236 [label="token.ThrowIfCancellationRequested()", span="291-291", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="ScheduledState.cs"];
m16_237 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="289-289", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="ScheduledState.cs"];
m16_207 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", span="237-237", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="ScheduledState.cs"];
m16_208 [label="_context.BackgroundJob.Job = Job.FromExpression<JobFacts.Instance>(x => x.FunctionReturningValue())", span="239-239", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="ScheduledState.cs"];
m16_209 [label="var process = CreateProcess()", span="240-240", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="ScheduledState.cs"];
m16_210 [label="var result = process.Run(_context.Object)", span="242-242", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="ScheduledState.cs"];
m16_211 [label="Assert.Equal(''Return value'', result)", span="244-244", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="ScheduledState.cs"];
m16_212 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", span="237-237", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="ScheduledState.cs"];
m16_90 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="ScheduledState.cs"];
m16_229 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Dispose()", span="278-278", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Dispose()", file="ScheduledState.cs"];
m16_230 [label="_disposed = true", span="280-280", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Dispose()", file="ScheduledState.cs"];
m16_231 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Dispose()", span="278-278", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Dispose()", file="ScheduledState.cs"];
m16_77 [label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="ScheduledState.cs"];
m16_30 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.StaticMethod()", span="301-301", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.StaticMethod()", file="ScheduledState.cs"];
m16_242 [label="_methodInvoked = true", span="303-303", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.StaticMethod()", file="ScheduledState.cs"];
m16_243 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.StaticMethod()", span="301-301", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.StaticMethod()", file="ScheduledState.cs"];
m16_11 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ScheduledState.cs"];
m16_157 [label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", span="120-120", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="ScheduledState.cs"];
m16_172 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Method()", span="267-267", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Method()", file="ScheduledState.cs"];
m16_224 [label="_methodInvoked = true", span="269-269", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Method()", file="ScheduledState.cs"];
m16_225 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Method()", span="267-267", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Method()", file="ScheduledState.cs"];
m16_15 [label="Entry Hangfire.Server.CoreJobPerformanceProcess.CoreJobPerformanceProcess(Hangfire.JobActivator)", span="35-35", cluster="Hangfire.Server.CoreJobPerformanceProcess.CoreJobPerformanceProcess(Hangfire.JobActivator)", file="ScheduledState.cs"];
m16_31 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", span="48-48", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="ScheduledState.cs"];
m16_32 [label="_methodInvoked = false", span="50-50", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="ScheduledState.cs"];
m16_33 [label="_context.BackgroundJob.Job = Job.FromExpression<CoreJobPerformanceProcessFacts>(x => x.InstanceMethod())", span="51-51", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="ScheduledState.cs"];
m16_34 [label="var process = CreateProcess()", span="52-52", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="ScheduledState.cs"];
m16_35 [label="process.Run(_context.Object)", span="54-54", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="ScheduledState.cs"];
m16_36 [label="Assert.True(_methodInvoked)", span="56-56", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="ScheduledState.cs"];
m16_37 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", span="48-48", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeInstanceMethods()", file="ScheduledState.cs"];
m16_16 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeStaticMethods()", span="36-36", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeStaticMethods()", file="ScheduledState.cs"];
m16_17 [label="_methodInvoked = false", span="38-38", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeStaticMethods()", file="ScheduledState.cs"];
m16_18 [label="_context.BackgroundJob.Job = Job.FromExpression(() => StaticMethod())", span="39-39", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeStaticMethods()", file="ScheduledState.cs"];
m16_19 [label="var process = CreateProcess()", span="40-40", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeStaticMethods()", file="ScheduledState.cs"];
m16_20 [label="process.Run(_context.Object)", span="42-42", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeStaticMethods()", file="ScheduledState.cs"];
m16_21 [label="Assert.True(_methodInvoked)", span="44-44", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeStaticMethods()", file="ScheduledState.cs"];
m16_22 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeStaticMethods()", span="36-36", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_CanInvokeStaticMethods()", file="ScheduledState.cs"];
m16_78 [label="Entry System.Type.GetMethod(string)", span="0-0", cluster="System.Type.GetMethod(string)", file="ScheduledState.cs"];
m16_79 [label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="13-13", cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="ScheduledState.cs"];
m16_162 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", span="198-198", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="ScheduledState.cs"];
m16_163 [label="_methodInvoked = false", span="200-200", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="ScheduledState.cs"];
m16_164 [label="_context.BackgroundJob.Job = Job.FromExpression<BrokenDispose>(x => x.Method())", span="201-201", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="ScheduledState.cs"];
m16_165 [label="var process = CreateProcess()", span="202-202", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="ScheduledState.cs"];
m16_166 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="204-205", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="ScheduledState.cs"];
m16_167 [label="Assert.True(_methodInvoked)", span="207-207", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="ScheduledState.cs"];
m16_168 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", span="198-198", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="ScheduledState.cs"];
m16_120 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="ScheduledState.cs"];
m16_176 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", span="211-211", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="ScheduledState.cs"];
m16_177 [label="_context.BackgroundJob.Job = Job.FromExpression(() => ExceptionMethod())", span="213-213", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="ScheduledState.cs"];
m16_178 [label="var process = CreateProcess()", span="214-214", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="ScheduledState.cs"];
m16_179 [label="var thrownException = Assert.Throws<JobPerformanceException>(\r\n                () => process.Run(_context.Object))", span="216-217", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="ScheduledState.cs"];
m16_180 [label="Assert.IsType<InvalidOperationException>(thrownException.InnerException)", span="219-219", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="ScheduledState.cs"];
m16_181 [label="Assert.Equal(''exception'', thrownException.InnerException.Message)", span="220-220", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="ScheduledState.cs"];
m16_182 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", span="211-211", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="ScheduledState.cs"];
m16_10 [label="Entry Unk.>", span="", cluster="Unk.>", file="ScheduledState.cs"];
m16_24 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CreateProcess()", span="319-319", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CreateProcess()", file="ScheduledState.cs"];
m16_251 [label="return new CoreJobPerformanceProcess(_activator.Object);", span="321-321", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CreateProcess()", file="ScheduledState.cs"];
m16_252 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CreateProcess()", span="319-319", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CreateProcess()", file="ScheduledState.cs"];
m16_64 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", span="306-306", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", file="ScheduledState.cs"];
m16_244 [label="_methodInvoked = true", span="308-308", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", file="ScheduledState.cs"];
m16_245 [label="Assert.Equal(''hello'', stringArg)", span="310-310", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", file="ScheduledState.cs"];
m16_246 [label="Assert.Equal(5, intArg)", span="311-311", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", file="ScheduledState.cs"];
m16_247 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", span="306-306", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithArguments(string, int)", file="ScheduledState.cs"];
m16_190 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="224-224", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="ScheduledState.cs"];
m16_191 [label="_context.BackgroundJob.Job = Job.FromExpression(() => CancelableJob(JobCancellationToken.Null))", span="227-227", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="ScheduledState.cs"];
m16_192 [label="_context.CancellationToken.Setup(x => x.ThrowIfCancellationRequested()).Throws<OperationCanceledException>()", span="228-228", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="ScheduledState.cs"];
m16_193 [label="var process = CreateProcess()", span="229-229", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="ScheduledState.cs"];
m16_194 [label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context.Object))", span="232-233", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="ScheduledState.cs"];
m16_195 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="224-224", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="ScheduledState.cs"];
m16_203 [label="Entry Unk.ThrowIfCancellationRequested", span="", cluster="Unk.ThrowIfCancellationRequested", file="ScheduledState.cs"];
m16_221 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Dispose()", span="259-259", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Dispose()", file="ScheduledState.cs"];
m16_222 [label="_disposed = true", span="261-261", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Dispose()", file="ScheduledState.cs"];
m16_223 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Dispose()", span="259-259", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Dispose()", file="ScheduledState.cs"];
m16_65 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="87-87", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="ScheduledState.cs"];
m16_66 [label="_methodInvoked = false", span="90-90", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="ScheduledState.cs"];
m16_67 [label="var typeConverter = TypeDescriptor.GetConverter(typeof(DateTime))", span="91-91", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="ScheduledState.cs"];
m16_68 [label="var convertedDate = typeConverter.ConvertToInvariantString(SomeDateTime)", span="92-92", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="ScheduledState.cs"];
m16_69 [label="var type = typeof(CoreJobPerformanceProcessFacts)", span="94-94", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="ScheduledState.cs"];
m16_71 [label="_context.BackgroundJob.Job = new Job(type, method, new[] { convertedDate })", span="97-97", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="ScheduledState.cs"];
m16_70 [label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="95-95", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="ScheduledState.cs"];
m16_72 [label="var process = CreateProcess()", span="98-98", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="ScheduledState.cs"];
m16_73 [label="process.Run(_context.Object)", span="101-101", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="ScheduledState.cs"];
m16_74 [label="Assert.True(_methodInvoked)", span="104-104", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="ScheduledState.cs"];
m16_75 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="87-87", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="ScheduledState.cs"];
m16_91 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", span="128-128", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="ScheduledState.cs"];
m16_92 [label="_methodInvoked = false", span="131-131", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="ScheduledState.cs"];
m16_93 [label="_context.BackgroundJob.Job = Job.FromExpression(() => MethodWithDateTimeArgument(SomeDateTime))", span="132-132", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="ScheduledState.cs"];
m16_94 [label="var process = CreateProcess()", span="133-133", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="ScheduledState.cs"];
m16_95 [label="process.Run(_context.Object)", span="136-136", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="ScheduledState.cs"];
m16_96 [label="Assert.True(_methodInvoked)", span="139-139", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="ScheduledState.cs"];
m16_97 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", span="128-128", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="ScheduledState.cs"];
m16_53 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Method()", span="254-254", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Method()", file="ScheduledState.cs"];
m16_219 [label="_methodInvoked = true", span="256-256", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Method()", file="ScheduledState.cs"];
m16_220 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Method()", span="254-254", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Disposable.Method()", file="ScheduledState.cs"];
m16_113 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", span="158-158", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="ScheduledState.cs"];
m16_114 [label="var exception = new InvalidOperationException()", span="161-161", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="ScheduledState.cs"];
m16_115 [label="_activator.Setup(x => x.ActivateJob(It.IsAny<Type>())).Throws(exception)", span="162-162", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="ScheduledState.cs"];
m16_116 [label="_context.BackgroundJob.Job = Job.FromExpression(() => InstanceMethod())", span="164-164", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="ScheduledState.cs"];
m16_117 [label="var process = CreateProcess()", span="165-165", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="ScheduledState.cs"];
m16_118 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="168-169", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="ScheduledState.cs"];
m16_119 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", span="158-158", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsException_WhenActivatorThrowsAnException()", file="ScheduledState.cs"];
m16_54 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", span="72-72", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", file="ScheduledState.cs"];
m16_55 [label="_methodInvoked = false", span="75-75", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", file="ScheduledState.cs"];
m16_56 [label="_context.BackgroundJob.Job = Job.FromExpression(() => MethodWithArguments(''hello'', 5))", span="76-76", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", file="ScheduledState.cs"];
m16_57 [label="var process = CreateProcess()", span="77-77", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", file="ScheduledState.cs"];
m16_58 [label="process.Run(_context.Object)", span="80-80", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", file="ScheduledState.cs"];
m16_59 [label="Assert.True(_methodInvoked)", span="83-83", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", file="ScheduledState.cs"];
m16_60 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", span="72-72", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesArguments_ToACallingMethod()", file="ScheduledState.cs"];
m16_250 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ScheduledState.cs"];
m16_226 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Dispose()", span="272-272", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Dispose()", file="ScheduledState.cs"];
m16_227 [label="throw new InvalidOperationException();", span="274-274", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Dispose()", file="ScheduledState.cs"];
m16_228 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Dispose()", span="272-272", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.BrokenDispose.Dispose()", file="ScheduledState.cs"];
m16_76 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="ScheduledState.cs"];
m16_42 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.InstanceMethod()", span="247-247", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.InstanceMethod()", file="ScheduledState.cs"];
m16_217 [label="_methodInvoked = true", span="249-249", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.InstanceMethod()", file="ScheduledState.cs"];
m16_218 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.InstanceMethod()", span="247-247", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.InstanceMethod()", file="ScheduledState.cs"];
m16_112 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", span="283-283", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", file="ScheduledState.cs"];
m16_232 [label="_methodInvoked = true", span="285-285", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", file="ScheduledState.cs"];
m16_233 [label="Assert.Null(argument)", span="286-286", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", file="ScheduledState.cs"];
m16_234 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", span="283-283", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.NullArgumentMethod(string[])", file="ScheduledState.cs"];
m16_25 [label="Entry Hangfire.Server.CoreJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", span="41-41", cluster="Hangfire.Server.CoreJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="ScheduledState.cs"];
m16_158 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="ScheduledState.cs"];
m16_186 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.ExceptionMethod()", span="314-314", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.ExceptionMethod()", file="ScheduledState.cs"];
m16_248 [label="throw new InvalidOperationException(''exception'');", span="316-316", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.ExceptionMethod()", file="ScheduledState.cs"];
m16_249 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.ExceptionMethod()", span="314-314", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.ExceptionMethod()", file="ScheduledState.cs"];
m16_43 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", span="60-60", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="ScheduledState.cs"];
m16_44 [label="_disposed = false", span="62-62", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="ScheduledState.cs"];
m16_45 [label="_context.BackgroundJob.Job = Job.FromExpression<Disposable>(x => x.Method())", span="63-63", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="ScheduledState.cs"];
m16_46 [label="var process = CreateProcess()", span="64-64", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="ScheduledState.cs"];
m16_47 [label="process.Run(_context.Object)", span="66-66", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="ScheduledState.cs"];
m16_48 [label="Assert.True(_disposed)", span="68-68", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="ScheduledState.cs"];
m16_49 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", span="60-60", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="ScheduledState.cs"];
m16_121 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ScheduledState.cs"];
m16_122 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="ScheduledState.cs"];
m16_235 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="ScheduledState.cs"];
m16_38 [label="Entry Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="230-230", cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="ScheduledState.cs"];
m16_133 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="173-173", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="ScheduledState.cs"];
m16_134 [label="_activator.Setup(x => x.ActivateJob(It.IsNotNull<Type>())).Returns(null)", span="175-175", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="ScheduledState.cs"];
m16_135 [label="_context.BackgroundJob.Job = Job.FromExpression(() => InstanceMethod())", span="176-176", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="ScheduledState.cs"];
m16_136 [label="var process = CreateProcess()", span="177-177", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="ScheduledState.cs"];
m16_137 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="179-180", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="ScheduledState.cs"];
m16_138 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="173-173", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="ScheduledState.cs"];
m16_102 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", span="143-143", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", file="ScheduledState.cs"];
m16_103 [label="_methodInvoked = false", span="146-146", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", file="ScheduledState.cs"];
m16_104 [label="_context.BackgroundJob.Job = Job.FromExpression(() => NullArgumentMethod(null))", span="147-147", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", file="ScheduledState.cs"];
m16_105 [label="var process = CreateProcess()", span="149-149", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", file="ScheduledState.cs"];
m16_106 [label="process.Run(_context.Object)", span="151-151", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", file="ScheduledState.cs"];
m16_107 [label="Assert.True(_methodInvoked)", span="154-154", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", file="ScheduledState.cs"];
m16_108 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", span="143-143", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_WorksCorrectly_WithNullValues()", file="ScheduledState.cs"];
m16_213 [label="Entry lambda expression", span="239-239", cluster="lambda expression", file="ScheduledState.cs"];
m16_12 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="ScheduledState.cs"];
m16_13 [label="new CoreJobPerformanceProcess(null)", span="30-30", cluster="lambda expression", file="ScheduledState.cs"];
m16_14 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="ScheduledState.cs"];
m16_27 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="ScheduledState.cs"];
m16_28 [label="StaticMethod()", span="39-39", cluster="lambda expression", file="ScheduledState.cs"];
m16_29 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="ScheduledState.cs"];
m16_39 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="ScheduledState.cs"];
m16_40 [label="x.InstanceMethod()", span="51-51", cluster="lambda expression", file="ScheduledState.cs"];
m16_41 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="ScheduledState.cs"];
m16_50 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="ScheduledState.cs"];
m16_51 [label="x.Method()", span="63-63", cluster="lambda expression", file="ScheduledState.cs"];
m16_52 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="ScheduledState.cs"];
m16_61 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="ScheduledState.cs"];
m16_62 [label="MethodWithArguments(''hello'', 5)", span="76-76", cluster="lambda expression", file="ScheduledState.cs"];
m16_63 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="ScheduledState.cs"];
m16_98 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="ScheduledState.cs"];
m16_99 [label="MethodWithDateTimeArgument(SomeDateTime)", span="132-132", cluster="lambda expression", file="ScheduledState.cs"];
m16_100 [label="Exit lambda expression", span="132-132", cluster="lambda expression", file="ScheduledState.cs"];
m16_109 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="ScheduledState.cs"];
m16_110 [label="NullArgumentMethod(null)", span="147-147", cluster="lambda expression", file="ScheduledState.cs"];
m16_111 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="ScheduledState.cs"];
m16_123 [label="Entry lambda expression", span="162-162", cluster="lambda expression", file="ScheduledState.cs"];
m16_127 [label="Entry lambda expression", span="164-164", cluster="lambda expression", file="ScheduledState.cs"];
m16_131 [label="process.Run(_context.Object)", span="169-169", cluster="lambda expression", file="ScheduledState.cs"];
m16_130 [label="Entry lambda expression", span="169-169", cluster="lambda expression", file="ScheduledState.cs"];
m16_124 [label="x.ActivateJob(It.IsAny<Type>())", span="162-162", cluster="lambda expression", file="ScheduledState.cs"];
m16_125 [label="Exit lambda expression", span="162-162", cluster="lambda expression", file="ScheduledState.cs"];
m16_128 [label="InstanceMethod()", span="164-164", cluster="lambda expression", file="ScheduledState.cs"];
m16_129 [label="Exit lambda expression", span="164-164", cluster="lambda expression", file="ScheduledState.cs"];
m16_132 [label="Exit lambda expression", span="169-169", cluster="lambda expression", file="ScheduledState.cs"];
m16_140 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="ScheduledState.cs"];
m16_143 [label="Entry lambda expression", span="176-176", cluster="lambda expression", file="ScheduledState.cs"];
m16_147 [label="process.Run(_context.Object)", span="180-180", cluster="lambda expression", file="ScheduledState.cs"];
m16_146 [label="Entry lambda expression", span="180-180", cluster="lambda expression", file="ScheduledState.cs"];
m16_141 [label="x.ActivateJob(It.IsNotNull<Type>())", span="175-175", cluster="lambda expression", file="ScheduledState.cs"];
m16_142 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="ScheduledState.cs"];
m16_144 [label="InstanceMethod()", span="176-176", cluster="lambda expression", file="ScheduledState.cs"];
m16_145 [label="Exit lambda expression", span="176-176", cluster="lambda expression", file="ScheduledState.cs"];
m16_148 [label="Exit lambda expression", span="180-180", cluster="lambda expression", file="ScheduledState.cs"];
m16_160 [label="process.Run(_context.Object)", span="192-192", cluster="lambda expression", file="ScheduledState.cs"];
m16_159 [label="Entry lambda expression", span="192-192", cluster="lambda expression", file="ScheduledState.cs"];
m16_161 [label="Exit lambda expression", span="192-192", cluster="lambda expression", file="ScheduledState.cs"];
m16_169 [label="Entry lambda expression", span="201-201", cluster="lambda expression", file="ScheduledState.cs"];
m16_174 [label="process.Run(_context.Object)", span="205-205", cluster="lambda expression", file="ScheduledState.cs"];
m16_173 [label="Entry lambda expression", span="205-205", cluster="lambda expression", file="ScheduledState.cs"];
m16_170 [label="x.Method()", span="201-201", cluster="lambda expression", file="ScheduledState.cs"];
m16_171 [label="Exit lambda expression", span="201-201", cluster="lambda expression", file="ScheduledState.cs"];
m16_175 [label="Exit lambda expression", span="205-205", cluster="lambda expression", file="ScheduledState.cs"];
m16_183 [label="Entry lambda expression", span="213-213", cluster="lambda expression", file="ScheduledState.cs"];
m16_188 [label="process.Run(_context.Object)", span="217-217", cluster="lambda expression", file="ScheduledState.cs"];
m16_187 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="ScheduledState.cs"];
m16_184 [label="ExceptionMethod()", span="213-213", cluster="lambda expression", file="ScheduledState.cs"];
m16_185 [label="Exit lambda expression", span="213-213", cluster="lambda expression", file="ScheduledState.cs"];
m16_189 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="ScheduledState.cs"];
m16_196 [label="Entry lambda expression", span="227-227", cluster="lambda expression", file="ScheduledState.cs"];
m16_200 [label="Entry lambda expression", span="228-228", cluster="lambda expression", file="ScheduledState.cs"];
m16_205 [label="process.Run(_context.Object)", span="233-233", cluster="lambda expression", file="ScheduledState.cs"];
m16_204 [label="Entry lambda expression", span="233-233", cluster="lambda expression", file="ScheduledState.cs"];
m16_197 [label="CancelableJob(JobCancellationToken.Null)", span="227-227", cluster="lambda expression", file="ScheduledState.cs"];
m16_198 [label="Exit lambda expression", span="227-227", cluster="lambda expression", file="ScheduledState.cs"];
m16_201 [label="x.ThrowIfCancellationRequested()", span="228-228", cluster="lambda expression", file="ScheduledState.cs"];
m16_202 [label="Exit lambda expression", span="228-228", cluster="lambda expression", file="ScheduledState.cs"];
m16_206 [label="Exit lambda expression", span="233-233", cluster="lambda expression", file="ScheduledState.cs"];
m16_214 [label="x.FunctionReturningValue()", span="239-239", cluster="lambda expression", file="ScheduledState.cs"];
m16_215 [label="Exit lambda expression", span="239-239", cluster="lambda expression", file="ScheduledState.cs"];
m16_216 [label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", span="584-584", cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", file="ScheduledState.cs"];
m16_0 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CoreJobPerformanceProcessFacts()", span="19-19", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CoreJobPerformanceProcessFacts()", file="ScheduledState.cs"];
m16_1 [label="_activator = new Mock<JobActivator>() { CallBase = true }", span="21-21", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CoreJobPerformanceProcessFacts()", file="ScheduledState.cs"];
m16_2 [label="_context = new PerformContextMock()", span="22-22", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CoreJobPerformanceProcessFacts()", file="ScheduledState.cs"];
m16_3 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CoreJobPerformanceProcessFacts()", span="19-19", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.CoreJobPerformanceProcessFacts()", file="ScheduledState.cs"];
m16_126 [label="Entry Unk.ActivateJob", span="", cluster="Unk.ActivateJob", file="ScheduledState.cs"];
m16_4 [label="Entry Mock<JobActivator>.cstr", span="", cluster="Mock<JobActivator>.cstr", file="ScheduledState.cs"];
m16_238 [label="Entry Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", span="24-24", cluster="Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", file="ScheduledState.cs"];
m16_6 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", span="26-26", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="ScheduledState.cs"];
m16_7 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                // ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new CoreJobPerformanceProcess(null))", span="28-30", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="ScheduledState.cs"];
m16_8 [label="Assert.Equal(''activator'', exception.ParamName)", span="32-32", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="ScheduledState.cs"];
m16_9 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", span="26-26", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="ScheduledState.cs"];
m16_149 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", span="184-184", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ScheduledState.cs"];
m16_150 [label="var type = typeof(JobFacts)", span="186-186", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ScheduledState.cs"];
m16_151 [label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="187-187", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ScheduledState.cs"];
m16_152 [label="_context.BackgroundJob.Job = new Job(type, method, new object[] { ''sdfa'' })", span="188-188", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ScheduledState.cs"];
m16_153 [label="var process = CreateProcess()", span="189-189", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ScheduledState.cs"];
m16_154 [label="var exception = Assert.Throws<JobPerformanceException>(\r\n                () => process.Run(_context.Object))", span="191-192", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ScheduledState.cs"];
m16_155 [label="Assert.NotNull(exception.InnerException)", span="194-194", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ScheduledState.cs"];
m16_156 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", span="184-184", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="ScheduledState.cs"];
m16_26 [label="Entry Unk.True", span="", cluster="Unk.True", file="ScheduledState.cs"];
m16_80 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="108-108", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ScheduledState.cs"];
m16_81 [label="_methodInvoked = false", span="111-111", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ScheduledState.cs"];
m16_82 [label="var convertedDate = SomeDateTime.ToString(''MM/dd/yyyy HH:mm:ss.ffff'')", span="112-112", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ScheduledState.cs"];
m16_83 [label="var type = typeof(CoreJobPerformanceProcessFacts)", span="114-114", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ScheduledState.cs"];
m16_85 [label="_context.BackgroundJob.Job = new Job(type, method, new[] { convertedDate })", span="117-117", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ScheduledState.cs"];
m16_84 [label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="115-115", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ScheduledState.cs"];
m16_86 [label="var process = CreateProcess()", span="118-118", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ScheduledState.cs"];
m16_87 [label="process.Run(_context.Object)", span="121-121", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ScheduledState.cs"];
m16_88 [label="Assert.True(_methodInvoked)", span="124-124", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ScheduledState.cs"];
m16_89 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="108-108", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="ScheduledState.cs"];
m16_253 [label="Entry CoreJobPerformanceProcess.cstr", span="", cluster="CoreJobPerformanceProcess.cstr", file="ScheduledState.cs"];
m16_101 [label="Entry Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", span="294-294", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", file="ScheduledState.cs"];
m16_239 [label="_methodInvoked = true", span="296-296", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", file="ScheduledState.cs"];
m16_240 [label="Assert.Equal(SomeDateTime, argument)", span="298-298", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", file="ScheduledState.cs"];
m16_241 [label="Exit Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", span="294-294", cluster="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", file="ScheduledState.cs"];
m16_139 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ScheduledState.cs"];
m16_5 [label="Entry Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", span="12-12", cluster="Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", file="ScheduledState.cs"];
m16_23 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="187-187", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ScheduledState.cs"];
m16_254 [label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts", span="", file="ScheduledState.cs"];
m16_255 [label=process, span="", file="ScheduledState.cs"];
m16_256 [label=process, span="", file="ScheduledState.cs"];
m16_257 [label=process, span="", file="ScheduledState.cs"];
m16_258 [label=process, span="", file="ScheduledState.cs"];
m16_259 [label=process, span="", file="ScheduledState.cs"];
m16_260 [label=process, span="", file="ScheduledState.cs"];
m17_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ScheduledStateDescriptor.cs"];
m17_0 [label="Entry HangFire.States.ScheduledStateDescriptor.Unapply(IRedisTransaction, string)", span="7-7", cluster="HangFire.States.ScheduledStateDescriptor.Unapply(IRedisTransaction, string)", file="ScheduledStateDescriptor.cs"];
m17_1 [label="transaction == null", span="9-9", cluster="HangFire.States.ScheduledStateDescriptor.Unapply(IRedisTransaction, string)", color=red, community=0, file="ScheduledStateDescriptor.cs"];
m17_3 [label="transaction.QueueCommand(x => x.RemoveItemFromSortedSet(''hangfire:schedule'', jobId))", span="11-11", cluster="HangFire.States.ScheduledStateDescriptor.Unapply(IRedisTransaction, string)", color=red, community=0, file="ScheduledStateDescriptor.cs"];
m17_2 [label="throw new ArgumentNullException(''transaction'');", span="9-9", cluster="HangFire.States.ScheduledStateDescriptor.Unapply(IRedisTransaction, string)", color=red, community=0, file="ScheduledStateDescriptor.cs"];
m17_4 [label="Exit HangFire.States.ScheduledStateDescriptor.Unapply(IRedisTransaction, string)", span="7-7", cluster="HangFire.States.ScheduledStateDescriptor.Unapply(IRedisTransaction, string)", file="ScheduledStateDescriptor.cs"];
m17_6 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="ScheduledStateDescriptor.cs"];
m17_7 [label="Entry lambda expression", span="11-11", cluster="lambda expression", file="ScheduledStateDescriptor.cs"];
m17_8 [label="x.RemoveItemFromSortedSet(''hangfire:schedule'', jobId)", span="11-11", cluster="lambda expression", color=red, community=0, file="ScheduledStateDescriptor.cs"];
m17_9 [label="Exit lambda expression", span="11-11", cluster="lambda expression", file="ScheduledStateDescriptor.cs"];
m17_10 [label="Entry Unk.RemoveItemFromSortedSet", span="", cluster="Unk.RemoveItemFromSortedSet", file="ScheduledStateDescriptor.cs"];
m17_11 [label=string, span="", file="ScheduledStateDescriptor.cs"];
m18_0 [label="Entry Hangfire.Dashboard.Metric.Metric(string)", span="20-20", cluster="Hangfire.Dashboard.Metric.Metric(string)", file="ServerJobDescriptor.cs"];
m18_1 [label="Value = value", span="22-22", cluster="Hangfire.Dashboard.Metric.Metric(string)", file="ServerJobDescriptor.cs"];
m18_2 [label="Exit Hangfire.Dashboard.Metric.Metric(string)", span="20-20", cluster="Hangfire.Dashboard.Metric.Metric(string)", file="ServerJobDescriptor.cs"];
m18_3 [label="Entry Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", span="43-43", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="ServerJobDescriptor.cs"];
m18_4 [label=style, span="45-45", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="ServerJobDescriptor.cs"];
m18_5 [label="MetricStyle.Default", span="47-47", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="ServerJobDescriptor.cs"];
m18_7 [label="MetricStyle.Info", span="48-48", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="ServerJobDescriptor.cs"];
m18_9 [label="MetricStyle.Success", span="49-49", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="ServerJobDescriptor.cs"];
m18_11 [label="MetricStyle.Warning", span="50-50", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="ServerJobDescriptor.cs"];
m18_13 [label="MetricStyle.Danger", span="51-51", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="ServerJobDescriptor.cs"];
m18_15 [label="return ''metric-null'';", span="52-52", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="ServerJobDescriptor.cs"];
m18_6 [label="return ''metric-default'';", span="47-47", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="ServerJobDescriptor.cs"];
m18_8 [label="return ''metric-info'';", span="48-48", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="ServerJobDescriptor.cs"];
m18_10 [label="return ''metric-success'';", span="49-49", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="ServerJobDescriptor.cs"];
m18_12 [label="return ''metric-warning'';", span="50-50", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="ServerJobDescriptor.cs"];
m18_14 [label="return ''metric-danger'';", span="51-51", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="ServerJobDescriptor.cs"];
m18_16 [label="Exit Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", span="43-43", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="ServerJobDescriptor.cs"];
m18_17 [label="Hangfire.Dashboard.Metric", span="", file="ServerJobDescriptor.cs"];
m20_7 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="SucceededStateDescriptor.cs"];
m20_6 [label="Entry Unk.>", span="", cluster="Unk.>", file="SucceededStateDescriptor.cs"];
m20_3 [label="Entry HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", span="16-16", cluster="HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", file="SucceededStateDescriptor.cs"];
m20_4 [label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="18-21", cluster="HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", color=red, community=0, file="SucceededStateDescriptor.cs"];
m20_5 [label="Exit HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", span="16-16", cluster="HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", file="SucceededStateDescriptor.cs"];
m20_0 [label="Entry HangFire.SqlServer.SqlStoredSets.SqlStoredSets(SqlConnection)", span="11-11", cluster="HangFire.SqlServer.SqlStoredSets.SqlStoredSets(SqlConnection)", file="SucceededStateDescriptor.cs"];
m20_1 [label="_connection = connection", span="13-13", cluster="HangFire.SqlServer.SqlStoredSets.SqlStoredSets(SqlConnection)", color=red, community=0, file="SucceededStateDescriptor.cs"];
m20_2 [label="Exit HangFire.SqlServer.SqlStoredSets.SqlStoredSets(SqlConnection)", span="11-11", cluster="HangFire.SqlServer.SqlStoredSets.SqlStoredSets(SqlConnection)", file="SucceededStateDescriptor.cs"];
m20_8 [label="HangFire.SqlServer.SqlStoredSets", span="", file="SucceededStateDescriptor.cs"];
m21_69 [label="x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries)", span="135-135", cluster="lambda expression", file="Worker.cs", color=green, community=0];
m21_29 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", span="37-37", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="Worker.cs"];
m21_11 [label="Entry HangFire.Server.Worker.SendStop()", span="47-47", cluster="HangFire.Server.Worker.SendStop()", file="Worker.cs"];
m21_47 [label="var parts = _connectionString.Split(new[] { ';' }, StringSplitOptions.RemoveEmptyEntries)\r\n                    .Select(x => x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries))\r\n                    .Select(x => new { Key = x[0].Trim(), Value = x[1].Trim() })\r\n                    .ToDictionary(x => x.Key, x => x.Value, StringComparer.OrdinalIgnoreCase)", span="134-137", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="Worker.cs", color=green, community=0];
m21_71 [label="Entry lambda expression", span="136-136", cluster="lambda expression", file="Worker.cs"];
m21_163 [label="Entry Metric.cstr", span="", cluster="Metric.cstr", file="Worker.cs"];
m21_94 [label="Entry Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="239-239", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="Worker.cs"];
m21_117 [label="var connection = _existingConnection ?? new SqlConnection(_connectionString)", span="241-241", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="Worker.cs"];
m21_118 [label="connection.State == ConnectionState.Closed", span="243-243", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="Worker.cs"];
m21_119 [label="connection.Open()", span="245-245", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="Worker.cs"];
m21_120 [label="return connection;", span="248-248", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="Worker.cs"];
m21_121 [label="Exit Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="239-239", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="Worker.cs"];
m21_124 [label="Entry Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", span="251-251", cluster="Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", file="Worker.cs"];
m21_125 [label="return connection != null && ReferenceEquals(connection, _existingConnection);", span="253-253", cluster="Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", file="Worker.cs"];
m21_126 [label="Exit Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", span="251-251", cluster="Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", file="Worker.cs"];
m21_128 [label="Entry Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="256-256", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="Worker.cs"];
m21_129 [label="connection != null && !IsExistingConnection(connection)", span="258-258", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="Worker.cs"];
m21_130 [label="connection.Dispose()", span="260-260", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="Worker.cs"];
m21_131 [label="Exit Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="256-256", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="Worker.cs"];
m21_14 [label="Exit HangFire.Server.Worker.SendStop()", span="47-47", cluster="HangFire.Server.Worker.SendStop()", file="Worker.cs"];
m21_133 [label="_options.PrepareSchemaIfNecessary", span="266-266", cluster="Hangfire.SqlServer.SqlServerStorage.Initialize()", file="Worker.cs"];
m21_134 [label="UseConnection(null, connection =>\r\n                {\r\n                    SqlServerObjectsInstaller.Install(connection, _options.SchemaName);\r\n                })", span="268-271", cluster="Hangfire.SqlServer.SqlServerStorage.Initialize()", file="Worker.cs"];
m21_135 [label="InitializeQueueProviders()", span="274-274", cluster="Hangfire.SqlServer.SqlServerStorage.Initialize()", file="Worker.cs"];
m21_136 [label="Exit Hangfire.SqlServer.SqlServerStorage.Initialize()", span="264-264", cluster="Hangfire.SqlServer.SqlServerStorage.Initialize()", file="Worker.cs"];
m21_48 [label="var builder = new StringBuilder()", span="139-139", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="Worker.cs", color=green, community=0];
m21_107 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="Worker.cs"];
m21_10 [label="Exit Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", span="60-60", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="Worker.cs"];
m21_63 [label="JobState.Apply(\r\n                        Redis,\r\n                        new SucceededState(payload.Id, ''The job has been completed successfully.''),\r\n                        ProcessingState.Name)", span="176-179", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", color=red, community=2];
m21_17 [label=_jobLock, span="73-73", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_22 [label="Entry HangFire.Server.Worker.Dispose()", span="81-81", cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs"];
m21_23 [label="!_stopSent", span="83-83", cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs"];
m21_24 [label="SendStop()", span="85-85", cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs"];
m21_20 [label="Exit HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="71-71", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_18 [label="_jobPayload = payload", span="75-75", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_19 [label="_jobIsReady.Set()", span="78-78", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_21 [label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Set()", file="Worker.cs"];
m21_25 [label="_thread.Join()", span="88-88", cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs"];
m21_34 [label="_manager.NotifyReady(this)", span="101-101", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m21_35 [label="_jobIsReady.Wait(_cts.Token)", span="102-102", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m21_36 [label=_jobLock, span="104-104", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m21_37 [label="PerformJob(_jobPayload)", span="106-106", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m21_67 [label="Entry HangFire.States.ProcessingState.ProcessingState(string, string, string)", span="10-10", cluster="HangFire.States.ProcessingState.ProcessingState(string, string, string)", file="Worker.cs"];
m21_30 [label="Entry Hangfire.SqlServer.SqlServerStorage.GetConnection()", span="109-109", cluster="Hangfire.SqlServer.SqlServerStorage.GetConnection()", file="Worker.cs"];
m21_9 [label="Initialize()", span="68-68", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="Worker.cs"];
m21_65 [label="JobFetcher.RemoveFromFetchedQueue(\r\n                    Redis, payload.Id, payload.Queue)", span="194-195", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", color=red, community=2];
m21_96 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseTransaction(DbConnection, System.Action<DbConnection, DbTransaction>)", span="198-198", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(DbConnection, System.Action<DbConnection, DbTransaction>)", file="Worker.cs"];
m21_97 [label="UseTransaction(dedicatedConnection, (connection, transaction) =>\r\n            {\r\n                action(connection, transaction);\r\n                return true;\r\n            }, null)", span="200-204", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(DbConnection, System.Action<DbConnection, DbTransaction>)", color=green, community=0, file="Worker.cs"];
m21_98 [label="Exit Hangfire.SqlServer.SqlServerStorage.UseTransaction(DbConnection, System.Action<DbConnection, DbTransaction>)", span="198-198", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(DbConnection, System.Action<DbConnection, DbTransaction>)", file="Worker.cs"];
m21_141 [label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.Install(DbConnection, string)", span="38-38", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(DbConnection, string)", file="Worker.cs"];
m21_7 [label="_connectionString = GetConnectionString(nameOrConnectionString)", span="65-65", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="Worker.cs"];
m21_44 [label="Entry Hangfire.Logging.ILog.Info(string)", span="204-204", cluster="Hangfire.Logging.ILog.Info(string)", file="Worker.cs"];
m21_15 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="Worker.cs"];
m21_66 [label="Exit HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="125-125", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_155 [label="Entry Hangfire.Dashboard.Metric.Metric(string)", span="20-20", cluster="Hangfire.Dashboard.Metric.Metric(string)", file="Worker.cs"];
m21_0 [label="Entry HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", span="32-32", cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="Worker.cs"];
m21_1 [label="_manager = manager", span="34-34", cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="Worker.cs"];
m21_2 [label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", span="60-60", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="Worker.cs"];
m21_3 [label="nameOrConnectionString == null", span="62-62", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="Worker.cs"];
m21_4 [label="throw new ArgumentNullException(nameof(nameOrConnectionString));", span="62-62", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="Worker.cs"];
m21_5 [label="options == null", span="63-63", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="Worker.cs"];
m21_6 [label="throw new ArgumentNullException(nameof(options));", span="63-63", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="Worker.cs"];
m21_161 [label="Entry Unk.>", span="", cluster="Unk.>", file="Worker.cs"];
m21_64 [label="JobState.Apply(\r\n                        Redis,\r\n                        new FailedState(payload.Id, ''The job has been failed.'', exception),\r\n                        ProcessingState.Name)", span="183-186", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", color=red, community=2];
m21_95 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="Worker.cs"];
m21_99 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(DbConnection, System.Func<DbConnection, DbTransaction, T>, IsolationLevel?)", span="207-207", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(DbConnection, System.Func<DbConnection, DbTransaction, T>, IsolationLevel?)", file="Worker.cs"];
m21_105 [label="return UseConnection(dedicatedConnection, connection =>\r\n            {\r\n                using (var transaction = connection.BeginTransaction(isolationLevel ?? IsolationLevel.ReadCommitted))\r\n                {\r\n                    var result = func(connection, transaction);\r\n                    transaction.Commit();\r\n\r\n                    return result;\r\n                }\r\n            });", span="226-235", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(DbConnection, System.Func<DbConnection, DbTransaction, T>, IsolationLevel?)", file="Worker.cs"];
m21_106 [label="Exit Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(DbConnection, System.Func<DbConnection, DbTransaction, T>, IsolationLevel?)", span="207-207", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(DbConnection, System.Func<DbConnection, DbTransaction, T>, IsolationLevel?)", file="Worker.cs"];
m21_104 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="Worker.cs"];
m21_31 [label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Dispose()", file="Worker.cs"];
m21_32 [label="Entry HangFire.Server.Worker.DoWork()", span="95-95", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m21_40 [label=Exception, span="114-114", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m21_42 [label="Logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. The worker will be stopped.''),\r\n                    ex)", span="117-120", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m21_41 [label="Crashed = true", span="116-116", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m21_43 [label="Exit HangFire.Server.Worker.DoWork()", span="95-95", cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs"];
m21_146 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.PersistentJobQueueProviderCollection(Hangfire.SqlServer.IPersistentJobQueueProvider)", span="31-31", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.PersistentJobQueueProviderCollection(Hangfire.SqlServer.IPersistentJobQueueProvider)", file="Worker.cs"];
m21_74 [label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10", cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="Worker.cs"];
m21_8 [label="_options = options", span="66-66", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="Worker.cs"];
m21_45 [label="Entry Hangfire.SqlServer.SqlServerStorage.ToString()", span="128-128", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="Worker.cs"];
m21_81 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection, System.Action<DbConnection>)", span="171-171", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection, System.Action<DbConnection>)", file="Worker.cs"];
m21_82 [label="UseConnection(dedicatedConnection, connection =>\r\n            {\r\n                action(connection);\r\n                return true;\r\n            })", span="173-177", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection, System.Action<DbConnection>)", file="Worker.cs"];
m21_83 [label="Exit Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection, System.Action<DbConnection>)", span="171-171", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection, System.Action<DbConnection>)", file="Worker.cs"];
m21_33 [label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="39-39", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="Worker.cs"];
m21_39 [label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="39-39", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="Worker.cs"];
m21_38 [label="Entry Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="54-54", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="Worker.cs"];
m21_122 [label="Entry SqlConnection.cstr", span="", cluster="SqlConnection.cstr", file="Worker.cs"];
m21_127 [label="Entry Unk.ReferenceEquals", span="", cluster="Unk.ReferenceEquals", file="Worker.cs"];
m21_115 [label="Entry Unk.func", span="", cluster="Unk.func", file="Worker.cs"];
m21_12 [label="_stopSent = true", span="49-49", cluster="HangFire.Server.Worker.SendStop()", file="Worker.cs"];
m21_89 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="Worker.cs"];
m21_75 [label="Entry lambda expression", span="137-137", cluster="lambda expression", file="Worker.cs"];
m21_164 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="Worker.cs"];
m21_84 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(DbConnection, System.Func<DbConnection, T>)", span="180-180", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(DbConnection, System.Func<DbConnection, T>)", file="Worker.cs"];
m21_90 [label="DbConnection connection = null", span="182-182", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(DbConnection, System.Func<DbConnection, T>)", color=green, community=0, file="Worker.cs"];
m21_91 [label="connection = dedicatedConnection ?? CreateAndOpenConnection()", span="186-186", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(DbConnection, System.Func<DbConnection, T>)", color=green, community=0, file="Worker.cs"];
m21_92 [label="return func(connection);", span="187-187", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(DbConnection, System.Func<DbConnection, T>)", color=green, community=0, file="Worker.cs"];
m21_93 [label="Exit Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(DbConnection, System.Func<DbConnection, T>)", span="180-180", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(DbConnection, System.Func<DbConnection, T>)", file="Worker.cs"];
m21_145 [label="Entry Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", span="26-26", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="Worker.cs"];
m21_123 [label="Entry Unk.Open", span="", cluster="Unk.Open", file="Worker.cs"];
m21_132 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="Worker.cs"];
m21_70 [label="Exit lambda expression", span="135-135", cluster="lambda expression", file="Worker.cs"];
m21_49 [label="new[] { ''Data Source'', ''Server'', ''Address'', ''Addr'', ''Network Address'' }", span="141-141", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="Worker.cs", color=green, community=0];
m21_61 [label=Redis, span="172-172", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", color=red, community=0];
m21_73 [label="Exit lambda expression", span="136-136", cluster="lambda expression", file="Worker.cs"];
m21_165 [label="Entry lambda expression", span="350-367", cluster="lambda expression", file="Worker.cs"];
m21_68 [label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="Worker.cs"];
m21_78 [label="Entry lambda expression", span="137-137", cluster="lambda expression", file="Worker.cs"];
m21_72 [label="Entry Unk.Error", span="", cluster="Unk.Error", color=green, community=0, file="Worker.cs"];
m21_76 [label="HangFire.Server.Worker", span="", cluster="lambda expression", color=green, community=0, file="Worker.cs"];
m21_77 [label="Exit lambda expression", span="137-137", cluster="lambda expression", file="Worker.cs"];
m21_79 [label="x.Value", span="137-137", cluster="lambda expression", color=green, community=0, file="Worker.cs"];
m21_80 [label="Exit lambda expression", span="137-137", cluster="lambda expression", file="Worker.cs"];
m21_100 [label="Entry lambda expression", span="200-204", cluster="lambda expression", file="Worker.cs"];
m21_101 [label="action(connection, transaction)", span="202-202", cluster="lambda expression", color=green, community=0, file="Worker.cs"];
m21_102 [label="return true;", span="203-203", cluster="lambda expression", file="Worker.cs"];
m21_139 [label="SqlServerObjectsInstaller.Install(connection, _options.SchemaName)", span="270-270", cluster="lambda expression", file="Worker.cs"];
m21_153 [label="return sqlStorage.UseConnection(null, connection =>\r\n                {\r\n                    var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background' and status != 'sleeping''';\r\n\r\n                    var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single();\r\n\r\n                    return new Metric(value.ToString(''N0''));\r\n                });", span="333-344", cluster="lambda expression", file="Worker.cs"];
m21_169 [label="return sqlStorage.UseConnection(null, connection =>\r\n                {\r\n                    var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background''';\r\n\r\n                    var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single();\r\n\r\n                    return new Metric(value.ToString(''N0''));\r\n                });", span="355-366", cluster="lambda expression", file="Worker.cs"];
m21_109 [label="var transaction = connection.BeginTransaction(isolationLevel ?? IsolationLevel.ReadCommitted)", span="228-228", cluster="lambda expression", file="Worker.cs"];
m21_110 [label="var result = func(connection, transaction)", span="230-230", cluster="lambda expression", file="Worker.cs"];
m21_103 [label="Exit lambda expression", span="200-204", cluster="lambda expression", file="Worker.cs"];
m21_85 [label="Entry lambda expression", span="173-177", cluster="lambda expression", file="Worker.cs"];
m21_108 [label="Entry lambda expression", span="226-235", cluster="lambda expression", file="Worker.cs"];
m21_138 [label="Entry lambda expression", span="268-271", cluster="lambda expression", file="Worker.cs"];
m21_140 [label="Exit lambda expression", span="268-271", cluster="lambda expression", file="Worker.cs"];
m21_150 [label="var sqlStorage = page.Storage as SqlServerStorage", span="330-330", cluster="lambda expression", file="Worker.cs"];
m21_151 [label="sqlStorage == null", span="331-331", cluster="lambda expression", file="Worker.cs"];
m21_154 [label="Exit lambda expression", span="328-345", cluster="lambda expression", file="Worker.cs"];
m21_156 [label="Entry lambda expression", span="333-344", cluster="lambda expression", file="Worker.cs"];
m21_166 [label="var sqlStorage = page.Storage as SqlServerStorage", span="352-352", cluster="lambda expression", file="Worker.cs"];
m21_167 [label="sqlStorage == null", span="353-353", cluster="lambda expression", file="Worker.cs"];
m21_170 [label="Exit lambda expression", span="350-367", cluster="lambda expression", file="Worker.cs"];
m21_171 [label="Entry lambda expression", span="355-366", cluster="lambda expression", file="Worker.cs"];
m21_111 [label="transaction.Commit()", span="231-231", cluster="lambda expression", file="Worker.cs"];
m21_112 [label="return result;", span="233-233", cluster="lambda expression", file="Worker.cs"];
m21_86 [label="action(connection)", span="175-175", cluster="lambda expression", file="Worker.cs"];
m21_88 [label="Exit lambda expression", span="173-177", cluster="lambda expression", file="Worker.cs"];
m21_113 [label="Exit lambda expression", span="226-235", cluster="lambda expression", file="Worker.cs"];
m21_149 [label="Entry lambda expression", span="328-345", cluster="lambda expression", file="Worker.cs"];
m21_152 [label="return new Metric(''???'');", span="331-331", cluster="lambda expression", file="Worker.cs"];
m21_160 [label="Exit lambda expression", span="333-344", cluster="lambda expression", file="Worker.cs"];
m21_157 [label="var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background' and status != 'sleeping'''", span="335-337", cluster="lambda expression", file="Worker.cs"];
m21_158 [label="var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single()", span="339-341", cluster="lambda expression", file="Worker.cs"];
m21_168 [label="return new Metric(''???'');", span="353-353", cluster="lambda expression", file="Worker.cs"];
m21_172 [label="var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background'''", span="357-359", cluster="lambda expression", file="Worker.cs"];
m21_173 [label="var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single()", span="361-363", cluster="lambda expression", file="Worker.cs"];
m21_87 [label="return true;", span="176-176", cluster="lambda expression", file="Worker.cs"];
m21_159 [label="return new Metric(value.ToString(''N0''));", span="343-343", cluster="lambda expression", file="Worker.cs"];
m21_174 [label="return new Metric(value.ToString(''N0''));", span="365-365", cluster="lambda expression", file="Worker.cs"];
m21_175 [label="Exit lambda expression", span="355-366", cluster="lambda expression", file="Worker.cs"];
m21_137 [label="Entry Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", span="277-277", cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="Worker.cs"];
m21_142 [label="var defaultQueueProvider = new SqlServerJobQueueProvider(this, _options)", span="279-279", cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="Worker.cs"];
m21_143 [label="QueueProviders = new PersistentJobQueueProviderCollection(defaultQueueProvider)", span="280-280", cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="Worker.cs"];
m21_144 [label="Exit Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", span="277-277", cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="Worker.cs"];
m21_26 [label="_cts.Dispose()", span="90-90", cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs"];
m21_27 [label="_jobIsReady.Dispose()", span="91-91", cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs"];
m21_28 [label="Exit HangFire.Server.Worker.Dispose()", span="81-81", cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs"];
m21_13 [label="Entry Hangfire.SqlServer.SqlServerStorage.GetConnectionString(string)", span="283-283", cluster="Hangfire.SqlServer.SqlServerStorage.GetConnectionString(string)", file="Worker.cs"];
m21_62 [label="exception == null", span="174-174", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", color=red, community=0];
m21_46 [label="Entry HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="125-125", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", color=green, community=0, file="Worker.cs"];
m21_57 [label="_context.Performer.PerformJob(performContext)", span="154-154", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_59 [label="exception = ex", span="158-158", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_50 [label=Redis, span="127-127", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", color=red, community=0, file="Worker.cs"];
m21_51 [label="!JobState.Apply(\r\n                    Redis,\r\n                    new ProcessingState(payload.Id, ''Worker has started processing.'', _context.ServerName),\r\n                    EnqueuedState.Name)", span="129-132", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", color=red, community=2];
m21_55 [label="jobDescriptor = new ServerJobDescriptor(\r\n                    _context.Activator, payload)", span="148-149", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", color=red, community=0];
m21_56 [label="var performContext = new PerformContext(\r\n                    _context, jobDescriptor)", span="151-152", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_52 [label="return;", span="134-134", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", color=red, community=0];
m21_53 [label="Exception exception = null", span="143-143", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_54 [label="ServerJobDescriptor jobDescriptor = null", span="145-145", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_58 [label=Exception, span="156-156", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_60 [label="Logger.Error(String.Format(\r\n                    ''Failed to process the job '{0}': unexpected exception caught.'',\r\n                    payload.Id))", span="160-162", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_114 [label="Entry Unk.BeginTransaction", span="", cluster="Unk.BeginTransaction", file="Worker.cs"];
m21_116 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="Worker.cs"];
m21_162 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="Worker.cs"];
m21_147 [label="return nameOrConnectionString;", span="299-299", cluster="Hangfire.SqlServer.SqlServerStorage.GetConnectionString(string)", file="Worker.cs"];
m21_148 [label="Exit Hangfire.SqlServer.SqlServerStorage.GetConnectionString(string)", span="283-283", cluster="Hangfire.SqlServer.SqlServerStorage.GetConnectionString(string)", file="Worker.cs"];
m21_16 [label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="71-71", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="Worker.cs"];
m21_176 [label="Hangfire.SqlServer.SqlServerStorage", span="", file="Worker.cs"];
m21_178 [label="System.Action<DbConnection, DbTransaction>", span="", file="Worker.cs"];
m21_179 [label="IsolationLevel?", span="", file="Worker.cs"];
m21_180 [label="System.Func<DbConnection, DbTransaction, T>", span="", file="Worker.cs"];
m21_177 [label="System.Action<DbConnection>", span="", file="Worker.cs"];
m22_0 [label="Entry Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", span="39-39", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="WorkerPool.cs"];
m22_1 [label="Servers.Add(server)", span="43-43", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="WorkerPool.cs"];
m22_2 [label="server.Start()", span="45-45", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="WorkerPool.cs"];
m22_3 [label="var context = new OwinContext(app.Properties)", span="47-47", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="WorkerPool.cs"];
m22_6 [label="token.Register(server.Dispose)", span="52-52", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="WorkerPool.cs"];
m22_4 [label="var token = context.Get<CancellationToken>(''host.OnAppDisposing'')", span="48-48", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="WorkerPool.cs"];
m22_5 [label="token != CancellationToken.None", span="50-50", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="WorkerPool.cs"];
m22_7 [label="Exit Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", span="39-39", cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="WorkerPool.cs"];
m22_11 [label="Entry Unk.>", span="", cluster="Unk.>", file="WorkerPool.cs"];
m22_12 [label="Entry Unk.Register", span="", cluster="Unk.Register", file="WorkerPool.cs"];
m22_9 [label="Entry Hangfire.BackgroundJobServer.Start()", span="148-148", cluster="Hangfire.BackgroundJobServer.Start()", file="WorkerPool.cs"];
m22_8 [label="Entry System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", file="WorkerPool.cs"];
m22_10 [label="Entry OwinContext.cstr", span="", cluster="OwinContext.cstr", file="WorkerPool.cs"];
n7 -> n4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n4 -> n6  [key=2, style=dotted];
n5 -> n2  [key=0, style=bold, color=blue];
m0_38 -> m0_39  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_41  [key=2, style=dotted];
m0_40 -> m0_38  [key=0, style=bold, color=blue];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_2  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m0_16 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m0_16 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_29  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_30  [key=2, style=dotted];
m0_18 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label=connection];
m0_18 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label=connection];
m0_18 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label=connection];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_21  [key=0, style=solid];
m0_24 -> m0_35  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_37  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_31  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_32  [key=2, style=dotted];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_33  [key=2, style=dotted];
m0_22 -> m0_34  [key=2, style=dotted];
m0_22 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label=recurringJob];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_27  [key=0, style=solid];
m0_21 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label=recurringJobId];
m0_21 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=recurringJobId];
m0_26 -> m0_21  [key=0, style=solid];
m0_26 -> m0_33  [key=2, style=dotted];
m0_26 -> m0_36  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_21  [key=0, style=solid];
m0_25 -> m0_26  [key=0, style=solid];
m0_28 -> m0_16  [key=0, style=bold, color=blue];
m0_35 -> m0_42  [key=0, style=solid];
m0_35 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m0_35 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m0_35 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m0_35 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m0_35 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m0_35 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m0_35 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_35 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m0_35 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_65  [key=2, style=dotted];
m0_44 -> m0_45  [key=0, style=solid];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_68  [key=2, style=dotted];
m0_46 -> m0_69  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_68  [key=2, style=dotted];
m0_48 -> m0_71  [key=2, style=dotted];
m0_48 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label=lastExecutionTime];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_54  [key=0, style=solid];
m0_52 -> m0_68  [key=2, style=dotted];
m0_52 -> m0_76  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_77  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_79  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_64  [key=0, style=solid];
m0_61 -> m0_33  [key=2, style=dotted];
m0_61 -> m0_82  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_83  [key=2, style=dotted];
m0_63 -> m0_84  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_66  [key=2, style=dotted];
m0_43 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label=job];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_67  [key=2, style=dotted];
m0_45 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label=cronSchedule];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_70  [key=2, style=dotted];
m0_47 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label=instant];
m0_47 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label=instant];
m0_47 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=instant];
m0_47 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label=instant];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_60  [key=0, style=solid];
m0_50 -> m0_73  [key=2, style=dotted];
m0_50 -> m0_74  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_80  [key=2, style=dotted];
m0_58 -> m0_81  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_80  [key=2, style=dotted];
m0_60 -> m0_81  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_72  [key=2, style=dotted];
m0_49 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=changedFields];
m0_49 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label=changedFields];
m0_49 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label=changedFields];
m0_49 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label=changedFields];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_81  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_75  [key=2, style=dotted];
m0_51 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label=state];
m0_51 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label=state];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_78  [key=2, style=dotted];
m0_55 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_58  [key=0, style=solid];
m0_56 -> m0_76  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_64 -> m0_35  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>"];
m0_4 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IThrottler"];
m0_4 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IJobCreationProcess"];
m0_4 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>"];
m0_4 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IThrottler"];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid];
m0_12 -> m0_13  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_6 -> m0_14  [key=0, style=solid];
m0_6 -> m0_15  [key=2, style=dotted];
m0_8 -> m0_14  [key=0, style=solid];
m0_8 -> m0_15  [key=2, style=dotted];
m0_10 -> m0_14  [key=0, style=solid];
m0_10 -> m0_15  [key=2, style=dotted];
m0_14 -> m0_4  [key=0, style=bold, color=blue];
m0_85 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m0_85 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m0_85 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m0_85 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m0_85 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m0_85 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m0_85 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m0_85 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m0_85 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m1_7 -> m1_8  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_13  [key=2, style=dotted];
m1_9 -> m1_11  [key=0, style=solid];
m1_9 -> m1_12  [key=2, style=dotted];
m1_11 -> m1_7  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid, color=green];
m1_0 -> m1_3  [key=1, style=dashed, color=green, label="params HangFire.Server.WorkerPool[]"];
m1_1 -> m1_2  [key=0, style=solid, color=green];
m1_2 -> m1_3  [key=0, style=solid, color=green];
m1_2 -> m1_5  [key=2, style=dotted, color=green];
m1_3 -> m1_4  [key=0, style=solid, color=green];
m1_3 -> m1_6  [key=2, style=dotted, color=green];
m1_4 -> m1_0  [key=0, style=bold, color=blue];
m1_22 -> m1_23  [key=0, style=solid];
m1_23 -> m1_14  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_24 -> m1_22  [key=0, style=bold, color=blue];
m1_14 -> m1_15  [key=0, style=solid, color=green];
m1_15 -> m1_16  [key=0, style=solid, color=green];
m1_15 -> m1_19  [key=0, style=solid, color=green];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_21  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_18 -> m1_20  [key=0, style=solid];
m1_20 -> m1_14  [key=0, style=bold, color=blue];
m1_25 -> m1_1  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m1_25 -> m1_3  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m1_25 -> m1_2  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m1_25 -> m1_15  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m1_25 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m1_25 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m1_25 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m1_25 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m1_25 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_6  [key=2, style=dotted];
m2_4 -> m2_7  [key=2, style=dotted];
m2_4 -> m2_8  [key=2, style=dotted];
m2_4 -> m2_9  [key=2, style=dotted];
m2_5 -> m2_3  [key=0, style=bold, color=blue];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_13  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_16  [key=2, style=dotted];
m2_13 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_12 -> m2_14  [key=0, style=solid];
m2_12 -> m2_15  [key=2, style=dotted];
m2_14 -> m2_10  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_17 -> m2_18  [key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_20  [key=2, style=dotted];
m2_18 -> m2_21  [key=2, style=dotted];
m2_19 -> m2_17  [key=0, style=bold, color=blue];
m2_22 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.FailedState"];
m2_22 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.FailedState"];
m2_22 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.FailedState"];
m2_22 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.FailedState"];
m3_0 -> m3_1  [key=0, style=solid, color=red];
m3_0 -> m3_3  [key=1, style=dashed, color=red, label=IRedisTransaction];
m3_0 -> m3_8  [key=1, style=dashed, color=red, label=string];
m3_1 -> m3_2  [key=0, style=solid, color=red];
m3_1 -> m3_3  [key=0, style=solid, color=red];
m3_3 -> m3_4  [key=0, style=solid, color=red];
m3_3 -> m3_6  [key=2, style=dotted, color=red];
m3_3 -> m3_7  [key=1, style=dashed, color=red, label="lambda expression"];
m3_2 -> m3_4  [key=0, style=solid, color=red];
m3_2 -> m3_5  [key=2, style=dotted, color=red];
m3_4 -> m3_0  [key=0, style=bold, color=blue];
m3_7 -> m3_8  [key=0, style=solid, color=red];
m3_8 -> m3_9  [key=0, style=solid, color=red];
m3_8 -> m3_10  [key=2, style=dotted, color=red];
m3_9 -> m3_7  [key=0, style=bold, color=blue];
m3_11 -> m3_8  [key=1, style=dashed, color=red, label=string];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.HashCodeCombiner"];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_13  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_14  [key=2, style=dotted];
m4_12 -> m4_9  [key=0, style=bold, color=blue];
m4_3 -> m4_4  [key=0, style=solid];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_7  [key=2, style=dotted];
m4_5 -> n6  [key=2, style=dotted];
m4_6 -> m4_3  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid, color=red];
m4_1 -> m4_2  [key=0, style=solid, color=red];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_15 -> m4_1  [key=1, style=dashed, color=red, label="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint"];
m4_15 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint"];
m4_15 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint"];
m4_15 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.MethodCallExpressionFingerprint"];
m6_0 -> m6_1  [key=0, style=solid, color=green];
m6_0 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m6_0 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m6_1 -> m6_2  [key=0, style=solid, color=green];
m6_2 -> m6_3  [key=0, style=solid, color=red];
m6_2 -> m6_5  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=2, style=dotted];
m6_3 -> m6_0  [key=0, style=bold, color=blue];
m6_4 -> m6_0  [key=0, style=bold, color=blue];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_25  [key=2, style=dotted];
m6_13 -> m6_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_6 -> m6_7  [key=0, style=solid, color=red];
m6_6 -> m6_9  [key=3, color=red, style=bold, label="method methodReturn HangFire.Server.JobPayload DequeueJob"];
m6_5 -> m6_6  [key=0, style=solid, color=green];
m6_5 -> m6_7  [key=1, style=dashed, color=green, label="System.Threading.CancellationToken"];
m6_9 -> m6_6  [key=0, style=solid, color=green];
m6_9 -> m6_10  [key=0, style=solid, color=green];
m6_9 -> m6_20  [key=0, style=solid, color=red];
m6_7 -> m6_7  [key=1, style=dashed, color=green, label="System.Threading.CancellationToken"];
m6_7 -> m6_8  [key=0, style=solid, color=red];
m6_7 -> m6_18  [key=2, style=dotted, color=green];
m6_7 -> m6_21  [key=2, style=dotted, color=red];
m6_7 -> m6_22  [key=2, style=dotted, color=red];
m6_7 -> m6_13  [key=1, style=dashed, color=red, label=jobId];
m6_7 -> m6_32  [key=1, style=dashed, color=red, label=jobId];
m6_7 -> m6_14  [key=1, style=dashed, color=red, label=jobId];
m6_7 -> m6_37  [key=1, style=dashed, color=red, label=jobId];
m6_7 -> m6_17  [key=1, style=dashed, color=red, label=jobId];
m6_7 -> m6_19  [key=1, style=dashed, color=red, label=jobId];
m6_8 -> m6_9  [key=0, style=solid, color=red];
m6_8 -> m6_21  [key=2, style=dotted, color=green];
m6_8 -> m6_22  [key=2, style=dotted, color=green];
m6_8 -> m6_13  [key=1, style=dashed, color=green, label=jobId];
m6_8 -> m6_26  [key=1, style=dashed, color=green, label=jobId];
m6_8 -> m6_14  [key=1, style=dashed, color=green, label=jobId];
m6_8 -> m6_31  [key=1, style=dashed, color=green, label=jobId];
m6_8 -> m6_16  [key=1, style=dashed, color=green, label=jobId];
m6_8 -> m6_10  [key=0, style=solid, color=red];
m6_8 -> m6_23  [key=2, style=dotted, color=red];
m6_14 -> m6_16  [key=1, style=dashed, color=red, label=jobType];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_25  [key=2, style=dotted];
m6_14 -> m6_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_14 -> m6_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_14 -> m6_19  [key=1, style=dashed, color=red, label=jobArgs];
m6_16 -> m6_17  [key=0, style=solid, color=red];
m6_16 -> m6_24  [key=2, style=dotted, color=green];
m6_16 -> m6_19  [key=0, style=solid, color=red];
m6_16 -> m6_27  [key=2, style=dotted, color=red];
m6_10 -> m6_10  [key=3, color=darkorchid, style=bold, label="Local variable string jobArgs"];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_9  [key=3, color=red, style=bold, label="Local variable string jobArgs"];
m6_15 -> m6_16  [key=0, style=solid, color=red];
m6_15 -> m6_26  [key=2, style=dotted];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_12 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_12 -> m6_24  [key=2, style=dotted];
m6_11 -> m6_10  [key=3, color=darkorchid, style=bold, label="Local variable string jobType"];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_9  [key=3, color=red, style=bold, label="Local variable string jobType"];
m6_17 -> m6_5  [key=0, style=bold, color=blue];
m6_17 -> m6_18  [key=0, style=solid, color=red];
m6_17 -> m6_28  [key=2, style=dotted, color=red];
m6_17 -> m6_29  [key=2, style=dotted, color=red];
m6_26 -> m6_33  [key=0, style=solid];
m6_26 -> m6_21  [key=2, style=dotted];
m6_26 -> m6_34  [key=2, style=dotted];
m6_26 -> m6_35  [key=2, style=dotted];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_25  [key=2, style=dotted];
m6_47 -> m6_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_46  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_44 -> m6_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_44 -> m6_47  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_44 -> m6_57  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_50  [key=2, style=dotted];
m6_45 -> m6_47  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m6_45 -> m6_48  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_25  [key=2, style=dotted];
m6_46 -> m6_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_51  [key=2, style=dotted];
m6_49 -> m6_44  [key=0, style=bold, color=blue];
m6_18 -> m6_20  [key=0, style=solid, color=red];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_43  [key=1, style=dashed, color=darkseagreen4, label=jobType];
m6_38 -> m6_39  [key=0, style=solid, color=green];
m6_38 -> m6_36  [key=0, style=bold, color=blue];
m6_39 -> m6_40  [key=0, style=solid, color=green];
m6_39 -> m6_41  [key=2, style=dotted, color=green];
m6_40 -> m6_38  [key=0, style=bold, color=blue];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_42  [key=1, style=dashed, color=darkseagreen4, label="?"];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_28  [key=2, style=dotted];
m6_32 -> m6_34  [key=2, style=dotted];
m6_32 -> m6_35  [key=2, style=dotted];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_28  [key=2, style=dotted];
m6_37 -> m6_39  [key=2, style=dotted];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_26  [key=0, style=solid];
m6_31 -> m6_38  [key=0, style=solid];
m6_31 -> m6_21  [key=2, style=dotted];
m6_31 -> m6_39  [key=2, style=dotted];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_31  [key=0, style=solid];
m6_33 -> m6_31  [key=0, style=bold, color=blue];
m6_42 -> m6_43  [key=0, style=solid];
m6_43 -> m6_40  [key=0, style=bold, color=blue];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_21  [key=2, style=dotted];
m6_53 -> m6_55  [key=2, style=dotted];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_21  [key=2, style=dotted];
m6_57 -> m6_59  [key=2, style=dotted];
m6_52 -> m6_53  [key=0, style=solid];
m6_56 -> m6_57  [key=0, style=solid];
m6_54 -> m6_52  [key=0, style=bold, color=blue];
m6_58 -> m6_56  [key=0, style=bold, color=blue];
m6_19 -> m6_20  [key=0, style=solid, color=red];
m6_19 -> m6_30  [key=2, style=dotted, color=red];
m6_20 -> m6_6  [key=0, style=bold, color=blue];
m6_60 -> m6_1  [key=1, style=dashed, color=green, label="HangFire.Server.JobFetcher"];
m6_60 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobFetcher"];
m6_60 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobFetcher"];
m6_60 -> m6_7  [key=1, style=dashed, color=red, label="HangFire.Server.JobFetcher"];
m6_60 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobFetcher"];
m6_60 -> m6_17  [key=1, style=dashed, color=red, label="HangFire.Server.JobFetcher"];
m6_60 -> m6_19  [key=1, style=dashed, color=red, label="HangFire.Server.JobFetcher"];
m6_60 -> m6_8  [key=1, style=dashed, color=green, label="HangFire.Server.JobFetcher"];
m6_60 -> m6_16  [key=1, style=dashed, color=green, label="HangFire.Server.JobFetcher"];
m6_60 -> m6_39  [key=1, style=dashed, color=green, label="HangFire.Server.JobFetcher"];
m6_61 -> m6_32  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_61 -> m6_37  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_61 -> m6_26  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_61 -> m6_31  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_62 -> m6_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_62 -> m6_57  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_63 -> m6_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_43 -> m7_44  [key=0, style=solid];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_46  [key=2, style=dotted];
m7_45 -> m7_43  [key=0, style=bold, color=blue];
m7_47 -> m7_48  [key=0, style=solid];
m7_48 -> m7_49  [key=0, style=solid];
m7_48 -> m7_50  [key=0, style=solid];
m7_49 -> m7_48  [key=0, style=solid];
m7_49 -> m7_3  [key=2, style=dotted];
m7_49 -> m7_51  [key=2, style=dotted];
m7_50 -> m7_47  [key=0, style=bold, color=blue];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_16  [key=1, style=dashed, color=darkseagreen4, label=Table];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_16  [key=0, style=solid];
m7_11 -> m7_13  [key=1, style=dashed, color=darkseagreen4, label=row];
m7_11 -> m7_14  [key=1, style=dashed, color=darkseagreen4, label=row];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_20  [key=2, style=dotted];
m7_16 -> m7_21  [key=2, style=dotted];
m7_16 -> m7_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_15  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_12 -> m7_12  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_11  [key=0, style=solid];
m7_13 -> m7_18  [key=2, style=dotted];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_19  [key=2, style=dotted];
m7_14 -> m7_4  [key=2, style=dotted];
m7_15 -> m7_13  [key=0, style=solid];
m7_15 -> m7_15  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_17 -> m7_10  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=2, style=dotted];
m7_1 -> m7_4  [key=2, style=dotted];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m7_5 -> m7_6  [key=0, style=solid, color=red];
m7_6 -> m7_7  [key=0, style=solid, color=red];
m7_6 -> m7_8  [key=2, style=dotted, color=red];
m7_6 -> m7_9  [key=2, style=dotted, color=red];
m7_7 -> m7_5  [key=0, style=bold, color=blue];
m7_40 -> m7_41  [key=0, style=solid];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_39  [key=2, style=dotted];
m7_42 -> m7_40  [key=0, style=bold, color=blue];
m7_25 -> m7_26  [key=0, style=solid, color=red];
m7_26 -> m7_27  [key=0, style=solid, color=red];
m7_26 -> m7_28  [key=2, style=dotted, color=red];
m7_27 -> m7_25  [key=0, style=bold, color=blue];
m7_22 -> m7_23  [key=0, style=solid];
m7_23 -> m7_24  [key=0, style=solid];
m7_24 -> m7_22  [key=0, style=bold, color=blue];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_31  [key=1, style=dashed, color=darkseagreen4, label=int];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_33  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_30 -> m7_12  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_34  [key=0, style=solid];
m7_33 -> m7_31  [key=0, style=solid];
m7_33 -> m7_33  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_35  [key=2, style=dotted];
m7_34 -> m7_29  [key=0, style=bold, color=blue];
m7_36 -> m7_37  [key=0, style=solid];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_39  [key=2, style=dotted];
m7_38 -> m7_36  [key=0, style=bold, color=blue];
m7_52 -> m7_6  [key=1, style=dashed, color=red, label="HangFire.Tests.JobFetcherSteps"];
m7_52 -> m7_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m7_52 -> m7_26  [key=1, style=dashed, color=red, label="HangFire.Tests.JobFetcherSteps"];
m7_52 -> m7_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m7_52 -> m7_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m7_52 -> m7_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m7_52 -> m7_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherSteps"];
m8_84 -> m8_82  [key=0, style=bold, color=blue];
m8_12 -> m8_13  [key=0, style=solid, color=green];
m8_12 -> m8_80  [key=0, style=solid, color=green];
m8_12 -> m8_93  [key=2, style=dotted, color=green];
m8_85 -> m8_86  [key=0, style=solid, color=red];
m8_86 -> m8_87  [key=0, style=solid, color=red];
m8_86 -> m8_15  [key=2, style=dotted, color=red];
m8_86 -> m8_31  [key=2, style=dotted, color=red];
m8_86 -> m8_92  [key=1, style=dashed, color=red, label="lambda expression"];
m8_87 -> m8_88  [key=0, style=solid];
m8_87 -> m8_55  [key=2, style=dotted];
m8_88 -> m8_89  [key=0, style=solid];
m8_88 -> m8_56  [key=2, style=dotted];
m8_89 -> m8_90  [key=0, style=solid];
m8_89 -> m8_57  [key=2, style=dotted];
m8_89 -> m8_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_90 -> m8_91  [key=0, style=solid];
m8_90 -> m8_57  [key=2, style=dotted];
m8_90 -> m8_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_91 -> m8_85  [key=0, style=bold, color=blue];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_97  [key=2, style=dotted];
m8_18 -> m8_120  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_0 -> m8_1  [key=0, style=solid, color=green];
m8_1 -> m8_2  [key=0, style=solid, color=green];
m8_1 -> m8_83  [key=2, style=dotted, color=green];
m8_1 -> m8_84  [key=2, style=dotted, color=green];
m8_1 -> m8_85  [key=2, style=dotted, color=green];
m8_1 -> m8_7  [key=3, color=green, style=bold, label="Field variable HangFire.Server.WorkerPool _pool"];
m8_1 -> m8_12  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_86  [key=2, style=dotted];
m8_2 -> m8_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_2 -> m8_13  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid, color=red];
m8_7 -> m8_90  [key=2, style=dotted, color=green];
m8_7 -> m8_15  [key=2, style=dotted, color=red];
m8_7 -> m8_16  [key=2, style=dotted, color=red];
m8_7 -> m8_24  [key=1, style=dashed, color=red, label="lambda expression"];
m8_6 -> m8_7  [key=0, style=solid, color=red];
m8_6 -> m8_89  [key=2, style=dotted, color=green];
m8_6 -> m8_117  [key=1, style=dashed, color=green, label="lambda expression"];
m8_6 -> m8_18  [key=2, style=dotted, color=red];
m8_5 -> m8_6  [key=0, style=solid, color=red];
m8_5 -> m8_87  [key=2, style=dotted];
m8_5 -> m8_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_5 -> m8_17  [key=2, style=dotted, color=red];
m8_8 -> m8_9  [key=0, style=solid, color=red];
m8_8 -> m8_91  [key=2, style=dotted, color=green];
m8_8 -> m8_19  [key=2, style=dotted];
m8_9 -> m8_9  [key=3, color=darkorchid, style=bold, label="Local variable int count"];
m8_9 -> m8_10  [key=0, style=solid, color=red];
m8_9 -> m8_58  [key=1, style=dashed, color=darkseagreen4, label=count];
m8_9 -> m8_15  [key=2, style=dotted, color=red];
m8_9 -> m8_16  [key=2, style=dotted, color=red];
m8_9 -> m8_28  [key=1, style=dashed, color=red, label="lambda expression"];
m8_11 -> m8_12  [key=0, style=solid, color=green];
m8_11 -> m8_51  [key=1, style=dashed, color=green, label=command];
m8_11 -> m8_92  [key=2, style=dotted];
m8_11 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_11 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_11 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_11 -> m8_24  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_11 -> m8_32  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_11 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_11 -> m8_38  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_11 -> m8_39  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_11 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_11 -> m8_45  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_11 -> m8_50  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_11 -> m8_56  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_11 -> m8_57  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_11 -> m8_60  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_11 -> m8_61  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_11 -> m8_63  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_11 -> m8_64  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_11 -> m8_70  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_11 -> m8_71  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_11 -> m8_76  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_11 -> m8_78  [key=1, style=dashed, color=darkseagreen4, label=command];
m8_11 -> m8_0  [key=0, style=bold, color=blue];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_23  [key=0, style=solid];
m8_13 -> m8_94  [key=2, style=dotted];
m8_80 -> m8_81  [key=0, style=solid];
m8_80 -> m8_98  [key=2, style=dotted];
m8_51 -> m8_52  [key=0, style=solid, color=green];
m8_51 -> m8_95  [key=2, style=dotted, color=green];
m8_51 -> m8_96  [key=2, style=dotted, color=green];
m8_51 -> m8_53  [key=1, style=dashed, color=green, label=workCount];
m8_51 -> m8_56  [key=2, style=dotted];
m8_50 -> m8_51  [key=0, style=solid, color=green];
m8_50 -> m8_56  [key=0, style=solid];
m8_50 -> m8_94  [key=2, style=dotted];
m8_50 -> m8_55  [key=2, style=dotted];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_55  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_52 -> m8_15  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m8_52 -> m8_57  [key=2, style=dotted];
m8_52 -> m8_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_56  [key=0, style=solid];
m8_53 -> m8_57  [key=2, style=dotted];
m8_53 -> m8_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_3 -> m8_4  [key=0, style=solid, color=red];
m8_3 -> m8_87  [key=2, style=dotted];
m8_3 -> m8_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_3 -> m8_14  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid, color=red];
m8_4 -> m8_89  [key=2, style=dotted];
m8_4 -> m8_88  [key=2, style=dotted];
m8_4 -> m8_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_4 -> m8_15  [key=2, style=dotted, color=red];
m8_4 -> m8_16  [key=2, style=dotted, color=red];
m8_4 -> m8_20  [key=1, style=dashed, color=red, label="lambda expression"];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_80  [key=0, style=solid];
m8_10 -> m8_10  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m8_10 -> m8_15  [key=2, style=dotted];
m8_10 -> m8_16  [key=2, style=dotted];
m8_10 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_58 -> m8_58  [key=1, style=dashed, color=darkseagreen4, label=count];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_153  [key=1, style=dashed, color=darkseagreen4, label=number];
m8_14 -> m8_95  [key=2, style=dotted];
m8_14 -> m8_96  [key=2, style=dotted];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label=workCount];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_32  [key=0, style=solid];
m8_23 -> m8_94  [key=2, style=dotted];
m8_24 -> m8_95  [key=2, style=dotted];
m8_24 -> m8_96  [key=2, style=dotted];
m8_24 -> m8_25  [key=0, style=solid, color=red];
m8_24 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label=workCount];
m8_24 -> m8_109  [key=0, style=solid];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_38  [key=0, style=solid];
m8_32 -> m8_94  [key=2, style=dotted];
m8_33 -> m8_95  [key=2, style=dotted];
m8_33 -> m8_96  [key=2, style=dotted];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label=workCount];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_44  [key=0, style=solid];
m8_38 -> m8_94  [key=2, style=dotted];
m8_39 -> m8_95  [key=2, style=dotted];
m8_39 -> m8_96  [key=2, style=dotted];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label=workCount];
m8_39 -> m8_37  [key=0, style=bold, color=blue];
m8_44 -> m8_50  [key=0, style=solid];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_94  [key=2, style=dotted];
m8_45 -> m8_95  [key=2, style=dotted];
m8_45 -> m8_96  [key=2, style=dotted];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_47  [key=1, style=dashed, color=darkseagreen4, label=workCount];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_60  [key=0, style=solid];
m8_56 -> m8_94  [key=2, style=dotted];
m8_57 -> m8_95  [key=2, style=dotted];
m8_57 -> m8_96  [key=2, style=dotted];
m8_57 -> m8_58  [key=0, style=solid];
m8_57 -> m8_59  [key=1, style=dashed, color=darkseagreen4, label=seconds];
m8_60 -> m8_61  [key=0, style=solid];
m8_60 -> m8_63  [key=0, style=solid];
m8_60 -> m8_94  [key=2, style=dotted];
m8_60 -> m8_58  [key=0, style=bold, color=blue];
m8_61 -> m8_95  [key=2, style=dotted];
m8_61 -> m8_96  [key=2, style=dotted];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_156  [key=1, style=dashed, color=darkseagreen4, label=iterations];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_70  [key=0, style=solid];
m8_63 -> m8_94  [key=2, style=dotted];
m8_63 -> m8_65  [key=2, style=dotted];
m8_64 -> m8_95  [key=2, style=dotted];
m8_64 -> m8_96  [key=2, style=dotted];
m8_64 -> m8_65  [key=0, style=solid];
m8_64 -> m8_66  [key=1, style=dashed, color=darkseagreen4, label=workCount];
m8_64 -> m8_62  [key=0, style=bold, color=blue];
m8_70 -> m8_71  [key=0, style=solid];
m8_70 -> m8_76  [key=0, style=solid];
m8_70 -> m8_94  [key=2, style=dotted];
m8_71 -> m8_95  [key=2, style=dotted];
m8_71 -> m8_96  [key=2, style=dotted];
m8_71 -> m8_72  [key=0, style=solid];
m8_71 -> m8_15  [key=2, style=dotted];
m8_71 -> m8_16  [key=2, style=dotted];
m8_71 -> m8_76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_76 -> m8_77  [key=0, style=solid];
m8_76 -> m8_78  [key=0, style=solid];
m8_76 -> m8_94  [key=2, style=dotted];
m8_78 -> m8_10  [key=0, style=solid];
m8_78 -> m8_79  [key=0, style=solid];
m8_78 -> m8_94  [key=2, style=dotted];
m8_78 -> m8_76  [key=0, style=bold, color=blue];
m8_81 -> m8_82  [key=0, style=solid];
m8_81 -> m8_92  [key=2, style=dotted];
m8_81 -> m8_79  [key=0, style=bold, color=blue];
m8_47 -> m8_50  [key=0, style=solid];
m8_47 -> m8_48  [key=0, style=solid];
m8_47 -> m8_45  [key=0, style=bold, color=blue];
m8_55 -> m8_53  [key=0, style=solid];
m8_55 -> m8_55  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_55 -> m8_115  [key=0, style=solid, color=red];
m8_15 -> m8_15  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_15 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_54 -> m8_55  [key=0, style=solid];
m8_54 -> m8_97  [key=2, style=dotted];
m8_54 -> m8_145  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_54 -> m8_49  [key=0, style=bold, color=blue];
m8_20 -> m8_98  [key=2, style=dotted];
m8_20 -> m8_23  [key=0, style=solid];
m8_20 -> m8_21  [key=0, style=solid, color=red];
m8_20 -> m8_106  [key=0, style=solid];
m8_22 -> m8_98  [key=2, style=dotted];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_20  [key=0, style=bold, color=blue];
m8_29 -> m8_98  [key=2, style=dotted];
m8_29 -> m8_32  [key=0, style=solid];
m8_29 -> m8_30  [key=0, style=solid, color=red];
m8_29 -> m8_31  [key=2, style=dotted, color=red];
m8_31 -> m8_98  [key=2, style=dotted];
m8_31 -> m8_32  [key=0, style=solid];
m8_73 -> m8_98  [key=2, style=dotted];
m8_73 -> m8_76  [key=0, style=solid];
m8_73 -> m8_74  [key=0, style=solid];
m8_73 -> m8_56  [key=2, style=dotted];
m8_75 -> m8_98  [key=2, style=dotted];
m8_75 -> m8_76  [key=0, style=solid];
m8_75 -> m8_70  [key=0, style=bold, color=blue];
m8_79 -> m8_10  [key=0, style=solid];
m8_79 -> m8_104  [key=2, style=dotted];
m8_79 -> m8_80  [key=0, style=solid];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_100  [key=2, style=dotted];
m8_59 -> m8_101  [key=2, style=dotted];
m8_59 -> m8_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_59 -> m8_31  [key=2, style=dotted];
m8_59 -> m8_61  [key=2, style=dotted];
m8_59 -> m8_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_16 -> m8_20  [key=0, style=solid];
m8_16 -> m8_17  [key=0, style=solid];
m8_25 -> m8_15  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m8_25 -> m8_26  [key=0, style=solid, color=red];
m8_25 -> m8_28  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_25 -> m8_27  [key=2, style=dotted, color=red];
m8_26 -> m8_29  [key=0, style=solid];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_24  [key=0, style=bold, color=blue];
m8_34 -> m8_15  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_34 -> m8_31  [key=2, style=dotted];
m8_34 -> m8_36  [key=2, style=dotted];
m8_35 -> m8_38  [key=0, style=solid];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_33  [key=0, style=bold, color=blue];
m8_40 -> m8_15  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m8_40 -> m8_41  [key=0, style=solid, color=red];
m8_40 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_41 -> m8_44  [key=0, style=solid];
m8_41 -> m8_42  [key=0, style=solid, color=red];
m8_41 -> m8_31  [key=2, style=dotted, color=red];
m8_41 -> m8_45  [key=1, style=dashed, color=red, label="lambda expression"];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_15  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m8_46 -> m8_49  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_46 -> m8_48  [key=2, style=dotted];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_97  [key=2, style=dotted];
m8_62 -> m8_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_65 -> m8_15  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_69  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_66 -> m8_70  [key=0, style=solid];
m8_66 -> m8_67  [key=0, style=solid];
m8_72 -> m8_73  [key=0, style=solid];
m8_72 -> m8_103  [key=2, style=dotted];
m8_72 -> m8_163  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_72 -> m8_55  [key=2, style=dotted];
m8_77 -> m8_78  [key=0, style=solid];
m8_77 -> m8_97  [key=2, style=dotted];
m8_77 -> m8_175  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_77 -> m8_31  [key=2, style=dotted];
m8_77 -> m8_36  [key=2, style=dotted];
m8_77 -> m8_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_49 -> m8_47  [key=0, style=solid];
m8_49 -> m8_49  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_49 -> m8_50  [key=0, style=solid];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_97  [key=2, style=dotted];
m8_48 -> m8_138  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_17 -> m8_15  [key=3, color=darkorchid, style=bold, label="Local variable int number"];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_121  [key=1, style=dashed, color=darkseagreen4, label=number];
m8_19 -> m8_16  [key=0, style=solid];
m8_19 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_21 -> m8_22  [key=0, style=solid, color=red];
m8_21 -> m8_23  [key=2, style=dotted, color=red];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_28  [key=0, style=bold, color=blue];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_57  [key=2, style=dotted];
m8_74 -> m8_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_28 -> m8_26  [key=0, style=solid];
m8_28 -> m8_28  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_28 -> m8_29  [key=0, style=solid, color=red];
m8_28 -> m8_112  [key=0, style=solid];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_99  [key=2, style=dotted];
m8_27 -> m8_124  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_37 -> m8_35  [key=0, style=solid];
m8_37 -> m8_37  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_37 -> m8_38  [key=0, style=solid];
m8_36 -> m8_97  [key=2, style=dotted];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_128  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_43 -> m8_41  [key=0, style=solid];
m8_43 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_43 -> m8_40  [key=0, style=bold, color=blue];
m8_42 -> m8_97  [key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_132  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_42 -> m8_44  [key=2, style=dotted];
m8_69 -> m8_66  [key=0, style=solid];
m8_69 -> m8_69  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_67 -> m8_97  [key=2, style=dotted];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_67 -> m8_69  [key=2, style=dotted];
m8_68 -> m8_69  [key=0, style=solid];
m8_68 -> m8_102  [key=2, style=dotted];
m8_68 -> m8_66  [key=0, style=bold, color=blue];
m8_82 -> m8_0  [key=0, style=bold, color=blue];
m8_82 -> m8_83  [key=0, style=solid];
m8_96 -> m8_97  [key=0, style=solid];
m8_96 -> m8_98  [key=2, style=dotted];
m8_100 -> m8_101  [key=0, style=solid];
m8_100 -> m8_102  [key=2, style=dotted];
m8_103 -> m8_104  [key=0, style=solid];
m8_104 -> m8_105  [key=0, style=solid];
m8_104 -> m8_55  [key=2, style=dotted];
m8_104 -> m8_181  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_104 -> m8_179  [key=0, style=solid];
m8_104 -> m8_188  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_104 -> m8_182  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_104 -> m8_192  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_104 -> m8_79  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m8_105 -> m8_106  [key=0, style=solid];
m8_105 -> m8_56  [key=2, style=dotted];
m8_106 -> m8_107  [key=0, style=solid];
m8_106 -> m8_57  [key=2, style=dotted];
m8_106 -> m8_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_106 -> m8_98  [key=2, style=dotted];
m8_106 -> m8_22  [key=0, style=solid];
m8_107 -> m8_108  [key=0, style=solid];
m8_107 -> m8_57  [key=2, style=dotted];
m8_107 -> m8_112  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_108 -> m8_103  [key=0, style=bold, color=blue];
m8_115 -> m8_116  [key=0, style=solid, color=red];
m8_115 -> m8_117  [key=2, style=dotted, color=red];
m8_115 -> m8_98  [key=2, style=dotted];
m8_115 -> m8_94  [key=0, style=solid];
m8_116 -> m8_55  [key=0, style=bold, color=blue];
m8_94 -> m8_92  [key=0, style=bold, color=blue];
m8_92 -> m8_93  [key=0, style=solid, color=red];
m8_92 -> m8_115  [key=0, style=solid];
m8_181 -> m8_9  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m8_181 -> m8_182  [key=0, style=solid];
m8_181 -> m8_184  [key=0, style=solid];
m8_180 -> m8_181  [key=0, style=solid];
m8_180 -> m8_182  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_180 -> m8_192  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_180 -> m8_183  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_183 -> m8_181  [key=0, style=solid];
m8_183 -> m8_183  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_182 -> m8_183  [key=0, style=solid];
m8_182 -> m8_182  [key=1, style=dashed, color=darkseagreen4, label=lastId];
m8_182 -> m8_186  [key=2, style=dotted];
m8_182 -> m8_191  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_182 -> m8_184  [key=1, style=dashed, color=darkseagreen4, label=lastId];
m8_184 -> m8_185  [key=0, style=solid];
m8_184 -> m8_186  [key=2, style=dotted];
m8_184 -> m8_194  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_179 -> m8_180  [key=0, style=solid];
m8_179 -> m8_182  [key=1, style=dashed, color=darkseagreen4, label=lastId];
m8_179 -> m8_184  [key=1, style=dashed, color=darkseagreen4, label=lastId];
m8_179 -> m8_99  [key=2, style=dotted];
m8_179 -> m8_187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_185 -> m8_104  [key=0, style=bold, color=blue];
m8_172 -> m8_173  [key=0, style=solid];
m8_83 -> m8_84  [key=0, style=solid];
m8_83 -> m8_31  [key=2, style=dotted];
m8_83 -> m8_61  [key=2, style=dotted];
m8_95 -> m8_96  [key=0, style=solid];
m8_99 -> m8_100  [key=0, style=solid];
m8_93 -> m8_94  [key=0, style=solid, color=red];
m8_93 -> m8_31  [key=2, style=dotted, color=red];
m8_93 -> m8_61  [key=2, style=dotted, color=red];
m8_97 -> m8_95  [key=0, style=bold, color=blue];
m8_101 -> m8_99  [key=0, style=bold, color=blue];
m8_109 -> m8_110  [key=0, style=solid];
m8_109 -> m8_98  [key=2, style=dotted];
m8_109 -> m8_26  [key=0, style=solid];
m8_112 -> m8_113  [key=0, style=solid];
m8_112 -> m8_98  [key=2, style=dotted];
m8_112 -> m8_30  [key=0, style=solid];
m8_110 -> m8_111  [key=0, style=solid];
m8_110 -> m8_31  [key=2, style=dotted];
m8_110 -> m8_32  [key=2, style=dotted];
m8_111 -> m8_109  [key=0, style=bold, color=blue];
m8_113 -> m8_114  [key=0, style=solid];
m8_113 -> m8_69  [key=2, style=dotted];
m8_114 -> m8_112  [key=0, style=bold, color=blue];
m8_117 -> m8_118  [key=0, style=solid, color=green];
m8_118 -> m8_119  [key=0, style=solid, color=green];
m8_118 -> m8_98  [key=2, style=dotted, color=green];
m8_118 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_4  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_5  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_6  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_7  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_9  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_74  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_86  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_88  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_89  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_90  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_104  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_105  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_106  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_118 -> m8_115  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.DelayedJobScheduler"];
m8_119 -> m8_117  [key=0, style=bold, color=blue];
m8_153 -> m8_154  [key=0, style=solid];
m8_153 -> m8_123  [key=2, style=dotted];
m8_156 -> m8_157  [key=0, style=solid];
m8_156 -> m8_158  [key=2, style=dotted];
m8_145 -> m8_146  [key=0, style=solid];
m8_188 -> m8_189  [key=0, style=solid];
m8_188 -> m8_190  [key=2, style=dotted];
m8_192 -> m8_193  [key=0, style=solid];
m8_192 -> m8_190  [key=2, style=dotted];
m8_191 -> m8_192  [key=0, style=solid];
m8_194 -> m8_195  [key=0, style=solid];
m8_152 -> m8_153  [key=0, style=solid];
m8_154 -> m8_152  [key=0, style=bold, color=blue];
m8_155 -> m8_156  [key=0, style=solid];
m8_157 -> m8_155  [key=0, style=bold, color=blue];
m8_163 -> m8_164  [key=0, style=solid];
m8_175 -> m8_176  [key=0, style=solid];
m8_138 -> m8_139  [key=0, style=solid];
m8_121 -> m8_123  [key=2, style=dotted];
m8_121 -> m8_122  [key=0, style=solid];
m8_165 -> m8_97  [key=2, style=dotted];
m8_165 -> m8_167  [key=0, style=solid];
m8_165 -> m8_168  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_166 -> m8_97  [key=2, style=dotted];
m8_166 -> m8_167  [key=0, style=solid];
m8_166 -> m8_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_147 -> m8_145  [key=0, style=bold, color=blue];
m8_146 -> m8_147  [key=0, style=solid];
m8_146 -> m8_148  [key=2, style=dotted];
m8_146 -> m8_149  [key=2, style=dotted];
m8_146 -> m8_143  [key=2, style=dotted];
m8_146 -> m8_150  [key=2, style=dotted];
m8_146 -> m8_151  [key=2, style=dotted];
m8_187 -> m8_188  [key=0, style=solid];
m8_189 -> m8_187  [key=0, style=bold, color=blue];
m8_193 -> m8_191  [key=0, style=bold, color=blue];
m8_196 -> m8_194  [key=0, style=bold, color=blue];
m8_195 -> m8_196  [key=0, style=solid];
m8_195 -> m8_197  [key=2, style=dotted];
m8_124 -> m8_125  [key=0, style=solid];
m8_128 -> m8_129  [key=0, style=solid];
m8_132 -> m8_133  [key=0, style=solid];
m8_159 -> m8_160  [key=0, style=solid];
m8_167 -> m8_163  [key=0, style=bold, color=blue];
m8_164 -> m8_165  [key=0, style=solid];
m8_164 -> m8_166  [key=0, style=solid];
m8_177 -> m8_175  [key=0, style=bold, color=blue];
m8_176 -> m8_177  [key=0, style=solid];
m8_176 -> m8_178  [key=2, style=dotted];
m8_140 -> m8_138  [key=0, style=bold, color=blue];
m8_139 -> m8_140  [key=0, style=solid];
m8_139 -> m8_141  [key=2, style=dotted];
m8_139 -> m8_142  [key=2, style=dotted];
m8_139 -> m8_143  [key=2, style=dotted];
m8_139 -> m8_144  [key=2, style=dotted];
m8_120 -> m8_121  [key=0, style=solid];
m8_122 -> m8_120  [key=0, style=bold, color=blue];
m8_168 -> m8_169  [key=0, style=solid];
m8_126 -> m8_124  [key=0, style=bold, color=blue];
m8_125 -> m8_126  [key=0, style=solid];
m8_125 -> m8_127  [key=2, style=dotted];
m8_130 -> m8_128  [key=0, style=bold, color=blue];
m8_129 -> m8_130  [key=0, style=solid];
m8_129 -> m8_131  [key=2, style=dotted];
m8_134 -> m8_132  [key=0, style=bold, color=blue];
m8_133 -> m8_134  [key=0, style=solid];
m8_133 -> m8_135  [key=2, style=dotted];
m8_133 -> m8_136  [key=2, style=dotted];
m8_133 -> m8_137  [key=2, style=dotted];
m8_161 -> m8_159  [key=0, style=bold, color=blue];
m8_160 -> m8_161  [key=0, style=solid];
m8_160 -> m8_162  [key=2, style=dotted];
m8_170 -> m8_168  [key=0, style=bold, color=blue];
m8_169 -> m8_170  [key=0, style=solid];
m8_169 -> m8_171  [key=2, style=dotted];
m8_173 -> m8_174  [key=0, style=solid];
m8_173 -> m8_162  [key=2, style=dotted];
m8_174 -> m8_172  [key=0, style=bold, color=blue];
m8_199 -> m8_153  [key=1, style=dashed, color=darkseagreen4, label=number];
m8_200 -> m8_156  [key=1, style=dashed, color=darkseagreen4, label=iterations];
m8_201 -> m8_188  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_201 -> m8_192  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_202 -> m8_192  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_198 -> m8_121  [key=1, style=dashed, color=darkseagreen4, label=number];
m9_0 -> m9_3  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<HangFire.Server.WorkerPool>"];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m9_0 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m9_0 -> m9_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_0 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobActivator"];
m9_3 -> m9_4  [key=0, style=solid, color=green];
m9_3 -> m9_5  [key=0, style=solid, color=green];
m9_2 -> m9_3  [key=0, style=solid, color=green];
m9_4 -> m9_11  [key=0, style=solid, color=green];
m9_4 -> m9_12  [key=2, style=dotted, color=green];
m9_5 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_7  [key=0, style=solid];
m9_5 -> m9_13  [key=2, style=dotted];
m9_1 -> m9_2  [key=0, style=solid];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_15  [key=2, style=dotted];
m9_7 -> m9_16  [key=2, style=dotted];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_17  [key=2, style=dotted];
m9_8 -> m9_18  [key=2, style=dotted];
m9_6 -> m9_11  [key=0, style=solid];
m9_6 -> m9_14  [key=2, style=dotted];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_20  [key=2, style=dotted];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_19  [key=2, style=dotted];
m9_11 -> m9_0  [key=0, style=bold, color=blue];
m9_49 -> m9_50  [key=0, style=solid];
m9_50 -> m9_51  [key=0, style=solid];
m9_50 -> m9_58  [key=2, style=dotted];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_27  [key=2, style=dotted];
m9_52 -> m9_53  [key=0, style=solid];
m9_52 -> m9_59  [key=2, style=dotted];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_38  [key=2, style=dotted];
m9_54 -> m9_55  [key=0, style=solid];
m9_54 -> m9_57  [key=0, style=solid];
m9_54 -> m9_60  [key=2, style=dotted];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_61  [key=2, style=dotted];
m9_55 -> m9_56  [key=0, style=solid];
m9_57 -> m9_49  [key=0, style=bold, color=blue];
m9_21 -> m9_22  [key=0, style=solid];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_25  [key=2, style=dotted];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_26  [key=2, style=dotted];
m9_24 -> m9_21  [key=0, style=bold, color=blue];
m9_38 -> m9_39  [key=0, style=solid];
m9_40 -> m9_41  [key=0, style=solid, color=green];
m9_40 -> m9_46  [key=2, style=dotted, color=green];
m9_39 -> m9_40  [key=0, style=solid, color=green];
m9_39 -> m9_46  [key=2, style=dotted];
m9_41 -> m9_42  [key=0, style=solid];
m9_41 -> m9_43  [key=0, style=solid];
m9_43 -> m9_44  [key=0, style=solid];
m9_43 -> m9_45  [key=0, style=solid];
m9_42 -> m9_41  [key=0, style=solid];
m9_42 -> m9_47  [key=2, style=dotted];
m9_44 -> m9_43  [key=0, style=solid];
m9_44 -> m9_48  [key=2, style=dotted];
m9_45 -> m9_38  [key=0, style=bold, color=blue];
m9_58 -> m9_62  [key=0, style=solid];
m9_63 -> m9_64  [key=0, style=solid, color=green];
m9_63 -> m9_71  [key=2, style=dotted, color=green];
m9_63 -> m9_73  [key=1, style=dashed, color=green, label="lambda expression"];
m9_62 -> m9_63  [key=0, style=solid, color=green];
m9_62 -> m9_64  [key=1, style=dashed, color=green, label=transaction];
m9_62 -> m9_70  [key=2, style=dotted];
m9_62 -> m9_67  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_62 -> m9_68  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_64 -> m9_65  [key=0, style=solid, color=green];
m9_64 -> m9_71  [key=2, style=dotted, color=green];
m9_64 -> m9_77  [key=1, style=dashed, color=green, label="lambda expression"];
m9_65 -> m9_66  [key=0, style=solid];
m9_65 -> m9_68  [key=0, style=solid];
m9_67 -> m9_71  [key=2, style=dotted];
m9_67 -> m9_65  [key=0, style=solid];
m9_67 -> m9_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_68 -> m9_69  [key=0, style=solid];
m9_68 -> m9_72  [key=2, style=dotted];
m9_66 -> m9_65  [key=3, color=darkorchid, style=bold, label="Local variable HangFire.Server.WorkerPool pool"];
m9_66 -> m9_67  [key=0, style=solid];
m9_66 -> m9_85  [key=1, style=dashed, color=darkseagreen4, label=pool];
m9_69 -> m9_58  [key=0, style=bold, color=blue];
m9_27 -> m9_28  [key=0, style=solid];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_30  [key=0, style=solid];
m9_29 -> m9_28  [key=0, style=solid];
m9_29 -> m9_33  [key=2, style=dotted];
m9_29 -> m9_34  [key=2, style=dotted];
m9_30 -> m9_31  [key=0, style=solid];
m9_30 -> m9_35  [key=2, style=dotted];
m9_30 -> m9_36  [key=2, style=dotted];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_35  [key=2, style=dotted];
m9_31 -> m9_37  [key=2, style=dotted];
m9_32 -> m9_27  [key=0, style=bold, color=blue];
m9_96 -> m9_97  [key=0, style=solid];
m9_73 -> m9_74  [key=0, style=solid, color=green];
m9_77 -> m9_78  [key=0, style=solid, color=green];
m9_74 -> m9_75  [key=0, style=solid, color=green];
m9_74 -> m9_76  [key=2, style=dotted, color=green];
m9_75 -> m9_73  [key=0, style=bold, color=blue];
m9_78 -> m9_79  [key=0, style=solid, color=green];
m9_78 -> m9_80  [key=2, style=dotted, color=green];
m9_78 -> m9_81  [key=2, style=dotted, color=green];
m9_78 -> m9_82  [key=2, style=dotted, color=green];
m9_78 -> m9_83  [key=2, style=dotted, color=green];
m9_79 -> m9_77  [key=0, style=bold, color=blue];
m9_85 -> m9_76  [key=2, style=dotted];
m9_85 -> m9_80  [key=2, style=dotted];
m9_85 -> m9_86  [key=0, style=solid];
m9_93 -> m9_94  [key=0, style=solid];
m9_93 -> m9_95  [key=2, style=dotted];
m9_97 -> m9_80  [key=2, style=dotted];
m9_97 -> m9_98  [key=0, style=solid];
m9_97 -> m9_99  [key=2, style=dotted];
m9_84 -> m9_85  [key=0, style=solid];
m9_86 -> m9_84  [key=0, style=bold, color=blue];
m9_92 -> m9_93  [key=0, style=solid];
m9_94 -> m9_92  [key=0, style=bold, color=blue];
m9_98 -> m9_96  [key=0, style=bold, color=blue];
m9_60 -> m9_87  [key=0, style=solid];
m9_87 -> m9_88  [key=0, style=solid];
m9_87 -> m9_70  [key=2, style=dotted];
m9_87 -> m9_89  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_87 -> m9_90  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_88 -> m9_71  [key=2, style=dotted];
m9_88 -> m9_89  [key=0, style=solid];
m9_88 -> m9_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_89 -> m9_71  [key=2, style=dotted];
m9_89 -> m9_90  [key=0, style=solid];
m9_89 -> m9_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_90 -> m9_91  [key=0, style=solid];
m9_90 -> m9_72  [key=2, style=dotted];
m9_91 -> m9_60  [key=0, style=bold, color=blue];
m9_100 -> m9_40  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m9_100 -> m9_63  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m9_100 -> m9_64  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m9_100 -> m9_74  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m9_100 -> m9_78  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m9_100 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_85  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_88  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_89  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_100 -> m9_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m9_101 -> m9_85  [key=1, style=dashed, color=darkseagreen4, label=pool];
m10_74 -> m10_75  [key=0, style=solid];
m10_75 -> m10_76  [key=0, style=solid];
m10_75 -> m10_39  [key=2, style=dotted];
m10_75 -> m10_77  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_76 -> m10_77  [key=0, style=solid];
m10_76 -> m10_80  [key=2, style=dotted];
m10_76 -> m10_64  [key=2, style=dotted];
m10_76 -> m10_81  [key=2, style=dotted];
m10_76 -> m10_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_77 -> m10_78  [key=0, style=solid];
m10_77 -> m10_82  [key=2, style=dotted];
m10_78 -> m10_79  [key=0, style=solid];
m10_78 -> m10_19  [key=2, style=dotted];
m10_79 -> m10_74  [key=0, style=bold, color=blue];
m10_87 -> m10_88  [key=0, style=solid];
m10_88 -> m10_89  [key=0, style=solid];
m10_88 -> m10_39  [key=2, style=dotted];
m10_88 -> m10_90  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_89 -> m10_90  [key=0, style=solid];
m10_89 -> m10_80  [key=2, style=dotted];
m10_89 -> m10_64  [key=2, style=dotted];
m10_89 -> m10_81  [key=2, style=dotted];
m10_89 -> m10_93  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_90 -> m10_91  [key=0, style=solid];
m10_90 -> m10_82  [key=2, style=dotted];
m10_91 -> m10_92  [key=0, style=solid];
m10_91 -> m10_19  [key=2, style=dotted];
m10_92 -> m10_87  [key=0, style=bold, color=blue];
m10_66 -> m10_67  [key=0, style=solid];
m10_67 -> m10_68  [key=0, style=solid];
m10_67 -> m10_39  [key=2, style=dotted];
m10_68 -> m10_69  [key=0, style=solid];
m10_68 -> m10_59  [key=2, style=dotted];
m10_69 -> m10_70  [key=0, style=solid];
m10_69 -> m10_60  [key=2, style=dotted];
m10_69 -> m10_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_70 -> m10_66  [key=0, style=bold, color=blue];
m10_48 -> m10_49  [key=0, style=solid];
m10_49 -> m10_50  [key=0, style=solid];
m10_49 -> m10_39  [key=2, style=dotted];
m10_49 -> m10_51  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_49 -> m10_52  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_50 -> m10_51  [key=0, style=solid];
m10_50 -> m10_8  [key=2, style=dotted];
m10_50 -> m10_52  [key=1, style=dashed, color=darkseagreen4, label=newState];
m10_51 -> m10_52  [key=0, style=solid];
m10_51 -> m10_42  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ApplyState"];
m10_52 -> m10_53  [key=0, style=solid];
m10_52 -> m10_40  [key=2, style=dotted];
m10_53 -> m10_48  [key=0, style=bold, color=blue];
m10_41 -> m10_42  [key=0, style=solid];
m10_42 -> m10_43  [key=0, style=solid];
m10_42 -> m10_39  [key=2, style=dotted];
m10_42 -> m10_46  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_43 -> m10_44  [key=0, style=solid];
m10_43 -> m10_18  [key=2, style=dotted];
m10_43 -> m10_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_44 -> m10_41  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_6  [key=2, style=dotted];
m10_1 -> m10_10  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_7  [key=2, style=dotted];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_8  [key=2, style=dotted];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_9  [key=2, style=dotted];
m10_5 -> m10_0  [key=0, style=bold, color=blue];
m10_93 -> m10_94  [key=0, style=solid];
m10_10 -> m10_11  [key=0, style=solid];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> m10_13  [key=2, style=dotted];
m10_12 -> m10_10  [key=0, style=bold, color=blue];
m10_20 -> m10_21  [key=0, style=solid];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_23  [key=2, style=dotted];
m10_22 -> m10_20  [key=0, style=bold, color=blue];
m10_28 -> m10_29  [key=0, style=solid];
m10_29 -> m10_30  [key=0, style=solid];
m10_29 -> m10_23  [key=2, style=dotted];
m10_30 -> m10_28  [key=0, style=bold, color=blue];
m10_46 -> m10_47  [key=0, style=solid];
m10_45 -> m10_46  [key=0, style=solid];
m10_47 -> m10_45  [key=0, style=bold, color=blue];
m10_61 -> m10_62  [key=0, style=solid];
m10_62 -> m10_63  [key=0, style=solid];
m10_62 -> m10_64  [key=2, style=dotted];
m10_62 -> m10_65  [key=2, style=dotted];
m10_63 -> m10_61  [key=0, style=bold, color=blue];
m10_71 -> m10_72  [key=0, style=solid];
m10_72 -> m10_73  [key=0, style=solid];
m10_72 -> m10_64  [key=2, style=dotted];
m10_72 -> m10_65  [key=2, style=dotted];
m10_73 -> m10_71  [key=0, style=bold, color=blue];
m10_83 -> m10_84  [key=0, style=solid];
m10_84 -> m10_85  [key=0, style=solid];
m10_84 -> m10_86  [key=2, style=dotted];
m10_85 -> m10_83  [key=0, style=bold, color=blue];
m10_94 -> m10_95  [key=0, style=solid];
m10_94 -> m10_86  [key=2, style=dotted];
m10_95 -> m10_93  [key=0, style=bold, color=blue];
m10_54 -> m10_55  [key=0, style=solid];
m10_55 -> m10_56  [key=0, style=solid];
m10_55 -> m10_39  [key=2, style=dotted];
m10_56 -> m10_57  [key=0, style=solid];
m10_56 -> m10_59  [key=2, style=dotted];
m10_57 -> m10_58  [key=0, style=solid];
m10_57 -> m10_60  [key=2, style=dotted];
m10_57 -> m10_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_58 -> m10_54  [key=0, style=bold, color=blue];
m10_24 -> m10_25  [key=0, style=solid];
m10_25 -> m10_26  [key=0, style=solid];
m10_25 -> m10_18  [key=2, style=dotted];
m10_25 -> m10_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_26 -> m10_27  [key=0, style=solid];
m10_26 -> m10_19  [key=2, style=dotted];
m10_26 -> m10_51  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Apply"];
m10_27 -> m10_24  [key=0, style=bold, color=blue];
m10_31 -> m10_32  [key=0, style=solid];
m10_32 -> m10_33  [key=0, style=solid];
m10_32 -> m10_39  [key=2, style=dotted];
m10_32 -> m10_34  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_32 -> m10_35  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_32 -> m10_36  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_32 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_19  [key=2, style=dotted];
m10_34 -> m10_35  [key=0, style=solid];
m10_34 -> m10_19  [key=2, style=dotted];
m10_35 -> m10_36  [key=0, style=solid];
m10_35 -> m10_40  [key=2, style=dotted];
m10_36 -> m10_37  [key=0, style=solid];
m10_36 -> m10_19  [key=2, style=dotted];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_40  [key=2, style=dotted];
m10_38 -> m10_31  [key=0, style=bold, color=blue];
m10_14 -> m10_15  [key=0, style=solid];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_18  [key=2, style=dotted];
m10_15 -> m10_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_19  [key=2, style=dotted];
m10_17 -> m10_14  [key=0, style=bold, color=blue];
m10_39 -> m10_96  [key=0, style=solid];
m10_96 -> m10_97  [key=0, style=solid];
m10_96 -> m10_23  [key=2, style=dotted];
m10_97 -> m10_39  [key=0, style=bold, color=blue];
m10_98 -> m10_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m10_98 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m10_98 -> m10_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m10_98 -> m10_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m10_98 -> m10_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m10_98 -> m10_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m10_98 -> m10_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m10_98 -> m10_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m10_98 -> m10_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m10_98 -> m10_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m10_98 -> m10_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m10_98 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m10_98 -> m10_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m10_98 -> m10_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m10_98 -> m10_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m10_98 -> m10_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m10_98 -> m10_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m10_98 -> m10_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m10_98 -> m10_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m10_98 -> m10_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m10_98 -> m10_88  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m10_98 -> m10_89  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m10_98 -> m10_96  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m10_99 -> m10_46  [key=1, style=dashed, color=darkseagreen4, label=context];
m11_150 -> m11_151  [key=0, style=solid];
m11_152 -> m11_153  [key=0, style=solid];
m11_152 -> m11_157  [key=2, style=dotted];
m11_153 -> m11_84  [key=2, style=dotted];
m11_153 -> m11_154  [key=0, style=solid];
m11_154 -> m11_85  [key=2, style=dotted];
m11_154 -> m11_155  [key=0, style=solid];
m11_155 -> m11_86  [key=2, style=dotted];
m11_155 -> m11_156  [key=0, style=solid];
m11_155 -> m11_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_151 -> m11_152  [key=0, style=solid];
m11_151 -> m11_155  [key=1, style=dashed, color=darkseagreen4, label=time];
m11_151 -> m11_159  [key=1, style=dashed, color=darkseagreen4, label=time];
m11_156 -> m11_150  [key=0, style=bold, color=blue];
m11_161 -> m11_162  [key=0, style=solid];
m11_162 -> m11_18  [key=2, style=dotted];
m11_162 -> m11_19  [key=2, style=dotted];
m11_162 -> m11_25  [key=2, style=dotted];
m11_162 -> m11_163  [key=0, style=solid];
m11_162 -> m11_167  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_163 -> m11_84  [key=2, style=dotted];
m11_163 -> m11_164  [key=0, style=solid];
m11_163 -> m11_171  [key=1, style=dashed, color=darkseagreen4, label=scheduler];
m11_164 -> m11_165  [key=0, style=solid];
m11_164 -> m11_166  [key=2, style=dotted];
m11_164 -> m11_170  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_165 -> m11_161  [key=0, style=bold, color=blue];
m11_102 -> m11_103  [key=0, style=solid, color=green];
m11_103 -> m11_104  [key=0, style=solid, color=green];
m11_103 -> m11_84  [key=2, style=dotted, color=green];
m11_104 -> m11_105  [key=0, style=solid, color=green];
m11_104 -> m11_85  [key=2, style=dotted, color=green];
m11_105 -> m11_106  [key=0, style=solid, color=green];
m11_105 -> m11_50  [key=2, style=dotted, color=green];
m11_105 -> m11_111  [key=1, style=dashed, color=green, label=jobKey];
m11_105 -> m11_107  [key=1, style=dashed, color=green, label=jobKey];
m11_105 -> m11_119  [key=1, style=dashed, color=green, label=jobKey];
m11_105 -> m11_108  [key=1, style=dashed, color=green, label=jobKey];
m11_105 -> m11_126  [key=1, style=dashed, color=green, label=jobKey];
m11_106 -> m11_107  [key=0, style=solid, color=green];
m11_106 -> m11_86  [key=2, style=dotted, color=green];
m11_106 -> m11_110  [key=1, style=dashed, color=green, label="lambda expression"];
m11_107 -> m11_108  [key=0, style=solid, color=green];
m11_107 -> m11_86  [key=2, style=dotted, color=green];
m11_107 -> m11_118  [key=1, style=dashed, color=green, label="lambda expression"];
m11_108 -> m11_109  [key=0, style=solid, color=green];
m11_108 -> m11_86  [key=2, style=dotted, color=green];
m11_108 -> m11_125  [key=1, style=dashed, color=green, label="lambda expression"];
m11_109 -> m11_102  [key=0, style=bold, color=blue];
m11_131 -> m11_132  [key=0, style=solid];
m11_132 -> m11_18  [key=2, style=dotted];
m11_132 -> m11_19  [key=2, style=dotted];
m11_132 -> m11_133  [key=0, style=solid];
m11_132 -> m11_138  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_133 -> m11_84  [key=2, style=dotted];
m11_133 -> m11_134  [key=0, style=solid];
m11_134 -> m11_85  [key=2, style=dotted];
m11_134 -> m11_135  [key=0, style=solid];
m11_135 -> m11_86  [key=2, style=dotted];
m11_135 -> m11_136  [key=0, style=solid];
m11_135 -> m11_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_136 -> m11_86  [key=2, style=dotted];
m11_136 -> m11_137  [key=0, style=solid];
m11_136 -> m11_144  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_137 -> m11_131  [key=0, style=bold, color=blue];
m11_65 -> m11_66  [key=0, style=solid, color=green];
m11_66 -> m11_67  [key=0, style=solid, color=green];
m11_66 -> m11_30  [key=2, style=dotted, color=green];
m11_66 -> m11_69  [key=1, style=dashed, color=green, label="lambda expression"];
m11_67 -> m11_68  [key=0, style=solid, color=green];
m11_67 -> m11_60  [key=2, style=dotted, color=green];
m11_68 -> m11_65  [key=0, style=bold, color=blue];
m11_84 -> m11_226  [key=0, style=solid];
m11_226 -> m11_64  [key=2, style=dotted];
m11_226 -> m11_227  [key=0, style=solid];
m11_227 -> m11_84  [key=0, style=bold, color=blue];
m11_201 -> m11_202  [key=0, style=solid];
m11_202 -> m11_203  [key=0, style=solid];
m11_202 -> m11_209  [key=1, style=dashed, color=darkseagreen4, label="System.TimeZoneInfo"];
m11_203 -> m11_204  [key=0, style=solid];
m11_203 -> m11_207  [key=2, style=dotted];
m11_204 -> m11_84  [key=2, style=dotted];
m11_204 -> m11_205  [key=0, style=solid];
m11_204 -> m11_215  [key=1, style=dashed, color=darkseagreen4, label=scheduler];
m11_205 -> m11_206  [key=0, style=solid];
m11_205 -> m11_166  [key=2, style=dotted];
m11_205 -> m11_214  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_206 -> m11_201  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid, color=green];
m11_1 -> m11_2  [key=0, style=solid, color=green];
m11_1 -> m11_15  [key=2, style=dotted, color=green];
m11_2 -> m11_3  [key=0, style=solid, color=green];
m11_2 -> m11_16  [key=2, style=dotted, color=green];
m11_3 -> m11_4  [key=0, style=solid, color=green];
m11_3 -> m11_17  [key=2, style=dotted, color=green];
m11_4 -> m11_5  [key=0, style=solid, color=green];
m11_4 -> m11_18  [key=2, style=dotted, color=green];
m11_4 -> m11_19  [key=2, style=dotted, color=green];
m11_4 -> m11_27  [key=1, style=dashed, color=green, label="lambda expression"];
m11_5 -> m11_6  [key=0, style=solid, color=green];
m11_5 -> m11_7  [key=1, style=dashed, color=green, label=timeZone1];
m11_6 -> m11_7  [key=0, style=solid, color=green];
m11_7 -> m11_8  [key=0, style=solid, color=green];
m11_7 -> m11_20  [key=2, style=dotted, color=green];
m11_7 -> m11_21  [key=2, style=dotted, color=green];
m11_7 -> m11_22  [key=2, style=dotted, color=green];
m11_7 -> m11_23  [key=2, style=dotted, color=green];
m11_7 -> m11_35  [key=1, style=dashed, color=green, label="lambda expression"];
m11_8 -> m11_9  [key=0, style=solid, color=green];
m11_8 -> m11_24  [key=2, style=dotted, color=green];
m11_9 -> m11_10  [key=0, style=solid, color=green];
m11_9 -> m11_18  [key=2, style=dotted, color=green];
m11_9 -> m11_19  [key=2, style=dotted, color=green];
m11_9 -> m11_39  [key=1, style=dashed, color=green, label="lambda expression"];
m11_10 -> m11_11  [key=0, style=solid, color=green];
m11_10 -> m11_18  [key=2, style=dotted, color=green];
m11_10 -> m11_25  [key=2, style=dotted, color=green];
m11_10 -> m11_19  [key=2, style=dotted, color=green];
m11_10 -> m11_43  [key=1, style=dashed, color=green, label="lambda expression"];
m11_11 -> m11_12  [key=0, style=solid, color=green];
m11_11 -> m11_18  [key=2, style=dotted, color=green];
m11_11 -> m11_19  [key=2, style=dotted, color=green];
m11_11 -> m11_47  [key=1, style=dashed, color=green, label="lambda expression"];
m11_12 -> m11_13  [key=0, style=solid, color=green];
m11_12 -> m11_26  [key=2, style=dotted, color=green];
m11_13 -> m11_14  [key=0, style=solid, color=green];
m11_13 -> m11_18  [key=2, style=dotted, color=green];
m11_13 -> m11_19  [key=2, style=dotted, color=green];
m11_13 -> m11_52  [key=1, style=dashed, color=green, label="lambda expression"];
m11_14 -> m11_0  [key=0, style=bold, color=blue];
m11_90 -> m11_91  [key=0, style=solid, color=green];
m11_91 -> m11_92  [key=0, style=solid, color=green];
m11_92 -> m11_93  [key=0, style=solid, color=green];
m11_92 -> m11_84  [key=2, style=dotted, color=green];
m11_93 -> m11_94  [key=0, style=solid, color=green];
m11_93 -> m11_85  [key=2, style=dotted, color=green];
m11_94 -> m11_95  [key=0, style=solid, color=green];
m11_94 -> m11_86  [key=2, style=dotted, color=green];
m11_94 -> m11_96  [key=1, style=dashed, color=green, label="lambda expression"];
m11_95 -> m11_90  [key=0, style=bold, color=blue];
m11_217 -> m11_218  [key=0, style=solid];
m11_218 -> m11_219  [key=0, style=solid];
m11_219 -> m11_84  [key=2, style=dotted];
m11_219 -> m11_220  [key=0, style=solid];
m11_220 -> m11_85  [key=2, style=dotted];
m11_220 -> m11_221  [key=0, style=solid];
m11_221 -> m11_86  [key=2, style=dotted];
m11_221 -> m11_222  [key=0, style=solid];
m11_221 -> m11_223  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_222 -> m11_217  [key=0, style=bold, color=blue];
m11_79 -> m11_80  [key=0, style=solid, color=green];
m11_80 -> m11_81  [key=0, style=solid, color=green];
m11_80 -> m11_84  [key=2, style=dotted, color=green];
m11_81 -> m11_82  [key=0, style=solid, color=green];
m11_81 -> m11_85  [key=2, style=dotted, color=green];
m11_82 -> m11_83  [key=0, style=solid, color=green];
m11_82 -> m11_86  [key=2, style=dotted, color=green];
m11_82 -> m11_87  [key=1, style=dashed, color=green, label="lambda expression"];
m11_83 -> m11_79  [key=0, style=bold, color=blue];
m11_182 -> m11_183  [key=0, style=solid];
m11_184 -> m11_185  [key=0, style=solid];
m11_184 -> m11_193  [key=1, style=dashed, color=darkseagreen4, label="System.TimeZoneInfo"];
m11_186 -> m11_187  [key=0, style=solid];
m11_187 -> m11_84  [key=2, style=dotted];
m11_187 -> m11_188  [key=0, style=solid];
m11_187 -> m11_199  [key=1, style=dashed, color=darkseagreen4, label=scheduler];
m11_188 -> m11_189  [key=0, style=solid];
m11_188 -> m11_166  [key=2, style=dotted];
m11_188 -> m11_198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_183 -> m11_184  [key=0, style=solid];
m11_183 -> m11_190  [key=2, style=dotted];
m11_183 -> m11_193  [key=1, style=dashed, color=darkseagreen4, label=timeZoneId];
m11_183 -> m11_185  [key=1, style=dashed, color=darkseagreen4, label=timeZoneId];
m11_185 -> m11_186  [key=0, style=solid];
m11_185 -> m11_191  [key=2, style=dotted];
m11_189 -> m11_182  [key=0, style=bold, color=blue];
m11_208 -> m11_209  [key=0, style=solid];
m11_27 -> m11_28  [key=0, style=solid, color=green];
m11_35 -> m11_36  [key=0, style=solid, color=green];
m11_39 -> m11_40  [key=0, style=solid, color=green];
m11_43 -> m11_44  [key=0, style=solid, color=green];
m11_47 -> m11_48  [key=0, style=solid, color=green];
m11_52 -> m11_53  [key=0, style=solid, color=green];
m11_28 -> m11_29  [key=0, style=solid, color=green];
m11_28 -> m11_30  [key=2, style=dotted, color=green];
m11_28 -> m11_31  [key=2, style=dotted, color=green];
m11_29 -> m11_27  [key=0, style=bold, color=blue];
m11_33 -> m11_34  [key=0, style=solid, color=green];
m11_32 -> m11_33  [key=0, style=solid, color=green];
m11_34 -> m11_32  [key=0, style=bold, color=blue];
m11_36 -> m11_37  [key=0, style=solid, color=green];
m11_36 -> m11_38  [key=2, style=dotted, color=green];
m11_37 -> m11_35  [key=0, style=bold, color=blue];
m11_40 -> m11_41  [key=0, style=solid, color=green];
m11_40 -> m11_42  [key=2, style=dotted, color=green];
m11_41 -> m11_39  [key=0, style=bold, color=blue];
m11_44 -> m11_45  [key=0, style=solid, color=green];
m11_44 -> m11_46  [key=2, style=dotted, color=green];
m11_45 -> m11_43  [key=0, style=bold, color=blue];
m11_48 -> m11_49  [key=0, style=solid, color=green];
m11_48 -> m11_50  [key=2, style=dotted, color=green];
m11_48 -> m11_51  [key=2, style=dotted, color=green];
m11_49 -> m11_47  [key=0, style=bold, color=blue];
m11_53 -> m11_54  [key=0, style=solid, color=green];
m11_53 -> m11_30  [key=2, style=dotted, color=green];
m11_53 -> m11_55  [key=2, style=dotted, color=green];
m11_54 -> m11_52  [key=0, style=bold, color=blue];
m11_61 -> m11_62  [key=0, style=solid, color=green];
m11_62 -> m11_63  [key=0, style=solid, color=green];
m11_62 -> m11_64  [key=2, style=dotted, color=green];
m11_63 -> m11_61  [key=0, style=bold, color=blue];
m11_69 -> m11_70  [key=0, style=solid, color=green];
m11_70 -> m11_71  [key=0, style=solid, color=green];
m11_70 -> m11_64  [key=2, style=dotted, color=green];
m11_71 -> m11_69  [key=0, style=bold, color=blue];
m11_76 -> m11_77  [key=0, style=solid, color=green];
m11_77 -> m11_78  [key=0, style=solid, color=green];
m11_77 -> m11_64  [key=2, style=dotted, color=green];
m11_78 -> m11_76  [key=0, style=bold, color=blue];
m11_87 -> m11_88  [key=0, style=solid, color=green];
m11_88 -> m11_89  [key=0, style=solid, color=green];
m11_88 -> m11_30  [key=2, style=dotted, color=green];
m11_88 -> m11_55  [key=2, style=dotted, color=green];
m11_89 -> m11_87  [key=0, style=bold, color=blue];
m11_96 -> m11_97  [key=0, style=solid, color=green];
m11_97 -> m11_98  [key=0, style=solid, color=green];
m11_97 -> m11_30  [key=2, style=dotted, color=green];
m11_97 -> m11_55  [key=2, style=dotted, color=green];
m11_97 -> m11_99  [key=1, style=dashed, color=green, label="lambda expression"];
m11_98 -> m11_96  [key=0, style=bold, color=blue];
m11_99 -> m11_100  [key=0, style=solid, color=green];
m11_100 -> m11_101  [key=0, style=solid, color=green];
m11_101 -> m11_99  [key=0, style=bold, color=blue];
m11_111 -> m11_112  [key=0, style=solid, color=green];
m11_111 -> m11_30  [key=2, style=dotted, color=green];
m11_111 -> m11_113  [key=2, style=dotted, color=green];
m11_111 -> m11_114  [key=1, style=dashed, color=green, label="lambda expression"];
m11_119 -> m11_120  [key=0, style=solid, color=green];
m11_119 -> m11_30  [key=2, style=dotted, color=green];
m11_119 -> m11_113  [key=2, style=dotted, color=green];
m11_119 -> m11_121  [key=1, style=dashed, color=green, label="lambda expression"];
m11_126 -> m11_127  [key=0, style=solid, color=green];
m11_126 -> m11_30  [key=2, style=dotted, color=green];
m11_126 -> m11_113  [key=2, style=dotted, color=green];
m11_126 -> m11_128  [key=1, style=dashed, color=green, label="lambda expression"];
m11_110 -> m11_111  [key=0, style=solid, color=green];
m11_112 -> m11_110  [key=0, style=bold, color=blue];
m11_114 -> m11_115  [key=0, style=solid, color=green];
m11_118 -> m11_119  [key=0, style=solid, color=green];
m11_120 -> m11_118  [key=0, style=bold, color=blue];
m11_121 -> m11_122  [key=0, style=solid, color=green];
m11_125 -> m11_126  [key=0, style=solid, color=green];
m11_127 -> m11_125  [key=0, style=bold, color=blue];
m11_128 -> m11_129  [key=0, style=solid, color=green];
m11_115 -> m11_116  [key=0, style=solid, color=green];
m11_115 -> m11_117  [key=2, style=dotted, color=green];
m11_116 -> m11_114  [key=0, style=bold, color=blue];
m11_122 -> m11_123  [key=0, style=solid, color=green];
m11_122 -> m11_117  [key=2, style=dotted, color=green];
m11_122 -> m11_124  [key=2, style=dotted, color=green];
m11_123 -> m11_121  [key=0, style=bold, color=blue];
m11_129 -> m11_130  [key=0, style=solid, color=green];
m11_129 -> m11_117  [key=2, style=dotted, color=green];
m11_129 -> m11_124  [key=2, style=dotted, color=green];
m11_130 -> m11_128  [key=0, style=bold, color=blue];
m11_145 -> m11_30  [key=2, style=dotted];
m11_145 -> m11_50  [key=2, style=dotted];
m11_145 -> m11_113  [key=2, style=dotted];
m11_145 -> m11_146  [key=0, style=solid];
m11_145 -> m11_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_148 -> m11_117  [key=2, style=dotted];
m11_148 -> m11_124  [key=2, style=dotted];
m11_148 -> m11_149  [key=0, style=solid];
m11_171 -> m11_85  [key=2, style=dotted];
m11_171 -> m11_172  [key=0, style=solid];
m11_180 -> m11_85  [key=2, style=dotted];
m11_180 -> m11_181  [key=0, style=solid];
m11_195 -> m11_196  [key=0, style=solid];
m11_199 -> m11_85  [key=2, style=dotted];
m11_199 -> m11_200  [key=0, style=solid];
m11_211 -> m11_212  [key=0, style=solid];
m11_215 -> m11_85  [key=2, style=dotted];
m11_215 -> m11_216  [key=0, style=solid];
m11_139 -> m11_30  [key=2, style=dotted];
m11_139 -> m11_31  [key=2, style=dotted];
m11_139 -> m11_140  [key=0, style=solid];
m11_142 -> m11_30  [key=2, style=dotted];
m11_142 -> m11_55  [key=2, style=dotted];
m11_142 -> m11_143  [key=0, style=solid];
m11_168 -> m11_30  [key=2, style=dotted];
m11_168 -> m11_46  [key=2, style=dotted];
m11_168 -> m11_169  [key=0, style=solid];
m11_224 -> m11_30  [key=2, style=dotted];
m11_224 -> m11_55  [key=2, style=dotted];
m11_224 -> m11_225  [key=0, style=solid];
m11_159 -> m11_31  [key=2, style=dotted];
m11_159 -> m11_160  [key=0, style=solid];
m11_138 -> m11_139  [key=0, style=solid];
m11_141 -> m11_142  [key=0, style=solid];
m11_144 -> m11_145  [key=0, style=solid];
m11_146 -> m11_144  [key=0, style=bold, color=blue];
m11_147 -> m11_148  [key=0, style=solid];
m11_149 -> m11_147  [key=0, style=bold, color=blue];
m11_158 -> m11_159  [key=0, style=solid];
m11_167 -> m11_168  [key=0, style=solid];
m11_170 -> m11_171  [key=0, style=solid];
m11_172 -> m11_170  [key=0, style=bold, color=blue];
m11_179 -> m11_180  [key=0, style=solid];
m11_181 -> m11_179  [key=0, style=bold, color=blue];
m11_193 -> m11_195  [key=0, style=solid];
m11_193 -> m11_194  [key=0, style=solid];
m11_196 -> m11_192  [key=0, style=bold, color=blue];
m11_198 -> m11_199  [key=0, style=solid];
m11_200 -> m11_198  [key=0, style=bold, color=blue];
m11_209 -> m11_211  [key=0, style=solid];
m11_209 -> m11_210  [key=0, style=solid];
m11_209 -> m11_213  [key=2, style=dotted];
m11_212 -> m11_208  [key=0, style=bold, color=blue];
m11_214 -> m11_215  [key=0, style=solid];
m11_216 -> m11_214  [key=0, style=bold, color=blue];
m11_223 -> m11_224  [key=0, style=solid];
m11_140 -> m11_138  [key=0, style=bold, color=blue];
m11_143 -> m11_141  [key=0, style=bold, color=blue];
m11_169 -> m11_167  [key=0, style=bold, color=blue];
m11_225 -> m11_223  [key=0, style=bold, color=blue];
m11_192 -> m11_193  [key=0, style=solid];
m11_194 -> m11_196  [key=0, style=solid];
m11_194 -> m11_197  [key=2, style=dotted];
m11_210 -> m11_212  [key=0, style=solid];
m11_210 -> m11_197  [key=2, style=dotted];
m11_160 -> m11_158  [key=0, style=bold, color=blue];
m11_56 -> m11_57  [key=0, style=solid, color=green];
m11_57 -> m11_58  [key=0, style=solid, color=green];
m11_57 -> m11_30  [key=2, style=dotted, color=green];
m11_57 -> m11_61  [key=1, style=dashed, color=green, label="lambda expression"];
m11_58 -> m11_59  [key=0, style=solid, color=green];
m11_58 -> m11_60  [key=2, style=dotted, color=green];
m11_59 -> m11_56  [key=0, style=bold, color=blue];
m11_72 -> m11_73  [key=0, style=solid, color=green];
m11_73 -> m11_74  [key=0, style=solid, color=green];
m11_73 -> m11_30  [key=2, style=dotted, color=green];
m11_73 -> m11_76  [key=1, style=dashed, color=green, label="lambda expression"];
m11_74 -> m11_75  [key=0, style=solid, color=green];
m11_74 -> m11_60  [key=2, style=dotted, color=green];
m11_75 -> m11_72  [key=0, style=bold, color=blue];
m11_173 -> m11_174  [key=0, style=solid];
m11_174 -> m11_23  [key=2, style=dotted];
m11_174 -> m11_175  [key=0, style=solid];
m11_174 -> m11_178  [key=2, style=dotted];
m11_175 -> m11_84  [key=2, style=dotted];
m11_175 -> m11_176  [key=0, style=solid];
m11_175 -> m11_180  [key=1, style=dashed, color=darkseagreen4, label=scheduler];
m11_176 -> m11_177  [key=0, style=solid];
m11_176 -> m11_166  [key=2, style=dotted];
m11_176 -> m11_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_177 -> m11_173  [key=0, style=bold, color=blue];
m11_228 -> m11_1  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_2  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_3  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_4  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_6  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_7  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_8  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_9  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_10  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_11  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_12  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_13  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_33  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_57  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_62  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_66  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_70  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_73  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_77  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_80  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_81  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_82  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_91  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_92  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_93  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_94  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_103  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_104  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_106  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_107  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_119  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_108  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_126  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_122  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_129  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_132  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_133  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_134  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_135  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_136  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_145  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_148  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_152  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_153  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_154  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_155  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_162  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_163  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_164  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_171  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_174  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_175  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_176  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_180  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_184  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_195  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_186  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_187  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_188  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_199  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_202  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_211  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_203  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_204  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_205  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_215  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_218  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_219  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_220  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_221  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_228 -> m11_226  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts"];
m11_229 -> m11_111  [key=1, style=dashed, color=green, label=jobKey];
m11_229 -> m11_119  [key=1, style=dashed, color=green, label=jobKey];
m11_229 -> m11_126  [key=1, style=dashed, color=green, label=jobKey];
m11_231 -> m11_171  [key=1, style=dashed, color=darkseagreen4, label=scheduler];
m11_232 -> m11_180  [key=1, style=dashed, color=darkseagreen4, label=scheduler];
m11_234 -> m11_199  [key=1, style=dashed, color=darkseagreen4, label=scheduler];
m11_235 -> m11_215  [key=1, style=dashed, color=darkseagreen4, label=scheduler];
m11_230 -> m11_159  [key=1, style=dashed, color=darkseagreen4, label=time];
m11_233 -> m11_193  [key=1, style=dashed, color=darkseagreen4, label=timeZoneId];
m13_13 -> m13_26  [key=0, style=solid];
m13_13 -> m13_27  [key=2, style=dotted];
m13_27 -> m13_25  [key=0, style=bold, color=blue];
m13_43 -> m13_44  [key=0, style=solid];
m13_44 -> m13_45  [key=0, style=solid];
m13_44 -> m13_46  [key=2, style=dotted];
m13_45 -> m13_43  [key=0, style=bold, color=blue];
m13_67 -> m13_68  [key=0, style=solid];
m13_67 -> m13_71  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
m13_68 -> m13_69  [key=0, style=solid];
m13_68 -> m13_71  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IDictionary<string, object>, System.Func<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>, System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>>>"];
m13_69 -> m13_67  [key=0, style=bold, color=blue];
m13_34 -> m13_35  [key=0, style=solid];
m13_35 -> m13_36  [key=0, style=solid];
m13_35 -> m13_37  [key=2, style=dotted];
m13_36 -> m13_34  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_3  [key=2, style=dotted];
m13_1 -> m13_4  [key=2, style=dotted];
m13_2 -> m13_0  [key=0, style=bold, color=blue];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_6  [key=2, style=dotted];
m13_4 -> m13_7  [key=2, style=dotted];
m13_7 -> m13_5  [key=0, style=bold, color=blue];
m13_18 -> m13_19  [key=0, style=solid];
m13_18 -> m13_30  [key=2, style=dotted];
m13_18 -> m13_21  [key=1, style=dashed, color=darkseagreen4, label=context];
m13_19 -> m13_20  [key=0, style=solid];
m13_19 -> m13_31  [key=2, style=dotted];
m13_19 -> m13_22  [key=1, style=dashed, color=darkseagreen4, label=token];
m13_19 -> m13_24  [key=1, style=dashed, color=darkseagreen4, label=token];
m13_20 -> m13_21  [key=0, style=solid, color=green];
m13_20 -> m13_23  [key=1, style=dashed, color=green, label=IRedisTransaction];
m13_20 -> m13_26  [key=1, style=dashed, color=green, label=string];
m13_20 -> m13_22  [key=0, style=solid];
m13_21 -> m13_22  [key=0, style=solid, color=green];
m13_21 -> m13_23  [key=0, style=solid, color=green];
m13_21 -> m13_31  [key=2, style=dotted];
m13_21 -> m13_24  [key=1, style=dashed, color=darkseagreen4, label=token];
m13_22 -> m13_24  [key=0, style=solid, color=green];
m13_22 -> m13_13  [key=2, style=dotted, color=green];
m13_22 -> m13_23  [key=0, style=solid];
m13_23 -> m13_24  [key=0, style=solid, color=green];
m13_23 -> m13_14  [key=2, style=dotted, color=green];
m13_23 -> m13_25  [key=1, style=dashed, color=green, label="lambda expression"];
m13_23 -> m13_26  [key=0, style=solid];
m13_23 -> m13_32  [key=2, style=dotted];
m13_24 -> m13_20  [key=0, style=bold, color=blue];
m13_24 -> m13_25  [key=0, style=solid];
m13_24 -> m13_33  [key=2, style=dotted];
m13_29 -> m13_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ProcessingState"];
m13_29 -> m13_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ProcessingState"];
m13_29 -> m13_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ProcessingState"];
m13_29 -> m13_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ProcessingState"];
m13_6 -> m13_7  [key=0, style=solid];
m13_6 -> m13_8  [key=2, style=dotted];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServerOptions"];
m13_9 -> m13_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m13_9 -> m13_18  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
m13_9 -> m13_25  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
m13_9 -> m13_11  [key=0, style=solid];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> m13_12  [key=0, style=solid];
m13_10 -> m13_13  [key=2, style=dotted];
m13_12 -> m13_13  [key=0, style=solid];
m13_12 -> m13_14  [key=0, style=solid];
m13_12 -> m13_8  [key=0, style=bold, color=blue];
m13_14 -> m13_15  [key=0, style=solid];
m13_14 -> m13_16  [key=0, style=solid];
m13_25 -> m13_26  [key=0, style=solid, color=green];
m13_11 -> m13_26  [key=0, style=solid];
m13_11 -> m13_27  [key=2, style=dotted];
m13_11 -> m13_14  [key=2, style=dotted];
m13_11 -> m13_12  [key=0, style=solid];
m13_11 -> m13_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_15 -> m13_26  [key=0, style=solid];
m13_15 -> m13_27  [key=2, style=dotted];
m13_15 -> m13_16  [key=0, style=solid];
m13_16 -> m13_17  [key=0, style=solid];
m13_16 -> m13_28  [key=2, style=dotted];
m13_16 -> m13_24  [key=1, style=dashed, color=darkseagreen4, label=server];
m13_16 -> m13_18  [key=2, style=dotted];
m13_16 -> m13_19  [key=2, style=dotted];
m13_17 -> m13_18  [key=0, style=solid];
m13_17 -> m13_29  [key=2, style=dotted];
m13_17 -> m13_15  [key=0, style=bold, color=blue];
m13_26 -> m13_9  [key=0, style=bold, color=blue];
m13_26 -> m13_27  [key=0, style=solid, color=green];
m13_26 -> m13_28  [key=2, style=dotted, color=green];
m13_3 -> m13_4  [key=0, style=solid];
m13_63 -> m13_64  [key=0, style=solid];
m13_63 -> m13_65  [key=2, style=dotted];
m13_63 -> m13_66  [key=2, style=dotted];
m13_62 -> m13_63  [key=0, style=solid];
m13_64 -> m13_62  [key=0, style=bold, color=blue];
m13_71 -> m13_72  [key=0, style=solid];
m13_71 -> m13_73  [key=2, style=dotted];
m13_71 -> m13_74  [key=2, style=dotted];
m13_70 -> m13_71  [key=0, style=solid];
m13_72 -> m13_70  [key=0, style=bold, color=blue];
m13_47 -> m13_48  [key=0, style=solid];
m13_47 -> m13_50  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_47 -> m13_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.DashboardOptions"];
m13_47 -> m13_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m13_47 -> m13_56  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
m13_47 -> m13_57  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
m13_47 -> m13_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.DashboardOptions"];
m13_47 -> m13_58  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
m13_48 -> m13_49  [key=0, style=solid];
m13_48 -> m13_50  [key=0, style=solid];
m13_50 -> m13_51  [key=0, style=solid];
m13_50 -> m13_52  [key=0, style=solid];
m13_52 -> m13_53  [key=0, style=solid];
m13_52 -> m13_54  [key=0, style=solid];
m13_54 -> m13_55  [key=0, style=solid];
m13_54 -> m13_56  [key=0, style=solid];
m13_56 -> m13_57  [key=0, style=solid];
m13_56 -> m13_60  [key=2, style=dotted];
m13_57 -> m13_58  [key=0, style=solid];
m13_57 -> m13_61  [key=2, style=dotted];
m13_57 -> m13_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_58 -> m13_59  [key=0, style=solid];
m13_49 -> m13_59  [key=0, style=solid];
m13_49 -> m13_27  [key=2, style=dotted];
m13_51 -> m13_59  [key=0, style=solid];
m13_51 -> m13_27  [key=2, style=dotted];
m13_53 -> m13_59  [key=0, style=solid];
m13_53 -> m13_27  [key=2, style=dotted];
m13_55 -> m13_59  [key=0, style=solid];
m13_55 -> m13_27  [key=2, style=dotted];
m13_59 -> m13_47  [key=0, style=bold, color=blue];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_3  [key=0, style=bold, color=blue];
m13_8 -> m13_11  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m13_8 -> m13_9  [key=0, style=solid];
m13_38 -> m13_39  [key=0, style=solid];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_41  [key=2, style=dotted];
m13_39 -> m13_42  [key=2, style=dotted];
m13_40 -> m13_38  [key=0, style=bold, color=blue];
m13_30 -> m13_26  [key=1, style=dashed, color=green, label=string];
m13_75 -> m13_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.DashboardOptions"];
m13_76 -> m13_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m13_77 -> m13_71  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
m14_7 -> m14_8  [key=0, style=solid, color=red];
m14_8 -> m14_9  [key=0, style=solid, color=red];
m14_8 -> m14_10  [key=2, style=dotted, color=red];
m14_9 -> m14_7  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid, color=red];
m14_0 -> m14_3  [key=1, style=dashed, color=red, label=IRedisTransaction];
m14_0 -> m14_8  [key=1, style=dashed, color=red, label=string];
m14_1 -> m14_2  [key=0, style=solid, color=red];
m14_1 -> m14_3  [key=0, style=solid, color=red];
m14_3 -> m14_4  [key=0, style=solid, color=red];
m14_3 -> m14_6  [key=2, style=dotted, color=red];
m14_3 -> m14_7  [key=1, style=dashed, color=red, label="lambda expression"];
m14_2 -> m14_4  [key=0, style=solid, color=red];
m14_2 -> m14_5  [key=2, style=dotted, color=red];
m14_4 -> m14_0  [key=0, style=bold, color=blue];
m14_11 -> m14_8  [key=1, style=dashed, color=red, label=string];
m16_199 -> m16_236  [key=0, style=solid];
m16_236 -> m16_237  [key=0, style=solid];
m16_236 -> m16_238  [key=2, style=dotted];
m16_237 -> m16_199  [key=0, style=bold, color=blue];
m16_207 -> m16_208  [key=0, style=solid];
m16_208 -> m16_209  [key=0, style=solid];
m16_208 -> m16_38  [key=2, style=dotted];
m16_208 -> m16_213  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_209 -> m16_210  [key=0, style=solid];
m16_209 -> m16_24  [key=2, style=dotted];
m16_210 -> m16_211  [key=0, style=solid];
m16_210 -> m16_25  [key=2, style=dotted];
m16_211 -> m16_212  [key=0, style=solid];
m16_211 -> m16_11  [key=2, style=dotted];
m16_212 -> m16_207  [key=0, style=bold, color=blue];
m16_229 -> m16_230  [key=0, style=solid];
m16_230 -> m16_231  [key=0, style=solid];
m16_231 -> m16_229  [key=0, style=bold, color=blue];
m16_30 -> m16_242  [key=0, style=solid];
m16_242 -> m16_243  [key=0, style=solid];
m16_243 -> m16_30  [key=0, style=bold, color=blue];
m16_172 -> m16_224  [key=0, style=solid];
m16_224 -> m16_225  [key=0, style=solid];
m16_225 -> m16_172  [key=0, style=bold, color=blue];
m16_31 -> m16_32  [key=0, style=solid];
m16_32 -> m16_33  [key=0, style=solid];
m16_33 -> m16_34  [key=0, style=solid];
m16_33 -> m16_38  [key=2, style=dotted];
m16_33 -> m16_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_34 -> m16_35  [key=0, style=solid];
m16_34 -> m16_24  [key=2, style=dotted];
m16_35 -> m16_36  [key=0, style=solid];
m16_35 -> m16_25  [key=2, style=dotted];
m16_36 -> m16_37  [key=0, style=solid];
m16_36 -> m16_26  [key=2, style=dotted];
m16_37 -> m16_31  [key=0, style=bold, color=blue];
m16_16 -> m16_17  [key=0, style=solid];
m16_17 -> m16_18  [key=0, style=solid];
m16_18 -> m16_19  [key=0, style=solid];
m16_18 -> m16_23  [key=2, style=dotted];
m16_18 -> m16_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_19 -> m16_20  [key=0, style=solid];
m16_19 -> m16_24  [key=2, style=dotted];
m16_20 -> m16_21  [key=0, style=solid];
m16_20 -> m16_25  [key=2, style=dotted];
m16_21 -> m16_22  [key=0, style=solid];
m16_21 -> m16_26  [key=2, style=dotted];
m16_22 -> m16_16  [key=0, style=bold, color=blue];
m16_162 -> m16_163  [key=0, style=solid];
m16_163 -> m16_164  [key=0, style=solid];
m16_164 -> m16_165  [key=0, style=solid];
m16_164 -> m16_38  [key=2, style=dotted];
m16_164 -> m16_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_165 -> m16_166  [key=0, style=solid];
m16_165 -> m16_24  [key=2, style=dotted];
m16_165 -> m16_174  [key=1, style=dashed, color=darkseagreen4, label=process];
m16_166 -> m16_167  [key=0, style=solid];
m16_166 -> m16_10  [key=2, style=dotted];
m16_166 -> m16_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_167 -> m16_168  [key=0, style=solid];
m16_167 -> m16_26  [key=2, style=dotted];
m16_168 -> m16_162  [key=0, style=bold, color=blue];
m16_176 -> m16_177  [key=0, style=solid];
m16_177 -> m16_178  [key=0, style=solid];
m16_177 -> m16_23  [key=2, style=dotted];
m16_177 -> m16_183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_178 -> m16_179  [key=0, style=solid];
m16_178 -> m16_24  [key=2, style=dotted];
m16_178 -> m16_188  [key=1, style=dashed, color=darkseagreen4, label=process];
m16_179 -> m16_180  [key=0, style=solid];
m16_179 -> m16_10  [key=2, style=dotted];
m16_179 -> m16_187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_179 -> m16_181  [key=1, style=dashed, color=darkseagreen4, label=thrownException];
m16_180 -> m16_181  [key=0, style=solid];
m16_180 -> m16_10  [key=2, style=dotted];
m16_181 -> m16_182  [key=0, style=solid];
m16_181 -> m16_11  [key=2, style=dotted];
m16_182 -> m16_176  [key=0, style=bold, color=blue];
m16_24 -> m16_251  [key=0, style=solid];
m16_251 -> m16_252  [key=0, style=solid];
m16_251 -> m16_253  [key=2, style=dotted];
m16_252 -> m16_24  [key=0, style=bold, color=blue];
m16_64 -> m16_244  [key=0, style=solid];
m16_64 -> m16_245  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_64 -> m16_246  [key=1, style=dashed, color=darkseagreen4, label=int];
m16_244 -> m16_245  [key=0, style=solid];
m16_245 -> m16_246  [key=0, style=solid];
m16_245 -> m16_11  [key=2, style=dotted];
m16_246 -> m16_247  [key=0, style=solid];
m16_246 -> m16_11  [key=2, style=dotted];
m16_247 -> m16_64  [key=0, style=bold, color=blue];
m16_190 -> m16_191  [key=0, style=solid];
m16_191 -> m16_192  [key=0, style=solid];
m16_191 -> m16_23  [key=2, style=dotted];
m16_191 -> m16_196  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_192 -> m16_193  [key=0, style=solid];
m16_192 -> m16_121  [key=2, style=dotted];
m16_192 -> m16_10  [key=2, style=dotted];
m16_192 -> m16_200  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_193 -> m16_194  [key=0, style=solid];
m16_193 -> m16_24  [key=2, style=dotted];
m16_193 -> m16_205  [key=1, style=dashed, color=darkseagreen4, label=process];
m16_194 -> m16_195  [key=0, style=solid];
m16_194 -> m16_10  [key=2, style=dotted];
m16_194 -> m16_204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_195 -> m16_190  [key=0, style=bold, color=blue];
m16_221 -> m16_222  [key=0, style=solid];
m16_222 -> m16_223  [key=0, style=solid];
m16_223 -> m16_221  [key=0, style=bold, color=blue];
m16_65 -> m16_66  [key=0, style=solid];
m16_66 -> m16_67  [key=0, style=solid];
m16_67 -> m16_68  [key=0, style=solid];
m16_67 -> m16_76  [key=2, style=dotted];
m16_68 -> m16_69  [key=0, style=solid];
m16_68 -> m16_77  [key=2, style=dotted];
m16_68 -> m16_71  [key=1, style=dashed, color=darkseagreen4, label=convertedDate];
m16_69 -> m16_70  [key=0, style=solid];
m16_69 -> m16_71  [key=1, style=dashed, color=darkseagreen4, label=type];
m16_71 -> m16_72  [key=0, style=solid];
m16_71 -> m16_79  [key=2, style=dotted];
m16_70 -> m16_71  [key=0, style=solid];
m16_70 -> m16_78  [key=2, style=dotted];
m16_72 -> m16_73  [key=0, style=solid];
m16_72 -> m16_24  [key=2, style=dotted];
m16_73 -> m16_74  [key=0, style=solid];
m16_73 -> m16_25  [key=2, style=dotted];
m16_74 -> m16_75  [key=0, style=solid];
m16_74 -> m16_26  [key=2, style=dotted];
m16_75 -> m16_65  [key=0, style=bold, color=blue];
m16_91 -> m16_92  [key=0, style=solid];
m16_92 -> m16_93  [key=0, style=solid];
m16_93 -> m16_94  [key=0, style=solid];
m16_93 -> m16_23  [key=2, style=dotted];
m16_93 -> m16_98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_94 -> m16_95  [key=0, style=solid];
m16_94 -> m16_24  [key=2, style=dotted];
m16_95 -> m16_96  [key=0, style=solid];
m16_95 -> m16_25  [key=2, style=dotted];
m16_96 -> m16_97  [key=0, style=solid];
m16_96 -> m16_26  [key=2, style=dotted];
m16_97 -> m16_91  [key=0, style=bold, color=blue];
m16_53 -> m16_219  [key=0, style=solid];
m16_219 -> m16_220  [key=0, style=solid];
m16_220 -> m16_53  [key=0, style=bold, color=blue];
m16_113 -> m16_114  [key=0, style=solid];
m16_114 -> m16_115  [key=0, style=solid];
m16_114 -> m16_120  [key=2, style=dotted];
m16_115 -> m16_116  [key=0, style=solid];
m16_115 -> m16_121  [key=2, style=dotted];
m16_115 -> m16_122  [key=2, style=dotted];
m16_115 -> m16_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_116 -> m16_117  [key=0, style=solid];
m16_116 -> m16_23  [key=2, style=dotted];
m16_116 -> m16_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_117 -> m16_118  [key=0, style=solid];
m16_117 -> m16_24  [key=2, style=dotted];
m16_117 -> m16_131  [key=1, style=dashed, color=darkseagreen4, label=process];
m16_118 -> m16_119  [key=0, style=solid];
m16_118 -> m16_10  [key=2, style=dotted];
m16_118 -> m16_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_119 -> m16_113  [key=0, style=bold, color=blue];
m16_54 -> m16_55  [key=0, style=solid];
m16_55 -> m16_56  [key=0, style=solid];
m16_56 -> m16_57  [key=0, style=solid];
m16_56 -> m16_23  [key=2, style=dotted];
m16_56 -> m16_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_57 -> m16_58  [key=0, style=solid];
m16_57 -> m16_24  [key=2, style=dotted];
m16_58 -> m16_59  [key=0, style=solid];
m16_58 -> m16_25  [key=2, style=dotted];
m16_59 -> m16_60  [key=0, style=solid];
m16_59 -> m16_26  [key=2, style=dotted];
m16_60 -> m16_54  [key=0, style=bold, color=blue];
m16_226 -> m16_227  [key=0, style=solid];
m16_227 -> m16_228  [key=0, style=solid];
m16_227 -> m16_120  [key=2, style=dotted];
m16_228 -> m16_226  [key=0, style=bold, color=blue];
m16_42 -> m16_217  [key=0, style=solid];
m16_217 -> m16_218  [key=0, style=solid];
m16_218 -> m16_42  [key=0, style=bold, color=blue];
m16_112 -> m16_232  [key=0, style=solid];
m16_112 -> m16_233  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m16_232 -> m16_233  [key=0, style=solid];
m16_233 -> m16_234  [key=0, style=solid];
m16_233 -> m16_235  [key=2, style=dotted];
m16_234 -> m16_112  [key=0, style=bold, color=blue];
m16_186 -> m16_248  [key=0, style=solid];
m16_248 -> m16_249  [key=0, style=solid];
m16_248 -> m16_250  [key=2, style=dotted];
m16_249 -> m16_186  [key=0, style=bold, color=blue];
m16_43 -> m16_44  [key=0, style=solid];
m16_44 -> m16_45  [key=0, style=solid];
m16_45 -> m16_46  [key=0, style=solid];
m16_45 -> m16_38  [key=2, style=dotted];
m16_45 -> m16_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_46 -> m16_47  [key=0, style=solid];
m16_46 -> m16_24  [key=2, style=dotted];
m16_47 -> m16_48  [key=0, style=solid];
m16_47 -> m16_25  [key=2, style=dotted];
m16_48 -> m16_49  [key=0, style=solid];
m16_48 -> m16_26  [key=2, style=dotted];
m16_49 -> m16_43  [key=0, style=bold, color=blue];
m16_133 -> m16_134  [key=0, style=solid];
m16_134 -> m16_135  [key=0, style=solid];
m16_134 -> m16_121  [key=2, style=dotted];
m16_134 -> m16_139  [key=2, style=dotted];
m16_134 -> m16_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_135 -> m16_136  [key=0, style=solid];
m16_135 -> m16_23  [key=2, style=dotted];
m16_135 -> m16_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_136 -> m16_137  [key=0, style=solid];
m16_136 -> m16_24  [key=2, style=dotted];
m16_136 -> m16_147  [key=1, style=dashed, color=darkseagreen4, label=process];
m16_137 -> m16_138  [key=0, style=solid];
m16_137 -> m16_10  [key=2, style=dotted];
m16_137 -> m16_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_138 -> m16_133  [key=0, style=bold, color=blue];
m16_102 -> m16_103  [key=0, style=solid];
m16_103 -> m16_104  [key=0, style=solid];
m16_104 -> m16_105  [key=0, style=solid];
m16_104 -> m16_23  [key=2, style=dotted];
m16_104 -> m16_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_105 -> m16_106  [key=0, style=solid];
m16_105 -> m16_24  [key=2, style=dotted];
m16_106 -> m16_107  [key=0, style=solid];
m16_106 -> m16_25  [key=2, style=dotted];
m16_107 -> m16_108  [key=0, style=solid];
m16_107 -> m16_26  [key=2, style=dotted];
m16_108 -> m16_102  [key=0, style=bold, color=blue];
m16_213 -> m16_214  [key=0, style=solid];
m16_12 -> m16_13  [key=0, style=solid];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_15  [key=2, style=dotted];
m16_14 -> m16_12  [key=0, style=bold, color=blue];
m16_27 -> m16_28  [key=0, style=solid];
m16_28 -> m16_29  [key=0, style=solid];
m16_28 -> m16_30  [key=2, style=dotted];
m16_29 -> m16_27  [key=0, style=bold, color=blue];
m16_39 -> m16_40  [key=0, style=solid];
m16_40 -> m16_41  [key=0, style=solid];
m16_40 -> m16_42  [key=2, style=dotted];
m16_41 -> m16_39  [key=0, style=bold, color=blue];
m16_50 -> m16_51  [key=0, style=solid];
m16_51 -> m16_52  [key=0, style=solid];
m16_51 -> m16_53  [key=2, style=dotted];
m16_52 -> m16_50  [key=0, style=bold, color=blue];
m16_61 -> m16_62  [key=0, style=solid];
m16_62 -> m16_63  [key=0, style=solid];
m16_62 -> m16_64  [key=2, style=dotted];
m16_63 -> m16_61  [key=0, style=bold, color=blue];
m16_98 -> m16_99  [key=0, style=solid];
m16_99 -> m16_100  [key=0, style=solid];
m16_99 -> m16_101  [key=2, style=dotted];
m16_100 -> m16_98  [key=0, style=bold, color=blue];
m16_109 -> m16_110  [key=0, style=solid];
m16_110 -> m16_111  [key=0, style=solid];
m16_110 -> m16_112  [key=2, style=dotted];
m16_111 -> m16_109  [key=0, style=bold, color=blue];
m16_123 -> m16_124  [key=0, style=solid];
m16_127 -> m16_128  [key=0, style=solid];
m16_131 -> m16_132  [key=0, style=solid];
m16_131 -> m16_25  [key=2, style=dotted];
m16_130 -> m16_131  [key=0, style=solid];
m16_124 -> m16_125  [key=0, style=solid];
m16_124 -> m16_10  [key=2, style=dotted];
m16_124 -> m16_126  [key=2, style=dotted];
m16_125 -> m16_123  [key=0, style=bold, color=blue];
m16_128 -> m16_129  [key=0, style=solid];
m16_128 -> m16_42  [key=2, style=dotted];
m16_129 -> m16_127  [key=0, style=bold, color=blue];
m16_132 -> m16_130  [key=0, style=bold, color=blue];
m16_140 -> m16_141  [key=0, style=solid];
m16_143 -> m16_144  [key=0, style=solid];
m16_147 -> m16_148  [key=0, style=solid];
m16_147 -> m16_25  [key=2, style=dotted];
m16_146 -> m16_147  [key=0, style=solid];
m16_141 -> m16_142  [key=0, style=solid];
m16_141 -> m16_10  [key=2, style=dotted];
m16_141 -> m16_126  [key=2, style=dotted];
m16_142 -> m16_140  [key=0, style=bold, color=blue];
m16_144 -> m16_145  [key=0, style=solid];
m16_144 -> m16_42  [key=2, style=dotted];
m16_145 -> m16_143  [key=0, style=bold, color=blue];
m16_148 -> m16_146  [key=0, style=bold, color=blue];
m16_160 -> m16_161  [key=0, style=solid];
m16_160 -> m16_25  [key=2, style=dotted];
m16_159 -> m16_160  [key=0, style=solid];
m16_161 -> m16_159  [key=0, style=bold, color=blue];
m16_169 -> m16_170  [key=0, style=solid];
m16_174 -> m16_175  [key=0, style=solid];
m16_174 -> m16_25  [key=2, style=dotted];
m16_173 -> m16_174  [key=0, style=solid];
m16_170 -> m16_171  [key=0, style=solid];
m16_170 -> m16_172  [key=2, style=dotted];
m16_171 -> m16_169  [key=0, style=bold, color=blue];
m16_175 -> m16_173  [key=0, style=bold, color=blue];
m16_183 -> m16_184  [key=0, style=solid];
m16_188 -> m16_189  [key=0, style=solid];
m16_188 -> m16_25  [key=2, style=dotted];
m16_187 -> m16_188  [key=0, style=solid];
m16_184 -> m16_185  [key=0, style=solid];
m16_184 -> m16_186  [key=2, style=dotted];
m16_185 -> m16_183  [key=0, style=bold, color=blue];
m16_189 -> m16_187  [key=0, style=bold, color=blue];
m16_196 -> m16_197  [key=0, style=solid];
m16_200 -> m16_201  [key=0, style=solid];
m16_205 -> m16_206  [key=0, style=solid];
m16_205 -> m16_25  [key=2, style=dotted];
m16_204 -> m16_205  [key=0, style=solid];
m16_197 -> m16_198  [key=0, style=solid];
m16_197 -> m16_199  [key=2, style=dotted];
m16_198 -> m16_196  [key=0, style=bold, color=blue];
m16_201 -> m16_202  [key=0, style=solid];
m16_201 -> m16_203  [key=2, style=dotted];
m16_202 -> m16_200  [key=0, style=bold, color=blue];
m16_206 -> m16_204  [key=0, style=bold, color=blue];
m16_214 -> m16_215  [key=0, style=solid];
m16_214 -> m16_216  [key=2, style=dotted];
m16_215 -> m16_213  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_4  [key=2, style=dotted];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_5  [key=2, style=dotted];
m16_3 -> m16_0  [key=0, style=bold, color=blue];
m16_6 -> m16_7  [key=0, style=solid];
m16_7 -> m16_8  [key=0, style=solid];
m16_7 -> m16_10  [key=2, style=dotted];
m16_7 -> m16_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_11  [key=2, style=dotted];
m16_9 -> m16_6  [key=0, style=bold, color=blue];
m16_149 -> m16_150  [key=0, style=solid];
m16_150 -> m16_151  [key=0, style=solid];
m16_150 -> m16_152  [key=1, style=dashed, color=darkseagreen4, label=type];
m16_151 -> m16_152  [key=0, style=solid];
m16_151 -> m16_78  [key=2, style=dotted];
m16_152 -> m16_153  [key=0, style=solid];
m16_152 -> m16_157  [key=2, style=dotted];
m16_153 -> m16_154  [key=0, style=solid];
m16_153 -> m16_24  [key=2, style=dotted];
m16_153 -> m16_160  [key=1, style=dashed, color=darkseagreen4, label=process];
m16_154 -> m16_155  [key=0, style=solid];
m16_154 -> m16_10  [key=2, style=dotted];
m16_154 -> m16_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_155 -> m16_156  [key=0, style=solid];
m16_155 -> m16_158  [key=2, style=dotted];
m16_156 -> m16_149  [key=0, style=bold, color=blue];
m16_80 -> m16_81  [key=0, style=solid];
m16_81 -> m16_82  [key=0, style=solid];
m16_82 -> m16_83  [key=0, style=solid];
m16_82 -> m16_90  [key=2, style=dotted];
m16_82 -> m16_85  [key=1, style=dashed, color=darkseagreen4, label=convertedDate];
m16_83 -> m16_84  [key=0, style=solid];
m16_83 -> m16_85  [key=1, style=dashed, color=darkseagreen4, label=type];
m16_85 -> m16_86  [key=0, style=solid];
m16_85 -> m16_79  [key=2, style=dotted];
m16_84 -> m16_85  [key=0, style=solid];
m16_84 -> m16_78  [key=2, style=dotted];
m16_86 -> m16_87  [key=0, style=solid];
m16_86 -> m16_24  [key=2, style=dotted];
m16_87 -> m16_88  [key=0, style=solid];
m16_87 -> m16_25  [key=2, style=dotted];
m16_88 -> m16_89  [key=0, style=solid];
m16_88 -> m16_26  [key=2, style=dotted];
m16_89 -> m16_80  [key=0, style=bold, color=blue];
m16_101 -> m16_239  [key=0, style=solid];
m16_101 -> m16_240  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m16_239 -> m16_240  [key=0, style=solid];
m16_240 -> m16_241  [key=0, style=solid];
m16_240 -> m16_11  [key=2, style=dotted];
m16_241 -> m16_101  [key=0, style=bold, color=blue];
m16_254 -> m16_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_45  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_85  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_93  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_99  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_104  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_105  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_106  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_116  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_128  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_117  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_118  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_131  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_134  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_135  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_144  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_136  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_137  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_147  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_152  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_153  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_154  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_160  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_164  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_165  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_166  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_174  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_177  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_178  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_188  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_191  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_192  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_193  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_194  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_205  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_208  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_209  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_210  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_254 -> m16_251  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreJobPerformanceProcessFacts"];
m16_255 -> m16_131  [key=1, style=dashed, color=darkseagreen4, label=process];
m16_256 -> m16_147  [key=1, style=dashed, color=darkseagreen4, label=process];
m16_257 -> m16_160  [key=1, style=dashed, color=darkseagreen4, label=process];
m16_258 -> m16_174  [key=1, style=dashed, color=darkseagreen4, label=process];
m16_259 -> m16_188  [key=1, style=dashed, color=darkseagreen4, label=process];
m16_260 -> m16_205  [key=1, style=dashed, color=darkseagreen4, label=process];
m17_0 -> m17_1  [key=0, style=solid, color=red];
m17_0 -> m17_3  [key=1, style=dashed, color=red, label=IRedisTransaction];
m17_0 -> m17_8  [key=1, style=dashed, color=red, label=string];
m17_1 -> m17_2  [key=0, style=solid, color=red];
m17_1 -> m17_3  [key=0, style=solid, color=red];
m17_3 -> m17_4  [key=0, style=solid, color=red];
m17_3 -> m17_6  [key=2, style=dotted, color=red];
m17_3 -> m17_7  [key=1, style=dashed, color=red, label="lambda expression"];
m17_2 -> m17_4  [key=0, style=solid, color=red];
m17_2 -> m17_5  [key=2, style=dotted, color=red];
m17_4 -> m17_0  [key=0, style=bold, color=blue];
m17_7 -> m17_8  [key=0, style=solid, color=red];
m17_8 -> m17_9  [key=0, style=solid, color=red];
m17_8 -> m17_10  [key=2, style=dotted, color=red];
m17_9 -> m17_7  [key=0, style=bold, color=blue];
m17_11 -> m17_8  [key=1, style=dashed, color=red, label=string];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_2  [key=0, style=solid];
m18_2 -> m18_0  [key=0, style=bold, color=blue];
m18_3 -> m18_4  [key=0, style=solid];
m18_3 -> m18_5  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToClassName"];
m18_3 -> m18_7  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToClassName"];
m18_3 -> m18_9  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToClassName"];
m18_3 -> m18_11  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToClassName"];
m18_3 -> m18_13  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToClassName"];
m18_3 -> m18_15  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToClassName"];
m18_4 -> m18_5  [key=0, style=solid];
m18_4 -> m18_7  [key=0, style=solid];
m18_4 -> m18_9  [key=0, style=solid];
m18_4 -> m18_11  [key=0, style=solid];
m18_4 -> m18_13  [key=0, style=solid];
m18_4 -> m18_15  [key=0, style=solid];
m18_5 -> m18_6  [key=0, style=solid];
m18_7 -> m18_8  [key=0, style=solid];
m18_9 -> m18_10  [key=0, style=solid];
m18_11 -> m18_12  [key=0, style=solid];
m18_13 -> m18_14  [key=0, style=solid];
m18_15 -> m18_16  [key=0, style=solid];
m18_6 -> m18_16  [key=0, style=solid];
m18_8 -> m18_16  [key=0, style=solid];
m18_10 -> m18_16  [key=0, style=solid];
m18_12 -> m18_16  [key=0, style=solid];
m18_14 -> m18_16  [key=0, style=solid];
m18_16 -> m18_3  [key=0, style=bold, color=blue];
m18_17 -> m18_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Metric"];
m20_3 -> m20_4  [key=0, style=solid, color=red];
m20_4 -> m20_5  [key=0, style=solid, color=red];
m20_4 -> m20_6  [key=2, style=dotted, color=red];
m20_4 -> m20_7  [key=2, style=dotted, color=red];
m20_5 -> m20_3  [key=0, style=bold, color=blue];
m20_0 -> m20_1  [key=0, style=solid, color=red];
m20_1 -> m20_2  [key=0, style=solid, color=red];
m20_2 -> m20_0  [key=0, style=bold, color=blue];
m20_8 -> m20_1  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlStoredSets"];
m20_8 -> m20_4  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlStoredSets"];
m21_69 -> m21_70  [key=0, style=solid, color=green];
m21_69 -> m21_61  [key=2, style=dotted, color=green];
m21_11 -> m21_12  [key=0, style=solid];
m21_47 -> m21_48  [key=0, style=solid, color=green];
m21_47 -> m21_61  [key=2, style=dotted, color=green];
m21_47 -> m21_62  [key=2, style=dotted, color=green];
m21_47 -> m21_63  [key=2, style=dotted, color=green];
m21_47 -> m21_68  [key=1, style=dashed, color=green, label="lambda expression"];
m21_47 -> m21_71  [key=1, style=dashed, color=green, label="lambda expression"];
m21_47 -> m21_75  [key=1, style=dashed, color=green, label="lambda expression"];
m21_47 -> m21_78  [key=1, style=dashed, color=green, label="lambda expression"];
m21_47 -> m21_50  [key=1, style=dashed, color=green, label=parts];
m21_47 -> m21_51  [key=1, style=dashed, color=green, label=parts];
m21_47 -> m21_55  [key=1, style=dashed, color=green, label=parts];
m21_47 -> m21_56  [key=1, style=dashed, color=green, label=parts];
m21_71 -> m21_72  [key=0, style=solid, color=green];
m21_94 -> m21_117  [key=0, style=solid];
m21_117 -> m21_118  [key=0, style=solid];
m21_117 -> m21_122  [key=2, style=dotted];
m21_117 -> m21_119  [key=1, style=dashed, color=darkseagreen4, label=connection];
m21_117 -> m21_120  [key=1, style=dashed, color=darkseagreen4, label=connection];
m21_118 -> m21_119  [key=0, style=solid];
m21_118 -> m21_120  [key=0, style=solid];
m21_119 -> m21_120  [key=0, style=solid];
m21_119 -> m21_123  [key=2, style=dotted];
m21_120 -> m21_121  [key=0, style=solid];
m21_121 -> m21_94  [key=0, style=bold, color=blue];
m21_124 -> m21_125  [key=0, style=solid];
m21_125 -> m21_126  [key=0, style=solid];
m21_125 -> m21_127  [key=2, style=dotted];
m21_126 -> m21_124  [key=0, style=bold, color=blue];
m21_128 -> m21_129  [key=0, style=solid];
m21_128 -> m21_130  [key=1, style=dashed, color=darkseagreen4, label=IDbConnection];
m21_129 -> m21_130  [key=0, style=solid];
m21_129 -> m21_131  [key=0, style=solid];
m21_129 -> m21_124  [key=2, style=dotted];
m21_130 -> m21_131  [key=0, style=solid];
m21_130 -> m21_132  [key=2, style=dotted];
m21_131 -> m21_128  [key=0, style=bold, color=blue];
m21_14 -> m21_133  [key=0, style=solid];
m21_14 -> m21_11  [key=0, style=bold, color=blue];
m21_133 -> m21_134  [key=0, style=solid];
m21_133 -> m21_135  [key=0, style=solid];
m21_134 -> m21_135  [key=0, style=solid];
m21_134 -> m21_81  [key=2, style=dotted];
m21_134 -> m21_138  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_135 -> m21_136  [key=0, style=solid];
m21_135 -> m21_137  [key=2, style=dotted];
m21_136 -> m21_14  [key=0, style=bold, color=blue];
m21_48 -> m21_49  [key=0, style=solid, color=green];
m21_48 -> m21_64  [key=2, style=dotted, color=green];
m21_48 -> m21_51  [key=1, style=dashed, color=green, label=builder];
m21_48 -> m21_52  [key=1, style=dashed, color=green, label=builder];
m21_48 -> m21_53  [key=1, style=dashed, color=green, label=builder];
m21_48 -> m21_56  [key=1, style=dashed, color=green, label=builder];
m21_48 -> m21_57  [key=1, style=dashed, color=green, label=builder];
m21_10 -> m21_2  [key=0, style=bold, color=blue];
m21_63 -> m21_65  [key=0, style=solid, color=red];
m21_63 -> m21_73  [key=2, style=dotted, color=red];
m21_63 -> m21_68  [key=2, style=dotted, color=red];
m21_17 -> m21_22  [key=1, style=dashed, color=darkseagreen4, label=DbConnection];
m21_17 -> m21_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m21_17 -> m21_18  [key=0, style=solid];
m21_17 -> m21_19  [key=1, style=dashed, color=darkseagreen4, label=DbConnection];
m21_17 -> m21_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m21_17 -> m21_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m21_22 -> m21_23  [key=0, style=solid];
m21_23 -> m21_24  [key=0, style=solid];
m21_23 -> m21_25  [key=0, style=solid];
m21_24 -> m21_25  [key=0, style=solid];
m21_24 -> m21_14  [key=2, style=dotted];
m21_24 -> m21_11  [key=2, style=dotted];
m21_20 -> m21_22  [key=0, style=solid];
m21_20 -> m21_21  [key=0, style=solid];
m21_20 -> m21_16  [key=0, style=bold, color=blue];
m21_18 -> m21_20  [key=0, style=solid];
m21_18 -> m21_19  [key=0, style=solid];
m21_19 -> m21_25  [key=0, style=solid];
m21_19 -> m21_11  [key=2, style=dotted];
m21_19 -> m21_12  [key=2, style=dotted];
m21_19 -> m21_20  [key=0, style=solid];
m21_19 -> m21_21  [key=2, style=dotted];
m21_21 -> m21_25  [key=0, style=solid];
m21_21 -> m21_11  [key=2, style=dotted];
m21_21 -> m21_12  [key=2, style=dotted];
m21_25 -> m21_17  [key=0, style=bold, color=blue];
m21_25 -> m21_26  [key=0, style=solid];
m21_25 -> m21_29  [key=2, style=dotted];
m21_34 -> m21_35  [key=0, style=solid];
m21_34 -> m21_36  [key=0, style=bold, color=crimson];
m21_34 -> m21_44  [key=2, style=dotted];
m21_35 -> m21_36  [key=0, style=solid];
m21_35 -> m21_38  [key=2, style=dotted];
m21_35 -> m21_45  [key=2, style=dotted];
m21_36 -> m21_37  [key=0, style=solid];
m21_36 -> m21_39  [key=2, style=dotted];
m21_37 -> m21_34  [key=0, style=bold, color=blue];
m21_37 -> m21_38  [key=0, style=solid];
m21_37 -> m21_46  [key=2, style=dotted];
m21_30 -> m21_31  [key=0, style=solid];
m21_9 -> m21_10  [key=0, style=solid];
m21_9 -> m21_14  [key=2, style=dotted];
m21_65 -> m21_66  [key=0, style=solid, color=red];
m21_65 -> m21_75  [key=2, style=dotted, color=red];
m21_96 -> m21_97  [key=0, style=solid, color=green];
m21_96 -> m21_101  [key=1, style=dashed, color=green, label="System.Action<DbConnection, DbTransaction>"];
m21_97 -> m21_98  [key=0, style=solid, color=green];
m21_97 -> m21_99  [key=2, style=dotted, color=green];
m21_97 -> m21_100  [key=1, style=dashed, color=green, label="lambda expression"];
m21_98 -> m21_96  [key=0, style=bold, color=blue];
m21_7 -> m21_8  [key=0, style=solid];
m21_7 -> m21_13  [key=2, style=dotted];
m21_66 -> m21_46  [key=0, style=bold, color=blue];
m21_0 -> m21_1  [key=0, style=solid];
m21_0 -> m21_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerContext"];
m21_1 -> m21_2  [key=0, style=solid];
m21_2 -> m21_3  [key=0, style=solid];
m21_2 -> m21_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_2 -> m21_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m21_2 -> m21_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_2 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m21_2 -> m21_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m21_3 -> m21_4  [key=0, style=solid];
m21_3 -> m21_7  [key=2, style=dotted];
m21_3 -> m21_8  [key=2, style=dotted];
m21_3 -> m21_5  [key=0, style=solid];
m21_4 -> m21_5  [key=0, style=solid];
m21_4 -> m21_9  [key=2, style=dotted];
m21_4 -> m21_7  [key=2, style=dotted];
m21_4 -> m21_10  [key=0, style=solid];
m21_4 -> m21_11  [key=2, style=dotted];
m21_4 -> m21_12  [key=2, style=dotted];
m21_5 -> m21_6  [key=0, style=solid];
m21_5 -> m21_10  [key=2, style=dotted];
m21_5 -> m21_7  [key=0, style=solid];
m21_6 -> m21_0  [key=0, style=bold, color=blue];
m21_6 -> m21_10  [key=0, style=solid];
m21_6 -> m21_11  [key=2, style=dotted];
m21_6 -> m21_12  [key=2, style=dotted];
m21_64 -> m21_65  [key=0, style=solid, color=red];
m21_64 -> m21_74  [key=2, style=dotted, color=red];
m21_64 -> m21_68  [key=2, style=dotted, color=red];
m21_99 -> m21_105  [key=0, style=solid];
m21_99 -> m21_109  [key=1, style=dashed, color=darkseagreen4, label="IsolationLevel?"];
m21_99 -> m21_110  [key=1, style=dashed, color=darkseagreen4, label="System.Func<DbConnection, DbTransaction, T>"];
m21_105 -> m21_106  [key=0, style=solid];
m21_105 -> m21_107  [key=2, style=dotted];
m21_105 -> m21_108  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_106 -> m21_99  [key=0, style=bold, color=blue];
m21_31 -> m21_32  [key=0, style=solid];
m21_31 -> m21_33  [key=2, style=dotted];
m21_32 -> m21_30  [key=0, style=bold, color=blue];
m21_32 -> m21_33  [key=0, style=solid];
m21_40 -> m21_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m21_40 -> m21_41  [key=0, style=solid];
m21_42 -> m21_43  [key=0, style=solid];
m21_42 -> m21_44  [key=2, style=dotted];
m21_42 -> m21_48  [key=2, style=dotted];
m21_42 -> m21_49  [key=2, style=dotted];
m21_41 -> m21_42  [key=0, style=solid];
m21_41 -> m21_44  [key=2, style=dotted];
m21_43 -> m21_40  [key=0, style=bold, color=blue];
m21_43 -> m21_32  [key=0, style=bold, color=blue];
m21_8 -> m21_9  [key=0, style=solid];
m21_45 -> m21_46  [key=0, style=solid, color=green];
m21_81 -> m21_82  [key=0, style=solid];
m21_81 -> m21_86  [key=1, style=dashed, color=darkseagreen4, label="System.Action<DbConnection>"];
m21_82 -> m21_84  [key=2, style=dotted];
m21_82 -> m21_83  [key=0, style=solid];
m21_82 -> m21_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_83 -> m21_81  [key=0, style=bold, color=blue];
m21_33 -> m21_34  [key=0, style=solid];
m21_33 -> m21_39  [key=0, style=solid];
m21_33 -> m21_40  [key=0, style=solid];
m21_33 -> m21_43  [key=0, style=solid];
m21_39 -> m21_43  [key=0, style=solid];
m21_38 -> m21_33  [key=0, style=solid];
m21_38 -> m21_47  [key=2, style=dotted];
m21_12 -> m21_13  [key=0, style=solid];
m21_75 -> m21_76  [key=0, style=solid, color=green];
m21_84 -> m21_90  [key=0, style=solid, color=green];
m21_84 -> m21_91  [key=1, style=dashed, color=green, label=DbConnection];
m21_84 -> m21_92  [key=1, style=dashed, color=green, label="System.Func<DbConnection, T>"];
m21_90 -> m21_91  [key=0, style=solid, color=green];
m21_91 -> m21_92  [key=0, style=solid, color=green];
m21_91 -> m21_94  [key=2, style=dotted, color=green];
m21_92 -> m21_93  [key=0, style=solid, color=green];
m21_92 -> m21_95  [key=2, style=dotted, color=green];
m21_93 -> m21_84  [key=0, style=bold, color=blue];
m21_70 -> m21_0  [key=3, color=darkorchid, style=bold, label="Field variable HangFire.Server.JobManager _manager"];
m21_70 -> m21_68  [key=0, style=bold, color=blue];
m21_49 -> m21_50  [key=0, style=solid, color=green];
m21_49 -> m21_52  [key=0, style=solid, color=green];
m21_49 -> m21_51  [key=1, style=dashed, color=green, label=alias];
m21_61 -> m21_62  [key=0, style=solid, color=red];
m21_73 -> m21_71  [key=0, style=bold, color=blue];
m21_165 -> m21_166  [key=0, style=solid];
m21_68 -> m21_69  [key=0, style=solid, color=green];
m21_78 -> m21_79  [key=0, style=solid, color=green];
m21_72 -> m21_73  [key=0, style=solid, color=green];
m21_72 -> m21_74  [key=2, style=dotted, color=green];
m21_76 -> m21_77  [key=0, style=solid, color=green];
m21_76 -> m21_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_51  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m21_76 -> m21_55  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m21_76 -> m21_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_76 -> m21_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m21_77 -> m21_75  [key=0, style=bold, color=blue];
m21_79 -> m21_80  [key=0, style=solid, color=green];
m21_80 -> m21_78  [key=0, style=bold, color=blue];
m21_100 -> m21_101  [key=0, style=solid, color=green];
m21_101 -> m21_102  [key=0, style=solid, color=green];
m21_101 -> m21_104  [key=2, style=dotted, color=green];
m21_102 -> m21_103  [key=0, style=solid];
m21_139 -> m21_140  [key=0, style=solid];
m21_139 -> m21_141  [key=2, style=dotted];
m21_153 -> m21_84  [key=2, style=dotted];
m21_153 -> m21_154  [key=0, style=solid];
m21_153 -> m21_156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_169 -> m21_84  [key=2, style=dotted];
m21_169 -> m21_170  [key=0, style=solid];
m21_169 -> m21_171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_109 -> m21_110  [key=0, style=solid];
m21_109 -> m21_114  [key=2, style=dotted];
m21_109 -> m21_111  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m21_110 -> m21_111  [key=0, style=solid];
m21_110 -> m21_115  [key=2, style=dotted];
m21_110 -> m21_112  [key=1, style=dashed, color=darkseagreen4, label=result];
m21_103 -> m21_100  [key=0, style=bold, color=blue];
m21_85 -> m21_86  [key=0, style=solid];
m21_108 -> m21_109  [key=0, style=solid];
m21_108 -> m21_110  [key=1, style=dashed, color=darkseagreen4, label=DbConnection];
m21_138 -> m21_139  [key=0, style=solid];
m21_140 -> m21_138  [key=0, style=bold, color=blue];
m21_150 -> m21_153  [key=1, style=dashed, color=darkseagreen4, label=sqlStorage];
m21_150 -> m21_151  [key=0, style=solid];
m21_151 -> m21_153  [key=0, style=solid];
m21_151 -> m21_152  [key=0, style=solid];
m21_154 -> m21_149  [key=0, style=bold, color=blue];
m21_156 -> m21_157  [key=0, style=solid];
m21_156 -> m21_158  [key=1, style=dashed, color=darkseagreen4, label=DbConnection];
m21_166 -> m21_169  [key=1, style=dashed, color=darkseagreen4, label=sqlStorage];
m21_166 -> m21_167  [key=0, style=solid];
m21_167 -> m21_169  [key=0, style=solid];
m21_167 -> m21_168  [key=0, style=solid];
m21_170 -> m21_165  [key=0, style=bold, color=blue];
m21_171 -> m21_172  [key=0, style=solid];
m21_171 -> m21_173  [key=1, style=dashed, color=darkseagreen4, label=DbConnection];
m21_111 -> m21_112  [key=0, style=solid];
m21_111 -> m21_116  [key=2, style=dotted];
m21_112 -> m21_113  [key=0, style=solid];
m21_86 -> m21_87  [key=0, style=solid];
m21_86 -> m21_89  [key=2, style=dotted];
m21_88 -> m21_85  [key=0, style=bold, color=blue];
m21_113 -> m21_108  [key=0, style=bold, color=blue];
m21_149 -> m21_150  [key=0, style=solid];
m21_152 -> m21_154  [key=0, style=solid];
m21_152 -> m21_155  [key=2, style=dotted];
m21_160 -> m21_156  [key=0, style=bold, color=blue];
m21_157 -> m21_158  [key=0, style=solid];
m21_158 -> m21_159  [key=0, style=solid];
m21_158 -> m21_161  [key=2, style=dotted];
m21_158 -> m21_162  [key=2, style=dotted];
m21_168 -> m21_170  [key=0, style=solid];
m21_168 -> m21_155  [key=2, style=dotted];
m21_172 -> m21_173  [key=0, style=solid];
m21_173 -> m21_174  [key=0, style=solid];
m21_173 -> m21_161  [key=2, style=dotted];
m21_173 -> m21_162  [key=2, style=dotted];
m21_87 -> m21_88  [key=0, style=solid];
m21_159 -> m21_160  [key=0, style=solid];
m21_159 -> m21_163  [key=2, style=dotted];
m21_159 -> m21_164  [key=2, style=dotted];
m21_174 -> m21_175  [key=0, style=solid];
m21_174 -> m21_163  [key=2, style=dotted];
m21_174 -> m21_164  [key=2, style=dotted];
m21_175 -> m21_171  [key=0, style=bold, color=blue];
m21_137 -> m21_142  [key=0, style=solid];
m21_142 -> m21_143  [key=0, style=solid];
m21_142 -> m21_145  [key=2, style=dotted];
m21_143 -> m21_144  [key=0, style=solid];
m21_143 -> m21_146  [key=2, style=dotted];
m21_144 -> m21_137  [key=0, style=bold, color=blue];
m21_26 -> m21_27  [key=0, style=solid];
m21_26 -> m21_30  [key=2, style=dotted];
m21_27 -> m21_28  [key=0, style=solid];
m21_27 -> m21_29  [key=2, style=dotted];
m21_27 -> m21_31  [key=2, style=dotted];
m21_28 -> m21_26  [key=0, style=bold, color=blue];
m21_28 -> m21_22  [key=0, style=bold, color=blue];
m21_13 -> m21_14  [key=0, style=solid];
m21_13 -> m21_15  [key=2, style=dotted];
m21_13 -> m21_147  [key=0, style=solid];
m21_62 -> m21_63  [key=0, style=solid, color=red];
m21_62 -> m21_64  [key=0, style=solid, color=red];
m21_46 -> m21_47  [key=0, style=solid, color=green];
m21_46 -> m21_57  [key=1, style=dashed, color=green, label=canNotParseMessage];
m21_46 -> m21_59  [key=1, style=dashed, color=green, label=canNotParseMessage];
m21_46 -> m21_50  [key=0, style=solid, color=red];
m21_46 -> m21_51  [key=1, style=dashed, color=red, label="HangFire.Server.JobPayload"];
m21_46 -> m21_55  [key=1, style=dashed, color=red, label="HangFire.Server.JobPayload"];
m21_46 -> m21_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m21_46 -> m21_63  [key=1, style=dashed, color=red, label="HangFire.Server.JobPayload"];
m21_46 -> m21_64  [key=1, style=dashed, color=red, label="HangFire.Server.JobPayload"];
m21_46 -> m21_65  [key=1, style=dashed, color=red, label="HangFire.Server.JobPayload"];
m21_57 -> m21_60  [key=0, style=solid];
m21_57 -> m21_58  [key=0, style=solid];
m21_57 -> m21_61  [key=0, style=solid, color=red];
m21_57 -> m21_71  [key=2, style=dotted];
m21_59 -> m21_60  [key=0, style=solid];
m21_59 -> m21_62  [key=1, style=dashed, color=red, label=exception];
m21_59 -> m21_64  [key=1, style=dashed, color=red, label=exception];
m21_50 -> m21_51  [key=0, style=solid, color=red];
m21_50 -> m21_49  [key=0, style=solid, color=green];
m21_50 -> m21_65  [key=2, style=dotted, color=green];
m21_51 -> m21_52  [key=0, style=solid, color=red];
m21_51 -> m21_66  [key=2, style=dotted];
m21_51 -> m21_53  [key=0, style=solid, color=red];
m21_51 -> m21_67  [key=2, style=dotted, color=red];
m21_51 -> m21_68  [key=2, style=dotted, color=red];
m21_55 -> m21_56  [key=0, style=solid, color=red];
m21_55 -> m21_54  [key=0, style=solid];
m21_55 -> m21_65  [key=2, style=dotted];
m21_55 -> m21_69  [key=2, style=dotted, color=red];
m21_56 -> m21_57  [key=0, style=solid];
m21_56 -> m21_66  [key=2, style=dotted];
m21_56 -> m21_70  [key=2, style=dotted];
m21_52 -> m21_53  [key=0, style=solid];
m21_52 -> m21_54  [key=0, style=solid];
m21_52 -> m21_66  [key=0, style=solid, color=red];
m21_53 -> m21_54  [key=0, style=solid];
m21_53 -> m21_67  [key=2, style=dotted];
m21_53 -> m21_53  [key=3, color=darkorchid, style=bold, label="Local variable System.Exception exception"];
m21_53 -> m21_58  [key=3, color=darkorchid, style=bold, label="Local variable System.Exception exception"];
m21_54 -> m21_57  [key=0, style=solid];
m21_54 -> m21_55  [key=0, style=solid, color=red];
m21_54 -> m21_56  [key=1, style=dashed, color=darkseagreen4, label=alias];
m21_54 -> m21_53  [key=3, color=darkorchid, style=bold, label="Local variable HangFire.Server.ServerJobDescriptor jobDescriptor"];
m21_58 -> m21_59  [key=0, style=solid];
m21_60 -> m21_45  [key=0, style=bold, color=blue];
m21_60 -> m21_61  [key=0, style=solid, color=red];
m21_60 -> m21_7  [key=2, style=dotted];
m21_60 -> m21_72  [key=2, style=dotted];
m21_147 -> m21_148  [key=0, style=solid];
m21_148 -> m21_13  [key=0, style=bold, color=blue];
m21_16 -> m21_17  [key=0, style=solid];
m21_16 -> m21_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m21_176 -> m21_47  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_91  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_97  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_105  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_117  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_125  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_129  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_133  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_134  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_139  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_135  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_142  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m21_176 -> m21_143  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m21_178 -> m21_101  [key=1, style=dashed, color=green, label="System.Action<DbConnection, DbTransaction>"];
m21_179 -> m21_109  [key=1, style=dashed, color=darkseagreen4, label="IsolationLevel?"];
m21_180 -> m21_110  [key=1, style=dashed, color=darkseagreen4, label="System.Func<DbConnection, DbTransaction, T>"];
m21_177 -> m21_86  [key=1, style=dashed, color=darkseagreen4, label="System.Action<DbConnection>"];
m22_0 -> m22_1  [key=0, style=solid];
m22_0 -> m22_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m22_0 -> m22_3  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
m22_0 -> m22_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobServer"];
m22_1 -> m22_2  [key=0, style=solid];
m22_1 -> m22_8  [key=2, style=dotted];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_9  [key=2, style=dotted];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_10  [key=2, style=dotted];
m22_6 -> m22_7  [key=0, style=solid];
m22_6 -> m22_12  [key=2, style=dotted];
m22_4 -> m22_5  [key=0, style=solid];
m22_4 -> m22_11  [key=2, style=dotted];
m22_4 -> m22_6  [key=1, style=dashed, color=darkseagreen4, label=token];
m22_5 -> m22_6  [key=0, style=solid];
m22_5 -> m22_7  [key=0, style=solid];
m22_7 -> m22_0  [key=0, style=bold, color=blue];
}
