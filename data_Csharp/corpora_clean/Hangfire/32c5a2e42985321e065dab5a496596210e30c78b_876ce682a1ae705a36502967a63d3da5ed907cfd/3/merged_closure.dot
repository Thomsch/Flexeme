digraph  {
n33 [label="HangFire.AutomaticRetryAttribute", span=""];
n0 [cluster="HangFire.AutomaticRetryAttribute.AutomaticRetryAttribute()", label="Entry HangFire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="14-14"];
n1 [cluster="HangFire.AutomaticRetryAttribute.AutomaticRetryAttribute()", label="Attempts = DefaultRetryAttempts", span="16-16"];
n2 [cluster="HangFire.AutomaticRetryAttribute.AutomaticRetryAttribute()", label="LogEvents = true", span="17-17"];
n3 [cluster="HangFire.AutomaticRetryAttribute.AutomaticRetryAttribute()", label="Exit HangFire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="14-14"];
n4 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", label="Entry HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", span="35-35"];
n5 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", label="var failedState = context.CandidateState as FailedState", span="37-37"];
n8 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", label="var retryAttempt = context.GetJobParameter<int>(''RetryCount'') + 1", span="44-44"];
n11 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", label="context.SetJobParameter(''RetryCount'', retryAttempt)", span="50-50"];
n12 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", label="context.CandidateState = new ScheduledState(delay)\r\n                {\r\n                    Reason = String.Format(''Retry attempt {0} of {1}'', retryAttempt, Attempts)\r\n                }", span="54-57"];
n14 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", label="Logger.WarnFormat(\r\n                        ''Failed to process the job '{0}': an exception occurred. Retry attempt {1} of {2} will be performed in {3}.'',\r\n                        failedState.Exception,\r\n                        context.JobId,\r\n                        retryAttempt,\r\n                        Attempts,\r\n                        delay)", span="61-67"];
n16 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", label="Logger.ErrorFormat(\r\n                        ''Failed to process the job '{0}': an exception occurred.'',\r\n                        failedState.Exception,\r\n                        context.JobId)", span="74-77"];
n6 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", label="failedState == null", span="38-38"];
n7 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", label="return;", span="41-41"];
n9 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", label="retryAttempt <= Attempts", span="46-46"];
n18 [cluster="HangFire.States.ElectStateContext.GetJobParameter<T>(string)", label="Entry HangFire.States.ElectStateContext.GetJobParameter<T>(string)", span="54-54"];
n10 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", label="var delay = TimeSpan.FromSeconds(SecondsToDelay(retryAttempt))", span="48-48"];
n15 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", label=LogEvents, span="72-72"];
n19 [cluster="HangFire.AutomaticRetryAttribute.SecondsToDelay(long)", label="Entry HangFire.AutomaticRetryAttribute.SecondsToDelay(long)", span="83-83"];
n20 [cluster="System.TimeSpan.FromSeconds(double)", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
n21 [cluster="HangFire.States.ElectStateContext.SetJobParameter<T>(string, T)", label="Entry HangFire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="49-49"];
n13 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", label=LogEvents, span="59-59"];
n22 [cluster="HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", label="Entry HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27"];
n23 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
n17 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", label="Exit HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", span="35-35"];
n25 [cluster="Unk.ErrorFormat", label="Entry Unk.ErrorFormat", span=""];
n24 [cluster="Unk.WarnFormat", label="Entry Unk.WarnFormat", span=""];
n26 [cluster="HangFire.AutomaticRetryAttribute.SecondsToDelay(long)", label="var random = new Random()", span="85-85"];
n27 [cluster="HangFire.AutomaticRetryAttribute.SecondsToDelay(long)", label="return (int)Math.Round(\r\n                Math.Pow(retryCount - 1, 4) + 15 + (random.Next(30) * (retryCount)));", span="86-87"];
n29 [cluster="System.Random.Random()", label="Entry System.Random.Random()", span="0-0"];
n28 [cluster="HangFire.AutomaticRetryAttribute.SecondsToDelay(long)", label="Exit HangFire.AutomaticRetryAttribute.SecondsToDelay(long)", span="83-83"];
n30 [cluster="System.Math.Pow(double, double)", label="Entry System.Math.Pow(double, double)", span="0-0"];
n31 [cluster="System.Random.Next(int)", label="Entry System.Random.Next(int)", span="0-0"];
n32 [cluster="System.Math.Round(double)", label="Entry System.Math.Round(double)", span="0-0"];
m0_19 [cluster="HangFire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>, string)", file="BackgroundJob.cs", label="Entry HangFire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>, string)", span="71-71"];
m0_39 [cluster="HangFire.IBackgroundJobClient.Delete(string)", file="BackgroundJob.cs", label="Entry HangFire.IBackgroundJobClient.Delete(string)", span="204-204"];
m0_49 [cluster="HangFire.IBackgroundJobClient.Requeue(string)", file="BackgroundJob.cs", label="Entry HangFire.IBackgroundJobClient.Requeue(string)", span="249-249"];
m0_30 [cluster="HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="148-148"];
m0_33 [cluster="HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJob.cs", label="Exit HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="148-148"];
m0_34 [cluster="HangFire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJob.cs", label="Entry HangFire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="123-123"];
m0_15 [cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>, string)", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>, string)", span="96-96"];
m0_18 [cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>, string)", file="BackgroundJob.cs", label="Exit HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>, string)", span="96-96"];
m0_29 [cluster="HangFire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJob.cs", label="Entry HangFire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="106-106"];
m0_35 [cluster="HangFire.BackgroundJob.Delete(string)", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJob.Delete(string)", span="164-164"];
m0_38 [cluster="HangFire.BackgroundJob.Delete(string)", file="BackgroundJob.cs", label="Exit HangFire.BackgroundJob.Delete(string)", span="164-164"];
m0_54 [cluster="HangFire.IBackgroundJobClient.Requeue(string, string)", file="BackgroundJob.cs", label="Entry HangFire.IBackgroundJobClient.Requeue(string, string)", span="265-265"];
m0_10 [cluster="HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="78-78"];
m0_13 [cluster="HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJob.cs", label="Exit HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="78-78"];
m0_14 [cluster="HangFire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJob.cs", label="Entry HangFire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="53-53"];
m0_45 [cluster="HangFire.BackgroundJob.Requeue(string)", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJob.Requeue(string)", span="197-197"];
m0_48 [cluster="HangFire.BackgroundJob.Requeue(string)", file="BackgroundJob.cs", label="Exit HangFire.BackgroundJob.Requeue(string)", span="197-197"];
m0_25 [cluster="HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="131-131"];
m0_28 [cluster="HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJob.cs", label="Exit HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="131-131"];
m0_20 [cluster="HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", span="115-115"];
m0_23 [cluster="HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", file="BackgroundJob.cs", label="Exit HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", span="115-115"];
m0_0 [cluster="lambda expression", file="BackgroundJob.cs", label="Entry lambda expression", span="28-28"];
m0_1 [cluster="lambda expression", file="BackgroundJob.cs", label="new BackgroundJobClient(JobStorage.Current)", span="28-28"];
m0_2 [cluster="lambda expression", file="BackgroundJob.cs", label="Exit lambda expression", span="28-28"];
m0_9 [cluster="HangFire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJob.cs", label="Entry HangFire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="35-35"];
m0_44 [cluster="HangFire.IBackgroundJobClient.Delete(string, string)", file="BackgroundJob.cs", label="Entry HangFire.IBackgroundJobClient.Delete(string, string)", span="233-233"];
m0_40 [cluster="HangFire.BackgroundJob.Delete(string, string)", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJob.Delete(string, string)", span="182-182"];
m0_43 [cluster="HangFire.BackgroundJob.Delete(string, string)", file="BackgroundJob.cs", label="Exit HangFire.BackgroundJob.Delete(string, string)", span="182-182"];
m0_24 [cluster="HangFire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", file="BackgroundJob.cs", label="Entry HangFire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", span="90-90"];
m0_4 [cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="60-60"];
m0_7 [cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJob.cs", label="Exit HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="60-60"];
m0_3 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", span="49-49"];
m0_8 [cluster="System.Func<TResult>.Invoke()", file="BackgroundJob.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m0_50 [cluster="HangFire.BackgroundJob.Requeue(string, string)", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJob.Requeue(string, string)", span="215-215"];
m0_53 [cluster="HangFire.BackgroundJob.Requeue(string, string)", file="BackgroundJob.cs", label="Exit HangFire.BackgroundJob.Requeue(string, string)", span="215-215"];
m1_36 [cluster="HangFire.BackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="BackgroundJobClient.cs", label="state == null", span="103-103"];
m1_113 [cluster="System.Collections.Generic.List<T>.List()", file="BackgroundJobClient.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_4 [cluster="Unk.GetSortedSetCount", file="BackgroundJobClient.cs", label="Entry Unk.GetSortedSetCount", span=""];
m1_5 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="BackgroundJobClient.cs", label="Entry HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20"];
m1_291 [cluster="Unk.TryParse", file="BackgroundJobClient.cs", label="Entry Unk.TryParse", span=""];
m1_30 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="BackgroundJobClient.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", span="46-46"];
m1_133 [cluster="int.Parse(string)", file="BackgroundJobClient.cs", label="Entry int.Parse(string)", span="0-0"];
m1_43 [cluster="HangFire.BackgroundJobClient.Dispose()", file="BackgroundJobClient.cs", label="Entry HangFire.BackgroundJobClient.Dispose()", span="113-113"];
m1_45 [cluster="HangFire.BackgroundJobClient.Dispose()", color=green, community=0, file="BackgroundJobClient.cs", label="Exit HangFire.BackgroundJobClient.Dispose()", prediction=0, span="113-113"];
m1_46 [cluster="System.IDisposable.Dispose()", color=green, community=0, file="BackgroundJobClient.cs", label="Entry System.IDisposable.Dispose()", prediction=1, span="0-0"];
m1_51 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="BackgroundJobClient.cs", label=scheduledJobs, span="99-99"];
m1_56 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="BackgroundJobClient.cs", label="return scheduledJobs.ToDictionary(\r\n                    job => job.Key,\r\n                    job => new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="119-129"];
m1_47 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="BackgroundJobClient.cs", label="HangFire.BackgroundJobClient", span=""];
m1_48 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="BackgroundJobClient.cs", label="var jobs = new Dictionary<string, List<string>>()", span="94-94"];
m1_53 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="BackgroundJobClient.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' }),\r\n                            x => jobs.Add(job.Key, x))", prediction=2, span="103-107"];
m1_50 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="BackgroundJobClient.cs", label="var pipeline = Redis.CreatePipeline()", span="97-97"];
m1_52 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="BackgroundJobClient.cs", label="var job = scheduledJob", span="101-101"];
m1_54 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="BackgroundJobClient.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State''),\r\n                            x => states.Add(job.Key, x))", prediction=2, span="109-113"];
m1_49 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="BackgroundJobClient.cs", label="var states = new Dictionary<string, string>()", span="95-95"];
m1_55 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="BackgroundJobClient.cs", label="pipeline.Flush()", span="116-116"];
m1_57 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="BackgroundJobClient.cs", label="Exit HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80"];
m1_214 [cluster="HangFire.Web.DequeuedJobDto.DequeuedJobDto()", file="BackgroundJobClient.cs", label="Entry HangFire.Web.DequeuedJobDto.DequeuedJobDto()", span="5-5"];
m1_386 [cluster="HangFire.Web.StatisticsDto.StatisticsDto()", file="BackgroundJobClient.cs", label="Entry HangFire.Web.StatisticsDto.StatisticsDto()", span="2-2"];
m1_29 [cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="BackgroundJobClient.cs", label="Exit HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="81-81"];
m1_31 [cluster="HangFire.Client.IJobCreationProcess.Run(HangFire.Client.CreateContext)", file="BackgroundJobClient.cs", label="Entry HangFire.Client.IJobCreationProcess.Run(HangFire.Client.CreateContext)", span="28-28"];
m1_359 [cluster="KeyValuePair<string, T>.cstr", file="BackgroundJobClient.cs", label="Entry KeyValuePair<string, T>.cstr", span=""];
m1_33 [cluster="lambda expression", color=green, community=0, file="BackgroundJobClient.cs", label="new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }", prediction=4, span="66-76"];
m1_34 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="66-76"];
m1_35 [cluster="HangFire.Web.ProcessingJobDto.ProcessingJobDto()", file="BackgroundJobClient.cs", label="Entry HangFire.Web.ProcessingJobDto.ProcessingJobDto()", span="5-5"];
m1_37 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="BackgroundJobClient.cs", label="Entry HangFire.JobHelper.TryToGetQueue(string)", span="9-9"];
m1_40 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="76-76"];
m1_197 [cluster="HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", file="BackgroundJobClient.cs", label="Entry HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", span="5-5"];
m1_60 [cluster="Unk.CreatePipeline", file="BackgroundJobClient.cs", label="Entry Unk.CreatePipeline", span=""];
m1_76 [cluster="Unk.GetValueFromHash", file="BackgroundJobClient.cs", label="Entry Unk.GetValueFromHash", span=""];
m1_23 [cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="BackgroundJobClient.cs", label="throw new ArgumentNullException(''state'');", span="84-84"];
m1_27 [cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="BackgroundJobClient.cs", label=Exception, span="93-93"];
m1_134 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="BackgroundJobClient.cs", label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="60-60"];
m1_257 [cluster="Unk.ContainsKey", file="BackgroundJobClient.cs", label="Entry Unk.ContainsKey", span=""];
m1_17 [cluster="HangFire.Web.JobStorage.FailedCount()", file="BackgroundJobClient.cs", label="return Redis.GetSortedSetCount(''hangfire:failed'');", span="40-40"];
m1_173 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs", label="Entry HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="502-502"];
m1_331 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="520-522"];
m1_333 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="526-528"];
m1_328 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs", label="var pipeline = redis.CreatePipeline()", span="514-514"];
m1_326 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs", label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="511-511"];
m1_330 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs", label="var id = jobId", span="518-518"];
m1_332 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs", label="stateProperties != null", span="524-524"];
m1_327 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs", label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="512-512"];
m1_329 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs", label=jobIds, span="516-516"];
m1_334 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs", label="pipeline.Flush()", span="532-532"];
m1_324 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs", label="jobIds.Count == 0", span="509-509"];
m1_335 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs", label="return jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State)))\r\n                .ToList();", span="535-545"];
m1_325 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs", label="return new List<KeyValuePair<string, T>>();", span="509-509"];
m1_336 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs", label="Exit HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="502-502"];
m1_361 [cluster="Unk.selector", file="BackgroundJobClient.cs", label="Entry Unk.selector", span=""];
m1_0 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="BackgroundJobClient.cs", label="Entry HangFire.Web.JobStorage.ScheduledCount()", span="12-12"];
m1_1 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="BackgroundJobClient.cs", label=Redis, span="14-14"];
m1_345 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="BackgroundJobClient.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m1_11 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs", label="process == null", span="73-73"];
m1_12 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs", label="throw new ArgumentNullException(''process'');", span="73-73"];
m1_14 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs", label="_stateMachineFactory = stateMachineFactory", span="76-76"];
m1_219 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="Entry HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="441-441"];
m1_278 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="var result = new Dictionary<DateTime, long>()", span="455-455"];
m1_277 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="453-453"];
m1_279 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="var i = 0", span="456-456"];
m1_284 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="result.Add(dates[i], value)", span="464-464"];
m1_286 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="return result;", span="467-467"];
m1_276 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="452-452"];
m1_282 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="459-459"];
m1_280 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="i < dates.Count", span="456-456"];
m1_285 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="i++", span="456-456"];
m1_270 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="var dates = new List<DateTime>()", span="445-445"];
m1_283 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="value = 0", span="461-461"];
m1_273 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="dates.Add(endDate)", span="448-448"];
m1_269 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="var endDate = DateTime.UtcNow", span="444-444"];
m1_272 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="i < 24", span="446-446"];
m1_281 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="long value", span="458-458"];
m1_271 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="var i = 0", span="446-446"];
m1_274 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="endDate = endDate.AddHours(-1)", span="449-449"];
m1_275 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="i++", span="446-446"];
m1_287 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="Exit HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="441-441"];
m1_232 [cluster="Unk.TryToGetQueue", file="BackgroundJobClient.cs", label="Entry Unk.TryToGetQueue", span=""];
m1_42 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="76-76"];
m1_58 [cluster="Unk.GetRangeWithScoresFromSortedSet", file="BackgroundJobClient.cs", label="Entry Unk.GetRangeWithScoresFromSortedSet", span=""];
m1_132 [cluster="HangFire.Web.ServerDto.ServerDto()", file="BackgroundJobClient.cs", label="Entry HangFire.Web.ServerDto.ServerDto()", span="5-5"];
m1_234 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="BackgroundJobClient.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10"];
m1_258 [cluster="Unk.Where", file="BackgroundJobClient.cs", label="Entry Unk.Where", span=""];
m1_236 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="BackgroundJobClient.cs", label="Entry HangFire.Web.JobStorage.EnqueueScheduled(string)", span="394-394"];
m1_238 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="BackgroundJobClient.cs", label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="398-398"];
m1_237 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="BackgroundJobClient.cs", label=Redis, span="396-396"];
m1_239 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="BackgroundJobClient.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="399-399"];
m1_242 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="BackgroundJobClient.cs", label="return JobState.Apply(\r\n                    Redis,\r\n                    jobId,\r\n                    new EnqueuedState(''The job has been enqueued by a user.'', queue),\r\n                    ScheduledState.Name);", span="406-410"];
m1_240 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="BackgroundJobClient.cs", label="String.IsNullOrEmpty(queue)", span="401-401"];
m1_241 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="BackgroundJobClient.cs", label="return false;", span="403-403"];
m1_243 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="BackgroundJobClient.cs", label="Exit HangFire.Web.JobStorage.EnqueueScheduled(string)", span="394-394"];
m1_174 [cluster="HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="BackgroundJobClient.cs", label="Entry HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4"];
m1_317 [cluster="System.DateTime.AddDays(double)", file="BackgroundJobClient.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m1_41 [cluster="lambda expression", file="BackgroundJobClient.cs", label="x.Value.StartedAt", span="76-76"];
m1_360 [cluster="Unk.TrueForAll", file="BackgroundJobClient.cs", label="Entry Unk.TrueForAll", span=""];
m1_318 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="483-483"];
m1_32 [cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="BackgroundJobClient.cs", label="Entry HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="34-34"];
m1_64 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="104-106"];
m1_69 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="107-107"];
m1_70 [cluster="lambda expression", color=green, community=0, file="BackgroundJobClient.cs", label="jobs.Add(job.Key, x)", prediction=2, span="107-107"];
m1_71 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="107-107"];
m1_73 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="110-112"];
m1_77 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="113-113"];
m1_74 [cluster="lambda expression", color=green, community=0, file="BackgroundJobClient.cs", label="x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State'')", prediction=2, span="110-112"];
m1_75 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="110-112"];
m1_84 [cluster="lambda expression", file="BackgroundJobClient.cs", label="new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="121-129"];
m1_142 [cluster="lambda expression", file="BackgroundJobClient.cs", label="new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="209-219"];
m1_152 [cluster="lambda expression", file="BackgroundJobClient.cs", label="new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="237-244"];
m1_195 [cluster="lambda expression", file="BackgroundJobClient.cs", label="new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        }", span="284-290"];
m1_204 [cluster="lambda expression", file="BackgroundJobClient.cs", label="new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="320-326"];
m1_212 [cluster="lambda expression", file="BackgroundJobClient.cs", label="new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    }", span="344-352"];
m1_130 [cluster="lambda expression", file="BackgroundJobClient.cs", label="new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }", span="184-191"];
m1_80 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="120-120"];
m1_83 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="121-129"];
m1_65 [cluster="lambda expression", file="BackgroundJobClient.cs", label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' })", span="104-106"];
m1_78 [cluster="lambda expression", file="BackgroundJobClient.cs", label="states.Add(job.Key, x)", span="113-113"];
m1_66 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="104-106"];
m1_120 [cluster="lambda expression", file="BackgroundJobClient.cs", label="servers.Add(name, x)", span="173-173"];
m1_127 [cluster="lambda expression", file="BackgroundJobClient.cs", label="queues.Add(name, x)", span="178-178"];
m1_343 [cluster="lambda expression", file="BackgroundJobClient.cs", label="jobs.Add(id, x)", span="522-522"];
m1_351 [cluster="lambda expression", file="BackgroundJobClient.cs", label="states.Add(id, x)", span="528-528"];
m1_79 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="113-113"];
m1_117 [cluster="lambda expression", file="BackgroundJobClient.cs", label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="170-172"];
m1_123 [cluster="lambda expression", file="BackgroundJobClient.cs", label="x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name))", span="176-177"];
m1_177 [cluster="lambda expression", file="BackgroundJobClient.cs", label="x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="264-265"];
m1_183 [cluster="lambda expression", file="BackgroundJobClient.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="269-269"];
m1_189 [cluster="lambda expression", file="BackgroundJobClient.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="273-273"];
m1_322 [cluster="lambda expression", file="BackgroundJobClient.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="484-484"];
m1_427 [cluster="lambda expression", file="BackgroundJobClient.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="594-594"];
m1_339 [cluster="lambda expression", file="BackgroundJobClient.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties)", span="521-521"];
m1_347 [cluster="lambda expression", file="BackgroundJobClient.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="527-527"];
m1_141 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="209-219"];
m1_151 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="237-244"];
m1_203 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="320-326"];
m1_211 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="344-352"];
m1_85 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="121-129"];
m1_143 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="209-219"];
m1_153 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="237-244"];
m1_194 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="284-290"];
m1_196 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="284-290"];
m1_205 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="320-326"];
m1_213 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="344-352"];
m1_129 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="184-191"];
m1_131 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="184-191"];
m1_82 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="120-120"];
m1_81 [cluster="lambda expression", file="BackgroundJobClient.cs", label="job.Key", span="120-120"];
m1_116 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="170-172"];
m1_119 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="173-173"];
m1_122 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="176-177"];
m1_126 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="178-178"];
m1_176 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="264-265"];
m1_179 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="266-266"];
m1_182 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="269-269"];
m1_185 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="270-270"];
m1_188 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="273-273"];
m1_191 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="274-274"];
m1_338 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="521-521"];
m1_341 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="522-522"];
m1_346 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="527-527"];
m1_349 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="528-528"];
m1_387 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="567-567"];
m1_391 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="568-568"];
m1_394 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="571-571"];
m1_397 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="572-572"];
m1_400 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="575-575"];
m1_403 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="576-576"];
m1_406 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="579-579"];
m1_409 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="580-580"];
m1_412 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="583-583"];
m1_416 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="584-584"];
m1_420 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="587-587"];
m1_423 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="588-588"];
m1_426 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="594-594"];
m1_429 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="595-595"];
m1_121 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="173-173"];
m1_128 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="178-178"];
m1_342 [cluster="lambda expression", file="BackgroundJobClient.cs", label="!jobs.ContainsKey(id)", span="522-522"];
m1_344 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="522-522"];
m1_350 [cluster="lambda expression", file="BackgroundJobClient.cs", label="!states.ContainsKey(id)", span="528-528"];
m1_352 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="528-528"];
m1_118 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="170-172"];
m1_124 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="176-177"];
m1_178 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="264-265"];
m1_184 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="269-269"];
m1_190 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="273-273"];
m1_321 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="484-484"];
m1_323 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="484-484"];
m1_428 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="594-594"];
m1_340 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="521-521"];
m1_348 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="527-527"];
m1_259 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="435-435"];
m1_263 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="435-435"];
m1_266 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="435-435"];
m1_181 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="266-266"];
m1_180 [cluster="lambda expression", file="BackgroundJobClient.cs", label="firstJobIds = x", span="266-266"];
m1_187 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="270-270"];
m1_186 [cluster="lambda expression", file="BackgroundJobClient.cs", label="length = x", span="270-270"];
m1_193 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="274-274"];
m1_192 [cluster="lambda expression", file="BackgroundJobClient.cs", label="dequeued = x", span="274-274"];
m1_357 [cluster="lambda expression", file="BackgroundJobClient.cs", label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State))", span="542-544"];
m1_354 [cluster="lambda expression", file="BackgroundJobClient.cs", label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="536-541"];
m1_392 [cluster="lambda expression", file="BackgroundJobClient.cs", label="stats.Servers = x", span="568-568"];
m1_398 [cluster="lambda expression", file="BackgroundJobClient.cs", label="stats.Queues = x", span="572-572"];
m1_404 [cluster="lambda expression", file="BackgroundJobClient.cs", label="stats.Scheduled = x", span="576-576"];
m1_410 [cluster="lambda expression", file="BackgroundJobClient.cs", label="stats.Processing = x", span="580-580"];
m1_417 [cluster="lambda expression", file="BackgroundJobClient.cs", label="stats.Succeeded = long.Parse(x ?? ''0'')", span="584-584"];
m1_424 [cluster="lambda expression", file="BackgroundJobClient.cs", label="stats.Failed = x", span="588-588"];
m1_430 [cluster="lambda expression", file="BackgroundJobClient.cs", label="stats.Enqueued += x", span="595-595"];
m1_389 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="567-567"];
m1_388 [cluster="lambda expression", file="BackgroundJobClient.cs", label="x.GetSetCount(''hangfire:servers'')", span="567-567"];
m1_393 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="568-568"];
m1_396 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="571-571"];
m1_395 [cluster="lambda expression", file="BackgroundJobClient.cs", label="x.GetSetCount(''hangfire:queues'')", span="571-571"];
m1_399 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="572-572"];
m1_402 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="575-575"];
m1_401 [cluster="lambda expression", file="BackgroundJobClient.cs", label="x.GetSortedSetCount(''hangfire:schedule'')", span="575-575"];
m1_405 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="576-576"];
m1_408 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="579-579"];
m1_407 [cluster="lambda expression", file="BackgroundJobClient.cs", label="x.GetSortedSetCount(''hangfire:processing'')", span="579-579"];
m1_411 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="580-580"];
m1_414 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="583-583"];
m1_413 [cluster="lambda expression", file="BackgroundJobClient.cs", label="x.GetValue(''hangfire:stats:succeeded'')", span="583-583"];
m1_418 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="584-584"];
m1_422 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="587-587"];
m1_421 [cluster="lambda expression", file="BackgroundJobClient.cs", label="x.GetSortedSetCount(''hangfire:failed'')", span="587-587"];
m1_425 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="588-588"];
m1_431 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="595-595"];
m1_260 [cluster="lambda expression", file="BackgroundJobClient.cs", label="!hiddenProperties.Contains(x.Key)", span="435-435"];
m1_261 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="435-435"];
m1_265 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="435-435"];
m1_264 [cluster="lambda expression", file="BackgroundJobClient.cs", label="x.Key", span="435-435"];
m1_268 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="435-435"];
m1_267 [cluster="lambda expression", file="BackgroundJobClient.cs", label="x.Value", span="435-435"];
m1_353 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="536-541"];
m1_356 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="542-544"];
m1_358 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="542-544"];
m1_362 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="544-544"];
m1_355 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="536-541"];
m1_294 [cluster="lambda expression", file="BackgroundJobClient.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="452-452"];
m1_293 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Entry lambda expression", span="452-452"];
m1_364 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="544-544"];
m1_363 [cluster="lambda expression", file="BackgroundJobClient.cs", label="y == null", span="544-544"];
m1_295 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="452-452"];
m1_319 [cluster="lambda expression", file="BackgroundJobClient.cs", label="x.ToString(''yyyy-MM-dd'')", span="483-483"];
m1_320 [cluster="lambda expression", file="BackgroundJobClient.cs", label="Exit lambda expression", span="483-483"];
m1_28 [cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="BackgroundJobClient.cs", label="throw new CreateJobFailedException(''Job creation process has bee failed. See inner exception for details'', ex);", span="95-95"];
m1_175 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BackgroundJobClient.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_115 [cluster="Unk.ToList", file="BackgroundJobClient.cs", label="Entry Unk.ToList", span=""];
m1_67 [cluster="Unk.Format", file="BackgroundJobClient.cs", label="Entry Unk.Format", span=""];
m1_220 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="BackgroundJobClient.cs", label="Entry HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364"];
m1_222 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="BackgroundJobClient.cs", label="return GetHourlyTimelineStats(Redis, ''failed'');", span="368-368"];
m1_221 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="BackgroundJobClient.cs", label=Redis, span="366-366"];
m1_223 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="BackgroundJobClient.cs", label="Exit HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364"];
m1_61 [cluster="Unk.QueueCommand", file="BackgroundJobClient.cs", label="Entry Unk.QueueCommand", span=""];
m1_135 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="BackgroundJobClient.cs", label="Entry HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195"];
m1_138 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="BackgroundJobClient.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    failedJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'' },\r\n                    (job, state) => new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="204-219"];
m1_137 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="BackgroundJobClient.cs", label="var failedJobIds = Redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1)", span="199-202"];
m1_136 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="BackgroundJobClient.cs", label=Redis, span="197-197"];
m1_139 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="BackgroundJobClient.cs", label="Exit HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195"];
m1_2 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", file="BackgroundJobClient.cs", label="Entry HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", span="49-49"];
m1_3 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", file="BackgroundJobClient.cs", label="Exit HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", span="49-49"];
m1_144 [cluster="HangFire.Web.FailedJobDto.FailedJobDto()", file="BackgroundJobClient.cs", label="Entry HangFire.Web.FailedJobDto.FailedJobDto()", span="5-5"];
m1_87 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="BackgroundJobClient.cs", label="Entry HangFire.JobHelper.FromTimestamp(long)", span="50-50"];
m1_296 [cluster="System.DateTime.ToString(string)", file="BackgroundJobClient.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m1_145 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="BackgroundJobClient.cs", label="Entry HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223"];
m1_148 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="BackgroundJobClient.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    succeededJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''SucceededAt'', ''State'' },\r\n                    (job, state) => new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="232-244"];
m1_147 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="BackgroundJobClient.cs", label="var succeededJobIds = Redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1)", span="227-230"];
m1_146 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="BackgroundJobClient.cs", label=Redis, span="225-225"];
m1_149 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="BackgroundJobClient.cs", label="Exit HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223"];
m1_172 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="BackgroundJobClient.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m1_290 [cluster="Unk.ElementAt", file="BackgroundJobClient.cs", label="Entry Unk.ElementAt", span=""];
m1_150 [cluster="Unk.GetRangeFromList", file="BackgroundJobClient.cs", label="Entry Unk.GetRangeFromList", span=""];
m1_155 [cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs", label="Entry HangFire.Web.JobStorage.Queues()", span="248-248"];
m1_164 [cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x)", span="263-266"];
m1_165 [cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x)", span="268-270"];
m1_166 [cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => dequeued = x)", span="272-274"];
m1_163 [cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs", label="var pipeline = Redis.CreatePipeline()", span="261-261"];
m1_159 [cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs", label=queues, span="255-255"];
m1_168 [cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs", label="var jobs = GetJobsWithProperties(\r\n                        Redis,\r\n                        firstJobIds,\r\n                        new[] { ''Type'', ''Args'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, state) => new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="279-290"];
m1_169 [cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Dequeued = dequeued\r\n                    })", span="292-298"];
m1_167 [cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs", label="pipeline.Flush()", span="276-276"];
m1_162 [cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs", label="long dequeued = 0", span="259-259"];
m1_157 [cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs", label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="252-252"];
m1_158 [cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="253-253"];
m1_160 [cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs", label="IList<string> firstJobIds = null", span="257-257"];
m1_170 [cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs", label="return result;", span="301-301"];
m1_161 [cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs", label="long length = 0", span="258-258"];
m1_156 [cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs", label=Redis, span="250-250"];
m1_171 [cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs", label="Exit HangFire.Web.JobStorage.Queues()", span="248-248"];
m1_88 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="BackgroundJobClient.cs", label="Entry HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133"];
m1_90 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="BackgroundJobClient.cs", label="return GetTimelineStats(Redis, ''succeeded'');", span="137-137"];
m1_89 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="BackgroundJobClient.cs", label=Redis, span="135-135"];
m1_91 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="BackgroundJobClient.cs", label="Exit HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133"];
m1_154 [cluster="HangFire.Web.SucceededJobDto.SucceededJobDto()", file="BackgroundJobClient.cs", label="Entry HangFire.Web.SucceededJobDto.SucceededJobDto()", span="5-5"];
m1_62 [cluster="Unk.Flush", file="BackgroundJobClient.cs", label="Entry Unk.Flush", span=""];
m1_419 [cluster="Unk.Parse", file="BackgroundJobClient.cs", label="Entry Unk.Parse", span=""];
m1_72 [cluster="Unk.Add", file="BackgroundJobClient.cs", label="Entry Unk.Add", span=""];
m1_97 [cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs", label="Entry HangFire.Web.JobStorage.Servers()", span="149-149"];
m1_107 [cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x))", span="169-173"];
m1_108 [cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x))", span="175-178"];
m1_102 [cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs", label="var servers = new Dictionary<string, List<string>>()", span="160-160"];
m1_103 [cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs", label="var queues = new Dictionary<string, List<string>>()", span="161-161"];
m1_104 [cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs", label="var pipeline = Redis.CreatePipeline()", span="163-163"];
m1_106 [cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs", label="var name = serverName", span="167-167"];
m1_105 [cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs", label=serverNames, span="165-165"];
m1_100 [cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs", label="serverNames.Count == 0", span="155-155"];
m1_110 [cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs", label="return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }).ToList();", span="184-191"];
m1_109 [cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs", label="pipeline.Flush()", span="181-181"];
m1_99 [cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs", label="var serverNames = Redis.GetAllItemsFromSet(''hangfire:servers'')", span="153-153"];
m1_101 [cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs", label="return new List<ServerDto>();", span="157-157"];
m1_98 [cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs", label=Redis, span="151-151"];
m1_111 [cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs", label="Exit HangFire.Web.JobStorage.Servers()", span="149-149"];
m1_369 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs", label="Entry HangFire.Web.JobStorage.GetStatistics()", span="556-556"];
m1_374 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x)", span="566-568"];
m1_375 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x)", span="570-572"];
m1_376 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x)", span="574-576"];
m1_377 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x)", span="578-580"];
m1_378 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''))", span="582-584"];
m1_379 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x)", span="586-588"];
m1_382 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", span="593-595"];
m1_373 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs", label="var pipeline = Redis.CreatePipeline()", span="564-564"];
m1_371 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs", label="var stats = new StatisticsDto()", span="560-560"];
m1_380 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs", label=queues, span="590-590"];
m1_381 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs", label="var queueName = queue", span="592-592"];
m1_383 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs", label="pipeline.Flush()", span="598-598"];
m1_372 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs", label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="562-562"];
m1_370 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs", label=Redis, span="558-558"];
m1_384 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs", label="return stats;", span="601-601"];
m1_385 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs", label="Exit HangFire.Web.JobStorage.GetStatistics()", span="556-556"];
m1_365 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="BackgroundJobClient.cs", label="Entry HangFire.Web.JobStorage.SucceededListCount()", span="548-548"];
m1_367 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="BackgroundJobClient.cs", label="return Redis.GetListCount(''hangfire:succeeded'');", span="552-552"];
m1_366 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="BackgroundJobClient.cs", label=Redis, span="550-550"];
m1_368 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="BackgroundJobClient.cs", label="Exit HangFire.Web.JobStorage.SucceededListCount()", span="548-548"];
m1_215 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="BackgroundJobClient.cs", label="Entry HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356"];
m1_217 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="BackgroundJobClient.cs", label="return GetHourlyTimelineStats(Redis, ''succeeded'');", span="360-360"];
m1_216 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="BackgroundJobClient.cs", label=Redis, span="358-358"];
m1_218 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="BackgroundJobClient.cs", label="Exit HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356"];
m1_235 [cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", file="BackgroundJobClient.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", span="51-51"];
m1_288 [cluster="System.DateTime.AddHours(double)", file="BackgroundJobClient.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m1_92 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="Entry HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="470-470"];
m1_307 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="var result = new Dictionary<DateTime, long>()", span="488-488"];
m1_306 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="486-486"];
m1_308 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="var i = 0", span="489-489"];
m1_313 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="result.Add(dates[i], value)", span="496-496"];
m1_315 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="return result;", span="499-499"];
m1_298 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="var endDate = DateTime.UtcNow.Date", span="473-473"];
m1_305 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="484-484"];
m1_311 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="492-492"];
m1_309 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="i < stringDates.Count", span="489-489"];
m1_314 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="i++", span="489-489"];
m1_300 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="var dates = new List<DateTime>()", span="475-475"];
m1_312 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="value = 0", span="494-494"];
m1_302 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="dates.Add(endDate)", span="479-479"];
m1_299 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="var startDate = endDate.AddDays(-7)", span="474-474"];
m1_301 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="startDate <= endDate", span="477-477"];
m1_303 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="endDate = endDate.AddDays(-1)", span="480-480"];
m1_304 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="483-483"];
m1_310 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="long value", span="491-491"];
m1_316 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs", label="Exit HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="470-470"];
m1_15 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs", label="_process = process", span="77-77"];
m1_16 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs", label="Exit HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", span="66-66"];
m1_18 [cluster="HangFire.JobStorage.GetConnection()", file="BackgroundJobClient.cs", label="Entry HangFire.JobStorage.GetConnection()", span="56-56"];
m1_255 [cluster="HangFire.Web.JobDetailsDto.JobDetailsDto()", file="BackgroundJobClient.cs", label="Entry HangFire.Web.JobDetailsDto.JobDetailsDto()", span="4-4"];
m1_244 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="BackgroundJobClient.cs", label="Entry HangFire.Web.JobStorage.JobDetails(string)", span="414-414"];
m1_246 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="BackgroundJobClient.cs", label="var job = Redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="418-418"];
m1_250 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="BackgroundJobClient.cs", label="var historyList = Redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="423-424"];
m1_252 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="BackgroundJobClient.cs", label="return new JobDetailsDto\r\n                {\r\n                    Type = job[''Type''],\r\n                    Arguments = JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']),\r\n                    State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                    Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = history\r\n                };", span="430-437"];
m1_245 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="BackgroundJobClient.cs", label=Redis, span="416-416"];
m1_247 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="BackgroundJobClient.cs", label="job.Count == 0", span="419-419"];
m1_249 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="BackgroundJobClient.cs", label="var hiddenProperties = new[] { ''Type'', ''Args'', ''State'' }", span="421-421"];
m1_251 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="BackgroundJobClient.cs", label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", span="426-428"];
m1_248 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="BackgroundJobClient.cs", label="return null;", span="419-419"];
m1_253 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="BackgroundJobClient.cs", label="Exit HangFire.Web.JobStorage.JobDetails(string)", span="414-414"];
m1_292 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="BackgroundJobClient.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m1_7 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs", label="storage == null", span="71-71"];
m1_6 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs", label="Entry HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", span="66-66"];
m1_8 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs", label="throw new ArgumentNullException(''storage'');", span="71-71"];
m1_254 [cluster="Unk.GetAllEntriesFromHash", file="BackgroundJobClient.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m1_63 [cluster="Unk.ToDictionary", file="BackgroundJobClient.cs", label="Entry Unk.ToDictionary", span=""];
m1_337 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="BackgroundJobClient.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0"];
m1_390 [cluster="Unk.GetSetCount", file="BackgroundJobClient.cs", label="Entry Unk.GetSetCount", span=""];
m1_206 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="BackgroundJobClient.cs", label="Entry HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330"];
m1_209 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="BackgroundJobClient.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'', ''State'', ''CreatedAt'', ''Fetched'', ''Checked'' },\r\n                    null,\r\n                    (job, state) => new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    });", span="339-352"];
m1_208 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="BackgroundJobClient.cs", label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1)", span="335-337"];
m1_207 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="BackgroundJobClient.cs", label=Redis, span="333-333"];
m1_210 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="BackgroundJobClient.cs", label="Exit HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330"];
m1_9 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs", label="stateMachineFactory == null", span="72-72"];
m1_10 [cluster="Unk.GetListCount", file="BackgroundJobClient.cs", label="Entry Unk.GetListCount", span=""];
m1_19 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="BackgroundJobClient.cs", label="Entry HangFire.Web.JobStorage.ProcessingCount()", span="44-44"];
m1_20 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="BackgroundJobClient.cs", label=Redis, span="46-46"];
m1_22 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="BackgroundJobClient.cs", label="Exit HangFire.Web.JobStorage.ProcessingCount()", span="44-44"];
m1_21 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="BackgroundJobClient.cs", label="return Redis.GetSortedSetCount(''hangfire:processing'');", span="48-48"];
m1_93 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="BackgroundJobClient.cs", label="Entry HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141"];
m1_95 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="BackgroundJobClient.cs", label="return GetTimelineStats(Redis, ''failed'');", span="145-145"];
m1_94 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="BackgroundJobClient.cs", label=Redis, span="143-143"];
m1_96 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="BackgroundJobClient.cs", label="Exit HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141"];
m1_256 [cluster="Unk.>", file="BackgroundJobClient.cs", label="Entry Unk.>", span=""];
m1_86 [cluster="HangFire.Web.ScheduleDto.ScheduleDto()", file="BackgroundJobClient.cs", label="Entry HangFire.Web.ScheduleDto.ScheduleDto()", span="5-5"];
m1_59 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BackgroundJobClient.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_233 [cluster="string.IsNullOrEmpty(string)", file="BackgroundJobClient.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_289 [cluster="Unk.GetValuesMap", file="BackgroundJobClient.cs", label="Entry Unk.GetValuesMap", span=""];
m1_125 [cluster="Unk.GetAllItemsFromList", file="BackgroundJobClient.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m1_262 [cluster="Unk.Contains", file="BackgroundJobClient.cs", label="Entry Unk.Contains", span=""];
m1_114 [cluster="Unk.Select", file="BackgroundJobClient.cs", label="Entry Unk.Select", span=""];
m1_112 [cluster="Unk.GetAllItemsFromSet", file="BackgroundJobClient.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m1_140 [cluster="Unk.GetRangeFromSortedSetDesc", file="BackgroundJobClient.cs", label="Entry Unk.GetRangeFromSortedSetDesc", span=""];
m1_415 [cluster="Unk.GetValue", file="BackgroundJobClient.cs", label="Entry Unk.GetValue", span=""];
m1_68 [cluster="Unk.GetValuesFromHash", file="BackgroundJobClient.cs", label="Entry Unk.GetValuesFromHash", span=""];
m1_224 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="BackgroundJobClient.cs", label="Entry HangFire.Web.JobStorage.RetryJob(string)", span="372-372"];
m1_226 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="BackgroundJobClient.cs", label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="376-376"];
m1_225 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="BackgroundJobClient.cs", label=Redis, span="374-374"];
m1_227 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="BackgroundJobClient.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="378-378"];
m1_230 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="BackgroundJobClient.cs", label="return JobState.Apply(\r\n                    Redis,\r\n                    jobId,\r\n                    new EnqueuedState(''The job has been retried by a user.'', queue),\r\n                    FailedState.Name);", span="386-390"];
m1_228 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="BackgroundJobClient.cs", label="String.IsNullOrEmpty(queue)", span="379-379"];
m1_229 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="BackgroundJobClient.cs", label="return false;", span="381-381"];
m1_231 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="BackgroundJobClient.cs", label="Exit HangFire.Web.JobStorage.RetryJob(string)", span="372-372"];
m1_198 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="BackgroundJobClient.cs", label="Entry HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305"];
m1_201 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="BackgroundJobClient.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, state) => new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="315-326"];
m1_200 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="BackgroundJobClient.cs", label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1)", span="310-313"];
m1_199 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="BackgroundJobClient.cs", label=Redis, span="308-308"];
m1_202 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="BackgroundJobClient.cs", label="Exit HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305"];
m1_432 [file="BackgroundJobClient.cs", label=job, span=""];
m1_433 [file="BackgroundJobClient.cs", label=jobs, span=""];
m1_434 [file="BackgroundJobClient.cs", label=states, span=""];
m1_436 [file="BackgroundJobClient.cs", label=servers, span=""];
m1_437 [file="BackgroundJobClient.cs", label=queues, span=""];
m1_435 [file="BackgroundJobClient.cs", label=name, span=""];
m1_443 [file="BackgroundJobClient.cs", label=id, span=""];
m1_444 [file="BackgroundJobClient.cs", label=jobs, span=""];
m1_446 [file="BackgroundJobClient.cs", label=states, span=""];
m1_438 [file="BackgroundJobClient.cs", label=queue, span=""];
m1_441 [file="BackgroundJobClient.cs", label=string, span=""];
m1_449 [file="BackgroundJobClient.cs", label=queueName, span=""];
m1_442 [file="BackgroundJobClient.cs", label="string[]", span=""];
m1_445 [file="BackgroundJobClient.cs", label="string[]", span=""];
m1_447 [file="BackgroundJobClient.cs", label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span=""];
m1_448 [file="BackgroundJobClient.cs", label=stats, span=""];
m1_439 [file="BackgroundJobClient.cs", label=hiddenProperties, span=""];
m1_440 [file="BackgroundJobClient.cs", label=string, span=""];
m3_7 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", file="BackgroundJobFacts.cs", label="Entry HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", span="18-18"];
m3_8 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", file="BackgroundJobFacts.cs", label="var stateMock = new Mock<State>()", span="20-20"];
m3_9 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", file="BackgroundJobFacts.cs", label="stateMock.CallBase = true", span="21-21"];
m3_10 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", file="BackgroundJobFacts.cs", label="Assert.Empty(stateMock.Object.SerializeData())", span="23-23"];
m3_11 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", file="BackgroundJobFacts.cs", label="Exit HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", span="18-18"];
m3_5 [cluster="Mock<State>.cstr", file="BackgroundJobFacts.cs", label="Entry Mock<State>.cstr", span=""];
m3_6 [cluster="Unk.False", file="BackgroundJobFacts.cs", label="Entry Unk.False", span=""];
m3_13 [cluster="Unk.Empty", file="BackgroundJobFacts.cs", label="Entry Unk.Empty", span=""];
m3_12 [cluster="Unk.SerializeData", file="BackgroundJobFacts.cs", label="Entry Unk.SerializeData", span=""];
m3_0 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", file="BackgroundJobFacts.cs", label="Entry HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", span="9-9"];
m3_1 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", file="BackgroundJobFacts.cs", label="var stateMock = new Mock<State>()", span="11-11"];
m3_2 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", file="BackgroundJobFacts.cs", label="stateMock.CallBase = true", span="12-12"];
m3_3 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", file="BackgroundJobFacts.cs", label="Assert.False(stateMock.Object.ExpireJobOnApply)", span="14-14"];
m3_4 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", file="BackgroundJobFacts.cs", label="Exit HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", span="9-9"];
m4_30 [cluster="HangFire.Storage.IMonitoringApi.FailedByDatesCount()", file="DashboardPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.FailedByDatesCount()", span="48-48"];
m4_33 [cluster="HangFire.Web.RazorPage.Write(object)", file="DashboardPage.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m4_25 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="DashboardPage.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m4_31 [cluster="HangFire.Storage.IMonitoringApi.HourlySucceededJobs()", file="DashboardPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.HourlySucceededJobs()", span="49-49"];
m4_27 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="DashboardPage.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m4_26 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="DashboardPage.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m4_35 [cluster="Unk.Write", file="DashboardPage.generated.cs", label="Entry Unk.Write", span=""];
m4_34 [cluster="Unk.SerializeObject", file="DashboardPage.generated.cs", label="Entry Unk.SerializeObject", span=""];
m4_29 [cluster="HangFire.Storage.IMonitoringApi.SucceededByDatesCount()", file="DashboardPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.SucceededByDatesCount()", span="47-47"];
m4_32 [cluster="HangFire.Storage.IMonitoringApi.HourlyFailedJobs()", file="DashboardPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.HourlyFailedJobs()", span="50-50"];
m4_28 [cluster="Unk.Equals", file="DashboardPage.generated.cs", label="Entry Unk.Equals", span=""];
m4_0 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="Entry HangFire.Web.Pages.DashboardPage.Execute()", span="51-51"];
m4_1 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="WriteLiteral(''\r\n'')", span="55-55"];
m4_2 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="Layout = new LayoutPage { Title = ''Dashboard'' }", span="67-67"];
m4_3 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="IDictionary<DateTime, long> succeeded = null", span="68-68"];
m4_4 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="IDictionary<DateTime, long> failed = null", span="69-69"];
m4_18 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="succeeded != null && failed != null", span="119-119"];
m4_20 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="Write(JsonConvert.SerializeObject(succeeded))", span="130-130"];
m4_5 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="var period = Request.QueryString[''period'']?? ''day''", span="71-71"];
m4_22 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="Write(JsonConvert.SerializeObject(failed))", span="140-140"];
m4_14 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="Write(''day''.Equals(period, StringComparison.OrdinalIgnoreCase) ? ''active'' : null)", span="98-98"];
m4_16 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="Write(''week''.Equals(period, StringComparison.OrdinalIgnoreCase) ? ''active'' : null)", span="109-109"];
m4_13 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="WriteLiteral(''\r\n<h3>Realtime graph</h3>\r\n<div id=\''realtimeGraph\''></div>\r\n\r\n<h3>\r\n    <div class'' +\r\n''=\''btn-group pull-right\'' style=\''margin-top: 2px;\''>\r\n        <a href=\''?period=day\'''' +\r\n'' class=\''btn btn-sm btn-default '')", span="91-93"];
m4_15 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="WriteLiteral(''\''>\r\n            Day\r\n        </a>\r\n        <a href=\''?period=week\'' class=\''btn btn-'' +\r\n''sm btn-default '')", span="103-104"];
m4_17 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="WriteLiteral(''\''>Week</a>\r\n    </div>\r\n    History graph\r\n</h3>\r\n\r\n'')", span="114-114"];
m4_19 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="WriteLiteral(''    <div id=\''historyGraph\'' \r\n          data-succeeded=\'''')", span="125-125"];
m4_21 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="WriteLiteral(''\'' \r\n          data-failed=\'''')", span="135-135"];
m4_23 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="WriteLiteral(''\''>\r\n    </div>\r\n'')", span="145-145"];
m4_24 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="Exit HangFire.Web.Pages.DashboardPage.Execute()", span="51-51"];
m4_36 [file="DashboardPage.generated.cs", label="HangFire.Web.Pages.DashboardPage", span=""];
m5_64 [cluster="HangFire.Web.RazorPage.Write(object)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m5_23 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Write(job.Value != null && job.Value.InDeletedState && job.Value != null ? ''hover'' : null)", prediction=7, span="180-180"];
m5_21 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Write(job.Value != null && !job.Value.InDeletedState ? ''obsolete-data'' : null)", prediction=7, span="170-170"];
m5_26 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="WriteLiteral(''                                <input type=\''checkbox\'' class=\''js-jobs-list-checkb'' +\r\n''ox\'' name=\''jobs[]\'' value=\'''')", prediction=7, span="196-197"];
m5_22 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="WriteLiteral('' '')", prediction=7, span="175-175"];
m5_61 [cluster="HangFire.Storage.IMonitoringApi.DeletedListCount()", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.DeletedListCount()", span="45-45"];
m5_0 [cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", span="13-13"];
m5_2 [cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="DeletedJobsPage.generated.cs", label="Exit HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", span="13-13"];
m5_4 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="Entry lambda expression", span="16-16"];
m5_8 [cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Entry HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", prediction=11, span="20-20"];
m5_54 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Write(RenderPartial(new Paginator(pager)))", prediction=7, span="381-381"];
m5_6 [cluster="lambda expression", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Exit lambda expression", prediction=13, span="16-16"];
m5_7 [cluster="HangFire.Client.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Entry HangFire.Client.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", prediction=14, span="26-26"];
m5_19 [cluster="Mock<IStorageConnection>.cstr", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Entry Mock<IStorageConnection>.cstr", prediction=7, span=""];
m5_53 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="WriteLiteral(''            </tbody>\r\n        </table>\r\n    </div>\r\n'')", prediction=7, span="370-370"];
m5_18 [cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Exit HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", prediction=7, span="20-20"];
m5_52 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", label="WriteLiteral(''                    </tr>\r\n'')", span="360-360"];
m5_20 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", prediction=7, span="119-119"];
m5_24 [cluster="CreateContext.cstr", file="DeletedJobsPage.generated.cs", label="Entry CreateContext.cstr", span=""];
m5_25 [cluster="Unk.True", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Entry Unk.True", prediction=7, span=""];
m5_29 [cluster="lambda expression", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Exit lambda expression", prediction=7, span="23-23"];
m5_27 [cluster="lambda expression", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Entry lambda expression", prediction=7, span="23-23"];
m5_30 [cluster="HangFire.Core.Tests.Client.CreatedContextFacts.TestMethod()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Entry HangFire.Core.Tests.Client.CreatedContextFacts.TestMethod()", prediction=7, span="36-36"];
m5_31 [cluster="HangFire.Core.Tests.Client.CreatedContextFacts.TestMethod()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Exit HangFire.Core.Tests.Client.CreatedContextFacts.TestMethod()", prediction=7, span="36-36"];
m5_32 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Write(HtmlHelper.JobId(job.Key))", prediction=7, span="233-233"];
m5_33 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", label="WriteLiteral(''\r\n                            </a>\r\n'')", span="238-238"];
m5_34 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="job.Value != null && !job.Value.InDeletedState", prediction=7, span="243-243"];
m5_35 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", prediction=7, span="249-250"];
m5_36 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", label="WriteLiteral(''                        </td>\r\n\r\n'')", span="260-260"];
m5_37 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="job.Value == null", prediction=7, span="265-265"];
m5_38 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="WriteLiteral(''                            <td colspan=\''2\''>\r\n                                <em'' +\r\n''>Job was expired.</em>\r\n                            </td>\r\n'')", prediction=7, span="271-272"];
m5_39 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="WriteLiteral(''                            <td>\r\n                                <a class=\''job-m'' +\r\n''ethod\'' href=\'''')", prediction=7, span="284-285"];
m5_40 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", prediction=7, span="290-290"];
m5_41 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                                    '')", prediction=7, span="295-295"];
m5_42 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", prediction=7, span="300-300"];
m5_43 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=1, file="DeletedJobsPage.generated.cs", label="WriteLiteral(''\r\n                                </a>\r\n                            </td>\r\n'')", prediction=7, span="305-305"];
m5_45 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="job.Value.DeletedAt.HasValue", prediction=7, span="314-314"];
m5_44 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", label="WriteLiteral(''                            <td class=\''align-right\''>\r\n'')", span="309-309"];
m5_46 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="WriteLiteral(''                                    <span data-moment=\'''')", prediction=7, span="320-320"];
m5_51 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", label="WriteLiteral(''                            </td>\r\n'')", span="350-350"];
m5_47 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.DeletedAt.Value))", prediction=7, span="325-325"];
m5_48 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                                        '')", prediction=7, span="330-330"];
m5_49 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Write(job.Value.DeletedAt)", prediction=7, span="335-335"];
m5_50 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", label="WriteLiteral(''\r\n                                    </span>\r\n'')", span="340-340"];
m5_3 [cluster="Unk.>", file="DeletedJobsPage.generated.cs", label="Entry Unk.>", span=""];
m5_55 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", label="Exit HangFire.Web.Pages.DeletedJobsPage.Execute()", span="53-53"];
m5_60 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m5_58 [cluster="Unk.TryParse", file="DeletedJobsPage.generated.cs", label="Entry Unk.TryParse", span=""];
m5_56 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m5_66 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m5_63 [cluster="HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", span="36-36"];
m5_65 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m5_70 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m5_67 [cluster="Unk.Write", file="DeletedJobsPage.generated.cs", label="Entry Unk.Write", span=""];
m5_68 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m5_59 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="DeletedJobsPage.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m5_57 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m5_62 [cluster="HttpRequestBase.LinkTo(string)", file="DeletedJobsPage.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m5_69 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m5_71 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m5_72 [file="DeletedJobsPage.generated.cs", label="HangFire.Web.Pages.DeletedJobsPage", span=""];
m6_61 [cluster="HangFire.Web.RazorPage.Write(object)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m6_5 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="int.TryParse(Request.QueryString[''count''], out perPage)", span="93-93"];
m6_0 [cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", span="24-24"];
m6_1 [cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", color=green, community=0, file="EnqueuedJobsPage.generated.cs", label="innerComponent == null", prediction=39, span="26-26"];
m6_2 [cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", color=green, community=0, file="EnqueuedJobsPage.generated.cs", label="throw new ArgumentNullException(''innerComponent'');", prediction=40, span="26-26"];
m6_3 [cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", color=green, community=0, file="EnqueuedJobsPage.generated.cs", label="InnerComponent = innerComponent", prediction=41, span="27-27"];
m6_4 [cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", file="EnqueuedJobsPage.generated.cs", label="Exit Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", span="24-24"];
m6_9 [cluster="Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", color=green, community=0, file="EnqueuedJobsPage.generated.cs", label="InnerComponent.Execute(cancellationToken)", prediction=42, span="37-37"];
m6_7 [cluster="Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", color=green, community=0, file="EnqueuedJobsPage.generated.cs", label=true, prediction=43, span="34-34"];
m6_8 [cluster="Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", color=green, community=0, file="EnqueuedJobsPage.generated.cs", label="cancellationToken.ThrowIfCancellationRequested()", prediction=44, span="36-36"];
m6_12 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22"];
m6_19 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label=enqueuedJobs, span="186-186"];
m6_14 [cluster="Hangfire.Server.InfiniteLoopComponent.ToString()", color=green, community=0, file="EnqueuedJobsPage.generated.cs", label="return InnerComponent.ToString();", prediction=45, span="43-43"];
m6_29 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="!job.Value.InEnqueuedState", span="239-239"];
m6_40 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="job.Value.EnqueuedAt.HasValue", span="304-304"];
m6_50 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Web.Pages.EnqueuedJobsPage.Execute()", span="62-62"];
m6_67 [cluster="string.Format(string, object)", file="EnqueuedJobsPage.generated.cs", label="Entry string.Format(string, object)", span="0-0"];
m6_60 [cluster="HangFire.Storage.IMonitoringApi.EnqueuedJobs(string, int, int)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.EnqueuedJobs(string, int, int)", span="29-29"];
m6_58 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m6_56 [cluster="Unk.TryParse", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.TryParse", span=""];
m6_51 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m6_53 [cluster="string.ToUpperInvariant()", file="EnqueuedJobsPage.generated.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m6_63 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m6_54 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="EnqueuedJobsPage.generated.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_62 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m6_66 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="EnqueuedJobsPage.generated.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m6_59 [cluster="HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", span="39-39"];
m6_69 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m6_64 [cluster="Unk.Write", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.Write", span=""];
m6_65 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m6_57 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m6_52 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m6_55 [cluster="HttpRequestBase.LinkTo(string)", file="EnqueuedJobsPage.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m6_68 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m6_70 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m6_71 [file="EnqueuedJobsPage.generated.cs", label="HangFire.Web.Pages.EnqueuedJobsPage", span=""];
m7_0 [cluster="HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", file="FailedJobsPage.generated.cs", label="Entry HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", span="26-26"];
m7_1 [cluster="HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", color=green, community=0, file="FailedJobsPage.generated.cs", label="_command = command", prediction=46, span="28-28"];
m7_2 [cluster="HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", file="FailedJobsPage.generated.cs", label="Exit HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", span="26-26"];
m7_13 [cluster="Unk.GetValues", file="FailedJobsPage.generated.cs", label="Entry Unk.GetValues", span=""];
m7_3 [cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", file="FailedJobsPage.generated.cs", label="Entry HangFire.Web.BatchCommandHandler.ProcessRequest()", span="31-31"];
m7_4 [cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", color=green, community=0, file="FailedJobsPage.generated.cs", label="var request = HttpContext.Current.Request", prediction=47, span="33-33"];
m7_5 [cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", color=green, community=0, file="FailedJobsPage.generated.cs", label="var jobIds = request.Form.GetValues(''jobs[]'')", prediction=48, span="34-34"];
m7_6 [cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", color=green, community=0, file="FailedJobsPage.generated.cs", label="jobIds == null", prediction=49, span="36-36"];
m7_9 [cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", color=green, community=0, file="FailedJobsPage.generated.cs", label=jobIds, prediction=48, span="42-42"];
m7_7 [cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", color=green, community=0, file="FailedJobsPage.generated.cs", label="Response.StatusCode = 422", prediction=51, span="38-38"];
m7_8 [cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", color=green, community=0, file="FailedJobsPage.generated.cs", label="return;", prediction=52, span="39-39"];
m7_10 [cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", color=green, community=0, file="FailedJobsPage.generated.cs", label="_command(jobId)", prediction=53, span="44-44"];
m7_11 [cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", color=green, community=0, file="FailedJobsPage.generated.cs", label="Response.StatusCode = (int)HttpStatusCode.NoContent", prediction=54, span="47-47"];
m7_12 [cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", file="FailedJobsPage.generated.cs", label="Exit HangFire.Web.BatchCommandHandler.ProcessRequest()", span="31-31"];
m7_14 [cluster="Unk._command", file="FailedJobsPage.generated.cs", label="Entry Unk._command", span=""];
m7_15 [file="FailedJobsPage.generated.cs", label="HangFire.Web.BatchCommandHandler", span=""];
m8_56 [cluster="HangFire.Storage.IMonitoringApi.FetchedJobs(string, int, int)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.FetchedJobs(string, int, int)", span="30-30"];
m8_57 [cluster="HangFire.Web.RazorPage.Write(object)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m8_63 [cluster="string.Format(string, object)", file="FetchedJobsPage.generated.cs", label="Entry string.Format(string, object)", span="0-0"];
m8_54 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m8_52 [cluster="Unk.TryParse", file="FetchedJobsPage.generated.cs", label="Entry Unk.TryParse", span=""];
m8_47 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m8_0 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.FetchedJobsPage.Execute()", span="62-62"];
m8_1 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\r\n'')", prediction=55, span="66-66"];
m8_2 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Layout = new LayoutPage\r\n        {\r\n            Title = Queue.ToUpperInvariant(),\r\n            Subtitle = ''Fetched jobs'',\r\n            Breadcrumbs = new Dictionary<string, string>\r\n                {\r\n                    { ''Queues'', Request.LinkTo(''/queues'') },\r\n                    { Queue.ToUpperInvariant(), Request.LinkTo(''/queues/'' + Queue) }\r\n                },\r\n            BreadcrumbsTitle = ''Fetched jobs'',\r\n        }", span="80-90"];
m8_3 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="int from, perPage", span="92-92"];
m8_4 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="int.TryParse(Request.QueryString[''from''], out from)", span="94-94"];
m8_5 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="int.TryParse(Request.QueryString[''count''], out perPage)", span="95-95"];
m8_9 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="pager = new Pager(from, perPage, monitor.FetchedCount(Queue))\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/queues/fetched/'' + Queue)\r\n        }", prediction=55, span="102-105"];
m8_6 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Pager pager", prediction=57, span="97-97"];
m8_7 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="JobList<FetchedJobDto> fetchedJobs", prediction=58, span="98-98"];
m8_8 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", prediction=59, span="100-100"];
m8_10 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="fetchedJobs = monitor\r\n            .FetchedJobs(Queue, pager.FromRecord, pager.RecordsPerPage)", prediction=55, span="107-108"];
m8_12 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="pager.TotalPageCount == 0", prediction=55, span="120-120"];
m8_45 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Write(RenderPartial(new Paginator(pager)))", prediction=55, span="349-349"];
m8_21 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label=fetchedJobs, prediction=55, span="205-205"];
m8_14 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''    <div class=\''js-jobs-list\''>\r\n        <div class=\''btn-toolbar btn-toolbar-top\''>'' +\r\n''\r\n            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\r\n     '' +\r\n''               data-url=\'''')", prediction=55, span="138-140"];
m8_16 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Enqueueing...''''>\r\n                <span class=''''glyphicon glyphicon-repeat''''></span>\r\n                Requeue jobs\r\n            </button>\r\n\r\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\r\n                    data-url='''''')", prediction=55, span="150-157"];
m8_18 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Deleting...''''\r\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\r\n                <span class=''''glyphicon glyphicon-remove''''></span>\r\n                Delete selected\r\n            </button>\r\n\r\n            '')", prediction=55, span="167-174"];
m8_20 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(@''\r\n        </div>\r\n\r\n        <table class=''''table''''>\r\n            <thead>\r\n                <tr>\r\n                    <th class=''''min-width''''>\r\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                    </th>\r\n                    <th class=''''min-width''''>Id</th>\r\n                    <th class=''''min-width''''>State</th>\r\n                    <th>Job</th>\r\n                    <th class=''''align-right''''>Fetched</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n'')", prediction=55, span="184-200"];
m8_22 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''                    <tr class=\''js-jobs-list-row hover\''>\r\n                        '' +\r\n''<td>\r\n                            <input type=\''checkbox\'' class=\''js-jobs-list-che'' +\r\n''ckbox\'' name=\''jobs[]\'' value=\'''')", prediction=55, span="211-213"];
m8_44 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''            </tbody>\r\n        </table>\r\n    </div>\r\n'')", prediction=55, span="338-338"];
m8_23 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Write(job.Key)", prediction=55, span="218-218"];
m8_24 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\'' />\r\n                        </td>\r\n                        <td class=\''min-width'' +\r\n''\''>\r\n                            <a href=\'''')", prediction=55, span="223-224"];
m8_25 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", prediction=55, span="229-229"];
m8_26 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\''>'')", prediction=55, span="234-234"];
m8_27 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Write(HtmlHelper.JobId(job.Key))", prediction=55, span="239-239"];
m8_28 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''</a>\r\n                        </td>\r\n                        <td class=\''min-width'' +\r\n''\''>\r\n                            <span class=\''label label-default\'' style=\'''')", prediction=55, span="244-245"];
m8_29 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Write(JobHistoryRenderer.ForegroundStateColors.ContainsKey(job.Value.State) ? String.Format(''background-color: {0};'', JobHistoryRenderer.ForegroundStateColors[job.Value.State]) : null)", prediction=55, span="250-250"];
m8_30 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                                '')", prediction=55, span="255-255"];
m8_31 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Write(job.Value.State)", prediction=55, span="260-260"];
m8_32 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\r\n                            </span>\r\n                        </td>\r\n           '' +\r\n''             <td>\r\n                            <a class=\''job-method\'' href=\'''')", prediction=55, span="265-266"];
m8_33 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", prediction=55, span="271-271"];
m8_34 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                                '')", prediction=55, span="276-276"];
m8_35 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", prediction=55, span="281-281"];
m8_36 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\r\n                            </a>\r\n                        </td>\r\n              '' +\r\n''          <td class=\''align-right\''>\r\n'')", prediction=55, span="286-287"];
m8_37 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="job.Value.FetchedAt.HasValue", prediction=55, span="292-292"];
m8_38 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''                                <span data-moment=\'''')", prediction=55, span="298-298"];
m8_39 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.FetchedAt.Value))", prediction=55, span="303-303"];
m8_40 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                                    '')", prediction=55, span="308-308"];
m8_41 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Write(job.Value.FetchedAt)", prediction=55, span="313-313"];
m8_46 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Exit HangFire.Web.Pages.FetchedJobsPage.Execute()", span="62-62"];
m8_49 [cluster="string.ToUpperInvariant()", file="FetchedJobsPage.generated.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m8_59 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m8_50 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FetchedJobsPage.generated.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m8_58 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m8_62 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="FetchedJobsPage.generated.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m8_65 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m8_60 [cluster="Unk.Write", file="FetchedJobsPage.generated.cs", label="Entry Unk.Write", span=""];
m8_61 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m8_53 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m8_48 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m8_51 [cluster="HttpRequestBase.LinkTo(string)", file="FetchedJobsPage.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m8_55 [cluster="HangFire.Storage.IMonitoringApi.FetchedCount(string)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.FetchedCount(string)", span="40-40"];
m8_64 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m8_66 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m8_67 [file="FetchedJobsPage.generated.cs", label="HangFire.Web.Pages.FetchedJobsPage", span=""];
m9_0 [cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="IBackgroundJobClient.cs", label="Entry HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="42-42"];
m9_1 [cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="IBackgroundJobClient.cs", label="Exit HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="42-42"];
m9_2 [cluster="HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="IBackgroundJobClient.cs", label="Entry HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", span="55-55"];
m9_3 [cluster="HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="IBackgroundJobClient.cs", label="Exit HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", span="55-55"];
m10_6 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="IMonitoringApi.cs", label="_context = new Mock<CreateContext>(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="25-26"];
m10_7 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="IMonitoringApi.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", span="17-17"];
m10_10 [cluster="Mock<IState>.cstr", file="IMonitoringApi.cs", label="Entry Mock<IState>.cstr", span=""];
m10_11 [cluster="Mock<IStateMachineFactory>.cstr", file="IMonitoringApi.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m10_38 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.CreateJob()", span="47-47"];
m10_39 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="47-47"];
m10_72 [cluster="Unk.OnClientException", file="IMonitoringApi.cs", label="Entry Unk.OnClientException", span=""];
m10_12 [cluster="HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", span="32-32"];
m10_4 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", color=green, community=0, file="IMonitoringApi.cs", label="var stateMachineFactory = new Mock<IStateMachineFactory>()", prediction=89, span="22-22"];
m10_5 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="IMonitoringApi.cs", label="_filters = new List<object>()", span="24-24"];
m10_0 [cluster="HangFire.Storage.IMonitoringApi.Queues()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.IMonitoringApi.Queues()", span="24-24"];
m10_3 [cluster="HangFire.Storage.IMonitoringApi.Servers()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.IMonitoringApi.Servers()", span="25-25"];
m10_2 [cluster="HangFire.Storage.IMonitoringApi.Servers()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.IMonitoringApi.Servers()", span="25-25"];
m10_1 [cluster="HangFire.Storage.IMonitoringApi.Queues()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.IMonitoringApi.Queues()", span="24-24"];
m10_25 [cluster="HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", file="IMonitoringApi.cs", label="Exit HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", span="39-39"];
m10_34 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="IMonitoringApi.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41"];
m10_35 [cluster="Unk.Run", file="IMonitoringApi.cs", label="Entry Unk.Run", span=""];
m10_32 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="IMonitoringApi.cs", label="process.Run(_context.Object)", span="45-45"];
m10_33 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="IMonitoringApi.cs", label="_context.Verify(x => x.CreateJob(), Times.Once)", span="47-47"];
m10_42 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="IMonitoringApi.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="53-53"];
m10_43 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="IMonitoringApi.cs", label="var process = CreateProcess()", span="54-54"];
m10_13 [cluster="HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", file="IMonitoringApi.cs", label="Exit HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", span="32-32"];
m10_18 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="IMonitoringApi.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30"];
m10_19 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="IMonitoringApi.cs", label="var process = CreateProcess()", span="32-32"];
m10_8 [cluster="Mock<IStorageConnection>.cstr", file="IMonitoringApi.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m10_9 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="IMonitoringApi.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m10_97 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="IMonitoringApi.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101"];
m10_98 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="IMonitoringApi.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="104-104"];
m10_101 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="IMonitoringApi.cs", label="_filters.Add(filter.Object)", span="109-109"];
m10_102 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="IMonitoringApi.cs", label="var process = CreateProcess()", span="111-111"];
m10_103 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="IMonitoringApi.cs", label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="114-114"];
m10_99 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="IMonitoringApi.cs", label="var filter = new Mock<IClientExceptionFilter>()", span="105-105"];
m10_100 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="IMonitoringApi.cs", label="filter.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>()))\r\n                .Callback((ClientExceptionContext x) => x.ExceptionHandled = true)", span="106-107"];
m10_104 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="IMonitoringApi.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101"];
m10_106 [cluster="Unk.DoesNotThrow", file="IMonitoringApi.cs", label="Entry Unk.DoesNotThrow", span=""];
m10_41 [cluster="HangFire.Storage.IMonitoringApi.HourlySucceededJobs()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.IMonitoringApi.HourlySucceededJobs()", span="49-49"];
m10_44 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="IMonitoringApi.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="56-57"];
m10_45 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="IMonitoringApi.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51"];
m10_251 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="IMonitoringApi.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244"];
m10_254 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="IMonitoringApi.cs", label="_filters.Add(outerFilter.Object)", span="250-250"];
m10_255 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="IMonitoringApi.cs", label="_filters.Add(innerFilter.Object)", span="251-251"];
m10_257 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="IMonitoringApi.cs", label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="254-254"];
m10_258 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="IMonitoringApi.cs", label="var process = CreateProcess()", span="256-256"];
m10_259 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="IMonitoringApi.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="259-260"];
m10_252 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="IMonitoringApi.cs", label="var outerFilter = new Mock<IClientFilter>()", span="247-247"];
m10_253 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="IMonitoringApi.cs", label="var innerFilter = new Mock<IClientFilter>()", span="248-248"];
m10_256 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="IMonitoringApi.cs", label="var exception = new InvalidOperationException()", span="253-253"];
m10_260 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="IMonitoringApi.cs", label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))", span="262-262"];
m10_261 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="IMonitoringApi.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244"];
m10_237 [cluster="System.InvalidOperationException.InvalidOperationException()", file="IMonitoringApi.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m10_53 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="IMonitoringApi.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61"];
m10_55 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="IMonitoringApi.cs", label="_filters.Add(filter.Object)", span="64-64"];
m10_56 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="IMonitoringApi.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="66-66"];
m10_57 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="IMonitoringApi.cs", label="var process = CreateProcess()", span="67-67"];
m10_58 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="IMonitoringApi.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="69-70"];
m10_54 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="IMonitoringApi.cs", label="var filter = new Mock<IClientExceptionFilter>()", span="63-63"];
m10_59 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="IMonitoringApi.cs", label="filter.Verify(x => x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>()))", span="72-73"];
m10_60 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="IMonitoringApi.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61"];
m10_24 [cluster="HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", span="39-39"];
m10_61 [cluster="Mock<IClientExceptionFilter>.cstr", file="IMonitoringApi.cs", label="Entry Mock<IClientExceptionFilter>.cstr", span=""];
m10_29 [cluster="HangFire.Storage.IMonitoringApi.FailedCount()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.IMonitoringApi.FailedCount()", span="41-41"];
m10_119 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="IMonitoringApi.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118"];
m10_121 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="IMonitoringApi.cs", label="_filters.Add(filter.Object)", span="122-122"];
m10_123 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="IMonitoringApi.cs", label="_context.Setup(x => x.CreateJob()).InSequence()", span="125-125"];
m10_125 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="IMonitoringApi.cs", label="var process = CreateProcess()", span="128-128"];
m10_126 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="IMonitoringApi.cs", label="process.Run(_context.Object)", span="131-131"];
m10_120 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="IMonitoringApi.cs", label="var filter = new Mock<IClientFilter>()", span="121-121"];
m10_122 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="IMonitoringApi.cs", label="filter.Setup(x => x.OnCreating(It.IsNotNull<CreatingContext>())).InSequence()", span="124-124"];
m10_124 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="IMonitoringApi.cs", label="filter.Setup(x => x.OnCreated(It.IsNotNull<CreatedContext>())).InSequence()", span="126-126"];
m10_127 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="IMonitoringApi.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118"];
m10_20 [cluster="HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", span="36-36"];
m10_21 [cluster="HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", file="IMonitoringApi.cs", label="Exit HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", span="36-36"];
m10_22 [cluster="HangFire.Storage.IMonitoringApi.ScheduledCount()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.IMonitoringApi.ScheduledCount()", span="38-38"];
m10_164 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="IMonitoringApi.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160"];
m10_166 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="IMonitoringApi.cs", label="_filters.Add(filter.Object)", span="164-164"];
m10_168 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="IMonitoringApi.cs", label="var process = CreateProcess()", span="169-169"];
m10_169 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="IMonitoringApi.cs", label="process.Run(_context.Object)", span="172-172"];
m10_170 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="IMonitoringApi.cs", label="_context.Verify(x => x.CreateJob(), Times.Never)", span="175-175"];
m10_165 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="IMonitoringApi.cs", label="var filter = new Mock<IClientFilter>()", span="163-163"];
m10_167 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="IMonitoringApi.cs", label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext x) => x.Canceled = true)", span="166-167"];
m10_171 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="IMonitoringApi.cs", label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="176-176"];
m10_172 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="IMonitoringApi.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160"];
m10_23 [cluster="HangFire.Storage.IMonitoringApi.ScheduledCount()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.IMonitoringApi.ScheduledCount()", span="38-38"];
m10_328 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="IMonitoringApi.cs", label="return new JobCreationProcess(_filters);", span="314-314"];
m10_329 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="IMonitoringApi.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312"];
m10_139 [cluster="Unk.OnCreated", file="IMonitoringApi.cs", label="Entry Unk.OnCreated", span=""];
m10_228 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="IMonitoringApi.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223"];
m10_230 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="IMonitoringApi.cs", label="_filters.Add(filter.Object)", span="227-227"];
m10_232 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="IMonitoringApi.cs", label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="230-230"];
m10_233 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="IMonitoringApi.cs", label="var process = CreateProcess()", span="232-232"];
m10_234 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="IMonitoringApi.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="235-236"];
m10_229 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="IMonitoringApi.cs", label="var filter = new Mock<IClientFilter>()", span="226-226"];
m10_231 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="IMonitoringApi.cs", label="var exception = new InvalidOperationException()", span="229-229"];
m10_235 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="IMonitoringApi.cs", label="filter.Verify(x => x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception)))", span="239-240"];
m10_236 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="IMonitoringApi.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223"];
m10_62 [cluster="Unk.Add", file="IMonitoringApi.cs", label="Entry Unk.Add", span=""];
m10_84 [cluster="Unk.InSequence", file="IMonitoringApi.cs", label="Entry Unk.InSequence", span=""];
m10_14 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="20-20"];
m10_15 [cluster="lambda expression", file="IMonitoringApi.cs", label="TestMethod()", span="20-20"];
m10_330 [cluster="HangFire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="IMonitoringApi.cs", label="Entry HangFire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39"];
m10_185 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="IMonitoringApi.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180"];
m10_188 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="IMonitoringApi.cs", label="_filters.Add(outerFilter.Object)", span="186-186"];
m10_189 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="IMonitoringApi.cs", label="_filters.Add(innerFilter.Object)", span="187-187"];
m10_191 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="IMonitoringApi.cs", label="var process = CreateProcess()", span="192-192"];
m10_192 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="IMonitoringApi.cs", label="process.Run(_context.Object)", span="195-195"];
m10_186 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="IMonitoringApi.cs", label="var outerFilter = new Mock<IClientFilter>()", span="183-183"];
m10_187 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="IMonitoringApi.cs", label="var innerFilter = new Mock<IClientFilter>()", span="184-184"];
m10_190 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="IMonitoringApi.cs", label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext context) => context.Canceled = true)", span="189-190"];
m10_193 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="IMonitoringApi.cs", label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Canceled)))", span="198-198"];
m10_194 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="IMonitoringApi.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180"];
m10_46 [cluster="Unk.Setup", file="IMonitoringApi.cs", label="Entry Unk.Setup", span=""];
m10_28 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="35-35"];
m10_238 [cluster="Unk.Throws", file="IMonitoringApi.cs", label="Entry Unk.Throws", span=""];
m10_73 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="IMonitoringApi.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77"];
m10_78 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="IMonitoringApi.cs", label="_filters.Add(filter1.Object)", span="86-86"];
m10_79 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="IMonitoringApi.cs", label="_filters.Add(filter2.Object)", span="87-87"];
m10_80 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="IMonitoringApi.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="89-89"];
m10_81 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="IMonitoringApi.cs", label="var process = CreateProcess()", span="91-91"];
m10_82 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="IMonitoringApi.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="94-95"];
m10_74 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="IMonitoringApi.cs", label="var filter1 = new Mock<IClientExceptionFilter>()", span="80-80"];
m10_77 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="IMonitoringApi.cs", label="filter1.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="84-84"];
m10_75 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="IMonitoringApi.cs", label="var filter2 = new Mock<IClientExceptionFilter>()", span="81-81"];
m10_76 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="IMonitoringApi.cs", label="filter2.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="83-83"];
m10_83 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="IMonitoringApi.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77"];
m10_30 [cluster="HangFire.Storage.IMonitoringApi.ProcessingCount()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.IMonitoringApi.ProcessingCount()", span="42-42"];
m10_31 [cluster="HangFire.Storage.IMonitoringApi.ProcessingCount()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.IMonitoringApi.ProcessingCount()", span="42-42"];
m10_324 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="305-305"];
m10_51 [cluster="lambda expression", file="IMonitoringApi.cs", label="process.Run(_context.Object)", span="57-57"];
m10_67 [cluster="lambda expression", file="IMonitoringApi.cs", label="process.Run(_context.Object)", span="70-70"];
m10_95 [cluster="lambda expression", file="IMonitoringApi.cs", label="process.Run(_context.Object)", span="95-95"];
m10_117 [cluster="lambda expression", file="IMonitoringApi.cs", label="process.Run(_context.Object)", span="114-114"];
m10_220 [cluster="lambda expression", file="IMonitoringApi.cs", label="process.Run(_context.Object)", span="215-215"];
m10_243 [cluster="lambda expression", file="IMonitoringApi.cs", label="process.Run(_context.Object)", span="236-236"];
m10_266 [cluster="lambda expression", file="IMonitoringApi.cs", label="process.Run(_context.Object)", span="260-260"];
m10_296 [cluster="lambda expression", file="IMonitoringApi.cs", label="process.Run(_context.Object)", span="281-281"];
m10_319 [cluster="lambda expression", file="IMonitoringApi.cs", label="process.Run(_context.Object)", span="302-302"];
m10_16 [cluster="HangFire.Storage.IMonitoringApi.SucceededJobs(int, int)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.IMonitoringApi.SucceededJobs(int, int)", span="34-34"];
m10_27 [cluster="HangFire.Storage.IMonitoringApi.FetchedCount(string)", file="IMonitoringApi.cs", label="Exit HangFire.Storage.IMonitoringApi.FetchedCount(string)", span="40-40"];
m10_37 [cluster="HangFire.Storage.IMonitoringApi.SucceededByDatesCount()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.IMonitoringApi.SucceededByDatesCount()", span="47-47"];
m10_47 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="53-53"];
m10_50 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="57-57"];
m10_52 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="57-57"];
m10_63 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="66-66"];
m10_66 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="70-70"];
m10_68 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="70-70"];
m10_91 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="89-89"];
m10_94 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="95-95"];
m10_96 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="95-95"];
m10_107 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="104-104"];
m10_116 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="114-114"];
m10_118 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="114-114"];
m10_133 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="125-125"];
m10_179 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="175-175"];
m10_219 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="215-215"];
m10_221 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="215-215"];
m10_222 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="218-218"];
m10_239 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="230-230"];
m10_242 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="236-236"];
m10_244 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="236-236"];
m10_262 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="254-254"];
m10_265 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="260-260"];
m10_267 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="260-260"];
m10_283 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="273-273"];
m10_295 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="281-281"];
m10_297 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="281-281"];
m10_309 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="294-294"];
m10_318 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="302-302"];
m10_320 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="302-302"];
m10_26 [cluster="HangFire.Storage.IMonitoringApi.FetchedCount(string)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.IMonitoringApi.FetchedCount(string)", span="40-40"];
m10_70 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>())", span="72-73"];
m10_86 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="83-83"];
m10_89 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="84-84"];
m10_111 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="106-106"];
m10_130 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.OnCreating(It.IsNotNull<CreatingContext>())", span="124-124"];
m10_137 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.OnCreated(It.IsNotNull<CreatedContext>())", span="126-126"];
m10_153 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="146-146"];
m10_156 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="147-147"];
m10_159 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="148-148"];
m10_162 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="149-149"];
m10_174 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="166-166"];
m10_183 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="176-176"];
m10_196 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="189-189"];
m10_202 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Canceled))", span="198-198"];
m10_217 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.OnCreating(It.IsAny<CreatingContext>())", span="208-208"];
m10_226 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="219-219"];
m10_246 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception))", span="239-240"];
m10_269 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="262-262"];
m10_287 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="275-275"];
m10_313 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.OnCreated(It.IsAny<CreatedContext>())", span="296-296"];
m10_322 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null))", span="305-305"];
m10_49 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="53-53"];
m10_48 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.CreateJob()", span="53-53"];
m10_65 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="66-66"];
m10_64 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.CreateJob()", span="66-66"];
m10_69 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="72-73"];
m10_88 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="84-84"];
m10_93 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="89-89"];
m10_92 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.CreateJob()", span="89-89"];
m10_109 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="104-104"];
m10_108 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.CreateJob()", span="104-104"];
m10_110 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="106-106"];
m10_113 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="107-107"];
m10_129 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="124-124"];
m10_136 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="126-126"];
m10_135 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="125-125"];
m10_134 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.CreateJob()", span="125-125"];
m10_152 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="146-146"];
m10_161 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="149-149"];
m10_173 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="166-166"];
m10_176 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="167-167"];
m10_182 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="176-176"];
m10_181 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="175-175"];
m10_180 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.CreateJob()", span="175-175"];
m10_195 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="189-189"];
m10_198 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="190-190"];
m10_201 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="198-198"];
m10_216 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="208-208"];
m10_225 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="219-219"];
m10_224 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="218-218"];
m10_223 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.CreateJob()", span="218-218"];
m10_249 [cluster="lambda expression", file="IMonitoringApi.cs", label="context.Exception == exception", span="240-240"];
m10_241 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="230-230"];
m10_240 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.CreateJob()", span="230-230"];
m10_245 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="239-240"];
m10_272 [cluster="lambda expression", file="IMonitoringApi.cs", label="context.Exception == exception", span="262-262"];
m10_264 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="254-254"];
m10_263 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.CreateJob()", span="254-254"];
m10_268 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="262-262"];
m10_290 [cluster="lambda expression", file="IMonitoringApi.cs", label="context.Exception == exception", span="275-275"];
m10_286 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="275-275"];
m10_292 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="276-276"];
m10_285 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="273-273"];
m10_284 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.CreateJob()", span="273-273"];
m10_312 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="296-296"];
m10_315 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="297-297"];
m10_311 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="294-294"];
m10_310 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.CreateJob()", span="294-294"];
m10_321 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="305-305"];
m10_85 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="83-83"];
m10_155 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="147-147"];
m10_158 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="148-148"];
m10_71 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="72-73"];
m10_87 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="83-83"];
m10_90 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="84-84"];
m10_112 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="106-106"];
m10_131 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="124-124"];
m10_138 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="126-126"];
m10_154 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="146-146"];
m10_157 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="147-147"];
m10_160 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="148-148"];
m10_163 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="149-149"];
m10_175 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="166-166"];
m10_184 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="176-176"];
m10_197 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="189-189"];
m10_203 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="198-198"];
m10_204 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="198-198"];
m10_218 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="208-208"];
m10_227 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="219-219"];
m10_247 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="239-240"];
m10_248 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="240-240"];
m10_270 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="262-262"];
m10_271 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="262-262"];
m10_288 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="275-275"];
m10_289 [cluster="lambda expression", file="IMonitoringApi.cs", label="Entry lambda expression", span="275-275"];
m10_314 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="296-296"];
m10_323 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="305-305"];
m10_115 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="107-107"];
m10_114 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.ExceptionHandled = true", span="107-107"];
m10_178 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="167-167"];
m10_177 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.Canceled = true", span="167-167"];
m10_200 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="190-190"];
m10_199 [cluster="lambda expression", file="IMonitoringApi.cs", label="context.Canceled = true", span="190-190"];
m10_250 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="240-240"];
m10_273 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="262-262"];
m10_291 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="275-275"];
m10_294 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="276-276"];
m10_293 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.ExceptionHandled = true", span="276-276"];
m10_317 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="297-297"];
m10_316 [cluster="lambda expression", file="IMonitoringApi.cs", label="x.ExceptionHandled = true", span="297-297"];
m10_206 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="198-198"];
m10_205 [cluster="lambda expression", file="IMonitoringApi.cs", label="context.Canceled", span="198-198"];
m10_325 [cluster="lambda expression", file="IMonitoringApi.cs", label="context.Exception != null", span="305-305"];
m10_326 [cluster="lambda expression", file="IMonitoringApi.cs", label="Exit lambda expression", span="305-305"];
m10_36 [cluster="HangFire.Storage.IMonitoringApi.SucceededByDatesCount()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.IMonitoringApi.SucceededByDatesCount()", span="47-47"];
m10_207 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="IMonitoringApi.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202"];
m10_209 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="IMonitoringApi.cs", label="_filters.Add(filter.Object)", span="206-206"];
m10_211 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="IMonitoringApi.cs", label="var process = CreateProcess()", span="211-211"];
m10_212 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="IMonitoringApi.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="214-215"];
m10_213 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="IMonitoringApi.cs", label="_context.Verify(x => x.CreateJob(), Times.Never)", span="218-218"];
m10_208 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="IMonitoringApi.cs", label="var filter = new Mock<IClientFilter>()", span="205-205"];
m10_210 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="IMonitoringApi.cs", label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Throws<InvalidOperationException>()", span="208-209"];
m10_214 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="IMonitoringApi.cs", label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="219-219"];
m10_215 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="IMonitoringApi.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202"];
m10_17 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="IMonitoringApi.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308"];
m10_298 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="IMonitoringApi.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285"];
m10_301 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="IMonitoringApi.cs", label="_filters.Add(outerFilter.Object)", span="291-291"];
m10_302 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="IMonitoringApi.cs", label="_filters.Add(innerFilter.Object)", span="292-292"];
m10_303 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="IMonitoringApi.cs", label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="294-294"];
m10_305 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="IMonitoringApi.cs", label="var process = CreateProcess()", span="299-299"];
m10_306 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="IMonitoringApi.cs", label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="302-302"];
m10_299 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="IMonitoringApi.cs", label="var outerFilter = new Mock<IClientFilter>()", span="288-288"];
m10_300 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="IMonitoringApi.cs", label="var innerFilter = new Mock<IClientFilter>()", span="289-289"];
m10_304 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="IMonitoringApi.cs", label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>()))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="296-297"];
m10_307 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="IMonitoringApi.cs", label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null)))", span="305-305"];
m10_308 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="IMonitoringApi.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285"];
m10_132 [cluster="Unk.OnCreating", file="IMonitoringApi.cs", label="Entry Unk.OnCreating", span=""];
m10_40 [cluster="Unk.CreateJob", file="IMonitoringApi.cs", label="Entry Unk.CreateJob", span=""];
m10_274 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="IMonitoringApi.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266"];
m10_276 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="IMonitoringApi.cs", label="_filters.Add(filter.Object)", span="270-270"];
m10_278 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="IMonitoringApi.cs", label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="273-273"];
m10_280 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="IMonitoringApi.cs", label="var process = CreateProcess()", span="278-278"];
m10_281 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="IMonitoringApi.cs", label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="281-281"];
m10_275 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="IMonitoringApi.cs", label="var filter = new Mock<IClientFilter>()", span="269-269"];
m10_277 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="IMonitoringApi.cs", label="var exception = new InvalidOperationException()", span="272-272"];
m10_279 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="IMonitoringApi.cs", label="filter.Setup(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="275-276"];
m10_282 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="IMonitoringApi.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266"];
m10_105 [cluster="Unk.Callback", file="IMonitoringApi.cs", label="Entry Unk.Callback", span=""];
m10_327 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="IMonitoringApi.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308"];
m10_128 [cluster="Mock<IClientFilter>.cstr", file="IMonitoringApi.cs", label="Entry Mock<IClientFilter>.cstr", span=""];
m10_140 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs", label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137"];
m10_143 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs", label="_filters.Add(outerFilter.Object)", span="143-143"];
m10_144 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs", label="_filters.Add(innerFilter.Object)", span="144-144"];
m10_149 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs", label="var process = CreateProcess()", span="151-151"];
m10_150 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs", label="process.Run(_context.Object)", span="154-154"];
m10_141 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs", label="var outerFilter = new Mock<IClientFilter>()", span="140-140"];
m10_142 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs", label="var innerFilter = new Mock<IClientFilter>()", span="141-141"];
m10_145 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs", label="outerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="146-146"];
m10_148 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs", label="outerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="149-149"];
m10_146 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs", label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="147-147"];
m10_147 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs", label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="148-148"];
m10_151 [cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs", label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137"];
m10_331 [file="IMonitoringApi.cs", label="HangFire.Core.Tests.Client.JobCreationProcessFacts", span=""];
m10_333 [file="IMonitoringApi.cs", label=process, span=""];
m10_334 [file="IMonitoringApi.cs", label=process, span=""];
m10_335 [file="IMonitoringApi.cs", label=process, span=""];
m10_336 [file="IMonitoringApi.cs", label=process, span=""];
m10_337 [file="IMonitoringApi.cs", label=process, span=""];
m10_338 [file="IMonitoringApi.cs", label=process, span=""];
m10_340 [file="IMonitoringApi.cs", label=process, span=""];
m10_343 [file="IMonitoringApi.cs", label=process, span=""];
m10_344 [file="IMonitoringApi.cs", label=process, span=""];
m10_332 [file="IMonitoringApi.cs", label=process, span=""];
m10_339 [file="IMonitoringApi.cs", label=exception, span=""];
m10_341 [file="IMonitoringApi.cs", label=exception, span=""];
m10_342 [file="IMonitoringApi.cs", label=exception, span=""];
m12_10 [cluster="HangFire.Storage.IMonitoringApi.GetStatistics()", file="JsonStats.cs", label="Entry HangFire.Storage.IMonitoringApi.GetStatistics()", span="27-27"];
m12_12 [cluster="CamelCasePropertyNamesContractResolver.cstr", file="JsonStats.cs", label="Entry CamelCasePropertyNamesContractResolver.cstr", span=""];
m12_9 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="JsonStats.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m12_13 [cluster="Unk.SerializeObject", file="JsonStats.cs", label="Entry Unk.SerializeObject", span=""];
m12_0 [cluster="HangFire.Web.JsonStats.ProcessRequest()", file="JsonStats.cs", label="Entry HangFire.Web.JsonStats.ProcessRequest()", span="24-24"];
m12_1 [cluster="HangFire.Web.JsonStats.ProcessRequest()", color=green, community=0, file="JsonStats.cs", label="var monitoring = JobStorage.Current.GetMonitoringApi()", prediction=90, span="26-26"];
m12_3 [cluster="HangFire.Web.JsonStats.ProcessRequest()", color=green, community=1, file="JsonStats.cs", label="var settings = new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                }", prediction=91, span="31-34"];
m12_5 [cluster="HangFire.Web.JsonStats.ProcessRequest()", color=green, community=1, file="JsonStats.cs", label="Response.ContentType = ''application/json''", prediction=92, span="37-37"];
m12_6 [cluster="HangFire.Web.JsonStats.ProcessRequest()", color=green, community=1, file="JsonStats.cs", label="Response.ContentEncoding = Encoding.UTF8", prediction=93, span="38-38"];
m12_8 [cluster="HangFire.Web.JsonStats.ProcessRequest()", file="JsonStats.cs", label="Exit HangFire.Web.JsonStats.ProcessRequest()", span="24-24"];
m12_11 [cluster="JsonSerializerSettings.cstr", file="JsonStats.cs", label="Entry JsonSerializerSettings.cstr", span=""];
m12_14 [cluster="Unk.Write", file="JsonStats.cs", label="Entry Unk.Write", span=""];
m12_15 [file="JsonStats.cs", label="HangFire.Web.JsonStats", span=""];
m13_107 [cluster="HangFire.Storage.IMonitoringApi.GetStatistics()", file="LayoutPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.GetStatistics()", span="27-27"];
m13_104 [cluster="HangFire.Web.RazorPage.Write(object)", file="LayoutPage.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m13_33 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(statistics.Enqueued)", span="261-261"];
m13_18 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''\r\n                           href=\'''')", span="178-178"];
m13_109 [cluster="Unk.StartsWith", file="LayoutPage.generated.cs", label="Entry Unk.StartsWith", span=""];
m13_8 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(@''''''>HangFire Monitor</a>\r\n                    </div>\r\n                    <div class=''''collapse navbar-collapse''''>\r\n                        <ul class=''''nav navbar-nav navbar-right''''>\r\n                            <li>\r\n                                <a href=''''/''''>\r\n                                    <span class=''''glyphicon glyphicon-log-out''''></span>\r\n                                    Back to site\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <!--/.nav-collapse -->\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Begin page content -->\r\n\r\n            <div class=''''container''''>\r\n                <div class=''''col-md-3''''>\r\n'')", span="109-129"];
m13_0 [cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="LayoutPage.generated.cs", label="Entry HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", span="25-25"];
m13_9 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="LayoutPage.generated.cs", label="Entry HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", prediction=94, span="48-48"];
m13_10 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=1, file="LayoutPage.generated.cs", label="var payload = _items.Take(cancellationToken)", prediction=95, span="50-50"];
m13_11 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="LayoutPage.generated.cs", label=_items, span="52-52"];
m13_7 [cluster="string.Format(string, object)", file="LayoutPage.generated.cs", label="Entry string.Format(string, object)", span="0-0"];
m13_12 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="LayoutPage.generated.cs", label="_items.Count == 0", span="54-54"];
m13_21 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs", label="_cts != null", span="67-67"];
m13_27 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs", label="_innerFetcher.Dispose()", span="80-80"];
m13_35 [cluster="HangFire.Server.JobFetcher.Dispose()", file="LayoutPage.generated.cs", label="Entry HangFire.Server.JobFetcher.Dispose()", span="81-81"];
m13_41 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="LayoutPage.generated.cs", label="JobFetcher.RemoveFromFetchedQueue(_innerFetcher.Redis, payload.Id, _innerFetcher.Queue)", span="97-97"];
m13_47 [cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="LayoutPage.generated.cs", label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="86-86"];
m13_53 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs", label="Monitor.Wait(_items)", span="116-116"];
m13_59 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs", label=Exception, span="133-133"];
m13_65 [cluster="System.Threading.ManualResetEventSlim.Set()", file="LayoutPage.generated.cs", label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0"];
m13_1 [cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="LayoutPage.generated.cs", label="_innerFetcher = innerFetcher", span="27-27"];
m13_2 [cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="LayoutPage.generated.cs", label="_count = count", span="28-28"];
m13_3 [cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="LayoutPage.generated.cs", label="_prefetchThread = new Thread(Prefetch)\r\n                {\r\n                    Name = String.Format(''HangFire.Prefetch.{0}'', ''queue''),\r\n                    IsBackground = true\r\n                }", span="30-34"];
m13_4 [cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="LayoutPage.generated.cs", label="_prefetchThread.Start()", span="35-35"];
m13_5 [cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="LayoutPage.generated.cs", label="Exit HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", span="25-25"];
m13_6 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="LayoutPage.generated.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m13_13 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="LayoutPage.generated.cs", label="_jobIsReady.Reset()", span="56-56"];
m13_14 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="LayoutPage.generated.cs", label="Monitor.Pulse(_items)", span="59-59"];
m13_15 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="LayoutPage.generated.cs", label="return payload;", span="62-62"];
m13_16 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="LayoutPage.generated.cs", label="Exit HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="48-48"];
m13_17 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Take(System.Threading.CancellationToken)", file="LayoutPage.generated.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Take(System.Threading.CancellationToken)", span="0-0"];
m13_19 [cluster="System.Threading.Monitor.Pulse(object)", file="LayoutPage.generated.cs", label="Entry System.Threading.Monitor.Pulse(object)", span="0-0"];
m13_20 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs", label="Entry HangFire.Server.PrefetchJobFetcher.Dispose()", span="65-65"];
m13_22 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs", label="_cts.Cancel()", span="69-69"];
m13_23 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs", label=_items, span="71-71"];
m13_24 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs", label="Monitor.Pulse(_items)", span="73-73"];
m13_25 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs", label="_prefetchThread.Join()", span="76-76"];
m13_26 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs", label="RequeuePrefetched()", span="78-78"];
m13_28 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs", label="_jobIsReady.Dispose()", span="82-82"];
m13_29 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs", label="_cts.Dispose()", span="83-83"];
m13_30 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs", label="_cts = null", span="84-84"];
m13_31 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs", label="Exit HangFire.Server.PrefetchJobFetcher.Dispose()", span="65-65"];
m13_32 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="LayoutPage.generated.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m13_34 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="LayoutPage.generated.cs", label="Entry HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", span="88-88"];
m13_36 [cluster="System.Threading.ManualResetEventSlim.Dispose()", file="LayoutPage.generated.cs", label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0"];
m13_37 [cluster="System.Threading.CancellationTokenSource.Dispose()", file="LayoutPage.generated.cs", label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0"];
m13_38 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="LayoutPage.generated.cs", label="var enqueuedState = new EnqueuedState(''Re-queue prefetched job.'', _innerFetcher.Queue)", span="92-92"];
m13_39 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="LayoutPage.generated.cs", label=_items, span="94-94"];
m13_40 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="LayoutPage.generated.cs", label="JobState.Apply(_innerFetcher.Redis, payload.Id, enqueuedState)", span="96-96"];
m13_42 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="LayoutPage.generated.cs", label=Exception, span="100-100"];
m13_43 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="LayoutPage.generated.cs", label="_logger.Error(''An exception occured while trying to re-queue prefetched jobs. Some prefetched jobs may remain in the dequeue list.'', ex)", span="102-102"];
m13_44 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="LayoutPage.generated.cs", label="Exit HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", span="88-88"];
m13_45 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="LayoutPage.generated.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10"];
m13_46 [cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", file="LayoutPage.generated.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", span="51-51"];
m13_48 [cluster="Unk.Error", file="LayoutPage.generated.cs", label="Entry Unk.Error", span=""];
m13_49 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs", label="Entry HangFire.Server.PrefetchJobFetcher.Prefetch()", span="106-106"];
m13_50 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs", label=true, span="110-110"];
m13_51 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs", label=_items, span="112-112"];
m13_52 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs", label="_items.Count >= _count && !_cts.Token.IsCancellationRequested", span="114-114"];
m13_54 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs", label="var payload = _innerFetcher.DequeueJob(_cts.Token)", span="120-120"];
m13_55 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs", label=_items, span="122-122"];
m13_56 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs", label="_items.Add(payload)", span="124-124"];
m13_57 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs", label="_jobIsReady.Set()", span="126-126"];
m13_58 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs", label=OperationCanceledException, span="130-130"];
m13_61 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs", label="Exit HangFire.Server.PrefetchJobFetcher.Prefetch()", span="106-106"];
m13_62 [cluster="System.Threading.Monitor.Wait(object)", file="LayoutPage.generated.cs", label="Entry System.Threading.Monitor.Wait(object)", span="0-0"];
m13_63 [cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="LayoutPage.generated.cs", label="Entry HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", span="26-26"];
m13_64 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Add(T)", file="LayoutPage.generated.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Add(T)", span="0-0"];
m13_66 [cluster="Unk.Fatal", file="LayoutPage.generated.cs", label="Entry Unk.Fatal", span=""];
m13_67 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="HangFire.Server.PrefetchJobFetcher", span=""];
m13_68 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''                        <ol class=\''breadcrumb\''>\r\n                            <li>'' +\r\n''<a href=\'''')", span="460-461"];
m13_69 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/''))", span="466-466"];
m13_70 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''><span class=\''glyphicon glyphicon-home\''></span></a></li>\r\n'')", span="471-471"];
m13_71 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label=Breadcrumbs, span="476-476"];
m13_72 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''                                <li><a href=\'''')", span="482-482"];
m13_73 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(breadcrumb.Value)", span="487-487"];
m13_74 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''>'')", span="492-492"];
m13_75 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(breadcrumb.Key)", span="497-497"];
m13_76 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''</a></li>\r\n'')", span="502-502"];
m13_77 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''                            <li class=\''active\''>'')", span="512-512"];
m13_78 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(BreadcrumbsTitle ?? Title)", span="517-517"];
m13_79 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''</li>\r\n                        </ol>\r\n'')", span="522-522"];
m13_80 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n                    <h1 class=\''page-header\''>\r\n                        '')", span="532-532"];
m13_81 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Title)", span="537-537"];
m13_82 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n'')", span="542-542"];
m13_83 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="!String.IsNullOrEmpty(Subtitle)", span="547-547"];
m13_84 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''                            <small>'')", span="553-553"];
m13_85 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Subtitle)", span="558-558"];
m13_86 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''</small>\r\n'')", span="563-563"];
m13_87 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''                    </h1>\r\n                    '')", span="573-573"];
m13_88 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(RenderBody())", span="578-578"];
m13_89 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(@''\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=''''footer''''>\r\n            <div class=''''container''''>\r\n                <ul class=''''list-inline credit''''>\r\n                    <li>\r\n                        <a href=''''http://hangfire.io/'''' target=''''_blank''''>HangFire \r\n                            '')", span="583-593"];
m13_90 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(FileVersionInfo.GetVersionInfo(GetType().Assembly.Location).ProductVersion)", span="598-598"];
m13_91 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n                        </a>\r\n                    </li>\r\n                    <l'' +\r\n''i>'')", span="603-604"];
m13_92 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(JobStorage.Current)", span="609-609"];
m13_93 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''</li>\r\n                    <li>Time: '')", span="614-614"];
m13_94 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(DateTime.UtcNow)", span="619-619"];
m13_95 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral('' GMT\r\n                    </li>\r\n                    <li>Generated in ['')", span="624-624"];
m13_96 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write((DateTime.UtcNow - (DateTime)Context.Items[''GenerationStartedAt'']).Milliseconds)", span="629-629"];
m13_97 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(@'' ms]\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        \r\n        <script>\r\n            (function (hangFire) {\r\n                hangFire.config = {\r\n                    pollInterval: 2000,\r\n                    pollUrl: ''')", span="634-644"];
m13_98 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/stats''))", span="649-649"];
m13_99 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\'\r\n                };\r\n            })(window.HangFire = window.HangFire || {});\r\n'' +\r\n''        </script>\r\n        <script src=\'''')", span="654-655"];
m13_100 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Request.LinkTo(''/js/scripts.js''))", span="660-660"];
m13_101 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''></script>\r\n    </body>\r\n</html>\r\n'')", span="665-665"];
m13_102 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Exit HangFire.Web.Pages.LayoutPage.Execute()", span="51-51"];
m13_112 [cluster="object.GetType()", file="LayoutPage.generated.cs", label="Entry object.GetType()", span="0-0"];
m13_113 [cluster="System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", file="LayoutPage.generated.cs", label="Entry System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", span="0-0"];
m13_103 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="LayoutPage.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m13_111 [cluster="HangFire.Web.RazorPage.RenderBody()", file="LayoutPage.generated.cs", label="Entry HangFire.Web.RazorPage.RenderBody()", span="84-84"];
m13_110 [cluster="string.IsNullOrEmpty(string)", file="LayoutPage.generated.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m13_114 [cluster="Unk.Write", file="LayoutPage.generated.cs", label="Entry Unk.Write", span=""];
m13_106 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="LayoutPage.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m13_105 [cluster="HttpRequestBase.LinkTo(string)", file="LayoutPage.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m13_108 [cluster="Unk.Equals", file="LayoutPage.generated.cs", label="Entry Unk.Equals", span=""];
m13_115 [file="LayoutPage.generated.cs", label="HangFire.Web.Pages.LayoutPage", span=""];
m14_0 [cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.MsmqSqlServerStorageExtensionsFacts()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.MsmqSqlServerStorageExtensionsFacts()", span="13-13"];
m14_2 [cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.MsmqSqlServerStorageExtensionsFacts()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Exit HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.MsmqSqlServerStorageExtensionsFacts()", span="13-13"];
m14_14 [cluster="HangFire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(HangFire.SqlServer.SqlServerStorage, string)", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(HangFire.SqlServer.SqlServerStorage, string)", span="23-23"];
m14_5 [cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_ThrowsAnException_WhenStorageIsNull()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_ThrowsAnException_WhenStorageIsNull()", span="21-21"];
m14_6 [cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_ThrowsAnException_WhenStorageIsNull()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => MsmqSqlServerStorageExtensions.UseMsmqQueues(null, CleanMsmqQueueAttribute.PathPattern))", span="23-24"];
m14_7 [cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_ThrowsAnException_WhenStorageIsNull()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="26-26"];
m14_8 [cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_ThrowsAnException_WhenStorageIsNull()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Exit HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_ThrowsAnException_WhenStorageIsNull()", span="21-21"];
m14_15 [cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_AddsMsmqJobQueueProvider()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_AddsMsmqJobQueueProvider()", span="30-30"];
m14_16 [cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_AddsMsmqJobQueueProvider()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="_storage.UseMsmqQueues(CleanMsmqQueueAttribute.PathPattern)", span="32-32"];
m14_17 [cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_AddsMsmqJobQueueProvider()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="var providerTypes = _storage.QueueProviders.Select(x => x.GetType())", span="34-34"];
m14_18 [cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_AddsMsmqJobQueueProvider()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Assert.Contains(typeof(MsmqJobQueueProvider), providerTypes)", span="35-35"];
m14_19 [cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_AddsMsmqJobQueueProvider()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Exit HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_AddsMsmqJobQueueProvider()", span="30-30"];
m14_9 [cluster="Unk.>", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry Unk.>", span=""];
m14_20 [cluster="HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string)", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string)", span="23-23"];
m14_4 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24"];
m14_10 [cluster="Unk.Equal", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry Unk.Equal", span=""];
m14_3 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="37-37"];
m14_26 [cluster="object.GetType()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry object.GetType()", span="0-0"];
m14_23 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry lambda expression", span="34-34"];
m14_11 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry lambda expression", span="24-24"];
m14_12 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="MsmqSqlServerStorageExtensions.UseMsmqQueues(null, CleanMsmqQueueAttribute.PathPattern)", span="24-24"];
m14_13 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Exit lambda expression", span="24-24"];
m14_24 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="x.GetType()", span="34-34"];
m14_25 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Exit lambda expression", span="34-34"];
m14_22 [cluster="Unk.Contains", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry Unk.Contains", span=""];
m14_21 [cluster="Unk.Select", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry Unk.Select", span=""];
m14_27 [file="MsmqSqlServerStorageExtensionsFacts.cs", label="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts", span=""];
m15_9 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="ProcessingJobsPage.generated.cs", label="Exit Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25"];
m15_64 [cluster="System.Random.Next(int, int)", file="ProcessingJobsPage.generated.cs", label="Entry System.Random.Next(int, int)", span="0-0"];
m15_60 [cluster="System.Random.Random(int)", file="ProcessingJobsPage.generated.cs", label="Entry System.Random.Random(int)", span="0-0"];
m15_11 [cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.Logging.LogProvider.GetLogger(System.Type)", span="353-353"];
m15_41 [cluster="string.Format(string, params object[])", file="ProcessingJobsPage.generated.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m15_12 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", span="52-52"];
m15_0 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", span="31-31"];
m15_1 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="innerComponent == null", prediction=96, span="33-33"];
m15_2 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="throw new ArgumentNullException(''innerComponent'');", prediction=97, span="33-33"];
m15_3 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="_innerComponent = innerComponent", prediction=98, span="35-35"];
m15_4 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="_logger = LogProvider.GetLogger(_innerComponent.GetType())", prediction=99, span="36-36"];
m15_5 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="MaxRetryAttempts = DefaultMaxRetryAttempts", prediction=100, span="38-38"];
m15_6 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="MaxAttemptDelay = DefaultMaxAttemptDelay", prediction=101, span="39-39"];
m15_7 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="DelayCallback = GetBackOffMultiplier", prediction=102, span="40-40"];
m15_10 [cluster="System.TimeSpan.FromSeconds(double)", file="ProcessingJobsPage.generated.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m15_32 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22"];
m15_33 [cluster="System.Func<T, TResult>.Invoke(T)", file="ProcessingJobsPage.generated.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m15_34 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", span="95-95"];
m15_42 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label=i, prediction=103, span="97-97"];
m15_43 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", file="ProcessingJobsPage.generated.cs", label=0, span="99-99"];
m15_45 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", file="ProcessingJobsPage.generated.cs", label=1, span="101-101"];
m15_47 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label=2, prediction=104, span="103-103"];
m15_48 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="return LogLevel.Warn;", prediction=105, span="104-104"];
m15_46 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="return LogLevel.Info;", prediction=106, span="102-102"];
m15_50 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="return LogLevel.Error;", prediction=107, span="107-107"];
m15_44 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", file="ProcessingJobsPage.generated.cs", label="return LogLevel.Debug;", span="100-100"];
m15_49 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", file="ProcessingJobsPage.generated.cs", label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", span="95-95"];
m15_13 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="Hangfire.SqlServer.SqlServerStorageOptions", prediction=108, span=""];
m15_14 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", file="ProcessingJobsPage.generated.cs", label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", span="52-52"];
m15_37 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="ProcessingJobsPage.generated.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m15_35 [cluster="Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="54-54"];
m15_15 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", span="57-57"];
m15_16 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="var i = 0", prediction=108, span="59-59"];
m15_17 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="i <= MaxRetryAttempts", prediction=108, span="59-59"];
m15_23 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="i >= MaxRetryAttempts - 1", prediction=108, span="73-73"];
m15_25 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="var nextTry = DelayCallback(i)", prediction=108, span="75-75"];
m15_26 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="var logLevel = GetLogLevel(i)", prediction=113, span="76-76"];
m15_27 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="_logger.Log(\r\n                        logLevel,\r\n                        () => String.Format(\r\n                            ''Error occurred during execution of '{0}' component. Execution will be retried (attempt {1} of {2}) in {3} seconds.'',\r\n                            _innerComponent,\r\n                            i + 1,\r\n                            MaxRetryAttempts,\r\n                            nextTry),\r\n                        ex)", prediction=108, span="78-86"];
m15_30 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="i++", prediction=108, span="59-59"];
m15_28 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="cancellationToken.WaitHandle.WaitOne(nextTry)", prediction=108, span="89-89"];
m15_29 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="cancellationToken.ThrowIfCancellationRequested()", prediction=117, span="90-90"];
m15_18 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="ProcessingJobsPage.generated.cs", label="_innerComponent.Execute(cancellationToken)", span="63-63"];
m15_22 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label=Exception, prediction=118, span="70-70"];
m15_24 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="throw;", prediction=119, span="73-73"];
m15_19 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="ProcessingJobsPage.generated.cs", label="return;", span="64-64"];
m15_21 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="ProcessingJobsPage.generated.cs", label="throw;", span="68-68"];
m15_20 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="ProcessingJobsPage.generated.cs", label=OperationCanceledException, span="66-66"];
m15_31 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="ProcessingJobsPage.generated.cs", label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", span="57-57"];
m15_38 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="Entry lambda expression", span="80-85"];
m15_39 [cluster="lambda expression", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="String.Format(\r\n                            ''Error occurred during execution of '{0}' component. Execution will be retried (attempt {1} of {2}) in {3} seconds.'',\r\n                            _innerComponent,\r\n                            i + 1,\r\n                            MaxRetryAttempts,\r\n                            nextTry)", prediction=108, span="80-85"];
m15_40 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="Exit lambda expression", span="80-85"];
m15_65 [cluster="System.Math.Min(double, double)", file="ProcessingJobsPage.generated.cs", label="Entry System.Math.Min(double, double)", span="0-0"];
m15_51 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", span="110-110"];
m15_52 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", color=green, community=0, file="ProcessingJobsPage.generated.cs", label="return _innerComponent.ToString();", prediction=108, span="112-112"];
m15_53 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", file="ProcessingJobsPage.generated.cs", label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", span="110-110"];
m15_61 [cluster="System.Guid.NewGuid()", file="ProcessingJobsPage.generated.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m15_62 [cluster="System.Guid.GetHashCode()", file="ProcessingJobsPage.generated.cs", label="Entry System.Guid.GetHashCode()", span="0-0"];
m15_36 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ProcessingJobsPage.generated.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m15_55 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", span="115-115"];
m15_58 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="ProcessingJobsPage.generated.cs", label="return TimeSpan.FromSeconds(Math.Min(nextTry, MaxAttemptDelay.TotalSeconds));", span="122-122"];
m15_57 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="ProcessingJobsPage.generated.cs", label="var nextTry = rand.Next(\r\n                (int)Math.Pow(retryAttemptNumber, 2), (int)Math.Pow(retryAttemptNumber + 1, 2) + 1)", span="119-120"];
m15_56 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="ProcessingJobsPage.generated.cs", label="var rand = new Random(Guid.NewGuid().GetHashCode())", span="118-118"];
m15_59 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="ProcessingJobsPage.generated.cs", label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", span="115-115"];
m15_54 [cluster="object.ToString()", file="ProcessingJobsPage.generated.cs", label="Entry object.ToString()", span="0-0"];
m15_67 [file="ProcessingJobsPage.generated.cs", label="Hangfire.Server.AutomaticRetryServerComponentWrapper", span=""];
m15_68 [file="ProcessingJobsPage.generated.cs", label=i, span=""];
m15_69 [file="ProcessingJobsPage.generated.cs", label=nextTry, span=""];
m16_86 [cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="QueuesPage.generated.cs", label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57"];
m16_65 [cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", color=green, community=0, file="QueuesPage.generated.cs", label="return job.ToString();", prediction=122, span="122-122"];
m16_18 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="queue.Fetched.HasValue", span="169-169"];
m16_59 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="Exit HangFire.Web.Pages.QueuesPage.Execute()", span="57-57"];
m16_119 [cluster="System.Text.StringBuilder.Append(int)", file="QueuesPage.generated.cs", label="Entry System.Text.StringBuilder.Append(int)", span="0-0"];
m16_130 [cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", span="218-218"];
m16_131 [cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", color=green, community=0, file="QueuesPage.generated.cs", label="var label = queue != null \r\n                ? $''<a class=\''text-uppercase\'' href=\''{_page.Url.Queue(queue)}\''>{queue}</a>'' \r\n                : $''<span class=\''label label-danger\''><i>{Strings.Common_Unknown}</i></span>''", prediction=123, span="220-222"];
m16_132 [cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", color=green, community=0, file="QueuesPage.generated.cs", label="return new NonEscapedString(label);", prediction=124, span="224-224"];
m16_133 [cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="QueuesPage.generated.cs", label="Exit Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", span="218-218"];
m16_134 [cluster="Hangfire.Dashboard.UrlHelper.Queue(string)", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.UrlHelper.Queue(string)", span="68-68"];
m16_37 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label="!job.Value.InEnqueuedState", prediction=125, span="297-297"];
m16_73 [cluster="string.IsNullOrWhiteSpace(string)", file="QueuesPage.generated.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m16_117 [cluster="System.Text.StringBuilder.Append(string)", file="QueuesPage.generated.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m16_126 [cluster="Unk.Join", file="QueuesPage.generated.cs", label="Entry Unk.Join", span=""];
m16_7 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="queues.Count == 0", span="92-92"];
m16_10 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label=queues, prediction=126, span="126-126"];
m16_74 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", span="83-83"];
m16_69 [cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", color=green, community=0, file="QueuesPage.generated.cs", label="String.IsNullOrWhiteSpace(stateName)", prediction=127, span="127-127"];
m16_122 [cluster="Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="213-213"];
m16_123 [cluster="Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="QueuesPage.generated.cs", label="return String.Join('', '', properties.Select(x => $''{x.Key}: \''{x.Value}\''''));", prediction=128, span="215-215"];
m16_124 [cluster="Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="QueuesPage.generated.cs", label="Exit Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="213-213"];
m16_78 [cluster="Hangfire.Dashboard.UrlHelper.JobDetails(string)", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.UrlHelper.JobDetails(string)", span="58-58"];
m16_60 [cluster="System.Guid.TryParse(string, out System.Guid)", file="QueuesPage.generated.cs", label="Entry System.Guid.TryParse(string, out System.Guid)", span="0-0"];
m16_116 [cluster="System.Text.StringBuilder.StringBuilder()", file="QueuesPage.generated.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m16_143 [cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.StackTrace(string)", span="250-250"];
m16_144 [cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", color=green, community=0, file="QueuesPage.generated.cs", label="return new NonEscapedString(StackTraceFormatter.FormatHtml(stackTrace, StackTraceHtmlFragments));", prediction=129, span="252-252"];
m16_145 [cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="QueuesPage.generated.cs", label="Exit Hangfire.Dashboard.HtmlHelper.StackTrace(string)", span="250-250"];
m16_149 [cluster="System.Net.WebUtility.HtmlEncode(string)", file="QueuesPage.generated.cs", label="Entry System.Net.WebUtility.HtmlEncode(string)", span="0-0"];
m16_82 [cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", span="255-255"];
m16_147 [cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", color=green, community=0, file="QueuesPage.generated.cs", label="return WebUtility.HtmlEncode(text);", prediction=130, span="257-257"];
m16_148 [cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="QueuesPage.generated.cs", label="Exit Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", span="255-255"];
m16_121 [cluster="System.Text.StringBuilder.ToString()", file="QueuesPage.generated.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m16_63 [cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="QueuesPage.generated.cs", label="job == null", span="102-102"];
m16_0 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="Entry HangFire.Web.Pages.QueuesPage.Execute()", span="57-57"];
m16_2 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label="Layout = new LayoutPage { Title = ''Queues'' }", prediction=131, span="74-74"];
m16_26 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs", label="queue.FirstJobs.Count == 0", prediction=126, span="222-222"];
m16_87 [cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", span="150-150"];
m16_88 [cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", color=green, community=0, file="QueuesPage.generated.cs", label="return Raw($''<span data-moment-title=\''{JobHelper.ToTimestamp(time)}\''>{value}</span>'');", prediction=126, span="152-152"];
m16_89 [cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", file="QueuesPage.generated.cs", label="Exit Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", span="150-150"];
m16_61 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="QueuesPage.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m16_135 [cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.ServerId(string)", span="227-227"];
m16_138 [cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="QueuesPage.generated.cs", label="return new NonEscapedString(\r\n                $''<span class=\''labe label-defult text-uppercase\'' title=\''{serverId}\''>{shortenedId}</span>'');", span="234-235"];
m16_137 [cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="QueuesPage.generated.cs", label="var shortenedId = parts.Length > 1\r\n                ? String.Join('':'', parts.Take(parts.Length - 1))\r\n                : serverId", span="230-232"];
m16_136 [cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="QueuesPage.generated.cs", label="var parts = serverId.Split(':')", span="229-229"];
m16_139 [cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="QueuesPage.generated.cs", label="Exit Hangfire.Dashboard.HtmlHelper.ServerId(string)", span="227-227"];
m16_62 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="QueuesPage.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m16_64 [cluster="HttpRequestBase.LinkTo(string)", color=green, community=0, file="QueuesPage.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", prediction=134, span="24-24"];
m16_66 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="QueuesPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m16_142 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="QueuesPage.generated.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m16_90 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="155-155"];
m16_94 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs", label=displaySign, prediction=135, span="160-160"];
m16_93 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs", label="var builder = new StringBuilder()", prediction=135, span="159-159"];
m16_95 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs", label="builder.Append(duration.Value.TotalMilliseconds < 0 ? ''-'' : ''+'')", prediction=135, span="162-162"];
m16_96 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs", label="duration = duration.Value.Duration()", prediction=135, span="165-165"];
m16_97 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs", label="duration.Value.Days > 0", prediction=139, span="167-167"];
m16_98 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs", label="builder.Append($''{duration.Value.Days}d '')", prediction=135, span="169-169"];
m16_99 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs", label="duration.Value.Hours > 0", prediction=135, span="172-172"];
m16_100 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs", label="builder.Append($''{duration.Value.Hours}h '')", prediction=135, span="174-174"];
m16_101 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs", label="duration.Value.Minutes > 0", prediction=135, span="177-177"];
m16_102 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs", label="builder.Append($''{duration.Value.Minutes}m '')", prediction=135, span="179-179"];
m16_103 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs", label="duration.Value.TotalHours < 1", prediction=135, span="182-182"];
m16_104 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs", label="duration.Value.Seconds > 0", prediction=135, span="184-184"];
m16_105 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs", label="builder.Append(duration.Value.Seconds)", prediction=135, span="186-186"];
m16_106 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs", label="duration.Value.Milliseconds > 0", prediction=135, span="187-187"];
m16_107 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="QueuesPage.generated.cs", label="builder.Append($''.{duration.Value.Milliseconds}'')", span="189-189"];
m16_109 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs", label="duration.Value.Milliseconds > 0", prediction=135, span="196-196"];
m16_110 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs", label="builder.Append($''{duration.Value.Milliseconds}ms '')", prediction=135, span="198-198"];
m16_91 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="QueuesPage.generated.cs", label="duration == null", span="157-157"];
m16_108 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs", label="builder.Append(''s '')", prediction=135, span="192-192"];
m16_111 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs", label="builder.Length <= 1", prediction=135, span="203-203"];
m16_112 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs", label="builder.Append('' <1ms '')", prediction=135, span="205-205"];
m16_113 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs", label="builder.Remove(builder.Length - 1, 1)", prediction=135, span="208-208"];
m16_114 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="QueuesPage.generated.cs", label="return builder.ToString();", span="210-210"];
m16_92 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="QueuesPage.generated.cs", label="return null;", span="157-157"];
m16_115 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="QueuesPage.generated.cs", label="Exit Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="155-155"];
m16_141 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="QueuesPage.generated.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m16_29 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", label="queue.FirstJobs", span="255-255"];
m16_68 [cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.StateLabel(string)", span="125-125"];
m16_83 [cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145"];
m16_84 [cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", color=green, community=0, file="QueuesPage.generated.cs", label="return Raw($''<span data-moment=\''{JobHelper.ToTimestamp(value)}\''>{value}</span>'');", prediction=126, span="147-147"];
m16_85 [cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="QueuesPage.generated.cs", label="Exit Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145"];
m16_118 [cluster="System.TimeSpan.Duration()", file="QueuesPage.generated.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m16_127 [cluster="lambda expression", file="QueuesPage.generated.cs", label="Entry lambda expression", span="215-215"];
m16_128 [cluster="lambda expression", color=green, community=0, file="QueuesPage.generated.cs", label="$''{x.Key}: \''{x.Value}\''''", prediction=156, span="215-215"];
m16_129 [cluster="lambda expression", file="QueuesPage.generated.cs", label="Exit lambda expression", span="215-215"];
m16_71 [cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", color=green, community=0, file="QueuesPage.generated.cs", label="return Raw($''<span class=\''label label-default\'' style=\''background-color: {JobHistoryRenderer.GetForegroundStateColor(stateName)};\''>{stateName}</span>'');", prediction=126, span="132-132"];
m16_67 [cluster="Hangfire.Common.Job.ToString()", file="QueuesPage.generated.cs", label="Entry Hangfire.Common.Job.ToString()", span="179-179"];
m16_125 [cluster="Unk.Select", file="QueuesPage.generated.cs", label="Entry Unk.Select", span=""];
m16_140 [cluster="string.Split(params char[])", file="QueuesPage.generated.cs", label="Entry string.Split(params char[])", span="0-0"];
m16_70 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", color=green, community=0, file="QueuesPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", prediction=126, span="30-30"];
m16_72 [cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="QueuesPage.generated.cs", label="HangFire.Web.Pages.QueuesPage", span=""];
m16_75 [cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135"];
m16_76 [cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", color=green, community=0, file="QueuesPage.generated.cs", label="return Raw($''<a href=\''{_page.Url.JobDetails(jobId)}\''>{JobId(jobId)}</a>'');", prediction=126, span="137-137"];
m16_77 [cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="QueuesPage.generated.cs", label="Exit Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135"];
m16_79 [cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="QueuesPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140"];
m16_80 [cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", color=green, community=0, file="QueuesPage.generated.cs", label="return Raw($''<a class=\''job-method\'' href=\''{_page.Url.JobDetails(jobId)}\''>{HtmlEncode(JobName(job))}</a>'');", prediction=126, span="142-142"];
m16_81 [cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="QueuesPage.generated.cs", label="Exit Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140"];
m16_47 [cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", color=green, community=0, file="QueuesPage.generated.cs", label="partialPage.Assign(_page)", prediction=126, span="83-83"];
m16_48 [cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", color=green, community=0, file="QueuesPage.generated.cs", label="return new NonEscapedString(partialPage.ToString());", prediction=162, span="84-84"];
m16_120 [cluster="System.Text.StringBuilder.Remove(int, int)", file="QueuesPage.generated.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m16_146 [cluster="Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", file="QueuesPage.generated.cs", label="Entry Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", span="77-77"];
m16_150 [file="QueuesPage.generated.cs", label="Hangfire.Dashboard.HtmlHelper", span=""];
m17_55 [cluster="System.Threading.Thread.Join()", file="RecurringJobsPage.generated.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m17_33 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="RecurringJobsPage.generated.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
m17_18 [cluster="HangFire.Server.SchedulePoller.Dispose()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Server.SchedulePoller.Dispose()", span="44-44"];
m17_19 [cluster="HangFire.Server.SchedulePoller.Dispose()", file="RecurringJobsPage.generated.cs", label="_redis.Dispose()", span="46-46"];
m17_20 [cluster="HangFire.Server.SchedulePoller.Dispose()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Server.SchedulePoller.Dispose()", span="44-44"];
m17_38 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="71-71"];
m17_39 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs", label=true, span="75-75"];
m17_40 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs", label="var wasEnqueued = EnqueueNextScheduledJob()", span="77-77"];
m17_43 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs", label=Exception, span="88-88"];
m17_41 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs", label="wasEnqueued && !_cts.IsCancellationRequested", span="79-79"];
m17_42 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs", label="_stopped.WaitOne(_pollInterval)", span="82-82"];
m17_44 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs", label="_logger.Fatal(\r\n                    ''Scheduled jobs will not be added to their queues by this server instance: ''\r\n                    + ''unexpected exception caught in the SchedulePoller thread.'',\r\n                    ex)", span="90-93"];
m17_45 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="71-71"];
m17_17 [cluster="Unk.EnqueueScheduledJob", file="RecurringJobsPage.generated.cs", label="Entry Unk.EnqueueScheduledJob", span=""];
m17_29 [cluster="string.Format(string, object)", file="RecurringJobsPage.generated.cs", label="Entry string.Format(string, object)", span="0-0"];
m17_22 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", span="49-49"];
m17_23 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs", label="var jobType = _redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="51-51"];
m17_26 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs", label="JobState.Apply(\r\n                    _redis, new EnqueuedState(jobId, ''Enqueued by schedule poller.'', queue),\r\n                    ScheduledState.Name)", span="56-58"];
m17_27 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs", label="JobState.Apply(\r\n                    _redis,\r\n                    new FailedState(jobId, ''Could not enqueue the schedule job.'',\r\n                                    new InvalidOperationException(String.Format(''Could not find type '{0}'.'', jobType))),\r\n                    ScheduledState.Name)", span="62-66"];
m17_24 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="52-52"];
m17_25 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs", label="!String.IsNullOrEmpty(queue)", span="54-54"];
m17_28 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", span="49-49"];
m17_53 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="RecurringJobsPage.generated.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m17_0 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", span="20-20"];
m17_1 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", file="RecurringJobsPage.generated.cs", label="_redis = redisManager.GetClient()", span="22-22"];
m17_2 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", file="RecurringJobsPage.generated.cs", label="_pollInterval = pollInterval", span="23-23"];
m17_3 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", span="20-20"];
m17_13 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="RecurringJobsPage.generated.cs", label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="44-44"];
m17_31 [cluster="Unk.TryToGetQueue", file="RecurringJobsPage.generated.cs", label="Entry Unk.TryToGetQueue", span=""];
m17_54 [cluster="System.Threading.EventWaitHandle.Set()", file="RecurringJobsPage.generated.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m17_35 [cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="RecurringJobsPage.generated.cs", label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10"];
m17_36 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="RecurringJobsPage.generated.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m17_4 [cluster="Unk.GetClient", file="RecurringJobsPage.generated.cs", label="Entry Unk.GetClient", span=""];
m17_32 [cluster="string.IsNullOrEmpty(string)", file="RecurringJobsPage.generated.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m17_21 [cluster="Unk.Dispose", file="RecurringJobsPage.generated.cs", label="Entry Unk.Dispose", span=""];
m17_48 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="97-97"];
m17_49 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="RecurringJobsPage.generated.cs", label="_cts.Cancel()", span="99-99"];
m17_51 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="RecurringJobsPage.generated.cs", label="thread.Join()", span="101-101"];
m17_50 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="RecurringJobsPage.generated.cs", label="_stopped.Set()", span="100-100"];
m17_52 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="97-97"];
m17_47 [cluster="Unk.Fatal", file="RecurringJobsPage.generated.cs", label="Entry Unk.Fatal", span=""];
m17_15 [cluster="Unk.FirstOrDefault", file="RecurringJobsPage.generated.cs", label="Entry Unk.FirstOrDefault", span=""];
m17_34 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="RecurringJobsPage.generated.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m17_30 [cluster="Unk.GetValueFromHash", file="RecurringJobsPage.generated.cs", label="Entry Unk.GetValueFromHash", span=""];
m17_46 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="RecurringJobsPage.generated.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m17_16 [cluster="Unk.IsNullOrEmpty", file="RecurringJobsPage.generated.cs", label="Entry Unk.IsNullOrEmpty", span=""];
m17_37 [cluster="Unk.Format", file="RecurringJobsPage.generated.cs", label="Entry Unk.Format", span=""];
m17_14 [cluster="Unk.GetRangeFromSortedSetByLowestScore", file="RecurringJobsPage.generated.cs", label="Entry Unk.GetRangeFromSortedSetByLowestScore", span=""];
m17_5 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="26-26"];
m17_6 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs", label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="28-28"];
m17_7 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs", label="var jobId = _redis\r\n                .GetRangeFromSortedSetByLowestScore(\r\n                    ''hangfire:schedule'', Double.NegativeInfinity, timestamp, 0, 1)\r\n                .FirstOrDefault()", span="30-33"];
m17_8 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs", label="String.IsNullOrEmpty(jobId)", span="35-35"];
m17_10 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs", label="EnqueueScheduledJob(jobId)", span="40-40"];
m17_9 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs", label="return false;", span="37-37"];
m17_11 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs", label="return true;", span="41-41"];
m17_12 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="26-26"];
m17_56 [file="RecurringJobsPage.generated.cs", label="HangFire.Server.SchedulePoller", span=""];
m18_19 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs", label="Entry Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", span="62-62"];
m18_21 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs", label="var state = _connection.GetStateData(_jobId)", span="64-64"];
m18_22 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs", label="state == null", span="66-66"];
m18_24 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs", label="!state.Name.Equals(ProcessingState.StateName, StringComparison.OrdinalIgnoreCase)", span="71-71"];
m18_26 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs", label="!state.Data.ContainsKey(''WorkerId'')", span="76-76"];
m18_28 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs", label="!state.Data[''WorkerId''].Equals(_workerId, StringComparison.OrdinalIgnoreCase)", span="81-81"];
m18_23 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs", label="return true;", span="68-68"];
m18_25 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs", label="return true;", span="73-73"];
m18_27 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs", label="return true;", span="78-78"];
m18_29 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs", label="return true;", span="83-83"];
m18_30 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs", label="return false;", span="86-86"];
m18_31 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs", label="Exit Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", span="62-62"];
m18_32 [cluster="Hangfire.Storage.IStorageConnection.GetStateData(string)", file="RedisConnection.cs", label="Entry Hangfire.Storage.IStorageConnection.GetStateData(string)", span="45-45"];
m18_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisConnection.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m18_0 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs", label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", span="31-31"];
m18_1 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs", label="jobId == null", span="37-37"];
m18_3 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs", label="workerId == null", span="38-38"];
m18_5 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs", label="connection == null", span="39-39"];
m18_7 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs", label="_jobId = jobId", span="41-41"];
m18_8 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs", label="_workerId = workerId", span="42-42"];
m18_9 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs", label="_connection = connection", span="43-43"];
m18_10 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs", label="_shutdownToken = shutdownToken", span="44-44"];
m18_2 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs", label="throw new ArgumentNullException(''jobId'');", span="37-37"];
m18_4 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs", label="throw new ArgumentNullException(''workerId'');", span="38-38"];
m18_6 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs", label="throw new ArgumentNullException(''connection'');", span="39-39"];
m18_11 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs", label="Exit Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", span="31-31"];
m18_13 [cluster="Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", file="RedisConnection.cs", label="Entry Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", span="52-52"];
m18_14 [cluster="Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", file="RedisConnection.cs", label="_shutdownToken.ThrowIfCancellationRequested()", span="54-54"];
m18_15 [cluster="Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", file="RedisConnection.cs", label="IsJobAborted()", span="56-56"];
m18_16 [cluster="Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", file="RedisConnection.cs", label="throw new JobAbortedException();", span="58-58"];
m18_17 [cluster="Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", file="RedisConnection.cs", label="Exit Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", span="52-52"];
m18_20 [cluster="Hangfire.Server.JobAbortedException.JobAbortedException()", file="RedisConnection.cs", label="Entry Hangfire.Server.JobAbortedException.JobAbortedException()", span="20-20"];
m18_34 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="RedisConnection.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m18_33 [cluster="string.Equals(string, System.StringComparison)", file="RedisConnection.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m18_18 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="RedisConnection.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m18_35 [file="RedisConnection.cs", label="Hangfire.Server.ServerJobCancellationToken", span=""];
m19_12 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsNull_WhenJobDoesNotExist()", file="RedisConnectionFacts.cs", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsNull_WhenJobDoesNotExist()", span="18-18"];
m19_13 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsNull_WhenJobDoesNotExist()", file="RedisConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetStateData(''random-id'');\r\n                Assert.Null(result);\r\n            })", span="20-24"];
m19_14 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsNull_WhenJobDoesNotExist()", file="RedisConnectionFacts.cs", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsNull_WhenJobDoesNotExist()", span="18-18"];
m19_33 [cluster="Unk.SetRangeInHash", file="RedisConnectionFacts.cs", label="Entry Unk.SetRangeInHash", span=""];
m19_3 [cluster="Unk.UseConnection", file="RedisConnectionFacts.cs", label="Entry Unk.UseConnection", span=""];
m19_97 [cluster="Unk.GetAllEntriesFromHash", file="RedisConnectionFacts.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m19_11 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnectionFacts.cs", label="Entry HangFire.Redis.RedisConnection.GetStateData(string)", span="204-204"];
m19_35 [cluster="Unk.Equal", file="RedisConnectionFacts.cs", label="Entry Unk.Equal", span=""];
m19_115 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ReturnsAllEntries()", file="RedisConnectionFacts.cs", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ReturnsAllEntries()", span="147-147"];
m19_116 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ReturnsAllEntries()", file="RedisConnectionFacts.cs", label="UseConnections((redis, connection) =>\r\n            {\r\n                // Arrange\r\n                redis.SetRangeInHash(''hangfire:some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n\r\n                // Assert\r\n                Assert.NotNull(result);\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="149-165"];
m19_117 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ReturnsAllEntries()", file="RedisConnectionFacts.cs", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ReturnsAllEntries()", span="147-147"];
m19_7 [cluster="Unk.>", file="RedisConnectionFacts.cs", label="Entry Unk.>", span=""];
m19_132 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="RedisConnectionFacts.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m19_0 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="RedisConnectionFacts.cs", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="10-10"];
m19_1 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="RedisConnectionFacts.cs", label="UseConnection(\r\n                connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null)))", span="12-14"];
m19_2 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="RedisConnectionFacts.cs", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="10-10"];
m19_65 [cluster="Unk.AddItemToSortedSet", file="RedisConnectionFacts.cs", label="Entry Unk.AddItemToSortedSet", span=""];
m19_133 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", file="RedisConnectionFacts.cs", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", span="177-177"];
m19_134 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", file="RedisConnectionFacts.cs", label="var connection = new RedisConnection(RedisUtils.CreateClient())", span="179-179"];
m19_135 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", file="RedisConnectionFacts.cs", label="action(connection)", span="181-181"];
m19_136 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", file="RedisConnectionFacts.cs", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", span="177-177"];
m19_137 [cluster="System.Action<T>.Invoke(T)", file="RedisConnectionFacts.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m19_77 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisConnectionFacts.cs", label="Entry HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="255-255"];
m19_34 [cluster="Unk.NotNull", file="RedisConnectionFacts.cs", label="Entry Unk.NotNull", span=""];
m19_32 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisConnectionFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m19_36 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="RedisConnectionFacts.cs", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="51-51"];
m19_37 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", color=green, community=0, file="RedisConnectionFacts.cs", label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null)))", prediction=163, span="53-54"];
m19_38 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="RedisConnectionFacts.cs", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="51-51"];
m19_19 [cluster="Unk.Null", file="RedisConnectionFacts.cs", label="Entry Unk.Null", span=""];
m19_98 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="RedisConnectionFacts.cs", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="130-130"];
m19_99 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="RedisConnectionFacts.cs", label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null)))", span="132-133"];
m19_100 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="RedisConnectionFacts.cs", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="130-130"];
m19_67 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="RedisConnectionFacts.cs", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="89-89"];
m19_68 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="RedisConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="91-97"];
m19_69 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="RedisConnectionFacts.cs", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="89-89"];
m19_108 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ReturnsNullValue_WhenHashDoesNotExist()", file="RedisConnectionFacts.cs", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ReturnsNullValue_WhenHashDoesNotExist()", span="137-137"];
m19_109 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ReturnsNullValue_WhenHashDoesNotExist()", file="RedisConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n                Assert.Null(result);\r\n            })", span="139-143"];
m19_110 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ReturnsNullValue_WhenHashDoesNotExist()", file="RedisConnectionFacts.cs", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ReturnsNullValue_WhenHashDoesNotExist()", span="137-137"];
m19_23 [cluster="Unk.UseConnections", file="RedisConnectionFacts.cs", label="Entry Unk.UseConnections", span=""];
m19_118 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Entry lambda expression", span="149-165"];
m19_4 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Entry lambda expression", span="13-14"];
m19_5 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null))", span="13-14"];
m19_9 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="connection.GetStateData(null)", span="14-14"];
m19_6 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Exit lambda expression", span="13-14"];
m19_8 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Entry lambda expression", span="14-14"];
m19_10 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Exit lambda expression", span="14-14"];
m19_15 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Entry lambda expression", span="20-24"];
m19_16 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="var result = connection.GetStateData(''random-id'')", span="22-22"];
m19_17 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Assert.Null(result)", span="23-23"];
m19_18 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Exit lambda expression", span="20-24"];
m19_24 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Entry lambda expression", span="30-47"];
m19_25 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="redis.SetRangeInHash(\r\n                    ''hangfire:job:my-job:state'',\r\n                    new Dictionary<string, string>\r\n                    {\r\n                        { ''State'', ''Name'' },\r\n                        { ''Reason'', ''Reason'' },\r\n                        { ''Key'', ''Value'' }\r\n                    })", span="32-39"];
m19_26 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="var result = connection.GetStateData(''my-job'')", span="41-41"];
m19_27 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Assert.NotNull(result)", span="43-43"];
m19_28 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Assert.Equal(''Name'', result.Name)", span="44-44"];
m19_29 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Assert.Equal(''Reason'', result.Reason)", span="45-45"];
m19_30 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Assert.Equal(''Value'', result.Data[''Key''])", span="46-46"];
m19_31 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Exit lambda expression", span="30-47"];
m19_39 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Entry lambda expression", span="53-54"];
m19_40 [cluster="lambda expression", color=green, community=0, file="RedisConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null))", prediction=164, span="54-54"];
m19_43 [cluster="lambda expression", color=green, community=0, file="RedisConnectionFacts.cs", label="connection.GetAllItemsFromSet(null)", prediction=165, span="54-54"];
m19_41 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Exit lambda expression", span="53-54"];
m19_42 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Entry lambda expression", span="54-54"];
m19_44 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Exit lambda expression", span="54-54"];
m19_49 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Entry lambda expression", span="60-66"];
m19_50 [cluster="lambda expression", color=green, community=0, file="RedisConnectionFacts.cs", label="var result = connection.GetAllItemsFromSet(''some-set'')", prediction=166, span="62-62"];
m19_51 [cluster="lambda expression", color=green, community=0, file="RedisConnectionFacts.cs", label="Assert.NotNull(result)", prediction=167, span="64-64"];
m19_52 [cluster="lambda expression", color=green, community=0, file="RedisConnectionFacts.cs", label="Assert.Equal(0, result.Count)", prediction=166, span="65-65"];
m19_53 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Exit lambda expression", span="60-66"];
m19_57 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Entry lambda expression", span="72-85"];
m19_58 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="redis.AddItemToSortedSet(''hangfire:some-set'', ''1'')", span="75-75"];
m19_59 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="redis.AddItemToSortedSet(''hangfire:some-set'', ''2'')", span="76-76"];
m19_60 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="var result = connection.GetAllItemsFromSet(''some-set'')", span="79-79"];
m19_61 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Assert.Equal(2, result.Count)", span="82-82"];
m19_62 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Assert.Contains(''1'', result)", span="83-83"];
m19_63 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Assert.Contains(''2'', result)", span="84-84"];
m19_64 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Exit lambda expression", span="72-85"];
m19_70 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Entry lambda expression", span="91-97"];
m19_71 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()))", span="93-94"];
m19_75 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="connection.SetRangeInHash(null, new Dictionary<string, string>())", span="94-94"];
m19_72 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Assert.Equal(''key'', exception.ParamName)", span="96-96"];
m19_74 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Entry lambda expression", span="94-94"];
m19_73 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Exit lambda expression", span="91-97"];
m19_76 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Exit lambda expression", span="94-94"];
m19_81 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Entry lambda expression", span="103-109"];
m19_82 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null))", span="105-106"];
m19_86 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="connection.SetRangeInHash(''some-hash'', null)", span="106-106"];
m19_83 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Assert.Equal(''keyValuePairs'', exception.ParamName)", span="108-108"];
m19_85 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Entry lambda expression", span="106-106"];
m19_84 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Exit lambda expression", span="103-109"];
m19_87 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Exit lambda expression", span="106-106"];
m19_91 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Entry lambda expression", span="115-126"];
m19_92 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="117-121"];
m19_93 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="var hash = redis.GetAllEntriesFromHash(''hangfire:some-hash'')", span="123-123"];
m19_94 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Assert.Equal(''Value1'', hash[''Key1''])", span="124-124"];
m19_95 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Assert.Equal(''Value2'', hash[''Key2''])", span="125-125"];
m19_96 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Exit lambda expression", span="115-126"];
m19_101 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Entry lambda expression", span="132-133"];
m19_102 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null))", span="133-133"];
m19_105 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="connection.GetAllEntriesFromHash(null)", span="133-133"];
m19_103 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Exit lambda expression", span="132-133"];
m19_104 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Entry lambda expression", span="133-133"];
m19_106 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Exit lambda expression", span="133-133"];
m19_111 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Entry lambda expression", span="139-143"];
m19_112 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="141-141"];
m19_113 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Assert.Null(result)", span="142-142"];
m19_114 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Exit lambda expression", span="139-143"];
m19_119 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="redis.SetRangeInHash(''hangfire:some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="152-156"];
m19_120 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="159-159"];
m19_121 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Assert.NotNull(result)", span="162-162"];
m19_122 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Assert.Equal(''Value1'', result[''Key1''])", span="163-163"];
m19_123 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Assert.Equal(''Value2'', result[''Key2''])", span="164-164"];
m19_124 [cluster="lambda expression", file="RedisConnectionFacts.cs", label="Exit lambda expression", span="149-165"];
m19_20 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsCorrectResult()", file="RedisConnectionFacts.cs", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsCorrectResult()", span="28-28"];
m19_21 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsCorrectResult()", file="RedisConnectionFacts.cs", label="UseConnections((redis, connection) =>\r\n            {\r\n                redis.SetRangeInHash(\r\n                    ''hangfire:job:my-job:state'',\r\n                    new Dictionary<string, string>\r\n                    {\r\n                        { ''State'', ''Name'' },\r\n                        { ''Reason'', ''Reason'' },\r\n                        { ''Key'', ''Value'' }\r\n                    });\r\n\r\n                var result = connection.GetStateData(''my-job'');\r\n\r\n                Assert.NotNull(result);\r\n                Assert.Equal(''Name'', result.Name);\r\n                Assert.Equal(''Reason'', result.Reason);\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="30-47"];
m19_22 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsCorrectResult()", file="RedisConnectionFacts.cs", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsCorrectResult()", span="28-28"];
m19_66 [cluster="Unk.Contains", file="RedisConnectionFacts.cs", label="Entry Unk.Contains", span=""];
m19_107 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="RedisConnectionFacts.cs", label="Entry HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", span="263-263"];
m19_130 [cluster="HangFire.Redis.Tests.RedisUtils.CreateClient()", file="RedisConnectionFacts.cs", label="Entry HangFire.Redis.Tests.RedisUtils.CreateClient()", span="15-15"];
m19_54 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="RedisConnectionFacts.cs", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="70-70"];
m19_55 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="RedisConnectionFacts.cs", label="UseConnections((redis, connection) =>\r\n            {\r\n                // Arrange\r\n                redis.AddItemToSortedSet(''hangfire:some-set'', ''1'');\r\n                redis.AddItemToSortedSet(''hangfire:some-set'', ''2'');\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Contains(''1'', result);\r\n                Assert.Contains(''2'', result);\r\n            })", span="72-85"];
m19_56 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="RedisConnectionFacts.cs", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="70-70"];
m19_131 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="RedisConnectionFacts.cs", label="Entry HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="32-32"];
m19_46 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenSetDoesNotExist()", file="RedisConnectionFacts.cs", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenSetDoesNotExist()", span="58-58"];
m19_47 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenSetDoesNotExist()", color=green, community=0, file="RedisConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                Assert.NotNull(result);\r\n                Assert.Equal(0, result.Count);\r\n            })", prediction=169, span="60-66"];
m19_48 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenSetDoesNotExist()", file="RedisConnectionFacts.cs", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenSetDoesNotExist()", span="58-58"];
m19_78 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="RedisConnectionFacts.cs", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="101-101"];
m19_79 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="RedisConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null));\r\n\r\n                Assert.Equal(''keyValuePairs'', exception.ParamName);\r\n            })", span="103-109"];
m19_80 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="RedisConnectionFacts.cs", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="101-101"];
m19_125 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", file="RedisConnectionFacts.cs", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", span="168-168"];
m19_126 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", file="RedisConnectionFacts.cs", label="var redis = RedisUtils.CreateClient()", span="170-170"];
m19_128 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", file="RedisConnectionFacts.cs", label="action(redis, connection)", span="173-173"];
m19_127 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", file="RedisConnectionFacts.cs", label="var connection = new RedisConnection(redis)", span="171-171"];
m19_129 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", file="RedisConnectionFacts.cs", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", span="168-168"];
m19_45 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="RedisConnectionFacts.cs", label="Entry HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", span="240-240"];
m19_88 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_SetsAllGivenKeyPairs()", file="RedisConnectionFacts.cs", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_SetsAllGivenKeyPairs()", span="113-113"];
m19_89 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_SetsAllGivenKeyPairs()", file="RedisConnectionFacts.cs", label="UseConnections((redis, connection) =>\r\n            {\r\n                connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                });\r\n\r\n                var hash = redis.GetAllEntriesFromHash(''hangfire:some-hash'');\r\n                Assert.Equal(''Value1'', hash[''Key1'']);\r\n                Assert.Equal(''Value2'', hash[''Key2'']);\r\n            })", span="115-126"];
m19_90 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_SetsAllGivenKeyPairs()", file="RedisConnectionFacts.cs", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_SetsAllGivenKeyPairs()", span="113-113"];
m19_138 [file="RedisConnectionFacts.cs", label="HangFire.Redis.Tests.RedisConnectionFacts", span=""];
m19_139 [file="RedisConnectionFacts.cs", label="HangFire.Redis.RedisConnection", span=""];
m19_140 [file="RedisConnectionFacts.cs", label="HangFire.Redis.RedisConnection", span=""];
m19_141 [file="RedisConnectionFacts.cs", label="HangFire.Redis.RedisConnection", span=""];
m19_142 [file="RedisConnectionFacts.cs", label="HangFire.Redis.RedisConnection", span=""];
m19_143 [file="RedisConnectionFacts.cs", label="HangFire.Redis.RedisConnection", span=""];
m20_19 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", file="RedisMonitoringApi.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", span="78-78"];
m20_73 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", color=green, community=0, file="RedisMonitoringApi.cs", label="return new InfiniteLoopComponent(_inner.Object);", prediction=170, span="80-80"];
m20_74 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", file="RedisMonitoringApi.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", span="78-78"];
m20_20 [cluster="Unk.Same", file="RedisMonitoringApi.cs", label="Entry Unk.Same", span=""];
m20_75 [cluster="InfiniteLoopComponent.cstr", file="RedisMonitoringApi.cs", label="Entry InfiniteLoopComponent.cstr", span=""];
m20_30 [cluster="System.TimeSpan.FromMilliseconds(double)", file="RedisMonitoringApi.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m20_14 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", file="RedisMonitoringApi.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", span="26-26"];
m20_17 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", color=green, community=0, file="RedisMonitoringApi.cs", label="Assert.Same(_inner.Object, result)", prediction=170, span="30-30"];
m20_16 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", file="RedisMonitoringApi.cs", label="var result = component.InnerComponent", span="29-29"];
m20_15 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", file="RedisMonitoringApi.cs", label="var component = CreateComponent()", span="28-28"];
m20_18 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", file="RedisMonitoringApi.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", span="26-26"];
m20_72 [cluster="Unk.Equal", file="RedisMonitoringApi.cs", label="Entry Unk.Equal", span=""];
m20_55 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="RedisMonitoringApi.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m20_41 [cluster="System.Threading.Thread.Sleep(int)", file="RedisMonitoringApi.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m20_9 [cluster="Unk.>", file="RedisMonitoringApi.cs", label="Entry Unk.>", span=""];
m20_6 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="RedisMonitoringApi.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="20-20"];
m20_7 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="RedisMonitoringApi.cs", label="Assert.Throws<ArgumentNullException>(() => new InfiniteLoopComponent(null))", span="22-22"];
m20_8 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="RedisMonitoringApi.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="20-20"];
m20_21 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", file="RedisMonitoringApi.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", span="34-34"];
m20_24 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", color=green, community=0, file="RedisMonitoringApi.cs", label="_cts.CancelAfter(TimeSpan.FromMilliseconds(100))", prediction=170, span="41-41"];
m20_23 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", file="RedisMonitoringApi.cs", label="var component = CreateComponent()", span="40-40"];
m20_25 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", file="RedisMonitoringApi.cs", label="Assert.Throws<OperationCanceledException>(() => component.Execute(_cts.Token))", span="44-44"];
m20_26 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", color=green, community=0, file="RedisMonitoringApi.cs", label="_inner.Verify(x => x.Execute(_cts.Token), Times.AtLeast(5))", prediction=170, span="47-47"];
m20_22 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", file="RedisMonitoringApi.cs", label="_inner.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                  .Callback(() => { Thread.Sleep(5); })", span="37-38"];
m20_27 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", file="RedisMonitoringApi.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", span="34-34"];
m20_45 [cluster="Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", file="RedisMonitoringApi.cs", label="Entry Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", span="32-32"];
m20_0 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="RedisMonitoringApi.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="13-13"];
m20_1 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="RedisMonitoringApi.cs", label="_inner = new Mock<IServerComponent>()", span="15-15"];
m20_2 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="RedisMonitoringApi.cs", label="_cts = new CancellationTokenSource()", span="16-16"];
m20_3 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="RedisMonitoringApi.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="13-13"];
m20_71 [cluster="Unk.ToString", file="RedisMonitoringApi.cs", label="Entry Unk.ToString", span=""];
m20_28 [cluster="Unk.Setup", file="RedisMonitoringApi.cs", label="Entry Unk.Setup", span=""];
m20_5 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="RedisMonitoringApi.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m20_4 [cluster="Mock<IServerComponent>.cstr", file="RedisMonitoringApi.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m20_10 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="22-22"];
m20_46 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="47-47"];
m20_47 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="x.Execute(_cts.Token)", prediction=170, span="47-47"];
m20_48 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="47-47"];
m20_57 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="component.Execute(_cts.Token)", span="58-58"];
m20_43 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="component.Execute(_cts.Token)", span="44-44"];
m20_42 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="44-44"];
m20_35 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="37-37"];
m20_60 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="61-61"];
m20_56 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="58-58"];
m20_58 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="58-58"];
m20_34 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="37-37"];
m20_38 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="38-38"];
m20_44 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="44-44"];
m20_59 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="61-61"];
m20_36 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="37-37"];
m20_61 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="61-61"];
m20_40 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="38-38"];
m20_39 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Thread.Sleep(5)", span="38-38"];
m20_11 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="new InfiniteLoopComponent(null)", span="22-22"];
m20_12 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="22-22"];
m20_65 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="RedisMonitoringApi.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="71-71"];
m20_68 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", color=green, community=0, file="RedisMonitoringApi.cs", label="Assert.Equal(_inner.Object.ToString(), result)", prediction=170, span="75-75"];
m20_67 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="RedisMonitoringApi.cs", label="var result = component.ToString()", span="74-74"];
m20_66 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="RedisMonitoringApi.cs", label="var component = CreateComponent()", span="73-73"];
m20_69 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="RedisMonitoringApi.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="71-71"];
m20_49 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="RedisMonitoringApi.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", span="51-51"];
m20_50 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", color=green, community=0, file="RedisMonitoringApi.cs", label="var component = CreateComponent()", prediction=176, span="54-54"];
m20_51 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="RedisMonitoringApi.cs", label="_cts.Cancel()", span="55-55"];
m20_52 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="RedisMonitoringApi.cs", label="Assert.Throws<OperationCanceledException>(() => component.Execute(_cts.Token))", span="58-58"];
m20_53 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="RedisMonitoringApi.cs", label="_inner.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Never)", span="61-61"];
m20_54 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="RedisMonitoringApi.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", span="51-51"];
m20_31 [cluster="System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)", file="RedisMonitoringApi.cs", label="Entry System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)", span="0-0"];
m20_32 [cluster="Unk.AtLeast", file="RedisMonitoringApi.cs", label="Entry Unk.AtLeast", span=""];
m20_62 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", file="RedisMonitoringApi.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", span="65-65"];
m20_63 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", file="RedisMonitoringApi.cs", label="_cts.Cancel()", span="67-67"];
m20_64 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", file="RedisMonitoringApi.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", span="65-65"];
m20_37 [cluster="Unk.Execute", file="RedisMonitoringApi.cs", label="Entry Unk.Execute", span=""];
m20_70 [cluster="Hangfire.Server.InfiniteLoopComponent.ToString()", file="RedisMonitoringApi.cs", label="Entry Hangfire.Server.InfiniteLoopComponent.ToString()", span="41-41"];
m20_29 [cluster="Unk.Callback", file="RedisMonitoringApi.cs", label="Entry Unk.Callback", span=""];
m20_13 [cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", file="RedisMonitoringApi.cs", label="Entry Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", span="24-24"];
m20_33 [cluster="Unk.Verify", file="RedisMonitoringApi.cs", label="Entry Unk.Verify", span=""];
m20_76 [file="RedisMonitoringApi.cs", label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", span=""];
m20_78 [file="RedisMonitoringApi.cs", label=component, span=""];
m20_77 [file="RedisMonitoringApi.cs", label=component, span=""];
m21_13 [cluster="System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime, System.TimeZoneInfo)", file="RedisStorage.cs", label="Entry System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime, System.TimeZoneInfo)", span="0-0"];
m21_10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisStorage.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m21_23 [cluster="Unk.GetNextOccurrences", file="RedisStorage.cs", label="Entry Unk.GetNextOccurrences", span=""];
m21_16 [cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="RedisStorage.cs", label="Entry Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", span="49-49"];
m21_17 [cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="RedisStorage.cs", label="lastInstant.HasValue && lastInstant.Value.Kind != DateTimeKind.Utc", span="51-51"];
m21_19 [cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="RedisStorage.cs", label="var baseTime = lastInstant ?? NowInstant.AddSeconds(-1)", span="56-56"];
m21_18 [cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="RedisStorage.cs", label="throw new ArgumentException(''Only DateTime values in UTC should be passed.'', ''lastInstant'');", span="53-53"];
m21_20 [cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="RedisStorage.cs", label="var endTime = NowInstant.AddSeconds(1)", span="57-57"];
m21_21 [cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="RedisStorage.cs", label="return _schedule\r\n                .GetNextOccurrences(\r\n                    TimeZoneInfo.ConvertTimeFromUtc(baseTime, _timeZone),\r\n                    TimeZoneInfo.ConvertTimeFromUtc(endTime, _timeZone))\r\n                .Select(x => TimeZoneInfo.ConvertTimeToUtc(x, _timeZone))\r\n                .ToList();", span="59-64"];
m21_22 [cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="RedisStorage.cs", label="Exit Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", span="49-49"];
m21_11 [cluster="System.ArgumentException.ArgumentException(string, string)", file="RedisStorage.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m21_25 [cluster="Unk.ToList", file="RedisStorage.cs", label="Entry Unk.ToList", span=""];
m21_12 [cluster="System.DateTime.AddSeconds(double)", file="RedisStorage.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m21_14 [cluster="Unk.GetNextOccurrence", file="RedisStorage.cs", label="Entry Unk.GetNextOccurrence", span=""];
m21_15 [cluster="Unk.ConvertTimeToUtc", file="RedisStorage.cs", label="Entry Unk.ConvertTimeToUtc", span=""];
m21_26 [cluster="lambda expression", file="RedisStorage.cs", label="Entry lambda expression", span="63-63"];
m21_27 [cluster="lambda expression", file="RedisStorage.cs", label="TimeZoneInfo.ConvertTimeToUtc(x, _timeZone)", span="63-63"];
m21_28 [cluster="lambda expression", file="RedisStorage.cs", label="Exit lambda expression", span="63-63"];
m21_0 [cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="RedisStorage.cs", label="Entry Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", span="29-29"];
m21_1 [cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="RedisStorage.cs", label="schedule == null", span="31-31"];
m21_3 [cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="RedisStorage.cs", label="nowInstant.Kind != DateTimeKind.Utc", span="32-32"];
m21_5 [cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="RedisStorage.cs", label="_timeZone = timeZone", span="37-37"];
m21_6 [cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="RedisStorage.cs", label="_schedule = schedule", span="38-38"];
m21_7 [cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="RedisStorage.cs", label="NowInstant = nowInstant.AddSeconds(-nowInstant.Second)", span="40-40"];
m21_2 [cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="RedisStorage.cs", label="throw new ArgumentNullException(''schedule'');", span="31-31"];
m21_4 [cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="RedisStorage.cs", label="throw new ArgumentException(''Only DateTime values in UTC should be passed.'', ''nowInstant'');", span="34-34"];
m21_8 [cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="RedisStorage.cs", label="NextInstant = TimeZoneInfo.ConvertTimeToUtc(\r\n                _schedule.GetNextOccurrence(TimeZoneInfo.ConvertTimeFromUtc(NowInstant, _timeZone)),\r\n                _timeZone)", span="41-43"];
m21_9 [cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="RedisStorage.cs", label="Exit Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", span="29-29"];
m21_24 [cluster="Unk.Select", file="RedisStorage.cs", label="Entry Unk.Select", span=""];
m21_29 [file="RedisStorage.cs", label="Hangfire.Server.ScheduleInstant", span=""];
m22_66 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="RetryAttribute.cs", label="Entry HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", span="153-153"];
m22_67 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="RetryAttribute.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server shuts down, it should clear its properties list'', ((string[])(null)))", span="155-155"];
m22_68 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="RetryAttribute.cs", label="this.ScenarioSetup(scenarioInfo)", span="157-157"];
m22_69 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="RetryAttribute.cs", label="testRunner.When(''the \'Test\' server shuts down'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="159-159"];
m22_70 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="RetryAttribute.cs", label="testRunner.Then(''the storage should not contain an entry for the \'Test\' server properties'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="161-161"];
m22_71 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="RetryAttribute.cs", label="this.ScenarioCleanup()", span="163-163"];
m22_72 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="RetryAttribute.cs", label="Exit HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", span="153-153"];
m22_22 [cluster="HangFire.Tests.ServerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="RetryAttribute.cs", label="Entry HangFire.Tests.ServerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m22_23 [cluster="HangFire.Tests.ServerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="RetryAttribute.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m22_24 [cluster="HangFire.Tests.ServerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="RetryAttribute.cs", label="Exit HangFire.Tests.ServerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m22_25 [cluster="Unk.OnScenarioStart", file="RetryAttribute.cs", label="Entry Unk.OnScenarioStart", span=""];
m22_26 [cluster="HangFire.Tests.ServerFeature.ScenarioCleanup()", file="RetryAttribute.cs", label="Entry HangFire.Tests.ServerFeature.ScenarioCleanup()", span="66-66"];
m22_27 [cluster="HangFire.Tests.ServerFeature.ScenarioCleanup()", file="RetryAttribute.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m22_28 [cluster="HangFire.Tests.ServerFeature.ScenarioCleanup()", file="RetryAttribute.cs", label="Exit HangFire.Tests.ServerFeature.ScenarioCleanup()", span="66-66"];
m22_29 [cluster="Unk.CollectScenarioErrors", file="RetryAttribute.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m22_52 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="RetryAttribute.cs", label="Entry HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", span="119-119"];
m22_53 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="RetryAttribute.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server starts, it should publicate its queues'', ((string[])(null)))", span="121-121"];
m22_54 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="RetryAttribute.cs", label="this.ScenarioSetup(scenarioInfo)", span="123-123"];
m22_55 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="RetryAttribute.cs", label="testRunner.When(''the \'Test\' server starts with the queues critical, high'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="125-125"];
m22_56 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="RetryAttribute.cs", label="testRunner.Then(''the \'Test\' server\'s queues list should contain queues critical, high'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="127-127"];
m22_57 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="RetryAttribute.cs", label="this.ScenarioCleanup()", span="129-129"];
m22_58 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="RetryAttribute.cs", label="Exit HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", span="119-119"];
m22_59 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="RetryAttribute.cs", label="Entry HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", span="136-136"];
m22_60 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="RetryAttribute.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server shuts down, it should remove itself from the servers set'', ((string[])(null)))", span="138-138"];
m22_61 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="RetryAttribute.cs", label="this.ScenarioSetup(scenarioInfo)", span="140-140"];
m22_62 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="RetryAttribute.cs", label="testRunner.When(''the \'Test\' server shuts down'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="142-142"];
m22_63 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="RetryAttribute.cs", label="testRunner.Then(''the servers set should not contain the \'Test\' server'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="144-144"];
m22_64 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="RetryAttribute.cs", label="this.ScenarioCleanup()", span="146-146"];
m22_65 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="RetryAttribute.cs", label="Exit HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", span="136-136"];
m22_21 [cluster="Unk.OnScenarioEnd", file="RetryAttribute.cs", label="Entry Unk.OnScenarioEnd", span=""];
m22_18 [cluster="HangFire.Tests.ServerFeature.ScenarioTearDown()", file="RetryAttribute.cs", label="Entry HangFire.Tests.ServerFeature.ScenarioTearDown()", span="56-56"];
m22_19 [cluster="HangFire.Tests.ServerFeature.ScenarioTearDown()", file="RetryAttribute.cs", label="testRunner.OnScenarioEnd()", span="58-58"];
m22_20 [cluster="HangFire.Tests.ServerFeature.ScenarioTearDown()", file="RetryAttribute.cs", label="Exit HangFire.Tests.ServerFeature.ScenarioTearDown()", span="56-56"];
m22_0 [cluster="HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="RetryAttribute.cs", label="Entry HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m22_2 [cluster="HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="RetryAttribute.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Server'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34"];
m22_3 [cluster="HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="RetryAttribute.cs", label="testRunner.OnFeatureStart(featureInfo)", span="35-35"];
m22_4 [cluster="HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="RetryAttribute.cs", label="Exit HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m22_5 [cluster="Unk.GetTestRunner", file="RetryAttribute.cs", label="Entry Unk.GetTestRunner", span=""];
m22_30 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="RetryAttribute.cs", label="Entry HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", span="75-75"];
m22_31 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="RetryAttribute.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server starts, it should add itself to the servers set'', ((string[])(null)))", span="77-77"];
m22_32 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="RetryAttribute.cs", label="this.ScenarioSetup(scenarioInfo)", span="79-79"];
m22_33 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="RetryAttribute.cs", label="testRunner.When(''the \'Test\' server starts'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="81-81"];
m22_34 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="RetryAttribute.cs", label="testRunner.Then(''the servers set should contain the \'Test\' server'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="83-83"];
m22_35 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="RetryAttribute.cs", label="this.ScenarioCleanup()", span="85-85"];
m22_36 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="RetryAttribute.cs", label="Exit HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", span="75-75"];
m22_40 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="RetryAttribute.cs", label="Entry HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", span="92-92"];
m22_41 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="RetryAttribute.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server starts, it should publicate its properties'', ((string[])(null)))", span="94-94"];
m22_42 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="RetryAttribute.cs", label="this.ScenarioSetup(scenarioInfo)", span="96-96"];
m22_43 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="RetryAttribute.cs", label="testRunner.When(''the \'Test\' server starts with 5 workers'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="98-98"];
m22_44 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="RetryAttribute.cs", label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="100-102"];
m22_45 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="RetryAttribute.cs", label="table1.AddRow(new string[] {\r\n                        ''WorkerCount'',\r\n                        ''5''})", span="103-105"];
m22_46 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="RetryAttribute.cs", label="table1.AddRow(new string[] {\r\n                        ''StartedAt'',\r\n                        ''<UtcNow timestamp>''})", span="106-108"];
m22_47 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="RetryAttribute.cs", label="testRunner.Then(''the \'Test\' server\'s properties should contain the following items:'', ((string)(null)), table1, ''Then '')", span="110-110"];
m22_48 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="RetryAttribute.cs", label="this.ScenarioCleanup()", span="112-112"];
m22_49 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="RetryAttribute.cs", label="Exit HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", span="92-92"];
m22_13 [cluster="Unk.OnFeatureEnd", file="RetryAttribute.cs", label="Entry Unk.OnFeatureEnd", span=""];
m22_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="RetryAttribute.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m22_38 [cluster="Unk.When", file="RetryAttribute.cs", label="Entry Unk.When", span=""];
m22_14 [cluster="HangFire.Tests.ServerFeature.TestInitialize()", file="RetryAttribute.cs", label="Entry HangFire.Tests.ServerFeature.TestInitialize()", span="46-46"];
m22_15 [cluster="HangFire.Tests.ServerFeature.TestInitialize()", file="RetryAttribute.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Server''))", span="48-49"];
m22_16 [cluster="HangFire.Tests.ServerFeature.TestInitialize()", file="RetryAttribute.cs", label="HangFire.Tests.ServerFeature.FeatureSetup(null)", span="51-51"];
m22_17 [cluster="HangFire.Tests.ServerFeature.TestInitialize()", file="RetryAttribute.cs", label="Exit HangFire.Tests.ServerFeature.TestInitialize()", span="46-46"];
m22_51 [cluster="Unk.AddRow", file="RetryAttribute.cs", label="Entry Unk.AddRow", span=""];
m22_73 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="RetryAttribute.cs", label="Entry HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", span="170-170"];
m22_74 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="RetryAttribute.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server shuts down, it should clear its queues'', ((string[])(null)))", span="172-172"];
m22_75 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="RetryAttribute.cs", label="this.ScenarioSetup(scenarioInfo)", span="174-174"];
m22_76 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="RetryAttribute.cs", label="testRunner.When(''the \'Test\' server shuts down'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="176-176"];
m22_77 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="RetryAttribute.cs", label="testRunner.Then(''the storage should not contain an entry for the \'Test\' server queues'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="178-178"];
m22_78 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="RetryAttribute.cs", label="this.ScenarioCleanup()", span="180-180"];
m22_79 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="RetryAttribute.cs", label="Exit HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", span="170-170"];
m22_37 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="RetryAttribute.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m22_39 [cluster="Unk.Then", file="RetryAttribute.cs", label="Entry Unk.Then", span=""];
m22_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="RetryAttribute.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m22_50 [cluster="TechTalk.SpecFlow.Table.cstr", file="RetryAttribute.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m22_9 [cluster="HangFire.Tests.ServerFeature.FeatureTearDown()", file="RetryAttribute.cs", label="Entry HangFire.Tests.ServerFeature.FeatureTearDown()", span="39-39"];
m22_10 [cluster="HangFire.Tests.ServerFeature.FeatureTearDown()", file="RetryAttribute.cs", label="testRunner.OnFeatureEnd()", span="41-41"];
m22_11 [cluster="HangFire.Tests.ServerFeature.FeatureTearDown()", file="RetryAttribute.cs", label="testRunner = null", span="42-42"];
m22_12 [cluster="HangFire.Tests.ServerFeature.FeatureTearDown()", file="RetryAttribute.cs", label="Exit HangFire.Tests.ServerFeature.FeatureTearDown()", span="39-39"];
m22_8 [cluster="Unk.OnFeatureStart", file="RetryAttribute.cs", label="Entry Unk.OnFeatureStart", span=""];
m22_80 [file="RetryAttribute.cs", label="HangFire.Tests.ServerFeature", span=""];
m23_65 [cluster="HangFire.Web.RazorPage.Write(object)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m23_25 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="Write(job.Value.InScheduledState ? ''hover'' : null)", prediction=177, span="197-197"];
m23_21 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label=scheduledJobs, prediction=177, span="176-176"];
m23_28 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''                            <input type=\''checkbox\'' class=\''js-jobs-list-checkbox\'' '' +\r\n''name=\''jobs[]\'' value=\'''')", prediction=177, span="213-214"];
m23_61 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m23_20 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="WriteLiteral(@''\r\n        </div>\r\n\r\n        <table class=''''table''''>\r\n            <thead>\r\n                <tr>\r\n                    <th class=''''min-width''''>\r\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                    </th>\r\n                    <th class=''''min-width''''>Id</th>\r\n                    <th>Enqueue</th>\r\n                    <th>Job</th>\r\n                    <th class=''''align-right''''>Scheduled</th>\r\n                </tr>\r\n            </thead>\r\n'')", prediction=177, span="156-171"];
m23_59 [cluster="Unk.TryParse", file="ScheduledJobsPage.generated.cs", label="Entry Unk.TryParse", span=""];
m23_57 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m23_24 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="WriteLiteral('' '')", prediction=177, span="192-192"];
m23_67 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m23_27 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="job.Value.InScheduledState", prediction=177, span="207-207"];
m23_22 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''                <tr class=\''js-jobs-list-row '')", prediction=177, span="182-182"];
m23_64 [cluster="HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", span="33-33"];
m23_23 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="Write(!job.Value.InScheduledState ? ''obsolete-data'' : null)", prediction=177, span="187-187"];
m23_0 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m23_19 [cluster="Unk.True", file="ScheduledJobsPage.generated.cs", label="Entry Unk.True", span=""];
m23_55 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="Write(RenderPartial(new Paginator(pager)))", prediction=177, span="383-383"];
m23_54 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''        </table>\r\n    </div>\r\n'')", prediction=177, span="371-371"];
m23_53 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", span="361-361"];
m23_17 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledJobsPage.generated.cs", label="Exit HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m23_18 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", prediction=177, span="0-0"];
m23_26 [cluster="string.Split(params char[])", file="ScheduledJobsPage.generated.cs", label="Entry string.Split(params char[])", span="0-0"];
m23_31 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''                    </td>\r\n                    <td class=\''min-width\''>\r\n          '' +\r\n''              <a href=\'''')", prediction=177, span="234-235"];
m23_29 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="Write(job.Key)", prediction=177, span="219-219"];
m23_32 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", prediction=177, span="240-240"];
m23_30 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\'' />\r\n'')", span="224-224"];
m23_33 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                            '')", prediction=177, span="245-245"];
m23_34 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="Write(HtmlHelper.JobId(job.Key))", prediction=177, span="250-250"];
m23_35 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\r\n                        </a>\r\n'')", span="255-255"];
m23_36 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="!job.Value.InScheduledState", prediction=177, span="260-260"];
m23_37 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''                            <span title=\''Job\'s state has been changed while fetch'' +\r\n''ing data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", prediction=177, span="266-267"];
m23_38 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''                    </td>\r\n                    <td class=\''min-width\''>\r\n          '' +\r\n''              <span data-moment=\'''')", prediction=177, span="277-278"];
m23_39 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.EnqueueAt))", prediction=177, span="283-283"];
m23_40 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                            '')", prediction=177, span="288-288"];
m23_41 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="Write(job.Value.EnqueueAt)", prediction=177, span="293-293"];
m23_42 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\r\n                        </span>\r\n                    </td>\r\n                   '' +\r\n'' <td>\r\n                        <a class=\''job-method\'' href=\'''')", prediction=177, span="298-299"];
m23_43 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", prediction=177, span="304-304"];
m23_44 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                            '')", prediction=177, span="309-309"];
m23_45 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", prediction=177, span="314-314"];
m23_46 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\r\n                        </a>\r\n                    </td>\r\n                    <t'' +\r\n''d class=\''align-right\''>\r\n'')", prediction=177, span="319-320"];
m23_47 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="job.Value.ScheduledAt != null", prediction=177, span="325-325"];
m23_48 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''                            <span data-moment=\'''')", prediction=177, span="331-331"];
m23_49 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.ScheduledAt.Value))", prediction=177, span="336-336"];
m23_50 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                                '')", prediction=177, span="341-341"];
m23_51 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs", label="Write(job.Value.ScheduledAt)", prediction=177, span="346-346"];
m23_52 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\r\n                            </span>\r\n'')", span="351-351"];
m23_56 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Exit HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47"];
m23_66 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m23_62 [cluster="HangFire.Storage.IMonitoringApi.ScheduledCount()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.ScheduledCount()", span="38-38"];
m23_70 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m23_68 [cluster="Unk.Write", file="ScheduledJobsPage.generated.cs", label="Entry Unk.Write", span=""];
m23_69 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m23_60 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m23_58 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m23_63 [cluster="HttpRequestBase.LinkTo(string)", file="ScheduledJobsPage.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m23_71 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m23_72 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m23_73 [file="ScheduledJobsPage.generated.cs", label="HangFire.Web.Pages.ScheduledJobsPage", span=""];
m25_114 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="127-127"];
m25_115 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="ServerBootstrapperFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="129-132"];
m25_116 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="ServerBootstrapperFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = Job.FromExpression(() => SampleMethod(''wrong''));\r\n\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result);\r\n                Assert.NotNull(result.Job);\r\n                Assert.Equal(''Succeeded'', result.State);\r\n                Assert.Equal(''Arguments'', result.Job.Arguments[0]);\r\n                Assert.Null(result.LoadException);\r\n            })", span="134-154"];
m25_117 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="127-127"];
m25_29 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="44-53"];
m25_38 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="ServerBootstrapperFacts.cs", label="this.FeatureBackground()", span="91-91"];
m25_237 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", span="335-335"];
m25_238 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", file="ServerBootstrapperFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.DeleteJobFromQueue(null, ''default''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="337-343"];
m25_239 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", span="335-335"];
m25_18 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", span="32-32"];
m25_19 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", file="ServerBootstrapperFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var @lock = connection.AcquireJobLock(''1'');\r\n                Assert.NotNull(@lock);\r\n            })", span="34-38"];
m25_20 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", span="32-32"];
m25_432 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="ServerBootstrapperFacts.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m25_279 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="401-401"];
m25_280 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="ServerBootstrapperFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="403-409"];
m25_281 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="401-401"];
m25_337 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="477-477"];
m25_338 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="ServerBootstrapperFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                };\r\n                connection.AnnounceServer(''server'', context1);\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', server.Id);\r\n                Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data);\r\n                Assert.Null(server.HeartBeat);\r\n\r\n                var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                };\r\n                connection.AnnounceServer(''server'', context2);\r\n                var sameServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', sameServer.Id);\r\n                Assert.Contains(''1000'', sameServer.Data);\r\n            })", span="479-504"];
m25_339 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="477-477"];
m25_81 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="ServerBootstrapperFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should persist the job data'', ((string[])(null)))", span="185-185"];
m25_44 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''parameters'', exception.ParamName)", span="67-67"];
m25_49 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", color=green, community=0, file="ServerBootstrapperFacts.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", prediction=209, span="119-119"];
m25_48 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="62-65"];
m25_50 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="63-63"];
m25_47 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        TimeSpan.Zero)", span="62-65"];
m25_51 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="SampleMethod(''hello'')", span="63-63"];
m25_46 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="62-65"];
m25_45 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="59-68"];
m25_52 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="63-63"];
m25_72 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.True(DateTime.UtcNow < sqlJob.ExpireAt && sqlJob.ExpireAt < DateTime.UtcNow.AddDays(1))", span="97-97"];
m25_77 [cluster="System.TimeSpan.FromDays(double)", file="ServerBootstrapperFacts.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m25_74 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''Value1'', parameters[''Key1''])", span="104-104"];
m25_75 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''Value2'', parameters[''Key2''])", span="105-105"];
m25_78 [cluster="Unk.NotEmpty", file="ServerBootstrapperFacts.cs", label="Entry Unk.NotEmpty", span=""];
m25_76 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="74-106"];
m25_73 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value)", span="99-102"];
m25_79 [cluster="Unk.Query", file="ServerBootstrapperFacts.cs", label="Entry Unk.Query", span=""];
m25_54 [cluster="Unk.AddRow", file="ServerBootstrapperFacts.cs", label="Entry Unk.AddRow", span=""];
m25_56 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="ServerBootstrapperFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying it should expire the job data'', ((string[])(null)))", span="128-128"];
m25_80 [cluster="Unk.Single", file="ServerBootstrapperFacts.cs", label="Entry Unk.Single", span=""];
m25_86 [cluster="Unk.ToDictionary", file="ServerBootstrapperFacts.cs", label="Entry Unk.ToDictionary", span=""];
m25_82 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30"];
m25_83 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m25_87 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="77-77"];
m25_85 [cluster="Unk.True", file="ServerBootstrapperFacts.cs", label="Entry Unk.True", span=""];
m25_84 [cluster="System.DateTime.AddDays(double)", file="ServerBootstrapperFacts.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m25_88 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="SampleMethod(''Hello'')", span="77-77"];
m25_7 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", span="35-35"];
m25_375 [cluster="Unk.NotEqual", file="ServerBootstrapperFacts.cs", label="Entry Unk.NotEqual", span=""];
m25_64 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(null, (int?) sqlJob.StateId)", span="86-86"];
m25_66 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData)", span="89-89"];
m25_67 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="invocationData.Arguments = sqlJob.Arguments", span="90-90"];
m25_70 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''SampleMethod'', job.Method.Name)", span="94-94"];
m25_68 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var job = invocationData.Deserialize()", span="92-92"];
m25_65 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(null, (string) sqlJob.StateName)", span="87-87"];
m25_71 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''Hello'', job.Arguments[0])", span="95-95"];
m25_247 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="214-214"];
m25_289 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="223-223"];
m25_34 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="47-50"];
m25_365 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", span="515-515"];
m25_366 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="ServerBootstrapperFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data)\r\nvalues \r\n('Server1', ''),\r\n('Server2', '')''", span="517-521"];
m25_367 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="ServerBootstrapperFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.RemoveServer(''Server1'');\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase);\r\n            })", span="523-531"];
m25_368 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", span="515-515"];
m25_269 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", span="377-377"];
m25_270 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="ServerBootstrapperFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@id, @queue)''", span="379-381"];
m25_271 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="ServerBootstrapperFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    { \r\n                        new { id = ''1'', queue = ''critical'' },\r\n                        new { id = ''2'', queue = ''default'' } \r\n                    }); \r\n\r\n                connection.DeleteJobFromQueue(''1'', ''default'');\r\n\r\n                var count = sql.Query<int>(''select count(*) from HangFire.JobQueue'').Single();\r\n                Assert.Equal(2, count);\r\n            })", span="383-397"];
m25_272 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", span="377-377"];
m25_268 [cluster="Unk.Execute", file="ServerBootstrapperFacts.cs", label="Entry Unk.Execute", span=""];
m25_431 [cluster="HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37"];
m25_306 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="432-432"];
m25_307 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="ServerBootstrapperFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues \r\n('key', 1.0, '1.0'),\r\n('key', -1.0, '-1.0'),\r\n('key', -5.0, '-5.0'),\r\n('another-key', -2.0, '-2.0')''", span="434-440"];
m25_308 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="ServerBootstrapperFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0);\r\n                \r\n                Assert.Equal(''-1.0'', result);\r\n            })", span="442-449"];
m25_309 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="432-432"];
m25_258 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", span="359-359"];
m25_259 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", file="ServerBootstrapperFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@id, @queue)''", span="361-363"];
m25_260 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", file="ServerBootstrapperFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new { id = ''1'', queue = ''default'' });\r\n\r\n                connection.DeleteJobFromQueue(''1'', ''default'');\r\n\r\n                var count = sql.Query<int>(''select count(*) from HangFire.JobQueue'').Single();\r\n                Assert.Equal(0, count);\r\n            })", span="365-373"];
m25_261 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", span="359-359"];
m25_326 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="234-234"];
m25_386 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="542-542"];
m25_387 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="ServerBootstrapperFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data)\r\nvalues\r\n('server1', ''),\r\n('server2', '')''", span="544-548"];
m25_388 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="ServerBootstrapperFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.Heartbeat(''server1'');\r\n\r\n                var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime?)x.LastHeartbeat);\r\n\r\n                Assert.NotNull(servers[''server1'']);\r\n                Assert.Null(servers[''server2'']);\r\n            })", span="550-561"];
m25_389 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="542-542"];
m25_26 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="42-42"];
m25_27 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="ServerBootstrapperFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''job'', exception.ParamName);\r\n            })", span="44-53"];
m25_28 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="42-42"];
m25_199 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="277-277"];
m25_200 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ServerBootstrapperFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="279-285"];
m25_201 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="277-277"];
m25_99 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="112-113"];
m25_105 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="153-153"];
m25_101 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="112-113"];
m25_102 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="113-113"];
m25_106 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="117-117"];
m25_104 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="113-113"];
m25_107 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="ServerBootstrapperFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetJobData(''1'');\r\n                Assert.Null(result);\r\n            })", span="119-123"];
m25_89 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="77-77"];
m25_144 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="183-183"];
m25_145 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ServerBootstrapperFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="185-191"];
m25_146 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="183-183"];
m25_16 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="47-47"];
m25_130 [cluster="int.ToString()", file="ServerBootstrapperFacts.cs", label="Entry int.ToString()", span="0-0"];
m25_376 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="535-535"];
m25_377 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null)))", span="537-538"];
m25_378 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="535-535"];
m25_413 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="275-275"];
m25_325 [cluster="HangFire.Server.ServerContext.ServerContext()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Server.ServerContext.ServerContext()", span="18-18"];
m25_57 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="ServerBootstrapperFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="130-130"];
m25_418 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="578-592"];
m25_4 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="18-18"];
m25_5 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="new SqlServerConnection(null)", span="18-18"];
m25_6 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="18-18"];
m25_12 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="24-28"];
m25_13 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var transaction = connection.CreateWriteTransaction()", span="26-26"];
m25_15 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="24-28"];
m25_21 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="34-38"];
m25_22 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m25_23 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="ServerBootstrapperFacts.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m25_24 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m25_30 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", span="71-71"];
m25_35 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", span="85-85"];
m25_31 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", file="ServerBootstrapperFacts.cs", label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75"];
m25_32 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", file="ServerBootstrapperFacts.cs", label="testRunner.Given(''the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="77-77"];
m25_36 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="ServerBootstrapperFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State name should be \'Succeeded\''', ((string[])(null)))", span="87-87"];
m25_42 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="ServerBootstrapperFacts.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m25_43 [cluster="Unk.Then", file="ServerBootstrapperFacts.cs", label="Entry Unk.Then", span=""];
m25_58 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="ServerBootstrapperFacts.cs", label="this.FeatureBackground()", span="132-132"];
m25_59 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="ServerBootstrapperFacts.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="134-134"];
m25_62 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", span="126-126"];
m25_60 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="ServerBootstrapperFacts.cs", label="testRunner.Then(''it should expire the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="136-136"];
m25_61 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="ServerBootstrapperFacts.cs", label="this.ScenarioCleanup()", span="138-138"];
m25_63 [cluster="Unk.When", file="ServerBootstrapperFacts.cs", label="Entry Unk.When", span=""];
m25_90 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", span="204-204"];
m25_93 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ServerBootstrapperFacts.cs", label="this.FeatureBackground()", span="210-210"];
m25_91 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ServerBootstrapperFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should change the stats'', ((string[])(null)))", span="206-206"];
m25_92 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ServerBootstrapperFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="208-208"];
m25_94 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ServerBootstrapperFacts.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="212-212"];
m25_95 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ServerBootstrapperFacts.cs", label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="214-214"];
m25_109 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="119-123"];
m25_110 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var result = connection.GetJobData(''1'')", span="121-121"];
m25_111 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Null(result)", span="122-122"];
m25_112 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="119-123"];
m25_120 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="138-145"];
m25_118 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="134-154"];
m25_119 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var job = Job.FromExpression(() => SampleMethod(''wrong''))", span="136-136"];
m25_121 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="147-147"];
m25_131 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="136-136"];
m25_122 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.NotNull(result)", span="149-149"];
m25_123 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.NotNull(result.Job)", span="150-150"];
m25_124 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''Succeeded'', result.State)", span="151-151"];
m25_125 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''Arguments'', result.Job.Arguments[0])", span="152-152"];
m25_126 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Null(result.LoadException)", span="153-153"];
m25_127 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="134-154"];
m25_132 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="SampleMethod(''wrong'')", span="136-136"];
m25_133 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="136-136"];
m25_139 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="167-174"];
m25_138 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="165-179"];
m25_140 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="176-176"];
m25_141 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.NotNull(result.LoadException)", span="178-178"];
m25_142 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="165-179"];
m25_147 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="185-191"];
m25_148 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''))", span="187-188"];
m25_152 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.SetJobParameter(null, ''name'', ''value'')", span="188-188"];
m25_149 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''id'', exception.ParamName)", span="190-190"];
m25_151 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="188-188"];
m25_150 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="185-191"];
m25_153 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="188-188"];
m25_158 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="197-203"];
m25_159 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''))", span="199-200"];
m25_163 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.SetJobParameter(''1'', null, ''value'')", span="200-200"];
m25_160 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''name'', exception.ParamName)", span="202-202"];
m25_162 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="200-200"];
m25_161 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="197-203"];
m25_164 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="200-200"];
m25_170 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var job = sql.Query(arrangeSql).Single()", span="216-216"];
m25_169 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="214-226"];
m25_172 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="219-219"];
m25_173 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="221-223"];
m25_171 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="string jobId = job.Id.ToString()", span="217-217"];
m25_174 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''Value'', parameter.Value)", span="225-225"];
m25_175 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="214-226"];
m25_181 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var job = sql.Query(arrangeSql).Single()", span="239-239"];
m25_180 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="237-250"];
m25_183 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="242-242"];
m25_184 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'')", span="243-243"];
m25_185 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="245-247"];
m25_182 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="string jobId = job.Id.ToString()", span="240-240"];
m25_186 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''AnotherValue'', parameter.Value)", span="249-249"];
m25_187 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="237-250"];
m25_193 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var job = sql.Query(arrangeSql).Single()", span="263-263"];
m25_192 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="261-273"];
m25_195 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.SetJobParameter(jobId, ''Name'', null)", span="266-266"];
m25_196 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="268-270"];
m25_194 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="string jobId = job.Id.ToString()", span="264-264"];
m25_197 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal((string) null, parameter.Value)", span="272-272"];
m25_198 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="261-273"];
m25_202 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="279-285"];
m25_203 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''))", span="281-282"];
m25_207 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.GetJobParameter(null, ''hello'')", span="282-282"];
m25_204 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''id'', exception.ParamName)", span="284-284"];
m25_206 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="282-282"];
m25_205 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="279-285"];
m25_208 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="282-282"];
m25_213 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="291-297"];
m25_214 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null))", span="293-294"];
m25_218 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.GetJobParameter(''1'', null)", span="294-294"];
m25_215 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''name'', exception.ParamName)", span="296-296"];
m25_217 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="294-294"];
m25_216 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="291-297"];
m25_219 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="294-294"];
m25_223 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="303-307"];
m25_224 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var value = connection.GetJobParameter(''1'', ''hello'')", span="305-305"];
m25_225 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Null(value)", span="306-306"];
m25_226 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="303-307"];
m25_232 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single()", span="324-326"];
m25_231 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="322-331"];
m25_233 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var value = connection.GetJobParameter(id.ToString(), ''name'')", span="328-328"];
m25_234 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''value'', value)", span="330-330"];
m25_235 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="322-331"];
m25_240 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="337-343"];
m25_241 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.DeleteJobFromQueue(null, ''default''))", span="339-340"];
m25_245 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.DeleteJobFromQueue(null, ''default'')", span="340-340"];
m25_242 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''id'', exception.ParamName)", span="342-342"];
m25_244 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="340-340"];
m25_243 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="337-343"];
m25_246 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="340-340"];
m25_251 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="349-355"];
m25_252 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.DeleteJobFromQueue(''1'', null))", span="351-352"];
m25_256 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.DeleteJobFromQueue(''1'', null)", span="352-352"];
m25_253 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''queue'', exception.ParamName)", span="354-354"];
m25_255 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="352-352"];
m25_254 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="349-355"];
m25_257 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="352-352"];
m25_263 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="sql.Execute(arrangeSql, new { id = ''1'', queue = ''default'' })", span="367-367"];
m25_262 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="365-373"];
m25_264 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.DeleteJobFromQueue(''1'', ''default'')", span="369-369"];
m25_265 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var count = sql.Query<int>(''select count(*) from HangFire.JobQueue'').Single()", span="371-371"];
m25_266 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(0, count)", span="372-372"];
m25_267 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="365-373"];
m25_274 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    { \r\n                        new { id = ''1'', queue = ''critical'' },\r\n                        new { id = ''2'', queue = ''default'' } \r\n                    })", span="385-391"];
m25_273 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="383-397"];
m25_275 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.DeleteJobFromQueue(''1'', ''default'')", span="393-393"];
m25_276 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var count = sql.Query<int>(''select count(*) from HangFire.JobQueue'').Single()", span="395-395"];
m25_277 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(2, count)", span="396-396"];
m25_278 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="383-397"];
m25_282 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="403-409"];
m25_283 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1))", span="405-406"];
m25_287 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.GetFirstByLowestScoreFromSet(null, 0, 1)", span="406-406"];
m25_284 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''key'', exception.ParamName)", span="408-408"];
m25_286 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="406-406"];
m25_285 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="403-409"];
m25_288 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="406-406"];
m25_293 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="415-416"];
m25_294 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1))", span="415-416"];
m25_297 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)", span="416-416"];
m25_295 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="415-416"];
m25_296 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="416-416"];
m25_298 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="416-416"];
m25_302 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="422-428"];
m25_303 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1)", span="424-425"];
m25_304 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Null(result)", span="427-427"];
m25_305 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="422-428"];
m25_311 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="sql.Execute(arrangeSql)", span="444-444"];
m25_310 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="442-449"];
m25_312 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0)", span="446-446"];
m25_313 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''-1.0'', result)", span="448-448"];
m25_314 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="442-449"];
m25_318 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="455-461"];
m25_319 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()))", span="457-458"];
m25_323 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.AnnounceServer(null, new ServerContext())", span="458-458"];
m25_320 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''serverId'', exception.ParamName)", span="460-460"];
m25_322 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="458-458"];
m25_321 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="455-461"];
m25_324 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="458-458"];
m25_330 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="467-473"];
m25_331 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null))", span="469-470"];
m25_335 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.AnnounceServer(''server'', null)", span="470-470"];
m25_332 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''context'', exception.ParamName)", span="472-472"];
m25_334 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="470-470"];
m25_333 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="467-473"];
m25_336 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="470-470"];
m25_340 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="479-504"];
m25_341 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                }", span="481-485"];
m25_342 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.AnnounceServer(''server'', context1)", span="486-486"];
m25_343 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="488-488"];
m25_348 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.AnnounceServer(''server'', context2)", span="500-500"];
m25_349 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var sameServer = sql.Query(''select * from HangFire.Server'').Single()", span="501-501"];
m25_344 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''server'', server.Id)", span="489-489"];
m25_345 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data)", span="490-492"];
m25_346 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Null(server.HeartBeat)", span="493-493"];
m25_347 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                }", span="495-499"];
m25_350 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''server'', sameServer.Id)", span="502-502"];
m25_351 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Contains(''1000'', sameServer.Data)", span="503-503"];
m25_352 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="479-504"];
m25_358 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="510-511"];
m25_359 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null))", span="510-511"];
m25_362 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.RemoveServer(null)", span="511-511"];
m25_360 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="510-511"];
m25_361 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="511-511"];
m25_363 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="511-511"];
m25_370 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="sql.Execute(arrangeSql)", span="525-525"];
m25_369 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="523-531"];
m25_371 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.RemoveServer(''Server1'')", span="527-527"];
m25_372 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="529-529"];
m25_373 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase)", span="530-530"];
m25_374 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="523-531"];
m25_379 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="537-538"];
m25_380 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null))", span="537-538"];
m25_383 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.Heartbeat(null)", span="538-538"];
m25_381 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="537-538"];
m25_382 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="538-538"];
m25_384 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="538-538"];
m25_391 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="sql.Execute(arrangeSql)", span="552-552"];
m25_390 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="550-561"];
m25_392 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.Heartbeat(''server1'')", span="554-554"];
m25_393 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime?)x.LastHeartbeat)", span="556-557"];
m25_394 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.NotNull(servers[''server1''])", span="559-559"];
m25_397 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="557-557"];
m25_400 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="557-557"];
m25_395 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Null(servers[''server2''])", span="560-560"];
m25_396 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="550-561"];
m25_398 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="(string)x.Id", span="557-557"];
m25_399 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="557-557"];
m25_401 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="(DateTime?)x.LastHeartbeat", span="557-557"];
m25_402 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="557-557"];
m25_406 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="567-568"];
m25_407 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5)))", span="567-568"];
m25_410 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))", span="568-568"];
m25_408 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="567-568"];
m25_409 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="568-568"];
m25_411 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="568-568"];
m25_419 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    })", span="580-586"];
m25_420 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="connection.RemoveTimedOutServers(TimeSpan.FromHours(15))", span="588-588"];
m25_421 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="var liveServer = sql.Query(''select * from HangFire.Server'').Single()", span="590-590"];
m25_422 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''server2'', liveServer.Id)", span="591-591"];
m25_423 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="578-592"];
m25_188 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="254-254"];
m25_189 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="ServerBootstrapperFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="256-259"];
m25_190 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="ServerBootstrapperFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', null);\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal((string) null, parameter.Value);\r\n            })", span="261-273"];
m25_191 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="254-254"];
m25_154 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="189-189"];
m25_96 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ServerBootstrapperFacts.cs", label="testRunner.Then(''it should decrease the succeeded counter'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="216-216"];
m25_98 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", span="204-204"];
m25_355 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="508-508"];
m25_356 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null)))", span="510-511"];
m25_357 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="508-508"];
m25_176 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="230-230"];
m25_177 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="ServerBootstrapperFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="232-235"];
m25_178 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="ServerBootstrapperFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n                connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''AnotherValue'', parameter.Value);\r\n            })", span="237-250"];
m25_179 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="230-230"];
m25_209 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="203-203"];
m25_11 [cluster="Unk.UseConnection", file="ServerBootstrapperFacts.cs", label="Entry Unk.UseConnection", span=""];
m25_8 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="22-22"];
m25_10 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="22-22"];
m25_33 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", span="71-71"];
m25_315 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="453-453"];
m25_316 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()));\r\n\r\n                Assert.Equal(''serverId'', exception.ParamName);\r\n            })", span="455-461"];
m25_317 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="453-453"];
m25_220 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="301-301"];
m25_221 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="ServerBootstrapperFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var value = connection.GetJobParameter(''1'', ''hello'');\r\n                Assert.Null(value);\r\n            })", span="303-307"];
m25_222 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="301-301"];
m25_290 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="413-413"];
m25_291 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="ServerBootstrapperFacts.cs", label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)))", span="415-416"];
m25_292 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="413-413"];
m25_39 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="testRunner.Then(''the state name should be equal to \'Succeeded\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", prediction=210, span="93-93"];
m25_40 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="ServerBootstrapperFacts.cs", label="this.ScenarioCleanup()", span="95-95"];
m25_41 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", span="85-85"];
m25_437 [cluster="System.Action<T>.Invoke(T)", file="ServerBootstrapperFacts.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m25_0 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenSqlConnectionIsNull()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenSqlConnectionIsNull()", span="15-15"];
m25_2 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenSqlConnectionIsNull()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenSqlConnectionIsNull()", span="15-15"];
m25_17 [cluster="Unk.NotNull", file="ServerBootstrapperFacts.cs", label="Entry Unk.NotNull", span=""];
m25_414 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="572-572"];
m25_415 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="ServerBootstrapperFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues (@id, '', @heartbeat)''", span="574-576"];
m25_416 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="ServerBootstrapperFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    });\r\n\r\n                connection.RemoveTimedOutServers(TimeSpan.FromHours(15));\r\n\r\n                var liveServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server2'', liveServer.Id);\r\n            })", span="578-592"];
m25_417 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="572-572"];
m25_403 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="565-565"];
m25_404 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="ServerBootstrapperFacts.cs", label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))))", span="567-568"];
m25_405 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="565-565"];
m25_113 [cluster="Unk.Null", file="ServerBootstrapperFacts.cs", label="Entry Unk.Null", span=""];
m25_165 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="207-207"];
m25_166 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="ServerBootstrapperFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="209-212"];
m25_167 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="ServerBootstrapperFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''Value'', parameter.Value);\r\n            })", span="214-226"];
m25_168 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="207-207"];
m25_37 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ServerBootstrapperFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m25_53 [cluster="TechTalk.SpecFlow.Table.cstr", file="ServerBootstrapperFacts.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m25_438 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.SampleMethod(string)", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SampleMethod(string)", span="612-612"];
m25_299 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="420-420"];
m25_300 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="ServerBootstrapperFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1);\r\n\r\n                Assert.Null(result);\r\n            })", span="422-428"];
m25_301 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="420-420"];
m25_424 [cluster="System.DateTime.AddHours(double)", file="ServerBootstrapperFacts.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m25_25 [cluster="Unk.OnScenarioStart", file="ServerBootstrapperFacts.cs", label="Entry Unk.OnScenarioStart", span=""];
m25_364 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="257-257"];
m25_128 [cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65"];
m25_327 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="465-465"];
m25_328 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null));\r\n\r\n                Assert.Equal(''context'', exception.ParamName);\r\n            })", span="467-473"];
m25_329 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="465-465"];
m25_143 [cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24"];
m25_353 [cluster="string.StartsWith(string)", file="ServerBootstrapperFacts.cs", label="Entry string.StartsWith(string)", span="0-0"];
m25_412 [cluster="System.TimeSpan.FromMinutes(double)", file="ServerBootstrapperFacts.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m25_425 [cluster="System.TimeSpan.FromHours(double)", file="ServerBootstrapperFacts.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m25_433 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", span="604-604"];
m25_434 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="ServerBootstrapperFacts.cs", label="var connection = new SqlServerConnection(ConnectionUtils.CreateConnection())", span="606-606"];
m25_435 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="ServerBootstrapperFacts.cs", label="action(connection)", span="608-608"];
m25_436 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", span="604-604"];
m25_426 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", span="595-595"];
m25_427 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="ServerBootstrapperFacts.cs", label="var sqlConnection = ConnectionUtils.CreateConnection()", span="597-597"];
m25_429 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="ServerBootstrapperFacts.cs", label="action(sqlConnection, connection)", span="600-600"];
m25_428 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="ServerBootstrapperFacts.cs", label="var connection = new SqlServerConnection(sqlConnection)", span="598-598"];
m25_430 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", span="595-595"];
m25_3 [cluster="Unk.>", file="ServerBootstrapperFacts.cs", label="Entry Unk.>", span=""];
m25_248 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", span="347-347"];
m25_249 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", file="ServerBootstrapperFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.DeleteJobFromQueue(''1'', null));\r\n\r\n                Assert.Equal(''queue'', exception.ParamName);\r\n            })", span="349-355"];
m25_250 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", span="347-347"];
m25_227 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="311-311"];
m25_228 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="ServerBootstrapperFacts.cs", label="string arrangeSql = @''\r\ndeclare @id int\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nset @id = scope_identity()\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@id, @name, @value)\r\nselect @id''", span="313-320"];
m25_229 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="ServerBootstrapperFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single();\r\n\r\n                var value = connection.GetJobParameter(id.ToString(), ''name'');\r\n\r\n                Assert.Equal(''value'', value);\r\n            })", span="322-331"];
m25_230 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="311-311"];
m25_134 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="158-158"];
m25_135 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="ServerBootstrapperFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="160-163"];
m25_136 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="ServerBootstrapperFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result.LoadException);\r\n            })", span="165-179"];
m25_137 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="158-158"];
m25_236 [cluster="Unk.GetJobParameter", file="ServerBootstrapperFacts.cs", label="Entry Unk.GetJobParameter", span=""];
m25_155 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="195-195"];
m25_156 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="ServerBootstrapperFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="197-203"];
m25_157 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="195-195"];
m25_108 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="ServerBootstrapperFacts.cs", label="HangFire.Tests.States.SucceededStateFeature", span=""];
m25_354 [cluster="Unk.Contains", file="ServerBootstrapperFacts.cs", label="Entry Unk.Contains", span=""];
m25_210 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="289-289"];
m25_211 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="ServerBootstrapperFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="291-297"];
m25_212 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="289-289"];
m25_129 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m25_385 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="266-266"];
m25_439 [file="ServerBootstrapperFacts.cs", label="HangFire.SqlServer.Tests.ConnectionFacts", span=""];
m25_440 [file="ServerBootstrapperFacts.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m25_441 [file="ServerBootstrapperFacts.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m25_442 [file="ServerBootstrapperFacts.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m25_443 [file="ServerBootstrapperFacts.cs", label=arrangeSql, span=""];
m25_444 [file="ServerBootstrapperFacts.cs", label=arrangeSql, span=""];
m25_445 [file="ServerBootstrapperFacts.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m25_446 [file="ServerBootstrapperFacts.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m25_447 [file="ServerBootstrapperFacts.cs", label=arrangeSql, span=""];
m25_448 [file="ServerBootstrapperFacts.cs", label=arrangeSql, span=""];
m25_449 [file="ServerBootstrapperFacts.cs", label=arrangeSql, span=""];
m25_450 [file="ServerBootstrapperFacts.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m25_451 [file="ServerBootstrapperFacts.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m25_452 [file="ServerBootstrapperFacts.cs", label=arrangeSql, span=""];
m25_453 [file="ServerBootstrapperFacts.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m25_454 [file="ServerBootstrapperFacts.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m25_455 [file="ServerBootstrapperFacts.cs", label=arrangeSql, span=""];
m25_456 [file="ServerBootstrapperFacts.cs", label=arrangeSql, span=""];
m25_457 [file="ServerBootstrapperFacts.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m25_458 [file="ServerBootstrapperFacts.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m25_459 [file="ServerBootstrapperFacts.cs", label=arrangeSql, span=""];
m25_460 [file="ServerBootstrapperFacts.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m25_461 [file="ServerBootstrapperFacts.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m25_462 [file="ServerBootstrapperFacts.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m25_463 [file="ServerBootstrapperFacts.cs", label=arrangeSql, span=""];
m25_464 [file="ServerBootstrapperFacts.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m25_465 [file="ServerBootstrapperFacts.cs", label=arrangeSql, span=""];
m25_466 [file="ServerBootstrapperFacts.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m25_467 [file="ServerBootstrapperFacts.cs", label=arrangeSql, span=""];
m26_36 [cluster="HangFire.Web.RazorPage.Write(object)", file="ServersPage.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m26_38 [cluster="Unk.Join", file="ServersPage.generated.cs", label="Entry Unk.Join", span=""];
m26_31 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ServersPage.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m26_16 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="Write(HtmlHelper.Raw(String.Join('' '', server.Queues.Select(HtmlHelper.QueueLabel))))", prediction=211, span="157-157"];
m26_17 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="WriteLiteral(''</td>\r\n                    <td data-moment=\'''')", prediction=211, span="162-162"];
m26_18 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="Write(JobHelper.ToStringTimestamp(server.StartedAt))", prediction=211, span="167-167"];
m26_35 [cluster="string.ToUpperInvariant()", file="ServersPage.generated.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m26_4 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=1, file="ServersPage.generated.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", prediction=214, span="77-77"];
m26_5 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="servers = monitor.Servers()", prediction=211, span="79-79"];
m26_6 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="WriteLiteral(''\r\n'')", prediction=211, span="86-86"];
m26_7 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="servers.Count == 0", prediction=211, span="91-91"];
m26_0 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", file="ServersPage.generated.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", span="33-33"];
m26_1 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", color=green, community=0, file="ServersPage.generated.cs", label="Exit HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", prediction=211, span="33-33"];
m26_2 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", file="ServersPage.generated.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", span="44-44"];
m26_3 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", color=green, community=0, file="ServersPage.generated.cs", label="Exit HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", prediction=219, span="44-44"];
m26_10 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", color=green, community=0, file="ServersPage.generated.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.Stop()", prediction=211, span="63-63"];
m26_8 [cluster="Unk.RegisterObject", color=green, community=0, file="ServersPage.generated.cs", label="Entry Unk.RegisterObject", prediction=211, span=""];
m26_9 [cluster="HangFire.BackgroundJobServer.Start()", color=green, community=0, file="ServersPage.generated.cs", label="Entry HangFire.BackgroundJobServer.Start()", prediction=211, span="66-66"];
m26_28 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", prediction=211, span="223-223"];
m26_29 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", prediction=211, span="233-233"];
m26_14 [cluster="HangFire.BackgroundJobServer.Stop()", color=green, community=0, file="ServersPage.generated.cs", label="Entry HangFire.BackgroundJobServer.Stop()", prediction=211, span="72-72"];
m26_20 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="Write(server.StartedAt)", prediction=211, span="177-177"];
m26_22 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="server.Heartbeat.HasValue", prediction=211, span="187-187"];
m26_24 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="Write(JobHelper.ToStringTimestamp(server.Heartbeat.Value))", prediction=211, span="198-198"];
m26_26 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="Write(server.Heartbeat)", prediction=211, span="208-208"];
m26_13 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", color=green, community=0, file="ServersPage.generated.cs", label="Exit HangFire.Web.AspNetBackgroundJobServer.Stop()", prediction=211, span="63-63"];
m26_15 [cluster="Unk.UnregisterObject", color=green, community=0, file="ServersPage.generated.cs", label="Entry Unk.UnregisterObject", prediction=211, span=""];
m26_19 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="HangFire.Web.AspNetBackgroundJobServer", prediction=211, span=""];
m26_21 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="WriteLiteral(''</td>\r\n                    <td>\r\n'')", prediction=211, span="182-182"];
m26_23 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="WriteLiteral(''                            <span data-moment=\'''')", prediction=211, span="193-193"];
m26_25 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="WriteLiteral(''\''>\r\n                                '')", prediction=211, span="203-203"];
m26_27 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="WriteLiteral(''\r\n                            </span>\r\n'')", prediction=211, span="213-213"];
m26_30 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="Exit HangFire.Web.Pages.ServersPage.Execute()", span="57-57"];
m26_39 [cluster="HangFire.Web.HtmlHelper.Raw(string)", file="ServersPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.Raw(string)", span="40-40"];
m26_41 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ServersPage.generated.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m26_40 [cluster="Unk.Write", file="ServersPage.generated.cs", label="Entry Unk.Write", span=""];
m26_37 [cluster="Unk.Select", file="ServersPage.generated.cs", label="Entry Unk.Select", span=""];
m26_34 [cluster="HangFire.Storage.IMonitoringApi.Servers()", file="ServersPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.Servers()", span="25-25"];
m26_33 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="ServersPage.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m26_32 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ServersPage.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m26_42 [file="ServersPage.generated.cs", label="HangFire.Web.Pages.ServersPage", span=""];
m27_14 [cluster="HangFire.Tests.ClientApiTests.TearDown()", file="SqlServerMonitoringApi.cs", label="BackgroundJob.ClientFactory = _oldClientFactory", span="37-37"];
m27_109 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesSpecifiedTypeToClient_NotTheDeclaringOne()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesSpecifiedTypeToClient_NotTheDeclaringOne()", span="122-122"];
m27_111 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesSpecifiedTypeToClient_NotTheDeclaringOne()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="_jobClientMock.Verify(client => client.CreateJob(\r\n                It.Is<JobMethod>(x => x.Type == typeof(DerivedTestService)),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<JobState>()))", prediction=237, span="126-129"];
m27_110 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesSpecifiedTypeToClient_NotTheDeclaringOne()", file="SqlServerMonitoringApi.cs", label="BackgroundJob.Create<DerivedTestService>(x => x.InstanceMethod(), _stateMock.Object)", span="124-124"];
m27_112 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesSpecifiedTypeToClient_NotTheDeclaringOne()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesSpecifiedTypeToClient_NotTheDeclaringOne()", span="122-122"];
m27_227 [cluster="HangFire.Tests.ClientApiTests.Schedule_StaticExpression_PassesCorrectScheduledState_ToClient()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientApiTests.Schedule_StaticExpression_PassesCorrectScheduledState_ToClient()", span="223-223"];
m27_229 [cluster="HangFire.Tests.ClientApiTests.Schedule_StaticExpression_PassesCorrectScheduledState_ToClient()", file="SqlServerMonitoringApi.cs", label="_jobClientMock.Verify(x => x.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.IsAny<string[]>(),\r\n                It.Is<JobState>(y =>\r\n                    y is ScheduledState\r\n                    &&\r\n                    ((ScheduledState)y).EnqueueAt > DateTime.UtcNow.AddHours(4)\r\n                    && ((ScheduledState)y).EnqueueAt < DateTime.UtcNow.AddHours(6))))", span="227-234"];
m27_228 [cluster="HangFire.Tests.ClientApiTests.Schedule_StaticExpression_PassesCorrectScheduledState_ToClient()", file="SqlServerMonitoringApi.cs", label="BackgroundJob.Schedule(() => TestService.StaticMethod(), TimeSpan.FromHours(5))", span="225-225"];
m27_230 [cluster="HangFire.Tests.ClientApiTests.Schedule_StaticExpression_PassesCorrectScheduledState_ToClient()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.Schedule_StaticExpression_PassesCorrectScheduledState_ToClient()", span="223-223"];
m27_47 [cluster="HangFire.Tests.ClientApiTests.Create_PassesState_ToClient()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="BackgroundJob.Create<TestService>(x => x.InstanceMethod(), _stateMock.Object)", prediction=237, span="80-80"];
m27_18 [cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerMonitoringApi.cs", label="ProcessJob(nextJob.JobId, connection, _process)", span="55-55"];
m27_19 [cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", span="47-47"];
m27_20 [cluster="HangFire.JobStorage.GetConnection()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.JobStorage.GetConnection()", span="55-55"];
m27_130 [cluster="HangFire.Tests.ClientApiTests.DerivedTestService.StaticMethod()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientApiTests.DerivedTestService.StaticMethod()", span="279-279"];
m27_252 [cluster="HangFire.Tests.ClientApiTests.DerivedTestService.StaticMethod()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.DerivedTestService.StaticMethod()", span="279-279"];
m27_174 [cluster="HangFire.Tests.ClientApiTests.TestService.InstanceMethod(ref int)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientApiTests.TestService.InstanceMethod(ref int)", span="262-262"];
m27_248 [cluster="HangFire.Tests.ClientApiTests.TestService.InstanceMethod(ref int)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.TestService.InstanceMethod(ref int)", span="262-262"];
m27_15 [cluster="HangFire.Tests.ClientApiTests.TearDown()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.TearDown()", span="33-33"];
m27_215 [cluster="System.TimeSpan.FromHours(double)", file="SqlServerMonitoringApi.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m27_45 [cluster="HangFire.Tests.ClientApiTests.TestService.StaticMethod()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientApiTests.TestService.StaticMethod()", span="254-254"];
m27_40 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.CreateJob(\r\n                    It.IsAny<JobMethod>(),\r\n                    It.IsAny<string[]>(),\r\n                    It.IsAny<JobState>())", span="66-69"];
m27_33 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs", label=JobPerformanceException, span="106-106"];
m27_35 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", color=green, community=0, file="SqlServerMonitoringApi.cs", label=Exception, prediction=237, span="113-113"];
m27_34 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs", label="state = new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                }", span="108-111"];
m27_37 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs", label="stateMachine.TryToChangeState(jobId, state, new[] { ProcessingState.StateName })", span="123-123"];
m27_32 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs", label="state = new SucceededState()", span="104-104"];
m27_244 [cluster="HangFire.Tests.ClientApiTests.TestService.InstanceMethod()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.TestService.InstanceMethod()", span="246-246"];
m27_76 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientApiTests.Create_InstanceExpression_CorrectlyDeterminesTypeAndMethod()", span="100-100"];
m27_77 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs", label="BackgroundJob.Create<TestService>(x => x.InstanceMethod(), _stateMock.Object)", span="102-102"];
m27_78 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs", label="_jobClientMock.Verify(client => client.CreateJob(\r\n                It.Is<JobMethod>(x => x.Type == typeof(TestService) && x.Method.Name == ''InstanceMethod''),\r\n                It.Is<string[]>(x => x.Length == 0),\r\n                It.IsAny<JobState>()))", span="104-107"];
m27_79 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.Create_InstanceExpression_CorrectlyDeterminesTypeAndMethod()", span="100-100"];
m27_9 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerMonitoringApi.cs", label="_storage = storage", span="41-41"];
m27_7 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerMonitoringApi.cs", label="stateMachineFactory == null", span="39-39"];
m27_42 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="72-72"];
m27_158 [cluster="HangFire.Tests.ClientApiTests.TestService.StaticMethod(int)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientApiTests.TestService.StaticMethod(int)", span="258-258"];
m27_247 [cluster="HangFire.Tests.ClientApiTests.TestService.StaticMethod(int)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.TestService.StaticMethod(int)", span="258-258"];
m27_41 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="66-69"];
m27_46 [cluster="HangFire.States.SucceededState.SucceededState()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27"];
m27_48 [cluster="HangFire.Tests.ClientApiTests.Create_PassesState_ToClient()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="HangFire.Server.Worker", prediction=237, span=""];
m27_49 [cluster="HangFire.Tests.ClientApiTests.Create_PassesState_ToClient()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.Create_PassesState_ToClient()", span="78-78"];
m27_170 [cluster="Unk.Inconclusive", file="SqlServerMonitoringApi.cs", label="Entry Unk.Inconclusive", span=""];
m27_23 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs", label="var stateMachine = _stateMachineFactory.Create(connection)", span="77-77"];
m27_198 [cluster="HangFire.Tests.ClientApiTests.Enqueue_StaticExpression_PassesEnqueuedState_ToClient()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientApiTests.Enqueue_StaticExpression_PassesEnqueuedState_ToClient()", span="197-197"];
m27_199 [cluster="HangFire.Tests.ClientApiTests.Enqueue_StaticExpression_PassesEnqueuedState_ToClient()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="BackgroundJob.Enqueue(() => TestService.StaticMethod())", prediction=241, span="199-199"];
m27_200 [cluster="HangFire.Tests.ClientApiTests.Enqueue_StaticExpression_PassesEnqueuedState_ToClient()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="_jobClientMock.Verify(client => client.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.IsAny<string[]>(),\r\n                It.Is<JobState>(x => x is EnqueuedState)))", prediction=237, span="201-204"];
m27_201 [cluster="HangFire.Tests.ClientApiTests.Enqueue_StaticExpression_PassesEnqueuedState_ToClient()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.Enqueue_StaticExpression_PassesEnqueuedState_ToClient()", span="197-197"];
m27_216 [cluster="HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", span="139-139"];
m27_44 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="72-72"];
m27_180 [cluster="HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", span="100-100"];
m27_43 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="TestService.StaticMethod()", prediction=243, span="72-72"];
m27_24 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs", label="var processingState = new ProcessingState(_context.ServerName)", span="78-78"];
m27_122 [cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesDeclaringType_ToClient()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesDeclaringType_ToClient()", span="133-133"];
m27_124 [cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesDeclaringType_ToClient()", file="SqlServerMonitoringApi.cs", label="_jobClientMock.Verify(client => client.CreateJob(\r\n                It.Is<JobMethod>(x => x.Type == typeof(DerivedTestService)),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<JobState>()))", span="137-140"];
m27_123 [cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesDeclaringType_ToClient()", file="SqlServerMonitoringApi.cs", label="BackgroundJob.Enqueue(() => DerivedTestService.StaticMethod())", span="135-135"];
m27_125 [cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesDeclaringType_ToClient()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesDeclaringType_ToClient()", span="133-133"];
m27_99 [cluster="HangFire.Tests.ClientApiTests.IService.Method()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientApiTests.IService.Method()", span="274-274"];
m27_251 [cluster="HangFire.Tests.ClientApiTests.IService.Method()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.IService.Method()", span="274-274"];
m27_0 [cluster="HangFire.Tests.ClientApiTests.SetUp()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientApiTests.SetUp()", span="21-21"];
m27_1 [cluster="HangFire.Tests.ClientApiTests.SetUp()", file="SqlServerMonitoringApi.cs", label="GlobalLock.Acquire()", span="23-23"];
m27_5 [cluster="HangFire.Tests.ClientApiTests.SetUp()", file="SqlServerMonitoringApi.cs", label="_stateMock = new Mock<JobState>()", span="29-29"];
m27_2 [cluster="HangFire.Tests.ClientApiTests.SetUp()", file="SqlServerMonitoringApi.cs", label="_oldClientFactory = BackgroundJob.ClientFactory", span="24-24"];
m27_6 [cluster="HangFire.Tests.ClientApiTests.SetUp()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.SetUp()", span="21-21"];
m27_8 [cluster="Mock<IJobClient>.cstr", file="SqlServerMonitoringApi.cs", label="Entry Mock<IJobClient>.cstr", span=""];
m27_13 [cluster="HangFire.Tests.ClientApiTests.TearDown()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientApiTests.TearDown()", span="33-33"];
m27_246 [cluster="HangFire.Tests.ClientApiTests.TestService.StaticMethod()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.TestService.StaticMethod()", span="254-254"];
m27_39 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="66-69"];
m27_184 [cluster="HangFire.Tests.ClientApiTests.TestService.OutMethod(out int)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientApiTests.TestService.OutMethod(out int)", span="266-266"];
m27_249 [cluster="HangFire.Tests.ClientApiTests.TestService.OutMethod(out int)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="a = 10", prediction=244, span="268-268"];
m27_250 [cluster="HangFire.Tests.ClientApiTests.TestService.OutMethod(out int)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.TestService.OutMethod(out int)", span="266-266"];
m27_137 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesParameterValuesAndTheirTypes_ToClient()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesParameterValuesAndTheirTypes_ToClient()", span="144-144"];
m27_138 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesParameterValuesAndTheirTypes_ToClient()", file="SqlServerMonitoringApi.cs", label="BackgroundJob.Create<TestService>(x => x.InstanceMethod(''Hello''), _stateMock.Object)", span="146-146"];
m27_139 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesParameterValuesAndTheirTypes_ToClient()", file="SqlServerMonitoringApi.cs", label="_jobClientMock.Verify(client => client.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.Is<string[]>(x => x[0] == ''Hello''),\r\n                It.IsAny<JobState>()))", span="148-151"];
m27_140 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesParameterValuesAndTheirTypes_ToClient()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesParameterValuesAndTheirTypes_ToClient()", span="144-144"];
m27_21 [cluster="HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="30-30"];
m27_92 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_WithInterface_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientApiTests.Create_InstanceExpression_WithInterface_CorrectlyDeterminesTypeAndMethod()", span="111-111"];
m27_93 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_WithInterface_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs", label="BackgroundJob.Create<IService>(x => x.Method(), _stateMock.Object)", span="113-113"];
m27_94 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_WithInterface_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs", label="_jobClientMock.Verify(client => client.CreateJob(\r\n                It.Is<JobMethod>(x => x.Type == typeof(IService) && x.Method.Name == ''Method''),\r\n                It.Is<string[]>(x => x.Length == 0),\r\n                It.IsAny<JobState>()))", span="115-118"];
m27_95 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_WithInterface_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.Create_InstanceExpression_WithInterface_CorrectlyDeterminesTypeAndMethod()", span="111-111"];
m27_175 [cluster="HangFire.Tests.ClientApiTests.Create_PassingOutputParameters_IsNotAllowed()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientApiTests.Create_PassingOutputParameters_IsNotAllowed()", span="177-177"];
m27_177 [cluster="HangFire.Tests.ClientApiTests.Create_PassingOutputParameters_IsNotAllowed()", file="SqlServerMonitoringApi.cs", label="BackgroundJob.Enqueue<DerivedTestService>(x => x.OutMethod(out a))", span="180-180"];
m27_176 [cluster="HangFire.Tests.ClientApiTests.Create_PassingOutputParameters_IsNotAllowed()", file="SqlServerMonitoringApi.cs", label="int a", span="179-179"];
m27_178 [cluster="HangFire.Tests.ClientApiTests.Create_PassingOutputParameters_IsNotAllowed()", file="SqlServerMonitoringApi.cs", label="Assert.Inconclusive(''Move to JobClient tests'')", span="182-182"];
m27_179 [cluster="HangFire.Tests.ClientApiTests.Create_PassingOutputParameters_IsNotAllowed()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.Create_PassingOutputParameters_IsNotAllowed()", span="177-177"];
m27_211 [cluster="HangFire.Tests.ClientApiTests.Schedule_InstanceExpression_PassesCorrectScheduledState_ToClient()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientApiTests.Schedule_InstanceExpression_PassesCorrectScheduledState_ToClient()", span="208-208"];
m27_213 [cluster="HangFire.Tests.ClientApiTests.Schedule_InstanceExpression_PassesCorrectScheduledState_ToClient()", file="SqlServerMonitoringApi.cs", label="_jobClientMock.Verify(x => x.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.IsAny<string[]>(),\r\n                It.Is<JobState>(y => \r\n                    y is ScheduledState \r\n                    && \r\n                    ((ScheduledState)y).EnqueueAt > DateTime.UtcNow.AddHours(4)\r\n                    && ((ScheduledState)y).EnqueueAt < DateTime.UtcNow.AddHours(6))))", span="212-219"];
m27_212 [cluster="HangFire.Tests.ClientApiTests.Schedule_InstanceExpression_PassesCorrectScheduledState_ToClient()", file="SqlServerMonitoringApi.cs", label="BackgroundJob.Schedule<TestService>(x => x.InstanceMethod(), TimeSpan.FromHours(5))", span="210-210"];
m27_214 [cluster="HangFire.Tests.ClientApiTests.Schedule_InstanceExpression_PassesCorrectScheduledState_ToClient()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.Schedule_InstanceExpression_PassesCorrectScheduledState_ToClient()", span="208-208"];
m27_231 [cluster="HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="119-119"];
m27_127 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="135-135"];
m27_51 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="80-80"];
m27_54 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="82-85"];
m27_52 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x.InstanceMethod()", prediction=245, span="80-80"];
m27_53 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="80-80"];
m27_55 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="client.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.IsAny<string[]>(),\r\n                It.Is<JobState>(x => x == _stateMock.Object))", prediction=237, span="82-85"];
m27_56 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="82-85"];
m27_57 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="85-85"];
m27_116 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="126-129"];
m27_117 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="client.CreateJob(\r\n                It.Is<JobMethod>(x => x.Type == typeof(DerivedTestService)),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<JobState>())", prediction=247, span="126-129"];
m27_118 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="126-129"];
m27_119 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="127-127"];
m27_189 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="188-188"];
m27_192 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="190-193"];
m27_190 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x.InstanceMethod()", prediction=248, span="188-188"];
m27_191 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="188-188"];
m27_193 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="client.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.IsAny<string[]>(),\r\n                It.Is<JobState>(x => x is EnqueuedState))", prediction=249, span="190-193"];
m27_194 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="190-193"];
m27_195 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="193-193"];
m27_196 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x is EnqueuedState", prediction=250, span="193-193"];
m27_197 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="193-193"];
m27_202 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="199-199"];
m27_205 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="201-204"];
m27_203 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="TestService.StaticMethod()", prediction=251, span="199-199"];
m27_204 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="199-199"];
m27_206 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="client.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.IsAny<string[]>(),\r\n                It.Is<JobState>(x => x is EnqueuedState))", prediction=252, span="201-204"];
m27_207 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="201-204"];
m27_208 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="204-204"];
m27_209 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x is EnqueuedState", prediction=253, span="204-204"];
m27_210 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="204-204"];
m27_58 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x == _stateMock.Object", span="85-85"];
m27_65 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="TestService.StaticMethod()", span="91-91"];
m27_233 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="TestService.StaticMethod()", span="225-225"];
m27_26 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs", label="return;", span="85-85"];
m27_68 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="client.CreateJob(\r\n                It.Is<JobMethod>(x => x.Type == typeof(TestService) && x.Method.Name == ''StaticMethod''),\r\n                It.Is<string[]>(x => x.Length == 0),\r\n                It.IsAny<JobState>())", span="93-96"];
m27_84 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="client.CreateJob(\r\n                It.Is<JobMethod>(x => x.Type == typeof(TestService) && x.Method.Name == ''InstanceMethod''),\r\n                It.Is<string[]>(x => x.Length == 0),\r\n                It.IsAny<JobState>())", span="104-107"];
m27_101 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="client.CreateJob(\r\n                It.Is<JobMethod>(x => x.Type == typeof(IService) && x.Method.Name == ''Method''),\r\n                It.Is<string[]>(x => x.Length == 0),\r\n                It.IsAny<JobState>())", span="115-118"];
m27_132 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="client.CreateJob(\r\n                It.Is<JobMethod>(x => x.Type == typeof(DerivedTestService)),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<JobState>())", span="137-140"];
m27_146 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="client.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.Is<string[]>(x => x[0] == ''Hello''),\r\n                It.IsAny<JobState>())", span="148-151"];
m27_160 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="client.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.Is<string[]>(x => x[0] == ''34''),\r\n                It.IsAny<JobState>())", span="159-162"];
m27_221 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.IsAny<string[]>(),\r\n                It.Is<JobState>(y => \r\n                    y is ScheduledState \r\n                    && \r\n                    ((ScheduledState)y).EnqueueAt > DateTime.UtcNow.AddHours(4)\r\n                    && ((ScheduledState)y).EnqueueAt < DateTime.UtcNow.AddHours(6)))", span="212-219"];
m27_236 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.IsAny<string[]>(),\r\n                It.Is<JobState>(y =>\r\n                    y is ScheduledState\r\n                    &&\r\n                    ((ScheduledState)y).EnqueueAt > DateTime.UtcNow.AddHours(4)\r\n                    && ((ScheduledState)y).EnqueueAt < DateTime.UtcNow.AddHours(6)))", span="227-234"];
m27_30 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs", label="var performContext = new PerformContext(_context, connection, jobId, jobData.Job)", span="100-100"];
m27_81 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.InstanceMethod()", span="102-102"];
m27_114 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.InstanceMethod()", span="124-124"];
m27_218 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.InstanceMethod()", span="210-210"];
m27_59 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="85-85"];
m27_113 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="124-124"];
m27_121 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="127-127"];
m27_120 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Type == typeof(DerivedTestService)", span="127-127"];
m27_182 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.OutMethod(out a)", span="180-180"];
m27_25 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs", label="!stateMachine.TryToChangeState(\r\n                jobId,\r\n                processingState,\r\n                new[] { EnqueuedState.StateName, ProcessingState.StateName })", span="80-83"];
m27_29 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs", label="jobData.EnsureLoaded()", span="98-98"];
m27_64 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="91-91"];
m27_67 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="93-96"];
m27_80 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="102-102"];
m27_83 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="104-107"];
m27_96 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="113-113"];
m27_100 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="115-118"];
m27_131 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="137-140"];
m27_141 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="146-146"];
m27_145 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="148-151"];
m27_155 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="157-157"];
m27_159 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="159-162"];
m27_171 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="170-170"];
m27_172 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.InstanceMethod(ref a)", span="170-170"];
m27_220 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="212-219"];
m27_235 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="227-234"];
m27_66 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="91-91"];
m27_232 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="225-225"];
m27_234 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="225-225"];
m27_27 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs", label="State state", span="93-93"];
m27_69 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="93-96"];
m27_70 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="94-94"];
m27_73 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="95-95"];
m27_85 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="104-107"];
m27_86 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="105-105"];
m27_89 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="106-106"];
m27_102 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="115-118"];
m27_103 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="116-116"];
m27_106 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="117-117"];
m27_133 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="137-140"];
m27_134 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="138-138"];
m27_147 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="148-151"];
m27_148 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="150-150"];
m27_161 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="159-162"];
m27_162 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="161-161"];
m27_222 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="212-219"];
m27_223 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="215-219"];
m27_237 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="227-234"];
m27_238 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="230-234"];
m27_31 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs", label="process.Run(performContext, jobData.Job)", span="102-102"];
m27_82 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="102-102"];
m27_115 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="124-124"];
m27_217 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="210-210"];
m27_219 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="210-210"];
m27_181 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="180-180"];
m27_183 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="180-180"];
m27_98 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="113-113"];
m27_97 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Method()", span="113-113"];
m27_143 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="146-146"];
m27_142 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.InstanceMethod(''Hello'')", span="146-146"];
m27_157 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="157-157"];
m27_156 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="TestService.StaticMethod(34)", span="157-157"];
m27_173 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="170-170"];
m27_72 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="94-94"];
m27_71 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Type == typeof(TestService) && x.Method.Name == ''StaticMethod''", span="94-94"];
m27_75 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="95-95"];
m27_74 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Length == 0", span="95-95"];
m27_88 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="105-105"];
m27_87 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Type == typeof(TestService) && x.Method.Name == ''InstanceMethod''", span="105-105"];
m27_91 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="106-106"];
m27_90 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Length == 0", span="106-106"];
m27_105 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="116-116"];
m27_104 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Type == typeof(IService) && x.Method.Name == ''Method''", span="116-116"];
m27_108 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="117-117"];
m27_107 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Length == 0", span="117-117"];
m27_136 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="138-138"];
m27_135 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Type == typeof(DerivedTestService)", span="138-138"];
m27_150 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="150-150"];
m27_149 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x[0] == ''Hello''", span="150-150"];
m27_164 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="161-161"];
m27_163 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x[0] == ''34''", span="161-161"];
m27_225 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="215-219"];
m27_224 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="y is ScheduledState \r\n                    && \r\n                    ((ScheduledState)y).EnqueueAt > DateTime.UtcNow.AddHours(4)\r\n                    && ((ScheduledState)y).EnqueueAt < DateTime.UtcNow.AddHours(6)", span="216-219"];
m27_240 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="230-234"];
m27_239 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="y is ScheduledState\r\n                    &&\r\n                    ((ScheduledState)y).EnqueueAt > DateTime.UtcNow.AddHours(4)\r\n                    && ((ScheduledState)y).EnqueueAt < DateTime.UtcNow.AddHours(6)", span="231-234"];
m27_128 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="DerivedTestService.StaticMethod()", span="135-135"];
m27_129 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="135-135"];
m27_165 [cluster="HangFire.Tests.ClientApiTests.Create_PassingParametersByReference_IsNotAllowed()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientApiTests.Create_PassingParametersByReference_IsNotAllowed()", span="167-167"];
m27_167 [cluster="HangFire.Tests.ClientApiTests.Create_PassingParametersByReference_IsNotAllowed()", file="SqlServerMonitoringApi.cs", label="BackgroundJob.Create<DerivedTestService>(x => x.InstanceMethod(ref a), _stateMock.Object)", span="170-170"];
m27_166 [cluster="HangFire.Tests.ClientApiTests.Create_PassingParametersByReference_IsNotAllowed()", file="SqlServerMonitoringApi.cs", label="int a = 10", span="169-169"];
m27_168 [cluster="HangFire.Tests.ClientApiTests.Create_PassingParametersByReference_IsNotAllowed()", file="SqlServerMonitoringApi.cs", label="Assert.Inconclusive(''Move to JobClient tests'')", span="172-172"];
m27_169 [cluster="HangFire.Tests.ClientApiTests.Create_PassingParametersByReference_IsNotAllowed()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.Create_PassingParametersByReference_IsNotAllowed()", span="167-167"];
m27_144 [cluster="HangFire.Tests.ClientApiTests.TestService.InstanceMethod(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientApiTests.TestService.InstanceMethod(string)", span="250-250"];
m27_245 [cluster="HangFire.Tests.ClientApiTests.TestService.InstanceMethod(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.TestService.InstanceMethod(string)", span="250-250"];
m27_226 [cluster="System.DateTime.AddHours(double)", file="SqlServerMonitoringApi.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m27_22 [cluster="Unk.Returns", file="SqlServerMonitoringApi.cs", label="Entry Unk.Returns", span=""];
m27_28 [cluster="Unk.CreateJob", file="SqlServerMonitoringApi.cs", label="Entry Unk.CreateJob", span=""];
m27_38 [cluster="Unk.Create", file="SqlServerMonitoringApi.cs", label="Entry Unk.Create", span=""];
m27_185 [cluster="HangFire.Tests.ClientApiTests.Enqueue_InstanceExpression_PassesEnqueuedState_ToClient()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientApiTests.Enqueue_InstanceExpression_PassesEnqueuedState_ToClient()", span="186-186"];
m27_186 [cluster="HangFire.Tests.ClientApiTests.Enqueue_InstanceExpression_PassesEnqueuedState_ToClient()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="BackgroundJob.Enqueue<TestService>(x => x.InstanceMethod())", prediction=254, span="188-188"];
m27_187 [cluster="HangFire.Tests.ClientApiTests.Enqueue_InstanceExpression_PassesEnqueuedState_ToClient()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="_jobClientMock.Verify(client => client.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.IsAny<string[]>(),\r\n                It.Is<JobState>(x => x is EnqueuedState)))", prediction=237, span="190-193"];
m27_188 [cluster="HangFire.Tests.ClientApiTests.Enqueue_InstanceExpression_PassesEnqueuedState_ToClient()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.Enqueue_InstanceExpression_PassesEnqueuedState_ToClient()", span="186-186"];
m27_60 [cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientApiTests.Create_StaticExpression_CorrectlyDeterminesTypeAndMethod()", span="89-89"];
m27_61 [cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs", label="BackgroundJob.Create(() => TestService.StaticMethod(), _stateMock.Object)", span="91-91"];
m27_62 [cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs", label="_jobClientMock.Verify(client => client.CreateJob(\r\n                It.Is<JobMethod>(x => x.Type == typeof(TestService) && x.Method.Name == ''StaticMethod''),\r\n                It.Is<string[]>(x => x.Length == 0),\r\n                It.IsAny<JobState>()))", span="93-96"];
m27_63 [cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.Create_StaticExpression_CorrectlyDeterminesTypeAndMethod()", span="89-89"];
m27_126 [cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="79-79"];
m27_50 [cluster="Unk.Verify", file="SqlServerMonitoringApi.cs", label="Entry Unk.Verify", span=""];
m27_151 [cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesParameterValuesAndTheirTypes_ToClient()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesParameterValuesAndTheirTypes_ToClient()", span="155-155"];
m27_152 [cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesParameterValuesAndTheirTypes_ToClient()", file="SqlServerMonitoringApi.cs", label="BackgroundJob.Create(() => TestService.StaticMethod(34), _stateMock.Object)", span="157-157"];
m27_153 [cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesParameterValuesAndTheirTypes_ToClient()", file="SqlServerMonitoringApi.cs", label="_jobClientMock.Verify(client => client.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.Is<string[]>(x => x[0] == ''34''),\r\n                It.IsAny<JobState>()))", span="159-162"];
m27_154 [cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesParameterValuesAndTheirTypes_ToClient()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesParameterValuesAndTheirTypes_ToClient()", span="155-155"];
m27_253 [file="SqlServerMonitoringApi.cs", label="HangFire.Tests.ClientApiTests", span=""];
m27_254 [file="SqlServerMonitoringApi.cs", label=a, span=""];
m28_0 [cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="SqlServerStorage.cs", label="Entry HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8"];
m28_1 [cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="SqlServerStorage.cs", label="Exit HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8"];
m29_10 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="StorageFacts.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m29_11 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="StorageFacts.cs", label="Entry HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m29_12 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="StorageFacts.cs", label="Assert.IsNotNull(context)", span="29-29"];
m29_13 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="StorageFacts.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnStateUnapplied''))", prediction=256, span="31-31"];
m29_14 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="StorageFacts.cs", label="Exit HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m29_0 [cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="StorageFacts.cs", label="Entry HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", span="14-14"];
m29_1 [cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="StorageFacts.cs", label="_name = name", span="16-16"];
m29_2 [cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="StorageFacts.cs", label="_results = results", span="17-17"];
m29_3 [cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="StorageFacts.cs", label="Exit HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", span="14-14"];
m29_8 [cluster="Unk.IsNotNull", file="StorageFacts.cs", label="Entry Unk.IsNotNull", span=""];
m29_4 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="StorageFacts.cs", label="Entry HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="20-20"];
m29_5 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="StorageFacts.cs", label="Assert.IsNotNull(context)", span="22-22"];
m29_6 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="StorageFacts.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnStateApplied''))", span="24-24"];
m29_7 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="StorageFacts.cs", label="Exit HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="20-20"];
m29_15 [file="StorageFacts.cs", label="HangFire.Tests.TestStateChangedFilter", span=""];
m30_97 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="341-341"];
m30_253 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="341-341"];
m30_5 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="SucceededJobs1.generated.cs", label="Assert.IsNotNull(context)", prediction=257, span="22-22"];
m30_101 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="173-173"];
m30_105 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="173-173"];
m30_10 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="46-62"];
m30_45 [cluster="Hangfire.States.IState.SerializeData()", file="SucceededJobs1.generated.cs", label="Entry Hangfire.States.IState.SerializeData()", span="202-202"];
m30_6 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="SucceededJobs1.generated.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnStateApplied''))", prediction=258, span="24-24"];
m30_8 [cluster="Unk.IsNotNull", file="SucceededJobs1.generated.cs", label="Entry Unk.IsNotNull", span=""];
m30_60 [cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue()", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue()", span="20-20"];
m30_65 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125"];
m30_67 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125"];
m30_59 [cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m30_225 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="309-309"];
m30_231 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="309-309"];
m30_77 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139"];
m30_79 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139"];
m30_235 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="320-320"];
m30_238 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="SucceededJobs1.generated.cs", label="string query = @''\r\nupdate HangFire.[List] set ExpireAt = null where [Key] = @key''", span="324-325"];
m30_241 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="320-320"];
m30_250 [cluster="string.Format(string, params object[])", file="SucceededJobs1.generated.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m30_195 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="276-276"];
m30_201 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="276-276"];
m30_251 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="351-351"];
m30_257 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="351-351"];
m30_141 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="346-346"];
m30_255 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="346-346"];
m30_247 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="SucceededJobs1.generated.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m30_38 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="79-79"];
m30_41 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="79-79"];
m30_205 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="287-287"];
m30_206 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="SucceededJobs1.generated.cs", label="key == null", span="289-289"];
m30_207 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="SucceededJobs1.generated.cs", label="throw new ArgumentNullException(''key'');", span="289-289"];
m30_211 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="287-287"];
m30_4 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", span="37-37"];
m30_47 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="99-99"];
m30_50 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="99-99"];
m30_83 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146"];
m30_84 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SucceededJobs1.generated.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="148-150"];
m30_85 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146"];
m30_175 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="255-255"];
m30_181 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="255-255"];
m30_89 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153"];
m30_90 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SucceededJobs1.generated.cs", label="AddToSet(key, value, 0.0)", span="155-155"];
m30_91 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153"];
m30_0 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", span="37-37"];
m30_27 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="331-331"];
m30_246 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="331-331"];
m30_54 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="117-117"];
m30_55 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SucceededJobs1.generated.cs", label="var provider = _storage.QueueProviders.GetProvider(queue)", span="119-119"];
m30_58 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="117-117"];
m30_9 [cluster="Unk.UseTransaction", file="SucceededJobs1.generated.cs", label="Entry Unk.UseTransaction", span=""];
m30_17 [cluster="Unk.EnlistTransaction", file="SucceededJobs1.generated.cs", label="Entry Unk.EnlistTransaction", span=""];
m30_20 [cluster="System.Action<T>.Invoke(T)", file="SucceededJobs1.generated.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m30_64 [cluster="Unk.Enqueue", file="SucceededJobs1.generated.cs", label="Entry Unk.Enqueue", span=""];
m30_71 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132"];
m30_73 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132"];
m30_92 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158"];
m30_96 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158"];
m30_132 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="214-214"];
m30_140 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="214-214"];
m30_149 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="232-232"];
m30_155 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="232-232"];
m30_31 [cluster="System.DateTime.Add(System.TimeSpan)", file="SucceededJobs1.generated.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m30_32 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="72-72"];
m30_33 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SucceededJobs1.generated.cs", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="74-76"];
m30_34 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="72-72"];
m30_185 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="265-265"];
m30_191 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="265-265"];
m30_46 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m30_24 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="65-65"];
m30_26 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="65-65"];
m30_242 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="328-328"];
m30_21 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="55-55"];
m30_16 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="46-62"];
m30_23 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="55-55"];
m30_28 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="67-69"];
m30_30 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="67-69"];
m30_36 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="74-76"];
m30_35 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="74-76"];
m30_37 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="74-76"];
m30_42 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="86-96"];
m30_44 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="86-96"];
m30_51 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="105-114"];
m30_53 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="105-114"];
m30_61 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="122-122"];
m30_63 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="122-122"];
m30_68 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="127-129"];
m30_70 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="127-129"];
m30_74 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="134-136"];
m30_76 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="134-136"];
m30_80 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="141-143"];
m30_82 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="141-143"];
m30_87 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="148-150"];
m30_86 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="148-150"];
m30_88 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="148-150"];
m30_98 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="168-170"];
m30_100 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="168-170"];
m30_106 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="178-180"];
m30_108 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="178-180"];
m30_114 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="186-188"];
m30_116 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="186-188"];
m30_121 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="194-196"];
m30_123 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="194-196"];
m30_129 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="209-211"];
m30_131 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="209-211"];
m30_143 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="227-229"];
m30_145 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="227-229"];
m30_146 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="229-229"];
m30_148 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="229-229"];
m30_156 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="239-239"];
m30_158 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="239-239"];
m30_168 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="252-252"];
m30_170 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="252-252"];
m30_172 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="252-252"];
m30_174 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="252-252"];
m30_182 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="262-262"];
m30_184 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="262-262"];
m30_192 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="273-273"];
m30_194 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="273-273"];
m30_202 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="284-284"];
m30_204 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="284-284"];
m30_212 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="295-295"];
m30_214 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="295-295"];
m30_222 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="306-306"];
m30_224 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="306-306"];
m30_232 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Entry lambda expression", span="317-317"];
m30_234 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="317-317"];
m30_244 [cluster="lambda expression", file="SucceededJobs1.generated.cs", label="Exit lambda expression", span="328-328"];
m30_159 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="242-242"];
m30_167 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="242-242"];
m30_18 [cluster="Unk.Select", file="SucceededJobs1.generated.cs", label="Entry Unk.Select", span=""];
m30_258 [cluster="System.Collections.Generic.SortedSet<T>.Add(T)", file="SucceededJobs1.generated.cs", label="Entry System.Collections.Generic.SortedSet<T>.Add(T)", span="0-0"];
m30_171 [cluster="Unk.ToList", file="SucceededJobs1.generated.cs", label="Entry Unk.ToList", span=""];
m30_19 [cluster="Unk.Execute", file="SucceededJobs1.generated.cs", label="Entry Unk.Execute", span=""];
m30_142 [cluster="Unk.QueueCommand", file="SucceededJobs1.generated.cs", label="Entry Unk.QueueCommand", span=""];
m30_117 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="191-191"];
m30_120 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="191-191"];
m30_113 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="336-336"];
m30_249 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="336-336"];
m30_215 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="298-298"];
m30_221 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="298-298"];
m30_109 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="183-183"];
m30_112 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="183-183"];
m30_124 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="199-199"];
m30_128 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SucceededJobs1.generated.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="199-199"];
m30_259 [file="SucceededJobs1.generated.cs", label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", span=""];
m30_260 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_261 [file="SucceededJobs1.generated.cs", label="System.TimeSpan", span=""];
m30_262 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_263 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_264 [file="SucceededJobs1.generated.cs", label="Hangfire.States.IState", span=""];
m30_265 [file="SucceededJobs1.generated.cs", label=addAndSetStateSql, span=""];
m30_266 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_267 [file="SucceededJobs1.generated.cs", label="Hangfire.States.IState", span=""];
m30_268 [file="SucceededJobs1.generated.cs", label=addStateSql, span=""];
m30_269 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_270 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_271 [file="SucceededJobs1.generated.cs", label=persistentQueue, span=""];
m30_272 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_273 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_274 [file="SucceededJobs1.generated.cs", label="System.TimeSpan", span=""];
m30_275 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_276 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_277 [file="SucceededJobs1.generated.cs", label="System.TimeSpan", span=""];
m30_278 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_279 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_280 [file="SucceededJobs1.generated.cs", label=double, span=""];
m30_281 [file="SucceededJobs1.generated.cs", label=addSql, span=""];
m30_282 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_283 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_284 [file="SucceededJobs1.generated.cs", label=query, span=""];
m30_285 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_286 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_287 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_288 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_289 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_290 [file="SucceededJobs1.generated.cs", label=int, span=""];
m30_291 [file="SucceededJobs1.generated.cs", label=int, span=""];
m30_292 [file="SucceededJobs1.generated.cs", label=trimSql, span=""];
m30_293 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_294 [file="SucceededJobs1.generated.cs", label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", span=""];
m30_295 [file="SucceededJobs1.generated.cs", label=sql, span=""];
m30_296 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_297 [file="SucceededJobs1.generated.cs", label=query, span=""];
m30_298 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_299 [file="SucceededJobs1.generated.cs", label="System.Collections.Generic.IList<string>", span=""];
m30_300 [file="SucceededJobs1.generated.cs", label=query, span=""];
m30_301 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_302 [file="SucceededJobs1.generated.cs", label=query, span=""];
m30_303 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_304 [file="SucceededJobs1.generated.cs", label="System.TimeSpan", span=""];
m30_305 [file="SucceededJobs1.generated.cs", label=query, span=""];
m30_306 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_307 [file="SucceededJobs1.generated.cs", label="System.TimeSpan", span=""];
m30_308 [file="SucceededJobs1.generated.cs", label=query, span=""];
m30_309 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_310 [file="SucceededJobs1.generated.cs", label="System.TimeSpan", span=""];
m30_311 [file="SucceededJobs1.generated.cs", label=query, span=""];
m30_312 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_313 [file="SucceededJobs1.generated.cs", label=query, span=""];
m30_314 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_315 [file="SucceededJobs1.generated.cs", label=query, span=""];
m30_316 [file="SucceededJobs1.generated.cs", label=string, span=""];
m30_317 [file="SucceededJobs1.generated.cs", label=query, span=""];
n33 -> n9  [color=darkseagreen4, key=1, label="HangFire.AutomaticRetryAttribute", style=dashed];
n33 -> n13  [color=darkseagreen4, key=1, label="HangFire.AutomaticRetryAttribute", style=dashed];
n33 -> n14  [color=darkseagreen4, key=1, label="HangFire.AutomaticRetryAttribute", style=dashed];
n33 -> n15  [color=darkseagreen4, key=1, label="HangFire.AutomaticRetryAttribute", style=dashed];
n4 -> n11  [color=darkseagreen4, key=1, label="HangFire.States.ElectStateContext", style=dashed];
n4 -> n14  [color=darkseagreen4, key=1, label="HangFire.States.ElectStateContext", style=dashed];
n4 -> n16  [color=darkseagreen4, key=1, label="HangFire.States.ElectStateContext", style=dashed];
n5 -> n14  [color=darkseagreen4, key=1, label=failedState, style=dashed];
n5 -> n16  [color=darkseagreen4, key=1, label=failedState, style=dashed];
n8 -> n11  [color=darkseagreen4, key=1, label=retryAttempt, style=dashed];
n8 -> n14  [color=darkseagreen4, key=1, label=retryAttempt, style=dashed];
n10 -> n14  [color=darkseagreen4, key=1, label=delay, style=dashed];
n19 -> n27  [color=darkseagreen4, key=1, label=long, style=dashed];
m1_5 -> m1_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_43 -> m1_45  [color=green, key=1, label=int, style=dashed];
m1_45 -> m1_51  [color=green, key=1, label=scheduledJobs, style=dashed];
m1_56 -> m1_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_56 -> m1_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_48 -> m1_53  [color=green, key=1, label=jobs, style=dashed];
m1_48 -> m1_70  [color=green, key=1, label=jobs, style=dashed];
m1_53 -> m1_64  [color=green, key=1, label="lambda expression", style=dashed];
m1_53 -> m1_69  [color=green, key=1, label="lambda expression", style=dashed];
m1_50 -> m1_53  [color=green, key=1, label=pipeline, style=dashed];
m1_50 -> m1_54  [color=green, key=1, label=pipeline, style=dashed];
m1_50 -> m1_55  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m1_52 -> m1_70  [color=green, key=1, label=job, style=dashed];
m1_52 -> m1_54  [color=green, key=1, label=job, style=dashed];
m1_52 -> m1_74  [color=green, key=1, label=job, style=dashed];
m1_52 -> m1_65  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_52 -> m1_78  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_54 -> m1_73  [color=green, key=1, label="lambda expression", style=dashed];
m1_54 -> m1_77  [color=green, key=1, label="lambda expression", style=dashed];
m1_49 -> m1_54  [color=green, key=1, label=states, style=dashed];
m1_49 -> m1_78  [color=darkseagreen4, key=1, label=states, style=dashed];
m1_33 -> m1_36  [color=darkseagreen4, key=1, label="HangFire.States.IState", style=dashed];
m1_173 -> m1_331  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_173 -> m1_333  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_173 -> m1_339  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_173 -> m1_347  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_173 -> m1_329  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m1_173 -> m1_332  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_173 -> m1_357  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m1_331 -> m1_338  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_331 -> m1_341  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_333 -> m1_346  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_333 -> m1_349  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_328 -> m1_331  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m1_328 -> m1_333  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m1_328 -> m1_334  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m1_326 -> m1_331  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m1_326 -> m1_343  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m1_326 -> m1_342  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m1_330 -> m1_333  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_330 -> m1_343  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_330 -> m1_351  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_330 -> m1_339  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_330 -> m1_347  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_330 -> m1_342  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_330 -> m1_350  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_327 -> m1_333  [color=darkseagreen4, key=1, label=states, style=dashed];
m1_327 -> m1_351  [color=darkseagreen4, key=1, label=states, style=dashed];
m1_327 -> m1_350  [color=darkseagreen4, key=1, label=states, style=dashed];
m1_335 -> m1_353  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_335 -> m1_356  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_219 -> m1_294  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_278 -> m1_284  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_278 -> m1_286  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_277 -> m1_282  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m1_279 -> m1_282  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_279 -> m1_284  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_279 -> m1_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_276 -> m1_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_285 -> m1_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_270 -> m1_284  [color=darkseagreen4, key=1, label=dates, style=dashed];
m1_270 -> m1_280  [color=darkseagreen4, key=1, label=dates, style=dashed];
m1_270 -> m1_273  [color=darkseagreen4, key=1, label=dates, style=dashed];
m1_269 -> m1_273  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m1_271 -> m1_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_275 -> m1_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_236 -> m1_242  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_239 -> m1_242  [color=darkseagreen4, key=1, label=queue, style=dashed];
m1_41 -> m1_41  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, HangFire.Web.ProcessingJobDto>", style=dashed];
m1_341 -> m1_343  [color=darkseagreen4, key=1, label="?", style=dashed];
m1_349 -> m1_351  [color=darkseagreen4, key=1, label="?", style=dashed];
m1_357 -> m1_362  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_138 -> m1_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_148 -> m1_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_164 -> m1_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_164 -> m1_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_165 -> m1_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_165 -> m1_185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_166 -> m1_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_166 -> m1_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_163 -> m1_167  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m1_159 -> m1_177  [color=darkseagreen4, key=1, label=queue, style=dashed];
m1_159 -> m1_183  [color=darkseagreen4, key=1, label=queue, style=dashed];
m1_159 -> m1_189  [color=darkseagreen4, key=1, label=queue, style=dashed];
m1_168 -> m1_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_157 -> m1_159  [color=darkseagreen4, key=1, label=queues, style=dashed];
m1_158 -> m1_170  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_107 -> m1_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_107 -> m1_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_108 -> m1_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_108 -> m1_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_102 -> m1_107  [color=darkseagreen4, key=1, label=servers, style=dashed];
m1_102 -> m1_120  [color=darkseagreen4, key=1, label=servers, style=dashed];
m1_103 -> m1_108  [color=darkseagreen4, key=1, label=queues, style=dashed];
m1_103 -> m1_127  [color=darkseagreen4, key=1, label=queues, style=dashed];
m1_104 -> m1_107  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m1_104 -> m1_108  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m1_104 -> m1_109  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m1_106 -> m1_108  [color=darkseagreen4, key=1, label=name, style=dashed];
m1_106 -> m1_120  [color=darkseagreen4, key=1, label=name, style=dashed];
m1_106 -> m1_127  [color=darkseagreen4, key=1, label=name, style=dashed];
m1_106 -> m1_117  [color=darkseagreen4, key=1, label=name, style=dashed];
m1_106 -> m1_123  [color=darkseagreen4, key=1, label=name, style=dashed];
m1_110 -> m1_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_99 -> m1_105  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m1_374 -> m1_387  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_374 -> m1_391  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_375 -> m1_394  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_375 -> m1_397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_376 -> m1_400  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_376 -> m1_403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_377 -> m1_406  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_377 -> m1_409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_378 -> m1_412  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_378 -> m1_416  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_379 -> m1_420  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_379 -> m1_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_382 -> m1_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_382 -> m1_429  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_373 -> m1_383  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m1_371 -> m1_384  [color=darkseagreen4, key=1, label=stats, style=dashed];
m1_381 -> m1_427  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m1_372 -> m1_380  [color=darkseagreen4, key=1, label=queues, style=dashed];
m1_92 -> m1_322  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_307 -> m1_313  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_307 -> m1_315  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_306 -> m1_311  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m1_308 -> m1_311  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_308 -> m1_313  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_308 -> m1_314  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_298 -> m1_301  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m1_298 -> m1_302  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m1_305 -> m1_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_314 -> m1_314  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_300 -> m1_313  [color=darkseagreen4, key=1, label=dates, style=dashed];
m1_300 -> m1_302  [color=darkseagreen4, key=1, label=dates, style=dashed];
m1_299 -> m1_301  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m1_304 -> m1_309  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m1_304 -> m1_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_252 -> m1_259  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_252 -> m1_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_252 -> m1_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_249 -> m1_260  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m1_6 -> m1_9  [color=darkseagreen4, key=1, label="HangFire.States.IStateMachineFactory", style=dashed];
m1_6 -> m1_11  [color=darkseagreen4, key=1, label="HangFire.Client.IJobCreationProcess", style=dashed];
m1_209 -> m1_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_19 -> m1_22  [color=darkseagreen4, key=1, label="HangFire.States.IState", style=dashed];
m1_224 -> m1_230  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_227 -> m1_230  [color=darkseagreen4, key=1, label=queue, style=dashed];
m1_201 -> m1_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_432 -> m1_70  [color=green, key=1, label=job, style=dashed];
m1_432 -> m1_74  [color=green, key=1, label=job, style=dashed];
m1_432 -> m1_65  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_432 -> m1_78  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_433 -> m1_70  [color=green, key=1, label=jobs, style=dashed];
m1_434 -> m1_78  [color=darkseagreen4, key=1, label=states, style=dashed];
m1_436 -> m1_120  [color=darkseagreen4, key=1, label=servers, style=dashed];
m1_437 -> m1_127  [color=darkseagreen4, key=1, label=queues, style=dashed];
m1_435 -> m1_120  [color=darkseagreen4, key=1, label=name, style=dashed];
m1_435 -> m1_127  [color=darkseagreen4, key=1, label=name, style=dashed];
m1_435 -> m1_117  [color=darkseagreen4, key=1, label=name, style=dashed];
m1_435 -> m1_123  [color=darkseagreen4, key=1, label=name, style=dashed];
m1_443 -> m1_343  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_443 -> m1_351  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_443 -> m1_339  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_443 -> m1_347  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_443 -> m1_342  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_443 -> m1_350  [color=darkseagreen4, key=1, label=id, style=dashed];
m1_444 -> m1_343  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m1_444 -> m1_342  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m1_446 -> m1_351  [color=darkseagreen4, key=1, label=states, style=dashed];
m1_446 -> m1_350  [color=darkseagreen4, key=1, label=states, style=dashed];
m1_438 -> m1_177  [color=darkseagreen4, key=1, label=queue, style=dashed];
m1_438 -> m1_183  [color=darkseagreen4, key=1, label=queue, style=dashed];
m1_438 -> m1_189  [color=darkseagreen4, key=1, label=queue, style=dashed];
m1_441 -> m1_322  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_449 -> m1_427  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m1_442 -> m1_339  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_445 -> m1_347  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_447 -> m1_357  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m1_439 -> m1_260  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m1_440 -> m1_294  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_3 -> m4_18  [color=darkseagreen4, key=1, label=succeeded, style=dashed];
m4_3 -> m4_20  [color=darkseagreen4, key=1, label=succeeded, style=dashed];
m4_4 -> m4_18  [color=darkseagreen4, key=1, label=failed, style=dashed];
m4_4 -> m4_22  [color=darkseagreen4, key=1, label=failed, style=dashed];
m4_5 -> m4_14  [color=darkseagreen4, key=1, label=period, style=dashed];
m4_5 -> m4_16  [color=darkseagreen4, key=1, label=period, style=dashed];
m4_36 -> m4_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m4_36 -> m4_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m4_36 -> m4_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m4_36 -> m4_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m4_36 -> m4_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m4_36 -> m4_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m4_36 -> m4_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m4_36 -> m4_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m4_36 -> m4_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m4_36 -> m4_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m4_36 -> m4_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m5_23 -> m5_23  [color=green, key=1, label=job, style=dashed];
m5_23 -> m5_25  [color=green, key=1, label=job, style=dashed];
m5_21 -> m5_21  [color=green, key=1, label=job, style=dashed];
m5_21 -> m5_23  [color=green, key=1, label=job, style=dashed];
m5_19 -> m5_21  [color=green, key=1, label=job, style=dashed];
m5_25 -> m5_25  [color=green, key=1, label=job, style=dashed];
m5_25 -> m5_27  [color=green, key=1, label=job, style=dashed];
m5_25 -> m5_30  [color=green, key=1, label=job, style=dashed];
m5_27 -> m5_27  [color=green, key=1, label=job, style=dashed];
m5_27 -> m5_30  [color=green, key=1, label=job, style=dashed];
m5_30 -> m5_30  [color=green, key=1, label=job, style=dashed];
m5_30 -> m5_32  [color=green, key=1, label=job, style=dashed];
m5_32 -> m5_32  [color=green, key=1, label=job, style=dashed];
m5_32 -> m5_34  [color=green, key=1, label=job, style=dashed];
m5_34 -> m5_34  [color=green, key=1, label=job, style=dashed];
m5_34 -> m5_37  [color=green, key=1, label=job, style=dashed];
m5_37 -> m5_37  [color=green, key=1, label=job, style=dashed];
m5_37 -> m5_40  [color=green, key=1, label=job, style=dashed];
m5_40 -> m5_40  [color=green, key=1, label=job, style=dashed];
m5_40 -> m5_42  [color=green, key=1, label=job, style=dashed];
m5_42 -> m5_42  [color=green, key=1, label=job, style=dashed];
m5_42 -> m5_45  [color=green, key=1, label=job, style=dashed];
m5_45 -> m5_45  [color=green, key=1, label=job, style=dashed];
m5_45 -> m5_47  [color=green, key=1, label=job, style=dashed];
m5_47 -> m5_47  [color=green, key=1, label=job, style=dashed];
m5_47 -> m5_49  [color=green, key=1, label=job, style=dashed];
m5_49 -> m5_49  [color=green, key=1, label=job, style=dashed];
m5_72 -> m5_54  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_18  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_20  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_53  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_21  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_22  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_23  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_26  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_29  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_27  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_30  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_31  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_32  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_35  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_38  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_39  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_40  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_41  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_42  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_43  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_46  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_47  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_48  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_49  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m6_8 -> m6_8  [color=green, key=1, label="System.Threading.CancellationToken", style=dashed];
m6_29 -> m6_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_40 -> m6_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_71 -> m6_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m6_71 -> m6_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m6_71 -> m6_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m7_5 -> m7_9  [color=green, key=1, label=jobIds, style=dashed];
m7_15 -> m7_10  [color=green, key=1, label="HangFire.Web.BatchCommandHandler", style=dashed];
m8_9 -> m8_12  [color=green, key=1, label=pager, style=dashed];
m8_9 -> m8_45  [color=green, key=1, label=pager, style=dashed];
m8_10 -> m8_21  [color=green, key=1, label=fetchedJobs, style=dashed];
m8_21 -> m8_23  [color=green, key=1, label=job, style=dashed];
m8_23 -> m8_23  [color=green, key=1, label=job, style=dashed];
m8_23 -> m8_25  [color=green, key=1, label=job, style=dashed];
m8_25 -> m8_25  [color=green, key=1, label=job, style=dashed];
m8_25 -> m8_27  [color=green, key=1, label=job, style=dashed];
m8_27 -> m8_27  [color=green, key=1, label=job, style=dashed];
m8_27 -> m8_29  [color=green, key=1, label=job, style=dashed];
m8_29 -> m8_29  [color=green, key=1, label=job, style=dashed];
m8_29 -> m8_31  [color=green, key=1, label=job, style=dashed];
m8_31 -> m8_31  [color=green, key=1, label=job, style=dashed];
m8_31 -> m8_33  [color=green, key=1, label=job, style=dashed];
m8_33 -> m8_33  [color=green, key=1, label=job, style=dashed];
m8_33 -> m8_35  [color=green, key=1, label=job, style=dashed];
m8_35 -> m8_35  [color=green, key=1, label=job, style=dashed];
m8_35 -> m8_37  [color=green, key=1, label=job, style=dashed];
m8_37 -> m8_37  [color=green, key=1, label=job, style=dashed];
m8_37 -> m8_39  [color=green, key=1, label=job, style=dashed];
m8_39 -> m8_39  [color=green, key=1, label=job, style=dashed];
m8_39 -> m8_41  [color=green, key=1, label=job, style=dashed];
m8_41 -> m8_41  [color=green, key=1, label=job, style=dashed];
m8_67 -> m8_1  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_14  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_16  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_18  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_20  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_22  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_23  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_24  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_25  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_26  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_27  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_28  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_29  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_30  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_31  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_32  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_33  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_34  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_35  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_36  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_38  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_39  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_40  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_41  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_44  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_45  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m10_2 -> m10_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_33 -> m10_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_42 -> m10_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_43 -> m10_51  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_19 -> m10_27  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_98 -> m10_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_102 -> m10_117  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_103 -> m10_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_99 -> m10_101  [color=darkseagreen4, key=1, label=filter, style=dashed];
m10_100 -> m10_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_100 -> m10_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_44 -> m10_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_257 -> m10_262  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_258 -> m10_266  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_259 -> m10_265  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_252 -> m10_254  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m10_252 -> m10_260  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m10_253 -> m10_255  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m10_256 -> m10_260  [color=darkseagreen4, key=1, label=exception, style=dashed];
m10_256 -> m10_269  [color=darkseagreen4, key=1, label=exception, style=dashed];
m10_256 -> m10_272  [color=darkseagreen4, key=1, label=exception, style=dashed];
m10_260 -> m10_268  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_56 -> m10_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_57 -> m10_67  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_58 -> m10_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_54 -> m10_59  [color=darkseagreen4, key=1, label=filter, style=dashed];
m10_59 -> m10_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_123 -> m10_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_120 -> m10_122  [color=darkseagreen4, key=1, label=filter, style=dashed];
m10_120 -> m10_124  [color=darkseagreen4, key=1, label=filter, style=dashed];
m10_122 -> m10_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_124 -> m10_136  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_20 -> m10_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_170 -> m10_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_165 -> m10_171  [color=darkseagreen4, key=1, label=filter, style=dashed];
m10_167 -> m10_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_167 -> m10_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_171 -> m10_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_232 -> m10_239  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_233 -> m10_243  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_234 -> m10_242  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_229 -> m10_235  [color=darkseagreen4, key=1, label=filter, style=dashed];
m10_231 -> m10_235  [color=darkseagreen4, key=1, label=exception, style=dashed];
m10_231 -> m10_246  [color=darkseagreen4, key=1, label=exception, style=dashed];
m10_231 -> m10_249  [color=darkseagreen4, key=1, label=exception, style=dashed];
m10_235 -> m10_245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_186 -> m10_188  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m10_186 -> m10_193  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m10_187 -> m10_189  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m10_190 -> m10_195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_190 -> m10_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_193 -> m10_201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_80 -> m10_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_81 -> m10_95  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_82 -> m10_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_74 -> m10_78  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m10_74 -> m10_77  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m10_77 -> m10_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_75 -> m10_79  [color=darkseagreen4, key=1, label=filter2, style=dashed];
m10_76 -> m10_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_202 -> m10_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_246 -> m10_248  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_269 -> m10_271  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_287 -> m10_289  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_322 -> m10_324  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_211 -> m10_220  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_212 -> m10_219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_213 -> m10_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_208 -> m10_210  [color=darkseagreen4, key=1, label=filter, style=dashed];
m10_208 -> m10_214  [color=darkseagreen4, key=1, label=filter, style=dashed];
m10_210 -> m10_216  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_214 -> m10_225  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_303 -> m10_309  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_305 -> m10_319  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_306 -> m10_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_299 -> m10_301  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m10_299 -> m10_307  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m10_300 -> m10_302  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m10_304 -> m10_312  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_304 -> m10_315  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_307 -> m10_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_278 -> m10_283  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_280 -> m10_296  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_281 -> m10_295  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_277 -> m10_287  [color=darkseagreen4, key=1, label=exception, style=dashed];
m10_277 -> m10_290  [color=darkseagreen4, key=1, label=exception, style=dashed];
m10_279 -> m10_286  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_279 -> m10_292  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_141 -> m10_143  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m10_141 -> m10_145  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m10_141 -> m10_148  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m10_142 -> m10_144  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m10_142 -> m10_146  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m10_142 -> m10_147  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m10_145 -> m10_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_148 -> m10_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_146 -> m10_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_147 -> m10_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_331 -> m10_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_15  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_31  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_32  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_33  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_42  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_44  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_51  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_55  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_56  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_58  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_67  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_78  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_79  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_80  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_82  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_95  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_98  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_101  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_103  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_117  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_121  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_123  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_126  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_143  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_144  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_150  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_166  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_169  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_170  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_188  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_189  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_192  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_209  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_212  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_220  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_213  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_230  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_232  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_234  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_243  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_254  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_255  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_257  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_259  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_266  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_276  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_278  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_281  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_296  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_301  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_302  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_303  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_306  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_319  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_331 -> m10_328  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.JobCreationProcessFacts", style=dashed];
m10_333 -> m10_51  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_334 -> m10_67  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_335 -> m10_95  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_336 -> m10_117  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_337 -> m10_220  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_338 -> m10_243  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_340 -> m10_266  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_343 -> m10_296  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_344 -> m10_319  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_332 -> m10_27  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_339 -> m10_246  [color=darkseagreen4, key=1, label=exception, style=dashed];
m10_339 -> m10_249  [color=darkseagreen4, key=1, label=exception, style=dashed];
m10_341 -> m10_269  [color=darkseagreen4, key=1, label=exception, style=dashed];
m10_341 -> m10_272  [color=darkseagreen4, key=1, label=exception, style=dashed];
m10_342 -> m10_287  [color=darkseagreen4, key=1, label=exception, style=dashed];
m10_342 -> m10_290  [color=darkseagreen4, key=1, label=exception, style=dashed];
m13_10 -> m13_15  [color=darkseagreen4, key=1, label=payload, style=dashed];
m13_11 -> m13_21  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m13_11 -> m13_27  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m13_11 -> m13_33  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m13_11 -> m13_35  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m13_11 -> m13_41  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m13_11 -> m13_47  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m13_11 -> m13_53  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m13_11 -> m13_59  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m13_11 -> m13_65  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m13_38 -> m13_40  [color=darkseagreen4, key=1, label=enqueuedState, style=dashed];
m13_39 -> m13_41  [color=darkseagreen4, key=1, label=payload, style=dashed];
m13_54 -> m13_56  [color=darkseagreen4, key=1, label=payload, style=dashed];
m13_67 -> m13_4  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_67 -> m13_11  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_67 -> m13_12  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_67 -> m13_13  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_67 -> m13_14  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_67 -> m13_21  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_67 -> m13_22  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_67 -> m13_23  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_67 -> m13_24  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_67 -> m13_25  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_67 -> m13_26  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_67 -> m13_27  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_67 -> m13_28  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_67 -> m13_29  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_67 -> m13_39  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_67 -> m13_40  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_67 -> m13_41  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_67 -> m13_43  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_67 -> m13_51  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_67 -> m13_52  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_67 -> m13_53  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_67 -> m13_55  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_67 -> m13_56  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_67 -> m13_57  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m13_71 -> m13_73  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m13_73 -> m13_73  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m13_73 -> m13_75  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m13_75 -> m13_75  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m13_115 -> m13_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_6  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_53  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_55  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_56  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_57  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_58  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_59  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_61  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_62  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_63  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_64  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_65  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_66  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_67  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_68  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_69  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_70  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_71  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_72  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_73  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_74  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_75  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_76  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_77  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_78  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_79  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_80  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_81  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_82  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_83  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_84  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_85  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_86  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_87  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_88  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_89  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_90  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_91  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_92  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_93  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_94  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_95  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_96  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_98  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_100  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m13_115 -> m13_101  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m14_6 -> m14_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_17 -> m14_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_27 -> m14_16  [color=darkseagreen4, key=1, label="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts", style=dashed];
m15_15 -> m15_28  [color=green, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_15 -> m15_18  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_16 -> m15_23  [color=green, key=1, label=i, style=dashed];
m15_16 -> m15_27  [color=green, key=1, label=i, style=dashed];
m15_16 -> m15_39  [color=green, key=1, label=i, style=dashed];
m15_16 -> m15_30  [color=green, key=1, label=i, style=dashed];
m15_25 -> m15_28  [color=green, key=1, label=nextTry, style=dashed];
m15_25 -> m15_27  [color=green, key=1, label=nextTry, style=dashed];
m15_25 -> m15_39  [color=green, key=1, label=nextTry, style=dashed];
m15_27 -> m15_38  [color=green, key=1, label="lambda expression", style=dashed];
m15_30 -> m15_30  [color=green, key=1, label=i, style=dashed];
m15_28 -> m15_28  [color=green, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_29 -> m15_29  [color=green, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_67 -> m15_13  [color=green, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m15_67 -> m15_17  [color=green, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m15_67 -> m15_23  [color=green, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m15_67 -> m15_27  [color=green, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m15_67 -> m15_39  [color=green, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m15_67 -> m15_52  [color=green, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m15_67 -> m15_18  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m15_67 -> m15_58  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m15_68 -> m15_39  [color=green, key=1, label=i, style=dashed];
m15_69 -> m15_39  [color=green, key=1, label=nextTry, style=dashed];
m16_37 -> m16_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_7 -> m16_10  [color=green, key=1, label=string, style=dashed];
m16_10 -> m16_18  [color=darkseagreen4, key=1, label=queue, style=dashed];
m16_10 -> m16_26  [color=darkseagreen4, key=1, label=queue, style=dashed];
m16_10 -> m16_29  [color=darkseagreen4, key=1, label=queue, style=dashed];
m16_123 -> m16_127  [color=green, key=1, label="lambda expression", style=dashed];
m16_135 -> m16_138  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_62 -> m16_65  [color=green, key=1, label="Hangfire.Common.Job", style=dashed];
m16_90 -> m16_94  [color=green, key=1, label=bool, style=dashed];
m16_90 -> m16_95  [color=green, key=1, label="System.TimeSpan?", style=dashed];
m16_93 -> m16_95  [color=green, key=1, label=builder, style=dashed];
m16_93 -> m16_98  [color=green, key=1, label=builder, style=dashed];
m16_93 -> m16_100  [color=green, key=1, label=builder, style=dashed];
m16_93 -> m16_102  [color=green, key=1, label=builder, style=dashed];
m16_93 -> m16_105  [color=green, key=1, label=builder, style=dashed];
m16_93 -> m16_107  [color=green, key=1, label=builder, style=dashed];
m16_93 -> m16_108  [color=green, key=1, label=builder, style=dashed];
m16_93 -> m16_110  [color=green, key=1, label=builder, style=dashed];
m16_93 -> m16_111  [color=green, key=1, label=builder, style=dashed];
m16_93 -> m16_112  [color=green, key=1, label=builder, style=dashed];
m16_93 -> m16_113  [color=green, key=1, label=builder, style=dashed];
m16_93 -> m16_114  [color=green, key=1, label=builder, style=dashed];
m16_96 -> m16_98  [color=green, key=1, label="System.TimeSpan?", style=dashed];
m16_96 -> m16_99  [color=green, key=1, label="System.TimeSpan?", style=dashed];
m16_96 -> m16_100  [color=green, key=1, label="System.TimeSpan?", style=dashed];
m16_96 -> m16_101  [color=green, key=1, label="System.TimeSpan?", style=dashed];
m16_96 -> m16_102  [color=green, key=1, label="System.TimeSpan?", style=dashed];
m16_96 -> m16_103  [color=green, key=1, label="System.TimeSpan?", style=dashed];
m16_96 -> m16_104  [color=green, key=1, label="System.TimeSpan?", style=dashed];
m16_96 -> m16_105  [color=green, key=1, label="System.TimeSpan?", style=dashed];
m16_96 -> m16_106  [color=green, key=1, label="System.TimeSpan?", style=dashed];
m16_96 -> m16_107  [color=green, key=1, label="System.TimeSpan?", style=dashed];
m16_96 -> m16_109  [color=green, key=1, label="System.TimeSpan?", style=dashed];
m16_96 -> m16_110  [color=green, key=1, label="System.TimeSpan?", style=dashed];
m16_68 -> m16_71  [color=green, key=1, label=string, style=dashed];
m16_128 -> m16_128  [color=green, key=1, label="System.Collections.Generic.KeyValuePair<string, string>", style=dashed];
m16_48 -> m16_48  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_150 -> m16_10  [color=green, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m16_150 -> m16_26  [color=green, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m16_150 -> m16_47  [color=green, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m16_150 -> m16_71  [color=green, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m16_150 -> m16_70  [color=green, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m16_150 -> m16_76  [color=green, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m16_150 -> m16_80  [color=green, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m16_150 -> m16_84  [color=green, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m16_150 -> m16_88  [color=green, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m17_22 -> m17_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_22 -> m17_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_23 -> m17_27  [color=darkseagreen4, key=1, label=jobType, style=dashed];
m17_24 -> m17_26  [color=darkseagreen4, key=1, label=queue, style=dashed];
m17_48 -> m17_51  [color=darkseagreen4, key=1, label="System.Threading.Thread", style=dashed];
m17_7 -> m17_10  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m17_56 -> m17_10  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m17_56 -> m17_19  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m17_56 -> m17_26  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m17_56 -> m17_27  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m17_56 -> m17_41  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m17_56 -> m17_42  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m17_56 -> m17_44  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m17_56 -> m17_49  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m17_56 -> m17_50  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m18_21 -> m18_24  [color=darkseagreen4, key=1, label=state, style=dashed];
m18_21 -> m18_26  [color=darkseagreen4, key=1, label=state, style=dashed];
m18_21 -> m18_28  [color=darkseagreen4, key=1, label=state, style=dashed];
m18_0 -> m18_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_0 -> m18_5  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m18_35 -> m18_14  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m18_35 -> m18_15  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m18_35 -> m18_28  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m19_13 -> m19_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_116 -> m19_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_1 -> m19_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_133 -> m19_135  [color=darkseagreen4, key=1, label="System.Action<HangFire.Redis.RedisConnection>", style=dashed];
m19_37 -> m19_39  [color=green, key=1, label="lambda expression", style=dashed];
m19_99 -> m19_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_68 -> m19_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_109 -> m19_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_4 -> m19_9  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m19_5 -> m19_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_26 -> m19_28  [color=darkseagreen4, key=1, label=result, style=dashed];
m19_26 -> m19_29  [color=darkseagreen4, key=1, label=result, style=dashed];
m19_26 -> m19_30  [color=darkseagreen4, key=1, label=result, style=dashed];
m19_39 -> m19_43  [color=green, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m19_40 -> m19_42  [color=green, key=1, label="lambda expression", style=dashed];
m19_50 -> m19_52  [color=green, key=1, label=result, style=dashed];
m19_57 -> m19_59  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m19_60 -> m19_62  [color=darkseagreen4, key=1, label=result, style=dashed];
m19_60 -> m19_63  [color=darkseagreen4, key=1, label=result, style=dashed];
m19_70 -> m19_75  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m19_71 -> m19_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_81 -> m19_86  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m19_82 -> m19_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_93 -> m19_95  [color=darkseagreen4, key=1, label=hash, style=dashed];
m19_101 -> m19_105  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m19_102 -> m19_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_120 -> m19_122  [color=darkseagreen4, key=1, label=result, style=dashed];
m19_120 -> m19_123  [color=darkseagreen4, key=1, label=result, style=dashed];
m19_21 -> m19_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_55 -> m19_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_47 -> m19_49  [color=green, key=1, label="lambda expression", style=dashed];
m19_79 -> m19_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_125 -> m19_128  [color=darkseagreen4, key=1, label="System.Action<IRedisClient, HangFire.Redis.RedisConnection>", style=dashed];
m19_126 -> m19_128  [color=darkseagreen4, key=1, label=redis, style=dashed];
m19_89 -> m19_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_138 -> m19_1  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisConnectionFacts", style=dashed];
m19_138 -> m19_37  [color=green, key=1, label="HangFire.Redis.Tests.RedisConnectionFacts", style=dashed];
m19_138 -> m19_99  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisConnectionFacts", style=dashed];
m19_139 -> m19_9  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m19_140 -> m19_43  [color=green, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m19_141 -> m19_75  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m19_142 -> m19_86  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m19_143 -> m19_105  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m20_7 -> m20_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_23 -> m20_25  [color=darkseagreen4, key=1, label=component, style=dashed];
m20_23 -> m20_43  [color=darkseagreen4, key=1, label=component, style=dashed];
m20_25 -> m20_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_26 -> m20_46  [color=green, key=1, label="lambda expression", style=dashed];
m20_22 -> m20_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_22 -> m20_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_50 -> m20_52  [color=green, key=1, label=component, style=dashed];
m20_50 -> m20_57  [color=green, key=1, label=component, style=dashed];
m20_52 -> m20_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_53 -> m20_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_76 -> m20_17  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m20_76 -> m20_24  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m20_76 -> m20_26  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m20_76 -> m20_47  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m20_76 -> m20_68  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m20_76 -> m20_73  [color=green, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m20_76 -> m20_22  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m20_76 -> m20_25  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m20_76 -> m20_43  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m20_76 -> m20_51  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m20_76 -> m20_52  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m20_76 -> m20_57  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m20_76 -> m20_53  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m20_76 -> m20_63  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m20_78 -> m20_57  [color=darkseagreen4, key=1, label=component, style=dashed];
m20_77 -> m20_43  [color=darkseagreen4, key=1, label=component, style=dashed];
m21_19 -> m21_21  [color=darkseagreen4, key=1, label=baseTime, style=dashed];
m21_21 -> m21_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_0 -> m21_3  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m21_29 -> m21_21  [color=darkseagreen4, key=1, label="Hangfire.Server.ScheduleInstant", style=dashed];
m21_29 -> m21_27  [color=darkseagreen4, key=1, label="Hangfire.Server.ScheduleInstant", style=dashed];
m22_44 -> m22_46  [color=darkseagreen4, key=1, label=table1, style=dashed];
m22_44 -> m22_47  [color=darkseagreen4, key=1, label=table1, style=dashed];
m22_80 -> m22_32  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m22_80 -> m22_35  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m22_80 -> m22_42  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m22_80 -> m22_48  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m22_80 -> m22_54  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m22_80 -> m22_57  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m22_80 -> m22_61  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m22_80 -> m22_64  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m22_80 -> m22_68  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m22_80 -> m22_71  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m22_80 -> m22_75  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m22_80 -> m22_78  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m23_25 -> m23_25  [color=green, key=1, label=job, style=dashed];
m23_25 -> m23_27  [color=green, key=1, label=job, style=dashed];
m23_21 -> m23_23  [color=green, key=1, label=job, style=dashed];
m23_27 -> m23_27  [color=green, key=1, label=job, style=dashed];
m23_27 -> m23_29  [color=green, key=1, label=job, style=dashed];
m23_27 -> m23_32  [color=green, key=1, label=job, style=dashed];
m23_23 -> m23_23  [color=green, key=1, label=job, style=dashed];
m23_23 -> m23_25  [color=green, key=1, label=job, style=dashed];
m23_29 -> m23_29  [color=green, key=1, label=job, style=dashed];
m23_29 -> m23_32  [color=green, key=1, label=job, style=dashed];
m23_32 -> m23_32  [color=green, key=1, label=job, style=dashed];
m23_32 -> m23_34  [color=green, key=1, label=job, style=dashed];
m23_34 -> m23_34  [color=green, key=1, label=job, style=dashed];
m23_34 -> m23_36  [color=green, key=1, label=job, style=dashed];
m23_36 -> m23_36  [color=green, key=1, label=job, style=dashed];
m23_36 -> m23_39  [color=green, key=1, label=job, style=dashed];
m23_39 -> m23_39  [color=green, key=1, label=job, style=dashed];
m23_39 -> m23_41  [color=green, key=1, label=job, style=dashed];
m23_41 -> m23_41  [color=green, key=1, label=job, style=dashed];
m23_41 -> m23_43  [color=green, key=1, label=job, style=dashed];
m23_43 -> m23_43  [color=green, key=1, label=job, style=dashed];
m23_43 -> m23_45  [color=green, key=1, label=job, style=dashed];
m23_45 -> m23_45  [color=green, key=1, label=job, style=dashed];
m23_45 -> m23_47  [color=green, key=1, label=job, style=dashed];
m23_47 -> m23_47  [color=green, key=1, label=job, style=dashed];
m23_47 -> m23_49  [color=green, key=1, label=job, style=dashed];
m23_49 -> m23_49  [color=green, key=1, label=job, style=dashed];
m23_49 -> m23_51  [color=green, key=1, label=job, style=dashed];
m23_51 -> m23_51  [color=green, key=1, label=job, style=dashed];
m23_73 -> m23_55  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_18  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_20  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_22  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_54  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_23  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_24  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_25  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_28  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_31  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_29  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_32  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_33  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_34  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_37  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_38  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_39  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_40  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_41  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_42  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_43  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_44  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_45  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_46  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_48  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_49  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_50  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_51  [color=green, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m23_73 -> m23_53  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m25_116 -> m25_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_29 -> m25_35  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_238 -> m25_240  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_19 -> m25_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_280 -> m25_282  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_338 -> m25_340  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_48 -> m25_50  [color=darkseagreen4, key=1, label=table1, style=dashed];
m25_47 -> m25_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_73 -> m25_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_73 -> m25_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_73 -> m25_75  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m25_68 -> m25_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_68 -> m25_71  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_366 -> m25_370  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m25_367 -> m25_369  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_271 -> m25_273  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_307 -> m25_311  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m25_308 -> m25_310  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_260 -> m25_262  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_387 -> m25_391  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m25_388 -> m25_390  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_200 -> m25_202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_107 -> m25_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_145 -> m25_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_377 -> m25_379  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_418 -> m25_420  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_30 -> m25_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_42 -> m25_47  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_43 -> m25_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_58 -> m25_62  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m25_59 -> m25_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_59 -> m25_61  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_59 -> m25_63  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_62 -> m25_64  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m25_62 -> m25_65  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m25_62 -> m25_72  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m25_119 -> m25_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_121 -> m25_123  [color=darkseagreen4, key=1, label=result, style=dashed];
m25_121 -> m25_124  [color=darkseagreen4, key=1, label=result, style=dashed];
m25_121 -> m25_125  [color=darkseagreen4, key=1, label=result, style=dashed];
m25_121 -> m25_126  [color=darkseagreen4, key=1, label=result, style=dashed];
m25_147 -> m25_152  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_148 -> m25_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_158 -> m25_163  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_159 -> m25_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_169 -> m25_172  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_180 -> m25_183  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_180 -> m25_184  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_182 -> m25_184  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_192 -> m25_195  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_202 -> m25_207  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_203 -> m25_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_213 -> m25_218  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_214 -> m25_217  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_240 -> m25_245  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_241 -> m25_244  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_251 -> m25_256  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_252 -> m25_255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_262 -> m25_264  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_273 -> m25_275  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_282 -> m25_287  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_283 -> m25_286  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_293 -> m25_297  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_294 -> m25_296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_318 -> m25_323  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_319 -> m25_322  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_330 -> m25_335  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_331 -> m25_334  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_340 -> m25_342  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_340 -> m25_348  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_343 -> m25_345  [color=darkseagreen4, key=1, label=server, style=dashed];
m25_343 -> m25_346  [color=darkseagreen4, key=1, label=server, style=dashed];
m25_349 -> m25_351  [color=darkseagreen4, key=1, label=sameServer, style=dashed];
m25_358 -> m25_362  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_359 -> m25_361  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_369 -> m25_371  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_379 -> m25_383  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_380 -> m25_382  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_390 -> m25_392  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_393 -> m25_397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_393 -> m25_400  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_393 -> m25_395  [color=darkseagreen4, key=1, label=servers, style=dashed];
m25_406 -> m25_410  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_407 -> m25_409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_190 -> m25_192  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_356 -> m25_358  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_178 -> m25_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_316 -> m25_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_221 -> m25_223  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_291 -> m25_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_40 -> m25_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_416 -> m25_418  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_404 -> m25_406  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_167 -> m25_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_300 -> m25_302  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_328 -> m25_330  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_433 -> m25_435  [color=darkseagreen4, key=1, label="System.Action<HangFire.SqlServer.SqlServerConnection>", style=dashed];
m25_426 -> m25_429  [color=darkseagreen4, key=1, label="System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>", style=dashed];
m25_427 -> m25_429  [color=darkseagreen4, key=1, label=sqlConnection, style=dashed];
m25_249 -> m25_251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_229 -> m25_231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_136 -> m25_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_156 -> m25_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_108 -> m25_38  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m25_108 -> m25_40  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m25_108 -> m25_37  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m25_108 -> m25_46  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m25_108 -> m25_47  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m25_108 -> m25_51  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m25_108 -> m25_57  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m25_108 -> m25_58  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m25_108 -> m25_61  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m25_108 -> m25_70  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m25_108 -> m25_74  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m25_108 -> m25_75  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m25_108 -> m25_78  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m25_108 -> m25_82  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m25_108 -> m25_83  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m25_108 -> m25_87  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m25_108 -> m25_92  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m25_108 -> m25_93  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m25_108 -> m25_101  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m25_108 -> m25_102  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m25_211 -> m25_213  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_439 -> m25_40  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.ConnectionFacts", style=dashed];
m25_439 -> m25_291  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.ConnectionFacts", style=dashed];
m25_439 -> m25_356  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.ConnectionFacts", style=dashed];
m25_439 -> m25_377  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.ConnectionFacts", style=dashed];
m25_439 -> m25_404  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.ConnectionFacts", style=dashed];
m25_440 -> m25_35  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_441 -> m25_47  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_445 -> m25_152  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_446 -> m25_163  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_450 -> m25_207  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_451 -> m25_218  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_453 -> m25_245  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_454 -> m25_256  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_457 -> m25_287  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_458 -> m25_297  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_459 -> m25_311  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m25_460 -> m25_323  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_461 -> m25_335  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_462 -> m25_362  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_463 -> m25_370  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m25_464 -> m25_383  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m25_465 -> m25_391  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m25_466 -> m25_410  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m26_5 -> m26_7  [color=green, key=1, label=servers, style=dashed];
m26_5 -> m26_10  [color=green, key=1, label=servers, style=dashed];
m26_10 -> m26_14  [color=green, key=1, label=server, style=dashed];
m26_10 -> m26_16  [color=green, key=1, label=server, style=dashed];
m26_10 -> m26_18  [color=green, key=1, label=server, style=dashed];
m26_10 -> m26_20  [color=green, key=1, label=server, style=dashed];
m26_10 -> m26_22  [color=green, key=1, label=server, style=dashed];
m26_10 -> m26_24  [color=green, key=1, label=server, style=dashed];
m26_10 -> m26_26  [color=green, key=1, label=server, style=dashed];
m26_42 -> m26_1  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m26_42 -> m26_6  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m26_42 -> m26_8  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m26_42 -> m26_9  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m26_42 -> m26_29  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m26_42 -> m26_14  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m26_42 -> m26_16  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m26_42 -> m26_18  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m26_42 -> m26_20  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m26_42 -> m26_24  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m26_42 -> m26_26  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m26_42 -> m26_13  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m26_42 -> m26_15  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m26_42 -> m26_17  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m26_42 -> m26_19  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m26_42 -> m26_21  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m26_42 -> m26_23  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m26_42 -> m26_28  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m26_42 -> m26_25  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m26_42 -> m26_27  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m26_42 -> m26_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m27_111 -> m27_116  [color=green, key=1, label="lambda expression", style=dashed];
m27_110 -> m27_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_229 -> m27_235  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_228 -> m27_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_47 -> m27_51  [color=green, key=1, label="lambda expression", style=dashed];
m27_18 -> m27_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_35 -> m27_42  [color=green, key=1, label="lambda expression", style=dashed];
m27_34 -> m27_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_77 -> m27_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_78 -> m27_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_48 -> m27_54  [color=green, key=1, label="lambda expression", style=dashed];
m27_48 -> m27_18  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m27_23 -> m27_25  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m27_23 -> m27_37  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m27_199 -> m27_202  [color=green, key=1, label="lambda expression", style=dashed];
m27_200 -> m27_205  [color=green, key=1, label="lambda expression", style=dashed];
m27_124 -> m27_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_123 -> m27_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_0 -> m27_7  [color=darkseagreen4, key=1, label="HangFire.States.IStateMachineFactory", style=dashed];
m27_138 -> m27_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_139 -> m27_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_93 -> m27_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_94 -> m27_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_177 -> m27_181  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_213 -> m27_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_212 -> m27_217  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_55 -> m27_57  [color=green, key=1, label="lambda expression", style=dashed];
m27_117 -> m27_119  [color=green, key=1, label="lambda expression", style=dashed];
m27_193 -> m27_195  [color=green, key=1, label="lambda expression", style=dashed];
m27_206 -> m27_208  [color=green, key=1, label="lambda expression", style=dashed];
m27_68 -> m27_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_68 -> m27_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_84 -> m27_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_84 -> m27_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_101 -> m27_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_101 -> m27_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_132 -> m27_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_146 -> m27_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_160 -> m27_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_221 -> m27_223  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_236 -> m27_238  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_172 -> m27_172  [color=darkseagreen4, key=1, label=a, style=dashed];
m27_167 -> m27_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_167 -> m27_172  [color=darkseagreen4, key=1, label=a, style=dashed];
m27_22 -> m27_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m27_22 -> m27_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m27_22 -> m27_31  [color=darkseagreen4, key=1, label="HangFire.Server.IJobPerformanceProcess", style=dashed];
m27_22 -> m27_37  [color=darkseagreen4, key=1, label=string, style=dashed];
m27_28 -> m27_31  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m27_186 -> m27_189  [color=green, key=1, label="lambda expression", style=dashed];
m27_187 -> m27_192  [color=green, key=1, label="lambda expression", style=dashed];
m27_61 -> m27_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_62 -> m27_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_152 -> m27_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_153 -> m27_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_253 -> m27_35  [color=green, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_253 -> m27_47  [color=green, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_253 -> m27_48  [color=green, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_253 -> m27_55  [color=green, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_253 -> m27_111  [color=green, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_253 -> m27_187  [color=green, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_253 -> m27_200  [color=green, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_253 -> m27_18  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_253 -> m27_58  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_253 -> m27_61  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_253 -> m27_62  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_253 -> m27_77  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_253 -> m27_78  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_253 -> m27_93  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_253 -> m27_94  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_253 -> m27_110  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_253 -> m27_124  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_253 -> m27_138  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_253 -> m27_139  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_253 -> m27_152  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_253 -> m27_153  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_253 -> m27_167  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_253 -> m27_213  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_253 -> m27_229  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m27_254 -> m27_172  [color=darkseagreen4, key=1, label=a, style=dashed];
m29_15 -> m29_6  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangedFilter", style=dashed];
m29_15 -> m29_13  [color=green, key=1, label="HangFire.Tests.TestStateChangedFilter", style=dashed];
m30_84 -> m30_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_33 -> m30_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_259 -> m30_90  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
}
