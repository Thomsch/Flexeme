digraph  {
n19 [label="HangFire.Web.AspNetBackgroundJobServer", span=""];
n0 [label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer()", span="31-31", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer()"];
n1 [label="HostingEnvironment.RegisterObject(this)", span="33-33", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer()", color=red, community=0];
n2 [label="Exit HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer()", span="31-31", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer()"];
n3 [label="Entry Unk.RegisterObject", span="", cluster="Unk.RegisterObject"];
n4 [label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions)", span="41-41", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions)"];
n5 [label="HostingEnvironment.RegisterObject(this)", span="44-44", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions)", color=red, community=0];
n6 [label="Exit HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions)", span="41-41", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions)"];
n7 [label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="53-53", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)"];
n8 [label="HostingEnvironment.RegisterObject(this)", span="56-56", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", color=red, community=0];
n9 [label="Exit HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="53-53", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)"];
n10 [label="Entry HangFire.Web.AspNetBackgroundJobServer.Dispose()", span="63-63", cluster="HangFire.Web.AspNetBackgroundJobServer.Dispose()"];
n11 [label="base.Dispose()", span="65-65", cluster="HangFire.Web.AspNetBackgroundJobServer.Dispose()", color=red, community=0];
n12 [label="HostingEnvironment.UnregisterObject(this)", span="66-66", cluster="HangFire.Web.AspNetBackgroundJobServer.Dispose()", color=red, community=0];
n14 [label="Entry HangFire.BackgroundJobServer.Dispose()", span="76-76", cluster="HangFire.BackgroundJobServer.Dispose()"];
n13 [label="Exit HangFire.Web.AspNetBackgroundJobServer.Dispose()", span="63-63", cluster="HangFire.Web.AspNetBackgroundJobServer.Dispose()"];
n15 [label="Entry Unk.UnregisterObject", span="", cluster="Unk.UnregisterObject"];
n16 [label="Entry HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", span="69-69", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)"];
n17 [label="Dispose()", span="71-71", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", color=red, community=0];
n18 [label="Exit HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", span="69-69", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)"];
m3_48 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="CombinedResourceDispatcher.cs"];
m3_79 [label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", span="96-96", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="CombinedResourceDispatcher.cs"];
m3_19 [label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.CreateStorage(SqlConnection)", span="105-105", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.CreateStorage(SqlConnection)", file="CombinedResourceDispatcher.cs"];
m3_77 [label="return new SqlServerStorage(connection);", span="107-107", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.CreateStorage(SqlConnection)", file="CombinedResourceDispatcher.cs"];
m3_78 [label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.CreateStorage(SqlConnection)", span="105-105", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.CreateStorage(SqlConnection)", file="CombinedResourceDispatcher.cs"];
m3_13 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="CombinedResourceDispatcher.cs"];
m3_45 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()", file="CombinedResourceDispatcher.cs"];
m3_5 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="CombinedResourceDispatcher.cs"];
m3_10 [label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenResourceIsNullOrEmpty()", span="23-23", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenResourceIsNullOrEmpty()", file="CombinedResourceDispatcher.cs"];
m3_11 [label="UseConnection(connection =>\r\n            {\r\n                var storage = CreateStorage(connection);\r\n\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerDistributedLock(storage, '''', _timeout));\r\n\r\n                Assert.Equal(''resource'', exception.ParamName);\r\n            })", span="25-33", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenResourceIsNullOrEmpty()", color=green, community=0, file="CombinedResourceDispatcher.cs"];
m3_12 [label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenResourceIsNullOrEmpty()", span="23-23", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenResourceIsNullOrEmpty()", file="CombinedResourceDispatcher.cs"];
m3_44 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="CombinedResourceDispatcher.cs"];
m3_47 [label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Set()", file="CombinedResourceDispatcher.cs"];
m3_83 [label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37", cluster="Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="CombinedResourceDispatcher.cs"];
m3_4 [label="Entry Unk.>", span="", cluster="Unk.>", file="CombinedResourceDispatcher.cs"];
m3_66 [label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Dispose_ReleasesExclusiveApplicationLock()", span="90-90", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Dispose_ReleasesExclusiveApplicationLock()", file="CombinedResourceDispatcher.cs"];
m3_67 [label="UseConnection(sql =>\r\n            {\r\n                var storage = CreateStorage(sql);\r\n                var distributedLock = new SqlServerDistributedLock(storage, ''hello'', _timeout);\r\n                distributedLock.Dispose();\r\n\r\n                var lockMode = sql.Query<string>(\r\n                    ''select applock_mode('public', 'hello', 'session')'').Single();\r\n\r\n                Assert.Equal(''NoLock'', lockMode);\r\n            })", span="92-102", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Dispose_ReleasesExclusiveApplicationLock()", file="CombinedResourceDispatcher.cs"];
m3_68 [label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Dispose_ReleasesExclusiveApplicationLock()", span="90-90", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Dispose_ReleasesExclusiveApplicationLock()", file="CombinedResourceDispatcher.cs"];
m3_84 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="CombinedResourceDispatcher.cs"];
m3_23 [label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", span="37-37", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", file="CombinedResourceDispatcher.cs"];
m3_24 [label="UseConnection(sql =>\r\n            {\r\n                // ReSharper disable once UnusedVariable\r\n                var storage = CreateStorage(sql);\r\n                using (new SqlServerDistributedLock(storage, ''hello'', _timeout))\r\n                {\r\n                    var lockMode = sql.Query<string>(\r\n                        ''select applock_mode('public', 'hello', 'session')'').Single();\r\n\r\n                    Assert.Equal(''Exclusive'', lockMode);\r\n                }\r\n            })", span="39-50", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", file="CombinedResourceDispatcher.cs"];
m3_25 [label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", span="37-37", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", file="CombinedResourceDispatcher.cs"];
m3_9 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="44-44", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="CombinedResourceDispatcher.cs"];
m3_46 [label="Entry System.Threading.ManualResetEventSlim.Wait()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Wait()", file="CombinedResourceDispatcher.cs"];
m3_43 [label="Entry System.Threading.ManualResetEventSlim.ManualResetEventSlim(bool)", span="0-0", cluster="System.Threading.ManualResetEventSlim.ManualResetEventSlim(bool)", file="CombinedResourceDispatcher.cs"];
m3_52 [label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<SqlConnection>)", span="110-110", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<SqlConnection>)", file="CombinedResourceDispatcher.cs"];
m3_80 [label="var connection = ConnectionUtils.CreateConnection()", span="112-112", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<SqlConnection>)", file="CombinedResourceDispatcher.cs"];
m3_81 [label="action(connection)", span="114-114", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<SqlConnection>)", file="CombinedResourceDispatcher.cs"];
m3_82 [label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<SqlConnection>)", span="110-110", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<SqlConnection>)", file="CombinedResourceDispatcher.cs"];
m3_69 [label="Entry lambda expression", span="92-102", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_6 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_7 [label="new SqlServerDistributedLock(null, ''hello'', _timeout)", span="17-17", cluster="lambda expression", color=green, community=0, file="CombinedResourceDispatcher.cs"];
m3_8 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_14 [label="Entry lambda expression", span="25-33", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_15 [label="var storage = CreateStorage(connection)", span="27-27", cluster="lambda expression", color=green, community=0, file="CombinedResourceDispatcher.cs"];
m3_16 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerDistributedLock(storage, '''', _timeout))", span="29-30", cluster="lambda expression", color=green, community=0, file="CombinedResourceDispatcher.cs"];
m3_21 [label="new SqlServerDistributedLock(storage, '''', _timeout)", span="30-30", cluster="lambda expression", color=green, community=0, file="CombinedResourceDispatcher.cs"];
m3_17 [label="Assert.Equal(''resource'', exception.ParamName)", span="32-32", cluster="lambda expression", color=green, community=0, file="CombinedResourceDispatcher.cs"];
m3_20 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_22 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_18 [label="Exit lambda expression", span="25-33", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_27 [label="var storage = CreateStorage(sql)", span="42-42", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_28 [label="new SqlServerDistributedLock(storage, ''hello'', _timeout)", span="43-43", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_50 [label="UseConnection(connection1 =>\r\n                {\r\n                    var storage = CreateStorage(connection1);\r\n                    using (new SqlServerDistributedLock(storage, ''exclusive'', _timeout))\r\n                    {\r\n                        lockAcquired.Set();\r\n                        releaseLock.Wait();\r\n                    }\r\n                })", span="60-68", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_54 [label="var storage = CreateStorage(connection1)", span="62-62", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_55 [label="new SqlServerDistributedLock(storage, ''exclusive'', _timeout)", span="63-63", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_60 [label="var storage = CreateStorage(connection2)", span="75-75", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_61 [label="Assert.Throws<SqlServerDistributedLockException>(\r\n                    () =>\r\n                    {\r\n                        using (new SqlServerDistributedLock(storage, ''exclusive'', _timeout))\r\n                        {\r\n                        }\r\n                    })", span="76-82", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_64 [label="new SqlServerDistributedLock(storage, ''exclusive'', _timeout)", span="79-79", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_70 [label="var storage = CreateStorage(sql)", span="94-94", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_71 [label="var distributedLock = new SqlServerDistributedLock(storage, ''hello'', _timeout)", span="95-95", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_29 [label="var lockMode = sql.Query<string>(\r\n                        ''select applock_mode('public', 'hello', 'session')'').Single()", span="45-46", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_73 [label="var lockMode = sql.Query<string>(\r\n                    ''select applock_mode('public', 'hello', 'session')'').Single()", span="98-99", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_30 [label="Assert.Equal(''Exclusive'', lockMode)", span="48-48", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_74 [label="Assert.Equal(''NoLock'', lockMode)", span="101-101", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_26 [label="Entry lambda expression", span="39-50", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_49 [label="Entry lambda expression", span="60-68", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_51 [label="Exit lambda expression", span="60-68", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_53 [label="Entry lambda expression", span="60-68", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_56 [label="lockAcquired.Set()", span="65-65", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_59 [label="Entry lambda expression", span="73-83", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_62 [label="Exit lambda expression", span="73-83", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_63 [label="Entry lambda expression", span="77-82", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_65 [label="Exit lambda expression", span="77-82", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_72 [label="distributedLock.Dispose()", span="96-96", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_31 [label="Exit lambda expression", span="39-50", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_75 [label="Exit lambda expression", span="92-102", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_57 [label="releaseLock.Wait()", span="66-66", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_58 [label="Exit lambda expression", span="60-68", cluster="lambda expression", file="CombinedResourceDispatcher.cs"];
m3_32 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="CombinedResourceDispatcher.cs"];
m3_0 [label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="14-14", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="CombinedResourceDispatcher.cs"];
m3_1 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerDistributedLock(null, ''hello'', _timeout))", span="16-17", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="CombinedResourceDispatcher.cs"];
m3_2 [label="Assert.Equal(''storage'', exception.ParamName)", span="19-19", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="CombinedResourceDispatcher.cs"];
m3_3 [label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="14-14", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="CombinedResourceDispatcher.cs"];
m3_33 [label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", span="54-54", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="CombinedResourceDispatcher.cs"];
m3_36 [label="var thread = new Thread(\r\n                () => UseConnection(connection1 =>\r\n                {\r\n                    var storage = CreateStorage(connection1);\r\n                    using (new SqlServerDistributedLock(storage, ''exclusive'', _timeout))\r\n                    {\r\n                        lockAcquired.Set();\r\n                        releaseLock.Wait();\r\n                    }\r\n                }))", span="59-68", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="CombinedResourceDispatcher.cs"];
m3_39 [label="UseConnection(connection2 =>\r\n            {\r\n                var storage = CreateStorage(connection2);\r\n                Assert.Throws<SqlServerDistributedLockException>(\r\n                    () =>\r\n                    {\r\n                        using (new SqlServerDistributedLock(storage, ''exclusive'', _timeout))\r\n                        {\r\n                        }\r\n                    });\r\n            })", span="73-83", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="CombinedResourceDispatcher.cs"];
m3_34 [label="var releaseLock = new ManualResetEventSlim(false)", span="56-56", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="CombinedResourceDispatcher.cs"];
m3_35 [label="var lockAcquired = new ManualResetEventSlim(false)", span="57-57", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="CombinedResourceDispatcher.cs"];
m3_37 [label="thread.Start()", span="69-69", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="CombinedResourceDispatcher.cs"];
m3_41 [label="thread.Join()", span="86-86", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="CombinedResourceDispatcher.cs"];
m3_38 [label="lockAcquired.Wait()", span="71-71", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="CombinedResourceDispatcher.cs"];
m3_40 [label="releaseLock.Set()", span="85-85", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="CombinedResourceDispatcher.cs"];
m3_42 [label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", span="54-54", cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="CombinedResourceDispatcher.cs"];
m3_76 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="83-83", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="CombinedResourceDispatcher.cs"];
m3_85 [label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", span="", file="CombinedResourceDispatcher.cs"];
m3_86 [label=storage, span="", file="CombinedResourceDispatcher.cs"];
m3_87 [label=releaseLock, span="", file="CombinedResourceDispatcher.cs"];
m3_88 [label=lockAcquired, span="", file="CombinedResourceDispatcher.cs"];
m3_89 [label=storage, span="", file="CombinedResourceDispatcher.cs"];
m4_5 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="CombinedResourceHandler.cs"];
m4_6 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="CombinedResourceHandler.cs"];
m4_0 [label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="CombinedResourceHandler.cs"];
m4_1 [label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="26-26", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=red, community=0, file="CombinedResourceHandler.cs"];
m4_2 [label="InvisibilityTimeout = TimeSpan.FromMinutes(5)", span="27-27", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=red, community=0, file="CombinedResourceHandler.cs"];
m4_3 [label="PrepareSchemaIfNecessary = true", span="29-29", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=red, community=0, file="CombinedResourceHandler.cs"];
m4_4 [label="Exit HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="CombinedResourceHandler.cs"];
m4_7 [label="HangFire.SqlServer.SqlServerStorageOptions", span="", file="CombinedResourceHandler.cs"];
m6_36 [label="Entry HangFire.JobHelper.FromJson<T>(string)", span="44-44", cluster="HangFire.JobHelper.FromJson<T>(string)", file="CommandHandler.cs"];
m6_113 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="CommandHandler.cs"];
m6_296 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="CommandHandler.cs"];
m6_30 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="CommandHandler.cs"];
m6_133 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="CommandHandler.cs"];
m6_43 [label="Entry HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="CommandHandler.cs"];
m6_44 [label=Redis, span="82-82", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="CommandHandler.cs"];
m6_45 [label="var scheduledJobs = Redis.GetRangeWithScoresFromSortedSet(\r\n                    ''hangfire:schedule'',\r\n                    from,\r\n                    from + count - 1)", span="84-87", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="CommandHandler.cs"];
m6_46 [label="scheduledJobs.Count == 0", span="89-89", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="CommandHandler.cs"];
m6_51 [label=scheduledJobs, span="99-99", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="CommandHandler.cs"];
m6_56 [label="return scheduledJobs.ToDictionary(\r\n                    job => job.Key,\r\n                    job => new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="119-129", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="CommandHandler.cs"];
m6_47 [label="return new Dictionary<string, ScheduleDto>();", span="91-91", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="CommandHandler.cs"];
m6_48 [label="var jobs = new Dictionary<string, List<string>>()", span="94-94", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="CommandHandler.cs"];
m6_49 [label="var states = new Dictionary<string, string>()", span="95-95", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="CommandHandler.cs"];
m6_53 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' }),\r\n                            x => jobs.Add(job.Key, x))", span="103-107", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="CommandHandler.cs"];
m6_50 [label="var pipeline = Redis.CreatePipeline()", span="97-97", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="CommandHandler.cs"];
m6_54 [label="pipeline.QueueCommand(\r\n                            x => x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State''),\r\n                            x => states.Add(job.Key, x))", span="109-113", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="CommandHandler.cs"];
m6_55 [label="pipeline.Flush()", span="116-116", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="CommandHandler.cs"];
m6_52 [label="var job = scheduledJob", span="101-101", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="CommandHandler.cs"];
m6_57 [label="Exit HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="CommandHandler.cs"];
m6_38 [label="Entry HangFire.JobHelper.FromNullableStringTimestamp(string)", span="72-72", cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="CommandHandler.cs"];
m6_214 [label="Entry HangFire.Web.DequeuedJobDto.DequeuedJobDto()", span="5-5", cluster="HangFire.Web.DequeuedJobDto.DequeuedJobDto()", file="CommandHandler.cs"];
m6_391 [label="Entry HangFire.Web.StatisticsDto.StatisticsDto()", span="2-2", cluster="HangFire.Web.StatisticsDto.StatisticsDto()", file="CommandHandler.cs"];
m6_29 [label="Entry Unk.GetJobsWithProperties", span="", cluster="Unk.GetJobsWithProperties", file="CommandHandler.cs"];
m6_31 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="CommandHandler.cs"];
m6_364 [label="Entry KeyValuePair<string, T>.cstr", span="", cluster="KeyValuePair<string, T>.cstr", file="CommandHandler.cs"];
m6_197 [label="Entry HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", span="5-5", cluster="HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", file="CommandHandler.cs"];
m6_60 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="CommandHandler.cs"];
m6_76 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="CommandHandler.cs"];
m6_23 [label="Entry HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="52-52", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="CommandHandler.cs"];
m6_24 [label=Redis, span="55-55", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="CommandHandler.cs"];
m6_25 [label="var jobIds = Redis.GetRangeFromSortedSet(\r\n                    ''hangfire:processing'',\r\n                    from,\r\n                    from + count - 1)", span="57-60", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="CommandHandler.cs"];
m6_26 [label="return GetJobsWithProperties(Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''StartedAt'', ''ServerName'', ''State'' },\r\n                    (job, state) => new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }).OrderBy(x => x.Value.StartedAt).ToList();", span="62-76", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="CommandHandler.cs"];
m6_27 [label="Exit HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="52-52", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="CommandHandler.cs"];
m6_134 [label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="67-67", cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="CommandHandler.cs"];
m6_262 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="CommandHandler.cs"];
m6_173 [label="Entry HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="500-500", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="CommandHandler.cs"];
m6_329 [label="jobIds.Count == 0", span="507-507", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="CommandHandler.cs"];
m6_331 [label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="509-509", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="CommandHandler.cs"];
m6_332 [label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="510-510", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="CommandHandler.cs"];
m6_333 [label="var pipeline = redis.CreatePipeline()", span="512-512", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="CommandHandler.cs"];
m6_334 [label=jobIds, span="514-514", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="CommandHandler.cs"];
m6_336 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="518-520", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="CommandHandler.cs"];
m6_337 [label="stateProperties != null", span="522-522", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="CommandHandler.cs"];
m6_338 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="524-526", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="CommandHandler.cs"];
m6_340 [label="return jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State)))\r\n                .ToList();", span="533-543", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="CommandHandler.cs"];
m6_330 [label="return new List<KeyValuePair<string, T>>();", span="507-507", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="CommandHandler.cs"];
m6_339 [label="pipeline.Flush()", span="530-530", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="CommandHandler.cs"];
m6_335 [label="var id = jobId", span="516-516", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="CommandHandler.cs"];
m6_341 [label="Exit HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="500-500", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="CommandHandler.cs"];
m6_366 [label="Entry Unk.selector", span="", cluster="Unk.selector", file="CommandHandler.cs"];
m6_238 [label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="86-86", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="CommandHandler.cs"];
m6_236 [label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="32-32", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="CommandHandler.cs"];
m6_350 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="CommandHandler.cs"];
m6_11 [label="Entry HangFire.Web.JobStorage.DequeuedCount(string)", span="28-28", cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="CommandHandler.cs"];
m6_12 [label=Redis, span="30-30", cluster="HangFire.Web.JobStorage.DequeuedCount(string)", color=red, community=0, file="CommandHandler.cs"];
m6_13 [label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue));", span="32-32", cluster="HangFire.Web.JobStorage.DequeuedCount(string)", color=red, community=0, file="CommandHandler.cs"];
m6_14 [label="Exit HangFire.Web.JobStorage.DequeuedCount(string)", span="28-28", cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="CommandHandler.cs"];
m6_219 [label="Entry HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="439-439", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_274 [label="var endDate = DateTime.UtcNow", span="442-442", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_281 [label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="450-450", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_282 [label="var valuesMap = redis.GetValuesMap(keys)", span="451-451", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_275 [label="var dates = new List<DateTime>()", span="443-443", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_278 [label="dates.Add(endDate)", span="446-446", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_279 [label="endDate = endDate.AddHours(-1)", span="447-447", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_276 [label="var i = 0", span="444-444", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_285 [label="i < dates.Count", span="454-454", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_289 [label="result.Add(dates[i], value)", span="462-462", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_277 [label="i < 24", span="444-444", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_280 [label="i++", span="444-444", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_283 [label="var result = new Dictionary<DateTime, long>()", span="453-453", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_287 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="457-457", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_284 [label="var i = 0", span="454-454", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_291 [label="return result;", span="465-465", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_290 [label="i++", span="454-454", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_286 [label="long value", span="456-456", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_288 [label="value = 0", span="459-459", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_292 [label="Exit HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="439-439", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_234 [label="Entry Unk.TryToGetQueue", span="", cluster="Unk.TryToGetQueue", file="CommandHandler.cs"];
m6_58 [label="Entry Unk.GetRangeWithScoresFromSortedSet", span="", cluster="Unk.GetRangeWithScoresFromSortedSet", file="CommandHandler.cs"];
m6_132 [label="Entry HangFire.Web.ServerDto.ServerDto()", span="5-5", cluster="HangFire.Web.ServerDto.ServerDto()", file="CommandHandler.cs"];
m6_237 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="CommandHandler.cs"];
m6_263 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="CommandHandler.cs"];
m6_239 [label="Entry HangFire.Web.JobStorage.EnqueueScheduled(string)", span="393-393", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="CommandHandler.cs"];
m6_240 [label=Redis, span="395-395", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="CommandHandler.cs"];
m6_241 [label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="397-397", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="CommandHandler.cs"];
m6_247 [label="return stateMachine.ChangeState(jobId, state, ScheduledState.Name);", span="408-408", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="CommandHandler.cs"];
m6_242 [label="var queue = JobHelper.TryToGetQueue(jobType)", span="398-398", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="CommandHandler.cs"];
m6_243 [label="String.IsNullOrEmpty(queue)", span="400-400", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="CommandHandler.cs"];
m6_246 [label="var state = new EnqueuedState(''The job has been enqueued by a user.'', queue)", span="406-406", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="CommandHandler.cs"];
m6_244 [label="return false;", span="402-402", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="CommandHandler.cs"];
m6_245 [label="var stateMachine = new StateMachine(Redis)", span="405-405", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="CommandHandler.cs"];
m6_248 [label="Exit HangFire.Web.JobStorage.EnqueueScheduled(string)", span="393-393", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="CommandHandler.cs"];
m6_174 [label="Entry HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4", cluster="HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="CommandHandler.cs"];
m6_322 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="CommandHandler.cs"];
m6_365 [label="Entry Unk.TrueForAll", span="", cluster="Unk.TrueForAll", file="CommandHandler.cs"];
m6_434 [label="Entry lambda expression", span="593-593", cluster="lambda expression", file="CommandHandler.cs"];
m6_32 [label="Entry lambda expression", span="66-76", cluster="lambda expression", file="CommandHandler.cs"];
m6_40 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="CommandHandler.cs"];
m6_33 [label="new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }", span="66-76", cluster="lambda expression", file="CommandHandler.cs"];
m6_34 [label="Exit lambda expression", span="66-76", cluster="lambda expression", file="CommandHandler.cs"];
m6_41 [label="x.Value.StartedAt", span="76-76", cluster="lambda expression", file="CommandHandler.cs"];
m6_42 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="CommandHandler.cs"];
m6_70 [label="jobs.Add(job.Key, x)", span="107-107", cluster="lambda expression", file="CommandHandler.cs"];
m6_84 [label="new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="121-129", cluster="lambda expression", file="CommandHandler.cs"];
m6_78 [label="states.Add(job.Key, x)", span="113-113", cluster="lambda expression", file="CommandHandler.cs"];
m6_65 [label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' })", span="104-106", cluster="lambda expression", file="CommandHandler.cs"];
m6_74 [label="x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State'')", span="110-112", cluster="lambda expression", file="CommandHandler.cs"];
m6_64 [label="Entry lambda expression", span="104-106", cluster="lambda expression", file="CommandHandler.cs"];
m6_69 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="CommandHandler.cs"];
m6_73 [label="Entry lambda expression", span="110-112", cluster="lambda expression", file="CommandHandler.cs"];
m6_77 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="CommandHandler.cs"];
m6_80 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="CommandHandler.cs"];
m6_83 [label="Entry lambda expression", span="121-129", cluster="lambda expression", file="CommandHandler.cs"];
m6_66 [label="Exit lambda expression", span="104-106", cluster="lambda expression", file="CommandHandler.cs"];
m6_71 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="CommandHandler.cs"];
m6_75 [label="Exit lambda expression", span="110-112", cluster="lambda expression", file="CommandHandler.cs"];
m6_79 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="CommandHandler.cs"];
m6_81 [label="job.Key", span="120-120", cluster="lambda expression", file="CommandHandler.cs"];
m6_82 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="CommandHandler.cs"];
m6_85 [label="Exit lambda expression", span="121-129", cluster="lambda expression", file="CommandHandler.cs"];
m6_120 [label="servers.Add(name, x)", span="173-173", cluster="lambda expression", file="CommandHandler.cs"];
m6_130 [label="new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }", span="184-191", cluster="lambda expression", file="CommandHandler.cs"];
m6_127 [label="queues.Add(name, x)", span="178-178", cluster="lambda expression", file="CommandHandler.cs"];
m6_117 [label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="170-172", cluster="lambda expression", file="CommandHandler.cs"];
m6_123 [label="x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name))", span="176-177", cluster="lambda expression", file="CommandHandler.cs"];
m6_116 [label="Entry lambda expression", span="170-172", cluster="lambda expression", file="CommandHandler.cs"];
m6_119 [label="Entry lambda expression", span="173-173", cluster="lambda expression", file="CommandHandler.cs"];
m6_122 [label="Entry lambda expression", span="176-177", cluster="lambda expression", file="CommandHandler.cs"];
m6_126 [label="Entry lambda expression", span="178-178", cluster="lambda expression", file="CommandHandler.cs"];
m6_129 [label="Entry lambda expression", span="184-191", cluster="lambda expression", file="CommandHandler.cs"];
m6_118 [label="Exit lambda expression", span="170-172", cluster="lambda expression", file="CommandHandler.cs"];
m6_121 [label="Exit lambda expression", span="173-173", cluster="lambda expression", file="CommandHandler.cs"];
m6_124 [label="Exit lambda expression", span="176-177", cluster="lambda expression", file="CommandHandler.cs"];
m6_128 [label="Exit lambda expression", span="178-178", cluster="lambda expression", file="CommandHandler.cs"];
m6_131 [label="Exit lambda expression", span="184-191", cluster="lambda expression", file="CommandHandler.cs"];
m6_141 [label="Entry lambda expression", span="209-219", cluster="lambda expression", file="CommandHandler.cs"];
m6_142 [label="new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="209-219", cluster="lambda expression", file="CommandHandler.cs"];
m6_143 [label="Exit lambda expression", span="209-219", cluster="lambda expression", file="CommandHandler.cs"];
m6_151 [label="Entry lambda expression", span="237-244", cluster="lambda expression", file="CommandHandler.cs"];
m6_152 [label="new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="237-244", cluster="lambda expression", file="CommandHandler.cs"];
m6_153 [label="Exit lambda expression", span="237-244", cluster="lambda expression", file="CommandHandler.cs"];
m6_177 [label="x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="264-265", cluster="lambda expression", file="CommandHandler.cs"];
m6_183 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="269-269", cluster="lambda expression", file="CommandHandler.cs"];
m6_189 [label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="273-273", cluster="lambda expression", file="CommandHandler.cs"];
m6_176 [label="Entry lambda expression", span="264-265", cluster="lambda expression", file="CommandHandler.cs"];
m6_179 [label="Entry lambda expression", span="266-266", cluster="lambda expression", file="CommandHandler.cs"];
m6_182 [label="Entry lambda expression", span="269-269", cluster="lambda expression", file="CommandHandler.cs"];
m6_185 [label="Entry lambda expression", span="270-270", cluster="lambda expression", file="CommandHandler.cs"];
m6_188 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="CommandHandler.cs"];
m6_191 [label="Entry lambda expression", span="274-274", cluster="lambda expression", file="CommandHandler.cs"];
m6_194 [label="Entry lambda expression", span="284-290", cluster="lambda expression", file="CommandHandler.cs"];
m6_178 [label="Exit lambda expression", span="264-265", cluster="lambda expression", file="CommandHandler.cs"];
m6_180 [label="firstJobIds = x", span="266-266", cluster="lambda expression", file="CommandHandler.cs"];
m6_181 [label="Exit lambda expression", span="266-266", cluster="lambda expression", file="CommandHandler.cs"];
m6_184 [label="Exit lambda expression", span="269-269", cluster="lambda expression", file="CommandHandler.cs"];
m6_186 [label="length = x", span="270-270", cluster="lambda expression", file="CommandHandler.cs"];
m6_187 [label="Exit lambda expression", span="270-270", cluster="lambda expression", file="CommandHandler.cs"];
m6_190 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="CommandHandler.cs"];
m6_192 [label="dequeued = x", span="274-274", cluster="lambda expression", file="CommandHandler.cs"];
m6_193 [label="Exit lambda expression", span="274-274", cluster="lambda expression", file="CommandHandler.cs"];
m6_195 [label="new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        }", span="284-290", cluster="lambda expression", file="CommandHandler.cs"];
m6_196 [label="Exit lambda expression", span="284-290", cluster="lambda expression", file="CommandHandler.cs"];
m6_203 [label="Entry lambda expression", span="320-326", cluster="lambda expression", file="CommandHandler.cs"];
m6_204 [label="new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="320-326", cluster="lambda expression", file="CommandHandler.cs"];
m6_205 [label="Exit lambda expression", span="320-326", cluster="lambda expression", file="CommandHandler.cs"];
m6_211 [label="Entry lambda expression", span="344-352", cluster="lambda expression", file="CommandHandler.cs"];
m6_212 [label="new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    }", span="344-352", cluster="lambda expression", file="CommandHandler.cs"];
m6_213 [label="Exit lambda expression", span="344-352", cluster="lambda expression", file="CommandHandler.cs"];
m6_265 [label="!hiddenProperties.Contains(x.Key)", span="433-433", cluster="lambda expression", file="CommandHandler.cs"];
m6_264 [label="Entry lambda expression", span="433-433", cluster="lambda expression", file="CommandHandler.cs"];
m6_268 [label="Entry lambda expression", span="433-433", cluster="lambda expression", file="CommandHandler.cs"];
m6_271 [label="Entry lambda expression", span="433-433", cluster="lambda expression", file="CommandHandler.cs"];
m6_266 [label="Exit lambda expression", span="433-433", cluster="lambda expression", file="CommandHandler.cs"];
m6_269 [label="x.Key", span="433-433", cluster="lambda expression", file="CommandHandler.cs"];
m6_270 [label="Exit lambda expression", span="433-433", cluster="lambda expression", file="CommandHandler.cs"];
m6_272 [label="x.Value", span="433-433", cluster="lambda expression", file="CommandHandler.cs"];
m6_273 [label="Exit lambda expression", span="433-433", cluster="lambda expression", file="CommandHandler.cs"];
m6_299 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="450-450", cluster="lambda expression", file="CommandHandler.cs"];
m6_298 [label="Entry lambda expression", span="450-450", cluster="lambda expression", file="CommandHandler.cs"];
m6_300 [label="Exit lambda expression", span="450-450", cluster="lambda expression", file="CommandHandler.cs"];
m6_327 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="482-482", cluster="lambda expression", file="CommandHandler.cs"];
m6_323 [label="Entry lambda expression", span="481-481", cluster="lambda expression", file="CommandHandler.cs"];
m6_326 [label="Entry lambda expression", span="482-482", cluster="lambda expression", file="CommandHandler.cs"];
m6_324 [label="x.ToString(''yyyy-MM-dd'')", span="481-481", cluster="lambda expression", file="CommandHandler.cs"];
m6_325 [label="Exit lambda expression", span="481-481", cluster="lambda expression", file="CommandHandler.cs"];
m6_328 [label="Exit lambda expression", span="482-482", cluster="lambda expression", file="CommandHandler.cs"];
m6_344 [label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties)", span="519-519", cluster="lambda expression", file="CommandHandler.cs"];
m6_352 [label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="525-525", cluster="lambda expression", file="CommandHandler.cs"];
m6_362 [label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State))", span="540-542", cluster="lambda expression", file="CommandHandler.cs"];
m6_347 [label="!jobs.ContainsKey(id)", span="520-520", cluster="lambda expression", file="CommandHandler.cs"];
m6_348 [label="jobs.Add(id, x)", span="520-520", cluster="lambda expression", file="CommandHandler.cs"];
m6_359 [label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="534-539", cluster="lambda expression", file="CommandHandler.cs"];
m6_355 [label="!states.ContainsKey(id)", span="526-526", cluster="lambda expression", file="CommandHandler.cs"];
m6_356 [label="states.Add(id, x)", span="526-526", cluster="lambda expression", file="CommandHandler.cs"];
m6_343 [label="Entry lambda expression", span="519-519", cluster="lambda expression", file="CommandHandler.cs"];
m6_346 [label="Entry lambda expression", span="520-520", cluster="lambda expression", file="CommandHandler.cs"];
m6_351 [label="Entry lambda expression", span="525-525", cluster="lambda expression", file="CommandHandler.cs"];
m6_354 [label="Entry lambda expression", span="526-526", cluster="lambda expression", file="CommandHandler.cs"];
m6_358 [label="Entry lambda expression", span="534-539", cluster="lambda expression", file="CommandHandler.cs"];
m6_361 [label="Entry lambda expression", span="540-542", cluster="lambda expression", file="CommandHandler.cs"];
m6_345 [label="Exit lambda expression", span="519-519", cluster="lambda expression", file="CommandHandler.cs"];
m6_349 [label="Exit lambda expression", span="520-520", cluster="lambda expression", file="CommandHandler.cs"];
m6_353 [label="Exit lambda expression", span="525-525", cluster="lambda expression", file="CommandHandler.cs"];
m6_357 [label="Exit lambda expression", span="526-526", cluster="lambda expression", file="CommandHandler.cs"];
m6_360 [label="Exit lambda expression", span="534-539", cluster="lambda expression", file="CommandHandler.cs"];
m6_363 [label="Exit lambda expression", span="540-542", cluster="lambda expression", file="CommandHandler.cs"];
m6_367 [label="Entry lambda expression", span="542-542", cluster="lambda expression", file="CommandHandler.cs"];
m6_368 [label="y == null", span="542-542", cluster="lambda expression", file="CommandHandler.cs"];
m6_369 [label="Exit lambda expression", span="542-542", cluster="lambda expression", file="CommandHandler.cs"];
m6_397 [label="stats.Servers = x", span="566-566", cluster="lambda expression", file="CommandHandler.cs"];
m6_403 [label="stats.Queues = x", span="570-570", cluster="lambda expression", file="CommandHandler.cs"];
m6_409 [label="stats.Scheduled = x", span="574-574", cluster="lambda expression", file="CommandHandler.cs"];
m6_415 [label="stats.Processing = x", span="578-578", cluster="lambda expression", file="CommandHandler.cs"];
m6_422 [label="stats.Succeeded = long.Parse(x ?? ''0'')", span="582-582", cluster="lambda expression", file="CommandHandler.cs"];
m6_429 [label="stats.Failed = x", span="586-586", cluster="lambda expression", file="CommandHandler.cs"];
m6_435 [label="stats.Enqueued += x", span="593-593", cluster="lambda expression", file="CommandHandler.cs"];
m6_392 [label="Entry lambda expression", span="565-565", cluster="lambda expression", file="CommandHandler.cs"];
m6_396 [label="Entry lambda expression", span="566-566", cluster="lambda expression", file="CommandHandler.cs"];
m6_399 [label="Entry lambda expression", span="569-569", cluster="lambda expression", file="CommandHandler.cs"];
m6_402 [label="Entry lambda expression", span="570-570", cluster="lambda expression", file="CommandHandler.cs"];
m6_405 [label="Entry lambda expression", span="573-573", cluster="lambda expression", file="CommandHandler.cs"];
m6_408 [label="Entry lambda expression", span="574-574", cluster="lambda expression", file="CommandHandler.cs"];
m6_411 [label="Entry lambda expression", span="577-577", cluster="lambda expression", file="CommandHandler.cs"];
m6_414 [label="Entry lambda expression", span="578-578", cluster="lambda expression", file="CommandHandler.cs"];
m6_417 [label="Entry lambda expression", span="581-581", cluster="lambda expression", file="CommandHandler.cs"];
m6_421 [label="Entry lambda expression", span="582-582", cluster="lambda expression", file="CommandHandler.cs"];
m6_425 [label="Entry lambda expression", span="585-585", cluster="lambda expression", file="CommandHandler.cs"];
m6_428 [label="Entry lambda expression", span="586-586", cluster="lambda expression", file="CommandHandler.cs"];
m6_432 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="592-592", cluster="lambda expression", file="CommandHandler.cs"];
m6_431 [label="Entry lambda expression", span="592-592", cluster="lambda expression", file="CommandHandler.cs"];
m6_393 [label="x.GetSetCount(''hangfire:servers'')", span="565-565", cluster="lambda expression", file="CommandHandler.cs"];
m6_394 [label="Exit lambda expression", span="565-565", cluster="lambda expression", file="CommandHandler.cs"];
m6_398 [label="Exit lambda expression", span="566-566", cluster="lambda expression", file="CommandHandler.cs"];
m6_400 [label="x.GetSetCount(''hangfire:queues'')", span="569-569", cluster="lambda expression", file="CommandHandler.cs"];
m6_401 [label="Exit lambda expression", span="569-569", cluster="lambda expression", file="CommandHandler.cs"];
m6_404 [label="Exit lambda expression", span="570-570", cluster="lambda expression", file="CommandHandler.cs"];
m6_406 [label="x.GetSortedSetCount(''hangfire:schedule'')", span="573-573", cluster="lambda expression", file="CommandHandler.cs"];
m6_407 [label="Exit lambda expression", span="573-573", cluster="lambda expression", file="CommandHandler.cs"];
m6_410 [label="Exit lambda expression", span="574-574", cluster="lambda expression", file="CommandHandler.cs"];
m6_412 [label="x.GetSortedSetCount(''hangfire:processing'')", span="577-577", cluster="lambda expression", file="CommandHandler.cs"];
m6_413 [label="Exit lambda expression", span="577-577", cluster="lambda expression", file="CommandHandler.cs"];
m6_416 [label="Exit lambda expression", span="578-578", cluster="lambda expression", file="CommandHandler.cs"];
m6_418 [label="x.GetValue(''hangfire:stats:succeeded'')", span="581-581", cluster="lambda expression", file="CommandHandler.cs"];
m6_419 [label="Exit lambda expression", span="581-581", cluster="lambda expression", file="CommandHandler.cs"];
m6_423 [label="Exit lambda expression", span="582-582", cluster="lambda expression", file="CommandHandler.cs"];
m6_426 [label="x.GetSortedSetCount(''hangfire:failed'')", span="585-585", cluster="lambda expression", file="CommandHandler.cs"];
m6_427 [label="Exit lambda expression", span="585-585", cluster="lambda expression", file="CommandHandler.cs"];
m6_430 [label="Exit lambda expression", span="586-586", cluster="lambda expression", file="CommandHandler.cs"];
m6_433 [label="Exit lambda expression", span="592-592", cluster="lambda expression", file="CommandHandler.cs"];
m6_436 [label="Exit lambda expression", span="593-593", cluster="lambda expression", file="CommandHandler.cs"];
m6_28 [label="Entry Unk.GetRangeFromSortedSet", span="", cluster="Unk.GetRangeFromSortedSet", file="CommandHandler.cs"];
m6_175 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="CommandHandler.cs"];
m6_115 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="CommandHandler.cs"];
m6_67 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="CommandHandler.cs"];
m6_220 [label="Entry HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="CommandHandler.cs"];
m6_221 [label=Redis, span="366-366", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="CommandHandler.cs"];
m6_222 [label="return GetHourlyTimelineStats(Redis, ''failed'');", span="368-368", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="CommandHandler.cs"];
m6_223 [label="Exit HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="CommandHandler.cs"];
m6_35 [label="Entry HangFire.Web.ProcessingJobDto.ProcessingJobDto()", span="5-5", cluster="HangFire.Web.ProcessingJobDto.ProcessingJobDto()", file="CommandHandler.cs"];
m6_61 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="CommandHandler.cs"];
m6_135 [label="Entry HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="CommandHandler.cs"];
m6_136 [label=Redis, span="197-197", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="CommandHandler.cs"];
m6_137 [label="var failedJobIds = Redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1)", span="199-202", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="CommandHandler.cs"];
m6_138 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    failedJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'' },\r\n                    (job, state) => new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="204-219", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="CommandHandler.cs"];
m6_139 [label="Exit HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="CommandHandler.cs"];
m6_0 [label="Entry HangFire.Web.JobStorage.ScheduledCount()", span="12-12", cluster="HangFire.Web.JobStorage.ScheduledCount()", file="CommandHandler.cs"];
m6_1 [label=Redis, span="14-14", cluster="HangFire.Web.JobStorage.ScheduledCount()", color=red, community=0, file="CommandHandler.cs"];
m6_2 [label="return Redis.GetSortedSetCount(''hangfire:schedule'');", span="16-16", cluster="HangFire.Web.JobStorage.ScheduledCount()", color=red, community=0, file="CommandHandler.cs"];
m6_3 [label="Exit HangFire.Web.JobStorage.ScheduledCount()", span="12-12", cluster="HangFire.Web.JobStorage.ScheduledCount()", file="CommandHandler.cs"];
m6_37 [label="Entry HangFire.JobHelper.TryToGetQueue(string)", span="11-11", cluster="HangFire.JobHelper.TryToGetQueue(string)", file="CommandHandler.cs"];
m6_144 [label="Entry HangFire.Web.FailedJobDto.FailedJobDto()", span="5-5", cluster="HangFire.Web.FailedJobDto.FailedJobDto()", file="CommandHandler.cs"];
m6_87 [label="Entry HangFire.JobHelper.FromTimestamp(long)", span="57-57", cluster="HangFire.JobHelper.FromTimestamp(long)", file="CommandHandler.cs"];
m6_301 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="CommandHandler.cs"];
m6_145 [label="Entry HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="CommandHandler.cs"];
m6_146 [label=Redis, span="225-225", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="CommandHandler.cs"];
m6_147 [label="var succeededJobIds = Redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1)", span="227-230", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="CommandHandler.cs"];
m6_148 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    succeededJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''SucceededAt'', ''State'' },\r\n                    (job, state) => new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="232-244", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="CommandHandler.cs"];
m6_149 [label="Exit HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="CommandHandler.cs"];
m6_172 [label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span="", cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="CommandHandler.cs"];
m6_295 [label="Entry Unk.ElementAt", span="", cluster="Unk.ElementAt", file="CommandHandler.cs"];
m6_150 [label="Entry Unk.GetRangeFromList", span="", cluster="Unk.GetRangeFromList", file="CommandHandler.cs"];
m6_155 [label="Entry HangFire.Web.JobStorage.Queues()", span="248-248", cluster="HangFire.Web.JobStorage.Queues()", file="CommandHandler.cs"];
m6_156 [label=Redis, span="250-250", cluster="HangFire.Web.JobStorage.Queues()", file="CommandHandler.cs"];
m6_157 [label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="252-252", cluster="HangFire.Web.JobStorage.Queues()", file="CommandHandler.cs"];
m6_158 [label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="253-253", cluster="HangFire.Web.JobStorage.Queues()", file="CommandHandler.cs"];
m6_159 [label=queues, span="255-255", cluster="HangFire.Web.JobStorage.Queues()", file="CommandHandler.cs"];
m6_169 [label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Dequeued = dequeued\r\n                    })", span="292-298", cluster="HangFire.Web.JobStorage.Queues()", file="CommandHandler.cs"];
m6_170 [label="return result;", span="301-301", cluster="HangFire.Web.JobStorage.Queues()", file="CommandHandler.cs"];
m6_160 [label="IList<string> firstJobIds = null", span="257-257", cluster="HangFire.Web.JobStorage.Queues()", file="CommandHandler.cs"];
m6_164 [label="pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x)", span="263-266", cluster="HangFire.Web.JobStorage.Queues()", file="CommandHandler.cs"];
m6_165 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x)", span="268-270", cluster="HangFire.Web.JobStorage.Queues()", file="CommandHandler.cs"];
m6_166 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => dequeued = x)", span="272-274", cluster="HangFire.Web.JobStorage.Queues()", file="CommandHandler.cs"];
m6_161 [label="long length = 0", span="258-258", cluster="HangFire.Web.JobStorage.Queues()", file="CommandHandler.cs"];
m6_162 [label="long dequeued = 0", span="259-259", cluster="HangFire.Web.JobStorage.Queues()", file="CommandHandler.cs"];
m6_163 [label="var pipeline = Redis.CreatePipeline()", span="261-261", cluster="HangFire.Web.JobStorage.Queues()", file="CommandHandler.cs"];
m6_167 [label="pipeline.Flush()", span="276-276", cluster="HangFire.Web.JobStorage.Queues()", file="CommandHandler.cs"];
m6_168 [label="var jobs = GetJobsWithProperties(\r\n                        Redis,\r\n                        firstJobIds,\r\n                        new[] { ''Type'', ''Args'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, state) => new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="279-290", cluster="HangFire.Web.JobStorage.Queues()", file="CommandHandler.cs"];
m6_171 [label="Exit HangFire.Web.JobStorage.Queues()", span="248-248", cluster="HangFire.Web.JobStorage.Queues()", file="CommandHandler.cs"];
m6_88 [label="Entry HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="CommandHandler.cs"];
m6_89 [label=Redis, span="135-135", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="CommandHandler.cs"];
m6_90 [label="return GetTimelineStats(Redis, ''succeeded'');", span="137-137", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="CommandHandler.cs"];
m6_91 [label="Exit HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="CommandHandler.cs"];
m6_62 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="CommandHandler.cs"];
m6_154 [label="Entry HangFire.Web.SucceededJobDto.SucceededJobDto()", span="5-5", cluster="HangFire.Web.SucceededJobDto.SucceededJobDto()", file="CommandHandler.cs"];
m6_424 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="CommandHandler.cs"];
m6_72 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="CommandHandler.cs"];
m6_97 [label="Entry HangFire.Web.JobStorage.Servers()", span="149-149", cluster="HangFire.Web.JobStorage.Servers()", file="CommandHandler.cs"];
m6_98 [label=Redis, span="151-151", cluster="HangFire.Web.JobStorage.Servers()", file="CommandHandler.cs"];
m6_99 [label="var serverNames = Redis.GetAllItemsFromSet(''hangfire:servers'')", span="153-153", cluster="HangFire.Web.JobStorage.Servers()", file="CommandHandler.cs"];
m6_100 [label="serverNames.Count == 0", span="155-155", cluster="HangFire.Web.JobStorage.Servers()", file="CommandHandler.cs"];
m6_105 [label=serverNames, span="165-165", cluster="HangFire.Web.JobStorage.Servers()", file="CommandHandler.cs"];
m6_110 [label="return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }).ToList();", span="184-191", cluster="HangFire.Web.JobStorage.Servers()", file="CommandHandler.cs"];
m6_101 [label="return new List<ServerDto>();", span="157-157", cluster="HangFire.Web.JobStorage.Servers()", file="CommandHandler.cs"];
m6_102 [label="var servers = new Dictionary<string, List<string>>()", span="160-160", cluster="HangFire.Web.JobStorage.Servers()", file="CommandHandler.cs"];
m6_103 [label="var queues = new Dictionary<string, List<string>>()", span="161-161", cluster="HangFire.Web.JobStorage.Servers()", file="CommandHandler.cs"];
m6_107 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x))", span="169-173", cluster="HangFire.Web.JobStorage.Servers()", file="CommandHandler.cs"];
m6_104 [label="var pipeline = Redis.CreatePipeline()", span="163-163", cluster="HangFire.Web.JobStorage.Servers()", file="CommandHandler.cs"];
m6_108 [label="pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x))", span="175-178", cluster="HangFire.Web.JobStorage.Servers()", file="CommandHandler.cs"];
m6_109 [label="pipeline.Flush()", span="181-181", cluster="HangFire.Web.JobStorage.Servers()", file="CommandHandler.cs"];
m6_106 [label="var name = serverName", span="167-167", cluster="HangFire.Web.JobStorage.Servers()", file="CommandHandler.cs"];
m6_111 [label="Exit HangFire.Web.JobStorage.Servers()", span="149-149", cluster="HangFire.Web.JobStorage.Servers()", file="CommandHandler.cs"];
m6_374 [label="Entry HangFire.Web.JobStorage.GetStatistics()", span="554-554", cluster="HangFire.Web.JobStorage.GetStatistics()", file="CommandHandler.cs"];
m6_375 [label=Redis, span="556-556", cluster="HangFire.Web.JobStorage.GetStatistics()", file="CommandHandler.cs"];
m6_376 [label="var stats = new StatisticsDto()", span="558-558", cluster="HangFire.Web.JobStorage.GetStatistics()", file="CommandHandler.cs"];
m6_377 [label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="560-560", cluster="HangFire.Web.JobStorage.GetStatistics()", file="CommandHandler.cs"];
m6_379 [label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x)", span="564-566", cluster="HangFire.Web.JobStorage.GetStatistics()", file="CommandHandler.cs"];
m6_380 [label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x)", span="568-570", cluster="HangFire.Web.JobStorage.GetStatistics()", file="CommandHandler.cs"];
m6_381 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x)", span="572-574", cluster="HangFire.Web.JobStorage.GetStatistics()", file="CommandHandler.cs"];
m6_382 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x)", span="576-578", cluster="HangFire.Web.JobStorage.GetStatistics()", file="CommandHandler.cs"];
m6_383 [label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''))", span="580-582", cluster="HangFire.Web.JobStorage.GetStatistics()", file="CommandHandler.cs"];
m6_384 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x)", span="584-586", cluster="HangFire.Web.JobStorage.GetStatistics()", file="CommandHandler.cs"];
m6_387 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", span="591-593", cluster="HangFire.Web.JobStorage.GetStatistics()", file="CommandHandler.cs"];
m6_389 [label="return stats;", span="599-599", cluster="HangFire.Web.JobStorage.GetStatistics()", file="CommandHandler.cs"];
m6_378 [label="var pipeline = Redis.CreatePipeline()", span="562-562", cluster="HangFire.Web.JobStorage.GetStatistics()", file="CommandHandler.cs"];
m6_385 [label=queues, span="588-588", cluster="HangFire.Web.JobStorage.GetStatistics()", file="CommandHandler.cs"];
m6_388 [label="pipeline.Flush()", span="596-596", cluster="HangFire.Web.JobStorage.GetStatistics()", file="CommandHandler.cs"];
m6_386 [label="var queueName = queue", span="590-590", cluster="HangFire.Web.JobStorage.GetStatistics()", file="CommandHandler.cs"];
m6_390 [label="Exit HangFire.Web.JobStorage.GetStatistics()", span="554-554", cluster="HangFire.Web.JobStorage.GetStatistics()", file="CommandHandler.cs"];
m6_370 [label="Entry HangFire.Web.JobStorage.SucceededListCount()", span="546-546", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="CommandHandler.cs"];
m6_371 [label=Redis, span="548-548", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="CommandHandler.cs"];
m6_372 [label="return Redis.GetListCount(''hangfire:succeeded'');", span="550-550", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="CommandHandler.cs"];
m6_373 [label="Exit HangFire.Web.JobStorage.SucceededListCount()", span="546-546", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="CommandHandler.cs"];
m6_215 [label="Entry HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="CommandHandler.cs"];
m6_216 [label=Redis, span="358-358", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="CommandHandler.cs"];
m6_217 [label="return GetHourlyTimelineStats(Redis, ''succeeded'');", span="360-360", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="CommandHandler.cs"];
m6_218 [label="Exit HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="CommandHandler.cs"];
m6_39 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="CommandHandler.cs"];
m6_293 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="CommandHandler.cs"];
m6_92 [label="Entry HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="468-468", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_303 [label="var endDate = DateTime.UtcNow.Date", span="471-471", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_310 [label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="482-482", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_311 [label="var valuesMap = redis.GetValuesMap(keys)", span="484-484", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_304 [label="var startDate = endDate.AddDays(-7)", span="472-472", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_306 [label="startDate <= endDate", span="475-475", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_307 [label="dates.Add(endDate)", span="477-477", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_308 [label="endDate = endDate.AddDays(-1)", span="478-478", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_305 [label="var dates = new List<DateTime>()", span="473-473", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_309 [label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="481-481", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_318 [label="result.Add(dates[i], value)", span="494-494", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_314 [label="i < stringDates.Count", span="487-487", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_312 [label="var result = new Dictionary<DateTime, long>()", span="486-486", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_316 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="490-490", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_313 [label="var i = 0", span="487-487", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_320 [label="return result;", span="497-497", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_319 [label="i++", span="487-487", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_315 [label="long value", span="489-489", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_317 [label="value = 0", span="492-492", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_321 [label="Exit HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="468-468", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="CommandHandler.cs"];
m6_4 [label="Entry Unk.GetSortedSetCount", span="", cluster="Unk.GetSortedSetCount", file="CommandHandler.cs"];
m6_15 [label="Entry HangFire.Web.JobStorage.FailedCount()", span="36-36", cluster="HangFire.Web.JobStorage.FailedCount()", file="CommandHandler.cs"];
m6_16 [label=Redis, span="38-38", cluster="HangFire.Web.JobStorage.FailedCount()", color=red, community=0, file="CommandHandler.cs"];
m6_17 [label="return Redis.GetSortedSetCount(''hangfire:failed'');", span="40-40", cluster="HangFire.Web.JobStorage.FailedCount()", color=red, community=0, file="CommandHandler.cs"];
m6_18 [label="Exit HangFire.Web.JobStorage.FailedCount()", span="36-36", cluster="HangFire.Web.JobStorage.FailedCount()", file="CommandHandler.cs"];
m6_260 [label="Entry HangFire.Web.JobDetailsDto.JobDetailsDto()", span="4-4", cluster="HangFire.Web.JobDetailsDto.JobDetailsDto()", file="CommandHandler.cs"];
m6_249 [label="Entry HangFire.Web.JobStorage.JobDetails(string)", span="412-412", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="CommandHandler.cs"];
m6_250 [label=Redis, span="414-414", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="CommandHandler.cs"];
m6_251 [label="var job = Redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="416-416", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="CommandHandler.cs"];
m6_255 [label="var historyList = Redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="421-422", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="CommandHandler.cs"];
m6_252 [label="job.Count == 0", span="417-417", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="CommandHandler.cs"];
m6_257 [label="return new JobDetailsDto\r\n                {\r\n                    Type = job[''Type''],\r\n                    Arguments = JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']),\r\n                    State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                    Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = history\r\n                };", span="428-435", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="CommandHandler.cs"];
m6_253 [label="return null;", span="417-417", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="CommandHandler.cs"];
m6_254 [label="var hiddenProperties = new[] { ''Type'', ''Args'', ''State'' }", span="419-419", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="CommandHandler.cs"];
m6_256 [label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", span="424-426", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="CommandHandler.cs"];
m6_258 [label="Exit HangFire.Web.JobStorage.JobDetails(string)", span="412-412", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="CommandHandler.cs"];
m6_297 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="CommandHandler.cs"];
m6_5 [label="Entry HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="CommandHandler.cs"];
m6_6 [label=Redis, span="22-22", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", color=red, community=0, file="CommandHandler.cs"];
m6_7 [label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue));", span="24-24", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", color=red, community=0, file="CommandHandler.cs"];
m6_8 [label="Exit HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="CommandHandler.cs"];
m6_302 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="CommandHandler.cs"];
m6_259 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="CommandHandler.cs"];
m6_63 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="CommandHandler.cs"];
m6_342 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="CommandHandler.cs"];
m6_395 [label="Entry Unk.GetSetCount", span="", cluster="Unk.GetSetCount", file="CommandHandler.cs"];
m6_206 [label="Entry HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="CommandHandler.cs"];
m6_207 [label=Redis, span="333-333", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="CommandHandler.cs"];
m6_208 [label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1)", span="335-337", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="CommandHandler.cs"];
m6_209 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'', ''State'', ''CreatedAt'', ''Fetched'', ''Checked'' },\r\n                    null,\r\n                    (job, state) => new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    });", span="339-352", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="CommandHandler.cs"];
m6_210 [label="Exit HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="CommandHandler.cs"];
m6_9 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="CommandHandler.cs"];
m6_93 [label="Entry HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="CommandHandler.cs"];
m6_94 [label=Redis, span="143-143", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="CommandHandler.cs"];
m6_95 [label="return GetTimelineStats(Redis, ''failed'');", span="145-145", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="CommandHandler.cs"];
m6_96 [label="Exit HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="CommandHandler.cs"];
m6_261 [label="Entry Unk.>", span="", cluster="Unk.>", file="CommandHandler.cs"];
m6_10 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="CommandHandler.cs"];
m6_86 [label="Entry HangFire.Web.ScheduleDto.ScheduleDto()", span="5-5", cluster="HangFire.Web.ScheduleDto.ScheduleDto()", file="CommandHandler.cs"];
m6_59 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="CommandHandler.cs"];
m6_235 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="CommandHandler.cs"];
m6_294 [label="Entry Unk.GetValuesMap", span="", cluster="Unk.GetValuesMap", file="CommandHandler.cs"];
m6_19 [label="Entry HangFire.Web.JobStorage.ProcessingCount()", span="44-44", cluster="HangFire.Web.JobStorage.ProcessingCount()", file="CommandHandler.cs"];
m6_20 [label=Redis, span="46-46", cluster="HangFire.Web.JobStorage.ProcessingCount()", color=red, community=0, file="CommandHandler.cs"];
m6_21 [label="return Redis.GetSortedSetCount(''hangfire:processing'');", span="48-48", cluster="HangFire.Web.JobStorage.ProcessingCount()", color=red, community=0, file="CommandHandler.cs"];
m6_22 [label="Exit HangFire.Web.JobStorage.ProcessingCount()", span="44-44", cluster="HangFire.Web.JobStorage.ProcessingCount()", file="CommandHandler.cs"];
m6_125 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="CommandHandler.cs"];
m6_267 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="CommandHandler.cs"];
m6_114 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="CommandHandler.cs"];
m6_112 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="CommandHandler.cs"];
m6_140 [label="Entry Unk.GetRangeFromSortedSetDesc", span="", cluster="Unk.GetRangeFromSortedSetDesc", file="CommandHandler.cs"];
m6_420 [label="Entry Unk.GetValue", span="", cluster="Unk.GetValue", file="CommandHandler.cs"];
m6_68 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="CommandHandler.cs"];
m6_224 [label="Entry HangFire.Web.JobStorage.RetryJob(string)", span="372-372", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="CommandHandler.cs"];
m6_225 [label=Redis, span="374-374", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="CommandHandler.cs"];
m6_226 [label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="376-376", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="CommandHandler.cs"];
m6_232 [label="return stateMachine.ChangeState(jobId, state, FailedState.Name);", span="389-389", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="CommandHandler.cs"];
m6_227 [label="var queue = JobHelper.TryToGetQueue(jobType)", span="378-378", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="CommandHandler.cs"];
m6_228 [label="String.IsNullOrEmpty(queue)", span="379-379", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="CommandHandler.cs"];
m6_231 [label="var state = new EnqueuedState(''The job has been retried by a user.'', queue)", span="387-387", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="CommandHandler.cs"];
m6_229 [label="return false;", span="381-381", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="CommandHandler.cs"];
m6_230 [label="var stateMachine = new StateMachine(Redis)", span="386-386", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="CommandHandler.cs"];
m6_233 [label="Exit HangFire.Web.JobStorage.RetryJob(string)", span="372-372", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="CommandHandler.cs"];
m6_198 [label="Entry HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="CommandHandler.cs"];
m6_199 [label=Redis, span="308-308", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="CommandHandler.cs"];
m6_200 [label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1)", span="310-313", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="CommandHandler.cs"];
m6_201 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, state) => new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="315-326", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="CommandHandler.cs"];
m6_202 [label="Exit HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="CommandHandler.cs"];
m6_437 [label=job, span="", file="CommandHandler.cs"];
m6_438 [label=jobs, span="", file="CommandHandler.cs"];
m6_439 [label=states, span="", file="CommandHandler.cs"];
m6_440 [label=name, span="", file="CommandHandler.cs"];
m6_441 [label=servers, span="", file="CommandHandler.cs"];
m6_442 [label=queues, span="", file="CommandHandler.cs"];
m6_443 [label=queue, span="", file="CommandHandler.cs"];
m6_444 [label=hiddenProperties, span="", file="CommandHandler.cs"];
m6_445 [label=string, span="", file="CommandHandler.cs"];
m6_446 [label=string, span="", file="CommandHandler.cs"];
m6_447 [label="string[]", span="", file="CommandHandler.cs"];
m6_448 [label=id, span="", file="CommandHandler.cs"];
m6_449 [label=jobs, span="", file="CommandHandler.cs"];
m6_450 [label="string[]", span="", file="CommandHandler.cs"];
m6_451 [label=states, span="", file="CommandHandler.cs"];
m6_452 [label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span="", file="CommandHandler.cs"];
m6_453 [label=stats, span="", file="CommandHandler.cs"];
m6_454 [label=queueName, span="", file="CommandHandler.cs"];
m7_7 [label="Entry Unk.GetClient", span="", cluster="Unk.GetClient", file="DashboardPage.generated.cs"];
m7_3 [label="Entry HangFire.Client.Client(IRedisClient)", span="9-9", cluster="HangFire.Client.Client(IRedisClient)", file="DashboardPage.generated.cs"];
m7_8 [label="Entry HangFire.Factory.CreateWorker(System.Type)", span="20-20", cluster="HangFire.Factory.CreateWorker(System.Type)", file="DashboardPage.generated.cs"];
m7_9 [label="return (Worker)Activator.CreateInstance(workerType);", span="22-22", cluster="HangFire.Factory.CreateWorker(System.Type)", color=red, community=0, file="DashboardPage.generated.cs"];
m7_10 [label="Exit HangFire.Factory.CreateWorker(System.Type)", span="20-20", cluster="HangFire.Factory.CreateWorker(System.Type)", file="DashboardPage.generated.cs"];
m7_4 [label="Entry HangFire.Factory.CreateRedisClient()", span="15-15", cluster="HangFire.Factory.CreateRedisClient()", file="DashboardPage.generated.cs"];
m7_5 [label="return ClientsManager.GetClient();", span="17-17", cluster="HangFire.Factory.CreateRedisClient()", color=red, community=0, file="DashboardPage.generated.cs"];
m7_6 [label="Exit HangFire.Factory.CreateRedisClient()", span="15-15", cluster="HangFire.Factory.CreateRedisClient()", file="DashboardPage.generated.cs"];
m7_11 [label="Entry System.Activator.CreateInstance(System.Type)", span="0-0", cluster="System.Activator.CreateInstance(System.Type)", file="DashboardPage.generated.cs"];
m7_0 [label="Entry HangFire.Factory.CreateClient()", span="7-7", cluster="HangFire.Factory.CreateClient()", file="DashboardPage.generated.cs"];
m7_1 [label="return new Client(CreateRedisClient());", span="9-9", cluster="HangFire.Factory.CreateClient()", color=red, community=0, file="DashboardPage.generated.cs"];
m7_2 [label="Exit HangFire.Factory.CreateClient()", span="7-7", cluster="HangFire.Factory.CreateClient()", file="DashboardPage.generated.cs"];
m8_7 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DashboardRouteCollection.cs"];
m8_10 [label="Entry HangFire.Dashboard.DashboardRouteCollection.FindDispatcher(string)", span="20-20", cluster="HangFire.Dashboard.DashboardRouteCollection.FindDispatcher(string)", file="DashboardRouteCollection.cs"];
m8_11 [label="path.Length == 0", span="22-22", cluster="HangFire.Dashboard.DashboardRouteCollection.FindDispatcher(string)", file="DashboardRouteCollection.cs"];
m8_19 [label="var match = Regex.Match(\r\n                    path,\r\n                    pattern,\r\n                    RegexOptions.CultureInvariant | RegexOptions.IgnoreCase | RegexOptions.Singleline)", span="33-36", cluster="HangFire.Dashboard.DashboardRouteCollection.FindDispatcher(string)", file="DashboardRouteCollection.cs"];
m8_12 [label="path = ''/''", span="22-22", cluster="HangFire.Dashboard.DashboardRouteCollection.FindDispatcher(string)", file="DashboardRouteCollection.cs"];
m8_13 [label=_dispatchers, span="24-24", cluster="HangFire.Dashboard.DashboardRouteCollection.FindDispatcher(string)", file="DashboardRouteCollection.cs"];
m8_14 [label="var pattern = dispatcher.Item1", span="26-26", cluster="HangFire.Dashboard.DashboardRouteCollection.FindDispatcher(string)", file="DashboardRouteCollection.cs"];
m8_22 [label="return null;", span="44-44", cluster="HangFire.Dashboard.DashboardRouteCollection.FindDispatcher(string)", file="DashboardRouteCollection.cs"];
m8_21 [label="return new Tuple<IRequestDispatcher, Match>(dispatcher.Item2, match);", span="40-40", cluster="HangFire.Dashboard.DashboardRouteCollection.FindDispatcher(string)", file="DashboardRouteCollection.cs"];
m8_15 [label="!pattern.StartsWith(''^'', StringComparison.OrdinalIgnoreCase)", span="28-28", cluster="HangFire.Dashboard.DashboardRouteCollection.FindDispatcher(string)", file="DashboardRouteCollection.cs"];
m8_16 [label="pattern = ''^'' + pattern", span="29-29", cluster="HangFire.Dashboard.DashboardRouteCollection.FindDispatcher(string)", file="DashboardRouteCollection.cs"];
m8_17 [label="!pattern.EndsWith(''$'', StringComparison.OrdinalIgnoreCase)", span="30-30", cluster="HangFire.Dashboard.DashboardRouteCollection.FindDispatcher(string)", file="DashboardRouteCollection.cs"];
m8_18 [label="pattern += ''$''", span="31-31", cluster="HangFire.Dashboard.DashboardRouteCollection.FindDispatcher(string)", file="DashboardRouteCollection.cs"];
m8_20 [label="match.Success", span="38-38", cluster="HangFire.Dashboard.DashboardRouteCollection.FindDispatcher(string)", file="DashboardRouteCollection.cs"];
m8_23 [label="Exit HangFire.Dashboard.DashboardRouteCollection.FindDispatcher(string)", span="20-20", cluster="HangFire.Dashboard.DashboardRouteCollection.FindDispatcher(string)", file="DashboardRouteCollection.cs"];
m8_8 [label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0", cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="DashboardRouteCollection.cs"];
m8_0 [label="Entry HangFire.Dashboard.DashboardRouteCollection.Add(string, HangFire.Dashboard.IRequestDispatcher)", span="12-12", cluster="HangFire.Dashboard.DashboardRouteCollection.Add(string, HangFire.Dashboard.IRequestDispatcher)", file="DashboardRouteCollection.cs"];
m8_1 [label="pathTemplate == null", span="14-14", cluster="HangFire.Dashboard.DashboardRouteCollection.Add(string, HangFire.Dashboard.IRequestDispatcher)", file="DashboardRouteCollection.cs"];
m8_3 [label="dispatcher == null", span="15-15", cluster="HangFire.Dashboard.DashboardRouteCollection.Add(string, HangFire.Dashboard.IRequestDispatcher)", file="DashboardRouteCollection.cs"];
m8_5 [label="_dispatchers.Add(new Tuple<string, IRequestDispatcher>(pathTemplate, dispatcher))", span="17-17", cluster="HangFire.Dashboard.DashboardRouteCollection.Add(string, HangFire.Dashboard.IRequestDispatcher)", file="DashboardRouteCollection.cs"];
m8_2 [label="throw new ArgumentNullException(''pathTemplate'');", span="14-14", cluster="HangFire.Dashboard.DashboardRouteCollection.Add(string, HangFire.Dashboard.IRequestDispatcher)", file="DashboardRouteCollection.cs"];
m8_4 [label="throw new ArgumentNullException(''dispatcher'');", span="15-15", cluster="HangFire.Dashboard.DashboardRouteCollection.Add(string, HangFire.Dashboard.IRequestDispatcher)", file="DashboardRouteCollection.cs"];
m8_6 [label="Exit HangFire.Dashboard.DashboardRouteCollection.Add(string, HangFire.Dashboard.IRequestDispatcher)", span="12-12", cluster="HangFire.Dashboard.DashboardRouteCollection.Add(string, HangFire.Dashboard.IRequestDispatcher)", file="DashboardRouteCollection.cs"];
m8_9 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="DashboardRouteCollection.cs"];
m8_25 [label="Entry string.EndsWith(string, System.StringComparison)", span="0-0", cluster="string.EndsWith(string, System.StringComparison)", file="DashboardRouteCollection.cs"];
m8_26 [label="Entry System.Text.RegularExpressions.Regex.Match(string, string, System.Text.RegularExpressions.RegexOptions)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Match(string, string, System.Text.RegularExpressions.RegexOptions)", file="DashboardRouteCollection.cs"];
m8_24 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="DashboardRouteCollection.cs"];
m8_27 [label="HangFire.Dashboard.DashboardRouteCollection", span="", file="DashboardRouteCollection.cs"];
m9_0 [label="Entry HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", span="23-23", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", file="DashboardRouteCollectionExtensions.cs"];
m9_2 [label="throw new ArgumentNullException(''jobId'');", span="25-25", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", color=green, community=0, file="DashboardRouteCollectionExtensions.cs"];
m9_1 [label="jobId == null", span="25-25", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", file="DashboardRouteCollectionExtensions.cs"];
m9_3 [label="queue == null", span="26-26", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", file="DashboardRouteCollectionExtensions.cs"];
m9_8 [label="Exit lambda expression", span="14-14", cluster="lambda expression", file="DashboardRouteCollectionExtensions.cs"];
m9_4 [label="throw new ArgumentNullException(''queue'');", span="26-26", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", file="DashboardRouteCollectionExtensions.cs"];
m9_17 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="29-29", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="DashboardRouteCollectionExtensions.cs"];
m9_19 [label="Assert.Equal(JobId, processingJob.JobId)", span="33-33", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="DashboardRouteCollectionExtensions.cs"];
m9_20 [label="Assert.Equal(Queue, processingJob.Queue)", span="34-34", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="DashboardRouteCollectionExtensions.cs"];
m9_18 [label="var processingJob = new SqlServerProcessingJob(JobId, Queue)", span="31-31", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="DashboardRouteCollectionExtensions.cs"];
m9_21 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="29-29", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="DashboardRouteCollectionExtensions.cs"];
m9_5 [label="JobId = jobId", span="28-28", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", file="DashboardRouteCollectionExtensions.cs"];
m9_9 [label="HangFire.SqlServer.SqlServerProcessingJob", span="", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", file="DashboardRouteCollectionExtensions.cs"];
m9_6 [label="Entry lambda expression", span="14-14", cluster="lambda expression", file="DashboardRouteCollectionExtensions.cs"];
m9_7 [label="new SqlServerProcessingJob(null, Queue)", span="14-14", cluster="lambda expression", file="DashboardRouteCollectionExtensions.cs"];
m9_14 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="DashboardRouteCollectionExtensions.cs"];
m9_15 [label="new SqlServerProcessingJob(JobId, null)", span="23-23", cluster="lambda expression", color=green, community=0, file="DashboardRouteCollectionExtensions.cs"];
m9_16 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="DashboardRouteCollectionExtensions.cs"];
m9_10 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="20-20", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="DashboardRouteCollectionExtensions.cs"];
m9_11 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerProcessingJob(JobId, null))", span="22-23", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", color=green, community=0, file="DashboardRouteCollectionExtensions.cs"];
m9_12 [label="Assert.Equal(''queue'', exception.ParamName)", span="25-25", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="DashboardRouteCollectionExtensions.cs"];
m9_13 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="20-20", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="DashboardRouteCollectionExtensions.cs"];
m10_0 [label="Entry HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="11-11", cluster="HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="DeletedJobsPage.generated.cs"];
m10_1 [label="Exit HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="11-11", cluster="HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="DeletedJobsPage.generated.cs"];
m10_2 [label="Entry HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="17-17", cluster="HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="DeletedJobsPage.generated.cs"];
m10_3 [label="Exit HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="17-17", cluster="HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="DeletedJobsPage.generated.cs"];
m11_9 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="EmbeddedResourceDispatcher.cs"];
m11_20 [label="Entry System.Threading.Tasks.TaskCompletionSource<TResult>.SetResult(TResult)", span="0-0", cluster="System.Threading.Tasks.TaskCompletionSource<TResult>.SetResult(TResult)", file="EmbeddedResourceDispatcher.cs"];
m11_19 [label="Entry System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource()", span="0-0", cluster="System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource()", file="EmbeddedResourceDispatcher.cs"];
m11_18 [label="Entry Unk.WriteResponse", span="", cluster="Unk.WriteResponse", file="EmbeddedResourceDispatcher.cs"];
m11_0 [label="Entry HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", span="15-15", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="EmbeddedResourceDispatcher.cs"];
m11_1 [label="contentType == null", span="20-20", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", color=green, community=0, file="EmbeddedResourceDispatcher.cs"];
m11_2 [label="throw new ArgumentNullException(''contentType'');", span="20-20", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", color=green, community=0, file="EmbeddedResourceDispatcher.cs"];
m11_3 [label="assembly == null", span="21-21", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", color=green, community=0, file="EmbeddedResourceDispatcher.cs"];
m11_4 [label="throw new ArgumentNullException(''assembly'');", span="21-21", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", color=green, community=0, file="EmbeddedResourceDispatcher.cs"];
m11_5 [label="_assembly = assembly", span="23-23", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", color=green, community=0, file="EmbeddedResourceDispatcher.cs"];
m11_6 [label="_resourceName = resourceName", span="24-24", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", color=green, community=0, file="EmbeddedResourceDispatcher.cs"];
m11_7 [label="_contentType = contentType", span="25-25", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", color=green, community=0, file="EmbeddedResourceDispatcher.cs"];
m11_8 [label="Exit HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", span="15-15", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="EmbeddedResourceDispatcher.cs"];
m11_21 [label="Entry HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", span="41-41", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", file="EmbeddedResourceDispatcher.cs"];
m11_22 [label="WriteResource(response, _assembly, _resourceName)", span="43-43", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", color=green, community=0, file="EmbeddedResourceDispatcher.cs"];
m11_23 [label="Exit HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", span="41-41", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", file="EmbeddedResourceDispatcher.cs"];
m11_35 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="EmbeddedResourceDispatcher.cs"];
m11_10 [label="Entry HangFire.Dashboard.EmbeddedResourceDispatcher.Dispatch(IOwinContext, System.Text.RegularExpressions.Match)", span="28-28", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.Dispatch(IOwinContext, System.Text.RegularExpressions.Match)", file="EmbeddedResourceDispatcher.cs"];
m11_11 [label="context.Response.ContentType = _contentType", span="30-30", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.Dispatch(IOwinContext, System.Text.RegularExpressions.Match)", color=green, community=0, file="EmbeddedResourceDispatcher.cs"];
m11_12 [label="context.Response.Expires = DateTime.MaxValue", span="31-31", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.Dispatch(IOwinContext, System.Text.RegularExpressions.Match)", color=green, community=0, file="EmbeddedResourceDispatcher.cs"];
m11_13 [label="WriteResponse(context.Response)", span="33-33", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.Dispatch(IOwinContext, System.Text.RegularExpressions.Match)", color=green, community=0, file="EmbeddedResourceDispatcher.cs"];
m11_14 [label="var taskSource = new TaskCompletionSource<bool>()", span="36-36", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.Dispatch(IOwinContext, System.Text.RegularExpressions.Match)", color=green, community=0, file="EmbeddedResourceDispatcher.cs"];
m11_15 [label="taskSource.SetResult(true)", span="37-37", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.Dispatch(IOwinContext, System.Text.RegularExpressions.Match)", color=green, community=0, file="EmbeddedResourceDispatcher.cs"];
m11_16 [label="return taskSource.Task;", span="38-38", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.Dispatch(IOwinContext, System.Text.RegularExpressions.Match)", color=green, community=0, file="EmbeddedResourceDispatcher.cs"];
m11_17 [label="Exit HangFire.Dashboard.EmbeddedResourceDispatcher.Dispatch(IOwinContext, System.Text.RegularExpressions.Match)", span="28-28", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.Dispatch(IOwinContext, System.Text.RegularExpressions.Match)", file="EmbeddedResourceDispatcher.cs"];
m11_36 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="EmbeddedResourceDispatcher.cs"];
m11_37 [label="Entry System.Math.Min(long, long)", span="0-0", cluster="System.Math.Min(long, long)", file="EmbeddedResourceDispatcher.cs"];
m11_38 [label="Entry System.IO.Stream.Read(byte[], int, int)", span="0-0", cluster="System.IO.Stream.Read(byte[], int, int)", file="EmbeddedResourceDispatcher.cs"];
m11_24 [label="Entry HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", span="46-46", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="EmbeddedResourceDispatcher.cs"];
m11_25 [label="var inputStream = assembly.GetManifestResourceStream(resourceName)", span="48-48", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", color=green, community=0, file="EmbeddedResourceDispatcher.cs"];
m11_26 [label="inputStream == null", span="50-50", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", color=green, community=0, file="EmbeddedResourceDispatcher.cs"];
m11_28 [label="var buffer = new byte[Math.Min(inputStream.Length, 4096)]", span="57-57", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", color=green, community=0, file="EmbeddedResourceDispatcher.cs"];
m11_29 [label="var readLength = inputStream.Read(buffer, 0, buffer.Length)", span="58-58", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", color=green, community=0, file="EmbeddedResourceDispatcher.cs"];
m11_32 [label="readLength = inputStream.Read(buffer, 0, buffer.Length)", span="62-62", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", color=green, community=0, file="EmbeddedResourceDispatcher.cs"];
m11_27 [label="throw new ArgumentException(string.Format(\r\n                        @''Resource with name {0} not found in assembly {1}.'',\r\n                        resourceName, assembly));", span="52-54", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", color=green, community=0, file="EmbeddedResourceDispatcher.cs"];
m11_31 [label="response.Write(buffer, 0, readLength)", span="61-61", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", color=green, community=0, file="EmbeddedResourceDispatcher.cs"];
m11_30 [label="readLength > 0", span="59-59", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", color=green, community=0, file="EmbeddedResourceDispatcher.cs"];
m11_33 [label="Exit HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", span="46-46", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="EmbeddedResourceDispatcher.cs"];
m11_34 [label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0", cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="EmbeddedResourceDispatcher.cs"];
m11_39 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="EmbeddedResourceDispatcher.cs"];
m11_40 [label="HangFire.Dashboard.EmbeddedResourceDispatcher", span="", file="EmbeddedResourceDispatcher.cs"];
m12_27 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="EmbeddedResourceHandler.cs"];
m12_29 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="EmbeddedResourceHandler.cs"];
m12_0 [label="Entry HangFire.Web.EmbeddedResourceHandler.ProcessRequest()", span="30-30", cluster="HangFire.Web.EmbeddedResourceHandler.ProcessRequest()", file="EmbeddedResourceHandler.cs"];
m12_1 [label="Response.ContentType = ContentType", span="32-32", cluster="HangFire.Web.EmbeddedResourceHandler.ProcessRequest()", color=red, community=0, file="EmbeddedResourceHandler.cs"];
m12_2 [label=CacheResponse, span="34-34", cluster="HangFire.Web.EmbeddedResourceHandler.ProcessRequest()", color=red, community=0, file="EmbeddedResourceHandler.cs"];
m12_3 [label="Response.Cache.SetCacheability(HttpCacheability.Public)", span="36-36", cluster="HangFire.Web.EmbeddedResourceHandler.ProcessRequest()", color=red, community=0, file="EmbeddedResourceHandler.cs"];
m12_5 [label="ContentEncoding != null", span="40-40", cluster="HangFire.Web.EmbeddedResourceHandler.ProcessRequest()", color=red, community=0, file="EmbeddedResourceHandler.cs"];
m12_4 [label="Response.Cache.SetExpires(DateTime.MaxValue)", span="37-37", cluster="HangFire.Web.EmbeddedResourceHandler.ProcessRequest()", color=red, community=0, file="EmbeddedResourceHandler.cs"];
m12_6 [label="Response.ContentEncoding = ContentEncoding", span="42-42", cluster="HangFire.Web.EmbeddedResourceHandler.ProcessRequest()", color=red, community=0, file="EmbeddedResourceHandler.cs"];
m12_7 [label="WriteResponse()", span="45-45", cluster="HangFire.Web.EmbeddedResourceHandler.ProcessRequest()", color=red, community=0, file="EmbeddedResourceHandler.cs"];
m12_8 [label="Exit HangFire.Web.EmbeddedResourceHandler.ProcessRequest()", span="30-30", cluster="HangFire.Web.EmbeddedResourceHandler.ProcessRequest()", file="EmbeddedResourceHandler.cs"];
m12_31 [label="Entry System.Math.Min(long, long)", span="0-0", cluster="System.Math.Min(long, long)", file="EmbeddedResourceHandler.cs"];
m12_30 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="EmbeddedResourceHandler.cs"];
m12_11 [label="Entry HangFire.Web.EmbeddedResourceHandler.WriteResponse()", span="48-48", cluster="HangFire.Web.EmbeddedResourceHandler.WriteResponse()", file="EmbeddedResourceHandler.cs"];
m12_12 [label="Exit HangFire.Web.EmbeddedResourceHandler.WriteResponse()", span="48-48", cluster="HangFire.Web.EmbeddedResourceHandler.WriteResponse()", file="EmbeddedResourceHandler.cs"];
m12_9 [label="Entry Unk.SetCacheability", span="", cluster="Unk.SetCacheability", file="EmbeddedResourceHandler.cs"];
m12_13 [label="Entry HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", span="50-50", cluster="HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", file="EmbeddedResourceHandler.cs"];
m12_14 [label="assembly == null", span="52-52", cluster="HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", color=red, community=0, file="EmbeddedResourceHandler.cs"];
m12_16 [label="resourceName == null", span="53-53", cluster="HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", color=red, community=0, file="EmbeddedResourceHandler.cs"];
m12_18 [label="var inputStream = assembly.GetManifestResourceStream(resourceName)", span="55-55", cluster="HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", color=red, community=0, file="EmbeddedResourceHandler.cs"];
m12_20 [label="throw new ArgumentException(string.Format(\r\n                        @''Resource named {0} not found in assembly {1}.'',\r\n                        resourceName, assembly));", span="59-61", cluster="HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", color=red, community=1, file="EmbeddedResourceHandler.cs"];
m12_15 [label="throw new ArgumentNullException(''assembly'');", span="52-52", cluster="HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", color=red, community=0, file="EmbeddedResourceHandler.cs"];
m12_17 [label="throw new ArgumentNullException(''resourceName'');", span="53-53", cluster="HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", color=red, community=0, file="EmbeddedResourceHandler.cs"];
m12_19 [label="inputStream == null", span="57-57", cluster="HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", color=red, community=0, file="EmbeddedResourceHandler.cs"];
m12_21 [label="var buffer = new byte[Math.Min(inputStream.Length, 4096)]", span="64-64", cluster="HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", color=red, community=0, file="EmbeddedResourceHandler.cs"];
m12_22 [label="var readLength = inputStream.Read(buffer, 0, buffer.Length)", span="65-65", cluster="HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", color=red, community=0, file="EmbeddedResourceHandler.cs"];
m12_25 [label="readLength = inputStream.Read(buffer, 0, buffer.Length)", span="69-69", cluster="HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", color=red, community=0, file="EmbeddedResourceHandler.cs"];
m12_24 [label="Response.OutputStream.Write(buffer, 0, readLength)", span="68-68", cluster="HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", color=red, community=0, file="EmbeddedResourceHandler.cs"];
m12_23 [label="readLength > 0", span="66-66", cluster="HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", color=red, community=0, file="EmbeddedResourceHandler.cs"];
m12_26 [label="Exit HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", span="50-50", cluster="HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", file="EmbeddedResourceHandler.cs"];
m12_32 [label="Entry System.IO.Stream.Read(byte[], int, int)", span="0-0", cluster="System.IO.Stream.Read(byte[], int, int)", file="EmbeddedResourceHandler.cs"];
m12_28 [label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0", cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="EmbeddedResourceHandler.cs"];
m12_33 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="EmbeddedResourceHandler.cs"];
m12_10 [label="Entry Unk.SetExpires", span="", cluster="Unk.SetExpires", file="EmbeddedResourceHandler.cs"];
m12_34 [label="HangFire.Web.EmbeddedResourceHandler", span="", file="EmbeddedResourceHandler.cs"];
m13_0 [label="Entry HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", span="4-4", cluster="HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", file="EnqueuedJobsPage.cs"];
m13_1 [label="Queue = queue", span="6-6", cluster="HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", file="EnqueuedJobsPage.cs"];
m13_2 [label="Exit HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", span="4-4", cluster="HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", file="EnqueuedJobsPage.cs"];
m13_3 [label="HangFire.Web.Pages.EnqueuedJobsPage", span="", file="EnqueuedJobsPage.cs"];
m14_0 [label="Entry HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", span="6-6", cluster="HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", file="ErrorPage.cs"];
m14_1 [label="Exception = exception", span="8-8", cluster="HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", color=red, community=0, file="ErrorPage.cs"];
m14_2 [label="Exit HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", span="6-6", cluster="HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", file="ErrorPage.cs"];
m14_3 [label="HangFire.Web.Pages.ErrorPage", span="", file="ErrorPage.cs"];
m15_25 [label="Entry Unk.OnScenarioStart", span="", cluster="Unk.OnScenarioStart", file="ErrorPage.generated.cs"];
m15_29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors", file="ErrorPage.generated.cs"];
m15_21 [label="Entry Unk.OnScenarioEnd", span="", cluster="Unk.OnScenarioEnd", file="ErrorPage.generated.cs"];
m15_0 [label="Entry HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="ErrorPage.generated.cs"];
m15_1 [label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32", cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=red, community=0, file="ErrorPage.generated.cs"];
m15_2 [label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''SchedulePoller'', ''\r\n  As an Administrator (or a Developer), I want the scheduled \r\n  jobs to added '' +\r\n                    ''to their actual queues when their time has come.'', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-35", cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=red, community=0, file="ErrorPage.generated.cs"];
m15_3 [label="testRunner.OnFeatureStart(featureInfo)", span="36-36", cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=red, community=0, file="ErrorPage.generated.cs"];
m15_4 [label="Exit HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="ErrorPage.generated.cs"];
m15_75 [label="Entry HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", span="166-166", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="ErrorPage.generated.cs"];
m15_76 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Poller move the job to the Failed state when it could not find its type'', ((string[])(null)))", span="168-168", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="ErrorPage.generated.cs"];
m15_77 [label="this.ScenarioSetup(scenarioInfo)", span="170-170", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="ErrorPage.generated.cs"];
m15_78 [label="testRunner.Given(''a scheduled job of the \'NonExisting\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="172-172", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="ErrorPage.generated.cs"];
m15_79 [label="testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="174-174", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="ErrorPage.generated.cs"];
m15_80 [label="testRunner.Then(''the job should be moved to the Failed state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="176-176", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="ErrorPage.generated.cs"];
m15_81 [label="this.ScenarioCleanup()", span="178-178", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="ErrorPage.generated.cs"];
m15_82 [label="Exit HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", span="166-166", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="ErrorPage.generated.cs"];
m15_45 [label="Entry Unk.And", span="", cluster="Unk.And", file="ErrorPage.generated.cs"];
m15_46 [label="Entry Unk.But", span="", cluster="Unk.But", file="ErrorPage.generated.cs"];
m15_83 [label="Entry HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", span="185-185", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="ErrorPage.generated.cs"];
m15_84 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Poller will fail only jobs in the Scheduled state'', ((string[])(null)))", span="187-187", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="ErrorPage.generated.cs"];
m15_85 [label="this.ScenarioSetup(scenarioInfo)", span="189-189", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="ErrorPage.generated.cs"];
m15_86 [label="testRunner.Given(''a scheduled job of the \'NonExisting\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="191-191", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="ErrorPage.generated.cs"];
m15_87 [label="testRunner.And(''its state is Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="193-193", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="ErrorPage.generated.cs"];
m15_88 [label="testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="195-195", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="ErrorPage.generated.cs"];
m15_89 [label="testRunner.Then(''the job should be in the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="197-197", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="ErrorPage.generated.cs"];
m15_90 [label="this.ScenarioCleanup()", span="199-199", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="ErrorPage.generated.cs"];
m15_91 [label="Exit HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", span="185-185", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="ErrorPage.generated.cs"];
m15_5 [label="Entry Unk.GetTestRunner", span="", cluster="Unk.GetTestRunner", file="ErrorPage.generated.cs"];
m15_14 [label="Entry HangFire.Tests.Server.SchedulePollerFeature.TestInitialize()", span="47-47", cluster="HangFire.Tests.Server.SchedulePollerFeature.TestInitialize()", file="ErrorPage.generated.cs"];
m15_15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''SchedulePoller''))", span="49-50", cluster="HangFire.Tests.Server.SchedulePollerFeature.TestInitialize()", color=red, community=0, file="ErrorPage.generated.cs"];
m15_16 [label="HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(null)", span="52-52", cluster="HangFire.Tests.Server.SchedulePollerFeature.TestInitialize()", color=red, community=0, file="ErrorPage.generated.cs"];
m15_17 [label="Exit HangFire.Tests.Server.SchedulePollerFeature.TestInitialize()", span="47-47", cluster="HangFire.Tests.Server.SchedulePollerFeature.TestInitialize()", file="ErrorPage.generated.cs"];
m15_26 [label="Entry HangFire.Tests.Server.SchedulePollerFeature.ScenarioCleanup()", span="67-67", cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioCleanup()", file="ErrorPage.generated.cs"];
m15_27 [label="testRunner.CollectScenarioErrors()", span="69-69", cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioCleanup()", color=red, community=0, file="ErrorPage.generated.cs"];
m15_28 [label="Exit HangFire.Tests.Server.SchedulePollerFeature.ScenarioCleanup()", span="67-67", cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioCleanup()", file="ErrorPage.generated.cs"];
m15_18 [label="Entry HangFire.Tests.Server.SchedulePollerFeature.ScenarioTearDown()", span="57-57", cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioTearDown()", file="ErrorPage.generated.cs"];
m15_19 [label="testRunner.OnScenarioEnd()", span="59-59", cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioTearDown()", color=red, community=0, file="ErrorPage.generated.cs"];
m15_20 [label="Exit HangFire.Tests.Server.SchedulePollerFeature.ScenarioTearDown()", span="57-57", cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioTearDown()", file="ErrorPage.generated.cs"];
m15_13 [label="Entry Unk.OnFeatureEnd", span="", cluster="Unk.OnFeatureEnd", file="ErrorPage.generated.cs"];
m15_7 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="ErrorPage.generated.cs"];
m15_43 [label="Entry Unk.When", span="", cluster="Unk.When", file="ErrorPage.generated.cs"];
m15_58 [label="Entry HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", span="126-126", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="ErrorPage.generated.cs"];
m15_59 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Poller should enqueue only jobs in the Scheduled state'', ((string[])(null)))", span="128-128", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="ErrorPage.generated.cs"];
m15_60 [label="this.ScenarioSetup(scenarioInfo)", span="130-130", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="ErrorPage.generated.cs"];
m15_61 [label="testRunner.Given(''a scheduled job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="132-132", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="ErrorPage.generated.cs"];
m15_62 [label="testRunner.And(''its state is Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="134-134", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="ErrorPage.generated.cs"];
m15_63 [label="testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="136-136", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="ErrorPage.generated.cs"];
m15_64 [label="testRunner.Then(''the job should be in the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="138-138", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="ErrorPage.generated.cs"];
m15_65 [label="testRunner.And(''the queue should not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="140-140", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="ErrorPage.generated.cs"];
m15_66 [label="this.ScenarioCleanup()", span="142-142", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="ErrorPage.generated.cs"];
m15_67 [label="Exit HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", span="126-126", cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="ErrorPage.generated.cs"];
m15_41 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="ErrorPage.generated.cs"];
m15_47 [label="Entry HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", span="101-101", cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="ErrorPage.generated.cs"];
m15_48 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Future jobs should not be enqueued'', ((string[])(null)))", span="103-103", cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="ErrorPage.generated.cs"];
m15_49 [label="this.ScenarioSetup(scenarioInfo)", span="105-105", cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="ErrorPage.generated.cs"];
m15_50 [label="testRunner.Given(''a future job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="107-107", cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="ErrorPage.generated.cs"];
m15_51 [label="testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="109-109", cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="ErrorPage.generated.cs"];
m15_52 [label="testRunner.Then(''the job should be in the Scheduled state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="111-111", cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="ErrorPage.generated.cs"];
m15_53 [label="testRunner.And(''the schedule should contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="113-113", cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="ErrorPage.generated.cs"];
m15_54 [label="testRunner.And(''the queue should not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="115-115", cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="ErrorPage.generated.cs"];
m15_55 [label="testRunner.And(''schedule poller should return \'false\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="117-117", cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="ErrorPage.generated.cs"];
m15_56 [label="this.ScenarioCleanup()", span="119-119", cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="ErrorPage.generated.cs"];
m15_57 [label="Exit HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", span="101-101", cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="ErrorPage.generated.cs"];
m15_9 [label="Entry HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", span="40-40", cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", file="ErrorPage.generated.cs"];
m15_10 [label="testRunner.OnFeatureEnd()", span="42-42", cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", color=red, community=0, file="ErrorPage.generated.cs"];
m15_11 [label="testRunner = null", span="43-43", cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", color=red, community=0, file="ErrorPage.generated.cs"];
m15_12 [label="Exit HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", span="40-40", cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", file="ErrorPage.generated.cs"];
m15_44 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="ErrorPage.generated.cs"];
m15_42 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="ErrorPage.generated.cs"];
m15_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="ErrorPage.generated.cs"];
m15_30 [label="Entry HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", span="76-76", cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="ErrorPage.generated.cs"];
m15_31 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Scheduled jobs should be enqueued on their actual queues'', ((string[])(null)))", span="78-78", cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", color=red, community=0, file="ErrorPage.generated.cs"];
m15_32 [label="this.ScenarioSetup(scenarioInfo)", span="80-80", cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", color=red, community=0, file="ErrorPage.generated.cs"];
m15_33 [label="testRunner.Given(''a scheduled job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="82-82", cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", color=red, community=0, file="ErrorPage.generated.cs"];
m15_34 [label="testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="84-84", cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="ErrorPage.generated.cs"];
m15_35 [label="testRunner.Then(''the job should be in the Enqueued state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="86-86", cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="ErrorPage.generated.cs"];
m15_36 [label="testRunner.And(''the schedule should not contain it anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="88-88", cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="ErrorPage.generated.cs"];
m15_37 [label="testRunner.But(''the queue should contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="90-90", cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="ErrorPage.generated.cs"];
m15_38 [label="testRunner.And(''schedule poller should return \'true\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="92-92", cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="ErrorPage.generated.cs"];
m15_39 [label="this.ScenarioCleanup()", span="94-94", cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="ErrorPage.generated.cs"];
m15_40 [label="Exit HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", span="76-76", cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="ErrorPage.generated.cs"];
m15_22 [label="Entry HangFire.Tests.Server.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62", cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="ErrorPage.generated.cs"];
m15_23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="64-64", cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", color=red, community=0, file="ErrorPage.generated.cs"];
m15_24 [label="Exit HangFire.Tests.Server.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62", cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="ErrorPage.generated.cs"];
m15_68 [label="Entry HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", span="149-149", cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="ErrorPage.generated.cs"];
m15_69 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Should return false when there are no jobs in the schedule'', ((string[])(null)))", span="151-151", cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="ErrorPage.generated.cs"];
m15_70 [label="this.ScenarioSetup(scenarioInfo)", span="153-153", cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="ErrorPage.generated.cs"];
m15_71 [label="testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="155-155", cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="ErrorPage.generated.cs"];
m15_72 [label="testRunner.Then(''schedule poller should return \'false\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="157-157", cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="ErrorPage.generated.cs"];
m15_73 [label="this.ScenarioCleanup()", span="159-159", cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="ErrorPage.generated.cs"];
m15_74 [label="Exit HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", span="149-149", cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="ErrorPage.generated.cs"];
m15_8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart", file="ErrorPage.generated.cs"];
m15_92 [label="HangFire.Tests.Server.SchedulePollerFeature", span="", file="ErrorPage.generated.cs"];
m16_82 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="FailedJobsPage.generated.cs"];
m16_76 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="FailedJobsPage.generated.cs"];
m16_74 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="FailedJobsPage.generated.cs"];
m16_90 [label="Entry HangFire.Web.HtmlHelper.MarkupStackTrace(string)", span="131-131", cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="FailedJobsPage.generated.cs"];
m16_77 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="FailedJobsPage.generated.cs"];
m16_87 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="40-40", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="FailedJobsPage.generated.cs"];
m16_89 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="FailedJobsPage.generated.cs"];
m16_79 [label="Entry HangFire.Storage.IMonitoringApi.FailedCount()", span="41-41", cluster="HangFire.Storage.IMonitoringApi.FailedCount()", file="FailedJobsPage.generated.cs"];
m16_83 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="FailedJobsPage.generated.cs"];
m16_85 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="FailedJobsPage.generated.cs"];
m16_75 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="FailedJobsPage.generated.cs"];
m16_80 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="FailedJobsPage.generated.cs"];
m16_88 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="FailedJobsPage.generated.cs"];
m16_0 [label="Entry HangFire.Web.Pages.FailedJobsPage.Execute()", span="52-52", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs"];
m16_1 [label="WriteLiteral(''\n'')", span="56-56", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_2 [label="Layout = new LayoutPage { Title = ''Failed Jobs'' }", span="68-68", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs"];
m16_4 [label="int.TryParse(Request.QueryString[''from''], out from)", span="72-72", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_3 [label="int from, perPage", span="70-70", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs"];
m16_5 [label="int.TryParse(Request.QueryString[''count''], out perPage)", span="73-73", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_7 [label="Pager pager = new Pager(from, perPage, monitor.FailedCount())\n    {\n        BasePageUrl = Request.LinkTo(''/failed'')\n    }", span="76-79", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_6 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="75-75", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_8 [label="JobList<FailedJobDto> failedJobs = monitor\n        .FailedJobs(pager.FromRecord, pager.RecordsPerPage)", span="81-82", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs"];
m16_10 [label="pager.TotalPageCount == 0", span="93-93", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs"];
m16_17 [label="Write(RenderPartial(new PerPageSelector(pager)))", span="153-153", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_72 [label="Write(RenderPartial(new Paginator(pager)))", span="501-501", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_16 [label="WriteLiteral(@''''''\n                    data-loading-text=''''Deleting...''''\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\n                <span class=''''glyphicon glyphicon-remove''''></span>\n                Delete selected\n            </button>\n\n            '')", span="141-148", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_18 [label="WriteLiteral(@''\n        </div>\n\n        <table class=''''table failed-table''''>\n            <thead>\n                <tr>\n                    <th class=''''min-width''''>\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\n                    </th>\n                    <th class=''''min-width''''>Id</th>\n                    <th>Failed</th>\n                    <th>Job</th>\n                </tr>\n            </thead>\n            <tbody>\n'')", span="158-173", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_71 [label="WriteLiteral(''            </tbody>\n        </table>\n    </div>\n'')", span="489-489", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_9 [label="WriteLiteral(''\n'')", span="88-88", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_11 [label="WriteLiteral(''    <div class=\''alert alert-success\''>\n        You have no failed jobs at the mome'' +\r\n''nt.\n    </div>\n'')", span="99-100", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_12 [label="WriteLiteral(''    <div class=\''js-jobs-list\''>\n        <div class=\''btn-toolbar btn-toolbar-top\''>\n'' +\r\n''            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\n        '' +\r\n''            data-url=\'''')", span="112-114", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_13 [label="Write(Request.LinkTo(''/failed/requeue''))", span="119-119", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_14 [label="WriteLiteral(@''''''\n                    data-loading-text=''''Enqueueing...''''>\n                <span class=''''glyphicon glyphicon-repeat''''></span>\n                Requeue jobs\n            </button>\n\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\n                    data-url='''''')", span="124-131", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_15 [label="Write(Request.LinkTo(''/failed/delete''))", span="136-136", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_19 [label="var index = 0", span="178-178", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs"];
m16_60 [label="Write(index++ == 0 ? ''display: block;'' : null)", span="420-420", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_59 [label="WriteLiteral(''                        <tr>\n                            <td colspan=\''2\'' class=\''f'' +\r\n''ailed-job-details\''>\n                                <div class=\''expandable\'' styl'' +\r\n''e=\'''')", span="413-415", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_61 [label="WriteLiteral(''\''>\n                                    <h4>'')", span="425-425", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_21 [label="WriteLiteral(''                    <tr class=\''js-jobs-list-row '')", span="192-192", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_20 [label=failedJobs, span="186-186", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs"];
m16_22 [label="Write(!job.Value.InFailedState ? ''obsolete-data'' : null)", span="197-197", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_23 [label="WriteLiteral('' '')", span="202-202", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_24 [label="Write(job.Value.InFailedState ? ''hover'' : null)", span="207-207", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_25 [label="WriteLiteral(''\''>\n                        <td rowspan=\'''')", span="212-212", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_26 [label="Write(job.Value.InFailedState ? ''2'' : ''1'')", span="217-217", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_27 [label="WriteLiteral(''\''>\n'')", span="222-222", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_28 [label="job.Value.InFailedState", span="227-227", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs"];
m16_29 [label="WriteLiteral(''                                <input type=\''checkbox\'' class=\''js-jobs-list-checkb'' +\r\n''ox\'' name=\''jobs[]\'' value=\'''')", span="233-234", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=1, file="FailedJobsPage.generated.cs"];
m16_30 [label="Write(job.Key)", span="239-239", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_32 [label="WriteLiteral(''                        </td>\n                        <td class=\''min-width\'' rowsp'' +\r\n''an=\'''')", span="254-255", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_31 [label="WriteLiteral(''\'' />\n'')", span="244-244", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_33 [label="Write(job.Value.InFailedState ? ''2'' : ''1'')", span="260-260", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_34 [label="WriteLiteral(''\''>\n                            <a href=\'''')", span="265-265", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_35 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="270-270", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_36 [label="WriteLiteral(''\''>\n                                '')", span="275-275", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_37 [label="Write(HtmlHelper.JobId(job.Key))", span="280-280", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_38 [label="WriteLiteral(''\n                            </a>\n'')", span="285-285", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_39 [label="!job.Value.InFailedState", span="290-290", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs"];
m16_40 [label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\n'')", span="296-297", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=1, file="FailedJobsPage.generated.cs"];
m16_41 [label="WriteLiteral(''                        </td>\n                        <td class=\''min-width\''>\n'')", span="307-307", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_42 [label="job.Value.FailedAt.HasValue", span="312-312", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs"];
m16_43 [label="WriteLiteral(''                                <span data-moment=\'''')", span="318-318", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_44 [label="Write(JobHelper.ToTimestamp(job.Value.FailedAt.Value))", span="323-323", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_48 [label="WriteLiteral(''                        </td>\n                        <td>\n                      '' +\r\n''      <div>\n                                <a class=\''job-method\'' href=\'''')", span="348-349", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_47 [label="WriteLiteral(''\n                                </span>\n'')", span="338-338", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_49 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="354-354", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_45 [label="WriteLiteral(''\''>\n                                    '')", span="328-328", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_46 [label="Write(job.Value.FailedAt)", span="333-333", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_50 [label="WriteLiteral(''\''>\n                                    '')", span="359-359", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_51 [label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="364-364", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_52 [label="WriteLiteral(''\n                                </a>\n                            </div>\n'')", span="369-369", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_53 [label="!String.IsNullOrEmpty(job.Value.ExceptionMessage)", span="374-374", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs"];
m16_54 [label="WriteLiteral(''                                <div style=\''color: #888;\''>\n                      '' +\r\n''              '')", span="380-381", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_55 [label="Write(job.Value.Reason)", span="386-386", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_57 [label="WriteLiteral(''                        </td>\n                    </tr>\n'')", span="402-402", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_56 [label="WriteLiteral('' <a class=\''expander\'' href=\''#\''>More&nbsp;details...</a>\n                          '' +\r\n''      </div>\n'')", span="391-392", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_58 [label="job.Value.InFailedState", span="407-407", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs"];
m16_62 [label="Write(job.Value.ExceptionType)", span="430-430", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_63 [label="WriteLiteral(''</h4>\n                                    <p>\n                                   '' +\r\n''     '')", span="435-436", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_64 [label="Write(job.Value.ExceptionMessage)", span="441-441", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_65 [label="WriteLiteral(''\n                                    </p>\n\n'')", span="446-446", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_66 [label="!String.IsNullOrEmpty(job.Value.ExceptionDetails)", span="451-451", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs"];
m16_67 [label="WriteLiteral(''                                        <pre class=\''stack-trace\''>'')", span="457-457", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_68 [label="Write(HtmlHelper.MarkupStackTrace(job.Value.ExceptionDetails))", span="462-462", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_70 [label="WriteLiteral(''                                </div>\n                            </td>\n        '' +\r\n''                </tr>\n'')", span="477-478", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_69 [label="WriteLiteral(''</pre>\n'')", span="467-467", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m16_73 [label="Exit HangFire.Web.Pages.FailedJobsPage.Execute()", span="52-52", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs"];
m16_91 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="FailedJobsPage.generated.cs"];
m16_81 [label="Entry HangFire.Storage.IMonitoringApi.FailedJobs(int, int)", span="35-35", cluster="HangFire.Storage.IMonitoringApi.FailedJobs(int, int)", file="FailedJobsPage.generated.cs"];
m16_84 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="FailedJobsPage.generated.cs"];
m16_78 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="FailedJobsPage.generated.cs"];
m16_86 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="FailedJobsPage.generated.cs"];
m16_92 [label="HangFire.Web.Pages.FailedJobsPage", span="", file="FailedJobsPage.generated.cs"];
m17_0 [label="Entry HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", span="4-4", cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="FetchedJobsPage.cs"];
m17_1 [label="Queue = queue", span="6-6", cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="FetchedJobsPage.cs"];
m17_2 [label="Exit HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", span="4-4", cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="FetchedJobsPage.cs"];
m17_3 [label="HangFire.Web.Pages.FetchedJobsPage", span="", file="FetchedJobsPage.cs"];
m18_54 [label="Entry HangFire.Storage.IMonitoringApi.FetchedJobs(string, int, int)", span="30-30", cluster="HangFire.Storage.IMonitoringApi.FetchedJobs(string, int, int)", file="FetchedJobsPage.generated.cs"];
m18_55 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="FetchedJobsPage.generated.cs"];
m18_0 [label="Entry HangFire.Web.Pages.FetchedJobsPage.Execute()", span="62-62", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs"];
m18_1 [label="WriteLiteral(''\n'')", span="66-66", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_2 [label="Layout = new LayoutPage\n        {\n            Title = Queue.ToUpperInvariant(),\n            Subtitle = ''Fetched jobs'',\n            Breadcrumbs = new Dictionary<string, string>\n                {\n                    { ''Queues'', Request.LinkTo(''/queues'') },\n                    { Queue.ToUpperInvariant(), Request.LinkTo(''/queues/'' + Queue) }\n                },\n            BreadcrumbsTitle = ''Fetched jobs'',\n        }", span="80-90", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=red, community=0, file="FetchedJobsPage.generated.cs"];
m18_3 [label="int from, perPage", span="92-92", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=red, community=0, file="FetchedJobsPage.generated.cs"];
m18_4 [label="int.TryParse(Request.QueryString[''from''], out from)", span="94-94", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", color=green, community=0];
m18_61 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="FetchedJobsPage.generated.cs"];
m18_52 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="FetchedJobsPage.generated.cs"];
m18_50 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="FetchedJobsPage.generated.cs"];
m18_45 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="FetchedJobsPage.generated.cs"];
m18_5 [label="int.TryParse(Request.QueryString[''count''], out perPage)", span="95-95", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_7 [label="Pager pager = new Pager(from, perPage, monitor.FetchedCount(Queue))\n    {\n        BasePageUrl = Request.LinkTo(''/queues/fetched/'' + Queue)\n    }", span="98-101", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_6 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="97-97", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs"];
m18_8 [label="JobList<FetchedJobDto> fetchedJobs = monitor\n        .FetchedJobs(Queue, pager.FromRecord, pager.RecordsPerPage)", span="103-104", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs"];
m18_10 [label="pager.TotalPageCount == 0", span="115-115", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs"];
m18_17 [label="Write(RenderPartial(new PerPageSelector(pager)))", span="174-174", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_43 [label="Write(RenderPartial(new Paginator(pager)))", span="344-344", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_16 [label="WriteLiteral(@''''''\n                    data-loading-text=''''Deleting...''''\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\n                <span class=''''glyphicon glyphicon-remove''''></span>\n                Delete selected\n            </button>\n\n            '')", span="162-169", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_18 [label="WriteLiteral(@''\n        </div>\n\n        <table class=''''table''''>\n            <thead>\n                <tr>\n                    <th class=''''min-width''''>\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\n                    </th>\n                    <th class=''''min-width''''>Id</th>\n                    <th class=''''min-width''''>State</th>\n                    <th>Job</th>\n                    <th class=''''align-right''''>Fetched</th>\n                </tr>\n            </thead>\n            <tbody>\n'')", span="179-195", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_42 [label="WriteLiteral(''            </tbody>\n        </table>\n    </div>\n'')", span="333-333", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_9 [label="WriteLiteral(''\n'')", span="110-110", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_11 [label="WriteLiteral(''    <div class=\''alert alert-info\''>\n        The queue is empty.\n    </div>\n'')", span="121-121", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_12 [label="WriteLiteral(''    <div class=\''js-jobs-list\''>\n        <div class=\''btn-toolbar btn-toolbar-top\''>\n'' +\r\n''            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\n        '' +\r\n''            data-url=\'''')", span="133-135", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_13 [label="Write(Request.LinkTo(''/enqueued/requeue''))", span="140-140", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_14 [label="WriteLiteral(@''''''\n                    data-loading-text=''''Enqueueing...''''>\n                <span class=''''glyphicon glyphicon-repeat''''></span>\n                Requeue jobs\n            </button>\n\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\n                    data-url='''''')", span="145-152", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_15 [label="Write(Request.LinkTo(''/enqueued/delete''))", span="157-157", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_19 [label=fetchedJobs, span="200-200", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs"];
m18_20 [label="WriteLiteral(''                    <tr class=\''js-jobs-list-row hover\''>\n                        <'' +\r\n''td>\n                            <input type=\''checkbox\'' class=\''js-jobs-list-check'' +\r\n''box\'' name=\''jobs[]\'' value=\'''')", span="206-208", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_21 [label="Write(job.Key)", span="213-213", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_22 [label="WriteLiteral(''\'' />\n                        </td>\n                        <td class=\''min-width\''>'' +\r\n''\n                            <a href=\'''')", span="218-219", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_23 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="224-224", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_24 [label="WriteLiteral(''\''>'')", span="229-229", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_25 [label="Write(HtmlHelper.JobId(job.Key))", span="234-234", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_26 [label="WriteLiteral(''</a>\n                        </td>\n                        <td class=\''min-width\''>'' +\r\n''\n                            <span class=\''label label-default\'' style=\'''')", span="239-240", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_27 [label="Write(JobHistoryRenderer.ForegroundStateColors.ContainsKey(job.Value.State) ? String.Format(''background-color: {0};'', JobHistoryRenderer.ForegroundStateColors[job.Value.State]) : null)", span="245-245", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_28 [label="WriteLiteral(''\''>\n                                '')", span="250-250", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_29 [label="Write(job.Value.State)", span="255-255", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_30 [label="WriteLiteral(''\n                            </span>\n                        </td>\n              '' +\r\n''          <td>\n                            <a class=\''job-method\'' href=\'''')", span="260-261", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_31 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="266-266", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_32 [label="WriteLiteral(''\''>\n                                '')", span="271-271", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_33 [label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="276-276", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_34 [label="WriteLiteral(''\n                            </a>\n                        </td>\n                 '' +\r\n''       <td class=\''align-right\''>\n'')", span="281-282", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_35 [label="job.Value.FetchedAt.HasValue", span="287-287", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs"];
m18_36 [label="WriteLiteral(''                                <span data-moment=\'''')", span="293-293", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_37 [label="Write(JobHelper.ToTimestamp(job.Value.FetchedAt.Value))", span="298-298", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_41 [label="WriteLiteral(''                        </td>\n                    </tr>\n'')", span="323-323", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_40 [label="WriteLiteral(''\n                                </span>\n'')", span="313-313", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_38 [label="WriteLiteral(''\''>\n                                    '')", span="303-303", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_39 [label="Write(job.Value.FetchedAt)", span="308-308", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m18_44 [label="Exit HangFire.Web.Pages.FetchedJobsPage.Execute()", span="62-62", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs"];
m18_63 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="40-40", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="FetchedJobsPage.generated.cs"];
m18_47 [label="Entry string.ToUpperInvariant()", span="0-0", cluster="string.ToUpperInvariant()", file="FetchedJobsPage.generated.cs"];
m18_57 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="FetchedJobsPage.generated.cs"];
m18_48 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FetchedJobsPage.generated.cs"];
m18_56 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="FetchedJobsPage.generated.cs"];
m18_60 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="FetchedJobsPage.generated.cs"];
m18_58 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="FetchedJobsPage.generated.cs"];
m18_59 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="FetchedJobsPage.generated.cs"];
m18_51 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="FetchedJobsPage.generated.cs"];
m18_46 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="FetchedJobsPage.generated.cs"];
m18_49 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="FetchedJobsPage.generated.cs"];
m18_53 [label="Entry HangFire.Storage.IMonitoringApi.FetchedCount(string)", span="40-40", cluster="HangFire.Storage.IMonitoringApi.FetchedCount(string)", file="FetchedJobsPage.generated.cs"];
m18_62 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="FetchedJobsPage.generated.cs"];
m18_64 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="FetchedJobsPage.generated.cs"];
m18_65 [label="HangFire.Web.Pages.FetchedJobsPage", span="", file="FetchedJobsPage.generated.cs"];
m19_0 [label="Entry HangFire.Web.FontsHandler.FontsHandler(string)", span="22-22", cluster="HangFire.Web.FontsHandler.FontsHandler(string)", file="FontsHandler.cs"];
m19_1 [label="CacheResponse = true", span="25-25", cluster="HangFire.Web.FontsHandler.FontsHandler(string)", color=red, community=0, file="FontsHandler.cs"];
m19_2 [label="fontName.EndsWith(''.eot'', StringComparison.OrdinalIgnoreCase)", span="27-27", cluster="HangFire.Web.FontsHandler.FontsHandler(string)", color=red, community=0, file="FontsHandler.cs"];
m19_4 [label="fontName.EndsWith(''.svg'', StringComparison.OrdinalIgnoreCase)", span="31-31", cluster="HangFire.Web.FontsHandler.FontsHandler(string)", color=red, community=0, file="FontsHandler.cs"];
m19_6 [label="fontName.EndsWith(''.ttf'', StringComparison.OrdinalIgnoreCase)", span="35-35", cluster="HangFire.Web.FontsHandler.FontsHandler(string)", color=red, community=0, file="FontsHandler.cs"];
m19_8 [label="fontName.EndsWith(''.woff'', StringComparison.OrdinalIgnoreCase)", span="39-39", cluster="HangFire.Web.FontsHandler.FontsHandler(string)", color=red, community=0, file="FontsHandler.cs"];
m19_3 [label="ContentType = ''application/vnd.ms-fontobject''", span="29-29", cluster="HangFire.Web.FontsHandler.FontsHandler(string)", color=red, community=0, file="FontsHandler.cs"];
m19_5 [label="ContentType = ''image/svg+xml''", span="33-33", cluster="HangFire.Web.FontsHandler.FontsHandler(string)", color=red, community=0, file="FontsHandler.cs"];
m19_7 [label="ContentType = ''application/octet-stream''", span="37-37", cluster="HangFire.Web.FontsHandler.FontsHandler(string)", color=red, community=0, file="FontsHandler.cs"];
m19_9 [label="ContentType = ''application/font-woff''", span="41-41", cluster="HangFire.Web.FontsHandler.FontsHandler(string)", color=red, community=0, file="FontsHandler.cs"];
m19_10 [label="Exit HangFire.Web.FontsHandler.FontsHandler(string)", span="22-22", cluster="HangFire.Web.FontsHandler.FontsHandler(string)", file="FontsHandler.cs"];
m19_11 [label="Entry string.EndsWith(string, System.StringComparison)", span="0-0", cluster="string.EndsWith(string, System.StringComparison)", file="FontsHandler.cs"];
m19_12 [label="HangFire.Web.FontsHandler", span="", file="FontsHandler.cs"];
m21_4 [label="Routes.Add(''/css'', new CombinedResourceDispatcher(\r\n                ''text/css'',\r\n                typeof(GlobalDashboardRoutes).Assembly,\r\n                GetContentFolderNamespace(''css''),\r\n                Stylesheets))", span="36-40", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="GlobalDashboardRoutes.cs", color=green, community=0];
m21_10 [label="Entry HangFire.Dashboard.DashboardRouteCollection.Add(string, HangFire.Dashboard.IRequestDispatcher)", span="12-12", cluster="HangFire.Dashboard.DashboardRouteCollection.Add(string, HangFire.Dashboard.IRequestDispatcher)", file="GlobalDashboardRoutes.cs"];
m21_9 [label="Entry HangFire.Dashboard.GlobalDashboardRoutes.GetContentFolderNamespace(string)", span="45-45", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GetContentFolderNamespace(string)", file="GlobalDashboardRoutes.cs"];
m21_15 [label="return String.Format(''{0}.Content.{1}'', typeof(GlobalDashboardRoutes).Namespace, contentFolder);", span="47-47", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GetContentFolderNamespace(string)", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m21_16 [label="Exit HangFire.Dashboard.GlobalDashboardRoutes.GetContentFolderNamespace(string)", span="45-45", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GetContentFolderNamespace(string)", file="GlobalDashboardRoutes.cs"];
m21_17 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="GlobalDashboardRoutes.cs"];
m21_5 [label="Entry HangFire.Dashboard.DashboardRouteCollection.AddRazorPage(string, System.Func<System.Text.RegularExpressions.Match, HangFire.Dashboard.Pages.RazorPage>)", span="8-8", cluster="HangFire.Dashboard.DashboardRouteCollection.AddRazorPage(string, System.Func<System.Text.RegularExpressions.Match, HangFire.Dashboard.Pages.RazorPage>)", file="GlobalDashboardRoutes.cs"];
m21_6 [label="Entry lambda expression", span="9-9", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m21_7 [label="new DashboardPage()", span="9-9", cluster="lambda expression", file="GlobalDashboardRoutes.cs"];
m21_8 [label="Entry HangFire.Dashboard.CombinedResourceDispatcher.CombinedResourceDispatcher(string, System.Reflection.Assembly, string, params string[])", span="12-12", cluster="HangFire.Dashboard.CombinedResourceDispatcher.CombinedResourceDispatcher(string, System.Reflection.Assembly, string, params string[])", file="GlobalDashboardRoutes.cs"];
m21_0 [label="Entry HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", span="6-6", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="GlobalDashboardRoutes.cs"];
m21_1 [label="Routes = new DashboardRouteCollection()", span="8-8", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="GlobalDashboardRoutes.cs"];
m21_2 [label="Routes.AddRazorPage(''/'', x => new DashboardPage())", span="28-28", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="GlobalDashboardRoutes.cs"];
m21_3 [label="Exit HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", span="6-6", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", color=green, community=0, file="GlobalDashboardRoutes.cs"];
m22_6 [label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="33-33", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="HangFireConfig.cs"];
m22_7 [label="Entry HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string, params string[])", span="28-28", cluster="HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string, params string[])", file="HangFireConfig.cs"];
m22_0 [label="Entry MvcSample.HangFireConfig.Start()", span="17-17", cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs"];
m22_1 [label="var storage = new SqlServerStorage(\r\n                @''Server=.\sqlexpress;Database=HangFire.Sample;Trusted_Connection=True;'')", span="27-28", cluster="MvcSample.HangFireConfig.Start()", color=red, community=1, file="HangFireConfig.cs"];
m22_2 [label="storage.UseMsmqQueues(@''.\Private$\hangfire{0}'', ''default'', ''critical'')", span="29-29", cluster="MvcSample.HangFireConfig.Start()", color=red, community=0, file="HangFireConfig.cs"];
m22_3 [label="JobStorage.Current = storage", span="31-31", cluster="MvcSample.HangFireConfig.Start()", color=red, community=0, file="HangFireConfig.cs"];
m22_4 [label="_server = new AspNetBackgroundJobServer()", span="46-46", cluster="MvcSample.HangFireConfig.Start()", color=red, community=0, file="HangFireConfig.cs"];
m22_5 [label="Exit MvcSample.HangFireConfig.Start()", span="17-17", cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs"];
m22_9 [label="Entry MvcSample.HangFireConfig.Stop()", span="50-50", cluster="MvcSample.HangFireConfig.Stop()", file="HangFireConfig.cs"];
m22_10 [label="_server.Stop()", span="52-52", cluster="MvcSample.HangFireConfig.Stop()", color=red, community=0, file="HangFireConfig.cs"];
m22_11 [label="Exit MvcSample.HangFireConfig.Stop()", span="50-50", cluster="MvcSample.HangFireConfig.Stop()", file="HangFireConfig.cs"];
m22_12 [label="Entry HangFire.BackgroundJobServer.Stop()", span="71-71", cluster="HangFire.BackgroundJobServer.Stop()", file="HangFireConfig.cs"];
m24_10 [label="Entry HangFire.States.EnqueuedState.Handler.Handler()", span="49-49", cluster="HangFire.States.EnqueuedState.Handler.Handler()", file="HangFirePageFactory.cs"];
m24_6 [label="Entry HangFire.Common.States.StateHandlerCollection.StateHandlerCollection()", span="6-6", cluster="HangFire.Common.States.StateHandlerCollection.StateHandlerCollection()", file="HangFirePageFactory.cs"];
m24_0 [label="Entry HangFire.GlobalStateHandlers.GlobalStateHandlers()", span="7-7", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="HangFirePageFactory.cs"];
m24_1 [label="Handlers = new StateHandlerCollection()", span="9-9", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", color=red, community=0, file="HangFirePageFactory.cs"];
m24_2 [label="Handlers.AddHandler(new SucceededState.Handler())", span="10-10", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", color=red, community=0, file="HangFirePageFactory.cs"];
m24_3 [label="Handlers.AddHandler(new ScheduledState.Handler())", span="11-11", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", color=red, community=0, file="HangFirePageFactory.cs"];
m24_4 [label="Handlers.AddHandler(new EnqueuedState.Handler())", span="12-12", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", color=red, community=0, file="HangFirePageFactory.cs"];
m24_5 [label="Exit HangFire.GlobalStateHandlers.GlobalStateHandlers()", span="7-7", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="HangFirePageFactory.cs"];
m24_8 [label="Entry Unk.AddHandler", span="", cluster="Unk.AddHandler", file="HangFirePageFactory.cs"];
m24_7 [label="Entry HangFire.States.SucceededState.Handler.Handler()", span="53-53", cluster="HangFire.States.SucceededState.Handler.Handler()", file="HangFirePageFactory.cs"];
m24_9 [label="Entry HangFire.States.ScheduledState.Handler.Handler()", span="48-48", cluster="HangFire.States.ScheduledState.Handler.Handler()", file="HangFirePageFactory.cs"];
m25_0 [label="Entry HangFire.SqlServer.MessageQueueProcessingJob.MessageQueueProcessingJob(MessageQueueTransaction, string)", span="27-27", cluster="HangFire.SqlServer.MessageQueueProcessingJob.MessageQueueProcessingJob(MessageQueueTransaction, string)", file="HtmlHelper.cs"];
m25_1 [label="transaction == null", span="29-29", cluster="HangFire.SqlServer.MessageQueueProcessingJob.MessageQueueProcessingJob(MessageQueueTransaction, string)", file="HtmlHelper.cs"];
m25_3 [label="jobId == null", span="30-30", cluster="HangFire.SqlServer.MessageQueueProcessingJob.MessageQueueProcessingJob(MessageQueueTransaction, string)", color=red, community=0, file="HtmlHelper.cs"];
m25_5 [label="_transaction = transaction", span="32-32", cluster="HangFire.SqlServer.MessageQueueProcessingJob.MessageQueueProcessingJob(MessageQueueTransaction, string)", file="HtmlHelper.cs"];
m25_6 [label="JobId = jobId", span="34-34", cluster="HangFire.SqlServer.MessageQueueProcessingJob.MessageQueueProcessingJob(MessageQueueTransaction, string)", color=red, community=0, file="HtmlHelper.cs"];
m25_2 [label="throw new ArgumentNullException(''transaction'');", span="29-29", cluster="HangFire.SqlServer.MessageQueueProcessingJob.MessageQueueProcessingJob(MessageQueueTransaction, string)", file="HtmlHelper.cs"];
m25_4 [label="throw new ArgumentNullException(''jobId'');", span="30-30", cluster="HangFire.SqlServer.MessageQueueProcessingJob.MessageQueueProcessingJob(MessageQueueTransaction, string)", color=red, community=0, file="HtmlHelper.cs"];
m25_7 [label="Exit HangFire.SqlServer.MessageQueueProcessingJob.MessageQueueProcessingJob(MessageQueueTransaction, string)", span="27-27", cluster="HangFire.SqlServer.MessageQueueProcessingJob.MessageQueueProcessingJob(MessageQueueTransaction, string)", file="HtmlHelper.cs"];
m25_8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="HtmlHelper.cs"];
m25_16 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="HtmlHelper.cs"];
m25_17 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="HtmlHelper.cs"];
m25_9 [label="Entry HangFire.SqlServer.MessageQueueProcessingJob.Dispose()", span="39-39", cluster="HangFire.SqlServer.MessageQueueProcessingJob.Dispose()", file="HtmlHelper.cs"];
m25_10 [label=_disposed, span="41-41", cluster="HangFire.SqlServer.MessageQueueProcessingJob.Dispose()", file="HtmlHelper.cs"];
m25_11 [label="return;", span="41-41", cluster="HangFire.SqlServer.MessageQueueProcessingJob.Dispose()", file="HtmlHelper.cs"];
m25_12 [label="_disposed = true", span="43-43", cluster="HangFire.SqlServer.MessageQueueProcessingJob.Dispose()", file="HtmlHelper.cs"];
m25_13 [label="_transaction.Commit()", span="45-45", cluster="HangFire.SqlServer.MessageQueueProcessingJob.Dispose()", color=red, community=0, file="HtmlHelper.cs"];
m25_14 [label="_transaction.Dispose()", span="46-46", cluster="HangFire.SqlServer.MessageQueueProcessingJob.Dispose()", file="HtmlHelper.cs"];
m25_15 [label="Exit HangFire.SqlServer.MessageQueueProcessingJob.Dispose()", span="39-39", cluster="HangFire.SqlServer.MessageQueueProcessingJob.Dispose()", file="HtmlHelper.cs"];
m25_18 [label="HangFire.SqlServer.MessageQueueProcessingJob", span="", file="HtmlHelper.cs"];
m26_8 [label="Entry Unk.End", span="", cluster="Unk.End", file="HttpStatusHandler.cs"];
m26_7 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="HttpStatusHandler.cs"];
m26_0 [label="Entry HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", span="7-7", cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", file="HttpStatusHandler.cs"];
m26_1 [label="var response = context.Response", span="9-9", cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", color=red, community=0, file="HttpStatusHandler.cs"];
m26_2 [label="response.StatusCode = (int) statusCode", span="11-11", cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", color=red, community=0, file="HttpStatusHandler.cs"];
m26_3 [label="response.Write(response.Status)", span="12-12", cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", color=red, community=0, file="HttpStatusHandler.cs"];
m26_4 [label="response.End()", span="14-14", cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", color=red, community=0, file="HttpStatusHandler.cs"];
m26_5 [label="return null;", span="15-15", cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", color=red, community=0, file="HttpStatusHandler.cs"];
m26_6 [label="Exit HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", span="7-7", cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", file="HttpStatusHandler.cs"];
m27_0 [label="Entry HangFire.Web.JavaScriptHandler.JavaScriptHandler()", span="33-33", cluster="HangFire.Web.JavaScriptHandler.JavaScriptHandler()", file="JavaScriptHandler.cs"];
m27_1 [label="ContentType = ''application/javascript''", span="36-36", cluster="HangFire.Web.JavaScriptHandler.JavaScriptHandler()", color=red, community=0, file="JavaScriptHandler.cs"];
m27_2 [label="ContentEncoding = Encoding.UTF8", span="37-37", cluster="HangFire.Web.JavaScriptHandler.JavaScriptHandler()", color=red, community=0, file="JavaScriptHandler.cs"];
m27_3 [label="Exit HangFire.Web.JavaScriptHandler.JavaScriptHandler()", span="33-33", cluster="HangFire.Web.JavaScriptHandler.JavaScriptHandler()", file="JavaScriptHandler.cs"];
m27_4 [label="HangFire.Web.JavaScriptHandler", span="", file="JavaScriptHandler.cs"];
m28_0 [label="Entry HangFire.Web.Pages.JobDetailsPage.JobDetailsPage(string)", span="6-6", cluster="HangFire.Web.Pages.JobDetailsPage.JobDetailsPage(string)", file="JobDetailsPage.cs"];
m28_1 [label="JobId = jobId", span="8-8", cluster="HangFire.Web.Pages.JobDetailsPage.JobDetailsPage(string)", file="JobDetailsPage.cs"];
m28_2 [label="Exit HangFire.Web.Pages.JobDetailsPage.JobDetailsPage(string)", span="6-6", cluster="HangFire.Web.Pages.JobDetailsPage.JobDetailsPage(string)", file="JobDetailsPage.cs"];
m28_3 [label="HangFire.Web.Pages.JobDetailsPage", span="", file="JobDetailsPage.cs"];
m29_76 [label="Entry HangFire.Storage.Monitoring.IMonitoringApi.FailedCount()", span="23-23", cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedCount()", file="JobDetailsPage1.generated.cs"];
m29_82 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="JobDetailsPage1.generated.cs"];
m29_89 [label="Entry HangFire.Web.HtmlHelper.MarkupStackTrace(string)", span="110-110", cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="JobDetailsPage1.generated.cs"];
m29_87 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", span="34-34", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", file="JobDetailsPage1.generated.cs"];
m29_85 [label="Entry HangFire.Web.HtmlHelper.QueueLabel(HangFire.Common.JobMethod)", span="90-90", cluster="HangFire.Web.HtmlHelper.QueueLabel(HangFire.Common.JobMethod)", file="JobDetailsPage1.generated.cs"];
m29_0 [label="Entry HangFire.Web.Pages.FailedJobsPage.Execute()", span="52-52", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m29_1 [label="WriteLiteral(''\r\n'')", span="56-56", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_2 [label="Layout = new LayoutPage { Title = ''Failed Jobs'' }", span="68-68", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_3 [label="int from, perPage", span="70-70", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_4 [label="int.TryParse(Request.QueryString[''from''], out from)", span="72-72", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_5 [label="int.TryParse(Request.QueryString[''count''], out perPage)", span="73-73", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_9 [label="pager = new Pager(from, perPage, monitor.FailedCount())\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/failed'')\r\n        }", span="80-83", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_6 [label="Pager pager", span="75-75", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_7 [label="JobList<FailedJobDto> failedJobs", span="76-76", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_8 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="78-78", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_10 [label="failedJobs = monitor\r\n            .FailedJobs(pager.FromRecord, pager.RecordsPerPage)", span="85-86", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_12 [label="pager.TotalPageCount == 0", span="98-98", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m29_14 [label="Write(RenderPartial(new PerPageSelector(pager)))", span="119-119", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_69 [label="Write(RenderPartial(new Paginator(pager)))", span="469-469", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m29_11 [label="WriteLiteral(''\r\n'')", span="93-93", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m29_17 [label=failedJobs, span="156-156", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_13 [label="WriteLiteral(''    <div class=\''alert alert-success\''>\r\n        You have no failed jobs at the mom'' +\r\n''ent.\r\n    </div>\r\n'')", span="104-105", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_15 [label="WriteLiteral(@''    <table class=''''table failed-table''''>\r\n        <thead>\r\n            <tr>\r\n                <th>Id</th>\r\n                <th>Failed</th>\r\n                <th>Queue</th>\r\n                <th>Job type</th>\r\n                <th></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="132-143", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_16 [label="var index = 0", span="148-148", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_57 [label="Write(index++ == 0 ? ''display: block;'' : null)", span="389-389", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_18 [label="WriteLiteral(''                <tr class=\'''')", span="162-162", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_68 [label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="457-457", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_19 [label="Write(!job.Value.InFailedState ? ''obsolete-data'' : null)", span="167-167", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_20 [label="WriteLiteral(''\''>\r\n                    <td rowspan=\'''')", span="172-172", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_21 [label="Write(job.Value.InFailedState ? ''2'' : ''1'')", span="177-177", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_22 [label="WriteLiteral(''\''>\r\n                        <a href=\'''')", span="182-182", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_23 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="187-187", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_24 [label="WriteLiteral(''\''>\r\n                            '')", span="192-192", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_25 [label="Write(HtmlHelper.JobId(job.Key))", span="197-197", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_26 [label="WriteLiteral(''\r\n                        </a>\r\n'')", span="202-202", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_27 [label="!job.Value.InFailedState", span="207-207", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m29_28 [label="WriteLiteral(''                            <span title=\''Job\'s state has been changed while fetch'' +\r\n''ing data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="213-214", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_29 [label="WriteLiteral(''                    </td>\r\n                    <td>\r\n'')", span="224-224", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_30 [label="job.Value.FailedAt.HasValue", span="229-229", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_31 [label="WriteLiteral(''                            <span data-moment=\'''')", span="235-235", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_36 [label="WriteLiteral(''                    </td>\r\n                    <td>'')", span="265-265", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_32 [label="Write(JobHelper.ToStringTimestamp(job.Value.FailedAt.Value))", span="240-240", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_37 [label="Write(HtmlHelper.QueueLabel(job.Value.Method))", span="270-270", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_33 [label="WriteLiteral(''\''>\r\n                                '')", span="245-245", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_34 [label="Write(job.Value.FailedAt)", span="250-250", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_35 [label="WriteLiteral(''        \r\n                            </span>\r\n'')", span="255-255", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_38 [label="WriteLiteral(''</td>\r\n                    <td class=\'''')", span="275-275", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_39 [label="Write(job.Value.InFailedState ? ''expander'' : null)", span="280-280", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_40 [label="WriteLiteral(''\''>\r\n                        <div>\r\n                            <span title=\'''')", span="285-285", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_41 [label="Write(HtmlHelper.DisplayMethodHint(job.Value.Method))", span="290-290", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_42 [label="WriteLiteral(''\''>\r\n                                '')", span="295-295", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_43 [label="Write(HtmlHelper.DisplayMethod(job.Value.Method))", span="300-300", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_44 [label="WriteLiteral(''\r\n                            </span>\r\n                        </div>\r\n'')", span="305-305", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_45 [label="!String.IsNullOrEmpty(job.Value.ExceptionMessage)", span="310-310", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_46 [label="WriteLiteral(''                            <div style=\''color: #888;\''>\r\n                         '' +\r\n''       '')", span="316-317", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_49 [label="WriteLiteral(''                    </td>\r\n                    <td>\r\n'')", span="337-337", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m29_47 [label="Write(job.Value.Reason)", span="322-322", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_50 [label="job.Value.InFailedState", span="342-342", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_48 [label="WriteLiteral('' <span class=\''caret\''></span>\r\n                            </div>\r\n'')", span="327-327", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m29_51 [label="WriteLiteral(''                            <div class=\''pull-right\''>\r\n                           '' +\r\n''     <button class=\''btn btn-primary btn-sm\'' data-ajax=\'''')", span="348-349", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_54 [label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", span="372-372", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_52 [label="Write(Request.LinkTo(''/failed/retry/'' + job.Key))", span="354-354", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_55 [label="job.Value.InFailedState", span="377-377", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_53 [label="WriteLiteral(''\'' data-loading-text=\''Retrying...\''>\r\n                                    <span cla'' +\r\n''ss=\''glyphicon glyphicon-repeat\''></span>\r\n                                    Ret'' +\r\n''ry\r\n                                </button>\r\n                            </div'' +\r\n''>\r\n'')", span="359-362", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_56 [label="WriteLiteral(''                    <tr>\r\n                        <td colspan=\''4\'' class=\''failed-j'' +\r\n''ob-details\''>\r\n                            <div class=\''expandable\'' style=\'''')", span="383-384", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_59 [label="Write(job.Value.ExceptionType)", span="399-399", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_58 [label="WriteLiteral(''\''>\r\n                                <h4>'')", span="394-394", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_60 [label="WriteLiteral(''</h4>\r\n                                <p>\r\n                                    '')", span="404-404", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_61 [label="Write(job.Value.ExceptionMessage)", span="409-409", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_62 [label="WriteLiteral(''\r\n                                </p>\r\n                        \r\n'')", span="414-414", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_63 [label="!String.IsNullOrEmpty(job.Value.ExceptionDetails)", span="419-419", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_64 [label="WriteLiteral(''                                    <pre class=\''stack-trace\''>'')", span="425-425", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_67 [label="WriteLiteral(''                            </div>\r\n                        </td>\r\n              '' +\r\n''      </tr>\r\n'')", span="445-446", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m29_65 [label="Write(HtmlHelper.MarkupStackTrace(job.Value.ExceptionDetails))", span="430-430", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_66 [label="WriteLiteral(''</pre>\r\n'')", span="435-435", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs"];
m29_70 [label="Exit HangFire.Web.Pages.FailedJobsPage.Execute()", span="52-52", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m29_75 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="JobDetailsPage1.generated.cs"];
m29_73 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="JobDetailsPage1.generated.cs"];
m29_71 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="JobDetailsPage1.generated.cs"];
m29_80 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="JobDetailsPage1.generated.cs"];
m29_88 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="JobDetailsPage1.generated.cs"];
m29_86 [label="Entry HangFire.Web.HtmlHelper.DisplayMethodHint(HangFire.Common.JobMethod)", span="45-45", cluster="HangFire.Web.HtmlHelper.DisplayMethodHint(HangFire.Common.JobMethod)", file="JobDetailsPage1.generated.cs"];
m29_79 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="JobDetailsPage1.generated.cs"];
m29_78 [label="Entry HangFire.Storage.Monitoring.IMonitoringApi.FailedJobs(int, int)", span="18-18", cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedJobs(int, int)", file="JobDetailsPage1.generated.cs"];
m29_84 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="JobDetailsPage1.generated.cs"];
m29_81 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="JobDetailsPage1.generated.cs"];
m29_83 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="55-55", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="JobDetailsPage1.generated.cs"];
m29_74 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="43-43", cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobDetailsPage1.generated.cs"];
m29_72 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="JobDetailsPage1.generated.cs"];
m29_77 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="JobDetailsPage1.generated.cs"];
m29_90 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="JobDetailsPage1.generated.cs"];
m29_91 [label="HangFire.Web.Pages.FailedJobsPage", span="", file="JobDetailsPage1.generated.cs"];
m30_15 [label="Entry HangFire.Redis.RedisStorage.GetConnection()", span="51-51", cluster="HangFire.Redis.RedisStorage.GetConnection()", file="JobHistoryRenderer.cs"];
m30_16 [label="return new RedisConnection(this, _pooledManager.GetClient());", span="53-53", cluster="HangFire.Redis.RedisStorage.GetConnection()", file="JobHistoryRenderer.cs"];
m30_17 [label="Exit HangFire.Redis.RedisStorage.GetConnection()", span="51-51", cluster="HangFire.Redis.RedisStorage.GetConnection()", file="JobHistoryRenderer.cs"];
m30_9 [label="Entry RedisClientManagerConfig.cstr", span="", cluster="RedisClientManagerConfig.cstr", file="JobHistoryRenderer.cs"];
m30_10 [label="Entry HangFire.Redis.RedisStorage.GetMonitoringApi()", span="46-46", cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="JobHistoryRenderer.cs"];
m30_11 [label="return new RedisMonitoringApi(_pooledManager.GetClient());", span="48-48", cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="JobHistoryRenderer.cs"];
m30_12 [label="Exit HangFire.Redis.RedisStorage.GetMonitoringApi()", span="46-46", cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="JobHistoryRenderer.cs"];
m30_14 [label="Entry Unk.GetClient", span="", cluster="Unk.GetClient", file="JobHistoryRenderer.cs"];
m30_0 [label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="23-23", cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="JobHistoryRenderer.cs"];
m30_1 [label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="23-23", cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="JobHistoryRenderer.cs"];
m30_19 [label="Entry HangFire.Redis.RedisStorage.GetComponents()", span="56-56", cluster="HangFire.Redis.RedisStorage.GetComponents()", file="JobHistoryRenderer.cs"];
m30_20 [label="yield return new SchedulePoller(this, _options.PollInterval);", span="58-58", cluster="HangFire.Redis.RedisStorage.GetComponents()", file="JobHistoryRenderer.cs"];
m30_21 [label="yield return new DequeuedJobsWatcher(this);", span="59-59", cluster="HangFire.Redis.RedisStorage.GetComponents()", color=red, community=0, file="JobHistoryRenderer.cs"];
m30_22 [label="yield return new ServerWatchdog(this);", span="60-60", cluster="HangFire.Redis.RedisStorage.GetComponents()", file="JobHistoryRenderer.cs"];
m30_23 [label="Exit HangFire.Redis.RedisStorage.GetComponents()", span="56-56", cluster="HangFire.Redis.RedisStorage.GetComponents()", file="JobHistoryRenderer.cs"];
m30_24 [label="Entry HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34", cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="JobHistoryRenderer.cs"];
m30_25 [label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", span="39-39", cluster="HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", file="JobHistoryRenderer.cs"];
m30_26 [label="Entry HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="33-33", cluster="HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="JobHistoryRenderer.cs"];
m30_27 [label="Entry HangFire.Redis.RedisStorage.GetStateHandlers()", span="63-63", cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="JobHistoryRenderer.cs"];
m30_28 [label="yield return new FailedStateHandler();", span="65-65", cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="JobHistoryRenderer.cs"];
m30_29 [label="yield return new ProcessingStateHandler();", span="66-66", cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="JobHistoryRenderer.cs"];
m30_30 [label="yield return new SucceededStateHandler();", span="67-67", cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="JobHistoryRenderer.cs"];
m30_31 [label="Exit HangFire.Redis.RedisStorage.GetStateHandlers()", span="63-63", cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="JobHistoryRenderer.cs"];
m30_8 [label="Entry PooledRedisClientManager.cstr", span="", cluster="PooledRedisClientManager.cstr", file="JobHistoryRenderer.cs"];
m30_38 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="JobHistoryRenderer.cs"];
m30_13 [label="Entry RedisMonitoringApi.cstr", span="", cluster="RedisMonitoringApi.cstr", file="JobHistoryRenderer.cs"];
m30_35 [label="Entry HangFire.Redis.RedisStorage.ToString()", span="70-70", cluster="HangFire.Redis.RedisStorage.ToString()", file="JobHistoryRenderer.cs"];
m30_36 [label="return String.Format(''redis://{0}/{1}'', _host, _db);", span="72-72", cluster="HangFire.Redis.RedisStorage.ToString()", file="JobHistoryRenderer.cs"];
m30_37 [label="Exit HangFire.Redis.RedisStorage.ToString()", span="70-70", cluster="HangFire.Redis.RedisStorage.ToString()", file="JobHistoryRenderer.cs"];
m30_34 [label="Entry HangFire.Redis.States.SucceededStateHandler.SucceededStateHandler()", span="6-6", cluster="HangFire.Redis.States.SucceededStateHandler.SucceededStateHandler()", file="JobHistoryRenderer.cs"];
m30_2 [label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="28-28", cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="JobHistoryRenderer.cs"];
m30_3 [label="_host = host", span="30-30", cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="JobHistoryRenderer.cs"];
m30_4 [label="_db = db", span="31-31", cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="JobHistoryRenderer.cs"];
m30_5 [label="_options = options", span="32-32", cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="JobHistoryRenderer.cs"];
m30_6 [label="_pooledManager = new PooledRedisClientManager(\r\n                new []{ host },\r\n                new string[0],\r\n                new RedisClientManagerConfig\r\n                {\r\n                    DefaultDb = db,\r\n                    MaxWritePoolSize = _options.ConnectionPoolSize\r\n                })", span="34-41", cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="JobHistoryRenderer.cs"];
m30_7 [label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="28-28", cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="JobHistoryRenderer.cs"];
m30_18 [label="Entry RedisConnection.cstr", span="", cluster="RedisConnection.cstr", file="JobHistoryRenderer.cs"];
m30_33 [label="Entry HangFire.Redis.States.ProcessingStateHandler.ProcessingStateHandler()", span="8-8", cluster="HangFire.Redis.States.ProcessingStateHandler.ProcessingStateHandler()", file="JobHistoryRenderer.cs"];
m30_32 [label="Entry HangFire.Redis.States.FailedStateHandler.FailedStateHandler()", span="8-8", cluster="HangFire.Redis.States.FailedStateHandler.FailedStateHandler()", file="JobHistoryRenderer.cs"];
m30_39 [label="HangFire.Redis.RedisStorage", span="", file="JobHistoryRenderer.cs"];
m31_10 [label="Entry HangFire.Storage.IMonitoringApi.GetStatistics()", span="27-27", cluster="HangFire.Storage.IMonitoringApi.GetStatistics()", file="JsonStats.cs"];
m31_12 [label="Entry CamelCasePropertyNamesContractResolver.cstr", span="", cluster="CamelCasePropertyNamesContractResolver.cstr", file="JsonStats.cs"];
m31_9 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="JsonStats.cs"];
m31_13 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="JsonStats.cs"];
m31_0 [label="Entry HangFire.Web.JsonStats.ProcessRequest()", span="24-24", cluster="HangFire.Web.JsonStats.ProcessRequest()", file="JsonStats.cs"];
m31_1 [label="var monitoring = JobStorage.Current.GetMonitoringApi()", span="26-26", cluster="HangFire.Web.JsonStats.ProcessRequest()", file="JsonStats.cs"];
m31_2 [label="var response = monitoring.GetStatistics()", span="27-27", cluster="HangFire.Web.JsonStats.ProcessRequest()", file="JsonStats.cs"];
m31_3 [label="var settings = new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n            }", span="30-33", cluster="HangFire.Web.JsonStats.ProcessRequest()", file="JsonStats.cs"];
m31_4 [label="var serialized = JsonConvert.SerializeObject(response, settings)", span="34-34", cluster="HangFire.Web.JsonStats.ProcessRequest()", file="JsonStats.cs"];
m31_5 [label="Response.ContentType = ''application/json''", span="36-36", cluster="HangFire.Web.JsonStats.ProcessRequest()", color=red, community=0, file="JsonStats.cs"];
m31_7 [label="Response.Write(serialized)", span="38-38", cluster="HangFire.Web.JsonStats.ProcessRequest()", color=red, community=0, file="JsonStats.cs"];
m31_6 [label="Response.ContentEncoding = Encoding.UTF8", span="37-37", cluster="HangFire.Web.JsonStats.ProcessRequest()", color=red, community=0, file="JsonStats.cs"];
m31_8 [label="Exit HangFire.Web.JsonStats.ProcessRequest()", span="24-24", cluster="HangFire.Web.JsonStats.ProcessRequest()", file="JsonStats.cs"];
m31_11 [label="Entry JsonSerializerSettings.cstr", span="", cluster="JsonSerializerSettings.cstr", file="JsonStats.cs"];
m31_14 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="JsonStats.cs"];
m31_15 [label="HangFire.Web.JsonStats", span="", file="JsonStats.cs"];
m33_220 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", span="275-275", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="LayoutPage.generated.cs"];
m33_221 [label="_process.Setup(x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true))\r\n                .Throws(new Exception())", span="278-279", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="LayoutPage.generated.cs"];
m33_222 [label="var stateMachine = CreateStateMachine()", span="281-281", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="LayoutPage.generated.cs"];
m33_223 [label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="284-284", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="LayoutPage.generated.cs"];
m33_224 [label="_process.Verify(x => x.ApplyState(_transaction.Object, It.IsNotNull<ApplyStateContext>(), false))", span="287-287", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="LayoutPage.generated.cs"];
m33_225 [label="Assert.False(result)", span="289-289", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="LayoutPage.generated.cs"];
m33_226 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", span="275-275", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="LayoutPage.generated.cs"];
m33_29 [label="x.Name", span="32-32", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_253 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", span="319-319", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="LayoutPage.generated.cs"];
m33_254 [label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = null,\r\n                    LoadException = new JobLoadException(''asd'', new Exception())\r\n                })", span="322-328", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="LayoutPage.generated.cs"];
m33_255 [label="_state.Setup(x => x.IgnoreJobLoadException).Returns(true)", span="330-330", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="LayoutPage.generated.cs"];
m33_256 [label="var stateMachine = CreateStateMachine()", span="332-332", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="LayoutPage.generated.cs"];
m33_257 [label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="335-335", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="LayoutPage.generated.cs"];
m33_258 [label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object),\r\n                true))", span="338-341", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="LayoutPage.generated.cs"];
m33_259 [label="Assert.True(result)", span="343-343", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="LayoutPage.generated.cs"];
m33_260 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", span="319-319", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="LayoutPage.generated.cs"];
m33_101 [label="var stateMachine = CreateStateMachine()", span="125-125", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="LayoutPage.generated.cs"];
m33_103 [label="_connection.Verify(x => x.CreateExpiredJob(\r\n				job,\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>()))", span="129-133", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="LayoutPage.generated.cs"];
m33_110 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="LayoutPage.generated.cs"];
m33_106 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="LayoutPage.generated.cs"];
m33_102 [label="stateMachine.CreateJob(job, _parameters, _state.Object)", span="127-127", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="LayoutPage.generated.cs"];
m33_104 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", span="120-120", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="LayoutPage.generated.cs"];
m33_109 [label="Exit lambda expression", span="122-122", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_105 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="LayoutPage.generated.cs"];
m33_108 [label="Console.WriteLine(''SomeString'')", span="122-122", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_107 [label="Entry lambda expression", span="122-122", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_111 [label="Entry lambda expression", span="129-133", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_0 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="25-25", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="LayoutPage.generated.cs"];
m33_1 [label="_process = new Mock<IStateChangeProcess>()", span="27-27", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="LayoutPage.generated.cs"];
m33_2 [label="_job = Job.FromExpression(() => Console.WriteLine())", span="29-29", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="LayoutPage.generated.cs"];
m33_3 [label="_parameters = new Dictionary<string, string>()", span="30-30", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="LayoutPage.generated.cs"];
m33_4 [label="_state = new Mock<IState>()", span="31-31", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="LayoutPage.generated.cs"];
m33_5 [label="_state.Setup(x => x.Name).Returns(StateName)", span="32-32", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="LayoutPage.generated.cs"];
m33_6 [label="_connection = new Mock<IStorageConnection>()", span="34-34", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="LayoutPage.generated.cs"];
m33_7 [label="_transaction = new Mock<IWriteOnlyTransaction>()", span="35-35", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="LayoutPage.generated.cs"];
m33_8 [label="_connection.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="37-37", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="LayoutPage.generated.cs"];
m33_9 [label="_connection.Setup(x => x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>())).Returns(JobId)", span="39-43", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="LayoutPage.generated.cs"];
m33_10 [label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = _job\r\n                })", span="45-50", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="LayoutPage.generated.cs"];
m33_11 [label="_distributedLock = new Mock<IDisposable>()", span="52-52", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="LayoutPage.generated.cs"];
m33_12 [label="_connection\r\n                .Setup(x => x.AcquireDistributedLock(String.Format(''job:{0}:state-lock'', JobId), It.IsAny<TimeSpan>()))\r\n                .Returns(_distributedLock.Object)", span="53-55", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="LayoutPage.generated.cs"];
m33_13 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="25-25", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="LayoutPage.generated.cs"];
m33_57 [label="testRunner.And(''a job in the \'Old\' state with registered descriptor'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="125-125", cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="LayoutPage.generated.cs"];
m33_201 [label="this.ScenarioSetup(scenarioInfo)", span="469-469", cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="LayoutPage.generated.cs"];
m33_141 [label="Entry HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", span="329-329", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="LayoutPage.generated.cs"];
m33_23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63", cluster="HangFire.Tests.StateMachineFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="LayoutPage.generated.cs"];
m33_168 [label="testRunner.And(''a state changing filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="390-390", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", file="LayoutPage.generated.cs"];
m33_169 [label="testRunner.When(''I change the state of the \'unexisting\' job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="392-392", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", file="LayoutPage.generated.cs"];
m33_170 [label="testRunner.Then(''changing filters should not be executed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="394-394", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", file="LayoutPage.generated.cs"];
m33_171 [label="this.ScenarioCleanup()", span="396-396", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", file="LayoutPage.generated.cs"];
m33_172 [label="Exit HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", span="382-382", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", file="LayoutPage.generated.cs"];
m33_173 [label="Entry HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", span="404-404", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="LayoutPage.generated.cs"];
m33_22 [label="Entry HangFire.Tests.StateMachineFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.StateMachineFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="LayoutPage.generated.cs"];
m33_40 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_80 [label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="176-176", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="LayoutPage.generated.cs"];
m33_62 [label="Entry lambda expression", span="71-71", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_67 [label="var result = stateMachine.Process", span="81-81", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", color=green, community=0, file="LayoutPage.generated.cs"];
m33_66 [label="var stateMachine = CreateStateMachine()", span="79-79", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", file="LayoutPage.generated.cs", color=red, community=0];
m33_68 [label="Assert.Same(_process.Object, result)", span="83-83", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", file="LayoutPage.generated.cs"];
m33_64 [label="Exit lambda expression", span="71-71", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_71 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="LayoutPage.generated.cs"];
m33_65 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", span="77-77", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", file="LayoutPage.generated.cs"];
m33_69 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", span="77-77", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", file="LayoutPage.generated.cs"];
m33_70 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="412-412", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="LayoutPage.generated.cs"];
m33_63 [label="new StateMachine(_connection.Object, null)", span="71-71", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_72 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="87-87", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="LayoutPage.generated.cs"];
m33_133 [label="testRunner.Then(''the job state should be changed to \'AnotherTest\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="307-307", cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="LayoutPage.generated.cs"];
m33_134 [label="testRunner.And(''the \'Test\' state should not be applied to the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="309-309", cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="LayoutPage.generated.cs"];
m33_135 [label="testRunner.And(''the \'AnotherTest\' state should be applied to the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="311-311", cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="LayoutPage.generated.cs"];
m33_136 [label="TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="313-315", cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="LayoutPage.generated.cs"];
m33_137 [label="table5.AddRow(new string[] {\r\n                        ''State'',\r\n                        ''AnotherTest''})", span="316-318", cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="LayoutPage.generated.cs"];
m33_43 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="LayoutPage.generated.cs"];
m33_97 [label="testRunner.Then(''the last history entry should contain all of the above properties'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="222-222", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="LayoutPage.generated.cs"];
m33_58 [label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="127-127", cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="LayoutPage.generated.cs"];
m33_59 [label="testRunner.Then(''the old state should be unapplied'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="129-129", cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="LayoutPage.generated.cs"];
m33_60 [label="this.ScenarioCleanup()", span="131-131", cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="LayoutPage.generated.cs"];
m33_61 [label="Exit HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", span="117-117", cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="LayoutPage.generated.cs"];
m33_21 [label="Entry Mock<IWriteOnlyTransaction>.cstr", span="", cluster="Mock<IWriteOnlyTransaction>.cstr", file="LayoutPage.generated.cs"];
m33_199 [label="_process.Verify(\r\n                x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>()),\r\n                Times.Never)", span="251-253", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="LayoutPage.generated.cs"];
m33_209 [label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>())", span="252-252", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_205 [label="Entry lambda expression", span="249-249", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_200 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", span="236-236", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="LayoutPage.generated.cs"];
m33_202 [label="Entry lambda expression", span="239-239", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_208 [label="Entry lambda expression", span="252-252", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_203 [label="x.GetJobData(It.IsAny<string>())", span="239-239", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_204 [label="Exit lambda expression", span="239-239", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_206 [label="x.GetJobData(JobId)", span="249-249", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_207 [label="Exit lambda expression", span="249-249", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_210 [label="Exit lambda expression", span="252-252", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_301 [label="Entry Unk.ElectState", span="", cluster="Unk.ElectState", file="LayoutPage.generated.cs"];
m33_41 [label="x.GetJobData(JobId)", span="45-45", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_182 [label="Exit HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", span="404-404", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="LayoutPage.generated.cs"];
m33_183 [label="Entry HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", span="429-429", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="LayoutPage.generated.cs"];
m33_184 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State applied filters should be executed in the order they were defined'', ((string[])(null)))", span="431-431", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="LayoutPage.generated.cs"];
m33_185 [label="this.ScenarioSetup(scenarioInfo)", span="433-433", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="LayoutPage.generated.cs"];
m33_186 [label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="435-435", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="LayoutPage.generated.cs"];
m33_164 [label="Entry lambda expression", span="197-197", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_166 [label="Exit lambda expression", span="197-197", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_165 [label="x.Dispose()", span="197-197", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_167 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="LayoutPage.generated.cs"];
m33_117 [label="testRunner.And(''a state changing filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="271-271", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="LayoutPage.generated.cs"];
m33_118 [label="testRunner.And(''a state changing filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="273-273", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="LayoutPage.generated.cs"];
m33_119 [label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="275-275", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="LayoutPage.generated.cs"];
m33_120 [label="TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="277-278", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="LayoutPage.generated.cs"];
m33_121 [label="table4.AddRow(new string[] {\r\n                        ''first''})", span="279-280", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="LayoutPage.generated.cs"];
m33_126 [label="Entry lambda expression", span="145-146", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_128 [label="Exit lambda expression", span="145-146", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_139 [label="stateMachine.ChangeState(null, _state.Object, FromOldState)", span="163-163", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_132 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", span="151-151", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", file="LayoutPage.generated.cs"];
m33_127 [label="sc.JobId == JobId && sc.Job == _job\r\n                    && sc.NewState == _state.Object && sc.OldStateName == null", span="145-146", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_129 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", span="151-151", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", file="LayoutPage.generated.cs"];
m33_138 [label="Entry lambda expression", span="163-163", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_130 [label="var stateMachine = CreateStateMachine()", span="153-153", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", file="LayoutPage.generated.cs"];
m33_131 [label="Assert.Equal(JobId, stateMachine.CreateJob(_job, _parameters, _state.Object))", span="154-154", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", file="LayoutPage.generated.cs"];
m33_140 [label="Exit lambda expression", span="163-163", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_44 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_46 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_51 [label="Assert.Equal(''connection'', exception.ParamName)", span="64-64", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="LayoutPage.generated.cs"];
m33_49 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="59-59", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="LayoutPage.generated.cs"];
m33_45 [label="x.AcquireDistributedLock(String.Format(''job:{0}:state-lock'', JobId), It.IsAny<TimeSpan>())", span="54-54", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_47 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="LayoutPage.generated.cs"];
m33_50 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(null, _process.Object))", span="61-62", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="LayoutPage.generated.cs"];
m33_48 [label="Entry Unk.AcquireDistributedLock", span="", cluster="Unk.AcquireDistributedLock", file="LayoutPage.generated.cs"];
m33_52 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="59-59", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="LayoutPage.generated.cs"];
m33_74 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateJob(null, _parameters, _state.Object))", span="91-92", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="LayoutPage.generated.cs"];
m33_211 [label="HangFire.Tests.StateMachineFeature", span="", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="LayoutPage.generated.cs"];
m33_212 [label="var stateMachine = CreateStateMachine()", span="260-260", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="LayoutPage.generated.cs"];
m33_213 [label="var result = stateMachine.ChangeState(\r\n                JobId, _state.Object, new [] { ''AnotherState'' })", span="263-264", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="LayoutPage.generated.cs"];
m33_214 [label="Assert.False(result)", span="267-267", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="LayoutPage.generated.cs"];
m33_215 [label="_process.Verify(\r\n                x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>()),\r\n                Times.Never)", span="269-271", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="LayoutPage.generated.cs"];
m33_216 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="257-257", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="LayoutPage.generated.cs"];
m33_81 [label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="178-180", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="LayoutPage.generated.cs"];
m33_82 [label="table2.AddRow(new string[] {\r\n                        ''CreatedAt'',\r\n                        ''<UtcNow timestamp>''})", span="181-183", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="LayoutPage.generated.cs"];
m33_83 [label="table2.AddRow(new string[] {\r\n                        ''State'',\r\n                        ''Test''})", span="184-186", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="LayoutPage.generated.cs"];
m33_84 [label="table2.AddRow(new string[] {\r\n                        ''Reason'',\r\n                        ''SomeReason''})", span="187-189", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="LayoutPage.generated.cs"];
m33_85 [label="testRunner.Then(''the last history entry should contain the following items:'', ((string)(null)), table2, ''Then '')", span="191-191", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="LayoutPage.generated.cs"];
m33_326 [label="Entry lambda expression", span="406-406", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_24 [label="Exit HangFire.Tests.StateMachineFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.StateMachineFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="LayoutPage.generated.cs"];
m33_28 [label="Exit HangFire.Tests.StateMachineFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.StateMachineFeature.ScenarioCleanup()", file="LayoutPage.generated.cs"];
m33_31 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The state of the job should be changed'', ((string[])(null)))", span="77-77", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="LayoutPage.generated.cs"];
m33_35 [label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="85-85", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="LayoutPage.generated.cs"];
m33_25 [label="Entry Unk.OnScenarioStart", span="", cluster="Unk.OnScenarioStart", file="LayoutPage.generated.cs"];
m33_26 [label="Entry HangFire.Tests.StateMachineFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.StateMachineFeature.ScenarioCleanup()", file="LayoutPage.generated.cs"];
m33_30 [label="Entry HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", span="75-75", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="LayoutPage.generated.cs"];
m33_32 [label="this.ScenarioSetup(scenarioInfo)", span="79-79", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="LayoutPage.generated.cs", color=green, community=0];
m33_33 [label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="81-81", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="LayoutPage.generated.cs"];
m33_36 [label="testRunner.Then(''the job state should be changed to \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="87-87", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="LayoutPage.generated.cs"];
m33_37 [label="this.ScenarioCleanup()", span="89-89", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="LayoutPage.generated.cs"];
m33_42 [label="Entry Unk.When", span="", cluster="Unk.When", file="LayoutPage.generated.cs"];
m33_54 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''An old state should be unapplied'', ((string[])(null)))", span="119-119", cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="LayoutPage.generated.cs"];
m33_55 [label="this.ScenarioSetup(scenarioInfo)", span="121-121", cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="LayoutPage.generated.cs"];
m33_56 [label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="123-123", cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="LayoutPage.generated.cs"];
m33_78 [label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="172-172", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="LayoutPage.generated.cs"];
m33_77 [label="this.ScenarioSetup(scenarioInfo)", span="170-170", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="LayoutPage.generated.cs"];
m33_79 [label="testRunner.And(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="174-174", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="LayoutPage.generated.cs"];
m33_87 [label="Exit HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", span="166-166", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="LayoutPage.generated.cs"];
m33_86 [label="this.ScenarioCleanup()", span="193-193", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="LayoutPage.generated.cs"];
m33_88 [label="Entry HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", span="200-200", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="LayoutPage.generated.cs"];
m33_95 [label="testRunner.And(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="218-218", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="LayoutPage.generated.cs"];
m33_94 [label="testRunner.Given(''a \'Test\' state with the following properties:'', ((string)(null)), table3, ''Given '')", span="216-216", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="LayoutPage.generated.cs"];
m33_96 [label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="220-220", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="LayoutPage.generated.cs"];
m33_112 [label="Entry HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", span="261-261", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="LayoutPage.generated.cs"];
m33_113 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State changing filters should be executed in the order they were defined'', ((string[])(null)))", span="263-263", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="LayoutPage.generated.cs"];
m33_114 [label="this.ScenarioSetup(scenarioInfo)", span="265-265", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="LayoutPage.generated.cs"];
m33_115 [label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="267-267", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="LayoutPage.generated.cs"];
m33_116 [label="testRunner.And(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="269-269", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="LayoutPage.generated.cs"];
m33_122 [label="table4.AddRow(new string[] {\r\n                        ''second''})", span="281-282", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="LayoutPage.generated.cs"];
m33_123 [label="testRunner.Then(''changing filters should be executed in the following order:'', ((string)(null)), table4, ''Then '')", span="284-284", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="LayoutPage.generated.cs"];
m33_124 [label="this.ScenarioCleanup()", span="286-286", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="LayoutPage.generated.cs"];
m33_148 [label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="343-343", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="LayoutPage.generated.cs"];
m33_147 [label="testRunner.And(''a state changing filter \'second\' that changes the state to the \'YetAnotherTest\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="341-341", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="LayoutPage.generated.cs"];
m33_149 [label="TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''State''})", span="345-346", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="LayoutPage.generated.cs"];
m33_157 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The state of the unexisting job should not be changed'', ((string[])(null)))", span="365-365", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="LayoutPage.generated.cs"];
m33_156 [label="Entry HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", span="363-363", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="LayoutPage.generated.cs"];
m33_158 [label="this.ScenarioSetup(scenarioInfo)", span="367-367", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="LayoutPage.generated.cs"];
m33_175 [label="this.ScenarioSetup(scenarioInfo)", span="409-409", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="LayoutPage.generated.cs"];
m33_176 [label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="411-411", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="LayoutPage.generated.cs"];
m33_177 [label="testRunner.And(''a job in the \'Old\' state with registered descriptor'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="413-413", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="LayoutPage.generated.cs"];
m33_178 [label="testRunner.And(''a state changing filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="415-415", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="LayoutPage.generated.cs"];
m33_179 [label="testRunner.When(''I change the state of the job to the \'Test\' allowing only transition from the \'En'' +\r\n                    ''queued\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="417-418", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="LayoutPage.generated.cs"];
m33_180 [label="testRunner.Then(''changing filters should not be executed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="420-420", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="LayoutPage.generated.cs"];
m33_187 [label="testRunner.And(''a job in the \'Old\' state with registered descriptor'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="437-437", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="LayoutPage.generated.cs"];
m33_188 [label="testRunner.And(''a state applied filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="439-439", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="LayoutPage.generated.cs"];
m33_189 [label="testRunner.And(''a state applied filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="441-441", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="LayoutPage.generated.cs"];
m33_190 [label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="443-443", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="LayoutPage.generated.cs"];
m33_191 [label="TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="445-446", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="LayoutPage.generated.cs"];
m33_192 [label="table7.AddRow(new string[] {\r\n                        ''first::OnStateUnapplied''})", span="447-448", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="LayoutPage.generated.cs"];
m33_217 [label="Entry lambda expression", span="270-270", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_218 [label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>())", span="270-270", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_219 [label="Exit lambda expression", span="270-270", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_229 [label="Entry lambda expression", span="278-278", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_232 [label="Entry lambda expression", span="287-287", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_230 [label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true)", span="278-278", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_231 [label="Exit lambda expression", span="278-278", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_233 [label="x.ApplyState(_transaction.Object, It.IsNotNull<ApplyStateContext>(), false)", span="287-287", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_234 [label="Exit lambda expression", span="287-287", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_244 [label="Entry lambda expression", span="296-296", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_247 [label="Entry lambda expression", span="310-313", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_245 [label="x.GetJobData(JobId)", span="296-296", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_246 [label="Exit lambda expression", span="296-296", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_248 [label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.JobId == JobId && ctx.Job == null && ctx.NewState is FailedState),\r\n                true)", span="310-313", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_249 [label="Exit lambda expression", span="310-313", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_250 [label="Entry lambda expression", span="312-312", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_251 [label="ctx.JobId == JobId && ctx.Job == null && ctx.NewState is FailedState", span="312-312", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_252 [label="Exit lambda expression", span="312-312", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_261 [label="Entry lambda expression", span="322-322", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_264 [label="Entry lambda expression", span="330-330", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_267 [label="Entry lambda expression", span="338-341", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_262 [label="x.GetJobData(JobId)", span="322-322", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_263 [label="Exit lambda expression", span="322-322", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_265 [label="x.IgnoreJobLoadException", span="330-330", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_266 [label="Exit lambda expression", span="330-330", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_268 [label="x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object),\r\n                true)", span="338-341", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_269 [label="Exit lambda expression", span="338-341", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_270 [label="Entry lambda expression", span="340-340", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_271 [label="ctx.NewState == _state.Object", span="340-340", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_272 [label="Exit lambda expression", span="340-340", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_280 [label="Entry lambda expression", span="356-360", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_286 [label="Entry lambda expression", span="362-362", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_281 [label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object && ctx.OldStateName == OldStateName\r\n                    && ctx.Job == _job && ctx.JobId == JobId),\r\n                true)", span="356-360", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_282 [label="Exit lambda expression", span="356-360", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_283 [label="Entry lambda expression", span="358-359", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_284 [label="ctx.NewState == _state.Object && ctx.OldStateName == OldStateName\r\n                    && ctx.Job == _job && ctx.JobId == JobId", span="358-359", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_285 [label="Exit lambda expression", span="358-359", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_287 [label="x.Commit()", span="362-362", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_288 [label="Exit lambda expression", span="362-362", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_303 [label="context.CandidateState = anotherState.Object", span="374-374", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_306 [label="x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == anotherState.Object),\r\n                true)", span="382-385", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_309 [label="ctx.NewState == anotherState.Object", span="384-384", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_298 [label="Entry lambda expression", span="373-373", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_302 [label="Entry lambda expression", span="374-374", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_305 [label="Entry lambda expression", span="382-385", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_299 [label="x.ElectState(_connection.Object, It.IsAny<ElectStateContext>())", span="373-373", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_300 [label="Exit lambda expression", span="373-373", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_304 [label="Exit lambda expression", span="374-374", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_307 [label="Exit lambda expression", span="382-385", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_308 [label="Entry lambda expression", span="384-384", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_310 [label="Exit lambda expression", span="384-384", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_324 [label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState is FailedState && ((FailedState)ctx.NewState).Exception == exception),\r\n                false)", span="404-407", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_327 [label="ctx.NewState is FailedState && ((FailedState)ctx.NewState).Exception == exception", span="406-406", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_320 [label="Entry lambda expression", span="395-395", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_323 [label="Entry lambda expression", span="404-407", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_321 [label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true)", span="395-395", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_322 [label="Exit lambda expression", span="395-395", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_325 [label="Exit lambda expression", span="404-407", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_328 [label="Exit lambda expression", span="406-406", cluster="lambda expression", file="LayoutPage.generated.cs"];
m33_143 [label="var stateMachine = CreateStateMachine()", span="171-171", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="LayoutPage.generated.cs"];
m33_154 [label="Assert.Equal(''fromStates'', exception.ParamName)", span="187-187", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="LayoutPage.generated.cs"];
m33_142 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", span="169-169", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="LayoutPage.generated.cs"];
m33_144 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.ChangeState(JobId, null, FromOldState))", span="173-174", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="LayoutPage.generated.cs"];
m33_153 [label="var exception = Assert.Throws<ArgumentException>(\r\n                () => stateMachine.ChangeState(JobId, _state.Object, new string[0]))", span="184-185", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="LayoutPage.generated.cs"];
m33_145 [label="Assert.Equal(''toState'', exception.ParamName)", span="176-176", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="LayoutPage.generated.cs"];
m33_146 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", span="169-169", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="LayoutPage.generated.cs"];
m33_152 [label="var stateMachine = CreateStateMachine()", span="182-182", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="LayoutPage.generated.cs"];
m33_150 [label="Entry Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="64-64", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="LayoutPage.generated.cs"];
m33_151 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", span="180-180", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="LayoutPage.generated.cs"];
m33_155 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", span="180-180", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="LayoutPage.generated.cs"];
m33_289 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="LayoutPage.generated.cs"];
m33_297 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="LayoutPage.generated.cs"];
m33_19 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="LayoutPage.generated.cs"];
m33_181 [label="this.ScenarioCleanup()", span="422-422", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="LayoutPage.generated.cs"];
m33_15 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="LayoutPage.generated.cs"];
m33_27 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="LayoutPage.generated.cs"];
m33_17 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="LayoutPage.generated.cs"];
m33_125 [label="Entry Unk.ApplyState", span="", cluster="Unk.ApplyState", file="LayoutPage.generated.cs"];
m33_53 [label="Entry HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", span="117-117", cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="LayoutPage.generated.cs"];
m33_227 [label="Entry System.Exception.Exception()", span="0-0", cluster="System.Exception.Exception()", file="LayoutPage.generated.cs"];
m33_197 [label="Assert.False(result)", span="248-248", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="LayoutPage.generated.cs"];
m33_196 [label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="245-245", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="LayoutPage.generated.cs"];
m33_195 [label="var stateMachine = CreateStateMachine()", span="242-242", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="LayoutPage.generated.cs"];
m33_193 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", span="236-236", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="LayoutPage.generated.cs"];
m33_194 [label="_connection.Setup(x => x.GetJobData(It.IsAny<string>()))\r\n                .Returns((JobData)null)", span="239-240", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="LayoutPage.generated.cs"];
m33_198 [label="_connection.Verify(x => x.GetJobData(JobId))", span="249-249", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="LayoutPage.generated.cs"];
m33_243 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="LayoutPage.generated.cs"];
m33_89 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the job history record and the state entry should contain the state properties'', ((string[])(null)))", span="202-202", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="LayoutPage.generated.cs"];
m33_90 [label="this.ScenarioSetup(scenarioInfo)", span="204-204", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="LayoutPage.generated.cs"];
m33_91 [label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="206-208", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="LayoutPage.generated.cs"];
m33_92 [label="table3.AddRow(new string[] {\r\n                        ''Server'',\r\n                        ''TestServer''})", span="209-211", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="LayoutPage.generated.cs"];
m33_93 [label="table3.AddRow(new string[] {\r\n                        ''Worker'',\r\n                        ''#3''})", span="212-214", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="LayoutPage.generated.cs"];
m33_159 [label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="369-369", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="LayoutPage.generated.cs"];
m33_160 [label="testRunner.When(''I change the state of the \'unexisting\' job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="371-371", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="LayoutPage.generated.cs"];
m33_161 [label="testRunner.Then(''the \'Test\' state should not be applied to the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="373-373", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="LayoutPage.generated.cs"];
m33_162 [label="this.ScenarioCleanup()", span="375-375", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="LayoutPage.generated.cs"];
m33_163 [label="Exit HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", span="363-363", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="LayoutPage.generated.cs"];
m33_319 [label="Entry System.NotSupportedException.NotSupportedException()", span="0-0", cluster="System.NotSupportedException.NotSupportedException()", file="LayoutPage.generated.cs"];
m33_329 [label="return new StateMachine(\r\n                _connection.Object,\r\n                _process.Object);", span="414-416", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="LayoutPage.generated.cs"];
m33_330 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="412-412", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="LayoutPage.generated.cs"];
m33_18 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="LayoutPage.generated.cs"];
m33_311 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", span="389-389", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="LayoutPage.generated.cs"];
m33_312 [label="var exception = new NotSupportedException()", span="392-392", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="LayoutPage.generated.cs"];
m33_313 [label="_process.Setup(\r\n                x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true))\r\n                .Throws(exception)", span="394-396", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="LayoutPage.generated.cs"];
m33_316 [label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState is FailedState && ((FailedState)ctx.NewState).Exception == exception),\r\n                false))", span="404-407", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="LayoutPage.generated.cs"];
m33_314 [label="var machine = CreateStateMachine()", span="398-398", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="LayoutPage.generated.cs"];
m33_315 [label="var result = machine.ChangeState(JobId, _state.Object, new[] { OldStateName })", span="401-401", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="LayoutPage.generated.cs"];
m33_317 [label="Assert.False(result)", span="409-409", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="LayoutPage.generated.cs"];
m33_318 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", span="389-389", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="LayoutPage.generated.cs"];
m33_39 [label="Entry Unk.CreateExpiredJob", span="", cluster="Unk.CreateExpiredJob", file="LayoutPage.generated.cs"];
m33_99 [label="var job = Job.FromExpression(() => Console.WriteLine(''SomeString''))", span="122-122", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="LayoutPage.generated.cs"];
m33_98 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", span="120-120", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="LayoutPage.generated.cs"];
m33_100 [label="_parameters.Add(''Name'', ''Value'')", span="123-123", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="LayoutPage.generated.cs"];
m33_242 [label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="33-33", cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="LayoutPage.generated.cs"];
m33_174 [label="Entry Unk.True", span="", cluster="Unk.True", file="LayoutPage.generated.cs"];
m33_34 [label="Entry Unk.CreateWriteTransaction", span="", cluster="Unk.CreateWriteTransaction", file="LayoutPage.generated.cs"];
m33_38 [label="Entry Unk.>", span="", cluster="Unk.>", file="LayoutPage.generated.cs"];
m33_273 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", span="347-347", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="LayoutPage.generated.cs"];
m33_274 [label="var machine = CreateStateMachine()", span="350-350", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="LayoutPage.generated.cs"];
m33_275 [label="var result = machine.ChangeState(JobId, _state.Object, new[] { OldStateName })", span="353-353", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="LayoutPage.generated.cs"];
m33_276 [label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object && ctx.OldStateName == OldStateName\r\n                    && ctx.Job == _job && ctx.JobId == JobId),\r\n                true))", span="356-360", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="LayoutPage.generated.cs"];
m33_278 [label="Assert.True(result)", span="364-364", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="LayoutPage.generated.cs"];
m33_277 [label="_transaction.Verify(x => x.Commit())", span="362-362", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="LayoutPage.generated.cs"];
m33_279 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", span="347-347", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="LayoutPage.generated.cs"];
m33_14 [label="Entry Mock<IStateChangeProcess>.cstr", span="", cluster="Mock<IStateChangeProcess>.cstr", file="LayoutPage.generated.cs"];
m33_16 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="LayoutPage.generated.cs"];
m33_75 [label="Assert.Equal(''job'', exception.ParamName)", span="94-94", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="LayoutPage.generated.cs"];
m33_76 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="87-87", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="LayoutPage.generated.cs"];
m33_228 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="LayoutPage.generated.cs"];
m33_73 [label="Entry TechTalk.SpecFlow.Table.cstr", span="", cluster="TechTalk.SpecFlow.Table.cstr", file="LayoutPage.generated.cs"];
m33_290 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", span="368-368", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="LayoutPage.generated.cs"];
m33_291 [label="var anotherState = new Mock<IState>()", span="371-371", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="LayoutPage.generated.cs"];
m33_292 [label="_process.Setup(x => x.ElectState(_connection.Object, It.IsAny<ElectStateContext>()))\r\n                .Callback((IStorageConnection connection, ElectStateContext context) => context.CandidateState = anotherState.Object)", span="373-374", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="LayoutPage.generated.cs"];
m33_295 [label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == anotherState.Object),\r\n                true))", span="382-385", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="LayoutPage.generated.cs"];
m33_293 [label="var machine = CreateStateMachine()", span="376-376", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="LayoutPage.generated.cs"];
m33_294 [label="machine.ChangeState(JobId, _state.Object, new[] { OldStateName })", span="379-379", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="LayoutPage.generated.cs"];
m33_296 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", span="368-368", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="LayoutPage.generated.cs"];
m33_235 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="293-293", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="LayoutPage.generated.cs"];
m33_236 [label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = null,\r\n                    LoadException = new JobLoadException(''asd'', new InvalidOperationException())\r\n                })", span="296-302", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="LayoutPage.generated.cs"];
m33_237 [label="var stateMachine = CreateStateMachine()", span="304-304", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="LayoutPage.generated.cs"];
m33_238 [label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="307-307", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="LayoutPage.generated.cs"];
m33_239 [label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.JobId == JobId && ctx.Job == null && ctx.NewState is FailedState),\r\n                true))", span="310-313", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="LayoutPage.generated.cs"];
m33_240 [label="Assert.False(result)", span="315-315", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="LayoutPage.generated.cs"];
m33_241 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="293-293", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="LayoutPage.generated.cs"];
m33_20 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="LayoutPage.generated.cs"];
m33_331 [label="Hangfire.Core.Tests.States.StateMachineFacts", span="", file="LayoutPage.generated.cs"];
m33_332 [label=stateMachine, span="", file="LayoutPage.generated.cs"];
m33_333 [label=stateMachine, span="", file="LayoutPage.generated.cs"];
m33_334 [label=stateMachine, span="", file="LayoutPage.generated.cs"];
m33_335 [label=job, span="", file="LayoutPage.generated.cs"];
m33_336 [label=stateMachine, span="", file="LayoutPage.generated.cs"];
m33_337 [label=stateMachine, span="", file="LayoutPage.generated.cs"];
m33_338 [label=stateMachine, span="", file="LayoutPage.generated.cs"];
m33_339 [label=anotherState, span="", file="LayoutPage.generated.cs"];
m33_340 [label=exception, span="", file="LayoutPage.generated.cs"];
m34_17 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="LinkHelper.cs"];
m34_21 [label="Entry Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", span="89-89", cluster="Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", file="LinkHelper.cs"];
m34_22 [label="String.IsNullOrWhiteSpace(name)", span="91-91", cluster="Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", file="LinkHelper.cs"];
m34_24 [label="return _parameters.ContainsKey(name)\r\n                    ? JobHelper.FromJson<T>(_parameters[name])\r\n                    : default(T);", span="95-97", cluster="Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", file="LinkHelper.cs"];
m34_26 [label="throw new InvalidOperationException(String.Format(\r\n                    ''Could not get a value of the job parameter `{0}`. See inner exception for details.'',\r\n                    name), ex);", span="101-103", cluster="Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", file="LinkHelper.cs"];
m34_23 [label="throw new ArgumentNullException(''name'');", span="91-91", cluster="Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", file="LinkHelper.cs"];
m34_25 [label=Exception, span="99-99", cluster="Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", file="LinkHelper.cs"];
m34_27 [label="Exit Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", span="89-89", cluster="Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", file="LinkHelper.cs"];
m34_29 [label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="LinkHelper.cs"];
m34_28 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="LinkHelper.cs"];
m34_30 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="LinkHelper.cs"];
m34_16 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="LinkHelper.cs"];
m34_19 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="LinkHelper.cs"];
m34_18 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="LinkHelper.cs"];
m34_0 [label="Entry Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="32-32", cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="LinkHelper.cs"];
m34_1 [label="Exit Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="32-32", cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="LinkHelper.cs"];
m34_8 [label="Entry Hangfire.Client.CreatingContext.SetJobParameter(string, object)", span="61-61", cluster="Hangfire.Client.CreatingContext.SetJobParameter(string, object)", file="LinkHelper.cs"];
m34_9 [label="String.IsNullOrWhiteSpace(name)", span="63-63", cluster="Hangfire.Client.CreatingContext.SetJobParameter(string, object)", file="LinkHelper.cs"];
m34_11 [label="var serializedValue = JobHelper.ToJson(value)", span="65-65", cluster="Hangfire.Client.CreatingContext.SetJobParameter(string, object)", file="LinkHelper.cs"];
m34_12 [label="!_parameters.ContainsKey(name)", span="67-67", cluster="Hangfire.Client.CreatingContext.SetJobParameter(string, object)", file="LinkHelper.cs"];
m34_13 [label="_parameters.Add(name, serializedValue)", span="69-69", cluster="Hangfire.Client.CreatingContext.SetJobParameter(string, object)", file="LinkHelper.cs"];
m34_14 [label="_parameters[name] = serializedValue", span="73-73", cluster="Hangfire.Client.CreatingContext.SetJobParameter(string, object)", file="LinkHelper.cs"];
m34_10 [label="throw new ArgumentNullException(''name'');", span="63-63", cluster="Hangfire.Client.CreatingContext.SetJobParameter(string, object)", file="LinkHelper.cs"];
m34_15 [label="Exit Hangfire.Client.CreatingContext.SetJobParameter(string, object)", span="61-61", cluster="Hangfire.Client.CreatingContext.SetJobParameter(string, object)", file="LinkHelper.cs"];
m34_20 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="LinkHelper.cs"];
m34_5 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="LinkHelper.cs"];
m34_2 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="LinkHelper.cs"];
m34_3 [label="x.Key", span="41-41", cluster="lambda expression", color=red, community=0, file="LinkHelper.cs"];
m34_4 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="LinkHelper.cs"];
m34_6 [label="x.Value", span="41-41", cluster="lambda expression", color=red, community=0, file="LinkHelper.cs"];
m34_7 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="LinkHelper.cs"];
m34_31 [label="Hangfire.Client.CreatingContext", span="", file="LinkHelper.cs"];
m35_2 [label="Entry Hangfire.States.IStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext, bool)", span="23-23", cluster="Hangfire.States.IStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext, bool)", file="Pager.cs"];
m35_3 [label="Exit Hangfire.States.IStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext, bool)", span="23-23", cluster="Hangfire.States.IStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext, bool)", file="Pager.cs"];
m35_0 [label="Entry Hangfire.States.IStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", span="22-22", cluster="Hangfire.States.IStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="Pager.cs"];
m35_1 [label="Exit Hangfire.States.IStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", span="22-22", cluster="Hangfire.States.IStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="Pager.cs"];
m36_61 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="ProcessingJobsPage.generated.cs"];
m36_55 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="ProcessingJobsPage.generated.cs"];
m36_53 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ProcessingJobsPage.generated.cs"];
m36_0 [label="Entry HangFire.Web.Pages.ProcessingJobsPage.Execute()", span="47-47", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m36_1 [label="WriteLiteral(''\n'')", span="51-51", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_2 [label="Layout = new LayoutPage { Title = ''Processing Jobs'' }", span="62-62", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m36_4 [label="int.TryParse(Request.QueryString[''from''], out from)", span="66-66", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_3 [label="HangFire.Storage.Monitoring.FailedJobDto", span="", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m36_5 [label="int.TryParse(Request.QueryString[''count''], out perPage)", span="67-67", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_7 [label="Pager pager = new Pager(from, perPage, monitor.ProcessingCount())\n    {\n        BasePageUrl = Request.LinkTo(''/processing'')\n    }", span="70-73", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_6 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="69-69", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_8 [label="JobList<ProcessingJobDto> processingJobs = monitor\n        .ProcessingJobs(pager.FromRecord, pager.RecordsPerPage)", span="75-76", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m36_10 [label="pager.TotalPageCount == 0", span="87-87", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m36_17 [label="Write(RenderPartial(new PerPageSelector(pager)))", span="147-147", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_51 [label="Write(RenderPartial(new Paginator(pager)))", span="369-369", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_16 [label="WriteLiteral(@''''''\n                    data-loading-text=''''Deleting...''''\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\n                <span class=''''glyphicon glyphicon-remove''''></span>\n                Delete selected\n            </button>\n\n            '')", span="135-142", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_18 [label="WriteLiteral(@''\n        </div>\n\n        <table class=''''table''''>\n            <thead>\n                <tr>\n                    <th class=''''min-width''''>\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\n                    </th>\n                    <th class=''''min-width''''>Id</th>\n                    <th class=''''min-width''''>Server</th>\n                    <th>Job</th>\n                    <th class=''''align-right''''>Started</th>\n                </tr>\n            </thead>\n            <tbody>\n'')", span="152-168", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_50 [label="WriteLiteral(''            </tbody>\n        </table>\n    </div>\n'')", span="358-358", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_9 [label="WriteLiteral(''\n'')", span="82-82", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_11 [label="WriteLiteral(''    <div class=\''alert alert-info\''>\n        No jobs are being processed right now.'' +\r\n''\n    </div>\n'')", span="93-94", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_12 [label="WriteLiteral(''    <div class=\''js-jobs-list\''>\n        <div class=\''btn-toolbar btn-toolbar-top\''>\n'' +\r\n''            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\n        '' +\r\n''            data-url=\'''')", span="106-108", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_13 [label="Write(Request.LinkTo(''/processing/requeue''))", span="113-113", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_14 [label="WriteLiteral(@''''''\n                    data-loading-text=''''Enqueueing...''''>\n                <span class=''''glyphicon glyphicon-repeat''''></span>\n                Requeue jobs\n            </button>\n\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\n                    data-url='''''')", span="118-125", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_15 [label="Write(Request.LinkTo(''/processing/delete''))", span="130-130", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_19 [label=processingJobs, span="173-173", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m36_20 [label="WriteLiteral(''                    <tr class=\''js-jobs-list-row '')", span="179-179", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_21 [label="Write(!job.Value.InProcessingState ? ''obsolete-data'' : null)", span="184-184", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_22 [label="WriteLiteral('' '')", span="189-189", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_23 [label="Write(job.Value.InProcessingState ? ''hover'' : null)", span="194-194", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_24 [label="WriteLiteral(''\''>\n                        <td>\n'')", span="199-199", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_25 [label="job.Value.InProcessingState", span="204-204", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m36_26 [label="WriteLiteral(''                                <input type=\''checkbox\'' class=\''js-jobs-list-checkb'' +\r\n''ox\'' name=\''jobs[]\'' value=\'''')", span="210-211", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=1, file="ProcessingJobsPage.generated.cs"];
m36_27 [label="Write(job.Key)", span="216-216", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_29 [label="WriteLiteral(''                        </td>\n                        <td class=\''min-width\''>\n    '' +\r\n''                        <a href=\'''')", span="231-232", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_28 [label="WriteLiteral(''\'' />\n'')", span="221-221", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_30 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="237-237", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_31 [label="WriteLiteral(''\''>\n                                '')", span="242-242", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_32 [label="Write(HtmlHelper.JobId(job.Key))", span="247-247", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_33 [label="WriteLiteral(''\n                            </a>\n'')", span="252-252", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_34 [label="!job.Value.InProcessingState", span="257-257", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m36_35 [label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\n'')", span="263-264", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=1, file="ProcessingJobsPage.generated.cs"];
m36_36 [label="WriteLiteral(''                        </td>\n                        <td class=\''min-width\''>\n    '' +\r\n''                        '')", span="274-275", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_37 [label="Write(job.Value.ServerId.ToUpperInvariant())", span="280-280", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_38 [label="WriteLiteral(''\n                        </td>\n                        <td>\n                     '' +\r\n''       <a class=\''job-method\'' href=\'''')", span="285-286", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_39 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="291-291", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_40 [label="WriteLiteral(''\''>\n                                '')", span="296-296", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_41 [label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="301-301", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_42 [label="WriteLiteral(''\n                            </a>\n                        </td>\n                 '' +\r\n''       <td class=\''align-right\''>\n'')", span="306-307", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_43 [label="job.Value.StartedAt.HasValue", span="312-312", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m36_44 [label="WriteLiteral(''                                <span data-moment=\'''')", span="318-318", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_45 [label="Write(JobHelper.ToTimestamp(job.Value.StartedAt.Value))", span="323-323", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_49 [label="WriteLiteral(''                        </td>\n                    </tr>\n'')", span="348-348", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_48 [label="WriteLiteral(''\n                                </span>\n'')", span="338-338", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_46 [label="WriteLiteral(''\''>\n                                    '')", span="328-328", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_47 [label="Write(job.Value.StartedAt)", span="333-333", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m36_52 [label="Exit HangFire.Web.Pages.ProcessingJobsPage.Execute()", span="47-47", cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs"];
m36_56 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="ProcessingJobsPage.generated.cs"];
m36_68 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="40-40", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ProcessingJobsPage.generated.cs"];
m36_66 [label="Entry string.ToUpperInvariant()", span="0-0", cluster="string.ToUpperInvariant()", file="ProcessingJobsPage.generated.cs"];
m36_64 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="ProcessingJobsPage.generated.cs"];
m36_62 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="ProcessingJobsPage.generated.cs"];
m36_54 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ProcessingJobsPage.generated.cs"];
m36_60 [label="Entry HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", span="32-32", cluster="HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", file="ProcessingJobsPage.generated.cs"];
m36_59 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="ProcessingJobsPage.generated.cs"];
m36_58 [label="Entry HangFire.Storage.IMonitoringApi.ProcessingCount()", span="42-42", cluster="HangFire.Storage.IMonitoringApi.ProcessingCount()", file="ProcessingJobsPage.generated.cs"];
m36_67 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ProcessingJobsPage.generated.cs"];
m36_69 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="ProcessingJobsPage.generated.cs"];
m36_63 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="ProcessingJobsPage.generated.cs"];
m36_57 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="ProcessingJobsPage.generated.cs"];
m36_65 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ProcessingJobsPage.generated.cs"];
m36_70 [label="HangFire.Web.Pages.ProcessingJobsPage", span="", file="ProcessingJobsPage.generated.cs"];
m37_186 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="241-241", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="RazorPage.cs"];
m37_187 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="243-246", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="RazorPage.cs"];
m37_188 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n                connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''AnotherValue'', parameter.Value);\r\n            })", span="248-261", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="RazorPage.cs"];
m37_189 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="241-241", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="RazorPage.cs"];
m37_296 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="410-410", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="RazorPage.cs"];
m37_297 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null));\r\n\r\n                Assert.Equal(''context'', exception.ParamName);\r\n            })", span="412-418", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="RazorPage.cs"];
m37_298 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="410-410", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="RazorPage.cs"];
m37_295 [label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="228-228", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RazorPage.cs"];
m37_124 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="138-138", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="RazorPage.cs"];
m37_125 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="140-143", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="RazorPage.cs"];
m37_126 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = Job.FromExpression(() => SampleMethod(''wrong''));\r\n\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result);\r\n                Assert.NotNull(result.Job);\r\n                Assert.Equal(''Succeeded'', result.State);\r\n                Assert.Equal(''Arguments'', result.Job.Arguments[0]);\r\n                Assert.Null(result.LoadException);\r\n            })", span="145-165", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="RazorPage.cs"];
m37_127 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="138-138", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="RazorPage.cs"];
m37_153 [label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24", cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="RazorPage.cs"];
m37_219 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="206-206", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="RazorPage.cs"];
m37_393 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="RazorPage.cs"];
m37_92 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="RazorPage.cs"];
m37_22 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="RazorPage.cs"];
m37_322 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="RazorPage.cs"];
m37_355 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="487-487", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="RazorPage.cs"];
m37_356 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues\r\n('server1', '', '2012-12-12 12:12:12'),\r\n('server2', '', '2012-12-12 12:12:12')''", span="489-493", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="RazorPage.cs"];
m37_357 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.Heartbeat(''server1'');\r\n\r\n                var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat);\r\n\r\n                Assert.NotEqual(2012, servers[''server1''].Year);\r\n                Assert.Equal(2012, servers[''server2''].Year);\r\n            })", span="495-506", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="RazorPage.cs"];
m37_358 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="487-487", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="RazorPage.cs"];
m37_381 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="RazorPage.cs"];
m37_5 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="RazorPage.cs"];
m37_19 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="33-33", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="RazorPage.cs"];
m37_20 [label="UseConnection(connection =>\r\n            {\r\n                var transaction = connection.CreateWriteTransaction();\r\n                Assert.NotNull(transaction);\r\n            })", span="35-39", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="RazorPage.cs"];
m37_21 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="33-33", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="RazorPage.cs"];
m37_29 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", span="43-43", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", file="RazorPage.cs"];
m37_30 [label="UseConnection(connection =>\r\n            {\r\n                var @lock = connection.AcquireJobLock(''1'');\r\n                Assert.NotNull(@lock);\r\n            })", span="45-49", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", file="RazorPage.cs"];
m37_31 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", span="43-43", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", file="RazorPage.cs"];
m37_48 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="107-107", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RazorPage.cs"];
m37_96 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="RazorPage.cs"];
m37_284 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="398-398", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="RazorPage.cs"];
m37_285 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()));\r\n\r\n                Assert.Equal(''serverId'', exception.ParamName);\r\n            })", span="400-406", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="RazorPage.cs"];
m37_286 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="398-398", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="RazorPage.cs"];
m37_394 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="RazorPage.cs"];
m37_230 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="312-312", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="RazorPage.cs"];
m37_231 [label="UseConnection(connection =>\r\n            {\r\n                var value = connection.GetJobParameter(''1'', ''hello'');\r\n                Assert.Null(value);\r\n            })", span="314-318", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="RazorPage.cs"];
m37_232 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="312-312", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="RazorPage.cs"];
m37_401 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", span="549-549", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="RazorPage.cs"];
m37_402 [label="var connection = new SqlServerConnection(\r\n                ConnectionUtils.CreateConnection(), new SqlServerStorageOptions())", span="551-552", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="RazorPage.cs"];
m37_403 [label="action(connection)", span="554-554", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="RazorPage.cs"];
m37_404 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", span="549-549", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="RazorPage.cs"];
m37_209 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="288-288", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="RazorPage.cs"];
m37_210 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="290-296", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="RazorPage.cs"];
m37_211 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="288-288", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="RazorPage.cs"];
m37_258 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="358-358", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="RazorPage.cs"];
m37_259 [label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)))", span="360-361", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="RazorPage.cs"];
m37_260 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="358-358", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="RazorPage.cs"];
m37_9 [label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", span="35-35", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="RazorPage.cs"];
m37_395 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", span="540-540", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="RazorPage.cs"];
m37_396 [label="var sqlConnection = ConnectionUtils.CreateConnection()", span="542-542", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="RazorPage.cs"];
m37_398 [label="action(sqlConnection, connection)", span="545-545", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="RazorPage.cs"];
m37_397 [label="var connection = new SqlServerConnection(sqlConnection, new SqlServerStorageOptions())", span="543-543", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="RazorPage.cs"];
m37_399 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", span="540-540", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="RazorPage.cs"];
m37_4 [label="Entry Unk.>", span="", cluster="Unk.>", file="RazorPage.cs"];
m37_115 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="156-156", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="RazorPage.cs"];
m37_154 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="194-194", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="RazorPage.cs"];
m37_155 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="196-202", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="RazorPage.cs"];
m37_156 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="194-194", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="RazorPage.cs"];
m37_400 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="RazorPage.cs"];
m37_27 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="49-49", cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="RazorPage.cs"];
m37_140 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="RazorPage.cs"];
m37_49 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsANException_WhenParametersCollectionIsNull()", span="68-68", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsANException_WhenParametersCollectionIsNull()", file="RazorPage.cs"];
m37_50 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''parameters'', exception.ParamName);\r\n            })", span="70-79", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsANException_WhenParametersCollectionIsNull()", file="RazorPage.cs"];
m37_51 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsANException_WhenParametersCollectionIsNull()", span="68-68", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsANException_WhenParametersCollectionIsNull()", file="RazorPage.cs"];
m37_237 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="322-322", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="RazorPage.cs"];
m37_238 [label="string arrangeSql = @''\r\ndeclare @id int\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nset @id = scope_identity()\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@id, @name, @value)\r\nselect @id''", span="324-331", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="RazorPage.cs"];
m37_239 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single();\r\n\r\n                var value = connection.GetJobParameter(id.ToString(), ''name'');\r\n\r\n                Assert.Equal(''value'', value);\r\n            })", span="333-342", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="RazorPage.cs"];
m37_240 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="322-322", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="RazorPage.cs"];
m37_247 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="346-346", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="RazorPage.cs"];
m37_248 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="348-354", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="RazorPage.cs"];
m37_249 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="346-346", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="RazorPage.cs"];
m37_89 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="RazorPage.cs"];
m37_144 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="169-169", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="RazorPage.cs"];
m37_145 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="171-174", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="RazorPage.cs"];
m37_146 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result.LoadException);\r\n            })", span="176-190", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="RazorPage.cs"];
m37_147 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="169-169", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="RazorPage.cs"];
m37_306 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="422-422", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="RazorPage.cs"];
m37_307 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                };\r\n                connection.AnnounceServer(''server'', context1);\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', server.Id);\r\n                Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data);\r\n                Assert.NotNull(server.LastHeartbeat);\r\n\r\n                var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                };\r\n                connection.AnnounceServer(''server'', context2);\r\n                var sameServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', sameServer.Id);\r\n                Assert.Contains(''1000'', sameServer.Data);\r\n            })", span="424-449", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="RazorPage.cs"];
m37_308 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="422-422", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="RazorPage.cs"];
m37_87 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="RazorPage.cs"];
m37_405 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="RazorPage.cs"];
m37_0 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenSqlConnectionIsNull()", span="15-15", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenSqlConnectionIsNull()", file="RazorPage.cs"];
m37_1 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerConnection(null, new SqlServerStorageOptions()))", span="17-18", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenSqlConnectionIsNull()", file="RazorPage.cs"];
m37_2 [label="Assert.Equal(''connection'', exception.ParamName)", span="20-20", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenSqlConnectionIsNull()", file="RazorPage.cs"];
m37_3 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenSqlConnectionIsNull()", span="15-15", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenSqlConnectionIsNull()", file="RazorPage.cs"];
m37_91 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="RazorPage.cs"];
m37_94 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="RazorPage.cs"];
m37_28 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="RazorPage.cs"];
m37_47 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RazorPage.cs"];
m37_64 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="83-83", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="RazorPage.cs"];
m37_65 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    TimeSpan.FromDays(1));\r\n\r\n                Assert.NotNull(jobId);\r\n                Assert.NotEmpty(jobId);\r\n\r\n                var sqlJob = sql.Query(''select * from HangFire.Job'').Single();\r\n                Assert.Equal(jobId, sqlJob.Id.ToString());\r\n                Assert.Equal(null, (int?) sqlJob.StateId);\r\n                Assert.Equal(null, (string) sqlJob.StateName);\r\n\r\n                var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData);\r\n                invocationData.Arguments = sqlJob.Arguments;\r\n\r\n                var job = invocationData.Deserialize();\r\n                Assert.Equal(typeof(ConnectionFacts), job.Type);\r\n                Assert.Equal(''SampleMethod'', job.Method.Name);\r\n                Assert.Equal(''Hello'', job.Arguments[0]);\r\n\r\n                Assert.True(DateTime.UtcNow < sqlJob.ExpireAt && sqlJob.ExpireAt < DateTime.UtcNow.AddDays(1));\r\n\r\n                var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value);\r\n\r\n                Assert.Equal(''Value1'', parameters[''Key1'']);\r\n                Assert.Equal(''Value2'', parameters[''Key2'']);\r\n            })", span="85-117", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="RazorPage.cs"];
m37_66 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="83-83", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="RazorPage.cs"];
m37_246 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="RazorPage.cs"];
m37_383 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="517-517", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="RazorPage.cs"];
m37_384 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues (@id, '', @heartbeat)''", span="519-521", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="RazorPage.cs"];
m37_385 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    });\r\n\r\n                connection.RemoveTimedOutServers(TimeSpan.FromHours(15));\r\n\r\n                var liveServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server2'', liveServer.Id);\r\n            })", span="523-537", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="RazorPage.cs"];
m37_386 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="517-517", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="RazorPage.cs"];
m37_345 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="480-480", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="RazorPage.cs"];
m37_346 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null)))", span="482-483", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="RazorPage.cs"];
m37_347 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="480-480", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="RazorPage.cs"];
m37_165 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="206-206", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="RazorPage.cs"];
m37_166 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="208-214", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="RazorPage.cs"];
m37_167 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="206-206", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="RazorPage.cs"];
m37_344 [label="Entry Unk.NotEqual", span="", cluster="Unk.NotEqual", file="RazorPage.cs"];
m37_372 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="510-510", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="RazorPage.cs"];
m37_373 [label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))))", span="512-513", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="RazorPage.cs"];
m37_374 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="510-510", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="RazorPage.cs"];
m37_123 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="RazorPage.cs"];
m37_175 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="218-218", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="RazorPage.cs"];
m37_176 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="220-223", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="RazorPage.cs"];
m37_177 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''Value'', parameter.Value);\r\n            })", span="225-237", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="RazorPage.cs"];
m37_178 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="218-218", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="RazorPage.cs"];
m37_382 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="267-267", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="RazorPage.cs"];
m37_294 [label="Entry HangFire.Server.ServerContext.ServerContext()", span="18-18", cluster="HangFire.Server.ServerContext.ServerContext()", file="RazorPage.cs"];
m37_116 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="128-128", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="RazorPage.cs"];
m37_117 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetJobData(''1'');\r\n                Assert.Null(result);\r\n            })", span="130-134", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="RazorPage.cs"];
m37_118 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="128-128", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="RazorPage.cs"];
m37_11 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="24-24", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="RazorPage.cs"];
m37_12 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerConnection(ConnectionUtils.CreateConnection(), null))", span="26-27", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="RazorPage.cs"];
m37_13 [label="Assert.Equal(''options'', exception.ParamName)", span="29-29", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="RazorPage.cs"];
m37_14 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="24-24", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="RazorPage.cs"];
m37_387 [label="Entry lambda expression", span="523-537", cluster="lambda expression", file="RazorPage.cs"];
m37_6 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="RazorPage.cs"];
m37_7 [label="new SqlServerConnection(null, new SqlServerStorageOptions())", span="18-18", cluster="lambda expression", file="RazorPage.cs"];
m37_8 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="RazorPage.cs"];
m37_15 [label="Entry lambda expression", span="27-27", cluster="lambda expression", file="RazorPage.cs"];
m37_16 [label="new SqlServerConnection(ConnectionUtils.CreateConnection(), null)", span="27-27", cluster="lambda expression", file="RazorPage.cs"];
m37_17 [label="Exit lambda expression", span="27-27", cluster="lambda expression", file="RazorPage.cs"];
m37_23 [label="Entry lambda expression", span="35-39", cluster="lambda expression", file="RazorPage.cs"];
m37_24 [label="var transaction = connection.CreateWriteTransaction()", span="37-37", cluster="lambda expression", file="RazorPage.cs"];
m37_25 [label="Assert.NotNull(transaction)", span="38-38", cluster="lambda expression", file="RazorPage.cs"];
m37_26 [label="Exit lambda expression", span="35-39", cluster="lambda expression", file="RazorPage.cs"];
m37_32 [label="Entry lambda expression", span="45-49", cluster="lambda expression", file="RazorPage.cs"];
m37_33 [label="var @lock = connection.AcquireJobLock(''1'')", span="47-47", cluster="lambda expression", file="RazorPage.cs"];
m37_34 [label="Assert.NotNull(@lock)", span="48-48", cluster="lambda expression", file="RazorPage.cs"];
m37_35 [label="Exit lambda expression", span="45-49", cluster="lambda expression", file="RazorPage.cs"];
m37_40 [label="Entry lambda expression", span="55-64", cluster="lambda expression", file="RazorPage.cs"];
m37_41 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        TimeSpan.Zero))", span="57-61", cluster="lambda expression", file="RazorPage.cs"];
m37_45 [label="connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        TimeSpan.Zero)", span="58-61", cluster="lambda expression", file="RazorPage.cs"];
m37_42 [label="Assert.Equal(''job'', exception.ParamName)", span="63-63", cluster="lambda expression", file="RazorPage.cs"];
m37_44 [label="Entry lambda expression", span="58-61", cluster="lambda expression", file="RazorPage.cs"];
m37_43 [label="Exit lambda expression", span="55-64", cluster="lambda expression", file="RazorPage.cs"];
m37_46 [label="Exit lambda expression", span="58-61", cluster="lambda expression", file="RazorPage.cs"];
m37_52 [label="Entry lambda expression", span="70-79", cluster="lambda expression", file="RazorPage.cs"];
m37_53 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        TimeSpan.Zero))", span="72-76", cluster="lambda expression", file="RazorPage.cs"];
m37_57 [label="connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        TimeSpan.Zero)", span="73-76", cluster="lambda expression", file="RazorPage.cs"];
m37_54 [label="Assert.Equal(''parameters'', exception.ParamName)", span="78-78", cluster="lambda expression", file="RazorPage.cs"];
m37_56 [label="Entry lambda expression", span="73-76", cluster="lambda expression", file="RazorPage.cs"];
m37_55 [label="Exit lambda expression", span="70-79", cluster="lambda expression", file="RazorPage.cs"];
m37_58 [label="Exit lambda expression", span="73-76", cluster="lambda expression", file="RazorPage.cs"];
m37_60 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="RazorPage.cs"];
m37_61 [label="SampleMethod(''hello'')", span="74-74", cluster="lambda expression", file="RazorPage.cs"];
m37_62 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="RazorPage.cs"];
m37_68 [label="Entry lambda expression", span="85-117", cluster="lambda expression", file="RazorPage.cs"];
m37_69 [label="var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    TimeSpan.FromDays(1))", span="87-90", cluster="lambda expression", file="RazorPage.cs"];
m37_72 [label="var sqlJob = sql.Query(''select * from HangFire.Job'').Single()", span="95-95", cluster="lambda expression", file="RazorPage.cs"];
m37_83 [label="var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value)", span="110-113", cluster="lambda expression", file="RazorPage.cs"];
m37_70 [label="Assert.NotNull(jobId)", span="92-92", cluster="lambda expression", file="RazorPage.cs"];
m37_97 [label="Entry lambda expression", span="88-88", cluster="lambda expression", file="RazorPage.cs"];
m37_71 [label="Assert.NotEmpty(jobId)", span="93-93", cluster="lambda expression", file="RazorPage.cs"];
m37_73 [label="Assert.Equal(jobId, sqlJob.Id.ToString())", span="96-96", cluster="lambda expression", file="RazorPage.cs"];
m37_74 [label="Assert.Equal(null, (int?) sqlJob.StateId)", span="97-97", cluster="lambda expression", file="RazorPage.cs"];
m37_75 [label="Assert.Equal(null, (string) sqlJob.StateName)", span="98-98", cluster="lambda expression", file="RazorPage.cs"];
m37_76 [label="var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData)", span="100-100", cluster="lambda expression", file="RazorPage.cs"];
m37_77 [label="invocationData.Arguments = sqlJob.Arguments", span="101-101", cluster="lambda expression", file="RazorPage.cs"];
m37_82 [label="Assert.True(DateTime.UtcNow < sqlJob.ExpireAt && sqlJob.ExpireAt < DateTime.UtcNow.AddDays(1))", span="108-108", cluster="lambda expression", file="RazorPage.cs"];
m37_78 [label="var job = invocationData.Deserialize()", span="103-103", cluster="lambda expression", file="RazorPage.cs"];
m37_79 [label="Assert.Equal(typeof(ConnectionFacts), job.Type)", span="104-104", cluster="lambda expression", file="RazorPage.cs"];
m37_80 [label="Assert.Equal(''SampleMethod'', job.Method.Name)", span="105-105", cluster="lambda expression", file="RazorPage.cs"];
m37_81 [label="Assert.Equal(''Hello'', job.Arguments[0])", span="106-106", cluster="lambda expression", file="RazorPage.cs"];
m37_84 [label="Assert.Equal(''Value1'', parameters[''Key1''])", span="115-115", cluster="lambda expression", file="RazorPage.cs"];
m37_100 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="RazorPage.cs"];
m37_103 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="RazorPage.cs"];
m37_85 [label="Assert.Equal(''Value2'', parameters[''Key2''])", span="116-116", cluster="lambda expression", file="RazorPage.cs"];
m37_86 [label="Exit lambda expression", span="85-117", cluster="lambda expression", file="RazorPage.cs"];
m37_98 [label="SampleMethod(''Hello'')", span="88-88", cluster="lambda expression", file="RazorPage.cs"];
m37_99 [label="Exit lambda expression", span="88-88", cluster="lambda expression", file="RazorPage.cs"];
m37_101 [label="(string) x.Name", span="113-113", cluster="lambda expression", file="RazorPage.cs"];
m37_102 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="RazorPage.cs"];
m37_104 [label="(string) x.Value", span="113-113", cluster="lambda expression", file="RazorPage.cs"];
m37_105 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="RazorPage.cs"];
m37_109 [label="Entry lambda expression", span="123-124", cluster="lambda expression", file="RazorPage.cs"];
m37_110 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null))", span="123-124", cluster="lambda expression", file="RazorPage.cs"];
m37_113 [label="connection.GetJobData(null)", span="124-124", cluster="lambda expression", file="RazorPage.cs"];
m37_111 [label="Exit lambda expression", span="123-124", cluster="lambda expression", file="RazorPage.cs"];
m37_112 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="RazorPage.cs"];
m37_114 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="RazorPage.cs"];
m37_119 [label="Entry lambda expression", span="130-134", cluster="lambda expression", file="RazorPage.cs"];
m37_120 [label="var result = connection.GetJobData(''1'')", span="132-132", cluster="lambda expression", file="RazorPage.cs"];
m37_121 [label="Assert.Null(result)", span="133-133", cluster="lambda expression", file="RazorPage.cs"];
m37_122 [label="Exit lambda expression", span="130-134", cluster="lambda expression", file="RazorPage.cs"];
m37_130 [label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="149-156", cluster="lambda expression", file="RazorPage.cs"];
m37_128 [label="Entry lambda expression", span="145-165", cluster="lambda expression", file="RazorPage.cs"];
m37_129 [label="var job = Job.FromExpression(() => SampleMethod(''wrong''))", span="147-147", cluster="lambda expression", file="RazorPage.cs"];
m37_131 [label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="158-158", cluster="lambda expression", file="RazorPage.cs"];
m37_141 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="RazorPage.cs"];
m37_132 [label="Assert.NotNull(result)", span="160-160", cluster="lambda expression", file="RazorPage.cs"];
m37_133 [label="Assert.NotNull(result.Job)", span="161-161", cluster="lambda expression", file="RazorPage.cs"];
m37_134 [label="Assert.Equal(''Succeeded'', result.State)", span="162-162", cluster="lambda expression", file="RazorPage.cs"];
m37_135 [label="Assert.Equal(''Arguments'', result.Job.Arguments[0])", span="163-163", cluster="lambda expression", file="RazorPage.cs"];
m37_136 [label="Assert.Null(result.LoadException)", span="164-164", cluster="lambda expression", file="RazorPage.cs"];
m37_137 [label="Exit lambda expression", span="145-165", cluster="lambda expression", file="RazorPage.cs"];
m37_142 [label="SampleMethod(''wrong'')", span="147-147", cluster="lambda expression", file="RazorPage.cs"];
m37_143 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="RazorPage.cs"];
m37_149 [label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="178-185", cluster="lambda expression", file="RazorPage.cs"];
m37_148 [label="Entry lambda expression", span="176-190", cluster="lambda expression", file="RazorPage.cs"];
m37_150 [label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="187-187", cluster="lambda expression", file="RazorPage.cs"];
m37_151 [label="Assert.NotNull(result.LoadException)", span="189-189", cluster="lambda expression", file="RazorPage.cs"];
m37_152 [label="Exit lambda expression", span="176-190", cluster="lambda expression", file="RazorPage.cs"];
m37_157 [label="Entry lambda expression", span="196-202", cluster="lambda expression", file="RazorPage.cs"];
m37_158 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''))", span="198-199", cluster="lambda expression", file="RazorPage.cs"];
m37_162 [label="connection.SetJobParameter(null, ''name'', ''value'')", span="199-199", cluster="lambda expression", file="RazorPage.cs"];
m37_159 [label="Assert.Equal(''id'', exception.ParamName)", span="201-201", cluster="lambda expression", file="RazorPage.cs"];
m37_161 [label="Entry lambda expression", span="199-199", cluster="lambda expression", file="RazorPage.cs"];
m37_160 [label="Exit lambda expression", span="196-202", cluster="lambda expression", file="RazorPage.cs"];
m37_163 [label="Exit lambda expression", span="199-199", cluster="lambda expression", file="RazorPage.cs"];
m37_168 [label="Entry lambda expression", span="208-214", cluster="lambda expression", file="RazorPage.cs"];
m37_169 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''))", span="210-211", cluster="lambda expression", file="RazorPage.cs"];
m37_173 [label="connection.SetJobParameter(''1'', null, ''value'')", span="211-211", cluster="lambda expression", file="RazorPage.cs"];
m37_170 [label="Assert.Equal(''name'', exception.ParamName)", span="213-213", cluster="lambda expression", file="RazorPage.cs"];
m37_172 [label="Entry lambda expression", span="211-211", cluster="lambda expression", file="RazorPage.cs"];
m37_171 [label="Exit lambda expression", span="208-214", cluster="lambda expression", file="RazorPage.cs"];
m37_174 [label="Exit lambda expression", span="211-211", cluster="lambda expression", file="RazorPage.cs"];
m37_180 [label="var job = sql.Query(arrangeSql).Single()", span="227-227", cluster="lambda expression", file="RazorPage.cs"];
m37_179 [label="Entry lambda expression", span="225-237", cluster="lambda expression", file="RazorPage.cs"];
m37_182 [label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="230-230", cluster="lambda expression", file="RazorPage.cs"];
m37_183 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="232-234", cluster="lambda expression", file="RazorPage.cs"];
m37_181 [label="string jobId = job.Id.ToString()", span="228-228", cluster="lambda expression", file="RazorPage.cs"];
m37_184 [label="Assert.Equal(''Value'', parameter.Value)", span="236-236", cluster="lambda expression", file="RazorPage.cs"];
m37_185 [label="Exit lambda expression", span="225-237", cluster="lambda expression", file="RazorPage.cs"];
m37_191 [label="var job = sql.Query(arrangeSql).Single()", span="250-250", cluster="lambda expression", file="RazorPage.cs"];
m37_190 [label="Entry lambda expression", span="248-261", cluster="lambda expression", file="RazorPage.cs"];
m37_193 [label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="253-253", cluster="lambda expression", file="RazorPage.cs"];
m37_194 [label="connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'')", span="254-254", cluster="lambda expression", file="RazorPage.cs"];
m37_195 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="256-258", cluster="lambda expression", file="RazorPage.cs"];
m37_192 [label="string jobId = job.Id.ToString()", span="251-251", cluster="lambda expression", file="RazorPage.cs"];
m37_196 [label="Assert.Equal(''AnotherValue'', parameter.Value)", span="260-260", cluster="lambda expression", file="RazorPage.cs"];
m37_197 [label="Exit lambda expression", span="248-261", cluster="lambda expression", file="RazorPage.cs"];
m37_203 [label="var job = sql.Query(arrangeSql).Single()", span="274-274", cluster="lambda expression", file="RazorPage.cs"];
m37_202 [label="Entry lambda expression", span="272-284", cluster="lambda expression", file="RazorPage.cs"];
m37_205 [label="connection.SetJobParameter(jobId, ''Name'', null)", span="277-277", cluster="lambda expression", file="RazorPage.cs"];
m37_206 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="279-281", cluster="lambda expression", file="RazorPage.cs"];
m37_204 [label="string jobId = job.Id.ToString()", span="275-275", cluster="lambda expression", file="RazorPage.cs"];
m37_207 [label="Assert.Equal((string) null, parameter.Value)", span="283-283", cluster="lambda expression", file="RazorPage.cs"];
m37_208 [label="Exit lambda expression", span="272-284", cluster="lambda expression", file="RazorPage.cs"];
m37_212 [label="Entry lambda expression", span="290-296", cluster="lambda expression", file="RazorPage.cs"];
m37_213 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''))", span="292-293", cluster="lambda expression", file="RazorPage.cs"];
m37_217 [label="connection.GetJobParameter(null, ''hello'')", span="293-293", cluster="lambda expression", file="RazorPage.cs"];
m37_214 [label="Assert.Equal(''id'', exception.ParamName)", span="295-295", cluster="lambda expression", file="RazorPage.cs"];
m37_216 [label="Entry lambda expression", span="293-293", cluster="lambda expression", file="RazorPage.cs"];
m37_215 [label="Exit lambda expression", span="290-296", cluster="lambda expression", file="RazorPage.cs"];
m37_218 [label="Exit lambda expression", span="293-293", cluster="lambda expression", file="RazorPage.cs"];
m37_223 [label="Entry lambda expression", span="302-308", cluster="lambda expression", file="RazorPage.cs"];
m37_224 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null))", span="304-305", cluster="lambda expression", file="RazorPage.cs"];
m37_228 [label="connection.GetJobParameter(''1'', null)", span="305-305", cluster="lambda expression", file="RazorPage.cs"];
m37_225 [label="Assert.Equal(''name'', exception.ParamName)", span="307-307", cluster="lambda expression", file="RazorPage.cs"];
m37_227 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="RazorPage.cs"];
m37_226 [label="Exit lambda expression", span="302-308", cluster="lambda expression", file="RazorPage.cs"];
m37_229 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="RazorPage.cs"];
m37_233 [label="Entry lambda expression", span="314-318", cluster="lambda expression", file="RazorPage.cs"];
m37_234 [label="var value = connection.GetJobParameter(''1'', ''hello'')", span="316-316", cluster="lambda expression", file="RazorPage.cs"];
m37_235 [label="Assert.Null(value)", span="317-317", cluster="lambda expression", file="RazorPage.cs"];
m37_236 [label="Exit lambda expression", span="314-318", cluster="lambda expression", file="RazorPage.cs"];
m37_242 [label="var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single()", span="335-337", cluster="lambda expression", file="RazorPage.cs"];
m37_241 [label="Entry lambda expression", span="333-342", cluster="lambda expression", file="RazorPage.cs"];
m37_243 [label="var value = connection.GetJobParameter(id.ToString(), ''name'')", span="339-339", cluster="lambda expression", file="RazorPage.cs"];
m37_244 [label="Assert.Equal(''value'', value)", span="341-341", cluster="lambda expression", file="RazorPage.cs"];
m37_245 [label="Exit lambda expression", span="333-342", cluster="lambda expression", file="RazorPage.cs"];
m37_250 [label="Entry lambda expression", span="348-354", cluster="lambda expression", file="RazorPage.cs"];
m37_251 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1))", span="350-351", cluster="lambda expression", file="RazorPage.cs"];
m37_255 [label="connection.GetFirstByLowestScoreFromSet(null, 0, 1)", span="351-351", cluster="lambda expression", file="RazorPage.cs"];
m37_252 [label="Assert.Equal(''key'', exception.ParamName)", span="353-353", cluster="lambda expression", file="RazorPage.cs"];
m37_254 [label="Entry lambda expression", span="351-351", cluster="lambda expression", file="RazorPage.cs"];
m37_253 [label="Exit lambda expression", span="348-354", cluster="lambda expression", file="RazorPage.cs"];
m37_256 [label="Exit lambda expression", span="351-351", cluster="lambda expression", file="RazorPage.cs"];
m37_261 [label="Entry lambda expression", span="360-361", cluster="lambda expression", file="RazorPage.cs"];
m37_262 [label="Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1))", span="360-361", cluster="lambda expression", file="RazorPage.cs"];
m37_265 [label="connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)", span="361-361", cluster="lambda expression", file="RazorPage.cs"];
m37_263 [label="Exit lambda expression", span="360-361", cluster="lambda expression", file="RazorPage.cs"];
m37_264 [label="Entry lambda expression", span="361-361", cluster="lambda expression", file="RazorPage.cs"];
m37_266 [label="Exit lambda expression", span="361-361", cluster="lambda expression", file="RazorPage.cs"];
m37_270 [label="Entry lambda expression", span="367-373", cluster="lambda expression", file="RazorPage.cs"];
m37_271 [label="var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1)", span="369-370", cluster="lambda expression", file="RazorPage.cs"];
m37_272 [label="Assert.Null(result)", span="372-372", cluster="lambda expression", file="RazorPage.cs"];
m37_273 [label="Exit lambda expression", span="367-373", cluster="lambda expression", file="RazorPage.cs"];
m37_279 [label="sql.Execute(arrangeSql)", span="389-389", cluster="lambda expression", file="RazorPage.cs"];
m37_278 [label="Entry lambda expression", span="387-394", cluster="lambda expression", file="RazorPage.cs"];
m37_280 [label="var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0)", span="391-391", cluster="lambda expression", file="RazorPage.cs"];
m37_281 [label="Assert.Equal(''-1.0'', result)", span="393-393", cluster="lambda expression", file="RazorPage.cs"];
m37_282 [label="Exit lambda expression", span="387-394", cluster="lambda expression", file="RazorPage.cs"];
m37_287 [label="Entry lambda expression", span="400-406", cluster="lambda expression", file="RazorPage.cs"];
m37_288 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()))", span="402-403", cluster="lambda expression", file="RazorPage.cs"];
m37_292 [label="connection.AnnounceServer(null, new ServerContext())", span="403-403", cluster="lambda expression", file="RazorPage.cs"];
m37_289 [label="Assert.Equal(''serverId'', exception.ParamName)", span="405-405", cluster="lambda expression", file="RazorPage.cs"];
m37_291 [label="Entry lambda expression", span="403-403", cluster="lambda expression", file="RazorPage.cs"];
m37_290 [label="Exit lambda expression", span="400-406", cluster="lambda expression", file="RazorPage.cs"];
m37_293 [label="Exit lambda expression", span="403-403", cluster="lambda expression", file="RazorPage.cs"];
m37_299 [label="Entry lambda expression", span="412-418", cluster="lambda expression", file="RazorPage.cs"];
m37_300 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null))", span="414-415", cluster="lambda expression", file="RazorPage.cs"];
m37_304 [label="connection.AnnounceServer(''server'', null)", span="415-415", cluster="lambda expression", file="RazorPage.cs"];
m37_301 [label="Assert.Equal(''context'', exception.ParamName)", span="417-417", cluster="lambda expression", file="RazorPage.cs"];
m37_303 [label="Entry lambda expression", span="415-415", cluster="lambda expression", file="RazorPage.cs"];
m37_302 [label="Exit lambda expression", span="412-418", cluster="lambda expression", file="RazorPage.cs"];
m37_305 [label="Exit lambda expression", span="415-415", cluster="lambda expression", file="RazorPage.cs"];
m37_309 [label="Entry lambda expression", span="424-449", cluster="lambda expression", file="RazorPage.cs"];
m37_310 [label="var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                }", span="426-430", cluster="lambda expression", file="RazorPage.cs"];
m37_311 [label="connection.AnnounceServer(''server'', context1)", span="431-431", cluster="lambda expression", file="RazorPage.cs"];
m37_312 [label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="433-433", cluster="lambda expression", file="RazorPage.cs"];
m37_317 [label="connection.AnnounceServer(''server'', context2)", span="445-445", cluster="lambda expression", file="RazorPage.cs"];
m37_318 [label="var sameServer = sql.Query(''select * from HangFire.Server'').Single()", span="446-446", cluster="lambda expression", file="RazorPage.cs"];
m37_313 [label="Assert.Equal(''server'', server.Id)", span="434-434", cluster="lambda expression", file="RazorPage.cs"];
m37_314 [label="Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data)", span="435-437", cluster="lambda expression", file="RazorPage.cs"];
m37_315 [label="Assert.NotNull(server.LastHeartbeat)", span="438-438", cluster="lambda expression", file="RazorPage.cs"];
m37_316 [label="var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                }", span="440-444", cluster="lambda expression", file="RazorPage.cs"];
m37_319 [label="Assert.Equal(''server'', sameServer.Id)", span="447-447", cluster="lambda expression", file="RazorPage.cs"];
m37_320 [label="Assert.Contains(''1000'', sameServer.Data)", span="448-448", cluster="lambda expression", file="RazorPage.cs"];
m37_321 [label="Exit lambda expression", span="424-449", cluster="lambda expression", file="RazorPage.cs"];
m37_327 [label="Entry lambda expression", span="455-456", cluster="lambda expression", file="RazorPage.cs"];
m37_328 [label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null))", span="455-456", cluster="lambda expression", file="RazorPage.cs"];
m37_331 [label="connection.RemoveServer(null)", span="456-456", cluster="lambda expression", file="RazorPage.cs"];
m37_329 [label="Exit lambda expression", span="455-456", cluster="lambda expression", file="RazorPage.cs"];
m37_330 [label="Entry lambda expression", span="456-456", cluster="lambda expression", file="RazorPage.cs"];
m37_332 [label="Exit lambda expression", span="456-456", cluster="lambda expression", file="RazorPage.cs"];
m37_339 [label="sql.Execute(arrangeSql)", span="470-470", cluster="lambda expression", file="RazorPage.cs"];
m37_338 [label="Entry lambda expression", span="468-476", cluster="lambda expression", file="RazorPage.cs"];
m37_340 [label="connection.RemoveServer(''Server1'')", span="472-472", cluster="lambda expression", file="RazorPage.cs"];
m37_341 [label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="474-474", cluster="lambda expression", file="RazorPage.cs"];
m37_342 [label="Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase)", span="475-475", cluster="lambda expression", file="RazorPage.cs"];
m37_343 [label="Exit lambda expression", span="468-476", cluster="lambda expression", file="RazorPage.cs"];
m37_348 [label="Entry lambda expression", span="482-483", cluster="lambda expression", file="RazorPage.cs"];
m37_349 [label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null))", span="482-483", cluster="lambda expression", file="RazorPage.cs"];
m37_352 [label="connection.Heartbeat(null)", span="483-483", cluster="lambda expression", file="RazorPage.cs"];
m37_350 [label="Exit lambda expression", span="482-483", cluster="lambda expression", file="RazorPage.cs"];
m37_351 [label="Entry lambda expression", span="483-483", cluster="lambda expression", file="RazorPage.cs"];
m37_353 [label="Exit lambda expression", span="483-483", cluster="lambda expression", file="RazorPage.cs"];
m37_360 [label="sql.Execute(arrangeSql)", span="497-497", cluster="lambda expression", file="RazorPage.cs"];
m37_359 [label="Entry lambda expression", span="495-506", cluster="lambda expression", file="RazorPage.cs"];
m37_361 [label="connection.Heartbeat(''server1'')", span="499-499", cluster="lambda expression", file="RazorPage.cs"];
m37_362 [label="var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat)", span="501-502", cluster="lambda expression", file="RazorPage.cs"];
m37_363 [label="Assert.NotEqual(2012, servers[''server1''].Year)", span="504-504", cluster="lambda expression", file="RazorPage.cs"];
m37_366 [label="Entry lambda expression", span="502-502", cluster="lambda expression", file="RazorPage.cs"];
m37_369 [label="Entry lambda expression", span="502-502", cluster="lambda expression", file="RazorPage.cs"];
m37_364 [label="Assert.Equal(2012, servers[''server2''].Year)", span="505-505", cluster="lambda expression", file="RazorPage.cs"];
m37_365 [label="Exit lambda expression", span="495-506", cluster="lambda expression", file="RazorPage.cs"];
m37_367 [label="(string)x.Id", span="502-502", cluster="lambda expression", file="RazorPage.cs"];
m37_368 [label="Exit lambda expression", span="502-502", cluster="lambda expression", file="RazorPage.cs"];
m37_370 [label="(DateTime)x.LastHeartbeat", span="502-502", cluster="lambda expression", file="RazorPage.cs"];
m37_371 [label="Exit lambda expression", span="502-502", cluster="lambda expression", file="RazorPage.cs"];
m37_375 [label="Entry lambda expression", span="512-513", cluster="lambda expression", file="RazorPage.cs"];
m37_376 [label="Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5)))", span="512-513", cluster="lambda expression", file="RazorPage.cs"];
m37_379 [label="connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))", span="513-513", cluster="lambda expression", file="RazorPage.cs"];
m37_377 [label="Exit lambda expression", span="512-513", cluster="lambda expression", file="RazorPage.cs"];
m37_378 [label="Entry lambda expression", span="513-513", cluster="lambda expression", file="RazorPage.cs"];
m37_380 [label="Exit lambda expression", span="513-513", cluster="lambda expression", file="RazorPage.cs"];
m37_388 [label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    })", span="525-531", cluster="lambda expression", file="RazorPage.cs"];
m37_389 [label="connection.RemoveTimedOutServers(TimeSpan.FromHours(15))", span="533-533", cluster="lambda expression", file="RazorPage.cs"];
m37_390 [label="var liveServer = sql.Query(''select * from HangFire.Server'').Single()", span="535-535", cluster="lambda expression", file="RazorPage.cs"];
m37_391 [label="Assert.Equal(''server2'', liveServer.Id)", span="536-536", cluster="lambda expression", file="RazorPage.cs"];
m37_392 [label="Exit lambda expression", span="523-537", cluster="lambda expression", file="RazorPage.cs"];
m37_67 [label="Entry Unk.UseConnections", span="", cluster="Unk.UseConnections", file="RazorPage.cs"];
m37_63 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SampleMethod(string)", span="558-558", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SampleMethod(string)", file="RazorPage.cs"];
m37_406 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SampleMethod(string)", span="558-558", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SampleMethod(string)", file="RazorPage.cs"];
m37_198 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="265-265", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="RazorPage.cs"];
m37_199 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="267-270", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="RazorPage.cs"];
m37_200 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', null);\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal((string) null, parameter.Value);\r\n            })", span="272-284", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="RazorPage.cs"];
m37_201 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="265-265", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="RazorPage.cs"];
m37_164 [label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="192-192", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="RazorPage.cs"];
m37_220 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="300-300", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="RazorPage.cs"];
m37_221 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="302-308", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="RazorPage.cs"];
m37_222 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="300-300", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="RazorPage.cs"];
m37_267 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="365-365", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="RazorPage.cs"];
m37_268 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1);\r\n\r\n                Assert.Null(result);\r\n            })", span="367-373", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="RazorPage.cs"];
m37_269 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="365-365", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="RazorPage.cs"];
m37_257 [label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="217-217", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="RazorPage.cs"];
m37_323 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="RazorPage.cs"];
m37_139 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="RazorPage.cs"];
m37_36 [label="Entry HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="54-54", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="RazorPage.cs"];
m37_37 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="53-53", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="RazorPage.cs"];
m37_38 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''job'', exception.ParamName);\r\n            })", span="55-64", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="RazorPage.cs"];
m37_39 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="53-53", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="RazorPage.cs"];
m37_88 [label="Entry Unk.NotEmpty", span="", cluster="Unk.NotEmpty", file="RazorPage.cs"];
m37_90 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="RazorPage.cs"];
m37_334 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", span="460-460", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="RazorPage.cs"];
m37_335 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues \r\n('Server1', '', getutcdate()),\r\n('Server2', '', getutcdate())''", span="462-466", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="RazorPage.cs"];
m37_336 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.RemoveServer(''Server1'');\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase);\r\n            })", span="468-476", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="RazorPage.cs"];
m37_337 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", span="460-460", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="RazorPage.cs"];
m37_95 [label="Entry Unk.True", span="", cluster="Unk.True", file="RazorPage.cs"];
m37_283 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="RazorPage.cs"];
m37_10 [label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="RazorPage.cs"];
m37_18 [label="Entry HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37", cluster="HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="RazorPage.cs"];
m37_59 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="116-116", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="RazorPage.cs"];
m37_93 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()", file="RazorPage.cs"];
m37_333 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="249-249", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="RazorPage.cs"];
m37_354 [label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="258-258", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="RazorPage.cs"];
m37_274 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="377-377", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="RazorPage.cs"];
m37_275 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues \r\n('key', 1.0, '1.0'),\r\n('key', -1.0, '-1.0'),\r\n('key', -5.0, '-5.0'),\r\n('another-key', -2.0, '-2.0')''", span="379-385", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="RazorPage.cs"];
m37_276 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0);\r\n                \r\n                Assert.Equal(''-1.0'', result);\r\n            })", span="387-394", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="RazorPage.cs"];
m37_277 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="377-377", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="RazorPage.cs"];
m37_106 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="121-121", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="RazorPage.cs"];
m37_107 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null)))", span="123-124", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="RazorPage.cs"];
m37_108 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="121-121", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="RazorPage.cs"];
m37_138 [label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65", cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="RazorPage.cs"];
m37_324 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="453-453", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="RazorPage.cs"];
m37_325 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null)))", span="455-456", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="RazorPage.cs"];
m37_326 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="453-453", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="RazorPage.cs"];
m37_407 [label="HangFire.SqlServer.Tests.ConnectionFacts", span="", file="RazorPage.cs"];
m37_408 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RazorPage.cs"];
m37_409 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RazorPage.cs"];
m37_410 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RazorPage.cs"];
m37_411 [label=arrangeSql, span="", file="RazorPage.cs"];
m37_412 [label=arrangeSql, span="", file="RazorPage.cs"];
m37_413 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RazorPage.cs"];
m37_414 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RazorPage.cs"];
m37_415 [label=arrangeSql, span="", file="RazorPage.cs"];
m37_416 [label=arrangeSql, span="", file="RazorPage.cs"];
m37_417 [label=arrangeSql, span="", file="RazorPage.cs"];
m37_418 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RazorPage.cs"];
m37_419 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RazorPage.cs"];
m37_420 [label=arrangeSql, span="", file="RazorPage.cs"];
m37_421 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RazorPage.cs"];
m37_422 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RazorPage.cs"];
m37_423 [label=arrangeSql, span="", file="RazorPage.cs"];
m37_424 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RazorPage.cs"];
m37_425 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RazorPage.cs"];
m37_426 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RazorPage.cs"];
m37_427 [label=arrangeSql, span="", file="RazorPage.cs"];
m37_428 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RazorPage.cs"];
m37_429 [label=arrangeSql, span="", file="RazorPage.cs"];
m37_430 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RazorPage.cs"];
m37_431 [label=arrangeSql, span="", file="RazorPage.cs"];
m38_18 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RecurringJobsPage.cs"];
m38_5 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobsPage.cs"];
m38_19 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="RecurringJobsPage.cs"];
m38_0 [label="Entry HangFire.States.EnqueuedState.GetData(HangFire.Common.JobMethod)", span="33-33", cluster="HangFire.States.EnqueuedState.GetData(HangFire.Common.JobMethod)", file="RecurringJobsPage.cs"];
m38_1 [label="var queue = GetQueue(data)", span="35-35", cluster="HangFire.States.EnqueuedState.GetData(HangFire.Common.JobMethod)", file="RecurringJobsPage.cs"];
m38_2 [label="return new Dictionary<string, string>\r\n                {\r\n                    { ''EnqueuedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''Queue'', queue }\r\n                };", span="37-41", cluster="HangFire.States.EnqueuedState.GetData(HangFire.Common.JobMethod)", file="RecurringJobsPage.cs"];
m38_3 [label="Exit HangFire.States.EnqueuedState.GetData(HangFire.Common.JobMethod)", span="33-33", cluster="HangFire.States.EnqueuedState.GetData(HangFire.Common.JobMethod)", file="RecurringJobsPage.cs"];
m38_21 [label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="RecurringJobsPage.cs"];
m38_22 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="RecurringJobsPage.cs"];
m38_23 [label="Entry HangFire.States.EnqueuedState.ValidateQueueName(string)", span="74-74", cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", file="RecurringJobsPage.cs"];
m38_24 [label="String.IsNullOrWhiteSpace(queue)", span="76-76", cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", file="RecurringJobsPage.cs"];
m38_25 [label="throw new ArgumentNullException(''queue'');", span="78-78", cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", file="RecurringJobsPage.cs"];
m38_26 [label="!Regex.IsMatch(queue, @''^[a-z0-9_]+$'')", span="81-81", cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", file="RecurringJobsPage.cs"];
m38_27 [label="throw new InvalidOperationException(String.Format(\r\n                    ''The queue name must consist of lowercase letters, digits and underscore characters only. Given: '{0}''', queue));", span="83-84", cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", file="RecurringJobsPage.cs"];
m38_28 [label="Exit HangFire.States.EnqueuedState.ValidateQueueName(string)", span="74-74", cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", file="RecurringJobsPage.cs"];
m38_29 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="RecurringJobsPage.cs"];
m38_37 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="16-16", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="RecurringJobsPage.cs"];
m38_4 [label="Entry HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", span="44-44", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="RecurringJobsPage.cs"];
m38_7 [label="method == null", span="46-46", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="RecurringJobsPage.cs"];
m38_8 [label="throw new ArgumentNullException(''method'');", span="46-46", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="RecurringJobsPage.cs"];
m38_9 [label="QueueAttribute attribute = null", span="48-48", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="RecurringJobsPage.cs"];
m38_10 [label="!method.OldFormat", span="50-50", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="RecurringJobsPage.cs"];
m38_11 [label="attribute = method.Method\r\n                    .GetCustomAttributes(true)\r\n                    .OfType<QueueAttribute>()\r\n                    .FirstOrDefault()", span="52-55", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="RecurringJobsPage.cs"];
m38_12 [label="attribute == null", span="58-58", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="RecurringJobsPage.cs"];
m38_13 [label="attribute = method.Type\r\n                    .GetCustomAttributes(true)\r\n                    .OfType<QueueAttribute>()\r\n                    .FirstOrDefault()", span="60-63", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="RecurringJobsPage.cs"];
m38_14 [label="var queueName = attribute != null\r\n                ? !String.IsNullOrEmpty(attribute.Name) ? attribute.Name : DefaultQueue\r\n                : DefaultQueue", span="66-68", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="RecurringJobsPage.cs"];
m38_15 [label="ValidateQueueName(queueName)", span="69-69", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="RecurringJobsPage.cs"];
m38_16 [label="return queueName;", span="71-71", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="RecurringJobsPage.cs"];
m38_17 [label="Exit HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", span="44-44", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="RecurringJobsPage.cs"];
m38_30 [label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", file="RecurringJobsPage.cs"];
m38_33 [label="Entry HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="90-90", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="RecurringJobsPage.cs"];
m38_34 [label="var queue = GetQueue(context.JobMethod)", span="93-93", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="RecurringJobsPage.cs"];
m38_35 [label="transaction.AddToQueue(queue, context.JobId)", span="95-95", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="RecurringJobsPage.cs"];
m38_36 [label="Exit HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="90-90", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="RecurringJobsPage.cs"];
m38_20 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="RecurringJobsPage.cs"];
m38_32 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RecurringJobsPage.cs"];
m38_6 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RecurringJobsPage.cs"];
m38_31 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="RecurringJobsPage.cs"];
m39_54 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="RecurringJobsPage.generated.cs"];
m39_51 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="RecurringJobsPage.generated.cs"];
m39_55 [label="Entry Unk.GetDescription", span="", cluster="Unk.GetDescription", file="RecurringJobsPage.generated.cs"];
m39_0 [label="Entry HangFire.Web.Pages.RecurringJobsPage.Execute()", span="74-74", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_1 [label="WriteLiteral(''\r\n'')", span="78-78", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_2 [label="Layout = new LayoutPage { Title = ''Recurring jobs'' }", span="94-94", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_3 [label="WriteLiteral(''\r\n'')", span="100-100", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_4 [label="RecurringJobs.Count == 0", span="105-105", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_5 [label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        No recurring jobs found.\r\n    </div>\r'' +\r\n''\n'')", span="111-112", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_6 [label="WriteLiteral(''    <div class=\''js-jobs-list\''>\r\n        <div class=\''btn-toolbar btn-toolbar-top\''>'' +\r\n''\r\n            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\r\n     '' +\r\n''               data-url=\'''')", span="124-126", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_7 [label="Write(Request.LinkTo(''/recurring/trigger''))", span="131-131", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_8 [label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Triggering...''''>\r\n                <span class=''''glyphicon glyphicon-play-circle''''></span>\r\n                Trigger now\r\n            </button>\r\n\r\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\r\n                    data-url='''''')", span="136-143", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", color=green, community=0];
m39_9 [label="Write(Request.LinkTo(''/recurring/remove''))", span="148-148", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_10 [label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Removing...''''\r\n                    data-confirm=''''Do you really want to REMOVE ALL selected jobs?''''>\r\n                <span class=''''glyphicon glyphicon-remove''''></span>\r\n                Remove\r\n            </button>\r\n        </div>\r\n\r\n        <table class=''''table''''>\r\n            <thead>\r\n                <tr>\r\n                    <th class=''''min-width''''>\r\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                    </th>\r\n                    <th class=''''min-width''''>Id</th>\r\n                    <th class=''''min-width''''>Cron</th>\r\n                    <th>Job</th>\r\n                    <th class=''''align-right min-width''''>Next execution</th>\r\n                    <th class=''''align-right min-width''''>Last execution</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n'')", span="153-175", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs", color=green, community=0];
m39_11 [label=RecurringJobs, span="180-180", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_12 [label="WriteLiteral(''                    <tr class=\''js-jobs-list-row hover\''>\r\n                        '' +\r\n''<td>\r\n                            <input type=\''checkbox\'' class=\''js-jobs-list-che'' +\r\n''ckbox\'' name=\''jobs[]\'' value=\'''')", span="186-188", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_48 [label="WriteLiteral(''            </tbody>\r\n        </table>\r\n    </div>\r\n'')", span="414-414", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_13 [label="Write(job.Id)", span="193-193", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_15 [label="Write(job.Id)", span="204-204", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_17 [label="Write(CronExpressionDescriptor.ExpressionDescriptor.GetDescription(job.Cron))", span="214-214", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_19 [label="job.Job != null", span="224-224", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_22 [label="Write(HtmlHelper.DisplayMethod(job.Job))", span="237-237", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_25 [label="Write(job.LoadException.InnerException.Message)", span="259-259", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_28 [label="job.NextExecution != null", span="280-280", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_30 [label="Write(JobHelper.SerializeDateTime(job.NextExecution.Value))", span="291-291", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_32 [label="Write(job.NextExecution.Value)", span="301-301", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_36 [label="job.LastExecution != null", span="334-334", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_38 [label="Write(Request.LinkTo(''/job/'' + job.LastJobId))", span="345-345", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_40 [label="Write(JobHelper.SerializeDateTime(job.LastExecution.Value))", span="356-356", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_42 [label="Write(job.LastJobState != null && JobHistoryRenderer.ForegroundStateColors.ContainsKey(job.LastJobState) ? String.Format(''background-color: {0};'', JobHistoryRenderer.ForegroundStateColors[job.LastJobState]) : null)", span="366-366", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_44 [label="Write(job.LastExecution.Value)", span="376-376", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_14 [label="WriteLiteral(''\'' />\r\n                        </td>\r\n                        <td class=\''min-width'' +\r\n''\''>'')", span="198-199", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_16 [label="WriteLiteral(''</td>\r\n                        <td class=\''min-width\''>'')", span="209-209", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_18 [label="WriteLiteral(''</td>\r\n                        <td>\r\n'')", span="219-219", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_20 [label="WriteLiteral(''                                '')", span="230-230", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_24 [label="WriteLiteral(''                                <em>'')", span="254-254", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_21 [label="WriteLiteral('' '')", span="232-232", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_23 [label="WriteLiteral(''\r\n'')", span="242-242", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_26 [label="WriteLiteral(''</em>\r\n'')", span="264-264", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_27 [label="WriteLiteral(''                        </td>\r\n                        <td class=\''align-right min'' +\r\n''-width\''>\r\n'')", span="274-275", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_29 [label="WriteLiteral(''                                <span data-moment=\'''')", span="286-286", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_34 [label="WriteLiteral(''                                <em>N/A</em>\r\n'')", span="318-318", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_31 [label="WriteLiteral(''\''>\r\n                                    '')", span="296-296", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_33 [label="WriteLiteral(''\r\n                                </span>\r\n'')", span="306-306", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_35 [label="WriteLiteral(''                        </td>\r\n                        <td class=\''align-right min'' +\r\n''-width\''>\r\n'')", span="328-329", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_37 [label="WriteLiteral(''                                <a href=\'''')", span="340-340", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_46 [label="WriteLiteral(''                                <em>N/A</em>\r\n'')", span="394-394", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_39 [label="WriteLiteral(''\''>\r\n                                    <span class=\''label label-default label-ho'' +\r\n''ver\'' data-moment=\'''')", span="350-351", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_41 [label="WriteLiteral(''\'' style=\'''')", span="361-361", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_43 [label="WriteLiteral(''\''>\r\n                                        '')", span="371-371", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_45 [label="WriteLiteral(''\r\n                                    </span>\r\n                                </'' +\r\n''a>\r\n'')", span="381-382", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_47 [label="WriteLiteral(''                        </td>\r\n                    </tr>\r\n'')", span="404-404", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_49 [label="WriteLiteral(''    '')", span="424-424", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_50 [label="Exit HangFire.Web.Pages.RecurringJobsPage.Execute()", span="74-74", cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RecurringJobsPage.generated.cs"];
m39_52 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="RecurringJobsPage.generated.cs"];
m39_53 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="RecurringJobsPage.generated.cs"];
m39_57 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="RecurringJobsPage.generated.cs"];
m39_59 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="RecurringJobsPage.generated.cs"];
m39_60 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RecurringJobsPage.generated.cs"];
m39_56 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="RecurringJobsPage.generated.cs"];
m39_58 [label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="51-51", cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="RecurringJobsPage.generated.cs"];
m39_61 [label="HangFire.Web.Pages.RecurringJobsPage", span="", file="RecurringJobsPage.generated.cs"];
m40_5 [label="context.CandidateState.Name == SucceededState.StateName", span="34-34", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="ServersPage.generated.cs", color=green, community=0];
m40_6 [label="transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:succeeded:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd'')),\r\n                        DateTime.UtcNow.AddMonths(1) - DateTime.UtcNow)", span="36-40", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="ServersPage.generated.cs", color=green, community=0];
m40_7 [label="transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:succeeded:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd-HH'')),\r\n                        TimeSpan.FromDays(1))", span="42-46", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=0, file="ServersPage.generated.cs"];
m40_8 [label="context.CandidateState.Name == FailedState.StateName", span="48-48", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=0, file="ServersPage.generated.cs"];
m40_10 [label="transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:failed:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd-HH'')),\r\n                        TimeSpan.FromDays(1))", span="56-60", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=0, file="ServersPage.generated.cs"];
m40_9 [label="transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:failed:{0}'', \r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd'')),\r\n                        DateTime.UtcNow.AddMonths(1) - DateTime.UtcNow)", span="50-54", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=0, file="ServersPage.generated.cs"];
m40_13 [label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="10-10", cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", color=red, community=0, file="ServersPage.generated.cs"];
m40_11 [label="transaction.Commit()", span="63-63", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=0, file="ServersPage.generated.cs"];
m40_12 [label="Exit HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=red, community=0, file="ServersPage.generated.cs"];
m40_14 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="ServersPage.generated.cs"];
m40_27 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="63-63", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ServersPage.generated.cs"];
m40_28 [label="string sqlQuery = @''\r\nselect r.Id from (\r\n  select jq.Id, row_number() over (order by jq.Id) as row_num \r\n  from HangFire.JobQueue jq\r\n  where jq.Queue = @queue\r\n) as r\r\nwhere r.row_num between @start and @end''", span="65-71", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", color=red, community=0, file="ServersPage.generated.cs"];
m40_29 [label="return UseTransaction(connection =>\r\n            {\r\n                return connection.Query<JobIdDto>(\r\n                    sqlQuery,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();\r\n            });", span="73-81", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", color=red, community=0, file="ServersPage.generated.cs"];
m40_30 [label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="63-63", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ServersPage.generated.cs"];
m40_16 [label="Entry System.DateTime.AddMonths(int)", span="0-0", cluster="System.DateTime.AddMonths(int)", file="ServersPage.generated.cs"];
m40_58 [label="return _storage.UseTransaction(func, IsolationLevel.ReadUncommitted);", span="125-125", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", color=red, community=0, file="ServersPage.generated.cs"];
m40_59 [label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", span="123-123", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", file="ServersPage.generated.cs"];
m40_19 [label="return connection.Query(sqlQuery).Select(x => (string) x.Queue).ToList();", span="52-52", cluster="lambda expression", file="ServersPage.generated.cs", color=red, community=0];
m40_15 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="ServersPage.generated.cs"];
m40_48 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="106-106", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="ServersPage.generated.cs"];
m40_49 [label="string sqlQuery = @''\r\nselect count(Id) from HangFire.JobQueue where [Queue] = @queue''", span="108-109", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="ServersPage.generated.cs"];
m40_50 [label="return UseTransaction(connection =>\r\n            {\r\n                var result = connection.Query(sqlQuery, new { queue = queue }).Single();\r\n\r\n                return new EnqueuedAndFetchedCountDto\r\n                {\r\n                    EnqueuedCount = result.EnqueuedCount,\r\n                    FetchedCount = result.FetchedCount\r\n                };\r\n            });", span="111-120", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", color=red, community=0, file="ServersPage.generated.cs"];
m40_51 [label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="106-106", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="ServersPage.generated.cs"];
m40_3 [label="_storage = storage", span="39-39", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="ServersPage.generated.cs", color=red, community=0];
m40_4 [label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="36-36", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", color=green, community=0, file="ServersPage.generated.cs"];
m40_34 [label="Entry Unk.>", span="", cluster="Unk.>", file="ServersPage.generated.cs"];
m40_38 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="84-84", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="ServersPage.generated.cs"];
m40_39 [label="string fetchedJobsSql = @''\r\nselect r.Id from (\r\n  select j.Id, jq.FetchedAt, row_number() over (order by j.Id) as row_num \r\n  from HangFire.JobQueue jq\r\n  left join HangFire.Job j on jq.JobId = j.Id\r\n  where jq.Queue = @queue and jq.FetchedAt is not null\r\n) as r\r\nwhere r.row_num between @start and @end''", span="86-93", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", color=red, community=0, file="ServersPage.generated.cs"];
m40_40 [label="return UseTransaction(connection =>\r\n            {\r\n                return connection.Query<JobIdDto>(\r\n                    fetchedJobsSql,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();\r\n            });", span="95-103", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", color=red, community=0, file="ServersPage.generated.cs"];
m40_41 [label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="84-84", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="ServersPage.generated.cs"];
m40_21 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="ServersPage.generated.cs"];
m40_60 [label="Entry Unk.UseTransaction", span="", cluster="Unk.UseTransaction", file="ServersPage.generated.cs"];
m40_18 [label="Entry lambda expression", span="50-53", cluster="lambda expression", file="ServersPage.generated.cs"];
m40_17 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="ServersPage.generated.cs"];
m40_57 [label="Entry Hangfire.SqlServer.EnqueuedAndFetchedCountDto.EnqueuedAndFetchedCountDto()", span="18-18", cluster="Hangfire.SqlServer.EnqueuedAndFetchedCountDto.EnqueuedAndFetchedCountDto()", file="ServersPage.generated.cs"];
m40_0 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="36-36", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="ServersPage.generated.cs"];
m40_1 [label="storage == null", span="38-38", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", color=red, community=0, file="ServersPage.generated.cs"];
m40_2 [label="throw new ArgumentNullException(''storage'');", span="38-38", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="ServersPage.generated.cs", color=red, community=0];
m40_52 [label="Entry lambda expression", span="111-120", cluster="lambda expression", file="ServersPage.generated.cs"];
m40_20 [label="HangFire.Filters.StatisticsHistoryFilterAttribute", span="", cluster="lambda expression", file="ServersPage.generated.cs"];
m40_24 [label="Entry lambda expression", span="52-52", cluster="lambda expression", file="ServersPage.generated.cs"];
m40_25 [label="(string) x.Queue", span="52-52", cluster="lambda expression", color=red, community=0, file="ServersPage.generated.cs"];
m40_26 [label="Exit lambda expression", span="52-52", cluster="lambda expression", file="ServersPage.generated.cs"];
m40_32 [label="return connection.Query<JobIdDto>(\r\n                    sqlQuery,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();", span="75-80", cluster="lambda expression", color=red, community=0, file="ServersPage.generated.cs"];
m40_31 [label="Entry lambda expression", span="73-81", cluster="lambda expression", file="ServersPage.generated.cs"];
m40_33 [label="Exit lambda expression", span="73-81", cluster="lambda expression", file="ServersPage.generated.cs"];
m40_35 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="ServersPage.generated.cs"];
m40_36 [label="x.Id", span="79-79", cluster="lambda expression", color=red, community=0, file="ServersPage.generated.cs"];
m40_37 [label="Exit lambda expression", span="79-79", cluster="lambda expression", file="ServersPage.generated.cs"];
m40_43 [label="return connection.Query<JobIdDto>(\r\n                    fetchedJobsSql,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();", span="97-102", cluster="lambda expression", color=red, community=0, file="ServersPage.generated.cs"];
m40_42 [label="Entry lambda expression", span="95-103", cluster="lambda expression", file="ServersPage.generated.cs"];
m40_44 [label="Exit lambda expression", span="95-103", cluster="lambda expression", file="ServersPage.generated.cs"];
m40_45 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="ServersPage.generated.cs"];
m40_46 [label="x.Id", span="101-101", cluster="lambda expression", file="ServersPage.generated.cs"];
m40_47 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="ServersPage.generated.cs"];
m40_53 [label="var result = connection.Query(sqlQuery, new { queue = queue }).Single()", span="113-113", cluster="lambda expression", file="ServersPage.generated.cs"];
m40_54 [label="return new EnqueuedAndFetchedCountDto\r\n                {\r\n                    EnqueuedCount = result.EnqueuedCount,\r\n                    FetchedCount = result.FetchedCount\r\n                };", span="115-119", cluster="lambda expression", color=red, community=0, file="ServersPage.generated.cs"];
m40_55 [label="Exit lambda expression", span="111-120", cluster="lambda expression", file="ServersPage.generated.cs"];
m40_22 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ServersPage.generated.cs"];
m40_56 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="ServersPage.generated.cs"];
m40_23 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="ServersPage.generated.cs"];
m40_61 [label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", span="", file="ServersPage.generated.cs"];
m40_62 [label=sqlQuery, span="", file="ServersPage.generated.cs"];
m40_63 [label=string, span="", file="ServersPage.generated.cs"];
m40_64 [label=int, span="", file="ServersPage.generated.cs"];
m40_65 [label=int, span="", file="ServersPage.generated.cs"];
m40_66 [label=sqlQuery, span="", file="ServersPage.generated.cs"];
m40_67 [label=string, span="", file="ServersPage.generated.cs"];
m40_68 [label=int, span="", file="ServersPage.generated.cs"];
m40_69 [label=int, span="", file="ServersPage.generated.cs"];
m40_70 [label=fetchedJobsSql, span="", file="ServersPage.generated.cs"];
m40_71 [label=string, span="", file="ServersPage.generated.cs"];
m40_72 [label=sqlQuery, span="", file="ServersPage.generated.cs"];
m41_4 [label="Entry HangFire.Web.SingleResourceHandler.WriteResponse()", span="31-31", cluster="HangFire.Web.SingleResourceHandler.WriteResponse()", file="SingleResourceHandler.cs"];
m41_5 [label="WriteResource(_assembly, _resourceName)", span="33-33", cluster="HangFire.Web.SingleResourceHandler.WriteResponse()", color=red, community=0, file="SingleResourceHandler.cs"];
m41_6 [label="Exit HangFire.Web.SingleResourceHandler.WriteResponse()", span="31-31", cluster="HangFire.Web.SingleResourceHandler.WriteResponse()", file="SingleResourceHandler.cs"];
m41_7 [label="Entry HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", span="50-50", cluster="HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", file="SingleResourceHandler.cs"];
m41_0 [label="Entry HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", span="25-25", cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", file="SingleResourceHandler.cs"];
m41_1 [label="_assembly = assembly", span="27-27", cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", color=red, community=0, file="SingleResourceHandler.cs"];
m41_2 [label="_resourceName = resourceName", span="28-28", cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", color=red, community=0, file="SingleResourceHandler.cs"];
m41_3 [label="Exit HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", span="25-25", cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", file="SingleResourceHandler.cs"];
m41_8 [label="HangFire.Web.SingleResourceHandler", span="", file="SingleResourceHandler.cs"];
m42_11 [label="Entry Unk.EnqueueItemOnList", span="", cluster="Unk.EnqueueItemOnList", file="Startup.cs"];
m42_22 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="Startup.cs"];
m42_23 [label="Entry HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", span="57-57", cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", file="Startup.cs"];
m42_24 [label="Given(String.Format(''the '{0}' job'', jobId))", span="59-59", cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", file="Startup.cs"];
m42_25 [label="Redis.Client.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', queue),\r\n                jobId)", span="61-63", cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", file="Startup.cs"];
m42_26 [label="Exit HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", span="57-57", cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", file="Startup.cs"];
m42_7 [label="Entry HangFire.Tests.QueueSteps.GivenAnEnqueuedBrokenJob()", span="23-23", cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedBrokenJob()", file="Startup.cs"];
m42_8 [label="Given(String.Format(''a job of the '{0}' type'', typeof(BrokenJob).AssemblyQualifiedName))", span="25-25", cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedBrokenJob()", file="Startup.cs"];
m42_9 [label="Redis.Client.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', DefaultQueue),\r\n                JobSteps.DefaultJobId)", span="27-29", cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedBrokenJob()", file="Startup.cs"];
m42_10 [label="Exit HangFire.Tests.QueueSteps.GivenAnEnqueuedBrokenJob()", span="23-23", cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedBrokenJob()", file="Startup.cs"];
m42_2 [label="Entry HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", span="17-17", cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", file="Startup.cs"];
m42_3 [label="Given(String.Format(''a job in the '{0}' queue'', DefaultQueue))", span="19-19", cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", color=green, community=0, file="Startup.cs"];
m42_4 [label="Exit HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", span="17-17", cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", file="Startup.cs"];
m42_5 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="Startup.cs"];
m42_50 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="Startup.cs"];
m42_49 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="Startup.cs"];
m42_40 [label="Entry HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", span="89-89", cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="Startup.cs"];
m42_41 [label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="91-92", cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="Startup.cs"];
m42_42 [label="CollectionAssert.DoesNotContain(jobIds, JobSteps.DefaultJobId)", span="94-94", cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="Startup.cs"];
m42_43 [label="Exit HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", span="89-89", cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="Startup.cs"];
m42_15 [label="Entry HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", span="41-41", cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="Startup.cs"];
m42_17 [label="Redis.Client.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', queue),\r\n                JobSteps.DefaultJobId)", span="45-47", cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="Startup.cs"];
m42_16 [label="Given(''a job'')", span="43-43", cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="Startup.cs"];
m42_18 [label="Exit HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", span="41-41", cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="Startup.cs"];
m42_37 [label="Entry HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", span="83-83", cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", file="Startup.cs"];
m42_38 [label="Then(String.Format(''the '{0}' queue should not contain the job'', DefaultQueue))", span="85-85", cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", file="Startup.cs"];
m42_39 [label="Exit HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", span="83-83", cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", file="Startup.cs"];
m42_12 [label="Entry HangFire.Tests.QueueSteps.GivenAnUnexistingEnqueuedJob(string)", span="33-33", cluster="HangFire.Tests.QueueSteps.GivenAnUnexistingEnqueuedJob(string)", file="Startup.cs"];
m42_13 [label="Redis.Client.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', DefaultQueue),\r\n                jobId)", span="35-37", cluster="HangFire.Tests.QueueSteps.GivenAnUnexistingEnqueuedJob(string)", file="Startup.cs"];
m42_14 [label="Exit HangFire.Tests.QueueSteps.GivenAnUnexistingEnqueuedJob(string)", span="33-33", cluster="HangFire.Tests.QueueSteps.GivenAnUnexistingEnqueuedJob(string)", file="Startup.cs"];
m42_31 [label="Entry HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", span="73-73", cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", file="Startup.cs"];
m42_32 [label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="75-76", cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", file="Startup.cs"];
m42_33 [label="CollectionAssert.Contains(jobIds, JobSteps.DefaultJobId)", span="78-78", cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", file="Startup.cs"];
m42_34 [label="Exit HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", span="73-73", cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", file="Startup.cs"];
m42_35 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="Startup.cs"];
m42_36 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="Startup.cs"];
m42_30 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="Startup.cs"];
m42_6 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="Startup.cs"];
m42_44 [label="Entry Unk.DoesNotContain", span="", cluster="Unk.DoesNotContain", file="Startup.cs"];
m42_19 [label="Entry HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", span="51-51", cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", file="Startup.cs"];
m42_20 [label="Given(String.Format(''the '{0}' job in the '{1}' queue'', jobId, DefaultQueue))", span="53-53", cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", file="Startup.cs"];
m42_21 [label="Exit HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", span="51-51", cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", file="Startup.cs"];
m42_51 [label="Entry HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", span="106-106", cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="Startup.cs"];
m42_52 [label="var actualLength = Redis.Client.GetListCount(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="108-109", cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="Startup.cs"];
m42_53 [label="Assert.AreEqual(length, actualLength)", span="110-110", cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="Startup.cs"];
m42_54 [label="Exit HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", span="106-106", cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="Startup.cs"];
m42_27 [label="Entry HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", span="67-67", cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="Startup.cs"];
m42_28 [label="Then(String.Format(''the '{0}' queue should contain the job'', DefaultQueue))", span="69-69", cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="Startup.cs"];
m42_29 [label="Exit HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", span="67-67", cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="Startup.cs"];
m42_45 [label="Entry HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", span="98-98", cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="Startup.cs"];
m42_46 [label="var length = Redis.Client.GetListCount(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="100-101", cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="Startup.cs"];
m42_47 [label="Assert.AreEqual(0, length)", span="102-102", cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="Startup.cs"];
m42_48 [label="Exit HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", span="98-98", cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="Startup.cs"];
m43_0 [label="Entry HangFire.Web.StyleSheetHandler.StyleSheetHandler()", span="29-29", cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="StyleSheetHandler.cs"];
m43_1 [label="ContentType = ''text/css''", span="32-32", cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", color=red, community=0, file="StyleSheetHandler.cs"];
m43_2 [label="ContentEncoding = Encoding.UTF8", span="33-33", cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", color=red, community=0, file="StyleSheetHandler.cs"];
m43_3 [label="Exit HangFire.Web.StyleSheetHandler.StyleSheetHandler()", span="29-29", cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="StyleSheetHandler.cs"];
m43_4 [label="HangFire.Web.StyleSheetHandler", span="", file="StyleSheetHandler.cs"];
m44_15 [label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="32-32", cluster="lambda expression", file="SucceededJobs1.generated.cs", color=green, community=0];
m44_26 [label="Entry Unk.GetTestJob", span="", cluster="Unk.GetTestJob", file="SucceededJobs1.generated.cs"];
m44_375 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="445-445", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="SucceededJobs1.generated.cs"];
m44_376 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="447-458", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="SucceededJobs1.generated.cs"];
m44_377 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="445-445", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="SucceededJobs1.generated.cs"];
m44_78 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="SucceededJobs1.generated.cs"];
m44_248 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SucceededJobs1.generated.cs"];
m44_432 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="520-520", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="SucceededJobs1.generated.cs"];
m44_433 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="522-533", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="SucceededJobs1.generated.cs"];
m44_434 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="520-520", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="SucceededJobs1.generated.cs"];
m44_348 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="179-179", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SucceededJobs1.generated.cs"];
m44_12 [label="InitialState = initialState", span="44-44", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="SucceededJobs1.generated.cs", color=red, community=0];
m44_299 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="345-345", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="SucceededJobs1.generated.cs"];
m44_300 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="347-358", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_301 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="345-345", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="SucceededJobs1.generated.cs"];
m44_82 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="SucceededJobs1.generated.cs"];
m44_286 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SucceededJobs1.generated.cs"];
m44_179 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SucceededJobs1.generated.cs"];
m44_96 [label="Entry Unk.SetJobState", span="", cluster="Unk.SetJobState", file="SucceededJobs1.generated.cs"];
m44_409 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="SucceededJobs1.generated.cs"];
m44_235 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="264-264", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="SucceededJobs1.generated.cs"];
m44_236 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(0.0, record.Score, 2);\r\n            })", span="266-275", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_237 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="264-264", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="SucceededJobs1.generated.cs"];
m44_34 [label="Entry Unk.ExpireJob", span="", cluster="Unk.ExpireJob", file="SucceededJobs1.generated.cs"];
m44_3 [label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="36-36", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="SucceededJobs1.generated.cs"];
m44_131 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", span="139-139", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", file="SucceededJobs1.generated.cs"];
m44_132 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToQueue(''default'', ''1''));\r\n\r\n                var record = sql.Query(''select * from HangFire.JobQueue'').Single();\r\n                Assert.Equal(''1'', record.JobId.ToString());\r\n                Assert.Equal(''default'', record.Queue);\r\n                Assert.Null(record.FetchedAt);\r\n            })", span="141-149", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_133 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", span="139-139", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", file="SucceededJobs1.generated.cs"];
m44_444 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="537-537", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="SucceededJobs1.generated.cs"];
m44_445 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="539-550", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="SucceededJobs1.generated.cs"];
m44_446 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="537-537", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="SucceededJobs1.generated.cs"];
m44_473 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="SucceededJobs1.generated.cs"];
m44_145 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", span="152-152", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="SucceededJobs1.generated.cs"];
m44_146 [label="return connection\r\n                .Query(''select * from HangFire.Job where id = @id'', new { id = jobId })\r\n                .Single();", span="154-156", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="SucceededJobs1.generated.cs"];
m44_147 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", span="152-152", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="SucceededJobs1.generated.cs"];
m44_399 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="479-479", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="SucceededJobs1.generated.cs"];
m44_400 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                });\r\n\r\n                var records = sql.Query(''select * from HangFire.List'').ToArray();\r\n\r\n                Assert.Equal(2, records.Length);\r\n                Assert.Equal(''1'', records[0].Value);\r\n                Assert.Equal(''2'', records[1].Value);\r\n            })", span="481-497", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="SucceededJobs1.generated.cs"];
m44_401 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="479-479", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="SucceededJobs1.generated.cs"];
m44_417 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="193-193", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SucceededJobs1.generated.cs"];
m44_22 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="SucceededJobs1.generated.cs"];
m44_148 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="160-160", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="SucceededJobs1.generated.cs"];
m44_149 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="162-171", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_150 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="160-160", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="SucceededJobs1.generated.cs"];
m44_33 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="SucceededJobs1.generated.cs"];
m44_97 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="106-106", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="SucceededJobs1.generated.cs"];
m44_98 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="108-111", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_99 [label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.AddJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.StateName);\r\n                Assert.Null(job.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="113-135", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_100 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="106-106", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="SucceededJobs1.generated.cs"];
m44_206 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="227-227", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SucceededJobs1.generated.cs"];
m44_207 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime)record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="229-243", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_208 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="227-227", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SucceededJobs1.generated.cs"];
m44_205 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SucceededJobs1.generated.cs"];
m44_222 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SucceededJobs1.generated.cs"];
m44_27 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="SucceededJobs1.generated.cs"];
m44_0 [label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", span="30-30", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="SucceededJobs1.generated.cs"];
m44_1 [label="Items = context.Items", span="33-33", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m44_2 [label="Exit Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", span="30-30", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="SucceededJobs1.generated.cs"];
m44_24 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="SucceededJobs1.generated.cs"];
m44_130 [label="Entry Unk.AddJobState", span="", cluster="Unk.AddJobState", file="SucceededJobs1.generated.cs"];
m44_223 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="247-247", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="SucceededJobs1.generated.cs"];
m44_224 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="249-260", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_225 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="247-247", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="SucceededJobs1.generated.cs"];
m44_48 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="SucceededJobs1.generated.cs"];
m44_387 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="462-462", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="SucceededJobs1.generated.cs"];
m44_388 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="464-475", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="SucceededJobs1.generated.cs"];
m44_389 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="462-462", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="SucceededJobs1.generated.cs"];
m44_16 [label="Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)))", span="34-34", cluster="lambda expression", file="SucceededJobs1.generated.cs", color=green, community=0];
m44_162 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="175-175", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SucceededJobs1.generated.cs"];
m44_163 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime) record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="177-191", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_164 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="175-175", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SucceededJobs1.generated.cs"];
m44_311 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="172-172", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SucceededJobs1.generated.cs"];
m44_25 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", span="578-578", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SucceededJobs1.generated.cs"];
m44_474 [label="var transaction = new SqlServerWriteOnlyTransaction(connection)", span="582-582", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SucceededJobs1.generated.cs"];
m44_475 [label="action(transaction)", span="584-584", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SucceededJobs1.generated.cs"];
m44_476 [label="transaction.Commit()", span="585-585", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SucceededJobs1.generated.cs"];
m44_477 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", span="578-578", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SucceededJobs1.generated.cs"];
m44_79 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="SucceededJobs1.generated.cs"];
m44_29 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="SucceededJobs1.generated.cs"];
m44_324 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="379-379", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="SucceededJobs1.generated.cs"];
m44_325 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="381-392", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_326 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="379-379", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="SucceededJobs1.generated.cs"];
m44_374 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="186-186", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SucceededJobs1.generated.cs"];
m44_180 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="195-195", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="SucceededJobs1.generated.cs"];
m44_181 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(2, recordCount);\r\n            })", span="197-208", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_182 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="195-195", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="SucceededJobs1.generated.cs"];
m44_92 [label="Entry Unk.SerializeData", span="", cluster="Unk.SerializeData", file="SucceededJobs1.generated.cs"];
m44_478 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="45-45", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SucceededJobs1.generated.cs"];
m44_361 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="427-427", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="SucceededJobs1.generated.cs"];
m44_362 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="429-441", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_363 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="427-427", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="SucceededJobs1.generated.cs"];
m44_35 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="45-45", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="SucceededJobs1.generated.cs"];
m44_36 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues ('', '', getutcdate(), getutcdate())\r\nselect scope_identity() as Id''", span="47-50", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_37 [label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.PersistJob(jobId));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.ExpireAt);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.NotNull(anotherJob.ExpireAt);\r\n            })", span="52-64", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_38 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="45-45", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="SucceededJobs1.generated.cs"];
m44_273 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="313-313", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="SucceededJobs1.generated.cs"];
m44_274 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="315-324", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_275 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="313-313", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="SucceededJobs1.generated.cs"];
m44_464 [label="Entry lambda expression", span="558-562", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_4 [label="connection == null", span="38-38", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="SucceededJobs1.generated.cs", color=red, community=0];
m44_5 [label="throw new ArgumentNullException(''connection'');", span="38-38", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m44_6 [label="job == null", span="39-39", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="SucceededJobs1.generated.cs", color=red, community=0];
m44_14 [label="Exit Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="36-36", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_13 [label="Items = new Dictionary<string, object>()", span="46-46", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="SucceededJobs1.generated.cs", color=red, community=0];
m44_31 [label="x.ExpireJob(jobId, TimeSpan.FromDays(1))", span="34-34", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_17 [label="Hangfire.Client.CreateContext", span="", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_19 [label="var anotherJob = GetTestJob(sql, anotherJobId)", span="39-39", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_30 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_18 [label="Assert.True(DateTime.UtcNow < job.ExpireAt && job.ExpireAt < DateTime.UtcNow.AddDays(1))", span="37-37", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_20 [label="Assert.Null(anotherJob.ExpireAt)", span="40-40", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_32 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_21 [label="Exit lambda expression", span="29-41", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_40 [label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="54-54", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_41 [label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="55-55", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_39 [label="Entry lambda expression", span="52-64", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_42 [label="Commit(sql, x => x.PersistJob(jobId))", span="57-57", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_50 [label="x.PersistJob(jobId)", span="57-57", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_43 [label="var job = GetTestJob(sql, jobId)", span="59-59", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_45 [label="var anotherJob = GetTestJob(sql, anotherJobId)", span="62-62", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_49 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_44 [label="Assert.Null(job.ExpireAt)", span="60-60", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_46 [label="Assert.NotNull(anotherJob.ExpireAt)", span="63-63", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_51 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_47 [label="Exit lambda expression", span="52-64", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_58 [label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="77-77", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_59 [label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="78-78", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_57 [label="Entry lambda expression", span="75-102", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_64 [label="Commit(sql, x => x.SetJobState(jobId, state.Object))", span="86-86", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_60 [label="var state = new Mock<IState>()", span="80-80", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_63 [label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="83-84", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_65 [label="var job = GetTestJob(sql, jobId)", span="88-88", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_93 [label="Entry lambda expression", span="86-86", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_68 [label="var anotherJob = GetTestJob(sql, anotherJobId)", span="92-92", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_67 [label="Assert.NotNull(job.StateId)", span="90-90", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_69 [label="Assert.Null(anotherJob.StateName)", span="93-93", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_70 [label="Assert.Null(anotherJob.StateId)", span="94-94", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_71 [label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="96-96", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_72 [label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="97-97", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_73 [label="Assert.Equal(''State'', jobState.Name)", span="98-98", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_74 [label="Assert.Equal(''Reason'', jobState.Reason)", span="99-99", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_75 [label="Assert.NotNull(jobState.CreatedAt)", span="100-100", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_76 [label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="101-101", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_94 [label="x.SetJobState(jobId, state.Object)", span="86-86", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_95 [label="Exit lambda expression", span="86-86", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_61 [label="state.Setup(x => x.Name).Returns(''State'')", span="81-81", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_62 [label="state.Setup(x => x.Reason).Returns(''Reason'')", span="82-82", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_86 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_87 [label="x.Reason", span="82-82", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_88 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_102 [label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="115-115", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_101 [label="Entry lambda expression", span="113-135", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_103 [label="var state = new Mock<IState>()", span="117-117", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_107 [label="Commit(sql, x => x.AddJobState(jobId, state.Object))", span="123-123", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_128 [label="x.AddJobState(jobId, state.Object)", span="123-123", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_108 [label="var job = GetTestJob(sql, jobId)", span="125-125", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_112 [label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="130-130", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_106 [label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="120-121", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_127 [label="Entry lambda expression", span="123-123", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_109 [label="Assert.Null(job.StateName)", span="126-126", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_110 [label="Assert.Null(job.StateId)", span="127-127", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_111 [label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="129-129", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_113 [label="Assert.Equal(''State'', jobState.Name)", span="131-131", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_114 [label="Assert.Equal(''Reason'', jobState.Reason)", span="132-132", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_115 [label="Assert.NotNull(jobState.CreatedAt)", span="133-133", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_116 [label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="134-134", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_104 [label="state.Setup(x => x.Name).Returns(''State'')", span="118-118", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_105 [label="state.Setup(x => x.Reason).Returns(''Reason'')", span="119-119", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_129 [label="Exit lambda expression", span="123-123", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_118 [label="Entry lambda expression", span="118-118", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_121 [label="Entry lambda expression", span="119-119", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_124 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_117 [label="Exit lambda expression", span="113-135", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_119 [label="x.Name", span="118-118", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_120 [label="Exit lambda expression", span="118-118", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_122 [label="x.Reason", span="119-119", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_123 [label="Exit lambda expression", span="119-119", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_125 [label="x.SerializeData()", span="120-120", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_126 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_134 [label="Entry lambda expression", span="141-149", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_151 [label="Entry lambda expression", span="162-171", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_153 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="166-166", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_152 [label="Commit(sql, x => x.IncrementCounter(''my-key''))", span="164-164", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_154 [label="Assert.Equal(''my-key'', record.Key)", span="168-168", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_155 [label="Assert.Equal(1, record.Value)", span="169-169", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_156 [label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="170-170", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_157 [label="Exit lambda expression", span="162-171", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_165 [label="Entry lambda expression", span="177-191", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_166 [label="Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="179-179", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_167 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="181-181", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_176 [label="Entry lambda expression", span="179-179", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_168 [label="Assert.Equal(''my-key'', record.Key)", span="183-183", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_169 [label="Assert.Equal(1, record.Value)", span="184-184", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_170 [label="Assert.NotNull(record.ExpireAt)", span="185-185", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_171 [label="var expireAt = (DateTime) record.ExpireAt", span="187-187", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_172 [label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="189-189", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_173 [label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="190-190", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_174 [label="Exit lambda expression", span="177-191", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_177 [label="x.IncrementCounter(''my-key'', TimeSpan.FromDays(1))", span="179-179", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_178 [label="Exit lambda expression", span="179-179", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_183 [label="Entry lambda expression", span="197-208", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_184 [label="Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                })", span="199-203", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_185 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="205-205", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_188 [label="Entry lambda expression", span="199-203", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_186 [label="Assert.Equal(2, recordCount)", span="207-207", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_187 [label="Exit lambda expression", span="197-208", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_189 [label="x.IncrementCounter(''my-key'')", span="201-201", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_190 [label="x.IncrementCounter(''my-key'')", span="202-202", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_191 [label="Exit lambda expression", span="199-203", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_195 [label="Entry lambda expression", span="214-223", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_196 [label="Commit(sql, x => x.DecrementCounter(''my-key''))", span="216-216", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_197 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="218-218", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_202 [label="Entry lambda expression", span="216-216", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_198 [label="Assert.Equal(''my-key'', record.Key)", span="220-220", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_199 [label="Assert.Equal(-1, record.Value)", span="221-221", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_200 [label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="222-222", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_201 [label="Exit lambda expression", span="214-223", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_203 [label="x.DecrementCounter(''my-key'')", span="216-216", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_204 [label="Exit lambda expression", span="216-216", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_209 [label="Entry lambda expression", span="229-243", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_210 [label="Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="231-231", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_211 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="233-233", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_219 [label="Entry lambda expression", span="231-231", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_212 [label="Assert.Equal(''my-key'', record.Key)", span="235-235", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_213 [label="Assert.Equal(-1, record.Value)", span="236-236", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_214 [label="Assert.NotNull(record.ExpireAt)", span="237-237", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_215 [label="var expireAt = (DateTime)record.ExpireAt", span="239-239", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_216 [label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="241-241", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_217 [label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="242-242", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_218 [label="Exit lambda expression", span="229-243", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_220 [label="x.DecrementCounter(''my-key'', TimeSpan.FromDays(1))", span="231-231", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_221 [label="Exit lambda expression", span="231-231", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_226 [label="Entry lambda expression", span="249-260", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_227 [label="Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                })", span="251-255", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_228 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="257-257", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_231 [label="Entry lambda expression", span="251-255", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_229 [label="Assert.Equal(2, recordCount)", span="259-259", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_230 [label="Exit lambda expression", span="249-260", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_232 [label="x.DecrementCounter(''my-key'')", span="253-253", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_233 [label="x.DecrementCounter(''my-key'')", span="254-254", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_234 [label="Exit lambda expression", span="251-255", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_238 [label="Entry lambda expression", span="266-275", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_239 [label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value''))", span="268-268", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_240 [label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="270-270", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_245 [label="Entry lambda expression", span="268-268", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_241 [label="Assert.Equal(''my-key'', record.Key)", span="272-272", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_242 [label="Assert.Equal(''my-value'', record.Value)", span="273-273", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_243 [label="Assert.Equal(0.0, record.Score, 2)", span="274-274", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_244 [label="Exit lambda expression", span="266-275", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_246 [label="x.AddToSet(''my-key'', ''my-value'')", span="268-268", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_247 [label="Exit lambda expression", span="268-268", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_252 [label="Entry lambda expression", span="281-292", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_253 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                })", span="283-287", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_254 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="289-289", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_257 [label="Entry lambda expression", span="283-287", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_255 [label="Assert.Equal(2, recordCount)", span="291-291", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_256 [label="Exit lambda expression", span="281-292", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_258 [label="x.AddToSet(''my-key'', ''my-value'')", span="285-285", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_259 [label="x.AddToSet(''my-key'', ''another-value'')", span="286-286", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_260 [label="Exit lambda expression", span="283-287", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_264 [label="Entry lambda expression", span="298-309", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_265 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                })", span="300-304", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_266 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="306-306", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_269 [label="Entry lambda expression", span="300-304", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_267 [label="Assert.Equal(1, recordCount)", span="308-308", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_268 [label="Exit lambda expression", span="298-309", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_270 [label="x.AddToSet(''my-key'', ''my-value'')", span="302-302", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_271 [label="x.AddToSet(''my-key'', ''my-value'')", span="303-303", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_272 [label="Exit lambda expression", span="300-304", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_276 [label="Entry lambda expression", span="315-324", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_277 [label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2))", span="317-317", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_278 [label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="319-319", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_283 [label="Entry lambda expression", span="317-317", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_279 [label="Assert.Equal(''my-key'', record.Key)", span="321-321", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_280 [label="Assert.Equal(''my-value'', record.Value)", span="322-322", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_281 [label="Assert.Equal(3.2, record.Score, 3)", span="323-323", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_282 [label="Exit lambda expression", span="315-324", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_284 [label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="317-317", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_285 [label="Exit lambda expression", span="317-317", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_290 [label="Entry lambda expression", span="330-341", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_291 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                })", span="332-336", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_292 [label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="338-338", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_295 [label="Entry lambda expression", span="332-336", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_293 [label="Assert.Equal(3.2, record.Score, 3)", span="340-340", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_294 [label="Exit lambda expression", span="330-341", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_296 [label="x.AddToSet(''my-key'', ''my-value'')", span="334-334", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_297 [label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="335-335", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_298 [label="Exit lambda expression", span="332-336", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_302 [label="Entry lambda expression", span="347-358", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_303 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                })", span="349-353", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_304 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="355-355", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_307 [label="Entry lambda expression", span="349-353", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_305 [label="Assert.Equal(0, recordCount)", span="357-357", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_308 [label="x.AddToSet(''my-key'', ''my-value'')", span="351-351", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_309 [label="x.RemoveFromSet(''my-key'', ''my-value'')", span="352-352", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_310 [label="Exit lambda expression", span="349-353", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_315 [label="Entry lambda expression", span="364-375", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_316 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                })", span="366-370", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_317 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="372-372", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_320 [label="Entry lambda expression", span="366-370", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_318 [label="Assert.Equal(1, recordCount)", span="374-374", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_319 [label="Exit lambda expression", span="364-375", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_321 [label="x.AddToSet(''my-key'', ''my-value'')", span="368-368", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_322 [label="x.RemoveFromSet(''my-key'', ''different-value'')", span="369-369", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_323 [label="Exit lambda expression", span="366-370", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_327 [label="Entry lambda expression", span="381-392", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_328 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                })", span="383-387", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_329 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="389-389", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_332 [label="Entry lambda expression", span="383-387", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_330 [label="Assert.Equal(1, recordCount)", span="391-391", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_331 [label="Exit lambda expression", span="381-392", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_333 [label="x.AddToSet(''my-key'', ''my-value'')", span="385-385", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_334 [label="x.RemoveFromSet(''different-key'', ''my-value'')", span="386-386", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_335 [label="Exit lambda expression", span="383-387", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_339 [label="Entry lambda expression", span="398-406", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_340 [label="Commit(sql, x => x.InsertToList(''my-key'', ''my-value''))", span="400-400", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_341 [label="var record = sql.Query(''select * from HangFire.List'').Single()", span="402-402", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_345 [label="Entry lambda expression", span="400-400", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_342 [label="Assert.Equal(''my-key'', record.Key)", span="404-404", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_343 [label="Assert.Equal(''my-value'', record.Value)", span="405-405", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_344 [label="Exit lambda expression", span="398-406", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_346 [label="x.InsertToList(''my-key'', ''my-value'')", span="400-400", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_347 [label="Exit lambda expression", span="400-400", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_352 [label="Entry lambda expression", span="412-423", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_353 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                })", span="414-418", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_354 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="420-420", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_357 [label="Entry lambda expression", span="414-418", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_355 [label="Assert.Equal(2, recordCount)", span="422-422", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_356 [label="Exit lambda expression", span="412-423", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_358 [label="x.InsertToList(''my-key'', ''my-value'')", span="416-416", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_359 [label="x.InsertToList(''my-key'', ''my-value'')", span="417-417", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_360 [label="Exit lambda expression", span="414-418", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_364 [label="Entry lambda expression", span="429-441", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_365 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                })", span="431-436", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_366 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="438-438", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_369 [label="Entry lambda expression", span="431-436", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_367 [label="Assert.Equal(0, recordCount)", span="440-440", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_368 [label="Exit lambda expression", span="429-441", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_370 [label="x.InsertToList(''my-key'', ''my-value'')", span="433-433", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_371 [label="x.InsertToList(''my-key'', ''my-value'')", span="434-434", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_372 [label="x.RemoveFromList(''my-key'', ''my-value'')", span="435-435", cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_373 [label="Exit lambda expression", span="431-436", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_380 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="455-455", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_392 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="472-472", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_423 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="513-513", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_437 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="530-530", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_449 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="547-547", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_461 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="564-564", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_135 [label="Commit(sql, x => x.AddToQueue(''default'', ''1''))", span="143-143", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_379 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                })", span="449-453", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_391 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                })", span="466-470", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_403 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                })", span="483-490", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_422 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="505-511", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_436 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="524-528", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_448 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                })", span="541-545", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_460 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                })", span="558-562", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_136 [label="var record = sql.Query(''select * from HangFire.JobQueue'').Single()", span="145-145", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_404 [label="var records = sql.Query(''select * from HangFire.List'').ToArray()", span="492-492", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_137 [label="Assert.Equal(''1'', record.JobId.ToString())", span="146-146", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_139 [label="Assert.Null(record.FetchedAt)", span="148-148", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_77 [label="Exit lambda expression", span="75-102", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_89 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_66 [label="Assert.Equal(''State'', job.StateName)", span="89-89", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_138 [label="Assert.Equal(''default'', record.Queue)", span="147-147", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_381 [label="Assert.Equal(1, recordCount)", span="457-457", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_393 [label="Assert.Equal(1, recordCount)", span="474-474", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_405 [label="Assert.Equal(2, records.Length)", span="494-494", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_406 [label="Assert.Equal(''1'', records[0].Value)", span="495-495", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_407 [label="Assert.Equal(''2'', records[1].Value)", span="496-496", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_424 [label="Assert.Equal(2, recordCount)", span="515-515", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_438 [label="Assert.Equal(0, recordCount)", span="532-532", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_450 [label="Assert.Equal(0, recordCount)", span="549-549", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_462 [label="Assert.Equal(1, recordCount)", span="566-566", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_83 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_90 [label="x.SerializeData()", span="83-83", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_140 [label="Exit lambda expression", span="141-149", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_158 [label="Entry lambda expression", span="164-164", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_159 [label="x.IncrementCounter(''my-key'')", span="164-164", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_306 [label="Exit lambda expression", span="347-358", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_384 [label="x.InsertToList(''my-key'', ''my-value'')", span="451-451", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_396 [label="x.InsertToList(''my-key'', ''my-value'')", span="468-468", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_411 [label="x.InsertToList(''my-key'', ''0'')", span="485-485", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_412 [label="x.InsertToList(''my-key'', ''1'')", span="486-486", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_413 [label="x.InsertToList(''my-key'', ''2'')", span="487-487", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_414 [label="x.InsertToList(''my-key'', ''3'')", span="488-488", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_427 [label="x.InsertToList(''my-key'', ''0'')", span="507-507", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_428 [label="x.InsertToList(''my-key'', ''1'')", span="508-508", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_429 [label="x.InsertToList(''my-key'', ''2'')", span="509-509", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_441 [label="x.InsertToList(''my-key'', ''0'')", span="526-526", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_453 [label="x.InsertToList(''my-key'', ''0'')", span="543-543", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_465 [label="x.InsertToList(''my-key'', ''0'')", span="560-560", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_385 [label="x.RemoveFromList(''my-key'', ''different-value'')", span="452-452", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_397 [label="x.RemoveFromList(''different-key'', ''my-value'')", span="469-469", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_378 [label="Entry lambda expression", span="447-458", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_390 [label="Entry lambda expression", span="464-475", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_421 [label="Entry lambda expression", span="503-516", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_435 [label="Entry lambda expression", span="522-533", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_447 [label="Entry lambda expression", span="539-550", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_459 [label="Entry lambda expression", span="556-567", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_141 [label="Entry lambda expression", span="143-143", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_383 [label="Entry lambda expression", span="449-453", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_395 [label="Entry lambda expression", span="466-470", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_402 [label="Entry lambda expression", span="481-497", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_410 [label="Entry lambda expression", span="483-490", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_426 [label="Entry lambda expression", span="505-511", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_440 [label="Entry lambda expression", span="524-528", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_452 [label="Entry lambda expression", span="541-545", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_91 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_382 [label="Exit lambda expression", span="447-458", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_394 [label="Exit lambda expression", span="464-475", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_408 [label="Exit lambda expression", span="481-497", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_425 [label="Exit lambda expression", span="503-516", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_439 [label="Exit lambda expression", span="522-533", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_451 [label="Exit lambda expression", span="539-550", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_463 [label="Exit lambda expression", span="556-567", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_85 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_84 [label="x.Name", span="81-81", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_160 [label="Exit lambda expression", span="164-164", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_415 [label="x.TrimList(''my-key'', 1, 2)", span="489-489", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_430 [label="x.TrimList(''my-key'', 1, 100)", span="510-510", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_442 [label="x.TrimList(''my-key'', 1, 100)", span="527-527", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_454 [label="x.TrimList(''my-key'', 1, 0)", span="544-544", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_466 [label="x.TrimList(''another-key'', 1, 0)", span="561-561", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_386 [label="Exit lambda expression", span="449-453", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_398 [label="Exit lambda expression", span="466-470", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_143 [label="Exit lambda expression", span="143-143", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_142 [label="x.AddToQueue(''default'', ''1'')", span="143-143", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_416 [label="Exit lambda expression", span="483-490", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_431 [label="Exit lambda expression", span="505-511", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_443 [label="Exit lambda expression", span="524-528", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_455 [label="Exit lambda expression", span="541-545", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_467 [label="Exit lambda expression", span="558-562", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m44_312 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="362-362", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="SucceededJobs1.generated.cs"];
m44_313 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="364-375", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_314 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="362-362", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="SucceededJobs1.generated.cs"];
m44_261 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="296-296", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="SucceededJobs1.generated.cs"];
m44_262 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n                \r\n                Assert.Equal(1, recordCount);\r\n            })", span="298-309", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_263 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="296-296", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="SucceededJobs1.generated.cs"];
m44_468 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="570-570", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="SucceededJobs1.generated.cs"];
m44_470 [label="action(connection)", span="574-574", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="SucceededJobs1.generated.cs"];
m44_469 [label="var connection = ConnectionUtils.CreateConnection()", span="572-572", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="SucceededJobs1.generated.cs"];
m44_471 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="570-570", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="SucceededJobs1.generated.cs"];
m44_175 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="SucceededJobs1.generated.cs"];
m44_7 [label="throw new ArgumentNullException(''job'');", span="39-39", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="SucceededJobs1.generated.cs", color=red, community=0];
m44_456 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="554-554", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="SucceededJobs1.generated.cs"];
m44_457 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="556-567", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="SucceededJobs1.generated.cs"];
m44_458 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="554-554", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="SucceededJobs1.generated.cs"];
m44_23 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="SucceededJobs1.generated.cs"];
m44_8 [label="initialState == null", span="40-40", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="SucceededJobs1.generated.cs", color=red, community=0];
m44_9 [label="throw new ArgumentNullException(''initialState'');", span="40-40", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m44_10 [label="Connection = connection", span="42-42", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m44_11 [label="Job = job", span="43-43", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="SucceededJobs1.generated.cs", color=red, community=0];
m44_53 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="68-68", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="SucceededJobs1.generated.cs"];
m44_54 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="70-73", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_55 [label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.SetJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Equal(''State'', job.StateName);\r\n                Assert.NotNull(job.StateId);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.StateName);\r\n                Assert.Null(anotherJob.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="75-102", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_56 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="68-68", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="SucceededJobs1.generated.cs"];
m44_28 [label="Entry Unk.True", span="", cluster="Unk.True", file="SucceededJobs1.generated.cs"];
m44_349 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="410-410", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="SucceededJobs1.generated.cs"];
m44_350 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="412-423", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_351 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="410-410", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="SucceededJobs1.generated.cs"];
m44_144 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="114-114", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SucceededJobs1.generated.cs"];
m44_472 [label="Entry HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37", cluster="HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="SucceededJobs1.generated.cs"];
m44_161 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SucceededJobs1.generated.cs"];
m44_418 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="501-501", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="SucceededJobs1.generated.cs"];
m44_419 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="503-516", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="SucceededJobs1.generated.cs"];
m44_420 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="501-501", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="SucceededJobs1.generated.cs"];
m44_80 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="SucceededJobs1.generated.cs"];
m44_249 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="279-279", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="SucceededJobs1.generated.cs"];
m44_250 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="281-292", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_251 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="279-279", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="SucceededJobs1.generated.cs"];
m44_52 [label="Entry Unk.PersistJob", span="", cluster="Unk.PersistJob", file="SucceededJobs1.generated.cs"];
m44_287 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="328-328", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="SucceededJobs1.generated.cs"];
m44_288 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                });\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="330-341", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_289 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="328-328", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="SucceededJobs1.generated.cs"];
m44_336 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="396-396", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="SucceededJobs1.generated.cs"];
m44_337 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.InsertToList(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.List'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n            })", span="398-406", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_338 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="396-396", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="SucceededJobs1.generated.cs"];
m44_192 [label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="212-212", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="SucceededJobs1.generated.cs"];
m44_193 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="214-223", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", color=green, community=0, file="SucceededJobs1.generated.cs"];
m44_194 [label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="212-212", cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="SucceededJobs1.generated.cs"];
m44_479 [label="HangFire.SqlServer.Tests.WriteTransactionFacts", span="", file="SucceededJobs1.generated.cs"];
m44_480 [label=arrangeSql, span="", file="SucceededJobs1.generated.cs"];
m44_481 [label=jobId, span="", file="SucceededJobs1.generated.cs"];
m44_482 [label=arrangeSql, span="", file="SucceededJobs1.generated.cs"];
m44_483 [label=jobId, span="", file="SucceededJobs1.generated.cs"];
m44_485 [label=jobId, span="", file="SucceededJobs1.generated.cs"];
m44_486 [label=state, span="", file="SucceededJobs1.generated.cs"];
m44_487 [label=arrangeSql, span="", file="SucceededJobs1.generated.cs"];
m44_488 [label=jobId, span="", file="SucceededJobs1.generated.cs"];
m44_489 [label=state, span="", file="SucceededJobs1.generated.cs"];
m44_484 [label=arrangeSql, span="", file="SucceededJobs1.generated.cs"];
m46_0 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="_Paginator.cs"];
m46_1 [label="_pager = pager", span="8-8", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="_Paginator.cs"];
m46_2 [label="Exit HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="_Paginator.cs"];
m46_3 [label="HangFire.Web.Pages.Paginator", span="", file="_Paginator.cs"];
m47_0 [label="Entry HangFire.Web.Pages.Paginator.Execute()", span="23-23", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_1 [label="WriteLiteral(''\r\n'')", span="27-27", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_2 [label="WriteLiteral(''<div class=\''btn-toolbar\''>\r\n'')", span="30-30", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_3 [label="_pager.TotalPageCount > 1", span="35-35", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_4 [label="WriteLiteral(''        <div class=\''btn-group paginator\''>\r\n'')", span="41-41", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_31 [label="WriteLiteral(''\r\n    <div class=\''btn-toolbar-label\''>Total jobs: '')", span="185-185", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_5 [label="_pager.PagerItems", span="46-46", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_6 [label="page.Type", span="48-48", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_29 [label="WriteLiteral(''        </div>\r\n'')", span="171-171", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_9 [label="Write(_pager.PageUrl(page.PageIndex))", span="60-60", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_11 [label="Write(_pager.CurrentPage == page.PageIndex ? ''active'' : null)", span="70-70", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_13 [label="Write(page.PageIndex)", span="80-80", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_17 [label="Write(_pager.PageUrl(page.PageIndex))", span="101-101", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_19 [label="Write(page.Disabled ? ''disabled'' : null)", span="111-111", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_23 [label="Write(_pager.PageUrl(page.PageIndex))", span="132-132", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_25 [label="Write(page.Disabled ? ''disabled'' : null)", span="142-142", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_7 [label="Pager.ItemType.Page", span="50-50", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_15 [label="Pager.ItemType.NextPage", span="91-91", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_21 [label="Pager.ItemType.PrevPage", span="122-122", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_27 [label="Pager.ItemType.MorePage", span="153-153", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_8 [label="WriteLiteral(''                        <a href=\'''')", span="55-55", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_10 [label="WriteLiteral(''\'' class=\''btn btn-default '')", span="65-65", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_12 [label="WriteLiteral(''\''>\r\n                            '')", span="75-75", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_14 [label="WriteLiteral(''  \r\n                        </a>\r\n'')", span="85-85", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_16 [label="WriteLiteral(''                        <a href=\'''')", span="96-96", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_18 [label="WriteLiteral(''\'' class=\''btn btn-default '')", span="106-106", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_20 [label="WriteLiteral(''\''>\r\n                            Next\r\n                        </a>\r\n'')", span="116-116", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_22 [label="WriteLiteral(''                        <a href=\'''')", span="127-127", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_24 [label="WriteLiteral(''\'' class=\''btn btn-default '')", span="137-137", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_26 [label="WriteLiteral(''\''>\r\n                            Prev\r\n                        </a>\r\n'')", span="147-147", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_28 [label="WriteLiteral(''                        <a href=\''#\'' class=\''btn btn-default disabled\''>\r\n          '' +\r\n''                  …\r\n                        </a>\r\n'')", span="158-159", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_30 [label="WriteLiteral(''        <div class=\''btn-toolbar-spacer\''></div>\r\n'')", span="175-175", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_32 [label="Write(_pager.TotalRecordCount)", span="190-190", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_33 [label="WriteLiteral(''</div>\r\n</div>\r\n'')", span="195-195", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_34 [label="Exit HangFire.Web.Pages.Paginator.Execute()", span="23-23", cluster="HangFire.Web.Pages.Paginator.Execute()", file="_Paginator.generated.cs"];
m47_37 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="_Paginator.generated.cs"];
m47_35 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="_Paginator.generated.cs"];
m47_36 [label="Entry HangFire.Web.Pager.PageUrl(int)", span="51-51", cluster="HangFire.Web.Pager.PageUrl(int)", file="_Paginator.generated.cs"];
m47_38 [label="HangFire.Web.Pages.Paginator", span="", file="_Paginator.generated.cs"];
m48_0 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="_PerPageSelector.cs"];
m48_1 [label="_pager = pager", span="8-8", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="_PerPageSelector.cs"];
m48_2 [label="Exit HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="_PerPageSelector.cs"];
m48_3 [label="HangFire.Web.Pages.PerPageSelector", span="", file="_PerPageSelector.cs"];
m49_14 [label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", span="26-26", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", file="_PerPageSelector.generated.cs"];
m49_56 [label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", span="92-92", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="_PerPageSelector.generated.cs"];
m49_61 [label="var exception = Assert.Throws<TimeoutException>(\r\n                    () => RabbitMqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(1)))", span="105-106", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="_PerPageSelector.generated.cs"];
m49_59 [label="var fetchedJob = queue.Dequeue(new[] {''my-queue''}, _token)", span="100-100", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="_PerPageSelector.generated.cs"];
m49_58 [label="var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''my-queue'')", span="97-97", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="_PerPageSelector.generated.cs"];
m49_60 [label="Assert.NotNull(fetchedJob)", span="103-103", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="_PerPageSelector.generated.cs"];
m49_62 [label="Assert.Equal(exception.Message, ''my-queue'')", span="108-108", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="_PerPageSelector.generated.cs"];
m49_57 [label="RabbitMqUtils.EnqueueJobId(''my-queue'', ''job-id9'')", span="95-95", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="_PerPageSelector.generated.cs"];
m49_63 [label="Exit Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", span="92-92", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="_PerPageSelector.generated.cs"];
m49_41 [label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", span="68-68", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", file="_PerPageSelector.generated.cs"];
m49_44 [label="Assert.Throws<OperationCanceledException>(\r\n                    () => queue.Dequeue(new[] {''my-queue''}, token))", span="74-75", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", color=green, community=0, file="_PerPageSelector.generated.cs"];
m49_42 [label="var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''my-queue'')", span="70-70", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", file="_PerPageSelector.generated.cs"];
m49_43 [label="var token = new CancellationToken(true)", span="72-72", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", file="_PerPageSelector.generated.cs"];
m49_45 [label="Exit Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", span="68-68", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", file="_PerPageSelector.generated.cs"];
m49_9 [label="Write(count)", span="66-66", cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="_PerPageSelector.generated.cs"];
m49_3 [label="new[] { 10, 20, 50, 100 }", span="35-35", cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="_PerPageSelector.generated.cs"];
m49_4 [label="WriteLiteral(''            <a class=\''btn btn-sm btn-default '')", span="41-41", cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="_PerPageSelector.generated.cs"];
m49_5 [label="Write(count == _pager.RecordsPerPage ? ''active'' : null)", span="46-46", cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="_PerPageSelector.generated.cs"];
m49_6 [label="WriteLiteral(''\'' \r\n                   href=\'''')", span="51-51", cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="_PerPageSelector.generated.cs"];
m49_7 [label="Write(_pager.RecordsPerPageUrl(count))", span="56-56", cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="_PerPageSelector.generated.cs"];
m49_13 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="22-22", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="_PerPageSelector.generated.cs"];
m49_8 [label="WriteLiteral(''\''>'')", span="61-61", cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="_PerPageSelector.generated.cs"];
m49_70 [label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", span="113-113", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="_PerPageSelector.generated.cs"];
m49_74 [label="fetchedJob.RemoveFromQueue()", span="122-122", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="_PerPageSelector.generated.cs"];
m49_75 [label="var exception = Assert.Throws<TimeoutException>(\r\n                    () => RabbitMqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(1)))", span="126-127", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="_PerPageSelector.generated.cs"];
m49_73 [label="var fetchedJob = queue.Dequeue(new[] {''my-queue''}, _token)", span="120-120", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="_PerPageSelector.generated.cs"];
m49_72 [label="var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''my-queue'')", span="117-117", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="_PerPageSelector.generated.cs"];
m49_76 [label="Assert.Equal(exception.Message, ''my-queue'')", span="129-129", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="_PerPageSelector.generated.cs"];
m49_71 [label="RabbitMqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="116-116", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="_PerPageSelector.generated.cs"];
m49_77 [label="Exit Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", span="113-113", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="_PerPageSelector.generated.cs"];
m49_50 [label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", span="80-80", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="_PerPageSelector.generated.cs"];
m49_53 [label="var fetchedJob = queue.Dequeue(new[] {''queue-1'', ''queue-2''}, _token)", span="85-85", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="_PerPageSelector.generated.cs"];
m49_52 [label="var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''queue-1'', ''queue-2'')", span="83-83", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="_PerPageSelector.generated.cs"];
m49_54 [label="Assert.Equal(''job-id'', fetchedJob.JobId)", span="87-87", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="_PerPageSelector.generated.cs"];
m49_51 [label="RabbitMqUtils.EnqueueJobId(''queue-2'', ''job-id'')", span="82-82", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="_PerPageSelector.generated.cs"];
m49_55 [label="Exit Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", span="80-80", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="_PerPageSelector.generated.cs"];
m49_0 [label="Entry HangFire.Web.Pages.PerPageSelector.Execute()", span="23-23", cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="_PerPageSelector.generated.cs"];
m49_1 [label="WriteLiteral(''\r\n'')", span="27-27", cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="_PerPageSelector.generated.cs"];
m49_2 [label="WriteLiteral(''\r\n    <div class=\''btn-group pull-right paginator\''>\r\n'')", span="30-30", cluster="HangFire.Web.Pages.PerPageSelector.Execute()", file="_PerPageSelector.generated.cs"];
m49_68 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="_PerPageSelector.generated.cs"];
m49_33 [label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", span="54-54", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="_PerPageSelector.generated.cs"];
m49_37 [label="fetchedJob.RemoveFromQueue()", span="61-61", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="_PerPageSelector.generated.cs"];
m49_36 [label="var fetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="60-60", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="_PerPageSelector.generated.cs"];
m49_38 [label="Assert.Equal(''job-id'', fetchedJob.JobId)", span="63-63", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="_PerPageSelector.generated.cs"];
m49_35 [label="var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''my-queue'')", span="58-58", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="_PerPageSelector.generated.cs"];
m49_34 [label="RabbitMqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="56-56", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="_PerPageSelector.generated.cs"];
m49_39 [label="Exit Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", span="54-54", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="_PerPageSelector.generated.cs"];
m49_30 [label="Entry Unk.Enqueue", span="", cluster="Unk.Enqueue", file="_PerPageSelector.generated.cs"];
m49_40 [label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqUtils.EnqueueJobId(string, string)", span="9-9", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqUtils.EnqueueJobId(string, string)", file="_PerPageSelector.generated.cs"];
m49_15 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RabbitMqJobQueue(new[]{''my-queue''}, null))", span="28-29", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", file="_PerPageSelector.generated.cs"];
m49_64 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="_PerPageSelector.generated.cs"];
m49_32 [label="Entry Hangfire.Storage.IFetchedJob.RemoveFromQueue()", span="24-24", cluster="Hangfire.Storage.IFetchedJob.RemoveFromQueue()", file="_PerPageSelector.generated.cs"];
m49_69 [label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqUtils.DequeueJobId(string, System.TimeSpan)", span="22-22", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqUtils.DequeueJobId(string, System.TimeSpan)", file="_PerPageSelector.generated.cs"];
m49_11 [label="new RabbitMqJobQueue(null, null)", span="20-20", cluster="lambda expression", file="_PerPageSelector.generated.cs"];
m49_10 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="_PerPageSelector.generated.cs"];
m49_12 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="_PerPageSelector.generated.cs"];
m49_78 [label="Entry lambda expression", span="127-127", cluster="lambda expression", file="_PerPageSelector.generated.cs"];
m49_47 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="_PerPageSelector.generated.cs"];
m49_48 [label="queue.Dequeue(new[] {''my-queue''}, token)", span="75-75", cluster="lambda expression", color=green, community=0, file="_PerPageSelector.generated.cs"];
m49_49 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="_PerPageSelector.generated.cs"];
m49_18 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="_PerPageSelector.generated.cs"];
m49_65 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="_PerPageSelector.generated.cs"];
m49_20 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="_PerPageSelector.generated.cs"];
m49_19 [label="new RabbitMqJobQueue(new[]{''my-queue''}, null)", span="29-29", cluster="lambda expression", file="_PerPageSelector.generated.cs"];
m49_67 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="_PerPageSelector.generated.cs"];
m49_66 [label="RabbitMqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(1))", span="106-106", cluster="lambda expression", file="_PerPageSelector.generated.cs"];
m49_79 [label="RabbitMqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(1))", span="127-127", cluster="lambda expression", file="_PerPageSelector.generated.cs"];
m49_80 [label="Exit lambda expression", span="127-127", cluster="lambda expression", file="_PerPageSelector.generated.cs"];
m49_31 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="43-43", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="_PerPageSelector.generated.cs"];
m49_46 [label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="_PerPageSelector.generated.cs"];
m49_29 [label="Entry Hangfire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.GetMessageQueue(params string[])", span="36-36", cluster="Hangfire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.GetMessageQueue(params string[])", file="_PerPageSelector.generated.cs"];
m49_16 [label="HangFire.Web.Pages.PerPageSelector", span="", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", file="_PerPageSelector.generated.cs"];
m49_17 [label="Exit Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", span="26-26", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", file="_PerPageSelector.generated.cs"];
m49_90 [label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", span="152-152", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", file="_PerPageSelector.generated.cs"];
m49_93 [label="var fetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="160-160", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", file="_PerPageSelector.generated.cs"];
m49_95 [label="var newFetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="164-164", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", file="_PerPageSelector.generated.cs"];
m49_92 [label="var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''my-queue'')", span="157-157", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", file="_PerPageSelector.generated.cs"];
m49_94 [label="fetchedJob.Dispose()", span="161-161", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", file="_PerPageSelector.generated.cs"];
m49_96 [label="Assert.Equal(''job-id'', newFetchedJob.JobId)", span="166-166", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", file="_PerPageSelector.generated.cs"];
m49_91 [label="RabbitMqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="155-155", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", file="_PerPageSelector.generated.cs"];
m49_97 [label="Exit Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", span="152-152", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", file="_PerPageSelector.generated.cs"];
m49_89 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="_PerPageSelector.generated.cs"];
m49_81 [label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", span="134-134", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="_PerPageSelector.generated.cs"];
m49_84 [label="var fetchedJob = queue.Dequeue(new[] {''my-queue''}, _token)", span="142-142", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="_PerPageSelector.generated.cs"];
m49_83 [label="var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''my-queue'')", span="139-139", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="_PerPageSelector.generated.cs"];
m49_85 [label="fetchedJob.Dispose()", span="143-143", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="_PerPageSelector.generated.cs"];
m49_87 [label="Assert.Equal(''job-id'', jobId)", span="147-147", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="_PerPageSelector.generated.cs"];
m49_82 [label="RabbitMqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="137-137", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="_PerPageSelector.generated.cs"];
m49_86 [label="var jobId = RabbitMqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(5))", span="146-146", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="_PerPageSelector.generated.cs"];
m49_88 [label="Exit Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", span="134-134", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="_PerPageSelector.generated.cs"];
m49_21 [label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", span="35-35", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", file="_PerPageSelector.generated.cs"];
m49_25 [label="fetchedJob.RemoveFromQueue()", span="45-45", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", color=green, community=0, file="_PerPageSelector.generated.cs"];
m49_24 [label="var fetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="44-44", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", file="_PerPageSelector.generated.cs"];
m49_26 [label="var body = fetchedJob.JobId", span="47-47", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", file="_PerPageSelector.generated.cs"];
m49_22 [label="var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''my-queue'')", span="38-38", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", file="_PerPageSelector.generated.cs"];
m49_23 [label="queue.Enqueue(''my-queue'', ''job-id'')", span="41-41", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", file="_PerPageSelector.generated.cs"];
m49_27 [label="Assert.Equal(''job-id'', body)", span="49-49", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", file="_PerPageSelector.generated.cs"];
m49_28 [label="Exit Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", span="35-35", cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", file="_PerPageSelector.generated.cs"];
m49_99 [label=queue, span="", file="_PerPageSelector.generated.cs"];
m49_100 [label=token, span="", file="_PerPageSelector.generated.cs"];
m49_98 [label="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts", span="", file="_PerPageSelector.generated.cs"];
n19 -> n1  [key=1, style=dashed, color=red, label="HangFire.Web.AspNetBackgroundJobServer"];
n19 -> n5  [key=1, style=dashed, color=red, label="HangFire.Web.AspNetBackgroundJobServer"];
n19 -> n8  [key=1, style=dashed, color=red, label="HangFire.Web.AspNetBackgroundJobServer"];
n19 -> n11  [key=1, style=dashed, color=red, label="HangFire.Web.AspNetBackgroundJobServer"];
n19 -> n12  [key=1, style=dashed, color=red, label="HangFire.Web.AspNetBackgroundJobServer"];
n19 -> n17  [key=1, style=dashed, color=red, label="HangFire.Web.AspNetBackgroundJobServer"];
n0 -> n1  [key=0, style=solid, color=red];
n1 -> n2  [key=0, style=solid, color=red];
n1 -> n3  [key=2, style=dotted, color=red];
n2 -> n0  [key=0, style=bold, color=blue];
n4 -> n5  [key=0, style=solid, color=red];
n5 -> n6  [key=0, style=solid, color=red];
n5 -> n3  [key=2, style=dotted, color=red];
n6 -> n4  [key=0, style=bold, color=blue];
n7 -> n8  [key=0, style=solid, color=red];
n8 -> n9  [key=0, style=solid, color=red];
n8 -> n3  [key=2, style=dotted, color=red];
n9 -> n7  [key=0, style=bold, color=blue];
n10 -> n11  [key=0, style=solid, color=red];
n11 -> n12  [key=0, style=solid, color=red];
n11 -> n14  [key=2, style=dotted, color=red];
n12 -> n13  [key=0, style=solid, color=red];
n12 -> n15  [key=2, style=dotted, color=red];
n13 -> n10  [key=0, style=bold, color=blue];
n16 -> n17  [key=0, style=solid, color=red];
n17 -> n18  [key=0, style=solid, color=red];
n17 -> n10  [key=2, style=dotted, color=red];
n18 -> n16  [key=0, style=bold, color=blue];
m3_19 -> m3_11  [key=3, color=green, style=bold, label="Parameter variable SqlConnection connection"];
m3_19 -> m3_77  [key=0, style=solid];
m3_19 -> m3_24  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
m3_19 -> m3_36  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
m3_19 -> m3_39  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
m3_19 -> m3_67  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_79  [key=2, style=dotted];
m3_78 -> m3_19  [key=0, style=bold, color=blue];
m3_10 -> m3_11  [key=0, style=solid, color=green];
m3_11 -> m3_12  [key=0, style=solid, color=green];
m3_11 -> m3_13  [key=2, style=dotted, color=green];
m3_11 -> m3_14  [key=1, style=dashed, color=green, label="lambda expression"];
m3_11 -> m3_19  [key=3, color=green, style=bold, label="Local variable Hangfire.SqlServer.SqlServerStorage storage"];
m3_12 -> m3_10  [key=0, style=bold, color=blue];
m3_66 -> m3_67  [key=0, style=solid];
m3_67 -> m3_19  [key=3, color=darkorchid, style=bold, label="Local variable Hangfire.SqlServer.SqlServerStorage storage"];
m3_67 -> m3_13  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_68 -> m3_66  [key=0, style=bold, color=blue];
m3_23 -> m3_24  [key=0, style=solid];
m3_24 -> m3_19  [key=3, color=darkorchid, style=bold, label="Local variable Hangfire.SqlServer.SqlServerStorage storage"];
m3_24 -> m3_13  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_25 -> m3_23  [key=0, style=bold, color=blue];
m3_52 -> m3_36  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m3_52 -> m3_80  [key=0, style=solid];
m3_52 -> m3_81  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection>"];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_83  [key=2, style=dotted];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_84  [key=2, style=dotted];
m3_82 -> m3_52  [key=0, style=bold, color=blue];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_73  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m3_6 -> m3_7  [key=0, style=solid, color=green];
m3_7 -> m3_8  [key=0, style=solid, color=green];
m3_7 -> m3_9  [key=2, style=dotted, color=green];
m3_8 -> m3_6  [key=0, style=bold, color=blue];
m3_14 -> m3_15  [key=0, style=solid, color=green];
m3_15 -> m3_16  [key=0, style=solid, color=green];
m3_15 -> m3_19  [key=2, style=dotted, color=green];
m3_15 -> m3_21  [key=1, style=dashed, color=green, label=storage];
m3_16 -> m3_17  [key=0, style=solid, color=green];
m3_16 -> m3_4  [key=2, style=dotted, color=green];
m3_16 -> m3_20  [key=1, style=dashed, color=green, label="lambda expression"];
m3_21 -> m3_22  [key=0, style=solid, color=green];
m3_21 -> m3_9  [key=2, style=dotted, color=green];
m3_17 -> m3_18  [key=0, style=solid, color=green];
m3_17 -> m3_5  [key=2, style=dotted, color=green];
m3_20 -> m3_21  [key=0, style=solid, color=green];
m3_22 -> m3_20  [key=0, style=bold, color=blue];
m3_18 -> m3_14  [key=0, style=bold, color=blue];
m3_27 -> m3_19  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_28 -> m3_9  [key=2, style=dotted];
m3_28 -> m3_29  [key=0, style=solid];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_52  [key=2, style=dotted];
m3_50 -> m3_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_54 -> m3_19  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_55 -> m3_9  [key=2, style=dotted];
m3_55 -> m3_56  [key=0, style=solid];
m3_60 -> m3_19  [key=2, style=dotted];
m3_60 -> m3_61  [key=0, style=solid];
m3_60 -> m3_64  [key=1, style=dashed, color=darkseagreen4, label=storage];
m3_61 -> m3_4  [key=2, style=dotted];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_64 -> m3_9  [key=2, style=dotted];
m3_64 -> m3_65  [key=0, style=solid];
m3_70 -> m3_19  [key=2, style=dotted];
m3_70 -> m3_71  [key=0, style=solid];
m3_71 -> m3_9  [key=2, style=dotted];
m3_71 -> m3_72  [key=0, style=solid];
m3_29 -> m3_4  [key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_32  [key=2, style=dotted];
m3_73 -> m3_4  [key=2, style=dotted];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_32  [key=2, style=dotted];
m3_30 -> m3_5  [key=2, style=dotted];
m3_30 -> m3_31  [key=0, style=solid];
m3_74 -> m3_5  [key=2, style=dotted];
m3_74 -> m3_75  [key=0, style=solid];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m3_49 -> m3_50  [key=0, style=solid];
m3_51 -> m3_49  [key=0, style=bold, color=blue];
m3_53 -> m3_54  [key=0, style=solid];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_47  [key=2, style=dotted];
m3_59 -> m3_60  [key=0, style=solid];
m3_62 -> m3_59  [key=0, style=bold, color=blue];
m3_63 -> m3_64  [key=0, style=solid];
m3_65 -> m3_63  [key=0, style=bold, color=blue];
m3_72 -> m3_73  [key=0, style=solid];
m3_72 -> m3_76  [key=2, style=dotted];
m3_31 -> m3_26  [key=0, style=bold, color=blue];
m3_75 -> m3_69  [key=0, style=bold, color=blue];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_46  [key=2, style=dotted];
m3_58 -> m3_53  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid, color=green];
m3_1 -> m3_2  [key=0, style=solid, color=green];
m3_1 -> m3_4  [key=2, style=dotted, color=green];
m3_1 -> m3_6  [key=1, style=dashed, color=green, label="lambda expression"];
m3_2 -> m3_3  [key=0, style=solid, color=green];
m3_2 -> m3_5  [key=2, style=dotted, color=green];
m3_3 -> m3_0  [key=0, style=bold, color=blue];
m3_33 -> m3_34  [key=0, style=solid];
m3_36 -> m3_19  [key=3, color=darkorchid, style=bold, label="Local variable Hangfire.SqlServer.SqlServerStorage storage"];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_44  [key=2, style=dotted];
m3_36 -> m3_41  [key=1, style=dashed, color=darkseagreen4, label=thread];
m3_39 -> m3_19  [key=3, color=darkorchid, style=bold, label="Local variable Hangfire.SqlServer.SqlServerStorage storage"];
m3_39 -> m3_13  [key=2, style=dotted];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_34 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label=releaseLock];
m3_34 -> m3_50  [key=1, style=dashed, color=darkseagreen4, label=releaseLock];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_43  [key=2, style=dotted];
m3_34 -> m3_57  [key=1, style=dashed, color=darkseagreen4, label=releaseLock];
m3_34 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label=releaseLock];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_50  [key=1, style=dashed, color=darkseagreen4, label=lockAcquired];
m3_35 -> m3_43  [key=2, style=dotted];
m3_35 -> m3_56  [key=1, style=dashed, color=darkseagreen4, label=lockAcquired];
m3_35 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label=lockAcquired];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_45  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_48  [key=2, style=dotted];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_46  [key=2, style=dotted];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_47  [key=2, style=dotted];
m3_42 -> m3_33  [key=0, style=bold, color=blue];
m3_85 -> m3_1  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m3_85 -> m3_7  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m3_85 -> m3_11  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m3_85 -> m3_15  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m3_85 -> m3_16  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m3_85 -> m3_21  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m3_85 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m3_85 -> m3_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m3_85 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m3_85 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m3_85 -> m3_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m3_85 -> m3_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m3_85 -> m3_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m3_85 -> m3_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m3_85 -> m3_60  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m3_85 -> m3_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m3_85 -> m3_64  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m3_85 -> m3_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m3_85 -> m3_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m3_85 -> m3_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts"];
m3_86 -> m3_21  [key=1, style=dashed, color=green, label=storage];
m3_87 -> m3_50  [key=1, style=dashed, color=darkseagreen4, label=releaseLock];
m3_87 -> m3_57  [key=1, style=dashed, color=darkseagreen4, label=releaseLock];
m3_88 -> m3_50  [key=1, style=dashed, color=darkseagreen4, label=lockAcquired];
m3_88 -> m3_56  [key=1, style=dashed, color=darkseagreen4, label=lockAcquired];
m3_89 -> m3_64  [key=1, style=dashed, color=darkseagreen4, label=storage];
m4_0 -> m4_1  [key=0, style=solid, color=red];
m4_0 -> m4_3  [key=3, color=red, style=bold, label="Field variable string[] _resourceNames"];
m4_1 -> m4_2  [key=0, style=solid, color=red];
m4_1 -> m4_5  [key=2, style=dotted, color=red];
m4_2 -> m4_3  [key=0, style=solid, color=red];
m4_2 -> m4_6  [key=2, style=dotted, color=red];
m4_3 -> m4_4  [key=0, style=solid, color=red];
m4_4 -> m4_0  [key=0, style=bold, color=blue];
m4_7 -> m4_1  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlServerStorageOptions"];
m4_7 -> m4_2  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlServerStorageOptions"];
m4_7 -> m4_3  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlServerStorageOptions"];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_45  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_44 -> m6_45  [key=0, style=solid];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_58  [key=2, style=dotted];
m6_45 -> m6_51  [key=1, style=dashed, color=darkseagreen4, label=scheduledJobs];
m6_45 -> m6_56  [key=1, style=dashed, color=darkseagreen4, label=scheduledJobs];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_48  [key=0, style=solid];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_55  [key=0, style=solid];
m6_56 -> m6_57  [key=0, style=solid];
m6_56 -> m6_63  [key=2, style=dotted];
m6_56 -> m6_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_56 -> m6_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_47 -> m6_57  [key=0, style=solid];
m6_47 -> m6_59  [key=2, style=dotted];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_59  [key=2, style=dotted];
m6_48 -> m6_53  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_48 -> m6_70  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_48 -> m6_56  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_48 -> m6_84  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_59  [key=2, style=dotted];
m6_49 -> m6_54  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_49 -> m6_78  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_49 -> m6_56  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_49 -> m6_84  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_61  [key=2, style=dotted];
m6_53 -> m6_64  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_53 -> m6_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_60  [key=2, style=dotted];
m6_50 -> m6_53  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_50 -> m6_54  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_50 -> m6_55  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_54 -> m6_51  [key=0, style=solid];
m6_54 -> m6_61  [key=2, style=dotted];
m6_54 -> m6_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_54 -> m6_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_62  [key=2, style=dotted];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_65  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_52 -> m6_70  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_52 -> m6_54  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_52 -> m6_74  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_52 -> m6_78  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_57 -> m6_43  [key=0, style=bold, color=blue];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_24 -> m6_25  [key=0, style=solid];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_28  [key=2, style=dotted];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_29  [key=2, style=dotted];
m6_26 -> m6_30  [key=2, style=dotted];
m6_26 -> m6_31  [key=2, style=dotted];
m6_26 -> m6_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_26 -> m6_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_27 -> m6_23  [key=0, style=bold, color=blue];
m6_173 -> m6_329  [key=0, style=solid];
m6_173 -> m6_331  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m6_173 -> m6_332  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m6_173 -> m6_333  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_173 -> m6_334  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m6_173 -> m6_336  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_173 -> m6_344  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_173 -> m6_337  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_173 -> m6_338  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_173 -> m6_352  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_173 -> m6_340  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m6_173 -> m6_362  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m6_329 -> m6_330  [key=0, style=solid];
m6_329 -> m6_331  [key=0, style=solid];
m6_331 -> m6_332  [key=0, style=solid];
m6_331 -> m6_342  [key=2, style=dotted];
m6_331 -> m6_336  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_331 -> m6_347  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_331 -> m6_348  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_331 -> m6_340  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_331 -> m6_359  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_332 -> m6_333  [key=0, style=solid];
m6_332 -> m6_342  [key=2, style=dotted];
m6_332 -> m6_338  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_332 -> m6_355  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_332 -> m6_356  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_332 -> m6_340  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_332 -> m6_359  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_333 -> m6_334  [key=0, style=solid];
m6_333 -> m6_60  [key=2, style=dotted];
m6_333 -> m6_336  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_333 -> m6_338  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_333 -> m6_339  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_334 -> m6_335  [key=0, style=solid];
m6_334 -> m6_339  [key=0, style=solid];
m6_336 -> m6_337  [key=0, style=solid];
m6_336 -> m6_61  [key=2, style=dotted];
m6_336 -> m6_343  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_336 -> m6_346  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_337 -> m6_338  [key=0, style=solid];
m6_337 -> m6_334  [key=0, style=solid];
m6_338 -> m6_334  [key=0, style=solid];
m6_338 -> m6_61  [key=2, style=dotted];
m6_338 -> m6_351  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_338 -> m6_354  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_340 -> m6_341  [key=0, style=solid];
m6_340 -> m6_114  [key=2, style=dotted];
m6_340 -> m6_115  [key=2, style=dotted];
m6_340 -> m6_358  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_340 -> m6_361  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_330 -> m6_341  [key=0, style=solid];
m6_330 -> m6_113  [key=2, style=dotted];
m6_339 -> m6_340  [key=0, style=solid];
m6_339 -> m6_62  [key=2, style=dotted];
m6_335 -> m6_336  [key=0, style=solid];
m6_335 -> m6_344  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_335 -> m6_347  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_335 -> m6_348  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_335 -> m6_338  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_335 -> m6_352  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_335 -> m6_355  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_335 -> m6_356  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_341 -> m6_173  [key=0, style=bold, color=blue];
m6_11 -> m6_12  [key=0, style=solid, color=red];
m6_11 -> m6_13  [key=1, style=dashed, color=red, label=string];
m6_12 -> m6_13  [key=0, style=solid, color=red];
m6_13 -> m6_14  [key=0, style=solid, color=red];
m6_13 -> m6_9  [key=2, style=dotted, color=red];
m6_13 -> m6_10  [key=2, style=dotted, color=red];
m6_14 -> m6_11  [key=0, style=bold, color=blue];
m6_219 -> m6_274  [key=0, style=solid];
m6_219 -> m6_281  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_219 -> m6_299  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_219 -> m6_282  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_274 -> m6_275  [key=0, style=solid];
m6_274 -> m6_278  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m6_274 -> m6_279  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m6_281 -> m6_282  [key=0, style=solid];
m6_281 -> m6_114  [key=2, style=dotted];
m6_281 -> m6_115  [key=2, style=dotted];
m6_281 -> m6_298  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_282 -> m6_283  [key=0, style=solid];
m6_282 -> m6_294  [key=2, style=dotted];
m6_282 -> m6_287  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m6_275 -> m6_276  [key=0, style=solid];
m6_275 -> m6_113  [key=2, style=dotted];
m6_275 -> m6_278  [key=1, style=dashed, color=darkseagreen4, label=dates];
m6_275 -> m6_281  [key=1, style=dashed, color=darkseagreen4, label=dates];
m6_275 -> m6_285  [key=1, style=dashed, color=darkseagreen4, label=dates];
m6_275 -> m6_289  [key=1, style=dashed, color=darkseagreen4, label=dates];
m6_278 -> m6_279  [key=0, style=solid];
m6_278 -> m6_175  [key=2, style=dotted];
m6_279 -> m6_280  [key=0, style=solid];
m6_279 -> m6_293  [key=2, style=dotted];
m6_279 -> m6_279  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m6_276 -> m6_277  [key=0, style=solid];
m6_276 -> m6_280  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_285 -> m6_286  [key=0, style=solid];
m6_285 -> m6_291  [key=0, style=solid];
m6_289 -> m6_290  [key=0, style=solid];
m6_289 -> m6_297  [key=2, style=dotted];
m6_277 -> m6_278  [key=0, style=solid];
m6_277 -> m6_281  [key=0, style=solid];
m6_280 -> m6_277  [key=0, style=solid];
m6_280 -> m6_280  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_283 -> m6_284  [key=0, style=solid];
m6_283 -> m6_59  [key=2, style=dotted];
m6_283 -> m6_289  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_283 -> m6_291  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_287 -> m6_288  [key=0, style=solid];
m6_287 -> m6_289  [key=0, style=solid];
m6_287 -> m6_295  [key=2, style=dotted];
m6_287 -> m6_296  [key=2, style=dotted];
m6_284 -> m6_285  [key=0, style=solid];
m6_284 -> m6_287  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_284 -> m6_289  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_284 -> m6_290  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_291 -> m6_292  [key=0, style=solid];
m6_290 -> m6_285  [key=0, style=solid];
m6_290 -> m6_290  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_286 -> m6_287  [key=0, style=solid];
m6_288 -> m6_289  [key=0, style=solid];
m6_292 -> m6_219  [key=0, style=bold, color=blue];
m6_239 -> m6_240  [key=0, style=solid];
m6_239 -> m6_241  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_239 -> m6_247  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_240 -> m6_241  [key=0, style=solid];
m6_241 -> m6_242  [key=0, style=solid];
m6_241 -> m6_9  [key=2, style=dotted];
m6_241 -> m6_76  [key=2, style=dotted];
m6_247 -> m6_248  [key=0, style=solid];
m6_247 -> m6_238  [key=2, style=dotted];
m6_242 -> m6_243  [key=0, style=solid];
m6_242 -> m6_234  [key=2, style=dotted];
m6_242 -> m6_246  [key=1, style=dashed, color=darkseagreen4, label=queue];
m6_243 -> m6_244  [key=0, style=solid];
m6_243 -> m6_245  [key=0, style=solid];
m6_243 -> m6_235  [key=2, style=dotted];
m6_246 -> m6_247  [key=0, style=solid];
m6_246 -> m6_237  [key=2, style=dotted];
m6_244 -> m6_248  [key=0, style=solid];
m6_245 -> m6_246  [key=0, style=solid];
m6_245 -> m6_236  [key=2, style=dotted];
m6_245 -> m6_247  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m6_248 -> m6_239  [key=0, style=bold, color=blue];
m6_434 -> m6_435  [key=0, style=solid];
m6_32 -> m6_33  [key=0, style=solid];
m6_40 -> m6_41  [key=0, style=solid];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_35  [key=2, style=dotted];
m6_33 -> m6_36  [key=2, style=dotted];
m6_33 -> m6_37  [key=2, style=dotted];
m6_33 -> m6_38  [key=2, style=dotted];
m6_33 -> m6_39  [key=2, style=dotted];
m6_34 -> m6_32  [key=0, style=bold, color=blue];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_41  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, HangFire.Web.ProcessingJobDto>"];
m6_42 -> m6_40  [key=0, style=bold, color=blue];
m6_70 -> m6_71  [key=0, style=solid];
m6_70 -> m6_72  [key=2, style=dotted];
m6_84 -> m6_85  [key=0, style=solid];
m6_84 -> m6_86  [key=2, style=dotted];
m6_84 -> m6_87  [key=2, style=dotted];
m6_84 -> m6_36  [key=2, style=dotted];
m6_84 -> m6_37  [key=2, style=dotted];
m6_84 -> m6_39  [key=2, style=dotted];
m6_78 -> m6_79  [key=0, style=solid];
m6_78 -> m6_72  [key=2, style=dotted];
m6_65 -> m6_66  [key=0, style=solid];
m6_65 -> m6_67  [key=2, style=dotted];
m6_65 -> m6_68  [key=2, style=dotted];
m6_74 -> m6_75  [key=0, style=solid];
m6_74 -> m6_67  [key=2, style=dotted];
m6_74 -> m6_76  [key=2, style=dotted];
m6_64 -> m6_65  [key=0, style=solid];
m6_69 -> m6_70  [key=0, style=solid];
m6_73 -> m6_74  [key=0, style=solid];
m6_77 -> m6_78  [key=0, style=solid];
m6_80 -> m6_81  [key=0, style=solid];
m6_83 -> m6_84  [key=0, style=solid];
m6_66 -> m6_64  [key=0, style=bold, color=blue];
m6_71 -> m6_69  [key=0, style=bold, color=blue];
m6_75 -> m6_73  [key=0, style=bold, color=blue];
m6_79 -> m6_77  [key=0, style=bold, color=blue];
m6_81 -> m6_82  [key=0, style=solid];
m6_82 -> m6_80  [key=0, style=bold, color=blue];
m6_85 -> m6_83  [key=0, style=bold, color=blue];
m6_120 -> m6_121  [key=0, style=solid];
m6_120 -> m6_72  [key=2, style=dotted];
m6_130 -> m6_131  [key=0, style=solid];
m6_130 -> m6_132  [key=2, style=dotted];
m6_130 -> m6_133  [key=2, style=dotted];
m6_130 -> m6_134  [key=2, style=dotted];
m6_130 -> m6_38  [key=2, style=dotted];
m6_127 -> m6_128  [key=0, style=solid];
m6_127 -> m6_72  [key=2, style=dotted];
m6_117 -> m6_118  [key=0, style=solid];
m6_117 -> m6_67  [key=2, style=dotted];
m6_117 -> m6_68  [key=2, style=dotted];
m6_123 -> m6_124  [key=0, style=solid];
m6_123 -> m6_67  [key=2, style=dotted];
m6_123 -> m6_125  [key=2, style=dotted];
m6_116 -> m6_117  [key=0, style=solid];
m6_119 -> m6_120  [key=0, style=solid];
m6_122 -> m6_123  [key=0, style=solid];
m6_126 -> m6_127  [key=0, style=solid];
m6_129 -> m6_130  [key=0, style=solid];
m6_118 -> m6_116  [key=0, style=bold, color=blue];
m6_121 -> m6_119  [key=0, style=bold, color=blue];
m6_124 -> m6_122  [key=0, style=bold, color=blue];
m6_128 -> m6_126  [key=0, style=bold, color=blue];
m6_131 -> m6_129  [key=0, style=bold, color=blue];
m6_141 -> m6_142  [key=0, style=solid];
m6_142 -> m6_143  [key=0, style=solid];
m6_142 -> m6_144  [key=2, style=dotted];
m6_142 -> m6_37  [key=2, style=dotted];
m6_142 -> m6_36  [key=2, style=dotted];
m6_142 -> m6_38  [key=2, style=dotted];
m6_142 -> m6_39  [key=2, style=dotted];
m6_143 -> m6_141  [key=0, style=bold, color=blue];
m6_151 -> m6_152  [key=0, style=solid];
m6_152 -> m6_153  [key=0, style=solid];
m6_152 -> m6_154  [key=2, style=dotted];
m6_152 -> m6_37  [key=2, style=dotted];
m6_152 -> m6_36  [key=2, style=dotted];
m6_152 -> m6_38  [key=2, style=dotted];
m6_152 -> m6_39  [key=2, style=dotted];
m6_153 -> m6_151  [key=0, style=bold, color=blue];
m6_177 -> m6_178  [key=0, style=solid];
m6_177 -> m6_67  [key=2, style=dotted];
m6_177 -> m6_150  [key=2, style=dotted];
m6_183 -> m6_184  [key=0, style=solid];
m6_183 -> m6_67  [key=2, style=dotted];
m6_183 -> m6_10  [key=2, style=dotted];
m6_189 -> m6_190  [key=0, style=solid];
m6_189 -> m6_67  [key=2, style=dotted];
m6_189 -> m6_10  [key=2, style=dotted];
m6_176 -> m6_177  [key=0, style=solid];
m6_179 -> m6_180  [key=0, style=solid];
m6_182 -> m6_183  [key=0, style=solid];
m6_185 -> m6_186  [key=0, style=solid];
m6_188 -> m6_189  [key=0, style=solid];
m6_191 -> m6_192  [key=0, style=solid];
m6_194 -> m6_195  [key=0, style=solid];
m6_178 -> m6_176  [key=0, style=bold, color=blue];
m6_180 -> m6_181  [key=0, style=solid];
m6_181 -> m6_179  [key=0, style=bold, color=blue];
m6_184 -> m6_182  [key=0, style=bold, color=blue];
m6_186 -> m6_187  [key=0, style=solid];
m6_187 -> m6_185  [key=0, style=bold, color=blue];
m6_190 -> m6_188  [key=0, style=bold, color=blue];
m6_192 -> m6_193  [key=0, style=solid];
m6_193 -> m6_191  [key=0, style=bold, color=blue];
m6_195 -> m6_196  [key=0, style=solid];
m6_195 -> m6_197  [key=2, style=dotted];
m6_195 -> m6_36  [key=2, style=dotted];
m6_195 -> m6_38  [key=2, style=dotted];
m6_195 -> m6_39  [key=2, style=dotted];
m6_196 -> m6_194  [key=0, style=bold, color=blue];
m6_203 -> m6_204  [key=0, style=solid];
m6_204 -> m6_205  [key=0, style=solid];
m6_204 -> m6_197  [key=2, style=dotted];
m6_204 -> m6_36  [key=2, style=dotted];
m6_204 -> m6_38  [key=2, style=dotted];
m6_204 -> m6_39  [key=2, style=dotted];
m6_205 -> m6_203  [key=0, style=bold, color=blue];
m6_211 -> m6_212  [key=0, style=solid];
m6_212 -> m6_213  [key=0, style=solid];
m6_212 -> m6_214  [key=2, style=dotted];
m6_212 -> m6_36  [key=2, style=dotted];
m6_212 -> m6_38  [key=2, style=dotted];
m6_213 -> m6_211  [key=0, style=bold, color=blue];
m6_265 -> m6_266  [key=0, style=solid];
m6_265 -> m6_267  [key=2, style=dotted];
m6_264 -> m6_265  [key=0, style=solid];
m6_268 -> m6_269  [key=0, style=solid];
m6_271 -> m6_272  [key=0, style=solid];
m6_266 -> m6_264  [key=0, style=bold, color=blue];
m6_269 -> m6_270  [key=0, style=solid];
m6_270 -> m6_268  [key=0, style=bold, color=blue];
m6_272 -> m6_273  [key=0, style=solid];
m6_273 -> m6_271  [key=0, style=bold, color=blue];
m6_299 -> m6_300  [key=0, style=solid];
m6_299 -> m6_301  [key=2, style=dotted];
m6_299 -> m6_302  [key=2, style=dotted];
m6_298 -> m6_299  [key=0, style=solid];
m6_300 -> m6_298  [key=0, style=bold, color=blue];
m6_327 -> m6_328  [key=0, style=solid];
m6_327 -> m6_67  [key=2, style=dotted];
m6_323 -> m6_324  [key=0, style=solid];
m6_326 -> m6_327  [key=0, style=solid];
m6_324 -> m6_325  [key=0, style=solid];
m6_324 -> m6_301  [key=2, style=dotted];
m6_325 -> m6_323  [key=0, style=bold, color=blue];
m6_328 -> m6_326  [key=0, style=bold, color=blue];
m6_344 -> m6_345  [key=0, style=solid];
m6_344 -> m6_9  [key=2, style=dotted];
m6_344 -> m6_68  [key=2, style=dotted];
m6_352 -> m6_353  [key=0, style=solid];
m6_352 -> m6_9  [key=2, style=dotted];
m6_352 -> m6_68  [key=2, style=dotted];
m6_362 -> m6_363  [key=0, style=solid];
m6_362 -> m6_364  [key=2, style=dotted];
m6_362 -> m6_365  [key=2, style=dotted];
m6_362 -> m6_366  [key=2, style=dotted];
m6_362 -> m6_367  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_347 -> m6_348  [key=0, style=solid];
m6_347 -> m6_349  [key=0, style=solid];
m6_347 -> m6_350  [key=2, style=dotted];
m6_348 -> m6_349  [key=0, style=solid];
m6_348 -> m6_72  [key=2, style=dotted];
m6_359 -> m6_360  [key=0, style=solid];
m6_359 -> m6_350  [key=2, style=dotted];
m6_355 -> m6_356  [key=0, style=solid];
m6_355 -> m6_357  [key=0, style=solid];
m6_355 -> m6_350  [key=2, style=dotted];
m6_356 -> m6_357  [key=0, style=solid];
m6_356 -> m6_72  [key=2, style=dotted];
m6_343 -> m6_344  [key=0, style=solid];
m6_346 -> m6_347  [key=0, style=solid];
m6_346 -> m6_348  [key=1, style=dashed, color=darkseagreen4, label="?"];
m6_351 -> m6_352  [key=0, style=solid];
m6_354 -> m6_355  [key=0, style=solid];
m6_354 -> m6_356  [key=1, style=dashed, color=darkseagreen4, label="?"];
m6_358 -> m6_359  [key=0, style=solid];
m6_361 -> m6_362  [key=0, style=solid];
m6_345 -> m6_343  [key=0, style=bold, color=blue];
m6_349 -> m6_346  [key=0, style=bold, color=blue];
m6_353 -> m6_351  [key=0, style=bold, color=blue];
m6_357 -> m6_354  [key=0, style=bold, color=blue];
m6_360 -> m6_358  [key=0, style=bold, color=blue];
m6_363 -> m6_361  [key=0, style=bold, color=blue];
m6_367 -> m6_368  [key=0, style=solid];
m6_368 -> m6_369  [key=0, style=solid];
m6_369 -> m6_367  [key=0, style=bold, color=blue];
m6_397 -> m6_398  [key=0, style=solid];
m6_403 -> m6_404  [key=0, style=solid];
m6_409 -> m6_410  [key=0, style=solid];
m6_415 -> m6_416  [key=0, style=solid];
m6_422 -> m6_423  [key=0, style=solid];
m6_422 -> m6_424  [key=2, style=dotted];
m6_429 -> m6_430  [key=0, style=solid];
m6_435 -> m6_436  [key=0, style=solid];
m6_392 -> m6_393  [key=0, style=solid];
m6_396 -> m6_397  [key=0, style=solid];
m6_399 -> m6_400  [key=0, style=solid];
m6_402 -> m6_403  [key=0, style=solid];
m6_405 -> m6_406  [key=0, style=solid];
m6_408 -> m6_409  [key=0, style=solid];
m6_411 -> m6_412  [key=0, style=solid];
m6_414 -> m6_415  [key=0, style=solid];
m6_417 -> m6_418  [key=0, style=solid];
m6_421 -> m6_422  [key=0, style=solid];
m6_425 -> m6_426  [key=0, style=solid];
m6_428 -> m6_429  [key=0, style=solid];
m6_432 -> m6_433  [key=0, style=solid];
m6_432 -> m6_67  [key=2, style=dotted];
m6_432 -> m6_10  [key=2, style=dotted];
m6_431 -> m6_432  [key=0, style=solid];
m6_393 -> m6_394  [key=0, style=solid];
m6_393 -> m6_395  [key=2, style=dotted];
m6_394 -> m6_392  [key=0, style=bold, color=blue];
m6_398 -> m6_396  [key=0, style=bold, color=blue];
m6_400 -> m6_401  [key=0, style=solid];
m6_400 -> m6_395  [key=2, style=dotted];
m6_401 -> m6_399  [key=0, style=bold, color=blue];
m6_404 -> m6_402  [key=0, style=bold, color=blue];
m6_406 -> m6_407  [key=0, style=solid];
m6_406 -> m6_4  [key=2, style=dotted];
m6_407 -> m6_405  [key=0, style=bold, color=blue];
m6_410 -> m6_408  [key=0, style=bold, color=blue];
m6_412 -> m6_413  [key=0, style=solid];
m6_412 -> m6_4  [key=2, style=dotted];
m6_413 -> m6_411  [key=0, style=bold, color=blue];
m6_416 -> m6_414  [key=0, style=bold, color=blue];
m6_418 -> m6_419  [key=0, style=solid];
m6_418 -> m6_420  [key=2, style=dotted];
m6_419 -> m6_417  [key=0, style=bold, color=blue];
m6_423 -> m6_421  [key=0, style=bold, color=blue];
m6_426 -> m6_427  [key=0, style=solid];
m6_426 -> m6_4  [key=2, style=dotted];
m6_427 -> m6_425  [key=0, style=bold, color=blue];
m6_430 -> m6_428  [key=0, style=bold, color=blue];
m6_433 -> m6_431  [key=0, style=bold, color=blue];
m6_436 -> m6_434  [key=0, style=bold, color=blue];
m6_220 -> m6_221  [key=0, style=solid];
m6_221 -> m6_222  [key=0, style=solid];
m6_222 -> m6_223  [key=0, style=solid];
m6_222 -> m6_219  [key=2, style=dotted];
m6_223 -> m6_220  [key=0, style=bold, color=blue];
m6_135 -> m6_136  [key=0, style=solid];
m6_135 -> m6_137  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_136 -> m6_137  [key=0, style=solid];
m6_137 -> m6_138  [key=0, style=solid];
m6_137 -> m6_140  [key=2, style=dotted];
m6_138 -> m6_139  [key=0, style=solid];
m6_138 -> m6_29  [key=2, style=dotted];
m6_138 -> m6_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_139 -> m6_135  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid, color=red];
m6_1 -> m6_2  [key=0, style=solid, color=red];
m6_1 -> m6_1  [key=3, color=red, style=bold, label="Field variable string JobId"];
m6_2 -> m6_3  [key=0, style=solid, color=red];
m6_2 -> m6_4  [key=2, style=dotted, color=red];
m6_3 -> m6_0  [key=0, style=bold, color=blue];
m6_145 -> m6_146  [key=0, style=solid];
m6_145 -> m6_147  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_146 -> m6_147  [key=0, style=solid];
m6_147 -> m6_148  [key=0, style=solid];
m6_147 -> m6_150  [key=2, style=dotted];
m6_148 -> m6_149  [key=0, style=solid];
m6_148 -> m6_29  [key=2, style=dotted];
m6_148 -> m6_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_149 -> m6_145  [key=0, style=bold, color=blue];
m6_155 -> m6_156  [key=0, style=solid];
m6_156 -> m6_157  [key=0, style=solid];
m6_157 -> m6_158  [key=0, style=solid];
m6_157 -> m6_112  [key=2, style=dotted];
m6_157 -> m6_159  [key=1, style=dashed, color=darkseagreen4, label=queues];
m6_158 -> m6_159  [key=0, style=solid];
m6_158 -> m6_172  [key=2, style=dotted];
m6_158 -> m6_169  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_158 -> m6_170  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_159 -> m6_160  [key=0, style=solid];
m6_159 -> m6_170  [key=0, style=solid];
m6_159 -> m6_164  [key=1, style=dashed, color=darkseagreen4, label=queue];
m6_159 -> m6_177  [key=1, style=dashed, color=darkseagreen4, label=queue];
m6_159 -> m6_165  [key=1, style=dashed, color=darkseagreen4, label=queue];
m6_159 -> m6_183  [key=1, style=dashed, color=darkseagreen4, label=queue];
m6_159 -> m6_166  [key=1, style=dashed, color=darkseagreen4, label=queue];
m6_159 -> m6_189  [key=1, style=dashed, color=darkseagreen4, label=queue];
m6_159 -> m6_169  [key=1, style=dashed, color=darkseagreen4, label=queue];
m6_169 -> m6_159  [key=0, style=solid];
m6_169 -> m6_174  [key=2, style=dotted];
m6_169 -> m6_175  [key=2, style=dotted];
m6_170 -> m6_171  [key=0, style=solid];
m6_160 -> m6_161  [key=0, style=solid];
m6_164 -> m6_165  [key=0, style=solid];
m6_164 -> m6_61  [key=2, style=dotted];
m6_164 -> m6_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_164 -> m6_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_164 -> m6_168  [key=1, style=dashed, color=darkseagreen4, label=firstJobIds];
m6_165 -> m6_166  [key=0, style=solid];
m6_165 -> m6_61  [key=2, style=dotted];
m6_165 -> m6_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_165 -> m6_185  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_165 -> m6_169  [key=1, style=dashed, color=darkseagreen4, label=length];
m6_166 -> m6_167  [key=0, style=solid];
m6_166 -> m6_61  [key=2, style=dotted];
m6_166 -> m6_188  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_166 -> m6_191  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_166 -> m6_169  [key=1, style=dashed, color=darkseagreen4, label=dequeued];
m6_161 -> m6_162  [key=0, style=solid];
m6_162 -> m6_163  [key=0, style=solid];
m6_163 -> m6_164  [key=0, style=solid];
m6_163 -> m6_60  [key=2, style=dotted];
m6_163 -> m6_165  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_163 -> m6_166  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_163 -> m6_167  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_167 -> m6_168  [key=0, style=solid];
m6_167 -> m6_62  [key=2, style=dotted];
m6_168 -> m6_169  [key=0, style=solid];
m6_168 -> m6_173  [key=2, style=dotted];
m6_168 -> m6_194  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_171 -> m6_155  [key=0, style=bold, color=blue];
m6_88 -> m6_89  [key=0, style=solid];
m6_89 -> m6_90  [key=0, style=solid];
m6_90 -> m6_91  [key=0, style=solid];
m6_90 -> m6_92  [key=2, style=dotted];
m6_91 -> m6_88  [key=0, style=bold, color=blue];
m6_97 -> m6_98  [key=0, style=solid];
m6_98 -> m6_99  [key=0, style=solid];
m6_99 -> m6_100  [key=0, style=solid];
m6_99 -> m6_112  [key=2, style=dotted];
m6_99 -> m6_105  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m6_99 -> m6_110  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m6_100 -> m6_101  [key=0, style=solid];
m6_100 -> m6_102  [key=0, style=solid];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_109  [key=0, style=solid];
m6_110 -> m6_111  [key=0, style=solid];
m6_110 -> m6_114  [key=2, style=dotted];
m6_110 -> m6_115  [key=2, style=dotted];
m6_110 -> m6_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_101 -> m6_111  [key=0, style=solid];
m6_101 -> m6_113  [key=2, style=dotted];
m6_102 -> m6_103  [key=0, style=solid];
m6_102 -> m6_59  [key=2, style=dotted];
m6_102 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label=servers];
m6_102 -> m6_120  [key=1, style=dashed, color=darkseagreen4, label=servers];
m6_102 -> m6_110  [key=1, style=dashed, color=darkseagreen4, label=servers];
m6_102 -> m6_130  [key=1, style=dashed, color=darkseagreen4, label=servers];
m6_103 -> m6_104  [key=0, style=solid];
m6_103 -> m6_59  [key=2, style=dotted];
m6_103 -> m6_108  [key=1, style=dashed, color=darkseagreen4, label=queues];
m6_103 -> m6_127  [key=1, style=dashed, color=darkseagreen4, label=queues];
m6_103 -> m6_110  [key=1, style=dashed, color=darkseagreen4, label=queues];
m6_103 -> m6_130  [key=1, style=dashed, color=darkseagreen4, label=queues];
m6_107 -> m6_108  [key=0, style=solid];
m6_107 -> m6_61  [key=2, style=dotted];
m6_107 -> m6_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_107 -> m6_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_60  [key=2, style=dotted];
m6_104 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_104 -> m6_108  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_104 -> m6_109  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_108 -> m6_105  [key=0, style=solid];
m6_108 -> m6_61  [key=2, style=dotted];
m6_108 -> m6_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_108 -> m6_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_109 -> m6_110  [key=0, style=solid];
m6_109 -> m6_62  [key=2, style=dotted];
m6_106 -> m6_107  [key=0, style=solid];
m6_106 -> m6_117  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_106 -> m6_120  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_106 -> m6_108  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_106 -> m6_123  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_106 -> m6_127  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_111 -> m6_97  [key=0, style=bold, color=blue];
m6_374 -> m6_375  [key=0, style=solid];
m6_375 -> m6_376  [key=0, style=solid];
m6_376 -> m6_377  [key=0, style=solid];
m6_376 -> m6_391  [key=2, style=dotted];
m6_376 -> m6_379  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_376 -> m6_397  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_376 -> m6_380  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_376 -> m6_403  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_376 -> m6_381  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_376 -> m6_409  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_376 -> m6_382  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_376 -> m6_415  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_376 -> m6_383  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_376 -> m6_422  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_376 -> m6_384  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_376 -> m6_429  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_376 -> m6_387  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_376 -> m6_435  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_376 -> m6_389  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_377 -> m6_378  [key=0, style=solid];
m6_377 -> m6_112  [key=2, style=dotted];
m6_377 -> m6_385  [key=1, style=dashed, color=darkseagreen4, label=queues];
m6_379 -> m6_380  [key=0, style=solid];
m6_379 -> m6_61  [key=2, style=dotted];
m6_379 -> m6_392  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_379 -> m6_396  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_380 -> m6_381  [key=0, style=solid];
m6_380 -> m6_61  [key=2, style=dotted];
m6_380 -> m6_399  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_380 -> m6_402  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_381 -> m6_382  [key=0, style=solid];
m6_381 -> m6_61  [key=2, style=dotted];
m6_381 -> m6_405  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_381 -> m6_408  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_382 -> m6_383  [key=0, style=solid];
m6_382 -> m6_61  [key=2, style=dotted];
m6_382 -> m6_411  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_382 -> m6_414  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_383 -> m6_384  [key=0, style=solid];
m6_383 -> m6_61  [key=2, style=dotted];
m6_383 -> m6_417  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_383 -> m6_421  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_384 -> m6_385  [key=0, style=solid];
m6_384 -> m6_61  [key=2, style=dotted];
m6_384 -> m6_425  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_384 -> m6_428  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_387 -> m6_385  [key=0, style=solid];
m6_387 -> m6_61  [key=2, style=dotted];
m6_387 -> m6_431  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_387 -> m6_434  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_389 -> m6_390  [key=0, style=solid];
m6_378 -> m6_379  [key=0, style=solid];
m6_378 -> m6_60  [key=2, style=dotted];
m6_378 -> m6_380  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_378 -> m6_381  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_378 -> m6_382  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_378 -> m6_383  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_378 -> m6_384  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_378 -> m6_387  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_378 -> m6_388  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m6_385 -> m6_386  [key=0, style=solid];
m6_385 -> m6_388  [key=0, style=solid];
m6_388 -> m6_389  [key=0, style=solid];
m6_388 -> m6_62  [key=2, style=dotted];
m6_386 -> m6_387  [key=0, style=solid];
m6_386 -> m6_432  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m6_390 -> m6_374  [key=0, style=bold, color=blue];
m6_370 -> m6_371  [key=0, style=solid];
m6_371 -> m6_372  [key=0, style=solid];
m6_372 -> m6_373  [key=0, style=solid];
m6_372 -> m6_10  [key=2, style=dotted];
m6_373 -> m6_370  [key=0, style=bold, color=blue];
m6_215 -> m6_216  [key=0, style=solid];
m6_216 -> m6_217  [key=0, style=solid];
m6_217 -> m6_218  [key=0, style=solid];
m6_217 -> m6_219  [key=2, style=dotted];
m6_218 -> m6_215  [key=0, style=bold, color=blue];
m6_92 -> m6_303  [key=0, style=solid];
m6_92 -> m6_310  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_92 -> m6_327  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_92 -> m6_311  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m6_303 -> m6_304  [key=0, style=solid];
m6_303 -> m6_306  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m6_303 -> m6_307  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m6_303 -> m6_308  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m6_310 -> m6_311  [key=0, style=solid];
m6_310 -> m6_114  [key=2, style=dotted];
m6_310 -> m6_115  [key=2, style=dotted];
m6_310 -> m6_326  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_311 -> m6_312  [key=0, style=solid];
m6_311 -> m6_294  [key=2, style=dotted];
m6_311 -> m6_316  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m6_304 -> m6_305  [key=0, style=solid];
m6_304 -> m6_322  [key=2, style=dotted];
m6_304 -> m6_306  [key=1, style=dashed, color=darkseagreen4, label=startDate];
m6_306 -> m6_307  [key=0, style=solid];
m6_306 -> m6_309  [key=0, style=solid];
m6_307 -> m6_308  [key=0, style=solid];
m6_307 -> m6_175  [key=2, style=dotted];
m6_308 -> m6_306  [key=0, style=solid];
m6_308 -> m6_322  [key=2, style=dotted];
m6_308 -> m6_308  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m6_305 -> m6_306  [key=0, style=solid];
m6_305 -> m6_113  [key=2, style=dotted];
m6_305 -> m6_307  [key=1, style=dashed, color=darkseagreen4, label=dates];
m6_305 -> m6_309  [key=1, style=dashed, color=darkseagreen4, label=dates];
m6_305 -> m6_318  [key=1, style=dashed, color=darkseagreen4, label=dates];
m6_309 -> m6_310  [key=0, style=solid];
m6_309 -> m6_114  [key=2, style=dotted];
m6_309 -> m6_115  [key=2, style=dotted];
m6_309 -> m6_323  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_309 -> m6_314  [key=1, style=dashed, color=darkseagreen4, label=stringDates];
m6_318 -> m6_319  [key=0, style=solid];
m6_318 -> m6_297  [key=2, style=dotted];
m6_314 -> m6_315  [key=0, style=solid];
m6_314 -> m6_320  [key=0, style=solid];
m6_312 -> m6_313  [key=0, style=solid];
m6_312 -> m6_59  [key=2, style=dotted];
m6_312 -> m6_318  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_312 -> m6_320  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_316 -> m6_317  [key=0, style=solid];
m6_316 -> m6_318  [key=0, style=solid];
m6_316 -> m6_295  [key=2, style=dotted];
m6_316 -> m6_296  [key=2, style=dotted];
m6_313 -> m6_314  [key=0, style=solid];
m6_313 -> m6_316  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_313 -> m6_318  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_313 -> m6_319  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_320 -> m6_321  [key=0, style=solid];
m6_319 -> m6_314  [key=0, style=solid];
m6_319 -> m6_319  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_315 -> m6_316  [key=0, style=solid];
m6_317 -> m6_318  [key=0, style=solid];
m6_321 -> m6_92  [key=0, style=bold, color=blue];
m6_15 -> m6_16  [key=0, style=solid, color=red];
m6_16 -> m6_17  [key=0, style=solid, color=red];
m6_17 -> m6_18  [key=0, style=solid, color=red];
m6_17 -> m6_4  [key=2, style=dotted, color=red];
m6_18 -> m6_15  [key=0, style=bold, color=blue];
m6_249 -> m6_250  [key=0, style=solid];
m6_249 -> m6_251  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_249 -> m6_255  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_250 -> m6_251  [key=0, style=solid];
m6_251 -> m6_252  [key=0, style=solid];
m6_251 -> m6_9  [key=2, style=dotted];
m6_251 -> m6_259  [key=2, style=dotted];
m6_251 -> m6_257  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_255 -> m6_256  [key=0, style=solid];
m6_255 -> m6_9  [key=2, style=dotted];
m6_255 -> m6_125  [key=2, style=dotted];
m6_252 -> m6_253  [key=0, style=solid];
m6_252 -> m6_254  [key=0, style=solid];
m6_257 -> m6_258  [key=0, style=solid];
m6_257 -> m6_260  [key=2, style=dotted];
m6_257 -> m6_261  [key=2, style=dotted];
m6_257 -> m6_262  [key=2, style=dotted];
m6_257 -> m6_263  [key=2, style=dotted];
m6_257 -> m6_63  [key=2, style=dotted];
m6_257 -> m6_264  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_257 -> m6_268  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_257 -> m6_271  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_253 -> m6_258  [key=0, style=solid];
m6_254 -> m6_255  [key=0, style=solid];
m6_254 -> m6_257  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m6_254 -> m6_265  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m6_256 -> m6_257  [key=0, style=solid];
m6_256 -> m6_114  [key=2, style=dotted];
m6_256 -> m6_115  [key=2, style=dotted];
m6_258 -> m6_249  [key=0, style=bold, color=blue];
m6_5 -> m6_6  [key=0, style=solid, color=red];
m6_5 -> m6_7  [key=1, style=dashed, color=red, label=string];
m6_6 -> m6_7  [key=0, style=solid, color=red];
m6_7 -> m6_8  [key=0, style=solid, color=red];
m6_7 -> m6_9  [key=2, style=dotted, color=red];
m6_7 -> m6_10  [key=2, style=dotted, color=red];
m6_8 -> m6_5  [key=0, style=bold, color=blue];
m6_206 -> m6_207  [key=0, style=solid];
m6_206 -> m6_208  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_207 -> m6_208  [key=0, style=solid];
m6_208 -> m6_209  [key=0, style=solid];
m6_208 -> m6_9  [key=2, style=dotted];
m6_208 -> m6_150  [key=2, style=dotted];
m6_209 -> m6_210  [key=0, style=solid];
m6_209 -> m6_29  [key=2, style=dotted];
m6_209 -> m6_211  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_210 -> m6_206  [key=0, style=bold, color=blue];
m6_93 -> m6_94  [key=0, style=solid];
m6_94 -> m6_95  [key=0, style=solid];
m6_95 -> m6_96  [key=0, style=solid];
m6_95 -> m6_92  [key=2, style=dotted];
m6_96 -> m6_93  [key=0, style=bold, color=blue];
m6_19 -> m6_20  [key=0, style=solid, color=red];
m6_20 -> m6_21  [key=0, style=solid, color=red];
m6_21 -> m6_22  [key=0, style=solid, color=red];
m6_21 -> m6_4  [key=2, style=dotted, color=red];
m6_22 -> m6_19  [key=0, style=bold, color=blue];
m6_224 -> m6_225  [key=0, style=solid];
m6_224 -> m6_226  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_224 -> m6_232  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_225 -> m6_226  [key=0, style=solid];
m6_226 -> m6_227  [key=0, style=solid];
m6_226 -> m6_9  [key=2, style=dotted];
m6_226 -> m6_76  [key=2, style=dotted];
m6_232 -> m6_233  [key=0, style=solid];
m6_232 -> m6_238  [key=2, style=dotted];
m6_227 -> m6_228  [key=0, style=solid];
m6_227 -> m6_234  [key=2, style=dotted];
m6_227 -> m6_231  [key=1, style=dashed, color=darkseagreen4, label=queue];
m6_228 -> m6_229  [key=0, style=solid];
m6_228 -> m6_230  [key=0, style=solid];
m6_228 -> m6_235  [key=2, style=dotted];
m6_231 -> m6_232  [key=0, style=solid];
m6_231 -> m6_237  [key=2, style=dotted];
m6_229 -> m6_233  [key=0, style=solid];
m6_230 -> m6_231  [key=0, style=solid];
m6_230 -> m6_236  [key=2, style=dotted];
m6_230 -> m6_232  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m6_233 -> m6_224  [key=0, style=bold, color=blue];
m6_198 -> m6_199  [key=0, style=solid];
m6_198 -> m6_200  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_199 -> m6_200  [key=0, style=solid];
m6_200 -> m6_201  [key=0, style=solid];
m6_200 -> m6_9  [key=2, style=dotted];
m6_200 -> m6_150  [key=2, style=dotted];
m6_201 -> m6_202  [key=0, style=solid];
m6_201 -> m6_29  [key=2, style=dotted];
m6_201 -> m6_203  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_202 -> m6_198  [key=0, style=bold, color=blue];
m6_437 -> m6_65  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_437 -> m6_70  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_437 -> m6_74  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_437 -> m6_78  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_438 -> m6_70  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_438 -> m6_84  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_439 -> m6_78  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_439 -> m6_84  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_440 -> m6_117  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_440 -> m6_120  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_440 -> m6_123  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_440 -> m6_127  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_441 -> m6_120  [key=1, style=dashed, color=darkseagreen4, label=servers];
m6_441 -> m6_130  [key=1, style=dashed, color=darkseagreen4, label=servers];
m6_442 -> m6_127  [key=1, style=dashed, color=darkseagreen4, label=queues];
m6_442 -> m6_130  [key=1, style=dashed, color=darkseagreen4, label=queues];
m6_443 -> m6_177  [key=1, style=dashed, color=darkseagreen4, label=queue];
m6_443 -> m6_183  [key=1, style=dashed, color=darkseagreen4, label=queue];
m6_443 -> m6_189  [key=1, style=dashed, color=darkseagreen4, label=queue];
m6_444 -> m6_265  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m6_445 -> m6_299  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_446 -> m6_327  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_447 -> m6_344  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_448 -> m6_344  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_448 -> m6_347  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_448 -> m6_348  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_448 -> m6_352  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_448 -> m6_355  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_448 -> m6_356  [key=1, style=dashed, color=darkseagreen4, label=id];
m6_449 -> m6_347  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_449 -> m6_348  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_449 -> m6_359  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m6_450 -> m6_352  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_451 -> m6_355  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_451 -> m6_356  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_451 -> m6_359  [key=1, style=dashed, color=darkseagreen4, label=states];
m6_452 -> m6_362  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m6_453 -> m6_397  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_453 -> m6_403  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_453 -> m6_409  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_453 -> m6_415  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_453 -> m6_422  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_453 -> m6_429  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_453 -> m6_435  [key=1, style=dashed, color=darkseagreen4, label=stats];
m6_454 -> m6_432  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m7_8 -> m7_9  [key=0, style=solid, color=red];
m7_9 -> m7_10  [key=0, style=solid, color=red];
m7_9 -> m7_11  [key=2, style=dotted, color=red];
m7_10 -> m7_8  [key=0, style=bold, color=blue];
m7_4 -> m7_5  [key=0, style=solid, color=red];
m7_5 -> m7_6  [key=0, style=solid, color=red];
m7_5 -> m7_7  [key=2, style=dotted, color=red];
m7_6 -> m7_4  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid, color=red];
m7_1 -> m7_2  [key=0, style=solid, color=red];
m7_1 -> m7_3  [key=2, style=dotted, color=red];
m7_1 -> m7_4  [key=2, style=dotted, color=red];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_10 -> m8_22  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Tuple<HangFire.Dashboard.IRequestDispatcher, System.Text.RegularExpressions.Match> FindDispatcher"];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_13  [key=0, style=solid];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_26  [key=2, style=dotted];
m8_19 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label=match];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_22  [key=0, style=solid];
m8_13 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label=dispatcher];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label=pattern];
m8_14 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label=pattern];
m8_14 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label=pattern];
m8_14 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label=pattern];
m8_22 -> m8_23  [key=0, style=solid];
m8_21 -> m8_23  [key=0, style=solid];
m8_21 -> m8_8  [key=2, style=dotted];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_17  [key=0, style=solid];
m8_15 -> m8_24  [key=2, style=dotted];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label=pattern];
m8_16 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label=pattern];
m8_16 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label=pattern];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_19  [key=0, style=solid];
m8_17 -> m8_25  [key=2, style=dotted];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label=pattern];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_13  [key=0, style=solid];
m8_23 -> m8_10  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.IRequestDispatcher"];
m8_0 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=0, style=solid];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_8  [key=2, style=dotted];
m8_5 -> m8_9  [key=2, style=dotted];
m8_2 -> m8_6  [key=0, style=solid];
m8_2 -> m8_7  [key=2, style=dotted];
m8_4 -> m8_6  [key=0, style=solid];
m8_4 -> m8_7  [key=2, style=dotted];
m8_6 -> m8_0  [key=0, style=bold, color=blue];
m8_27 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.DashboardRouteCollection"];
m8_27 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.DashboardRouteCollection"];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_0 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_0 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_2 -> m9_3  [key=0, style=solid, color=green];
m9_2 -> m9_5  [key=2, style=dotted, color=green];
m9_2 -> m9_7  [key=0, style=solid];
m9_2 -> m9_8  [key=2, style=dotted];
m9_1 -> m9_2  [key=0, style=solid, color=green];
m9_1 -> m9_4  [key=2, style=dotted];
m9_1 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1 -> m9_3  [key=0, style=solid];
m9_3 -> m9_0  [key=0, style=bold, color=blue];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_5  [key=0, style=solid];
m9_8 -> m9_6  [key=0, style=bold, color=blue];
m9_4 -> m9_7  [key=0, style=solid];
m9_4 -> m9_8  [key=2, style=dotted];
m9_17 -> m9_18  [key=0, style=solid];
m9_19 -> m9_5  [key=2, style=dotted];
m9_19 -> m9_20  [key=0, style=solid];
m9_20 -> m9_5  [key=2, style=dotted];
m9_20 -> m9_21  [key=0, style=solid];
m9_18 -> m9_9  [key=2, style=dotted];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_20  [key=1, style=dashed, color=darkseagreen4, label=processingJob];
m9_21 -> m9_17  [key=0, style=bold, color=blue];
m9_5 -> m9_6  [key=0, style=solid];
m9_9 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerProcessingJob"];
m9_9 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerProcessingJob"];
m9_6 -> m9_7  [key=0, style=solid];
m9_7 -> m9_0  [key=0, style=bold, color=blue];
m9_7 -> m9_9  [key=2, style=dotted];
m9_7 -> m9_8  [key=0, style=solid];
m9_14 -> m9_15  [key=0, style=solid, color=green];
m9_15 -> m9_16  [key=0, style=solid, color=green];
m9_15 -> m9_9  [key=2, style=dotted, color=green];
m9_16 -> m9_14  [key=0, style=bold, color=blue];
m9_10 -> m9_11  [key=0, style=solid, color=green];
m9_11 -> m9_12  [key=0, style=solid, color=green];
m9_11 -> m9_4  [key=2, style=dotted, color=green];
m9_11 -> m9_14  [key=1, style=dashed, color=green, label="lambda expression"];
m9_12 -> m9_5  [key=2, style=dotted];
m9_12 -> m9_13  [key=0, style=solid];
m9_13 -> m9_10  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [key=0, style=bold, color=blue];
m10_2 -> m10_3  [key=0, style=solid];
m10_3 -> m10_2  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid, color=green];
m11_0 -> m11_3  [key=1, style=dashed, color=green, label="System.Reflection.Assembly"];
m11_0 -> m11_5  [key=1, style=dashed, color=green, label="System.Reflection.Assembly"];
m11_0 -> m11_6  [key=1, style=dashed, color=green, label=string];
m11_0 -> m11_7  [key=1, style=dashed, color=green, label=string];
m11_1 -> m11_2  [key=0, style=solid, color=green];
m11_1 -> m11_3  [key=0, style=solid, color=green];
m11_2 -> m11_8  [key=0, style=solid, color=green];
m11_2 -> m11_9  [key=2, style=dotted, color=green];
m11_3 -> m11_4  [key=0, style=solid, color=green];
m11_3 -> m11_5  [key=0, style=solid, color=green];
m11_4 -> m11_8  [key=0, style=solid, color=green];
m11_4 -> m11_9  [key=2, style=dotted, color=green];
m11_5 -> m11_6  [key=0, style=solid, color=green];
m11_6 -> m11_7  [key=0, style=solid, color=green];
m11_7 -> m11_8  [key=0, style=solid, color=green];
m11_8 -> m11_0  [key=0, style=bold, color=blue];
m11_21 -> m11_22  [key=0, style=solid, color=green];
m11_22 -> m11_23  [key=0, style=solid, color=green];
m11_22 -> m11_24  [key=2, style=dotted, color=green];
m11_23 -> m11_21  [key=0, style=bold, color=blue];
m11_10 -> m11_11  [key=0, style=solid, color=green];
m11_11 -> m11_11  [key=1, style=dashed, color=green, label=IOwinContext];
m11_11 -> m11_12  [key=0, style=solid, color=green];
m11_12 -> m11_12  [key=1, style=dashed, color=green, label=IOwinContext];
m11_12 -> m11_13  [key=0, style=solid, color=green];
m11_13 -> m11_14  [key=0, style=solid, color=green];
m11_13 -> m11_18  [key=2, style=dotted, color=green];
m11_14 -> m11_15  [key=0, style=solid, color=green];
m11_14 -> m11_19  [key=2, style=dotted, color=green];
m11_14 -> m11_16  [key=1, style=dashed, color=green, label=taskSource];
m11_15 -> m11_16  [key=0, style=solid, color=green];
m11_15 -> m11_20  [key=2, style=dotted, color=green];
m11_16 -> m11_17  [key=0, style=solid, color=green];
m11_17 -> m11_10  [key=0, style=bold, color=blue];
m11_24 -> m11_25  [key=0, style=solid, color=green];
m11_24 -> m11_27  [key=1, style=dashed, color=green, label="System.Reflection.Assembly"];
m11_24 -> m11_31  [key=1, style=dashed, color=green, label=IOwinResponse];
m11_24 -> m11_21  [key=3, color=darkorchid, style=bold, label="Parameter variable IOwinResponse response"];
m11_25 -> m11_26  [key=0, style=solid, color=green];
m11_25 -> m11_34  [key=2, style=dotted, color=green];
m11_25 -> m11_28  [key=1, style=dashed, color=green, label=inputStream];
m11_25 -> m11_29  [key=1, style=dashed, color=green, label=inputStream];
m11_25 -> m11_32  [key=1, style=dashed, color=green, label=inputStream];
m11_26 -> m11_27  [key=0, style=solid, color=green];
m11_26 -> m11_28  [key=0, style=solid, color=green];
m11_28 -> m11_31  [key=1, style=dashed, color=green, label=buffer];
m11_28 -> m11_29  [key=0, style=solid, color=green];
m11_28 -> m11_37  [key=2, style=dotted, color=green];
m11_28 -> m11_32  [key=1, style=dashed, color=green, label=buffer];
m11_29 -> m11_31  [key=1, style=dashed, color=green, label=readLength];
m11_29 -> m11_30  [key=0, style=solid, color=green];
m11_29 -> m11_38  [key=2, style=dotted, color=green];
m11_32 -> m11_30  [key=0, style=solid, color=green];
m11_32 -> m11_38  [key=2, style=dotted, color=green];
m11_27 -> m11_33  [key=0, style=solid, color=green];
m11_27 -> m11_35  [key=2, style=dotted, color=green];
m11_27 -> m11_36  [key=2, style=dotted, color=green];
m11_31 -> m11_32  [key=0, style=solid, color=green];
m11_31 -> m11_39  [key=2, style=dotted, color=green];
m11_30 -> m11_31  [key=0, style=solid, color=green];
m11_30 -> m11_33  [key=0, style=solid, color=green];
m11_33 -> m11_24  [key=0, style=bold, color=blue];
m11_40 -> m11_5  [key=1, style=dashed, color=green, label="HangFire.Dashboard.EmbeddedResourceDispatcher"];
m11_40 -> m11_6  [key=1, style=dashed, color=green, label="HangFire.Dashboard.EmbeddedResourceDispatcher"];
m11_40 -> m11_7  [key=1, style=dashed, color=green, label="HangFire.Dashboard.EmbeddedResourceDispatcher"];
m11_40 -> m11_11  [key=1, style=dashed, color=green, label="HangFire.Dashboard.EmbeddedResourceDispatcher"];
m11_40 -> m11_13  [key=1, style=dashed, color=green, label="HangFire.Dashboard.EmbeddedResourceDispatcher"];
m11_40 -> m11_22  [key=1, style=dashed, color=green, label="HangFire.Dashboard.EmbeddedResourceDispatcher"];
m12_0 -> m12_1  [key=0, style=solid, color=red];
m12_1 -> m12_2  [key=0, style=solid, color=red];
m12_2 -> m12_3  [key=0, style=solid, color=red];
m12_2 -> m12_5  [key=0, style=solid, color=red];
m12_3 -> m12_4  [key=0, style=solid, color=red];
m12_3 -> m12_9  [key=2, style=dotted, color=red];
m12_5 -> m12_6  [key=0, style=solid, color=red];
m12_5 -> m12_7  [key=0, style=solid, color=red];
m12_4 -> m12_5  [key=0, style=solid, color=red];
m12_4 -> m12_10  [key=2, style=dotted, color=red];
m12_6 -> m12_7  [key=0, style=solid, color=red];
m12_7 -> m12_8  [key=0, style=solid, color=red];
m12_7 -> m12_11  [key=2, style=dotted, color=red];
m12_8 -> m12_0  [key=0, style=bold, color=blue];
m12_11 -> m12_12  [key=0, style=solid];
m12_12 -> m12_11  [key=0, style=bold, color=blue];
m12_13 -> m12_14  [key=0, style=solid, color=red];
m12_13 -> m12_16  [key=1, style=dashed, color=red, label=string];
m12_13 -> m12_18  [key=1, style=dashed, color=red, label="System.Reflection.Assembly"];
m12_13 -> m12_20  [key=1, style=dashed, color=red, label="System.Reflection.Assembly"];
m12_14 -> m12_15  [key=0, style=solid, color=red];
m12_14 -> m12_16  [key=0, style=solid, color=red];
m12_16 -> m12_17  [key=0, style=solid, color=red];
m12_16 -> m12_18  [key=0, style=solid, color=red];
m12_18 -> m12_19  [key=0, style=solid, color=red];
m12_18 -> m12_28  [key=2, style=dotted, color=red];
m12_18 -> m12_21  [key=1, style=dashed, color=red, label=inputStream];
m12_18 -> m12_22  [key=1, style=dashed, color=red, label=inputStream];
m12_18 -> m12_25  [key=1, style=dashed, color=red, label=inputStream];
m12_20 -> m12_26  [key=0, style=solid, color=red];
m12_20 -> m12_29  [key=2, style=dotted, color=red];
m12_20 -> m12_30  [key=2, style=dotted, color=red];
m12_15 -> m12_26  [key=0, style=solid, color=red];
m12_15 -> m12_27  [key=2, style=dotted, color=red];
m12_17 -> m12_26  [key=0, style=solid, color=red];
m12_17 -> m12_27  [key=2, style=dotted, color=red];
m12_19 -> m12_20  [key=0, style=solid, color=red];
m12_19 -> m12_21  [key=0, style=solid, color=red];
m12_21 -> m12_22  [key=0, style=solid, color=red];
m12_21 -> m12_31  [key=2, style=dotted, color=red];
m12_21 -> m12_24  [key=1, style=dashed, color=red, label=buffer];
m12_21 -> m12_25  [key=1, style=dashed, color=red, label=buffer];
m12_22 -> m12_23  [key=0, style=solid, color=red];
m12_22 -> m12_32  [key=2, style=dotted, color=red];
m12_22 -> m12_24  [key=1, style=dashed, color=red, label=readLength];
m12_25 -> m12_23  [key=0, style=solid, color=red];
m12_25 -> m12_32  [key=2, style=dotted, color=red];
m12_24 -> m12_25  [key=0, style=solid, color=red];
m12_24 -> m12_33  [key=2, style=dotted, color=red];
m12_23 -> m12_24  [key=0, style=solid, color=red];
m12_23 -> m12_26  [key=0, style=solid, color=red];
m12_26 -> m12_13  [key=0, style=bold, color=blue];
m12_34 -> m12_1  [key=1, style=dashed, color=red, label="HangFire.Web.EmbeddedResourceHandler"];
m12_34 -> m12_2  [key=1, style=dashed, color=red, label="HangFire.Web.EmbeddedResourceHandler"];
m12_34 -> m12_3  [key=1, style=dashed, color=red, label="HangFire.Web.EmbeddedResourceHandler"];
m12_34 -> m12_4  [key=1, style=dashed, color=red, label="HangFire.Web.EmbeddedResourceHandler"];
m12_34 -> m12_5  [key=1, style=dashed, color=red, label="HangFire.Web.EmbeddedResourceHandler"];
m12_34 -> m12_6  [key=1, style=dashed, color=red, label="HangFire.Web.EmbeddedResourceHandler"];
m12_34 -> m12_7  [key=1, style=dashed, color=red, label="HangFire.Web.EmbeddedResourceHandler"];
m12_34 -> m12_24  [key=1, style=dashed, color=red, label="HangFire.Web.EmbeddedResourceHandler"];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_2 -> m13_0  [key=0, style=bold, color=blue];
m13_3 -> m13_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m14_0 -> m14_1  [key=0, style=solid, color=red];
m14_1 -> m14_2  [key=0, style=solid, color=red];
m14_2 -> m14_0  [key=0, style=bold, color=blue];
m14_3 -> m14_1  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.ErrorPage"];
m15_0 -> m15_1  [key=0, style=solid, color=red];
m15_0 -> m15_16  [key=3, color=red, style=bold, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext"];
m15_1 -> m15_2  [key=0, style=solid, color=red];
m15_1 -> m15_5  [key=2, style=dotted, color=red];
m15_2 -> m15_3  [key=0, style=solid, color=red];
m15_2 -> m15_6  [key=2, style=dotted, color=red];
m15_2 -> m15_7  [key=2, style=dotted, color=red];
m15_3 -> m15_4  [key=0, style=solid, color=red];
m15_3 -> m15_8  [key=2, style=dotted, color=red];
m15_4 -> m15_0  [key=0, style=bold, color=blue];
m15_75 -> m15_76  [key=0, style=solid];
m15_76 -> m15_77  [key=0, style=solid];
m15_76 -> m15_41  [key=2, style=dotted];
m15_77 -> m15_78  [key=0, style=solid];
m15_77 -> m15_22  [key=2, style=dotted];
m15_78 -> m15_79  [key=0, style=solid];
m15_78 -> m15_42  [key=2, style=dotted];
m15_79 -> m15_80  [key=0, style=solid];
m15_79 -> m15_43  [key=2, style=dotted];
m15_80 -> m15_81  [key=0, style=solid];
m15_80 -> m15_44  [key=2, style=dotted];
m15_81 -> m15_82  [key=0, style=solid];
m15_81 -> m15_26  [key=2, style=dotted];
m15_82 -> m15_75  [key=0, style=bold, color=blue];
m15_83 -> m15_84  [key=0, style=solid];
m15_84 -> m15_85  [key=0, style=solid];
m15_84 -> m15_41  [key=2, style=dotted];
m15_85 -> m15_86  [key=0, style=solid];
m15_85 -> m15_22  [key=2, style=dotted];
m15_86 -> m15_87  [key=0, style=solid];
m15_86 -> m15_42  [key=2, style=dotted];
m15_87 -> m15_88  [key=0, style=solid];
m15_87 -> m15_45  [key=2, style=dotted];
m15_88 -> m15_89  [key=0, style=solid];
m15_88 -> m15_43  [key=2, style=dotted];
m15_89 -> m15_90  [key=0, style=solid];
m15_89 -> m15_44  [key=2, style=dotted];
m15_90 -> m15_91  [key=0, style=solid];
m15_90 -> m15_26  [key=2, style=dotted];
m15_91 -> m15_83  [key=0, style=bold, color=blue];
m15_14 -> m15_15  [key=0, style=solid, color=red];
m15_15 -> m15_16  [key=0, style=solid, color=red];
m15_15 -> m15_17  [key=0, style=solid, color=red];
m15_16 -> m15_17  [key=0, style=solid, color=red];
m15_16 -> m15_0  [key=2, style=dotted, color=red];
m15_17 -> m15_14  [key=0, style=bold, color=blue];
m15_26 -> m15_27  [key=0, style=solid, color=red];
m15_27 -> m15_28  [key=0, style=solid, color=red];
m15_27 -> m15_29  [key=2, style=dotted, color=red];
m15_28 -> m15_26  [key=0, style=bold, color=blue];
m15_18 -> m15_19  [key=0, style=solid, color=red];
m15_19 -> m15_20  [key=0, style=solid, color=red];
m15_19 -> m15_21  [key=2, style=dotted, color=red];
m15_20 -> m15_18  [key=0, style=bold, color=blue];
m15_58 -> m15_59  [key=0, style=solid];
m15_59 -> m15_60  [key=0, style=solid];
m15_59 -> m15_41  [key=2, style=dotted];
m15_60 -> m15_61  [key=0, style=solid];
m15_60 -> m15_22  [key=2, style=dotted];
m15_61 -> m15_62  [key=0, style=solid];
m15_61 -> m15_42  [key=2, style=dotted];
m15_62 -> m15_63  [key=0, style=solid];
m15_62 -> m15_45  [key=2, style=dotted];
m15_63 -> m15_64  [key=0, style=solid];
m15_63 -> m15_43  [key=2, style=dotted];
m15_64 -> m15_65  [key=0, style=solid];
m15_64 -> m15_44  [key=2, style=dotted];
m15_65 -> m15_66  [key=0, style=solid];
m15_65 -> m15_45  [key=2, style=dotted];
m15_66 -> m15_67  [key=0, style=solid];
m15_66 -> m15_26  [key=2, style=dotted];
m15_67 -> m15_58  [key=0, style=bold, color=blue];
m15_47 -> m15_48  [key=0, style=solid];
m15_48 -> m15_49  [key=0, style=solid];
m15_48 -> m15_41  [key=2, style=dotted];
m15_49 -> m15_50  [key=0, style=solid];
m15_49 -> m15_22  [key=2, style=dotted];
m15_50 -> m15_51  [key=0, style=solid];
m15_50 -> m15_42  [key=2, style=dotted];
m15_51 -> m15_52  [key=0, style=solid];
m15_51 -> m15_43  [key=2, style=dotted];
m15_52 -> m15_53  [key=0, style=solid];
m15_52 -> m15_44  [key=2, style=dotted];
m15_53 -> m15_54  [key=0, style=solid];
m15_53 -> m15_45  [key=2, style=dotted];
m15_54 -> m15_55  [key=0, style=solid];
m15_54 -> m15_45  [key=2, style=dotted];
m15_55 -> m15_56  [key=0, style=solid];
m15_55 -> m15_45  [key=2, style=dotted];
m15_56 -> m15_57  [key=0, style=solid];
m15_56 -> m15_26  [key=2, style=dotted];
m15_57 -> m15_47  [key=0, style=bold, color=blue];
m15_9 -> m15_10  [key=0, style=solid, color=red];
m15_10 -> m15_11  [key=0, style=solid, color=red];
m15_10 -> m15_13  [key=2, style=dotted, color=red];
m15_11 -> m15_12  [key=0, style=solid, color=red];
m15_12 -> m15_9  [key=0, style=bold, color=blue];
m15_30 -> m15_31  [key=0, style=solid, color=red];
m15_31 -> m15_32  [key=0, style=solid, color=red];
m15_31 -> m15_41  [key=2, style=dotted, color=red];
m15_32 -> m15_33  [key=0, style=solid, color=red];
m15_32 -> m15_22  [key=2, style=dotted, color=red];
m15_33 -> m15_34  [key=0, style=solid, color=red];
m15_33 -> m15_42  [key=2, style=dotted, color=red];
m15_34 -> m15_35  [key=0, style=solid];
m15_34 -> m15_43  [key=2, style=dotted];
m15_35 -> m15_36  [key=0, style=solid];
m15_35 -> m15_44  [key=2, style=dotted];
m15_36 -> m15_37  [key=0, style=solid];
m15_36 -> m15_45  [key=2, style=dotted];
m15_37 -> m15_38  [key=0, style=solid];
m15_37 -> m15_46  [key=2, style=dotted];
m15_38 -> m15_39  [key=0, style=solid];
m15_38 -> m15_45  [key=2, style=dotted];
m15_39 -> m15_40  [key=0, style=solid];
m15_39 -> m15_26  [key=2, style=dotted];
m15_40 -> m15_30  [key=0, style=bold, color=blue];
m15_22 -> m15_23  [key=0, style=solid, color=red];
m15_22 -> m15_31  [key=3, color=red, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m15_22 -> m15_48  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m15_22 -> m15_59  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m15_22 -> m15_69  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m15_22 -> m15_76  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m15_22 -> m15_84  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m15_23 -> m15_24  [key=0, style=solid, color=red];
m15_23 -> m15_25  [key=2, style=dotted, color=red];
m15_24 -> m15_22  [key=0, style=bold, color=blue];
m15_68 -> m15_69  [key=0, style=solid];
m15_69 -> m15_70  [key=0, style=solid];
m15_69 -> m15_41  [key=2, style=dotted];
m15_70 -> m15_71  [key=0, style=solid];
m15_70 -> m15_22  [key=2, style=dotted];
m15_71 -> m15_72  [key=0, style=solid];
m15_71 -> m15_43  [key=2, style=dotted];
m15_72 -> m15_73  [key=0, style=solid];
m15_72 -> m15_44  [key=2, style=dotted];
m15_73 -> m15_74  [key=0, style=solid];
m15_73 -> m15_26  [key=2, style=dotted];
m15_74 -> m15_68  [key=0, style=bold, color=blue];
m15_92 -> m15_32  [key=1, style=dashed, color=red, label="HangFire.Tests.Server.SchedulePollerFeature"];
m15_92 -> m15_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.SchedulePollerFeature"];
m15_92 -> m15_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.SchedulePollerFeature"];
m15_92 -> m15_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.SchedulePollerFeature"];
m15_92 -> m15_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.SchedulePollerFeature"];
m15_92 -> m15_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.SchedulePollerFeature"];
m15_92 -> m15_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.SchedulePollerFeature"];
m15_92 -> m15_73  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.SchedulePollerFeature"];
m15_92 -> m15_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.SchedulePollerFeature"];
m15_92 -> m15_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.SchedulePollerFeature"];
m15_92 -> m15_85  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.SchedulePollerFeature"];
m15_92 -> m15_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.SchedulePollerFeature"];
m16_0 -> m16_1  [key=0, style=solid, color=green];
m16_1 -> m16_2  [key=0, style=solid, color=green];
m16_1 -> m16_74  [key=2, style=dotted, color=green];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_75  [key=2, style=dotted];
m16_4 -> m16_5  [key=0, style=solid, color=green];
m16_4 -> m16_76  [key=2, style=dotted, color=green];
m16_4 -> m16_7  [key=1, style=dashed, color=green, label=from];
m16_3 -> m16_4  [key=0, style=solid, color=green];
m16_5 -> m16_6  [key=0, style=solid, color=green];
m16_5 -> m16_76  [key=2, style=dotted, color=green];
m16_5 -> m16_7  [key=1, style=dashed, color=green, label=perPage];
m16_7 -> m16_8  [key=0, style=solid, color=green];
m16_7 -> m16_78  [key=2, style=dotted, color=green];
m16_7 -> m16_79  [key=2, style=dotted, color=green];
m16_7 -> m16_80  [key=2, style=dotted, color=green];
m16_7 -> m16_10  [key=1, style=dashed, color=green, label=pager];
m16_7 -> m16_17  [key=1, style=dashed, color=green, label=pager];
m16_7 -> m16_72  [key=1, style=dashed, color=green, label=pager];
m16_6 -> m16_7  [key=0, style=solid, color=green];
m16_6 -> m16_77  [key=2, style=dotted, color=green];
m16_6 -> m16_8  [key=1, style=dashed, color=green, label=monitor];
m16_8 -> m16_9  [key=0, style=solid, color=green];
m16_8 -> m16_81  [key=2, style=dotted];
m16_8 -> m16_20  [key=1, style=dashed, color=darkseagreen4, label=failedJobs];
m16_10 -> m16_11  [key=0, style=solid, color=green];
m16_10 -> m16_12  [key=0, style=solid, color=green];
m16_17 -> m16_18  [key=0, style=solid, color=green];
m16_17 -> m16_83  [key=2, style=dotted, color=green];
m16_17 -> m16_84  [key=2, style=dotted, color=green];
m16_17 -> m16_85  [key=2, style=dotted, color=green];
m16_72 -> m16_73  [key=0, style=solid, color=green];
m16_72 -> m16_91  [key=2, style=dotted, color=green];
m16_72 -> m16_84  [key=2, style=dotted, color=green];
m16_72 -> m16_85  [key=2, style=dotted, color=green];
m16_16 -> m16_17  [key=0, style=solid, color=green];
m16_16 -> m16_74  [key=2, style=dotted, color=green];
m16_18 -> m16_19  [key=0, style=solid, color=green];
m16_18 -> m16_74  [key=2, style=dotted, color=green];
m16_71 -> m16_72  [key=0, style=solid, color=green];
m16_71 -> m16_74  [key=2, style=dotted, color=green];
m16_9 -> m16_10  [key=0, style=solid, color=green];
m16_9 -> m16_74  [key=2, style=dotted, color=green];
m16_11 -> m16_73  [key=0, style=solid, color=green];
m16_11 -> m16_74  [key=2, style=dotted, color=green];
m16_12 -> m16_13  [key=0, style=solid, color=green];
m16_12 -> m16_74  [key=2, style=dotted, color=green];
m16_13 -> m16_14  [key=0, style=solid, color=green];
m16_13 -> m16_80  [key=2, style=dotted, color=green];
m16_13 -> m16_82  [key=2, style=dotted, color=green];
m16_14 -> m16_15  [key=0, style=solid, color=green];
m16_14 -> m16_74  [key=2, style=dotted, color=green];
m16_15 -> m16_16  [key=0, style=solid, color=green];
m16_15 -> m16_80  [key=2, style=dotted, color=green];
m16_15 -> m16_82  [key=2, style=dotted, color=green];
m16_19 -> m16_60  [key=1, style=dashed, color=green, label=index];
m16_19 -> m16_19  [key=3, color=darkorchid, style=bold, label="Local variable int index"];
m16_19 -> m16_20  [key=0, style=solid];
m16_60 -> m16_60  [key=1, style=dashed, color=green, label=index];
m16_60 -> m16_61  [key=0, style=solid, color=green];
m16_60 -> m16_82  [key=2, style=dotted, color=green];
m16_59 -> m16_60  [key=0, style=solid, color=green];
m16_59 -> m16_74  [key=2, style=dotted, color=green];
m16_61 -> m16_62  [key=0, style=solid, color=green];
m16_61 -> m16_74  [key=2, style=dotted, color=green];
m16_21 -> m16_22  [key=0, style=solid, color=green];
m16_21 -> m16_74  [key=2, style=dotted, color=green];
m16_20 -> m16_21  [key=0, style=solid, color=green];
m16_20 -> m16_71  [key=0, style=solid, color=green];
m16_20 -> m16_22  [key=1, style=dashed, color=green, label=job];
m16_22 -> m16_22  [key=1, style=dashed, color=green, label=job];
m16_22 -> m16_23  [key=0, style=solid, color=green];
m16_22 -> m16_82  [key=2, style=dotted, color=green];
m16_22 -> m16_24  [key=1, style=dashed, color=green, label=job];
m16_23 -> m16_24  [key=0, style=solid, color=green];
m16_23 -> m16_74  [key=2, style=dotted, color=green];
m16_24 -> m16_24  [key=1, style=dashed, color=green, label=job];
m16_24 -> m16_25  [key=0, style=solid, color=green];
m16_24 -> m16_82  [key=2, style=dotted, color=green];
m16_24 -> m16_26  [key=1, style=dashed, color=green, label=job];
m16_25 -> m16_26  [key=0, style=solid, color=green];
m16_25 -> m16_74  [key=2, style=dotted, color=green];
m16_26 -> m16_26  [key=1, style=dashed, color=green, label=job];
m16_26 -> m16_27  [key=0, style=solid, color=green];
m16_26 -> m16_82  [key=2, style=dotted, color=green];
m16_26 -> m16_28  [key=1, style=dashed, color=green, label=job];
m16_27 -> m16_28  [key=0, style=solid, color=green];
m16_27 -> m16_74  [key=2, style=dotted, color=green];
m16_28 -> m16_29  [key=0, style=solid, color=green];
m16_28 -> m16_32  [key=0, style=solid, color=green];
m16_28 -> m16_30  [key=1, style=dashed, color=green, label=job];
m16_28 -> m16_33  [key=1, style=dashed, color=green, label=job];
m16_28 -> m16_28  [key=1, style=dashed, color=darkseagreen4, label=job];
m16_29 -> m16_30  [key=0, style=solid, color=green];
m16_29 -> m16_74  [key=2, style=dotted, color=green];
m16_30 -> m16_30  [key=1, style=dashed, color=green, label=job];
m16_30 -> m16_31  [key=0, style=solid, color=green];
m16_30 -> m16_82  [key=2, style=dotted, color=green];
m16_30 -> m16_33  [key=1, style=dashed, color=green, label=job];
m16_32 -> m16_33  [key=0, style=solid, color=green];
m16_32 -> m16_74  [key=2, style=dotted, color=green];
m16_31 -> m16_32  [key=0, style=solid, color=green];
m16_31 -> m16_74  [key=2, style=dotted, color=green];
m16_33 -> m16_33  [key=1, style=dashed, color=green, label=job];
m16_33 -> m16_34  [key=0, style=solid, color=green];
m16_33 -> m16_82  [key=2, style=dotted, color=green];
m16_33 -> m16_35  [key=1, style=dashed, color=green, label=job];
m16_34 -> m16_35  [key=0, style=solid, color=green];
m16_34 -> m16_74  [key=2, style=dotted, color=green];
m16_35 -> m16_35  [key=1, style=dashed, color=green, label=job];
m16_35 -> m16_36  [key=0, style=solid, color=green];
m16_35 -> m16_80  [key=2, style=dotted, color=green];
m16_35 -> m16_82  [key=2, style=dotted, color=green];
m16_35 -> m16_37  [key=1, style=dashed, color=green, label=job];
m16_36 -> m16_37  [key=0, style=solid, color=green];
m16_36 -> m16_74  [key=2, style=dotted, color=green];
m16_37 -> m16_37  [key=1, style=dashed, color=green, label=job];
m16_37 -> m16_38  [key=0, style=solid, color=green];
m16_37 -> m16_86  [key=2, style=dotted, color=green];
m16_37 -> m16_85  [key=2, style=dotted, color=green];
m16_37 -> m16_39  [key=1, style=dashed, color=green, label=job];
m16_38 -> m16_39  [key=0, style=solid, color=green];
m16_38 -> m16_74  [key=2, style=dotted, color=green];
m16_39 -> m16_40  [key=0, style=solid, color=green];
m16_39 -> m16_41  [key=0, style=solid, color=green];
m16_39 -> m16_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m16_39 -> m16_42  [key=1, style=dashed, color=darkseagreen4, label=job];
m16_40 -> m16_41  [key=0, style=solid, color=green];
m16_40 -> m16_74  [key=2, style=dotted, color=green];
m16_41 -> m16_42  [key=0, style=solid, color=green];
m16_41 -> m16_74  [key=2, style=dotted, color=green];
m16_42 -> m16_43  [key=0, style=solid, color=green];
m16_42 -> m16_48  [key=0, style=solid, color=green];
m16_42 -> m16_44  [key=1, style=dashed, color=green, label=job];
m16_42 -> m16_49  [key=1, style=dashed, color=green, label=job];
m16_42 -> m16_42  [key=1, style=dashed, color=darkseagreen4, label=job];
m16_43 -> m16_44  [key=0, style=solid, color=green];
m16_43 -> m16_74  [key=2, style=dotted, color=green];
m16_44 -> m16_44  [key=1, style=dashed, color=green, label=job];
m16_44 -> m16_45  [key=0, style=solid, color=green];
m16_44 -> m16_87  [key=2, style=dotted, color=green];
m16_44 -> m16_82  [key=2, style=dotted, color=green];
m16_44 -> m16_46  [key=1, style=dashed, color=green, label=job];
m16_48 -> m16_49  [key=0, style=solid, color=green];
m16_48 -> m16_74  [key=2, style=dotted, color=green];
m16_47 -> m16_48  [key=0, style=solid, color=green];
m16_47 -> m16_74  [key=2, style=dotted, color=green];
m16_49 -> m16_49  [key=1, style=dashed, color=green, label=job];
m16_49 -> m16_50  [key=0, style=solid, color=green];
m16_49 -> m16_80  [key=2, style=dotted, color=green];
m16_49 -> m16_82  [key=2, style=dotted, color=green];
m16_49 -> m16_51  [key=1, style=dashed, color=green, label=job];
m16_45 -> m16_46  [key=0, style=solid, color=green];
m16_45 -> m16_74  [key=2, style=dotted, color=green];
m16_46 -> m16_49  [key=1, style=dashed, color=green, label=job];
m16_46 -> m16_46  [key=1, style=dashed, color=green, label=job];
m16_46 -> m16_47  [key=0, style=solid, color=green];
m16_46 -> m16_82  [key=2, style=dotted, color=green];
m16_50 -> m16_51  [key=0, style=solid, color=green];
m16_50 -> m16_74  [key=2, style=dotted, color=green];
m16_51 -> m16_51  [key=1, style=dashed, color=green, label=job];
m16_51 -> m16_52  [key=0, style=solid, color=green];
m16_51 -> m16_88  [key=2, style=dotted, color=green];
m16_51 -> m16_85  [key=2, style=dotted, color=green];
m16_51 -> m16_53  [key=1, style=dashed, color=green, label=job];
m16_52 -> m16_53  [key=0, style=solid, color=green];
m16_52 -> m16_74  [key=2, style=dotted, color=green];
m16_53 -> m16_54  [key=0, style=solid, color=green];
m16_53 -> m16_57  [key=0, style=solid, color=green];
m16_53 -> m16_55  [key=1, style=dashed, color=green, label=job];
m16_53 -> m16_53  [key=1, style=dashed, color=darkseagreen4, label=job];
m16_53 -> m16_89  [key=2, style=dotted];
m16_53 -> m16_58  [key=1, style=dashed, color=darkseagreen4, label=job];
m16_54 -> m16_55  [key=0, style=solid, color=green];
m16_54 -> m16_74  [key=2, style=dotted, color=green];
m16_55 -> m16_55  [key=1, style=dashed, color=green, label=job];
m16_55 -> m16_56  [key=0, style=solid, color=green];
m16_55 -> m16_82  [key=2, style=dotted, color=green];
m16_55 -> m16_58  [key=1, style=dashed, color=green, label=job];
m16_57 -> m16_58  [key=0, style=solid, color=green];
m16_57 -> m16_74  [key=2, style=dotted, color=green];
m16_56 -> m16_57  [key=0, style=solid, color=green];
m16_56 -> m16_74  [key=2, style=dotted, color=green];
m16_58 -> m16_59  [key=0, style=solid, color=green];
m16_58 -> m16_62  [key=1, style=dashed, color=green, label=job];
m16_58 -> m16_20  [key=0, style=solid];
m16_58 -> m16_58  [key=1, style=dashed, color=darkseagreen4, label=job];
m16_62 -> m16_62  [key=1, style=dashed, color=green, label=job];
m16_62 -> m16_63  [key=0, style=solid, color=green];
m16_62 -> m16_82  [key=2, style=dotted, color=green];
m16_62 -> m16_64  [key=1, style=dashed, color=green, label=job];
m16_63 -> m16_64  [key=0, style=solid, color=green];
m16_63 -> m16_74  [key=2, style=dotted, color=green];
m16_64 -> m16_64  [key=1, style=dashed, color=green, label=job];
m16_64 -> m16_65  [key=0, style=solid, color=green];
m16_64 -> m16_82  [key=2, style=dotted, color=green];
m16_64 -> m16_66  [key=1, style=dashed, color=green, label=job];
m16_65 -> m16_66  [key=0, style=solid, color=green];
m16_65 -> m16_74  [key=2, style=dotted, color=green];
m16_66 -> m16_67  [key=0, style=solid, color=green];
m16_66 -> m16_70  [key=0, style=solid, color=green];
m16_66 -> m16_68  [key=1, style=dashed, color=green, label=job];
m16_66 -> m16_66  [key=1, style=dashed, color=darkseagreen4, label=job];
m16_66 -> m16_89  [key=2, style=dotted];
m16_67 -> m16_68  [key=0, style=solid, color=green];
m16_67 -> m16_74  [key=2, style=dotted, color=green];
m16_68 -> m16_68  [key=1, style=dashed, color=green, label=job];
m16_68 -> m16_69  [key=0, style=solid, color=green];
m16_68 -> m16_90  [key=2, style=dotted, color=green];
m16_68 -> m16_85  [key=2, style=dotted, color=green];
m16_70 -> m16_20  [key=0, style=solid, color=green];
m16_70 -> m16_74  [key=2, style=dotted, color=green];
m16_69 -> m16_70  [key=0, style=solid, color=green];
m16_69 -> m16_74  [key=2, style=dotted, color=green];
m16_73 -> m16_0  [key=0, style=bold, color=blue];
m16_92 -> m16_1  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_4  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_5  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_7  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_17  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_72  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_9  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_11  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_12  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_13  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_14  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_15  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_16  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_18  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_60  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_21  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_71  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_22  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_23  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_24  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_25  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_26  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_27  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_29  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_32  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_30  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_33  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_31  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_34  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_35  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_36  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_37  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_38  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_40  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_41  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_43  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_48  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_44  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_49  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_45  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_46  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_47  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_50  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_51  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_52  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_54  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_57  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_55  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_56  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_59  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_62  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_61  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_63  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_64  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_65  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_67  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_70  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_68  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_69  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m16_92 -> m16_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_2  [key=0, style=solid];
m17_2 -> m17_0  [key=0, style=bold, color=blue];
m17_3 -> m17_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_0 -> m18_1  [key=0, style=solid, color=green];
m18_0 -> m18_2  [key=1, style=dashed, color=red, label=string];
m18_0 -> m18_3  [key=1, style=dashed, color=red, label=string];
m18_1 -> m18_2  [key=0, style=solid, color=green];
m18_1 -> m18_45  [key=2, style=dotted, color=green];
m18_2 -> m18_3  [key=0, style=solid, color=red];
m18_2 -> m18_46  [key=2, style=dotted];
m18_2 -> m18_47  [key=2, style=dotted];
m18_2 -> m18_48  [key=2, style=dotted];
m18_2 -> m18_49  [key=2, style=dotted];
m18_3 -> m18_4  [key=0, style=solid, color=green];
m18_4 -> m18_0  [key=0, style=bold, color=blue];
m18_4 -> m18_5  [key=0, style=solid, color=green];
m18_4 -> m18_50  [key=2, style=dotted, color=green];
m18_4 -> m18_7  [key=1, style=dashed, color=green, label=from];
m18_5 -> m18_6  [key=0, style=solid, color=green];
m18_5 -> m18_50  [key=2, style=dotted, color=green];
m18_5 -> m18_7  [key=1, style=dashed, color=green, label=perPage];
m18_7 -> m18_8  [key=0, style=solid, color=green];
m18_7 -> m18_52  [key=2, style=dotted, color=green];
m18_7 -> m18_53  [key=2, style=dotted, color=green];
m18_7 -> m18_49  [key=2, style=dotted, color=green];
m18_7 -> m18_10  [key=1, style=dashed, color=green, label=pager];
m18_7 -> m18_17  [key=1, style=dashed, color=green, label=pager];
m18_7 -> m18_43  [key=1, style=dashed, color=green, label=pager];
m18_6 -> m18_7  [key=0, style=solid, color=green];
m18_6 -> m18_51  [key=2, style=dotted];
m18_6 -> m18_8  [key=1, style=dashed, color=darkseagreen4, label=monitor];
m18_8 -> m18_9  [key=0, style=solid, color=green];
m18_8 -> m18_54  [key=2, style=dotted];
m18_8 -> m18_19  [key=1, style=dashed, color=darkseagreen4, label=fetchedJobs];
m18_10 -> m18_11  [key=0, style=solid, color=green];
m18_10 -> m18_12  [key=0, style=solid, color=green];
m18_17 -> m18_18  [key=0, style=solid, color=green];
m18_17 -> m18_56  [key=2, style=dotted, color=green];
m18_17 -> m18_57  [key=2, style=dotted, color=green];
m18_17 -> m18_58  [key=2, style=dotted, color=green];
m18_43 -> m18_44  [key=0, style=solid, color=green];
m18_43 -> m18_64  [key=2, style=dotted, color=green];
m18_43 -> m18_57  [key=2, style=dotted, color=green];
m18_43 -> m18_58  [key=2, style=dotted, color=green];
m18_16 -> m18_17  [key=0, style=solid, color=green];
m18_16 -> m18_45  [key=2, style=dotted, color=green];
m18_18 -> m18_19  [key=0, style=solid, color=green];
m18_18 -> m18_45  [key=2, style=dotted, color=green];
m18_42 -> m18_43  [key=0, style=solid, color=green];
m18_42 -> m18_45  [key=2, style=dotted, color=green];
m18_9 -> m18_10  [key=0, style=solid, color=green];
m18_9 -> m18_45  [key=2, style=dotted, color=green];
m18_11 -> m18_44  [key=0, style=solid, color=green];
m18_11 -> m18_45  [key=2, style=dotted, color=green];
m18_12 -> m18_13  [key=0, style=solid, color=green];
m18_12 -> m18_45  [key=2, style=dotted, color=green];
m18_13 -> m18_14  [key=0, style=solid, color=green];
m18_13 -> m18_49  [key=2, style=dotted, color=green];
m18_13 -> m18_55  [key=2, style=dotted, color=green];
m18_14 -> m18_15  [key=0, style=solid, color=green];
m18_14 -> m18_45  [key=2, style=dotted, color=green];
m18_15 -> m18_16  [key=0, style=solid, color=green];
m18_15 -> m18_49  [key=2, style=dotted, color=green];
m18_15 -> m18_55  [key=2, style=dotted, color=green];
m18_19 -> m18_20  [key=0, style=solid, color=green];
m18_19 -> m18_42  [key=0, style=solid, color=green];
m18_19 -> m18_21  [key=1, style=dashed, color=green, label=job];
m18_20 -> m18_21  [key=0, style=solid, color=green];
m18_20 -> m18_45  [key=2, style=dotted, color=green];
m18_21 -> m18_21  [key=1, style=dashed, color=green, label=job];
m18_21 -> m18_22  [key=0, style=solid, color=green];
m18_21 -> m18_55  [key=2, style=dotted, color=green];
m18_21 -> m18_23  [key=1, style=dashed, color=green, label=job];
m18_22 -> m18_23  [key=0, style=solid, color=green];
m18_22 -> m18_45  [key=2, style=dotted, color=green];
m18_23 -> m18_23  [key=1, style=dashed, color=green, label=job];
m18_23 -> m18_24  [key=0, style=solid, color=green];
m18_23 -> m18_49  [key=2, style=dotted, color=green];
m18_23 -> m18_55  [key=2, style=dotted, color=green];
m18_23 -> m18_25  [key=1, style=dashed, color=green, label=job];
m18_24 -> m18_25  [key=0, style=solid, color=green];
m18_24 -> m18_45  [key=2, style=dotted, color=green];
m18_25 -> m18_25  [key=1, style=dashed, color=green, label=job];
m18_25 -> m18_26  [key=0, style=solid, color=green];
m18_25 -> m18_59  [key=2, style=dotted, color=green];
m18_25 -> m18_58  [key=2, style=dotted, color=green];
m18_25 -> m18_27  [key=1, style=dashed, color=green, label=job];
m18_26 -> m18_27  [key=0, style=solid, color=green];
m18_26 -> m18_45  [key=2, style=dotted, color=green];
m18_27 -> m18_27  [key=1, style=dashed, color=green, label=job];
m18_27 -> m18_28  [key=0, style=solid, color=green];
m18_27 -> m18_60  [key=2, style=dotted, color=green];
m18_27 -> m18_61  [key=2, style=dotted, color=green];
m18_27 -> m18_55  [key=2, style=dotted, color=green];
m18_27 -> m18_29  [key=1, style=dashed, color=green, label=job];
m18_28 -> m18_29  [key=0, style=solid, color=green];
m18_28 -> m18_45  [key=2, style=dotted, color=green];
m18_29 -> m18_29  [key=1, style=dashed, color=green, label=job];
m18_29 -> m18_30  [key=0, style=solid, color=green];
m18_29 -> m18_55  [key=2, style=dotted, color=green];
m18_29 -> m18_31  [key=1, style=dashed, color=green, label=job];
m18_30 -> m18_31  [key=0, style=solid, color=green];
m18_30 -> m18_45  [key=2, style=dotted, color=green];
m18_31 -> m18_31  [key=1, style=dashed, color=green, label=job];
m18_31 -> m18_32  [key=0, style=solid, color=green];
m18_31 -> m18_49  [key=2, style=dotted, color=green];
m18_31 -> m18_55  [key=2, style=dotted, color=green];
m18_31 -> m18_33  [key=1, style=dashed, color=green, label=job];
m18_32 -> m18_33  [key=0, style=solid, color=green];
m18_32 -> m18_45  [key=2, style=dotted, color=green];
m18_33 -> m18_33  [key=1, style=dashed, color=green, label=job];
m18_33 -> m18_34  [key=0, style=solid, color=green];
m18_33 -> m18_62  [key=2, style=dotted, color=green];
m18_33 -> m18_58  [key=2, style=dotted, color=green];
m18_33 -> m18_35  [key=1, style=dashed, color=green, label=job];
m18_34 -> m18_35  [key=0, style=solid, color=green];
m18_34 -> m18_45  [key=2, style=dotted, color=green];
m18_35 -> m18_36  [key=0, style=solid, color=green];
m18_35 -> m18_41  [key=0, style=solid, color=green];
m18_35 -> m18_37  [key=1, style=dashed, color=green, label=job];
m18_35 -> m18_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_36 -> m18_37  [key=0, style=solid, color=green];
m18_36 -> m18_45  [key=2, style=dotted, color=green];
m18_37 -> m18_37  [key=1, style=dashed, color=green, label=job];
m18_37 -> m18_38  [key=0, style=solid, color=green];
m18_37 -> m18_63  [key=2, style=dotted, color=green];
m18_37 -> m18_55  [key=2, style=dotted, color=green];
m18_37 -> m18_39  [key=1, style=dashed, color=green, label=job];
m18_41 -> m18_19  [key=0, style=solid, color=green];
m18_41 -> m18_45  [key=2, style=dotted, color=green];
m18_40 -> m18_41  [key=0, style=solid, color=green];
m18_40 -> m18_45  [key=2, style=dotted, color=green];
m18_38 -> m18_39  [key=0, style=solid, color=green];
m18_38 -> m18_45  [key=2, style=dotted, color=green];
m18_39 -> m18_39  [key=1, style=dashed, color=green, label=job];
m18_39 -> m18_40  [key=0, style=solid, color=green];
m18_39 -> m18_55  [key=2, style=dotted, color=green];
m18_44 -> m18_0  [key=0, style=bold, color=blue];
m18_65 -> m18_1  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_4  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_5  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_7  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_17  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_43  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_9  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_11  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_12  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_13  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_14  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_15  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_16  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_18  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_20  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_42  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_21  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_22  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_23  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_24  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_25  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_26  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_27  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_28  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_29  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_30  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_31  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_32  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_33  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_34  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_36  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_41  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_37  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_38  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_39  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_40  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m18_65 -> m18_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m19_0 -> m19_1  [key=0, style=solid, color=red];
m19_0 -> m19_2  [key=1, style=dashed, color=red, label=string];
m19_0 -> m19_4  [key=1, style=dashed, color=red, label=string];
m19_0 -> m19_6  [key=1, style=dashed, color=red, label=string];
m19_0 -> m19_8  [key=1, style=dashed, color=red, label=string];
m19_1 -> m19_2  [key=0, style=solid, color=red];
m19_2 -> m19_3  [key=0, style=solid, color=red];
m19_2 -> m19_4  [key=0, style=solid, color=red];
m19_2 -> m19_11  [key=2, style=dotted, color=red];
m19_4 -> m19_5  [key=0, style=solid, color=red];
m19_4 -> m19_6  [key=0, style=solid, color=red];
m19_4 -> m19_11  [key=2, style=dotted, color=red];
m19_6 -> m19_7  [key=0, style=solid, color=red];
m19_6 -> m19_8  [key=0, style=solid, color=red];
m19_6 -> m19_11  [key=2, style=dotted, color=red];
m19_8 -> m19_9  [key=0, style=solid, color=red];
m19_8 -> m19_10  [key=0, style=solid, color=red];
m19_8 -> m19_11  [key=2, style=dotted, color=red];
m19_3 -> m19_10  [key=0, style=solid, color=red];
m19_5 -> m19_10  [key=0, style=solid, color=red];
m19_7 -> m19_10  [key=0, style=solid, color=red];
m19_9 -> m19_10  [key=0, style=solid, color=red];
m19_10 -> m19_0  [key=0, style=bold, color=blue];
m19_12 -> m19_1  [key=1, style=dashed, color=red, label="HangFire.Web.FontsHandler"];
m19_12 -> m19_3  [key=1, style=dashed, color=red, label="HangFire.Web.FontsHandler"];
m19_12 -> m19_5  [key=1, style=dashed, color=red, label="HangFire.Web.FontsHandler"];
m19_12 -> m19_7  [key=1, style=dashed, color=red, label="HangFire.Web.FontsHandler"];
m19_12 -> m19_9  [key=1, style=dashed, color=red, label="HangFire.Web.FontsHandler"];
m21_4 -> m21_3  [key=0, style=solid, color=green];
m21_4 -> m21_8  [key=2, style=dotted, color=green];
m21_4 -> m21_9  [key=2, style=dotted, color=green];
m21_4 -> m21_10  [key=2, style=dotted, color=green];
m21_9 -> m21_15  [key=0, style=solid, color=green];
m21_15 -> m21_16  [key=0, style=solid, color=green];
m21_15 -> m21_17  [key=2, style=dotted, color=green];
m21_16 -> m21_9  [key=0, style=bold, color=blue];
m21_6 -> m21_7  [key=0, style=solid];
m21_7 -> m21_8  [key=0, style=solid];
m21_7 -> m21_9  [key=2, style=dotted];
m21_8 -> m21_6  [key=0, style=bold, color=blue];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_2  [key=0, style=solid];
m21_1 -> m21_4  [key=2, style=dotted];
m21_2 -> m21_3  [key=0, style=solid, color=green];
m21_2 -> m21_5  [key=2, style=dotted];
m21_2 -> m21_6  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_3 -> m21_4  [key=0, style=solid, color=green];
m21_3 -> m21_8  [key=2, style=dotted, color=green];
m21_3 -> m21_9  [key=2, style=dotted, color=green];
m21_3 -> m21_10  [key=2, style=dotted, color=green];
m21_3 -> m21_0  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid, color=red];
m22_1 -> m22_2  [key=0, style=solid, color=red];
m22_1 -> m22_6  [key=2, style=dotted, color=red];
m22_1 -> m22_3  [key=1, style=dashed, color=red, label=storage];
m22_2 -> m22_3  [key=0, style=solid, color=red];
m22_2 -> m22_7  [key=2, style=dotted, color=red];
m22_3 -> m22_4  [key=0, style=solid, color=red];
m22_4 -> m22_5  [key=0, style=solid, color=red];
m22_4 -> n0  [key=2, style=dotted, color=red];
m22_5 -> m22_0  [key=0, style=bold, color=blue];
m22_9 -> m22_10  [key=0, style=solid, color=red];
m22_10 -> m22_11  [key=0, style=solid, color=red];
m22_10 -> m22_12  [key=2, style=dotted, color=red];
m22_11 -> m22_9  [key=0, style=bold, color=blue];
m24_0 -> m24_1  [key=0, style=solid, color=red];
m24_1 -> m24_2  [key=0, style=solid, color=red];
m24_1 -> m24_6  [key=2, style=dotted, color=red];
m24_2 -> m24_3  [key=0, style=solid, color=red];
m24_2 -> m24_7  [key=2, style=dotted, color=red];
m24_2 -> m24_8  [key=2, style=dotted, color=red];
m24_3 -> m24_4  [key=0, style=solid, color=red];
m24_3 -> m24_9  [key=2, style=dotted, color=red];
m24_3 -> m24_8  [key=2, style=dotted, color=red];
m24_4 -> m24_5  [key=0, style=solid, color=red];
m24_4 -> m24_10  [key=2, style=dotted, color=red];
m24_4 -> m24_8  [key=2, style=dotted, color=red];
m24_5 -> m24_0  [key=0, style=bold, color=blue];
m25_0 -> m25_1  [key=0, style=solid];
m25_0 -> m25_3  [key=1, style=dashed, color=red, label=string];
m25_0 -> m25_5  [key=1, style=dashed, color=darkseagreen4, label=MessageQueueTransaction];
m25_0 -> m25_6  [key=1, style=dashed, color=red, label=string];
m25_1 -> m25_2  [key=0, style=solid];
m25_1 -> m25_3  [key=0, style=solid, color=red];
m25_3 -> m25_4  [key=0, style=solid, color=red];
m25_3 -> m25_5  [key=0, style=solid, color=red];
m25_5 -> m25_6  [key=0, style=solid, color=red];
m25_6 -> m25_7  [key=0, style=solid, color=red];
m25_2 -> m25_7  [key=0, style=solid];
m25_2 -> m25_8  [key=2, style=dotted];
m25_4 -> m25_7  [key=0, style=solid, color=red];
m25_4 -> m25_8  [key=2, style=dotted, color=red];
m25_7 -> m25_0  [key=0, style=bold, color=blue];
m25_9 -> m25_10  [key=0, style=solid];
m25_10 -> m25_11  [key=0, style=solid];
m25_10 -> m25_12  [key=0, style=solid];
m25_11 -> m25_15  [key=0, style=solid];
m25_12 -> m25_13  [key=0, style=solid, color=red];
m25_13 -> m25_14  [key=0, style=solid, color=red];
m25_13 -> m25_16  [key=2, style=dotted, color=red];
m25_14 -> m25_15  [key=0, style=solid];
m25_14 -> m25_17  [key=2, style=dotted];
m25_15 -> m25_9  [key=0, style=bold, color=blue];
m25_18 -> m25_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.MessageQueueProcessingJob"];
m25_18 -> m25_6  [key=1, style=dashed, color=red, label="HangFire.SqlServer.MessageQueueProcessingJob"];
m25_18 -> m25_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.MessageQueueProcessingJob"];
m25_18 -> m25_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.MessageQueueProcessingJob"];
m25_18 -> m25_13  [key=1, style=dashed, color=red, label="HangFire.SqlServer.MessageQueueProcessingJob"];
m25_18 -> m25_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.MessageQueueProcessingJob"];
m26_0 -> m26_1  [key=0, style=solid, color=red];
m26_0 -> m26_2  [key=1, style=dashed, color=red, label="System.Net.HttpStatusCode"];
m26_0 -> m26_5  [key=3, color=red, style=bold, label="method methodReturn IHttpHandler Process"];
m26_1 -> m26_2  [key=0, style=solid, color=red];
m26_2 -> m26_3  [key=0, style=solid, color=red];
m26_2 -> m26_2  [key=1, style=dashed, color=red, label=response];
m26_2 -> m26_4  [key=1, style=dashed, color=red, label=response];
m26_3 -> m26_4  [key=0, style=solid, color=red];
m26_3 -> m26_7  [key=2, style=dotted, color=red];
m26_4 -> m26_5  [key=0, style=solid, color=red];
m26_4 -> m26_8  [key=2, style=dotted, color=red];
m26_5 -> m26_6  [key=0, style=solid, color=red];
m26_6 -> m26_0  [key=0, style=bold, color=blue];
m27_0 -> m27_1  [key=0, style=solid, color=red];
m27_1 -> m27_2  [key=0, style=solid, color=red];
m27_2 -> m27_3  [key=0, style=solid, color=red];
m27_3 -> m27_0  [key=0, style=bold, color=blue];
m27_4 -> m27_1  [key=1, style=dashed, color=red, label="HangFire.Web.JavaScriptHandler"];
m27_4 -> m27_2  [key=1, style=dashed, color=red, label="HangFire.Web.JavaScriptHandler"];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_2  [key=0, style=solid];
m28_2 -> m28_0  [key=0, style=bold, color=blue];
m28_3 -> m28_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m29_0 -> m29_1  [key=0, style=solid, color=green];
m29_1 -> m29_2  [key=0, style=solid, color=green];
m29_1 -> m29_71  [key=2, style=dotted, color=green];
m29_2 -> m29_3  [key=0, style=solid, color=green];
m29_2 -> m29_72  [key=2, style=dotted, color=green];
m29_3 -> m29_4  [key=0, style=solid, color=green];
m29_4 -> m29_5  [key=0, style=solid, color=green];
m29_4 -> m29_73  [key=2, style=dotted, color=green];
m29_4 -> m29_9  [key=1, style=dashed, color=green, label=from];
m29_5 -> m29_6  [key=0, style=solid, color=green];
m29_5 -> m29_73  [key=2, style=dotted, color=green];
m29_5 -> m29_9  [key=1, style=dashed, color=green, label=perPage];
m29_9 -> m29_10  [key=0, style=solid, color=green];
m29_9 -> m29_75  [key=2, style=dotted, color=green];
m29_9 -> m29_76  [key=2, style=dotted, color=green];
m29_9 -> m29_77  [key=2, style=dotted, color=green];
m29_9 -> m29_12  [key=1, style=dashed, color=green, label=pager];
m29_9 -> m29_14  [key=1, style=dashed, color=green, label=pager];
m29_9 -> m29_69  [key=1, style=dashed, color=green, label=pager];
m29_6 -> m29_7  [key=0, style=solid, color=green];
m29_7 -> m29_8  [key=0, style=solid, color=green];
m29_8 -> m29_9  [key=0, style=solid, color=green];
m29_8 -> m29_74  [key=2, style=dotted, color=green];
m29_8 -> m29_10  [key=1, style=dashed, color=green, label=monitor];
m29_10 -> m29_11  [key=0, style=solid, color=green];
m29_10 -> m29_78  [key=2, style=dotted, color=green];
m29_10 -> m29_17  [key=1, style=dashed, color=green, label=failedJobs];
m29_12 -> m29_13  [key=0, style=solid, color=green];
m29_12 -> m29_14  [key=0, style=solid, color=green];
m29_14 -> m29_15  [key=0, style=solid, color=green];
m29_14 -> m29_79  [key=2, style=dotted, color=green];
m29_14 -> m29_80  [key=2, style=dotted, color=green];
m29_14 -> m29_81  [key=2, style=dotted, color=green];
m29_69 -> m29_70  [key=0, style=solid];
m29_69 -> m29_90  [key=2, style=dotted];
m29_69 -> m29_80  [key=2, style=dotted];
m29_69 -> m29_81  [key=2, style=dotted];
m29_11 -> m29_12  [key=0, style=solid];
m29_11 -> m29_71  [key=2, style=dotted];
m29_17 -> m29_18  [key=0, style=solid, color=green];
m29_17 -> m29_68  [key=0, style=solid, color=green];
m29_17 -> m29_19  [key=1, style=dashed, color=green, label=job];
m29_13 -> m29_70  [key=0, style=solid, color=green];
m29_13 -> m29_71  [key=2, style=dotted, color=green];
m29_15 -> m29_16  [key=0, style=solid, color=green];
m29_15 -> m29_71  [key=2, style=dotted, color=green];
m29_16 -> m29_17  [key=0, style=solid, color=green];
m29_16 -> m29_57  [key=1, style=dashed, color=green, label=index];
m29_57 -> m29_58  [key=0, style=solid, color=green];
m29_57 -> m29_82  [key=2, style=dotted, color=green];
m29_57 -> m29_57  [key=1, style=dashed, color=green, label=index];
m29_18 -> m29_19  [key=0, style=solid, color=green];
m29_18 -> m29_71  [key=2, style=dotted, color=green];
m29_68 -> m29_69  [key=0, style=solid, color=green];
m29_68 -> m29_71  [key=2, style=dotted, color=green];
m29_19 -> m29_20  [key=0, style=solid, color=green];
m29_19 -> m29_82  [key=2, style=dotted, color=green];
m29_19 -> m29_19  [key=1, style=dashed, color=green, label=job];
m29_19 -> m29_21  [key=1, style=dashed, color=green, label=job];
m29_20 -> m29_21  [key=0, style=solid, color=green];
m29_20 -> m29_71  [key=2, style=dotted, color=green];
m29_21 -> m29_22  [key=0, style=solid, color=green];
m29_21 -> m29_82  [key=2, style=dotted, color=green];
m29_21 -> m29_21  [key=1, style=dashed, color=green, label=job];
m29_21 -> m29_23  [key=1, style=dashed, color=green, label=job];
m29_22 -> m29_23  [key=0, style=solid, color=green];
m29_22 -> m29_71  [key=2, style=dotted, color=green];
m29_23 -> m29_24  [key=0, style=solid, color=green];
m29_23 -> m29_77  [key=2, style=dotted, color=green];
m29_23 -> m29_82  [key=2, style=dotted, color=green];
m29_23 -> m29_23  [key=1, style=dashed, color=green, label=job];
m29_23 -> m29_25  [key=1, style=dashed, color=green, label=job];
m29_24 -> m29_25  [key=0, style=solid, color=green];
m29_24 -> m29_71  [key=2, style=dotted, color=green];
m29_25 -> m29_26  [key=0, style=solid, color=green];
m29_25 -> m29_83  [key=2, style=dotted, color=green];
m29_25 -> m29_81  [key=2, style=dotted, color=green];
m29_25 -> m29_25  [key=1, style=dashed, color=green, label=job];
m29_25 -> m29_27  [key=1, style=dashed, color=green, label=job];
m29_26 -> m29_27  [key=0, style=solid, color=green];
m29_26 -> m29_71  [key=2, style=dotted, color=green];
m29_27 -> m29_28  [key=0, style=solid, color=green];
m29_27 -> m29_29  [key=0, style=solid, color=green];
m29_27 -> m29_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_27 -> m29_30  [key=1, style=dashed, color=green, label=job];
m29_28 -> m29_29  [key=0, style=solid, color=green];
m29_28 -> m29_71  [key=2, style=dotted, color=green];
m29_29 -> m29_30  [key=0, style=solid, color=green];
m29_29 -> m29_71  [key=2, style=dotted, color=green];
m29_30 -> m29_31  [key=0, style=solid, color=green];
m29_30 -> m29_36  [key=0, style=solid, color=green];
m29_30 -> m29_30  [key=1, style=dashed, color=green, label=job];
m29_30 -> m29_32  [key=1, style=dashed, color=green, label=job];
m29_30 -> m29_37  [key=1, style=dashed, color=green, label=job];
m29_31 -> m29_32  [key=0, style=solid, color=green];
m29_31 -> m29_71  [key=2, style=dotted, color=green];
m29_36 -> m29_37  [key=0, style=solid, color=green];
m29_36 -> m29_71  [key=2, style=dotted, color=green];
m29_32 -> m29_33  [key=0, style=solid, color=green];
m29_32 -> m29_84  [key=2, style=dotted, color=green];
m29_32 -> m29_82  [key=2, style=dotted, color=green];
m29_32 -> m29_32  [key=1, style=dashed, color=green, label=job];
m29_32 -> m29_34  [key=1, style=dashed, color=green, label=job];
m29_37 -> m29_38  [key=0, style=solid, color=green];
m29_37 -> m29_85  [key=2, style=dotted, color=green];
m29_37 -> m29_81  [key=2, style=dotted, color=green];
m29_37 -> m29_37  [key=1, style=dashed, color=green, label=job];
m29_37 -> m29_39  [key=1, style=dashed, color=green, label=job];
m29_33 -> m29_34  [key=0, style=solid, color=green];
m29_33 -> m29_71  [key=2, style=dotted, color=green];
m29_34 -> m29_35  [key=0, style=solid, color=green];
m29_34 -> m29_82  [key=2, style=dotted, color=green];
m29_34 -> m29_34  [key=1, style=dashed, color=green, label=job];
m29_34 -> m29_37  [key=1, style=dashed, color=green, label=job];
m29_35 -> m29_36  [key=0, style=solid, color=green];
m29_35 -> m29_71  [key=2, style=dotted, color=green];
m29_38 -> m29_39  [key=0, style=solid, color=green];
m29_38 -> m29_71  [key=2, style=dotted, color=green];
m29_39 -> m29_40  [key=0, style=solid, color=green];
m29_39 -> m29_82  [key=2, style=dotted, color=green];
m29_39 -> m29_39  [key=1, style=dashed, color=green, label=job];
m29_39 -> m29_41  [key=1, style=dashed, color=green, label=job];
m29_40 -> m29_41  [key=0, style=solid, color=green];
m29_40 -> m29_71  [key=2, style=dotted, color=green];
m29_41 -> m29_42  [key=0, style=solid, color=green];
m29_41 -> m29_86  [key=2, style=dotted, color=green];
m29_41 -> m29_82  [key=2, style=dotted, color=green];
m29_41 -> m29_41  [key=1, style=dashed, color=green, label=job];
m29_41 -> m29_43  [key=1, style=dashed, color=green, label=job];
m29_42 -> m29_43  [key=0, style=solid, color=green];
m29_42 -> m29_71  [key=2, style=dotted, color=green];
m29_43 -> m29_44  [key=0, style=solid, color=green];
m29_43 -> m29_87  [key=2, style=dotted, color=green];
m29_43 -> m29_82  [key=2, style=dotted, color=green];
m29_43 -> m29_43  [key=1, style=dashed, color=green, label=job];
m29_43 -> m29_45  [key=1, style=dashed, color=green, label=job];
m29_44 -> m29_45  [key=0, style=solid, color=green];
m29_44 -> m29_71  [key=2, style=dotted, color=green];
m29_45 -> m29_46  [key=0, style=solid, color=green];
m29_45 -> m29_49  [key=0, style=solid, color=green];
m29_45 -> m29_88  [key=2, style=dotted, color=green];
m29_45 -> m29_45  [key=1, style=dashed, color=green, label=job];
m29_45 -> m29_47  [key=1, style=dashed, color=green, label=job];
m29_45 -> m29_50  [key=1, style=dashed, color=green, label=job];
m29_46 -> m29_47  [key=0, style=solid, color=green];
m29_46 -> m29_71  [key=2, style=dotted, color=green];
m29_49 -> m29_50  [key=0, style=solid, color=green];
m29_49 -> m29_71  [key=2, style=dotted];
m29_47 -> m29_48  [key=0, style=solid, color=green];
m29_47 -> m29_82  [key=2, style=dotted, color=green];
m29_47 -> m29_47  [key=1, style=dashed, color=green, label=job];
m29_47 -> m29_50  [key=1, style=dashed, color=green, label=job];
m29_50 -> m29_51  [key=0, style=solid, color=green];
m29_50 -> m29_54  [key=0, style=solid, color=green];
m29_50 -> m29_50  [key=1, style=dashed, color=green, label=job];
m29_50 -> m29_52  [key=1, style=dashed, color=green, label=job];
m29_50 -> m29_55  [key=1, style=dashed, color=green, label=job];
m29_48 -> m29_49  [key=0, style=solid];
m29_48 -> m29_71  [key=2, style=dotted];
m29_48 -> m29_48  [key=3, color=green, style=bold, label="Local variable int nextEntry"];
m29_51 -> m29_52  [key=0, style=solid, color=green];
m29_51 -> m29_71  [key=2, style=dotted, color=green];
m29_54 -> m29_55  [key=0, style=solid, color=green];
m29_54 -> m29_71  [key=2, style=dotted, color=green];
m29_52 -> m29_53  [key=0, style=solid, color=green];
m29_52 -> m29_77  [key=2, style=dotted, color=green];
m29_52 -> m29_82  [key=2, style=dotted, color=green];
m29_52 -> m29_52  [key=1, style=dashed, color=green, label=job];
m29_52 -> m29_55  [key=1, style=dashed, color=green, label=job];
m29_55 -> m29_56  [key=0, style=solid, color=green];
m29_55 -> m29_17  [key=0, style=solid, color=green];
m29_55 -> m29_55  [key=1, style=dashed, color=green, label=job];
m29_55 -> m29_59  [key=1, style=dashed, color=green, label=job];
m29_53 -> m29_54  [key=0, style=solid, color=green];
m29_53 -> m29_71  [key=2, style=dotted, color=green];
m29_56 -> m29_57  [key=0, style=solid, color=green];
m29_56 -> m29_71  [key=2, style=dotted, color=green];
m29_59 -> m29_60  [key=0, style=solid, color=green];
m29_59 -> m29_82  [key=2, style=dotted, color=green];
m29_59 -> m29_59  [key=1, style=dashed, color=green, label=job];
m29_59 -> m29_61  [key=1, style=dashed, color=green, label=job];
m29_58 -> m29_59  [key=0, style=solid, color=green];
m29_58 -> m29_71  [key=2, style=dotted, color=green];
m29_60 -> m29_61  [key=0, style=solid, color=green];
m29_60 -> m29_71  [key=2, style=dotted, color=green];
m29_61 -> m29_62  [key=0, style=solid, color=green];
m29_61 -> m29_82  [key=2, style=dotted, color=green];
m29_61 -> m29_61  [key=1, style=dashed, color=green, label=job];
m29_61 -> m29_63  [key=1, style=dashed, color=green, label=job];
m29_62 -> m29_63  [key=0, style=solid, color=green];
m29_62 -> m29_71  [key=2, style=dotted, color=green];
m29_63 -> m29_64  [key=0, style=solid, color=green];
m29_63 -> m29_67  [key=0, style=solid, color=green];
m29_63 -> m29_88  [key=2, style=dotted, color=green];
m29_63 -> m29_63  [key=1, style=dashed, color=green, label=job];
m29_63 -> m29_65  [key=1, style=dashed, color=green, label=job];
m29_64 -> m29_65  [key=0, style=solid, color=green];
m29_64 -> m29_71  [key=2, style=dotted, color=green];
m29_67 -> m29_17  [key=0, style=solid, color=green];
m29_67 -> m29_71  [key=2, style=dotted];
m29_65 -> m29_66  [key=0, style=solid, color=green];
m29_65 -> m29_89  [key=2, style=dotted, color=green];
m29_65 -> m29_81  [key=2, style=dotted, color=green];
m29_65 -> m29_65  [key=1, style=dashed, color=green, label=job];
m29_66 -> m29_67  [key=0, style=solid, color=green];
m29_66 -> m29_71  [key=2, style=dotted, color=green];
m29_70 -> m29_0  [key=0, style=bold, color=blue];
m29_91 -> m29_1  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_2  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_4  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_5  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_9  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_13  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_14  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_15  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_18  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_19  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_20  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_21  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_22  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_23  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_24  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_25  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_26  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_28  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_29  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_31  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_32  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_33  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_34  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_35  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_36  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_37  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_38  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_39  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_40  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_41  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_42  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_43  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_44  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_46  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_47  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_51  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_52  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_53  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_54  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_56  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_57  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_58  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_59  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_60  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_61  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_62  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_64  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_65  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_66  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_68  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m29_91 -> m29_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m30_15 -> m30_16  [key=0, style=solid];
m30_16 -> m30_17  [key=0, style=solid];
m30_16 -> m30_18  [key=2, style=dotted];
m30_16 -> m30_14  [key=2, style=dotted];
m30_17 -> m30_15  [key=0, style=bold, color=blue];
m30_10 -> m30_11  [key=0, style=solid];
m30_11 -> m30_12  [key=0, style=solid];
m30_11 -> m30_13  [key=2, style=dotted];
m30_11 -> m30_14  [key=2, style=dotted];
m30_12 -> m30_10  [key=0, style=bold, color=blue];
m30_0 -> m30_1  [key=0, style=solid];
m30_1 -> m30_0  [key=0, style=bold, color=blue];
m30_19 -> m30_20  [key=0, style=solid];
m30_19 -> m30_21  [key=0, style=bold, color=red];
m30_19 -> m30_22  [key=0, style=bold, color=crimson];
m30_20 -> m30_21  [key=0, style=solid, color=red];
m30_20 -> m30_24  [key=2, style=dotted];
m30_21 -> m30_22  [key=0, style=solid, color=red];
m30_21 -> m30_25  [key=2, style=dotted, color=red];
m30_22 -> m30_23  [key=0, style=solid];
m30_22 -> m30_26  [key=2, style=dotted];
m30_23 -> m30_19  [key=0, style=bold, color=blue];
m30_27 -> m30_28  [key=0, style=solid];
m30_27 -> m30_29  [key=0, style=bold, color=crimson];
m30_27 -> m30_30  [key=0, style=bold, color=crimson];
m30_28 -> m30_29  [key=0, style=solid];
m30_28 -> m30_32  [key=2, style=dotted];
m30_29 -> m30_30  [key=0, style=solid];
m30_29 -> m30_33  [key=2, style=dotted];
m30_30 -> m30_31  [key=0, style=solid];
m30_30 -> m30_34  [key=2, style=dotted];
m30_31 -> m30_27  [key=0, style=bold, color=blue];
m30_35 -> m30_36  [key=0, style=solid];
m30_36 -> m30_37  [key=0, style=solid];
m30_36 -> m30_38  [key=2, style=dotted];
m30_37 -> m30_35  [key=0, style=bold, color=blue];
m30_2 -> m30_3  [key=0, style=solid];
m30_2 -> m30_4  [key=1, style=dashed, color=darkseagreen4, label=int];
m30_2 -> m30_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageOptions"];
m30_2 -> m30_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_3 -> m30_4  [key=0, style=solid];
m30_4 -> m30_5  [key=0, style=solid];
m30_5 -> m30_6  [key=0, style=solid];
m30_6 -> m30_7  [key=0, style=solid];
m30_6 -> m30_8  [key=2, style=dotted];
m30_6 -> m30_9  [key=2, style=dotted];
m30_7 -> m30_2  [key=0, style=bold, color=blue];
m30_39 -> m30_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m30_39 -> m30_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m30_39 -> m30_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m30_39 -> m30_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m30_39 -> m30_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m30_39 -> m30_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m30_39 -> m30_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m30_39 -> m30_21  [key=1, style=dashed, color=red, label="HangFire.Redis.RedisStorage"];
m30_39 -> m30_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m30_39 -> m30_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m31_0 -> m31_1  [key=0, style=solid];
m31_1 -> m31_2  [key=0, style=solid];
m31_1 -> m31_9  [key=2, style=dotted];
m31_2 -> m31_3  [key=0, style=solid];
m31_2 -> m31_10  [key=2, style=dotted];
m31_2 -> m31_4  [key=1, style=dashed, color=darkseagreen4, label=response];
m31_3 -> m31_4  [key=0, style=solid];
m31_3 -> m31_11  [key=2, style=dotted];
m31_3 -> m31_12  [key=2, style=dotted];
m31_4 -> m31_5  [key=0, style=solid, color=red];
m31_4 -> m31_13  [key=2, style=dotted];
m31_4 -> m31_7  [key=1, style=dashed, color=red, label=serialized];
m31_5 -> m31_6  [key=0, style=solid, color=red];
m31_7 -> m31_8  [key=0, style=solid, color=red];
m31_7 -> m31_14  [key=2, style=dotted, color=red];
m31_6 -> m31_7  [key=0, style=solid, color=red];
m31_8 -> m31_0  [key=0, style=bold, color=blue];
m31_15 -> m31_5  [key=1, style=dashed, color=red, label="HangFire.Web.JsonStats"];
m31_15 -> m31_6  [key=1, style=dashed, color=red, label="HangFire.Web.JsonStats"];
m31_15 -> m31_7  [key=1, style=dashed, color=red, label="HangFire.Web.JsonStats"];
m33_220 -> m33_221  [key=0, style=solid];
m33_221 -> m33_222  [key=0, style=solid];
m33_221 -> m33_18  [key=2, style=dotted];
m33_221 -> m33_227  [key=2, style=dotted];
m33_221 -> m33_228  [key=2, style=dotted];
m33_221 -> m33_229  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_222 -> m33_223  [key=0, style=solid];
m33_222 -> m33_70  [key=2, style=dotted];
m33_223 -> m33_224  [key=0, style=solid];
m33_223 -> m33_141  [key=2, style=dotted];
m33_223 -> m33_225  [key=1, style=dashed, color=darkseagreen4, label=result];
m33_224 -> m33_225  [key=0, style=solid];
m33_224 -> m33_106  [key=2, style=dotted];
m33_224 -> m33_232  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_225 -> m33_226  [key=0, style=solid];
m33_225 -> m33_201  [key=2, style=dotted];
m33_226 -> m33_220  [key=0, style=bold, color=blue];
m33_29 -> m33_30  [key=0, style=solid];
m33_253 -> m33_254  [key=0, style=solid];
m33_254 -> m33_255  [key=0, style=solid];
m33_254 -> m33_18  [key=2, style=dotted];
m33_254 -> m33_22  [key=2, style=dotted];
m33_254 -> m33_242  [key=2, style=dotted];
m33_254 -> m33_227  [key=2, style=dotted];
m33_254 -> m33_19  [key=2, style=dotted];
m33_254 -> m33_261  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_255 -> m33_256  [key=0, style=solid];
m33_255 -> m33_18  [key=2, style=dotted];
m33_255 -> m33_19  [key=2, style=dotted];
m33_255 -> m33_264  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_256 -> m33_257  [key=0, style=solid];
m33_256 -> m33_70  [key=2, style=dotted];
m33_257 -> m33_258  [key=0, style=solid];
m33_257 -> m33_141  [key=2, style=dotted];
m33_257 -> m33_259  [key=1, style=dashed, color=darkseagreen4, label=result];
m33_258 -> m33_259  [key=0, style=solid];
m33_258 -> m33_106  [key=2, style=dotted];
m33_258 -> m33_267  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_259 -> m33_260  [key=0, style=solid];
m33_259 -> m33_174  [key=2, style=dotted];
m33_260 -> m33_253  [key=0, style=bold, color=blue];
m33_101 -> m33_102  [key=0, style=solid];
m33_101 -> m33_70  [key=2, style=dotted];
m33_103 -> m33_22  [key=2, style=dotted];
m33_103 -> m33_104  [key=0, style=solid];
m33_103 -> m33_106  [key=2, style=dotted];
m33_103 -> m33_111  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_110 -> m33_111  [key=0, style=solid];
m33_110 -> m33_26  [key=2, style=dotted];
m33_106 -> m33_42  [key=2, style=dotted];
m33_106 -> m33_107  [key=0, style=solid];
m33_102 -> m33_103  [key=0, style=solid];
m33_102 -> m33_39  [key=2, style=dotted];
m33_102 -> m33_80  [key=2, style=dotted];
m33_104 -> m33_40  [key=2, style=dotted];
m33_104 -> m33_105  [key=0, style=solid];
m33_104 -> m33_98  [key=0, style=bold, color=blue];
m33_109 -> m33_110  [key=0, style=solid];
m33_109 -> m33_41  [key=2, style=dotted];
m33_109 -> m33_107  [key=0, style=bold, color=blue];
m33_105 -> m33_41  [key=2, style=dotted];
m33_105 -> m33_106  [key=0, style=solid];
m33_108 -> m33_41  [key=2, style=dotted];
m33_108 -> m33_109  [key=0, style=solid];
m33_108 -> m33_110  [key=2, style=dotted];
m33_107 -> m33_108  [key=0, style=solid];
m33_107 -> m33_43  [key=2, style=dotted];
m33_111 -> m33_101  [key=0, style=bold, color=blue];
m33_111 -> m33_112  [key=0, style=solid];
m33_0 -> m33_1  [key=0, style=solid];
m33_1 -> m33_2  [key=0, style=solid];
m33_1 -> m33_14  [key=2, style=dotted];
m33_2 -> m33_3  [key=0, style=solid];
m33_2 -> m33_15  [key=2, style=dotted];
m33_2 -> m33_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_3 -> m33_4  [key=0, style=solid];
m33_3 -> m33_16  [key=2, style=dotted];
m33_4 -> m33_5  [key=0, style=solid];
m33_4 -> m33_17  [key=2, style=dotted];
m33_5 -> m33_6  [key=0, style=solid];
m33_5 -> m33_18  [key=2, style=dotted];
m33_5 -> m33_19  [key=2, style=dotted];
m33_5 -> m33_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_6 -> m33_7  [key=0, style=solid];
m33_6 -> m33_20  [key=2, style=dotted];
m33_7 -> m33_8  [key=0, style=solid];
m33_7 -> m33_21  [key=2, style=dotted];
m33_8 -> m33_9  [key=0, style=solid];
m33_8 -> m33_18  [key=2, style=dotted];
m33_8 -> m33_19  [key=2, style=dotted];
m33_8 -> m33_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_9 -> m33_10  [key=0, style=solid];
m33_9 -> m33_18  [key=2, style=dotted];
m33_9 -> m33_19  [key=2, style=dotted];
m33_9 -> m33_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_10 -> m33_11  [key=0, style=solid];
m33_10 -> m33_18  [key=2, style=dotted];
m33_10 -> m33_22  [key=2, style=dotted];
m33_10 -> m33_19  [key=2, style=dotted];
m33_10 -> m33_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_11 -> m33_12  [key=0, style=solid];
m33_11 -> m33_23  [key=2, style=dotted];
m33_12 -> m33_13  [key=0, style=solid];
m33_12 -> m33_18  [key=2, style=dotted];
m33_12 -> m33_19  [key=2, style=dotted];
m33_12 -> m33_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_13 -> m33_0  [key=0, style=bold, color=blue];
m33_57 -> m33_41  [key=2, style=dotted];
m33_57 -> m33_58  [key=0, style=solid];
m33_201 -> m33_22  [key=2, style=dotted];
m33_201 -> m33_202  [key=0, style=solid];
m33_141 -> m33_142  [key=0, style=solid];
m33_23 -> m33_24  [key=0, style=solid];
m33_23 -> m33_25  [key=2, style=dotted];
m33_168 -> m33_169  [key=0, style=solid];
m33_168 -> m33_41  [key=2, style=dotted];
m33_169 -> m33_170  [key=0, style=solid];
m33_169 -> m33_70  [key=2, style=dotted];
m33_169 -> m33_42  [key=2, style=dotted];
m33_170 -> m33_171  [key=0, style=solid];
m33_170 -> m33_141  [key=2, style=dotted];
m33_170 -> m33_172  [key=1, style=dashed, color=darkseagreen4, label=result];
m33_170 -> m33_43  [key=2, style=dotted];
m33_171 -> m33_172  [key=0, style=solid];
m33_171 -> m33_106  [key=2, style=dotted];
m33_171 -> m33_175  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_171 -> m33_26  [key=2, style=dotted];
m33_172 -> m33_173  [key=0, style=solid];
m33_172 -> m33_174  [key=2, style=dotted];
m33_172 -> m33_164  [key=0, style=bold, color=blue];
m33_173 -> m33_168  [key=0, style=bold, color=blue];
m33_173 -> m33_174  [key=0, style=solid];
m33_22 -> m33_23  [key=0, style=solid];
m33_40 -> m33_41  [key=0, style=solid];
m33_80 -> m33_42  [key=2, style=dotted];
m33_80 -> m33_81  [key=0, style=solid];
m33_62 -> m33_63  [key=0, style=solid];
m33_67 -> m33_68  [key=0, style=solid, color=green];
m33_67 -> m33_42  [key=2, style=dotted, color=green];
m33_66 -> m33_67  [key=0, style=solid, color=red];
m33_66 -> m33_41  [key=2, style=dotted];
m33_66 -> m33_70  [key=2, style=dotted, color=red];
m33_68 -> m33_69  [key=0, style=solid];
m33_68 -> m33_73  [key=2, style=dotted];
m33_68 -> m33_70  [key=1, style=dashed, color=darkseagreen4, label=table1];
m33_68 -> m33_71  [key=2, style=dotted];
m33_64 -> m33_22  [key=2, style=dotted];
m33_64 -> m33_65  [key=0, style=solid];
m33_64 -> m33_62  [key=0, style=bold, color=blue];
m33_71 -> m33_72  [key=0, style=solid];
m33_71 -> m33_26  [key=2, style=dotted];
m33_65 -> m33_66  [key=0, style=solid, color=red];
m33_65 -> m33_40  [key=2, style=dotted];
m33_69 -> m33_70  [key=0, style=solid];
m33_69 -> m33_74  [key=2, style=dotted];
m33_69 -> m33_65  [key=0, style=bold, color=blue];
m33_70 -> m33_71  [key=0, style=solid];
m33_70 -> m33_43  [key=2, style=dotted];
m33_70 -> m33_329  [key=0, style=solid];
m33_63 -> m33_64  [key=0, style=solid];
m33_63 -> m33_39  [key=2, style=dotted];
m33_63 -> m33_57  [key=2, style=dotted];
m33_72 -> m33_62  [key=0, style=bold, color=blue];
m33_72 -> m33_73  [key=0, style=solid];
m33_133 -> m33_134  [key=0, style=solid];
m33_133 -> m33_43  [key=2, style=dotted];
m33_134 -> m33_135  [key=0, style=solid];
m33_134 -> m33_70  [key=2, style=dotted];
m33_134 -> m33_139  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m33_134 -> m33_41  [key=2, style=dotted];
m33_135 -> m33_136  [key=0, style=solid];
m33_135 -> m33_38  [key=2, style=dotted];
m33_135 -> m33_138  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_135 -> m33_41  [key=2, style=dotted];
m33_136 -> m33_137  [key=0, style=solid];
m33_136 -> m33_53  [key=2, style=dotted];
m33_136 -> m33_73  [key=2, style=dotted];
m33_136 -> m33_138  [key=1, style=dashed, color=darkseagreen4, label=table5];
m33_137 -> m33_133  [key=0, style=bold, color=blue];
m33_137 -> m33_138  [key=0, style=solid];
m33_137 -> m33_74  [key=2, style=dotted];
m33_97 -> m33_98  [key=0, style=solid];
m33_97 -> m33_43  [key=2, style=dotted];
m33_58 -> m33_59  [key=0, style=solid];
m33_58 -> m33_42  [key=2, style=dotted];
m33_59 -> m33_60  [key=0, style=solid];
m33_59 -> m33_38  [key=2, style=dotted];
m33_59 -> m33_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_59 -> m33_43  [key=2, style=dotted];
m33_60 -> m33_61  [key=0, style=solid];
m33_60 -> m33_53  [key=2, style=dotted];
m33_60 -> m33_26  [key=2, style=dotted];
m33_61 -> m33_58  [key=0, style=bold, color=blue];
m33_61 -> m33_53  [key=0, style=bold, color=blue];
m33_199 -> m33_200  [key=0, style=solid];
m33_199 -> m33_106  [key=2, style=dotted];
m33_199 -> m33_208  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_209 -> m33_210  [key=0, style=solid];
m33_209 -> m33_26  [key=2, style=dotted];
m33_209 -> m33_38  [key=2, style=dotted];
m33_209 -> m33_125  [key=2, style=dotted];
m33_205 -> m33_42  [key=2, style=dotted];
m33_205 -> m33_206  [key=0, style=solid];
m33_200 -> m33_201  [key=0, style=solid];
m33_200 -> m33_39  [key=2, style=dotted];
m33_200 -> m33_193  [key=0, style=bold, color=blue];
m33_202 -> m33_40  [key=2, style=dotted];
m33_202 -> m33_203  [key=0, style=solid];
m33_208 -> m33_209  [key=0, style=solid];
m33_208 -> m33_43  [key=2, style=dotted];
m33_203 -> m33_41  [key=2, style=dotted];
m33_203 -> m33_204  [key=0, style=solid];
m33_203 -> m33_38  [key=2, style=dotted];
m33_203 -> m33_43  [key=2, style=dotted];
m33_204 -> m33_41  [key=2, style=dotted];
m33_204 -> m33_205  [key=0, style=solid];
m33_204 -> m33_202  [key=0, style=bold, color=blue];
m33_206 -> m33_73  [key=2, style=dotted];
m33_206 -> m33_208  [key=1, style=dashed, color=darkseagreen4, label=table8];
m33_206 -> m33_207  [key=0, style=solid];
m33_206 -> m33_43  [key=2, style=dotted];
m33_207 -> m33_208  [key=0, style=solid];
m33_207 -> m33_74  [key=2, style=dotted];
m33_207 -> m33_205  [key=0, style=bold, color=blue];
m33_210 -> m33_199  [key=0, style=bold, color=blue];
m33_210 -> m33_208  [key=0, style=bold, color=blue];
m33_41 -> m33_42  [key=0, style=solid];
m33_41 -> m33_43  [key=2, style=dotted];
m33_182 -> m33_183  [key=0, style=solid];
m33_182 -> m33_173  [key=0, style=bold, color=blue];
m33_183 -> m33_184  [key=0, style=solid];
m33_183 -> m33_70  [key=2, style=dotted];
m33_184 -> m33_185  [key=0, style=solid];
m33_184 -> m33_141  [key=2, style=dotted];
m33_184 -> m33_39  [key=2, style=dotted];
m33_185 -> m33_186  [key=0, style=solid];
m33_185 -> m33_106  [key=2, style=dotted];
m33_185 -> m33_187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_185 -> m33_22  [key=2, style=dotted];
m33_186 -> m33_182  [key=0, style=bold, color=blue];
m33_186 -> m33_40  [key=2, style=dotted];
m33_186 -> m33_187  [key=0, style=solid];
m33_164 -> m33_165  [key=0, style=solid];
m33_166 -> m33_22  [key=2, style=dotted];
m33_166 -> m33_167  [key=0, style=solid];
m33_166 -> m33_164  [key=0, style=bold, color=blue];
m33_165 -> m33_166  [key=0, style=solid];
m33_165 -> m33_39  [key=2, style=dotted];
m33_165 -> m33_167  [key=2, style=dotted];
m33_167 -> m33_40  [key=2, style=dotted];
m33_167 -> m33_168  [key=0, style=solid];
m33_117 -> m33_118  [key=0, style=solid];
m33_117 -> m33_41  [key=2, style=dotted];
m33_118 -> m33_119  [key=0, style=solid];
m33_118 -> m33_70  [key=2, style=dotted];
m33_118 -> m33_41  [key=2, style=dotted];
m33_119 -> m33_120  [key=0, style=solid];
m33_119 -> m33_80  [key=2, style=dotted];
m33_119 -> m33_42  [key=2, style=dotted];
m33_120 -> m33_121  [key=0, style=solid];
m33_120 -> m33_106  [key=2, style=dotted];
m33_120 -> m33_122  [key=1, style=dashed, color=darkseagreen4, label=table4];
m33_120 -> m33_73  [key=2, style=dotted];
m33_120 -> m33_123  [key=1, style=dashed, color=darkseagreen4, label=table4];
m33_121 -> m33_117  [key=0, style=bold, color=blue];
m33_121 -> m33_74  [key=2, style=dotted];
m33_121 -> m33_122  [key=0, style=solid];
m33_126 -> m33_127  [key=0, style=solid];
m33_128 -> m33_22  [key=2, style=dotted];
m33_128 -> m33_129  [key=0, style=solid];
m33_128 -> m33_126  [key=0, style=bold, color=blue];
m33_139 -> m33_140  [key=0, style=solid];
m33_139 -> m33_26  [key=2, style=dotted];
m33_139 -> m33_141  [key=2, style=dotted];
m33_132 -> m33_42  [key=2, style=dotted];
m33_132 -> m33_133  [key=0, style=solid];
m33_132 -> m33_129  [key=0, style=bold, color=blue];
m33_127 -> m33_128  [key=0, style=solid];
m33_127 -> m33_39  [key=2, style=dotted];
m33_129 -> m33_40  [key=2, style=dotted];
m33_129 -> m33_130  [key=0, style=solid];
m33_138 -> m33_139  [key=0, style=solid];
m33_138 -> m33_41  [key=2, style=dotted];
m33_130 -> m33_41  [key=2, style=dotted];
m33_130 -> m33_131  [key=0, style=solid];
m33_130 -> m33_70  [key=2, style=dotted];
m33_131 -> m33_41  [key=2, style=dotted];
m33_131 -> m33_132  [key=0, style=solid];
m33_131 -> m33_80  [key=2, style=dotted];
m33_131 -> m33_53  [key=2, style=dotted];
m33_140 -> m33_126  [key=0, style=bold, color=blue];
m33_140 -> m33_138  [key=0, style=bold, color=blue];
m33_44 -> m33_45  [key=0, style=solid];
m33_46 -> m33_22  [key=2, style=dotted];
m33_46 -> m33_47  [key=0, style=solid];
m33_46 -> m33_44  [key=0, style=bold, color=blue];
m33_51 -> m33_52  [key=0, style=solid];
m33_51 -> m33_26  [key=2, style=dotted];
m33_51 -> m33_53  [key=2, style=dotted];
m33_49 -> m33_42  [key=2, style=dotted];
m33_49 -> m33_50  [key=0, style=solid];
m33_45 -> m33_46  [key=0, style=solid];
m33_45 -> m33_39  [key=2, style=dotted];
m33_45 -> m33_47  [key=2, style=dotted];
m33_45 -> m33_38  [key=2, style=dotted];
m33_45 -> m33_48  [key=2, style=dotted];
m33_47 -> m33_40  [key=2, style=dotted];
m33_47 -> m33_48  [key=0, style=solid];
m33_50 -> m33_51  [key=0, style=solid];
m33_50 -> m33_43  [key=2, style=dotted];
m33_50 -> m33_38  [key=2, style=dotted];
m33_50 -> m33_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_48 -> m33_41  [key=2, style=dotted];
m33_48 -> m33_49  [key=0, style=solid];
m33_52 -> m33_44  [key=0, style=bold, color=blue];
m33_52 -> m33_49  [key=0, style=bold, color=blue];
m33_74 -> m33_75  [key=0, style=solid];
m33_74 -> m33_38  [key=2, style=dotted];
m33_74 -> m33_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_211 -> m33_212  [key=0, style=solid];
m33_211 -> m33_32  [key=1, style=dashed, color=green, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_86  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_99  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_110  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_114  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_128  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_139  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_143  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_154  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_158  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_162  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_166  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_171  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_175  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_181  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_185  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_197  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_201  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_211 -> m33_209  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m33_212 -> m33_213  [key=0, style=solid];
m33_212 -> m33_70  [key=2, style=dotted];
m33_213 -> m33_214  [key=0, style=solid];
m33_213 -> m33_141  [key=2, style=dotted];
m33_214 -> m33_215  [key=0, style=solid];
m33_214 -> m33_201  [key=2, style=dotted];
m33_215 -> m33_216  [key=0, style=solid];
m33_215 -> m33_106  [key=2, style=dotted];
m33_215 -> m33_217  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_216 -> m33_211  [key=0, style=bold, color=blue];
m33_81 -> m33_82  [key=0, style=solid];
m33_81 -> m33_73  [key=2, style=dotted];
m33_81 -> m33_85  [key=1, style=dashed, color=darkseagreen4, label=table2];
m33_81 -> m33_83  [key=1, style=dashed, color=darkseagreen4, label=table2];
m33_81 -> m33_84  [key=1, style=dashed, color=darkseagreen4, label=table2];
m33_82 -> m33_83  [key=0, style=solid];
m33_82 -> m33_70  [key=2, style=dotted];
m33_82 -> m33_87  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m33_82 -> m33_74  [key=2, style=dotted];
m33_83 -> m33_84  [key=0, style=solid];
m33_83 -> m33_38  [key=2, style=dotted];
m33_83 -> m33_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_83 -> m33_74  [key=2, style=dotted];
m33_84 -> m33_85  [key=0, style=solid];
m33_84 -> m33_53  [key=2, style=dotted];
m33_84 -> m33_74  [key=2, style=dotted];
m33_85 -> m33_81  [key=0, style=bold, color=blue];
m33_85 -> m33_86  [key=0, style=solid];
m33_85 -> m33_43  [key=2, style=dotted];
m33_326 -> m33_327  [key=0, style=solid];
m33_24 -> m33_25  [key=0, style=solid];
m33_24 -> m33_22  [key=0, style=bold, color=blue];
m33_28 -> m33_29  [key=0, style=solid];
m33_28 -> m33_26  [key=0, style=bold, color=blue];
m33_31 -> m33_32  [key=0, style=solid, color=green];
m33_31 -> m33_39  [key=2, style=dotted];
m33_35 -> m33_36  [key=0, style=solid];
m33_35 -> m33_42  [key=2, style=dotted];
m33_25 -> m33_26  [key=0, style=solid];
m33_25 -> m33_27  [key=2, style=dotted];
m33_26 -> m33_24  [key=0, style=bold, color=blue];
m33_26 -> m33_27  [key=0, style=solid];
m33_30 -> m33_28  [key=0, style=bold, color=blue];
m33_30 -> m33_31  [key=0, style=solid];
m33_32 -> m33_33  [key=0, style=solid, color=green];
m33_32 -> m33_34  [key=2, style=dotted];
m33_32 -> m33_22  [key=2, style=dotted, color=green];
m33_33 -> m33_31  [key=0, style=bold, color=blue];
m33_33 -> m33_34  [key=0, style=solid];
m33_33 -> m33_40  [key=2, style=dotted];
m33_36 -> m33_37  [key=0, style=solid];
m33_36 -> m33_38  [key=2, style=dotted];
m33_36 -> m33_39  [key=2, style=dotted];
m33_36 -> m33_43  [key=2, style=dotted];
m33_37 -> m33_35  [key=0, style=bold, color=blue];
m33_37 -> m33_38  [key=0, style=solid];
m33_37 -> m33_26  [key=2, style=dotted];
m33_42 -> m33_40  [key=0, style=bold, color=blue];
m33_54 -> m33_55  [key=0, style=solid];
m33_54 -> m33_39  [key=2, style=dotted];
m33_55 -> m33_56  [key=0, style=solid];
m33_55 -> m33_57  [key=2, style=dotted];
m33_55 -> m33_22  [key=2, style=dotted];
m33_56 -> m33_54  [key=0, style=bold, color=blue];
m33_56 -> m33_40  [key=2, style=dotted];
m33_56 -> m33_57  [key=0, style=solid];
m33_78 -> m33_79  [key=0, style=solid];
m33_78 -> m33_80  [key=2, style=dotted];
m33_78 -> m33_40  [key=2, style=dotted];
m33_77 -> m33_78  [key=0, style=solid];
m33_77 -> m33_22  [key=2, style=dotted];
m33_79 -> m33_77  [key=0, style=bold, color=blue];
m33_79 -> m33_41  [key=2, style=dotted];
m33_79 -> m33_80  [key=0, style=solid];
m33_87 -> m33_88  [key=0, style=solid];
m33_87 -> m33_80  [key=2, style=dotted];
m33_87 -> m33_75  [key=0, style=bold, color=blue];
m33_86 -> m33_87  [key=0, style=solid];
m33_86 -> m33_26  [key=2, style=dotted];
m33_88 -> m33_86  [key=0, style=bold, color=blue];
m33_88 -> m33_89  [key=0, style=solid];
m33_95 -> m33_96  [key=0, style=solid];
m33_95 -> m33_97  [key=2, style=dotted];
m33_95 -> m33_41  [key=2, style=dotted];
m33_94 -> m33_95  [key=0, style=solid];
m33_94 -> m33_40  [key=2, style=dotted];
m33_96 -> m33_94  [key=0, style=bold, color=blue];
m33_96 -> m33_42  [key=2, style=dotted];
m33_96 -> m33_97  [key=0, style=solid];
m33_112 -> m33_113  [key=0, style=solid];
m33_112 -> m33_38  [key=2, style=dotted];
m33_112 -> m33_39  [key=2, style=dotted];
m33_112 -> m33_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_113 -> m33_111  [key=0, style=bold, color=blue];
m33_113 -> m33_114  [key=0, style=solid];
m33_113 -> m33_39  [key=2, style=dotted];
m33_114 -> m33_115  [key=0, style=solid];
m33_114 -> m33_22  [key=2, style=dotted];
m33_115 -> m33_116  [key=0, style=solid];
m33_115 -> m33_40  [key=2, style=dotted];
m33_116 -> m33_114  [key=0, style=bold, color=blue];
m33_116 -> m33_41  [key=2, style=dotted];
m33_116 -> m33_117  [key=0, style=solid];
m33_122 -> m33_123  [key=0, style=solid];
m33_122 -> m33_74  [key=2, style=dotted];
m33_123 -> m33_124  [key=0, style=solid];
m33_123 -> m33_38  [key=2, style=dotted];
m33_123 -> m33_125  [key=2, style=dotted];
m33_123 -> m33_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_123 -> m33_43  [key=2, style=dotted];
m33_124 -> m33_122  [key=0, style=bold, color=blue];
m33_124 -> m33_125  [key=0, style=solid];
m33_124 -> m33_26  [key=2, style=dotted];
m33_148 -> m33_149  [key=0, style=solid];
m33_148 -> m33_150  [key=2, style=dotted];
m33_148 -> m33_42  [key=2, style=dotted];
m33_147 -> m33_148  [key=0, style=solid];
m33_147 -> m33_41  [key=2, style=dotted];
m33_149 -> m33_147  [key=0, style=bold, color=blue];
m33_149 -> m33_73  [key=2, style=dotted];
m33_149 -> m33_153  [key=1, style=dashed, color=darkseagreen4, label=table6];
m33_149 -> m33_150  [key=0, style=solid];
m33_149 -> m33_151  [key=1, style=dashed, color=darkseagreen4, label=table6];
m33_149 -> m33_152  [key=1, style=dashed, color=darkseagreen4, label=table6];
m33_157 -> m33_158  [key=0, style=solid];
m33_157 -> m33_141  [key=2, style=dotted];
m33_157 -> m33_39  [key=2, style=dotted];
m33_156 -> m33_157  [key=0, style=solid];
m33_158 -> m33_156  [key=0, style=bold, color=blue];
m33_158 -> m33_22  [key=2, style=dotted];
m33_158 -> m33_159  [key=0, style=solid];
m33_175 -> m33_176  [key=0, style=solid];
m33_175 -> m33_22  [key=2, style=dotted];
m33_176 -> m33_177  [key=0, style=solid];
m33_176 -> m33_38  [key=2, style=dotted];
m33_176 -> m33_125  [key=2, style=dotted];
m33_176 -> m33_178  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_176 -> m33_40  [key=2, style=dotted];
m33_177 -> m33_175  [key=0, style=bold, color=blue];
m33_177 -> m33_41  [key=2, style=dotted];
m33_177 -> m33_178  [key=0, style=solid];
m33_178 -> m33_179  [key=0, style=solid];
m33_178 -> m33_41  [key=2, style=dotted];
m33_179 -> m33_180  [key=0, style=solid];
m33_179 -> m33_181  [key=2, style=dotted];
m33_179 -> m33_42  [key=2, style=dotted];
m33_180 -> m33_178  [key=0, style=bold, color=blue];
m33_180 -> m33_181  [key=0, style=solid];
m33_180 -> m33_43  [key=2, style=dotted];
m33_187 -> m33_188  [key=0, style=solid];
m33_187 -> m33_41  [key=2, style=dotted];
m33_188 -> m33_189  [key=0, style=solid];
m33_188 -> m33_38  [key=2, style=dotted];
m33_188 -> m33_125  [key=2, style=dotted];
m33_188 -> m33_190  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_188 -> m33_41  [key=2, style=dotted];
m33_189 -> m33_187  [key=0, style=bold, color=blue];
m33_189 -> m33_41  [key=2, style=dotted];
m33_189 -> m33_190  [key=0, style=solid];
m33_190 -> m33_191  [key=0, style=solid];
m33_190 -> m33_42  [key=2, style=dotted];
m33_191 -> m33_192  [key=0, style=solid];
m33_191 -> m33_73  [key=2, style=dotted];
m33_191 -> m33_196  [key=1, style=dashed, color=darkseagreen4, label=table7];
m33_191 -> m33_193  [key=1, style=dashed, color=darkseagreen4, label=table7];
m33_191 -> m33_194  [key=1, style=dashed, color=darkseagreen4, label=table7];
m33_191 -> m33_195  [key=1, style=dashed, color=darkseagreen4, label=table7];
m33_192 -> m33_190  [key=0, style=bold, color=blue];
m33_192 -> m33_74  [key=2, style=dotted];
m33_192 -> m33_193  [key=0, style=solid];
m33_217 -> m33_218  [key=0, style=solid];
m33_218 -> m33_219  [key=0, style=solid];
m33_218 -> m33_38  [key=2, style=dotted];
m33_218 -> m33_125  [key=2, style=dotted];
m33_219 -> m33_217  [key=0, style=bold, color=blue];
m33_229 -> m33_230  [key=0, style=solid];
m33_232 -> m33_233  [key=0, style=solid];
m33_230 -> m33_231  [key=0, style=solid];
m33_230 -> m33_38  [key=2, style=dotted];
m33_230 -> m33_125  [key=2, style=dotted];
m33_231 -> m33_229  [key=0, style=bold, color=blue];
m33_233 -> m33_234  [key=0, style=solid];
m33_233 -> m33_38  [key=2, style=dotted];
m33_233 -> m33_125  [key=2, style=dotted];
m33_234 -> m33_232  [key=0, style=bold, color=blue];
m33_244 -> m33_245  [key=0, style=solid];
m33_247 -> m33_248  [key=0, style=solid];
m33_245 -> m33_246  [key=0, style=solid];
m33_245 -> m33_43  [key=2, style=dotted];
m33_246 -> m33_244  [key=0, style=bold, color=blue];
m33_248 -> m33_249  [key=0, style=solid];
m33_248 -> m33_38  [key=2, style=dotted];
m33_248 -> m33_125  [key=2, style=dotted];
m33_248 -> m33_250  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_249 -> m33_247  [key=0, style=bold, color=blue];
m33_250 -> m33_251  [key=0, style=solid];
m33_251 -> m33_252  [key=0, style=solid];
m33_252 -> m33_250  [key=0, style=bold, color=blue];
m33_261 -> m33_262  [key=0, style=solid];
m33_264 -> m33_265  [key=0, style=solid];
m33_267 -> m33_268  [key=0, style=solid];
m33_262 -> m33_263  [key=0, style=solid];
m33_262 -> m33_43  [key=2, style=dotted];
m33_263 -> m33_261  [key=0, style=bold, color=blue];
m33_265 -> m33_266  [key=0, style=solid];
m33_266 -> m33_264  [key=0, style=bold, color=blue];
m33_268 -> m33_269  [key=0, style=solid];
m33_268 -> m33_38  [key=2, style=dotted];
m33_268 -> m33_125  [key=2, style=dotted];
m33_268 -> m33_270  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_269 -> m33_267  [key=0, style=bold, color=blue];
m33_270 -> m33_271  [key=0, style=solid];
m33_271 -> m33_272  [key=0, style=solid];
m33_272 -> m33_270  [key=0, style=bold, color=blue];
m33_280 -> m33_281  [key=0, style=solid];
m33_286 -> m33_287  [key=0, style=solid];
m33_281 -> m33_282  [key=0, style=solid];
m33_281 -> m33_38  [key=2, style=dotted];
m33_281 -> m33_125  [key=2, style=dotted];
m33_281 -> m33_283  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_282 -> m33_280  [key=0, style=bold, color=blue];
m33_283 -> m33_284  [key=0, style=solid];
m33_284 -> m33_285  [key=0, style=solid];
m33_285 -> m33_283  [key=0, style=bold, color=blue];
m33_287 -> m33_288  [key=0, style=solid];
m33_287 -> m33_289  [key=2, style=dotted];
m33_288 -> m33_286  [key=0, style=bold, color=blue];
m33_303 -> m33_304  [key=0, style=solid];
m33_306 -> m33_307  [key=0, style=solid];
m33_306 -> m33_38  [key=2, style=dotted];
m33_306 -> m33_125  [key=2, style=dotted];
m33_306 -> m33_308  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_309 -> m33_310  [key=0, style=solid];
m33_298 -> m33_299  [key=0, style=solid];
m33_302 -> m33_303  [key=0, style=solid];
m33_305 -> m33_306  [key=0, style=solid];
m33_299 -> m33_300  [key=0, style=solid];
m33_299 -> m33_38  [key=2, style=dotted];
m33_299 -> m33_301  [key=2, style=dotted];
m33_300 -> m33_298  [key=0, style=bold, color=blue];
m33_304 -> m33_302  [key=0, style=bold, color=blue];
m33_307 -> m33_305  [key=0, style=bold, color=blue];
m33_308 -> m33_309  [key=0, style=solid];
m33_310 -> m33_308  [key=0, style=bold, color=blue];
m33_324 -> m33_325  [key=0, style=solid];
m33_324 -> m33_38  [key=2, style=dotted];
m33_324 -> m33_125  [key=2, style=dotted];
m33_324 -> m33_326  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_327 -> m33_328  [key=0, style=solid];
m33_320 -> m33_321  [key=0, style=solid];
m33_323 -> m33_324  [key=0, style=solid];
m33_321 -> m33_322  [key=0, style=solid];
m33_321 -> m33_38  [key=2, style=dotted];
m33_321 -> m33_125  [key=2, style=dotted];
m33_322 -> m33_320  [key=0, style=bold, color=blue];
m33_325 -> m33_323  [key=0, style=bold, color=blue];
m33_328 -> m33_326  [key=0, style=bold, color=blue];
m33_143 -> m33_22  [key=2, style=dotted];
m33_143 -> m33_144  [key=0, style=solid];
m33_143 -> m33_70  [key=2, style=dotted];
m33_143 -> m33_148  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m33_154 -> m33_155  [key=0, style=solid];
m33_154 -> m33_26  [key=2, style=dotted];
m33_154 -> m33_53  [key=2, style=dotted];
m33_142 -> m33_143  [key=0, style=solid];
m33_142 -> m33_39  [key=2, style=dotted];
m33_144 -> m33_40  [key=2, style=dotted];
m33_144 -> m33_145  [key=0, style=solid];
m33_144 -> m33_38  [key=2, style=dotted];
m33_144 -> m33_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_153 -> m33_154  [key=0, style=solid];
m33_153 -> m33_43  [key=2, style=dotted];
m33_153 -> m33_38  [key=2, style=dotted];
m33_153 -> m33_156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_145 -> m33_41  [key=2, style=dotted];
m33_145 -> m33_146  [key=0, style=solid];
m33_145 -> m33_53  [key=2, style=dotted];
m33_146 -> m33_41  [key=2, style=dotted];
m33_146 -> m33_147  [key=0, style=solid];
m33_146 -> m33_142  [key=0, style=bold, color=blue];
m33_152 -> m33_153  [key=0, style=solid];
m33_152 -> m33_74  [key=2, style=dotted];
m33_152 -> m33_70  [key=2, style=dotted];
m33_152 -> m33_157  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m33_150 -> m33_74  [key=2, style=dotted];
m33_150 -> m33_151  [key=0, style=solid];
m33_151 -> m33_74  [key=2, style=dotted];
m33_151 -> m33_152  [key=0, style=solid];
m33_155 -> m33_141  [key=0, style=bold, color=blue];
m33_155 -> m33_151  [key=0, style=bold, color=blue];
m33_181 -> m33_182  [key=0, style=solid];
m33_181 -> m33_26  [key=2, style=dotted];
m33_27 -> m33_28  [key=0, style=solid];
m33_27 -> m33_29  [key=2, style=dotted];
m33_125 -> m33_112  [key=0, style=bold, color=blue];
m33_53 -> m33_54  [key=0, style=solid];
m33_197 -> m33_198  [key=0, style=solid];
m33_197 -> m33_26  [key=2, style=dotted];
m33_197 -> m33_201  [key=2, style=dotted];
m33_196 -> m33_197  [key=0, style=solid];
m33_196 -> m33_43  [key=2, style=dotted];
m33_196 -> m33_141  [key=2, style=dotted];
m33_195 -> m33_196  [key=0, style=solid];
m33_195 -> m33_74  [key=2, style=dotted];
m33_195 -> m33_70  [key=2, style=dotted];
m33_193 -> m33_74  [key=2, style=dotted];
m33_193 -> m33_194  [key=0, style=solid];
m33_194 -> m33_74  [key=2, style=dotted];
m33_194 -> m33_195  [key=0, style=solid];
m33_194 -> m33_18  [key=2, style=dotted];
m33_194 -> m33_19  [key=2, style=dotted];
m33_194 -> m33_202  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_198 -> m33_183  [key=0, style=bold, color=blue];
m33_198 -> m33_199  [key=0, style=solid];
m33_198 -> m33_106  [key=2, style=dotted];
m33_198 -> m33_205  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_89 -> m33_90  [key=0, style=solid];
m33_89 -> m33_39  [key=2, style=dotted];
m33_90 -> m33_91  [key=0, style=solid];
m33_90 -> m33_70  [key=2, style=dotted];
m33_90 -> m33_95  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m33_90 -> m33_22  [key=2, style=dotted];
m33_91 -> m33_92  [key=0, style=solid];
m33_91 -> m33_38  [key=2, style=dotted];
m33_91 -> m33_94  [key=1, style=dashed, color=darkseagreen4, label=table3];
m33_91 -> m33_73  [key=2, style=dotted];
m33_91 -> m33_93  [key=1, style=dashed, color=darkseagreen4, label=table3];
m33_92 -> m33_93  [key=0, style=solid];
m33_92 -> m33_53  [key=2, style=dotted];
m33_92 -> m33_74  [key=2, style=dotted];
m33_93 -> m33_89  [key=0, style=bold, color=blue];
m33_93 -> m33_94  [key=0, style=solid];
m33_93 -> m33_74  [key=2, style=dotted];
m33_159 -> m33_160  [key=0, style=solid];
m33_159 -> m33_40  [key=2, style=dotted];
m33_160 -> m33_161  [key=0, style=solid];
m33_160 -> m33_70  [key=2, style=dotted];
m33_160 -> m33_42  [key=2, style=dotted];
m33_161 -> m33_162  [key=0, style=solid];
m33_161 -> m33_141  [key=2, style=dotted];
m33_161 -> m33_43  [key=2, style=dotted];
m33_162 -> m33_163  [key=0, style=solid];
m33_162 -> m33_106  [key=2, style=dotted];
m33_162 -> m33_164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_162 -> m33_26  [key=2, style=dotted];
m33_163 -> m33_159  [key=0, style=bold, color=blue];
m33_163 -> m33_156  [key=0, style=bold, color=blue];
m33_329 -> m33_330  [key=0, style=solid];
m33_329 -> m33_57  [key=2, style=dotted];
m33_330 -> m33_70  [key=0, style=bold, color=blue];
m33_311 -> m33_312  [key=0, style=solid];
m33_312 -> m33_313  [key=0, style=solid];
m33_312 -> m33_319  [key=2, style=dotted];
m33_312 -> m33_316  [key=1, style=dashed, color=darkseagreen4, label=exception];
m33_312 -> m33_324  [key=1, style=dashed, color=darkseagreen4, label=exception];
m33_312 -> m33_327  [key=1, style=dashed, color=darkseagreen4, label=exception];
m33_313 -> m33_314  [key=0, style=solid];
m33_313 -> m33_18  [key=2, style=dotted];
m33_313 -> m33_228  [key=2, style=dotted];
m33_313 -> m33_320  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_316 -> m33_317  [key=0, style=solid];
m33_316 -> m33_106  [key=2, style=dotted];
m33_316 -> m33_323  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_314 -> m33_315  [key=0, style=solid];
m33_314 -> m33_70  [key=2, style=dotted];
m33_315 -> m33_316  [key=0, style=solid];
m33_315 -> m33_141  [key=2, style=dotted];
m33_315 -> m33_317  [key=1, style=dashed, color=darkseagreen4, label=result];
m33_317 -> m33_318  [key=0, style=solid];
m33_317 -> m33_201  [key=2, style=dotted];
m33_318 -> m33_311  [key=0, style=bold, color=blue];
m33_99 -> m33_100  [key=0, style=solid];
m33_99 -> m33_26  [key=2, style=dotted];
m33_99 -> m33_15  [key=2, style=dotted];
m33_99 -> m33_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_99 -> m33_102  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_99 -> m33_103  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_99 -> m33_112  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_98 -> m33_99  [key=0, style=solid];
m33_98 -> m33_41  [key=2, style=dotted];
m33_100 -> m33_88  [key=0, style=bold, color=blue];
m33_100 -> m33_101  [key=0, style=solid];
m33_100 -> m33_105  [key=2, style=dotted];
m33_174 -> m33_175  [key=0, style=solid];
m33_174 -> m33_39  [key=2, style=dotted];
m33_34 -> m33_35  [key=0, style=solid];
m33_34 -> m33_41  [key=2, style=dotted];
m33_38 -> m33_30  [key=0, style=bold, color=blue];
m33_273 -> m33_274  [key=0, style=solid];
m33_274 -> m33_275  [key=0, style=solid];
m33_274 -> m33_70  [key=2, style=dotted];
m33_275 -> m33_276  [key=0, style=solid];
m33_275 -> m33_141  [key=2, style=dotted];
m33_275 -> m33_278  [key=1, style=dashed, color=darkseagreen4, label=result];
m33_276 -> m33_277  [key=0, style=solid];
m33_276 -> m33_106  [key=2, style=dotted];
m33_276 -> m33_280  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_278 -> m33_279  [key=0, style=solid];
m33_278 -> m33_174  [key=2, style=dotted];
m33_277 -> m33_278  [key=0, style=solid];
m33_277 -> m33_106  [key=2, style=dotted];
m33_277 -> m33_286  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_279 -> m33_273  [key=0, style=bold, color=blue];
m33_75 -> m33_76  [key=0, style=solid];
m33_75 -> m33_53  [key=2, style=dotted];
m33_76 -> m33_77  [key=0, style=solid];
m33_76 -> m33_39  [key=2, style=dotted];
m33_76 -> m33_72  [key=0, style=bold, color=blue];
m33_73 -> m33_74  [key=0, style=solid];
m33_73 -> m33_70  [key=2, style=dotted];
m33_73 -> m33_78  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m33_290 -> m33_291  [key=0, style=solid];
m33_291 -> m33_292  [key=0, style=solid];
m33_291 -> m33_17  [key=2, style=dotted];
m33_291 -> m33_303  [key=1, style=dashed, color=darkseagreen4, label=anotherState];
m33_291 -> m33_295  [key=1, style=dashed, color=darkseagreen4, label=anotherState];
m33_291 -> m33_306  [key=1, style=dashed, color=darkseagreen4, label=anotherState];
m33_291 -> m33_309  [key=1, style=dashed, color=darkseagreen4, label=anotherState];
m33_292 -> m33_293  [key=0, style=solid];
m33_292 -> m33_18  [key=2, style=dotted];
m33_292 -> m33_297  [key=2, style=dotted];
m33_292 -> m33_298  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_292 -> m33_302  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_295 -> m33_296  [key=0, style=solid];
m33_295 -> m33_106  [key=2, style=dotted];
m33_295 -> m33_305  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_293 -> m33_294  [key=0, style=solid];
m33_293 -> m33_70  [key=2, style=dotted];
m33_294 -> m33_295  [key=0, style=solid];
m33_294 -> m33_141  [key=2, style=dotted];
m33_296 -> m33_290  [key=0, style=bold, color=blue];
m33_235 -> m33_236  [key=0, style=solid];
m33_236 -> m33_237  [key=0, style=solid];
m33_236 -> m33_18  [key=2, style=dotted];
m33_236 -> m33_22  [key=2, style=dotted];
m33_236 -> m33_242  [key=2, style=dotted];
m33_236 -> m33_243  [key=2, style=dotted];
m33_236 -> m33_19  [key=2, style=dotted];
m33_236 -> m33_244  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_237 -> m33_238  [key=0, style=solid];
m33_237 -> m33_70  [key=2, style=dotted];
m33_238 -> m33_239  [key=0, style=solid];
m33_238 -> m33_141  [key=2, style=dotted];
m33_238 -> m33_240  [key=1, style=dashed, color=darkseagreen4, label=result];
m33_239 -> m33_240  [key=0, style=solid];
m33_239 -> m33_106  [key=2, style=dotted];
m33_239 -> m33_247  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m33_240 -> m33_241  [key=0, style=solid];
m33_240 -> m33_201  [key=2, style=dotted];
m33_241 -> m33_235  [key=0, style=bold, color=blue];
m33_331 -> m33_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_66  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_68  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_74  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_83  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_90  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_91  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_100  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_101  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_102  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_103  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_118  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_119  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_120  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_123  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_127  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_130  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_131  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_134  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_135  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_139  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_143  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_152  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_153  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_157  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_160  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_161  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_162  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_169  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_170  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_171  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_176  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_183  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_184  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_185  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_188  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_191  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_194  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_195  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_196  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_198  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_199  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_212  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_213  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_215  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_221  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_222  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_223  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_224  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_233  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_236  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_237  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_238  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_239  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_248  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_254  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_255  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_256  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_257  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_258  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_268  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_271  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_274  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_275  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_276  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_281  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_284  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_277  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_292  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_299  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_293  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_294  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_295  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_306  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_313  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_314  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_315  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_316  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_324  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_331 -> m33_329  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m33_332 -> m33_78  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m33_333 -> m33_87  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m33_334 -> m33_95  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m33_335 -> m33_112  [key=1, style=dashed, color=darkseagreen4, label=job];
m33_336 -> m33_139  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m33_337 -> m33_148  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m33_338 -> m33_157  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m33_339 -> m33_303  [key=1, style=dashed, color=darkseagreen4, label=anotherState];
m33_339 -> m33_306  [key=1, style=dashed, color=darkseagreen4, label=anotherState];
m33_339 -> m33_309  [key=1, style=dashed, color=darkseagreen4, label=anotherState];
m33_340 -> m33_324  [key=1, style=dashed, color=darkseagreen4, label=exception];
m33_340 -> m33_327  [key=1, style=dashed, color=darkseagreen4, label=exception];
m34_21 -> m34_22  [key=0, style=solid];
m34_21 -> m34_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_21 -> m34_26  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_22 -> m34_23  [key=0, style=solid];
m34_22 -> m34_24  [key=0, style=solid];
m34_22 -> m34_16  [key=2, style=dotted];
m34_24 -> m34_27  [key=0, style=solid];
m34_24 -> m34_19  [key=2, style=dotted];
m34_24 -> m34_28  [key=2, style=dotted];
m34_26 -> m34_27  [key=0, style=solid];
m34_26 -> m34_29  [key=2, style=dotted];
m34_26 -> m34_30  [key=2, style=dotted];
m34_23 -> m34_27  [key=0, style=solid];
m34_23 -> m34_17  [key=2, style=dotted];
m34_25 -> m34_26  [key=0, style=solid];
m34_27 -> m34_21  [key=0, style=bold, color=blue];
m34_0 -> m34_1  [key=0, style=solid];
m34_1 -> m34_0  [key=0, style=bold, color=blue];
m34_8 -> m34_9  [key=0, style=solid];
m34_8 -> m34_11  [key=1, style=dashed, color=darkseagreen4, label=object];
m34_8 -> m34_12  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_8 -> m34_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_8 -> m34_14  [key=1, style=dashed, color=darkseagreen4, label=string];
m34_9 -> m34_10  [key=0, style=solid];
m34_9 -> m34_11  [key=0, style=solid];
m34_9 -> m34_16  [key=2, style=dotted];
m34_11 -> m34_12  [key=0, style=solid];
m34_11 -> m34_18  [key=2, style=dotted];
m34_11 -> m34_13  [key=1, style=dashed, color=darkseagreen4, label=serializedValue];
m34_11 -> m34_14  [key=1, style=dashed, color=darkseagreen4, label=serializedValue];
m34_12 -> m34_13  [key=0, style=solid];
m34_12 -> m34_14  [key=0, style=solid];
m34_12 -> m34_19  [key=2, style=dotted];
m34_13 -> m34_15  [key=0, style=solid];
m34_13 -> m34_20  [key=2, style=dotted];
m34_14 -> m34_15  [key=0, style=solid];
m34_10 -> m34_15  [key=0, style=solid];
m34_10 -> m34_17  [key=2, style=dotted];
m34_15 -> m34_8  [key=0, style=bold, color=blue];
m34_5 -> m34_6  [key=0, style=solid, color=red];
m34_2 -> m34_3  [key=0, style=solid, color=red];
m34_3 -> m34_4  [key=0, style=solid, color=red];
m34_3 -> m34_3  [key=1, style=dashed, color=red, label="System.Collections.Generic.KeyValuePair<string, string>"];
m34_4 -> m34_2  [key=0, style=bold, color=blue];
m34_6 -> m34_7  [key=0, style=solid, color=red];
m34_6 -> m34_6  [key=1, style=dashed, color=red, label="System.Collections.Generic.KeyValuePair<string, string>"];
m34_7 -> m34_5  [key=0, style=bold, color=blue];
m34_31 -> m34_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreatingContext"];
m34_31 -> m34_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreatingContext"];
m34_31 -> m34_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreatingContext"];
m34_31 -> m34_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreatingContext"];
m35_2 -> m35_3  [key=0, style=solid];
m35_2 -> m35_2  [key=3, color=darkorchid, style=bold, label="Field variable int PageItemsCount"];
m35_3 -> m35_2  [key=0, style=bold, color=blue];
m35_0 -> m35_1  [key=0, style=solid];
m35_1 -> m35_0  [key=0, style=bold, color=blue];
m36_0 -> m36_1  [key=0, style=solid, color=green];
m36_1 -> m36_2  [key=0, style=solid, color=green];
m36_1 -> m36_53  [key=2, style=dotted, color=green];
m36_2 -> m36_0  [key=0, style=bold, color=blue];
m36_2 -> m36_3  [key=0, style=solid];
m36_2 -> m36_54  [key=2, style=dotted];
m36_4 -> m36_5  [key=0, style=solid, color=green];
m36_4 -> m36_55  [key=2, style=dotted, color=green];
m36_4 -> m36_7  [key=1, style=dashed, color=green, label=from];
m36_3 -> m36_4  [key=0, style=solid, color=green];
m36_3 -> m36_1  [key=1, style=dashed, color=red, label="HangFire.Storage.Monitoring.FailedJobDto"];
m36_5 -> m36_6  [key=0, style=solid, color=green];
m36_5 -> m36_55  [key=2, style=dotted, color=green];
m36_5 -> m36_7  [key=1, style=dashed, color=green, label=perPage];
m36_7 -> m36_8  [key=0, style=solid, color=green];
m36_7 -> m36_57  [key=2, style=dotted, color=green];
m36_7 -> m36_58  [key=2, style=dotted, color=green];
m36_7 -> m36_59  [key=2, style=dotted, color=green];
m36_7 -> m36_10  [key=1, style=dashed, color=green, label=pager];
m36_7 -> m36_17  [key=1, style=dashed, color=green, label=pager];
m36_7 -> m36_51  [key=1, style=dashed, color=green, label=pager];
m36_6 -> m36_7  [key=0, style=solid, color=green];
m36_6 -> m36_56  [key=2, style=dotted, color=green];
m36_6 -> m36_8  [key=1, style=dashed, color=green, label=monitor];
m36_8 -> m36_9  [key=0, style=solid, color=green];
m36_8 -> m36_60  [key=2, style=dotted];
m36_8 -> m36_19  [key=1, style=dashed, color=darkseagreen4, label=processingJobs];
m36_10 -> m36_11  [key=0, style=solid, color=green];
m36_10 -> m36_12  [key=0, style=solid, color=green];
m36_17 -> m36_18  [key=0, style=solid, color=green];
m36_17 -> m36_62  [key=2, style=dotted, color=green];
m36_17 -> m36_63  [key=2, style=dotted, color=green];
m36_17 -> m36_64  [key=2, style=dotted, color=green];
m36_51 -> m36_52  [key=0, style=solid, color=green];
m36_51 -> m36_69  [key=2, style=dotted, color=green];
m36_51 -> m36_63  [key=2, style=dotted, color=green];
m36_51 -> m36_64  [key=2, style=dotted, color=green];
m36_16 -> m36_17  [key=0, style=solid, color=green];
m36_16 -> m36_53  [key=2, style=dotted, color=green];
m36_18 -> m36_19  [key=0, style=solid, color=green];
m36_18 -> m36_53  [key=2, style=dotted, color=green];
m36_50 -> m36_51  [key=0, style=solid, color=green];
m36_50 -> m36_53  [key=2, style=dotted, color=green];
m36_9 -> m36_10  [key=0, style=solid, color=green];
m36_9 -> m36_53  [key=2, style=dotted, color=green];
m36_11 -> m36_52  [key=0, style=solid, color=green];
m36_11 -> m36_53  [key=2, style=dotted, color=green];
m36_12 -> m36_13  [key=0, style=solid, color=green];
m36_12 -> m36_53  [key=2, style=dotted, color=green];
m36_13 -> m36_14  [key=0, style=solid, color=green];
m36_13 -> m36_59  [key=2, style=dotted, color=green];
m36_13 -> m36_61  [key=2, style=dotted, color=green];
m36_14 -> m36_15  [key=0, style=solid, color=green];
m36_14 -> m36_53  [key=2, style=dotted, color=green];
m36_15 -> m36_16  [key=0, style=solid, color=green];
m36_15 -> m36_59  [key=2, style=dotted, color=green];
m36_15 -> m36_61  [key=2, style=dotted, color=green];
m36_19 -> m36_20  [key=0, style=solid, color=green];
m36_19 -> m36_50  [key=0, style=solid, color=green];
m36_19 -> m36_21  [key=1, style=dashed, color=green, label=job];
m36_20 -> m36_21  [key=0, style=solid, color=green];
m36_20 -> m36_53  [key=2, style=dotted, color=green];
m36_21 -> m36_21  [key=1, style=dashed, color=green, label=job];
m36_21 -> m36_22  [key=0, style=solid, color=green];
m36_21 -> m36_61  [key=2, style=dotted, color=green];
m36_21 -> m36_23  [key=1, style=dashed, color=green, label=job];
m36_22 -> m36_23  [key=0, style=solid, color=green];
m36_22 -> m36_53  [key=2, style=dotted, color=green];
m36_23 -> m36_23  [key=1, style=dashed, color=green, label=job];
m36_23 -> m36_24  [key=0, style=solid, color=green];
m36_23 -> m36_61  [key=2, style=dotted, color=green];
m36_23 -> m36_25  [key=1, style=dashed, color=green, label=job];
m36_24 -> m36_25  [key=0, style=solid, color=green];
m36_24 -> m36_53  [key=2, style=dotted, color=green];
m36_25 -> m36_26  [key=0, style=solid, color=green];
m36_25 -> m36_29  [key=0, style=solid, color=green];
m36_25 -> m36_27  [key=1, style=dashed, color=green, label=job];
m36_25 -> m36_30  [key=1, style=dashed, color=green, label=job];
m36_25 -> m36_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m36_26 -> m36_27  [key=0, style=solid, color=green];
m36_26 -> m36_53  [key=2, style=dotted, color=green];
m36_27 -> m36_27  [key=1, style=dashed, color=green, label=job];
m36_27 -> m36_28  [key=0, style=solid, color=green];
m36_27 -> m36_61  [key=2, style=dotted, color=green];
m36_27 -> m36_30  [key=1, style=dashed, color=green, label=job];
m36_29 -> m36_30  [key=0, style=solid, color=green];
m36_29 -> m36_53  [key=2, style=dotted, color=green];
m36_28 -> m36_29  [key=0, style=solid, color=green];
m36_28 -> m36_53  [key=2, style=dotted, color=green];
m36_30 -> m36_30  [key=1, style=dashed, color=green, label=job];
m36_30 -> m36_31  [key=0, style=solid, color=green];
m36_30 -> m36_59  [key=2, style=dotted, color=green];
m36_30 -> m36_61  [key=2, style=dotted, color=green];
m36_30 -> m36_32  [key=1, style=dashed, color=green, label=job];
m36_31 -> m36_32  [key=0, style=solid, color=green];
m36_31 -> m36_53  [key=2, style=dotted, color=green];
m36_32 -> m36_32  [key=1, style=dashed, color=green, label=job];
m36_32 -> m36_33  [key=0, style=solid, color=green];
m36_32 -> m36_65  [key=2, style=dotted, color=green];
m36_32 -> m36_64  [key=2, style=dotted, color=green];
m36_32 -> m36_34  [key=1, style=dashed, color=green, label=job];
m36_33 -> m36_34  [key=0, style=solid, color=green];
m36_33 -> m36_53  [key=2, style=dotted, color=green];
m36_34 -> m36_35  [key=0, style=solid, color=green];
m36_34 -> m36_36  [key=0, style=solid, color=green];
m36_34 -> m36_37  [key=1, style=dashed, color=green, label=job];
m36_34 -> m36_34  [key=1, style=dashed, color=darkseagreen4, label=job];
m36_35 -> m36_36  [key=0, style=solid, color=green];
m36_35 -> m36_53  [key=2, style=dotted, color=green];
m36_36 -> m36_37  [key=0, style=solid, color=green];
m36_36 -> m36_53  [key=2, style=dotted, color=green];
m36_37 -> m36_37  [key=1, style=dashed, color=green, label=job];
m36_37 -> m36_38  [key=0, style=solid, color=green];
m36_37 -> m36_66  [key=2, style=dotted, color=green];
m36_37 -> m36_61  [key=2, style=dotted, color=green];
m36_37 -> m36_39  [key=1, style=dashed, color=green, label=job];
m36_38 -> m36_39  [key=0, style=solid, color=green];
m36_38 -> m36_53  [key=2, style=dotted, color=green];
m36_39 -> m36_39  [key=1, style=dashed, color=green, label=job];
m36_39 -> m36_40  [key=0, style=solid, color=green];
m36_39 -> m36_59  [key=2, style=dotted, color=green];
m36_39 -> m36_61  [key=2, style=dotted, color=green];
m36_39 -> m36_41  [key=1, style=dashed, color=green, label=job];
m36_40 -> m36_41  [key=0, style=solid, color=green];
m36_40 -> m36_53  [key=2, style=dotted, color=green];
m36_41 -> m36_41  [key=1, style=dashed, color=green, label=job];
m36_41 -> m36_42  [key=0, style=solid, color=green];
m36_41 -> m36_67  [key=2, style=dotted, color=green];
m36_41 -> m36_64  [key=2, style=dotted, color=green];
m36_41 -> m36_43  [key=1, style=dashed, color=green, label=job];
m36_42 -> m36_43  [key=0, style=solid, color=green];
m36_42 -> m36_53  [key=2, style=dotted, color=green];
m36_43 -> m36_44  [key=0, style=solid, color=green];
m36_43 -> m36_49  [key=0, style=solid, color=green];
m36_43 -> m36_45  [key=1, style=dashed, color=green, label=job];
m36_43 -> m36_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m36_44 -> m36_45  [key=0, style=solid, color=green];
m36_44 -> m36_53  [key=2, style=dotted, color=green];
m36_45 -> m36_45  [key=1, style=dashed, color=green, label=job];
m36_45 -> m36_46  [key=0, style=solid, color=green];
m36_45 -> m36_68  [key=2, style=dotted, color=green];
m36_45 -> m36_61  [key=2, style=dotted, color=green];
m36_45 -> m36_47  [key=1, style=dashed, color=green, label=job];
m36_49 -> m36_19  [key=0, style=solid, color=green];
m36_49 -> m36_53  [key=2, style=dotted, color=green];
m36_48 -> m36_49  [key=0, style=solid, color=green];
m36_48 -> m36_53  [key=2, style=dotted, color=green];
m36_46 -> m36_47  [key=0, style=solid, color=green];
m36_46 -> m36_53  [key=2, style=dotted, color=green];
m36_47 -> m36_47  [key=1, style=dashed, color=green, label=job];
m36_47 -> m36_48  [key=0, style=solid, color=green];
m36_47 -> m36_61  [key=2, style=dotted, color=green];
m36_52 -> m36_0  [key=0, style=bold, color=blue];
m36_70 -> m36_1  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_4  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_5  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_7  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_17  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_51  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_9  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_11  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_12  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_13  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_14  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_15  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_16  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_18  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_20  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_50  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_21  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_22  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_23  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_24  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_26  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_29  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_27  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_30  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_28  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_31  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_32  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_33  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_35  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_36  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_37  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_38  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_39  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_40  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_41  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_42  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_44  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_49  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_45  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_46  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_47  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_48  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ProcessingJobsPage"];
m36_70 -> m36_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ProcessingJobsPage"];
m37_124 -> m37_125  [key=0, style=solid];
m37_125 -> m37_126  [key=0, style=solid];
m37_125 -> m37_130  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m37_126 -> m37_127  [key=0, style=solid];
m37_126 -> m37_67  [key=2, style=dotted];
m37_126 -> m37_128  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_127 -> m37_124  [key=0, style=bold, color=blue];
m37_19 -> m37_20  [key=0, style=solid];
m37_20 -> m37_21  [key=0, style=solid];
m37_20 -> m37_22  [key=2, style=dotted];
m37_20 -> m37_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_21 -> m37_19  [key=0, style=bold, color=blue];
m37_29 -> m37_30  [key=0, style=solid];
m37_30 -> m37_31  [key=0, style=solid];
m37_30 -> m37_22  [key=2, style=dotted];
m37_30 -> m37_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_31 -> m37_29  [key=0, style=bold, color=blue];
m37_49 -> m37_50  [key=0, style=solid];
m37_50 -> m37_51  [key=0, style=solid];
m37_50 -> m37_22  [key=2, style=dotted];
m37_50 -> m37_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_51 -> m37_49  [key=0, style=bold, color=blue];
m37_144 -> m37_145  [key=0, style=solid];
m37_145 -> m37_146  [key=0, style=solid];
m37_145 -> m37_149  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m37_146 -> m37_147  [key=0, style=solid];
m37_146 -> m37_67  [key=2, style=dotted];
m37_146 -> m37_148  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_0 -> m37_1  [key=0, style=solid];
m37_1 -> m37_2  [key=0, style=solid];
m37_1 -> m37_4  [key=2, style=dotted];
m37_1 -> m37_6  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_2 -> m37_3  [key=0, style=solid];
m37_2 -> m37_5  [key=2, style=dotted];
m37_3 -> m37_0  [key=0, style=bold, color=blue];
m37_64 -> m37_65  [key=0, style=solid];
m37_65 -> m37_66  [key=0, style=solid];
m37_65 -> m37_67  [key=2, style=dotted];
m37_65 -> m37_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_66 -> m37_64  [key=0, style=bold, color=blue];
m37_116 -> m37_117  [key=0, style=solid];
m37_117 -> m37_118  [key=0, style=solid];
m37_117 -> m37_22  [key=2, style=dotted];
m37_117 -> m37_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_118 -> m37_116  [key=0, style=bold, color=blue];
m37_11 -> m37_12  [key=0, style=solid];
m37_12 -> m37_13  [key=0, style=solid];
m37_12 -> m37_4  [key=2, style=dotted];
m37_12 -> m37_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_13 -> m37_14  [key=0, style=solid];
m37_13 -> m37_5  [key=2, style=dotted];
m37_14 -> m37_11  [key=0, style=bold, color=blue];
m37_6 -> m37_7  [key=0, style=solid];
m37_7 -> m37_8  [key=0, style=solid];
m37_7 -> m37_9  [key=2, style=dotted];
m37_7 -> m37_10  [key=2, style=dotted];
m37_8 -> m37_6  [key=0, style=bold, color=blue];
m37_15 -> m37_16  [key=0, style=solid];
m37_16 -> m37_17  [key=0, style=solid];
m37_16 -> m37_9  [key=2, style=dotted];
m37_16 -> m37_18  [key=2, style=dotted];
m37_17 -> m37_15  [key=0, style=bold, color=blue];
m37_23 -> m37_24  [key=0, style=solid];
m37_24 -> m37_25  [key=0, style=solid];
m37_24 -> m37_27  [key=2, style=dotted];
m37_25 -> m37_26  [key=0, style=solid];
m37_25 -> m37_28  [key=2, style=dotted];
m37_26 -> m37_23  [key=0, style=bold, color=blue];
m37_32 -> m37_33  [key=0, style=solid];
m37_33 -> m37_34  [key=0, style=solid];
m37_33 -> m37_36  [key=2, style=dotted];
m37_34 -> m37_35  [key=0, style=solid];
m37_34 -> m37_28  [key=2, style=dotted];
m37_35 -> m37_32  [key=0, style=bold, color=blue];
m37_40 -> m37_41  [key=0, style=solid];
m37_40 -> m37_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m37_41 -> m37_42  [key=0, style=solid];
m37_41 -> m37_4  [key=2, style=dotted];
m37_41 -> m37_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_45 -> m37_46  [key=0, style=solid];
m37_45 -> m37_47  [key=2, style=dotted];
m37_45 -> m37_48  [key=2, style=dotted];
m37_42 -> m37_43  [key=0, style=solid];
m37_42 -> m37_5  [key=2, style=dotted];
m37_44 -> m37_45  [key=0, style=solid];
m37_43 -> m37_40  [key=0, style=bold, color=blue];
m37_46 -> m37_44  [key=0, style=bold, color=blue];
m37_52 -> m37_53  [key=0, style=solid];
m37_52 -> m37_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m37_53 -> m37_54  [key=0, style=solid];
m37_53 -> m37_4  [key=2, style=dotted];
m37_53 -> m37_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_57 -> m37_58  [key=0, style=solid];
m37_57 -> m37_59  [key=2, style=dotted];
m37_57 -> m37_48  [key=2, style=dotted];
m37_57 -> m37_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_54 -> m37_55  [key=0, style=solid];
m37_54 -> m37_5  [key=2, style=dotted];
m37_56 -> m37_57  [key=0, style=solid];
m37_55 -> m37_52  [key=0, style=bold, color=blue];
m37_58 -> m37_56  [key=0, style=bold, color=blue];
m37_60 -> m37_61  [key=0, style=solid];
m37_61 -> m37_62  [key=0, style=solid];
m37_61 -> m37_63  [key=2, style=dotted];
m37_62 -> m37_60  [key=0, style=bold, color=blue];
m37_68 -> m37_69  [key=0, style=solid];
m37_68 -> m37_72  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m37_68 -> m37_83  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m37_69 -> m37_70  [key=0, style=solid];
m37_69 -> m37_59  [key=2, style=dotted];
m37_69 -> m37_47  [key=2, style=dotted];
m37_69 -> m37_87  [key=2, style=dotted];
m37_69 -> m37_48  [key=2, style=dotted];
m37_69 -> m37_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_69 -> m37_71  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m37_69 -> m37_73  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m37_69 -> m37_83  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m37_72 -> m37_73  [key=0, style=solid];
m37_72 -> m37_89  [key=2, style=dotted];
m37_72 -> m37_90  [key=2, style=dotted];
m37_72 -> m37_74  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m37_72 -> m37_75  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m37_72 -> m37_76  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m37_72 -> m37_77  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m37_72 -> m37_82  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m37_83 -> m37_84  [key=0, style=solid];
m37_83 -> m37_89  [key=2, style=dotted];
m37_83 -> m37_96  [key=2, style=dotted];
m37_83 -> m37_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_83 -> m37_103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_83 -> m37_85  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m37_70 -> m37_71  [key=0, style=solid];
m37_70 -> m37_28  [key=2, style=dotted];
m37_97 -> m37_98  [key=0, style=solid];
m37_71 -> m37_72  [key=0, style=solid];
m37_71 -> m37_88  [key=2, style=dotted];
m37_73 -> m37_74  [key=0, style=solid];
m37_73 -> m37_91  [key=2, style=dotted];
m37_73 -> m37_5  [key=2, style=dotted];
m37_74 -> m37_75  [key=0, style=solid];
m37_74 -> m37_5  [key=2, style=dotted];
m37_75 -> m37_76  [key=0, style=solid];
m37_75 -> m37_5  [key=2, style=dotted];
m37_76 -> m37_77  [key=0, style=solid];
m37_76 -> m37_92  [key=2, style=dotted];
m37_76 -> m37_78  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m37_77 -> m37_78  [key=0, style=solid];
m37_82 -> m37_83  [key=0, style=solid];
m37_82 -> m37_94  [key=2, style=dotted];
m37_82 -> m37_95  [key=2, style=dotted];
m37_78 -> m37_79  [key=0, style=solid];
m37_78 -> m37_93  [key=2, style=dotted];
m37_78 -> m37_80  [key=1, style=dashed, color=darkseagreen4, label=job];
m37_78 -> m37_81  [key=1, style=dashed, color=darkseagreen4, label=job];
m37_79 -> m37_80  [key=0, style=solid];
m37_79 -> m37_5  [key=2, style=dotted];
m37_80 -> m37_81  [key=0, style=solid];
m37_80 -> m37_5  [key=2, style=dotted];
m37_81 -> m37_82  [key=0, style=solid];
m37_81 -> m37_5  [key=2, style=dotted];
m37_84 -> m37_85  [key=0, style=solid];
m37_84 -> m37_5  [key=2, style=dotted];
m37_100 -> m37_101  [key=0, style=solid];
m37_103 -> m37_104  [key=0, style=solid];
m37_85 -> m37_86  [key=0, style=solid];
m37_85 -> m37_5  [key=2, style=dotted];
m37_86 -> m37_68  [key=0, style=bold, color=blue];
m37_98 -> m37_99  [key=0, style=solid];
m37_98 -> m37_63  [key=2, style=dotted];
m37_99 -> m37_97  [key=0, style=bold, color=blue];
m37_101 -> m37_102  [key=0, style=solid];
m37_102 -> m37_100  [key=0, style=bold, color=blue];
m37_104 -> m37_105  [key=0, style=solid];
m37_105 -> m37_103  [key=0, style=bold, color=blue];
m37_109 -> m37_110  [key=0, style=solid];
m37_109 -> m37_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m37_110 -> m37_111  [key=0, style=solid];
m37_110 -> m37_4  [key=2, style=dotted];
m37_110 -> m37_112  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_113 -> m37_114  [key=0, style=solid];
m37_113 -> m37_115  [key=2, style=dotted];
m37_111 -> m37_109  [key=0, style=bold, color=blue];
m37_112 -> m37_113  [key=0, style=solid];
m37_114 -> m37_112  [key=0, style=bold, color=blue];
m37_119 -> m37_120  [key=0, style=solid];
m37_120 -> m37_121  [key=0, style=solid];
m37_120 -> m37_115  [key=2, style=dotted];
m37_121 -> m37_122  [key=0, style=solid];
m37_121 -> m37_123  [key=2, style=dotted];
m37_122 -> m37_119  [key=0, style=bold, color=blue];
m37_130 -> m37_131  [key=0, style=solid];
m37_130 -> m37_138  [key=2, style=dotted];
m37_130 -> m37_139  [key=2, style=dotted];
m37_130 -> m37_89  [key=2, style=dotted];
m37_130 -> m37_90  [key=2, style=dotted];
m37_128 -> m37_129  [key=0, style=solid];
m37_128 -> m37_130  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m37_128 -> m37_131  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m37_129 -> m37_130  [key=0, style=solid];
m37_129 -> m37_59  [key=2, style=dotted];
m37_129 -> m37_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_131 -> m37_132  [key=0, style=solid];
m37_131 -> m37_140  [key=2, style=dotted];
m37_131 -> m37_115  [key=2, style=dotted];
m37_131 -> m37_133  [key=1, style=dashed, color=darkseagreen4, label=result];
m37_131 -> m37_134  [key=1, style=dashed, color=darkseagreen4, label=result];
m37_131 -> m37_135  [key=1, style=dashed, color=darkseagreen4, label=result];
m37_131 -> m37_136  [key=1, style=dashed, color=darkseagreen4, label=result];
m37_141 -> m37_142  [key=0, style=solid];
m37_132 -> m37_133  [key=0, style=solid];
m37_132 -> m37_28  [key=2, style=dotted];
m37_133 -> m37_134  [key=0, style=solid];
m37_133 -> m37_28  [key=2, style=dotted];
m37_134 -> m37_135  [key=0, style=solid];
m37_134 -> m37_5  [key=2, style=dotted];
m37_135 -> m37_136  [key=0, style=solid];
m37_135 -> m37_5  [key=2, style=dotted];
m37_136 -> m37_137  [key=0, style=solid];
m37_136 -> m37_123  [key=2, style=dotted];
m37_137 -> m37_128  [key=0, style=bold, color=blue];
m37_142 -> m37_143  [key=0, style=solid];
m37_142 -> m37_63  [key=2, style=dotted];
m37_143 -> m37_141  [key=0, style=bold, color=blue];
m37_149 -> m37_150  [key=0, style=solid];
m37_149 -> m37_153  [key=2, style=dotted];
m37_149 -> m37_139  [key=2, style=dotted];
m37_63 -> m37_406  [key=0, style=solid];
m37_37 -> m37_38  [key=0, style=solid];
m37_38 -> m37_39  [key=0, style=solid];
m37_38 -> m37_22  [key=2, style=dotted];
m37_38 -> m37_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_39 -> m37_37  [key=0, style=bold, color=blue];
m37_106 -> m37_107  [key=0, style=solid];
m37_107 -> m37_108  [key=0, style=solid];
m37_107 -> m37_22  [key=2, style=dotted];
m37_107 -> m37_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_108 -> m37_106  [key=0, style=bold, color=blue];
m37_407 -> m37_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_107  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_126  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_146  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_155  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_166  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_177  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_188  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_200  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_210  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_221  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_231  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_239  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_248  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_259  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_268  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_276  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_285  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_297  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_307  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_325  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_336  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_346  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_357  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_373  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_407 -> m37_385  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m37_408 -> m37_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m37_409 -> m37_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m37_410 -> m37_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m37_411 -> m37_130  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m37_412 -> m37_149  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m37_413 -> m37_162  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m37_414 -> m37_173  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m37_415 -> m37_180  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m37_416 -> m37_191  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m37_417 -> m37_203  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m37_418 -> m37_217  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m37_419 -> m37_228  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m37_420 -> m37_242  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m37_421 -> m37_255  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m37_422 -> m37_265  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m37_423 -> m37_279  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m37_424 -> m37_292  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m37_425 -> m37_304  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m37_426 -> m37_331  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m37_427 -> m37_339  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m37_428 -> m37_352  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m37_429 -> m37_360  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m37_430 -> m37_379  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m37_431 -> m37_388  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m39_0 -> m39_1  [key=0, style=solid];
m39_1 -> m39_2  [key=0, style=solid];
m39_1 -> m39_51  [key=2, style=dotted];
m39_2 -> m39_3  [key=0, style=solid];
m39_2 -> m39_52  [key=2, style=dotted];
m39_3 -> m39_4  [key=0, style=solid];
m39_3 -> m39_51  [key=2, style=dotted];
m39_4 -> m39_5  [key=0, style=solid];
m39_4 -> m39_6  [key=0, style=solid];
m39_5 -> m39_49  [key=0, style=solid];
m39_5 -> m39_51  [key=2, style=dotted];
m39_6 -> m39_7  [key=0, style=solid];
m39_6 -> m39_51  [key=2, style=dotted];
m39_7 -> m39_8  [key=0, style=solid, color=green];
m39_7 -> m39_53  [key=2, style=dotted];
m39_7 -> m39_54  [key=2, style=dotted];
m39_8 -> m39_9  [key=0, style=solid, color=green];
m39_8 -> m39_51  [key=2, style=dotted, color=green];
m39_9 -> m39_10  [key=0, style=solid, color=green];
m39_9 -> m39_53  [key=2, style=dotted];
m39_9 -> m39_54  [key=2, style=dotted];
m39_10 -> m39_11  [key=0, style=solid, color=green];
m39_10 -> m39_51  [key=2, style=dotted, color=green];
m39_11 -> m39_12  [key=0, style=solid];
m39_11 -> m39_48  [key=0, style=solid];
m39_11 -> m39_13  [key=1, style=dashed, color=darkseagreen4, label=job];
m39_11 -> m39_15  [key=1, style=dashed, color=darkseagreen4, label=job];
m39_11 -> m39_17  [key=1, style=dashed, color=darkseagreen4, label=job];
m39_11 -> m39_19  [key=1, style=dashed, color=darkseagreen4, label=job];
m39_11 -> m39_22  [key=1, style=dashed, color=darkseagreen4, label=job];
m39_11 -> m39_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m39_11 -> m39_28  [key=1, style=dashed, color=darkseagreen4, label=job];
m39_11 -> m39_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m39_11 -> m39_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m39_11 -> m39_36  [key=1, style=dashed, color=darkseagreen4, label=job];
m39_11 -> m39_38  [key=1, style=dashed, color=darkseagreen4, label=job];
m39_11 -> m39_40  [key=1, style=dashed, color=darkseagreen4, label=job];
m39_11 -> m39_42  [key=1, style=dashed, color=darkseagreen4, label=job];
m39_11 -> m39_44  [key=1, style=dashed, color=darkseagreen4, label=job];
m39_12 -> m39_13  [key=0, style=solid];
m39_12 -> m39_51  [key=2, style=dotted];
m39_48 -> m39_49  [key=0, style=solid];
m39_48 -> m39_51  [key=2, style=dotted];
m39_13 -> m39_14  [key=0, style=solid];
m39_13 -> m39_54  [key=2, style=dotted];
m39_15 -> m39_16  [key=0, style=solid];
m39_15 -> m39_54  [key=2, style=dotted];
m39_17 -> m39_18  [key=0, style=solid];
m39_17 -> m39_55  [key=2, style=dotted];
m39_17 -> m39_56  [key=2, style=dotted];
m39_19 -> m39_20  [key=0, style=solid];
m39_19 -> m39_24  [key=0, style=solid];
m39_22 -> m39_23  [key=0, style=solid];
m39_22 -> m39_57  [key=2, style=dotted];
m39_22 -> m39_56  [key=2, style=dotted];
m39_25 -> m39_26  [key=0, style=solid];
m39_25 -> m39_54  [key=2, style=dotted];
m39_28 -> m39_29  [key=0, style=solid];
m39_28 -> m39_34  [key=0, style=solid];
m39_30 -> m39_31  [key=0, style=solid];
m39_30 -> m39_58  [key=2, style=dotted];
m39_30 -> m39_54  [key=2, style=dotted];
m39_32 -> m39_33  [key=0, style=solid];
m39_32 -> m39_54  [key=2, style=dotted];
m39_36 -> m39_37  [key=0, style=solid];
m39_36 -> m39_46  [key=0, style=solid];
m39_38 -> m39_39  [key=0, style=solid];
m39_38 -> m39_53  [key=2, style=dotted];
m39_38 -> m39_54  [key=2, style=dotted];
m39_40 -> m39_41  [key=0, style=solid];
m39_40 -> m39_58  [key=2, style=dotted];
m39_40 -> m39_54  [key=2, style=dotted];
m39_42 -> m39_43  [key=0, style=solid];
m39_42 -> m39_59  [key=2, style=dotted];
m39_42 -> m39_60  [key=2, style=dotted];
m39_42 -> m39_54  [key=2, style=dotted];
m39_44 -> m39_45  [key=0, style=solid];
m39_44 -> m39_54  [key=2, style=dotted];
m39_14 -> m39_15  [key=0, style=solid];
m39_14 -> m39_51  [key=2, style=dotted];
m39_16 -> m39_17  [key=0, style=solid];
m39_16 -> m39_51  [key=2, style=dotted];
m39_18 -> m39_19  [key=0, style=solid];
m39_18 -> m39_51  [key=2, style=dotted];
m39_20 -> m39_21  [key=0, style=solid];
m39_20 -> m39_51  [key=2, style=dotted];
m39_24 -> m39_25  [key=0, style=solid];
m39_24 -> m39_51  [key=2, style=dotted];
m39_21 -> m39_22  [key=0, style=solid];
m39_21 -> m39_51  [key=2, style=dotted];
m39_23 -> m39_27  [key=0, style=solid];
m39_23 -> m39_51  [key=2, style=dotted];
m39_26 -> m39_27  [key=0, style=solid];
m39_26 -> m39_51  [key=2, style=dotted];
m39_27 -> m39_28  [key=0, style=solid];
m39_27 -> m39_51  [key=2, style=dotted];
m39_29 -> m39_30  [key=0, style=solid];
m39_29 -> m39_51  [key=2, style=dotted];
m39_34 -> m39_35  [key=0, style=solid];
m39_34 -> m39_51  [key=2, style=dotted];
m39_31 -> m39_32  [key=0, style=solid];
m39_31 -> m39_51  [key=2, style=dotted];
m39_33 -> m39_35  [key=0, style=solid];
m39_33 -> m39_51  [key=2, style=dotted];
m39_35 -> m39_36  [key=0, style=solid];
m39_35 -> m39_51  [key=2, style=dotted];
m39_37 -> m39_38  [key=0, style=solid];
m39_37 -> m39_51  [key=2, style=dotted];
m39_46 -> m39_47  [key=0, style=solid];
m39_46 -> m39_51  [key=2, style=dotted];
m39_39 -> m39_40  [key=0, style=solid];
m39_39 -> m39_51  [key=2, style=dotted];
m39_41 -> m39_42  [key=0, style=solid];
m39_41 -> m39_51  [key=2, style=dotted];
m39_43 -> m39_44  [key=0, style=solid];
m39_43 -> m39_51  [key=2, style=dotted];
m39_45 -> m39_47  [key=0, style=solid];
m39_45 -> m39_51  [key=2, style=dotted];
m39_47 -> m39_11  [key=0, style=solid];
m39_47 -> m39_51  [key=2, style=dotted];
m39_49 -> m39_50  [key=0, style=solid];
m39_49 -> m39_51  [key=2, style=dotted];
m39_50 -> m39_0  [key=0, style=bold, color=blue];
m39_61 -> m39_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_8  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_10  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m39_61 -> m39_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m40_5 -> m40_6  [key=0, style=solid, color=green];
m40_5 -> m40_8  [key=0, style=solid, color=green];
m40_6 -> m40_7  [key=0, style=solid, color=green];
m40_6 -> m40_14  [key=2, style=dotted, color=green];
m40_6 -> m40_15  [key=2, style=dotted, color=green];
m40_6 -> m40_16  [key=2, style=dotted, color=green];
m40_6 -> m40_17  [key=2, style=dotted, color=green];
m40_7 -> m40_8  [key=0, style=solid, color=red];
m40_7 -> m40_10  [key=1, style=dashed, color=red, label=sqlQuery];
m40_7 -> m40_19  [key=1, style=dashed, color=red, label=sqlQuery];
m40_7 -> m40_11  [key=0, style=solid, color=green];
m40_7 -> m40_14  [key=2, style=dotted, color=green];
m40_7 -> m40_15  [key=2, style=dotted, color=green];
m40_7 -> m40_18  [key=2, style=dotted, color=green];
m40_7 -> m40_17  [key=2, style=dotted, color=green];
m40_8 -> m40_9  [key=0, style=solid, color=green];
m40_8 -> m40_11  [key=0, style=solid, color=green];
m40_10 -> m40_11  [key=0, style=solid, color=green];
m40_10 -> m40_16  [key=2, style=dotted, color=red];
m40_10 -> m40_18  [key=1, style=dashed, color=red, label="lambda expression"];
m40_10 -> m40_14  [key=2, style=dotted, color=green];
m40_10 -> m40_15  [key=2, style=dotted, color=green];
m40_10 -> m40_17  [key=2, style=dotted, color=green];
m40_9 -> m40_10  [key=0, style=solid, color=green];
m40_9 -> m40_13  [key=0, style=solid, color=red];
m40_9 -> m40_15  [key=2, style=dotted, color=green];
m40_9 -> m40_14  [key=2, style=dotted, color=green];
m40_9 -> m40_16  [key=2, style=dotted, color=green];
m40_9 -> m40_17  [key=2, style=dotted, color=green];
m40_13 -> m40_14  [key=0, style=solid, color=red];
m40_13 -> m40_17  [key=2, style=dotted, color=red];
m40_11 -> m40_12  [key=0, style=solid, color=green];
m40_11 -> m40_19  [key=2, style=dotted, color=green];
m40_12 -> m40_13  [key=0, style=solid, color=red];
m40_12 -> m40_3  [key=0, style=bold, color=blue];
m40_14 -> m40_6  [key=0, style=bold, color=blue];
m40_27 -> m40_28  [key=0, style=solid, color=red];
m40_27 -> m40_29  [key=1, style=dashed, color=red, label=string];
m40_27 -> m40_32  [key=1, style=dashed, color=red, label=string];
m40_28 -> m40_29  [key=0, style=solid, color=red];
m40_28 -> m40_32  [key=1, style=dashed, color=red, label=sqlQuery];
m40_29 -> m40_30  [key=0, style=solid, color=red];
m40_29 -> m40_16  [key=2, style=dotted, color=red];
m40_29 -> m40_31  [key=1, style=dashed, color=red, label="lambda expression"];
m40_30 -> m40_27  [key=0, style=bold, color=blue];
m40_16 -> m40_58  [key=0, style=solid, color=red];
m40_58 -> m40_59  [key=0, style=solid, color=red];
m40_58 -> m40_60  [key=2, style=dotted, color=red];
m40_59 -> m40_16  [key=0, style=bold, color=blue];
m40_19 -> m40_20  [key=0, style=solid, color=red];
m40_19 -> m40_21  [key=2, style=dotted, color=red];
m40_19 -> m40_22  [key=2, style=dotted, color=red];
m40_19 -> m40_23  [key=2, style=dotted, color=red];
m40_19 -> m40_24  [key=1, style=dashed, color=red, label="lambda expression"];
m40_48 -> m40_49  [key=0, style=solid];
m40_48 -> m40_50  [key=1, style=dashed, color=red, label=string];
m40_48 -> m40_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m40_49 -> m40_50  [key=0, style=solid, color=red];
m40_49 -> m40_53  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
m40_50 -> m40_51  [key=0, style=solid, color=red];
m40_50 -> m40_16  [key=2, style=dotted, color=red];
m40_50 -> m40_52  [key=1, style=dashed, color=red, label="lambda expression"];
m40_51 -> m40_48  [key=0, style=bold, color=blue];
m40_3 -> m40_4  [key=0, style=solid, color=red];
m40_3 -> m40_5  [key=1, style=dashed, color=green, label="HangFire.Common.States.StateChangingContext"];
m40_3 -> m40_8  [key=1, style=dashed, color=green, label="HangFire.Common.States.StateChangingContext"];
m40_4 -> m40_5  [key=0, style=solid, color=green];
m40_4 -> m40_13  [key=2, style=dotted, color=green];
m40_4 -> m40_6  [key=1, style=dashed, color=green, label=transaction];
m40_4 -> m40_7  [key=1, style=dashed, color=green, label=transaction];
m40_4 -> m40_9  [key=1, style=dashed, color=green, label=transaction];
m40_4 -> m40_10  [key=1, style=dashed, color=green, label=transaction];
m40_4 -> m40_11  [key=1, style=dashed, color=green, label=transaction];
m40_4 -> m40_0  [key=0, style=bold, color=blue];
m40_38 -> m40_39  [key=0, style=solid, color=red];
m40_38 -> m40_40  [key=1, style=dashed, color=red, label=string];
m40_38 -> m40_43  [key=1, style=dashed, color=red, label=string];
m40_39 -> m40_40  [key=0, style=solid, color=red];
m40_39 -> m40_43  [key=1, style=dashed, color=red, label=fetchedJobsSql];
m40_40 -> m40_41  [key=0, style=solid, color=red];
m40_40 -> m40_16  [key=2, style=dotted, color=red];
m40_40 -> m40_42  [key=1, style=dashed, color=red, label="lambda expression"];
m40_41 -> m40_38  [key=0, style=bold, color=blue];
m40_18 -> m40_19  [key=0, style=solid, color=red];
m40_0 -> m40_1  [key=0, style=solid, color=red];
m40_0 -> m40_3  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerStorage"];
m40_1 -> m40_2  [key=0, style=solid, color=red];
m40_1 -> m40_3  [key=0, style=solid, color=red];
m40_2 -> m40_0  [key=0, style=bold, color=blue];
m40_2 -> m40_4  [key=0, style=solid, color=red];
m40_2 -> m40_5  [key=2, style=dotted, color=red];
m40_52 -> m40_53  [key=0, style=solid];
m40_20 -> m40_18  [key=0, style=bold, color=blue];
m40_20 -> m40_1  [key=1, style=dashed, color=green, label="HangFire.Filters.StatisticsHistoryFilterAttribute"];
m40_24 -> m40_25  [key=0, style=solid, color=red];
m40_25 -> m40_26  [key=0, style=solid, color=red];
m40_26 -> m40_24  [key=0, style=bold, color=blue];
m40_32 -> m40_33  [key=0, style=solid, color=red];
m40_32 -> m40_34  [key=2, style=dotted, color=red];
m40_32 -> m40_23  [key=2, style=dotted, color=red];
m40_32 -> m40_22  [key=2, style=dotted, color=red];
m40_32 -> m40_35  [key=1, style=dashed, color=red, label="lambda expression"];
m40_31 -> m40_32  [key=0, style=solid, color=red];
m40_33 -> m40_31  [key=0, style=bold, color=blue];
m40_35 -> m40_36  [key=0, style=solid, color=red];
m40_36 -> m40_37  [key=0, style=solid, color=red];
m40_37 -> m40_35  [key=0, style=bold, color=blue];
m40_43 -> m40_44  [key=0, style=solid, color=red];
m40_43 -> m40_34  [key=2, style=dotted, color=red];
m40_43 -> m40_23  [key=2, style=dotted, color=red];
m40_43 -> m40_22  [key=2, style=dotted, color=red];
m40_43 -> m40_45  [key=1, style=dashed, color=red, label="lambda expression"];
m40_42 -> m40_43  [key=0, style=solid, color=red];
m40_44 -> m40_42  [key=0, style=bold, color=blue];
m40_45 -> m40_46  [key=0, style=solid];
m40_46 -> m40_47  [key=0, style=solid];
m40_47 -> m40_45  [key=0, style=bold, color=blue];
m40_53 -> m40_54  [key=0, style=solid, color=red];
m40_53 -> m40_21  [key=2, style=dotted];
m40_53 -> m40_56  [key=2, style=dotted];
m40_54 -> m40_55  [key=0, style=solid, color=red];
m40_54 -> m40_57  [key=2, style=dotted, color=red];
m40_55 -> m40_52  [key=0, style=bold, color=blue];
m40_61 -> m40_3  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m40_61 -> m40_8  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m40_61 -> m40_9  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m40_61 -> m40_10  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m40_61 -> m40_11  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m40_61 -> m40_12  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m40_61 -> m40_13  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m40_61 -> m40_29  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m40_61 -> m40_40  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m40_61 -> m40_50  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m40_61 -> m40_58  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi"];
m40_62 -> m40_19  [key=1, style=dashed, color=red, label=sqlQuery];
m40_63 -> m40_32  [key=1, style=dashed, color=red, label=string];
m40_64 -> m40_32  [key=1, style=dashed, color=red, label=int];
m40_65 -> m40_32  [key=1, style=dashed, color=red, label=int];
m40_66 -> m40_32  [key=1, style=dashed, color=red, label=sqlQuery];
m40_67 -> m40_43  [key=1, style=dashed, color=red, label=string];
m40_68 -> m40_43  [key=1, style=dashed, color=red, label=int];
m40_69 -> m40_43  [key=1, style=dashed, color=red, label=int];
m40_70 -> m40_43  [key=1, style=dashed, color=red, label=fetchedJobsSql];
m40_71 -> m40_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m40_72 -> m40_53  [key=1, style=dashed, color=darkseagreen4, label=sqlQuery];
m41_4 -> m41_5  [key=0, style=solid, color=red];
m41_5 -> m41_6  [key=0, style=solid, color=red];
m41_5 -> m41_7  [key=2, style=dotted, color=red];
m41_6 -> m41_4  [key=0, style=bold, color=blue];
m41_0 -> m41_1  [key=0, style=solid, color=red];
m41_0 -> m41_2  [key=1, style=dashed, color=red, label=string];
m41_1 -> m41_2  [key=0, style=solid, color=red];
m41_2 -> m41_3  [key=0, style=solid, color=red];
m41_3 -> m41_0  [key=0, style=bold, color=blue];
m41_8 -> m41_1  [key=1, style=dashed, color=red, label="HangFire.Web.SingleResourceHandler"];
m41_8 -> m41_2  [key=1, style=dashed, color=red, label="HangFire.Web.SingleResourceHandler"];
m41_8 -> m41_5  [key=1, style=dashed, color=red, label="HangFire.Web.SingleResourceHandler"];
m42_23 -> m42_24  [key=0, style=solid];
m42_23 -> m42_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m42_24 -> m42_5  [key=2, style=dotted];
m42_24 -> m42_6  [key=2, style=dotted];
m42_24 -> m42_25  [key=0, style=solid];
m42_25 -> m42_5  [key=2, style=dotted];
m42_25 -> m42_26  [key=0, style=solid];
m42_25 -> m42_11  [key=2, style=dotted];
m42_26 -> m42_23  [key=0, style=bold, color=blue];
m42_7 -> m42_8  [key=0, style=solid];
m42_8 -> m42_5  [key=2, style=dotted];
m42_8 -> m42_6  [key=2, style=dotted];
m42_8 -> m42_9  [key=0, style=solid];
m42_9 -> m42_5  [key=2, style=dotted];
m42_9 -> m42_10  [key=0, style=solid];
m42_9 -> m42_11  [key=2, style=dotted];
m42_10 -> m42_7  [key=0, style=bold, color=blue];
m42_2 -> m42_3  [key=0, style=solid, color=green];
m42_3 -> m42_4  [key=0, style=solid, color=green];
m42_3 -> m42_5  [key=2, style=dotted, color=green];
m42_3 -> m42_6  [key=2, style=dotted, color=green];
m42_4 -> m42_2  [key=0, style=bold, color=blue];
m42_40 -> m42_41  [key=0, style=solid];
m42_41 -> m42_5  [key=2, style=dotted];
m42_41 -> m42_42  [key=0, style=solid];
m42_41 -> m42_35  [key=2, style=dotted];
m42_42 -> m42_43  [key=0, style=solid];
m42_42 -> m42_44  [key=2, style=dotted];
m42_43 -> m42_40  [key=0, style=bold, color=blue];
m42_15 -> m42_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m42_15 -> m42_16  [key=0, style=solid];
m42_17 -> m42_5  [key=2, style=dotted];
m42_17 -> m42_18  [key=0, style=solid];
m42_17 -> m42_11  [key=2, style=dotted];
m42_16 -> m42_6  [key=2, style=dotted];
m42_16 -> m42_17  [key=0, style=solid];
m42_18 -> m42_15  [key=0, style=bold, color=blue];
m42_37 -> m42_38  [key=0, style=solid];
m42_38 -> m42_5  [key=2, style=dotted];
m42_38 -> m42_39  [key=0, style=solid];
m42_38 -> m42_30  [key=2, style=dotted];
m42_39 -> m42_37  [key=0, style=bold, color=blue];
m42_12 -> m42_13  [key=0, style=solid];
m42_13 -> m42_5  [key=2, style=dotted];
m42_13 -> m42_14  [key=0, style=solid];
m42_13 -> m42_11  [key=2, style=dotted];
m42_14 -> m42_12  [key=0, style=bold, color=blue];
m42_31 -> m42_32  [key=0, style=solid];
m42_32 -> m42_5  [key=2, style=dotted];
m42_32 -> m42_33  [key=0, style=solid];
m42_32 -> m42_35  [key=2, style=dotted];
m42_33 -> m42_34  [key=0, style=solid];
m42_33 -> m42_36  [key=2, style=dotted];
m42_34 -> m42_31  [key=0, style=bold, color=blue];
m42_19 -> m42_20  [key=0, style=solid];
m42_20 -> m42_6  [key=2, style=dotted];
m42_20 -> m42_21  [key=0, style=solid];
m42_20 -> m42_22  [key=2, style=dotted];
m42_21 -> m42_19  [key=0, style=bold, color=blue];
m42_51 -> m42_52  [key=0, style=solid];
m42_51 -> m42_53  [key=1, style=dashed, color=darkseagreen4, label=int];
m42_52 -> m42_5  [key=2, style=dotted];
m42_52 -> m42_53  [key=0, style=solid];
m42_52 -> m42_49  [key=2, style=dotted];
m42_53 -> m42_54  [key=0, style=solid];
m42_53 -> m42_50  [key=2, style=dotted];
m42_54 -> m42_51  [key=0, style=bold, color=blue];
m42_27 -> m42_28  [key=0, style=solid];
m42_28 -> m42_5  [key=2, style=dotted];
m42_28 -> m42_29  [key=0, style=solid];
m42_28 -> m42_30  [key=2, style=dotted];
m42_29 -> m42_27  [key=0, style=bold, color=blue];
m42_45 -> m42_46  [key=0, style=solid];
m42_46 -> m42_5  [key=2, style=dotted];
m42_46 -> m42_47  [key=0, style=solid];
m42_46 -> m42_49  [key=2, style=dotted];
m42_47 -> m42_48  [key=0, style=solid];
m42_47 -> m42_50  [key=2, style=dotted];
m42_48 -> m42_45  [key=0, style=bold, color=blue];
m43_0 -> m43_1  [key=0, style=solid, color=red];
m43_1 -> m43_2  [key=0, style=solid, color=red];
m43_2 -> m43_3  [key=0, style=solid, color=red];
m43_3 -> m43_0  [key=0, style=bold, color=blue];
m43_4 -> m43_1  [key=1, style=dashed, color=red, label="HangFire.Web.StyleSheetHandler"];
m43_4 -> m43_2  [key=1, style=dashed, color=red, label="HangFire.Web.StyleSheetHandler"];
m44_15 -> m44_16  [key=0, style=solid, color=green];
m44_15 -> m44_22  [key=2, style=dotted, color=green];
m44_15 -> m44_23  [key=2, style=dotted, color=green];
m44_15 -> m44_24  [key=2, style=dotted, color=green];
m44_15 -> m44_19  [key=1, style=dashed, color=green, label=anotherJobId];
m44_375 -> m44_376  [key=0, style=solid];
m44_376 -> m44_12  [key=2, style=dotted];
m44_376 -> m44_377  [key=0, style=solid];
m44_376 -> m44_378  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_377 -> m44_375  [key=0, style=bold, color=blue];
m44_432 -> m44_433  [key=0, style=solid];
m44_433 -> m44_12  [key=2, style=dotted];
m44_433 -> m44_434  [key=0, style=solid];
m44_433 -> m44_435  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_434 -> m44_432  [key=0, style=bold, color=blue];
m44_12 -> m44_13  [key=0, style=solid, color=red];
m44_299 -> m44_300  [key=0, style=solid, color=green];
m44_300 -> m44_301  [key=0, style=solid, color=green];
m44_300 -> m44_12  [key=2, style=dotted, color=green];
m44_300 -> m44_302  [key=1, style=dashed, color=green, label="lambda expression"];
m44_301 -> m44_299  [key=0, style=bold, color=blue];
m44_235 -> m44_236  [key=0, style=solid, color=green];
m44_236 -> m44_237  [key=0, style=solid, color=green];
m44_236 -> m44_12  [key=2, style=dotted, color=green];
m44_236 -> m44_238  [key=1, style=dashed, color=green, label="lambda expression"];
m44_237 -> m44_235  [key=0, style=bold, color=blue];
m44_3 -> m44_4  [key=0, style=solid, color=red];
m44_3 -> m44_6  [key=1, style=dashed, color=red, label="Hangfire.Common.Job"];
m44_3 -> m44_8  [key=1, style=dashed, color=red, label="Hangfire.States.IState"];
m44_3 -> m44_10  [key=1, style=dashed, color=red, label="Hangfire.Storage.IStorageConnection"];
m44_3 -> m44_11  [key=1, style=dashed, color=red, label="Hangfire.Common.Job"];
m44_3 -> m44_12  [key=1, style=dashed, color=red, label="Hangfire.States.IState"];
m44_131 -> m44_132  [key=0, style=solid, color=green];
m44_132 -> m44_133  [key=0, style=solid, color=green];
m44_132 -> m44_12  [key=2, style=dotted, color=green];
m44_132 -> m44_134  [key=1, style=dashed, color=green, label="lambda expression"];
m44_133 -> m44_131  [key=0, style=bold, color=blue];
m44_444 -> m44_445  [key=0, style=solid];
m44_445 -> m44_12  [key=2, style=dotted];
m44_445 -> m44_446  [key=0, style=solid];
m44_445 -> m44_447  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_446 -> m44_444  [key=0, style=bold, color=blue];
m44_145 -> m44_146  [key=0, style=solid];
m44_146 -> m44_22  [key=2, style=dotted];
m44_146 -> m44_23  [key=2, style=dotted];
m44_146 -> m44_147  [key=0, style=solid];
m44_147 -> m44_145  [key=0, style=bold, color=blue];
m44_399 -> m44_400  [key=0, style=solid];
m44_400 -> m44_12  [key=2, style=dotted];
m44_400 -> m44_401  [key=0, style=solid];
m44_400 -> m44_402  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_401 -> m44_399  [key=0, style=bold, color=blue];
m44_148 -> m44_149  [key=0, style=solid, color=green];
m44_149 -> m44_150  [key=0, style=solid, color=green];
m44_149 -> m44_12  [key=2, style=dotted, color=green];
m44_149 -> m44_151  [key=1, style=dashed, color=green, label="lambda expression"];
m44_150 -> m44_148  [key=0, style=bold, color=blue];
m44_97 -> m44_98  [key=0, style=solid, color=green];
m44_98 -> m44_99  [key=0, style=solid, color=green];
m44_98 -> m44_102  [key=1, style=dashed, color=green, label=arrangeSql];
m44_99 -> m44_100  [key=0, style=solid, color=green];
m44_99 -> m44_12  [key=2, style=dotted, color=green];
m44_99 -> m44_101  [key=1, style=dashed, color=green, label="lambda expression"];
m44_100 -> m44_97  [key=0, style=bold, color=blue];
m44_206 -> m44_207  [key=0, style=solid, color=green];
m44_207 -> m44_208  [key=0, style=solid, color=green];
m44_207 -> m44_12  [key=2, style=dotted, color=green];
m44_207 -> m44_209  [key=1, style=dashed, color=green, label="lambda expression"];
m44_208 -> m44_206  [key=0, style=bold, color=blue];
m44_0 -> m44_1  [key=0, style=solid, color=red];
m44_1 -> m44_2  [key=0, style=solid, color=red];
m44_1 -> m44_3  [key=2, style=dotted, color=green];
m44_1 -> m44_4  [key=1, style=dashed, color=green, label="lambda expression"];
m44_2 -> m44_0  [key=0, style=bold, color=blue];
m44_223 -> m44_224  [key=0, style=solid, color=green];
m44_224 -> m44_225  [key=0, style=solid, color=green];
m44_224 -> m44_12  [key=2, style=dotted, color=green];
m44_224 -> m44_226  [key=1, style=dashed, color=green, label="lambda expression"];
m44_225 -> m44_223  [key=0, style=bold, color=blue];
m44_387 -> m44_388  [key=0, style=solid];
m44_388 -> m44_12  [key=2, style=dotted];
m44_388 -> m44_389  [key=0, style=solid];
m44_388 -> m44_390  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_389 -> m44_387  [key=0, style=bold, color=blue];
m44_16 -> m44_17  [key=0, style=solid, color=green];
m44_16 -> m44_25  [key=2, style=dotted, color=green];
m44_16 -> m44_30  [key=1, style=dashed, color=green, label="lambda expression"];
m44_162 -> m44_163  [key=0, style=solid, color=green];
m44_163 -> m44_164  [key=0, style=solid, color=green];
m44_163 -> m44_12  [key=2, style=dotted, color=green];
m44_163 -> m44_165  [key=1, style=dashed, color=green, label="lambda expression"];
m44_164 -> m44_162  [key=0, style=bold, color=blue];
m44_25 -> m44_474  [key=0, style=solid];
m44_25 -> m44_475  [key=1, style=dashed, color=darkseagreen4, label="System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>"];
m44_474 -> m44_7  [key=2, style=dotted];
m44_474 -> m44_475  [key=0, style=solid];
m44_474 -> m44_476  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m44_475 -> m44_476  [key=0, style=solid];
m44_475 -> m44_473  [key=2, style=dotted];
m44_476 -> m44_477  [key=0, style=solid];
m44_476 -> m44_478  [key=2, style=dotted];
m44_477 -> m44_25  [key=0, style=bold, color=blue];
m44_324 -> m44_325  [key=0, style=solid, color=green];
m44_325 -> m44_326  [key=0, style=solid, color=green];
m44_325 -> m44_12  [key=2, style=dotted, color=green];
m44_325 -> m44_327  [key=1, style=dashed, color=green, label="lambda expression"];
m44_326 -> m44_324  [key=0, style=bold, color=blue];
m44_180 -> m44_181  [key=0, style=solid, color=green];
m44_181 -> m44_182  [key=0, style=solid, color=green];
m44_181 -> m44_12  [key=2, style=dotted, color=green];
m44_181 -> m44_183  [key=1, style=dashed, color=green, label="lambda expression"];
m44_182 -> m44_180  [key=0, style=bold, color=blue];
m44_361 -> m44_362  [key=0, style=solid, color=green];
m44_362 -> m44_363  [key=0, style=solid, color=green];
m44_362 -> m44_12  [key=2, style=dotted, color=green];
m44_362 -> m44_364  [key=1, style=dashed, color=green, label="lambda expression"];
m44_363 -> m44_361  [key=0, style=bold, color=blue];
m44_35 -> m44_36  [key=0, style=solid, color=green];
m44_36 -> m44_37  [key=0, style=solid, color=green];
m44_36 -> m44_40  [key=1, style=dashed, color=green, label=arrangeSql];
m44_36 -> m44_41  [key=1, style=dashed, color=green, label=arrangeSql];
m44_37 -> m44_38  [key=0, style=solid, color=green];
m44_37 -> m44_12  [key=2, style=dotted, color=green];
m44_37 -> m44_39  [key=1, style=dashed, color=green, label="lambda expression"];
m44_38 -> m44_35  [key=0, style=bold, color=blue];
m44_273 -> m44_274  [key=0, style=solid, color=green];
m44_274 -> m44_275  [key=0, style=solid, color=green];
m44_274 -> m44_12  [key=2, style=dotted, color=green];
m44_274 -> m44_276  [key=1, style=dashed, color=green, label="lambda expression"];
m44_275 -> m44_273  [key=0, style=bold, color=blue];
m44_464 -> m44_465  [key=0, style=solid];
m44_464 -> m44_466  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m44_4 -> m44_5  [key=0, style=solid, color=red];
m44_4 -> m44_6  [key=0, style=solid, color=red];
m44_5 -> m44_6  [key=0, style=solid, color=green];
m44_5 -> m44_7  [key=2, style=dotted, color=green];
m44_5 -> m44_14  [key=0, style=solid, color=red];
m44_5 -> m44_15  [key=2, style=dotted, color=red];
m44_6 -> m44_4  [key=0, style=bold, color=blue];
m44_6 -> m44_7  [key=0, style=solid, color=red];
m44_6 -> m44_8  [key=0, style=solid, color=red];
m44_14 -> m44_15  [key=0, style=solid, color=green];
m44_14 -> m44_22  [key=2, style=dotted, color=green];
m44_14 -> m44_23  [key=2, style=dotted, color=green];
m44_14 -> m44_24  [key=2, style=dotted, color=green];
m44_14 -> m44_16  [key=1, style=dashed, color=green, label=jobId];
m44_14 -> m44_31  [key=1, style=dashed, color=green, label=jobId];
m44_14 -> m44_17  [key=1, style=dashed, color=green, label=jobId];
m44_14 -> m44_3  [key=0, style=bold, color=blue];
m44_13 -> m44_14  [key=0, style=solid, color=red];
m44_13 -> m44_15  [key=1, style=dashed, color=green, label=SqlConnection];
m44_13 -> m44_16  [key=1, style=dashed, color=green, label=SqlConnection];
m44_13 -> m44_17  [key=1, style=dashed, color=green, label=SqlConnection];
m44_13 -> m44_19  [key=1, style=dashed, color=green, label=SqlConnection];
m44_31 -> m44_32  [key=0, style=solid, color=green];
m44_31 -> m44_33  [key=2, style=dotted, color=green];
m44_31 -> m44_34  [key=2, style=dotted, color=green];
m44_17 -> m44_18  [key=0, style=solid, color=green];
m44_17 -> m44_26  [key=2, style=dotted, color=green];
m44_17 -> m44_1  [key=1, style=dashed, color=red, label="Hangfire.Client.CreateContext"];
m44_17 -> m44_10  [key=1, style=dashed, color=red, label="Hangfire.Client.CreateContext"];
m44_17 -> m44_11  [key=1, style=dashed, color=red, label="Hangfire.Client.CreateContext"];
m44_17 -> m44_12  [key=1, style=dashed, color=red, label="Hangfire.Client.CreateContext"];
m44_17 -> m44_13  [key=1, style=dashed, color=red, label="Hangfire.Client.CreateContext"];
m44_19 -> m44_20  [key=0, style=solid, color=green];
m44_19 -> m44_26  [key=2, style=dotted, color=green];
m44_30 -> m44_31  [key=0, style=solid, color=green];
m44_18 -> m44_19  [key=0, style=solid, color=green];
m44_18 -> m44_27  [key=2, style=dotted, color=green];
m44_18 -> m44_28  [key=2, style=dotted, color=green];
m44_20 -> m44_21  [key=0, style=solid, color=green];
m44_20 -> m44_29  [key=2, style=dotted, color=green];
m44_32 -> m44_30  [key=0, style=bold, color=blue];
m44_21 -> m44_13  [key=0, style=bold, color=blue];
m44_40 -> m44_41  [key=0, style=solid, color=green];
m44_40 -> m44_22  [key=2, style=dotted, color=green];
m44_40 -> m44_23  [key=2, style=dotted, color=green];
m44_40 -> m44_24  [key=2, style=dotted, color=green];
m44_40 -> m44_42  [key=1, style=dashed, color=green, label=jobId];
m44_40 -> m44_50  [key=1, style=dashed, color=green, label=jobId];
m44_40 -> m44_43  [key=1, style=dashed, color=green, label=jobId];
m44_41 -> m44_42  [key=0, style=solid, color=green];
m44_41 -> m44_22  [key=2, style=dotted, color=green];
m44_41 -> m44_23  [key=2, style=dotted, color=green];
m44_41 -> m44_24  [key=2, style=dotted, color=green];
m44_41 -> m44_45  [key=1, style=dashed, color=green, label=anotherJobId];
m44_39 -> m44_40  [key=0, style=solid, color=green];
m44_39 -> m44_41  [key=1, style=dashed, color=green, label=SqlConnection];
m44_39 -> m44_42  [key=1, style=dashed, color=green, label=SqlConnection];
m44_39 -> m44_43  [key=1, style=dashed, color=green, label=SqlConnection];
m44_39 -> m44_45  [key=1, style=dashed, color=green, label=SqlConnection];
m44_42 -> m44_43  [key=0, style=solid, color=green];
m44_42 -> m44_25  [key=2, style=dotted, color=green];
m44_42 -> m44_49  [key=1, style=dashed, color=green, label="lambda expression"];
m44_50 -> m44_51  [key=0, style=solid, color=green];
m44_50 -> m44_52  [key=2, style=dotted, color=green];
m44_43 -> m44_44  [key=0, style=solid, color=green];
m44_43 -> m44_26  [key=2, style=dotted, color=green];
m44_45 -> m44_46  [key=0, style=solid, color=green];
m44_45 -> m44_26  [key=2, style=dotted, color=green];
m44_49 -> m44_50  [key=0, style=solid, color=green];
m44_44 -> m44_45  [key=0, style=solid, color=green];
m44_44 -> m44_29  [key=2, style=dotted, color=green];
m44_46 -> m44_47  [key=0, style=solid, color=green];
m44_46 -> m44_48  [key=2, style=dotted, color=green];
m44_51 -> m44_49  [key=0, style=bold, color=blue];
m44_47 -> m44_39  [key=0, style=bold, color=blue];
m44_58 -> m44_64  [key=1, style=dashed, color=green, label=jobId];
m44_58 -> m44_94  [key=1, style=dashed, color=green, label=jobId];
m44_58 -> m44_72  [key=1, style=dashed, color=green, label=jobId];
m44_58 -> m44_22  [key=2, style=dotted];
m44_58 -> m44_23  [key=2, style=dotted];
m44_58 -> m44_24  [key=2, style=dotted];
m44_58 -> m44_59  [key=0, style=solid];
m44_58 -> m44_65  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m44_59 -> m44_68  [key=1, style=dashed, color=green, label=anotherJobId];
m44_59 -> m44_60  [key=0, style=solid, color=green];
m44_59 -> m44_22  [key=2, style=dotted];
m44_59 -> m44_23  [key=2, style=dotted];
m44_59 -> m44_24  [key=2, style=dotted];
m44_57 -> m44_64  [key=1, style=dashed, color=green, label=SqlConnection];
m44_57 -> m44_68  [key=1, style=dashed, color=green, label=SqlConnection];
m44_57 -> m44_71  [key=1, style=dashed, color=green, label=SqlConnection];
m44_57 -> m44_58  [key=0, style=solid];
m44_57 -> m44_59  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m44_57 -> m44_65  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m44_64 -> m44_65  [key=0, style=solid, color=green];
m44_64 -> m44_25  [key=2, style=dotted, color=green];
m44_64 -> m44_93  [key=1, style=dashed, color=green, label="lambda expression"];
m44_60 -> m44_64  [key=1, style=dashed, color=green, label=state];
m44_60 -> m44_94  [key=1, style=dashed, color=green, label=state];
m44_60 -> m44_61  [key=0, style=solid, color=green];
m44_60 -> m44_78  [key=2, style=dotted, color=green];
m44_60 -> m44_62  [key=1, style=dashed, color=green, label=state];
m44_60 -> m44_63  [key=1, style=dashed, color=green, label=state];
m44_63 -> m44_64  [key=0, style=solid, color=green];
m44_63 -> m44_79  [key=2, style=dotted];
m44_63 -> m44_16  [key=2, style=dotted];
m44_63 -> m44_80  [key=2, style=dotted];
m44_63 -> m44_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_65 -> m44_26  [key=2, style=dotted];
m44_65 -> m44_66  [key=0, style=solid];
m44_65 -> m44_67  [key=1, style=dashed, color=darkseagreen4, label=job];
m44_93 -> m44_94  [key=0, style=solid, color=green];
m44_68 -> m44_69  [key=0, style=solid, color=green];
m44_68 -> m44_26  [key=2, style=dotted, color=green];
m44_68 -> m44_70  [key=1, style=dashed, color=green, label=anotherJob];
m44_67 -> m44_68  [key=0, style=solid, color=green];
m44_67 -> m44_48  [key=2, style=dotted];
m44_69 -> m44_70  [key=0, style=solid, color=green];
m44_69 -> m44_29  [key=2, style=dotted, color=green];
m44_70 -> m44_71  [key=0, style=solid, color=green];
m44_70 -> m44_29  [key=2, style=dotted, color=green];
m44_71 -> m44_72  [key=0, style=solid, color=green];
m44_71 -> m44_22  [key=2, style=dotted, color=green];
m44_71 -> m44_23  [key=2, style=dotted, color=green];
m44_71 -> m44_73  [key=1, style=dashed, color=green, label=jobState];
m44_71 -> m44_74  [key=1, style=dashed, color=green, label=jobState];
m44_71 -> m44_75  [key=1, style=dashed, color=green, label=jobState];
m44_71 -> m44_76  [key=1, style=dashed, color=green, label=jobState];
m44_72 -> m44_73  [key=0, style=solid, color=green];
m44_72 -> m44_24  [key=2, style=dotted, color=green];
m44_72 -> m44_82  [key=2, style=dotted, color=green];
m44_73 -> m44_74  [key=0, style=solid, color=green];
m44_73 -> m44_82  [key=2, style=dotted, color=green];
m44_74 -> m44_75  [key=0, style=solid, color=green];
m44_74 -> m44_82  [key=2, style=dotted, color=green];
m44_75 -> m44_48  [key=2, style=dotted];
m44_75 -> m44_76  [key=0, style=solid];
m44_76 -> m44_77  [key=0, style=solid];
m44_76 -> m44_82  [key=2, style=dotted];
m44_94 -> m44_95  [key=0, style=solid, color=green];
m44_94 -> m44_96  [key=2, style=dotted, color=green];
m44_95 -> m44_93  [key=0, style=bold, color=blue];
m44_61 -> m44_62  [key=0, style=solid, color=green];
m44_61 -> m44_79  [key=2, style=dotted];
m44_61 -> m44_80  [key=2, style=dotted];
m44_61 -> m44_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_62 -> m44_63  [key=0, style=solid, color=green];
m44_62 -> m44_79  [key=2, style=dotted, color=green];
m44_62 -> m44_80  [key=2, style=dotted, color=green];
m44_62 -> m44_86  [key=1, style=dashed, color=green, label="lambda expression"];
m44_86 -> m44_87  [key=0, style=solid, color=green];
m44_87 -> m44_88  [key=0, style=solid, color=green];
m44_88 -> m44_86  [key=0, style=bold, color=blue];
m44_102 -> m44_103  [key=0, style=solid, color=green];
m44_102 -> m44_22  [key=2, style=dotted, color=green];
m44_102 -> m44_23  [key=2, style=dotted, color=green];
m44_102 -> m44_24  [key=2, style=dotted, color=green];
m44_102 -> m44_107  [key=1, style=dashed, color=green, label=jobId];
m44_102 -> m44_128  [key=1, style=dashed, color=green, label=jobId];
m44_102 -> m44_108  [key=1, style=dashed, color=green, label=jobId];
m44_102 -> m44_112  [key=1, style=dashed, color=green, label=jobId];
m44_101 -> m44_102  [key=0, style=solid, color=green];
m44_101 -> m44_107  [key=1, style=dashed, color=green, label=SqlConnection];
m44_101 -> m44_108  [key=1, style=dashed, color=green, label=SqlConnection];
m44_101 -> m44_111  [key=1, style=dashed, color=green, label=SqlConnection];
m44_103 -> m44_107  [key=1, style=dashed, color=green, label=state];
m44_103 -> m44_104  [key=0, style=solid, color=green];
m44_103 -> m44_78  [key=2, style=dotted, color=green];
m44_103 -> m44_105  [key=1, style=dashed, color=green, label=state];
m44_103 -> m44_106  [key=1, style=dashed, color=green, label=state];
m44_103 -> m44_128  [key=1, style=dashed, color=green, label=state];
m44_107 -> m44_108  [key=0, style=solid, color=green];
m44_107 -> m44_25  [key=2, style=dotted, color=green];
m44_107 -> m44_127  [key=1, style=dashed, color=green, label="lambda expression"];
m44_128 -> m44_129  [key=0, style=solid, color=green];
m44_128 -> m44_130  [key=2, style=dotted, color=green];
m44_108 -> m44_109  [key=0, style=solid, color=green];
m44_108 -> m44_26  [key=2, style=dotted, color=green];
m44_108 -> m44_110  [key=1, style=dashed, color=green, label=job];
m44_112 -> m44_113  [key=0, style=solid, color=green];
m44_112 -> m44_24  [key=2, style=dotted, color=green];
m44_112 -> m44_82  [key=2, style=dotted, color=green];
m44_106 -> m44_107  [key=0, style=solid, color=green];
m44_106 -> m44_79  [key=2, style=dotted, color=green];
m44_106 -> m44_16  [key=2, style=dotted, color=green];
m44_106 -> m44_80  [key=2, style=dotted, color=green];
m44_106 -> m44_124  [key=1, style=dashed, color=green, label="lambda expression"];
m44_127 -> m44_128  [key=0, style=solid, color=green];
m44_109 -> m44_110  [key=0, style=solid, color=green];
m44_109 -> m44_29  [key=2, style=dotted, color=green];
m44_110 -> m44_111  [key=0, style=solid, color=green];
m44_110 -> m44_29  [key=2, style=dotted, color=green];
m44_111 -> m44_112  [key=0, style=solid, color=green];
m44_111 -> m44_22  [key=2, style=dotted, color=green];
m44_111 -> m44_23  [key=2, style=dotted, color=green];
m44_111 -> m44_113  [key=1, style=dashed, color=green, label=jobState];
m44_111 -> m44_114  [key=1, style=dashed, color=green, label=jobState];
m44_111 -> m44_115  [key=1, style=dashed, color=green, label=jobState];
m44_111 -> m44_116  [key=1, style=dashed, color=green, label=jobState];
m44_113 -> m44_114  [key=0, style=solid, color=green];
m44_113 -> m44_82  [key=2, style=dotted, color=green];
m44_114 -> m44_115  [key=0, style=solid, color=green];
m44_114 -> m44_82  [key=2, style=dotted, color=green];
m44_115 -> m44_116  [key=0, style=solid, color=green];
m44_115 -> m44_48  [key=2, style=dotted, color=green];
m44_116 -> m44_117  [key=0, style=solid, color=green];
m44_116 -> m44_82  [key=2, style=dotted, color=green];
m44_104 -> m44_105  [key=0, style=solid, color=green];
m44_104 -> m44_79  [key=2, style=dotted, color=green];
m44_104 -> m44_80  [key=2, style=dotted, color=green];
m44_104 -> m44_118  [key=1, style=dashed, color=green, label="lambda expression"];
m44_105 -> m44_106  [key=0, style=solid, color=green];
m44_105 -> m44_79  [key=2, style=dotted, color=green];
m44_105 -> m44_80  [key=2, style=dotted, color=green];
m44_105 -> m44_121  [key=1, style=dashed, color=green, label="lambda expression"];
m44_129 -> m44_127  [key=0, style=bold, color=blue];
m44_118 -> m44_119  [key=0, style=solid, color=green];
m44_121 -> m44_122  [key=0, style=solid, color=green];
m44_124 -> m44_125  [key=0, style=solid, color=green];
m44_117 -> m44_101  [key=0, style=bold, color=blue];
m44_119 -> m44_120  [key=0, style=solid, color=green];
m44_120 -> m44_118  [key=0, style=bold, color=blue];
m44_122 -> m44_123  [key=0, style=solid, color=green];
m44_123 -> m44_121  [key=0, style=bold, color=blue];
m44_125 -> m44_126  [key=0, style=solid, color=green];
m44_125 -> m44_92  [key=2, style=dotted, color=green];
m44_126 -> m44_124  [key=0, style=bold, color=blue];
m44_134 -> m44_135  [key=0, style=solid];
m44_134 -> m44_136  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m44_151 -> m44_153  [key=1, style=dashed, color=green, label=SqlConnection];
m44_151 -> m44_152  [key=0, style=solid];
m44_153 -> m44_154  [key=0, style=solid, color=green];
m44_153 -> m44_22  [key=2, style=dotted, color=green];
m44_153 -> m44_23  [key=2, style=dotted, color=green];
m44_153 -> m44_155  [key=1, style=dashed, color=green, label=record];
m44_153 -> m44_156  [key=1, style=dashed, color=green, label=record];
m44_152 -> m44_153  [key=0, style=solid, color=green];
m44_152 -> m44_25  [key=2, style=dotted];
m44_152 -> m44_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_154 -> m44_155  [key=0, style=solid, color=green];
m44_154 -> m44_82  [key=2, style=dotted, color=green];
m44_155 -> m44_156  [key=0, style=solid, color=green];
m44_155 -> m44_82  [key=2, style=dotted, color=green];
m44_156 -> m44_157  [key=0, style=solid, color=green];
m44_156 -> m44_82  [key=2, style=dotted, color=green];
m44_157 -> m44_151  [key=0, style=bold, color=blue];
m44_165 -> m44_166  [key=0, style=solid, color=green];
m44_165 -> m44_167  [key=1, style=dashed, color=green, label=SqlConnection];
m44_166 -> m44_167  [key=0, style=solid, color=green];
m44_166 -> m44_25  [key=2, style=dotted, color=green];
m44_166 -> m44_176  [key=1, style=dashed, color=green, label="lambda expression"];
m44_167 -> m44_168  [key=0, style=solid, color=green];
m44_167 -> m44_22  [key=2, style=dotted, color=green];
m44_167 -> m44_23  [key=2, style=dotted, color=green];
m44_167 -> m44_169  [key=1, style=dashed, color=green, label=record];
m44_167 -> m44_170  [key=1, style=dashed, color=green, label=record];
m44_167 -> m44_171  [key=1, style=dashed, color=green, label=record];
m44_176 -> m44_177  [key=0, style=solid, color=green];
m44_168 -> m44_169  [key=0, style=solid, color=green];
m44_168 -> m44_82  [key=2, style=dotted, color=green];
m44_169 -> m44_170  [key=0, style=solid, color=green];
m44_169 -> m44_82  [key=2, style=dotted, color=green];
m44_170 -> m44_171  [key=0, style=solid, color=green];
m44_170 -> m44_48  [key=2, style=dotted, color=green];
m44_171 -> m44_172  [key=0, style=solid, color=green];
m44_171 -> m44_173  [key=1, style=dashed, color=green, label=expireAt];
m44_172 -> m44_173  [key=0, style=solid, color=green];
m44_172 -> m44_175  [key=2, style=dotted, color=green];
m44_172 -> m44_28  [key=2, style=dotted, color=green];
m44_173 -> m44_174  [key=0, style=solid, color=green];
m44_173 -> m44_175  [key=2, style=dotted, color=green];
m44_173 -> m44_28  [key=2, style=dotted, color=green];
m44_174 -> m44_165  [key=0, style=bold, color=blue];
m44_177 -> m44_178  [key=0, style=solid, color=green];
m44_177 -> m44_33  [key=2, style=dotted, color=green];
m44_177 -> m44_179  [key=2, style=dotted, color=green];
m44_178 -> m44_176  [key=0, style=bold, color=blue];
m44_183 -> m44_184  [key=0, style=solid, color=green];
m44_183 -> m44_185  [key=1, style=dashed, color=green, label=SqlConnection];
m44_184 -> m44_185  [key=0, style=solid, color=green];
m44_184 -> m44_25  [key=2, style=dotted, color=green];
m44_184 -> m44_188  [key=1, style=dashed, color=green, label="lambda expression"];
m44_185 -> m44_186  [key=0, style=solid, color=green];
m44_185 -> m44_3  [key=2, style=dotted, color=green];
m44_185 -> m44_23  [key=2, style=dotted, color=green];
m44_188 -> m44_189  [key=0, style=solid, color=green];
m44_188 -> m44_190  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m44_186 -> m44_187  [key=0, style=solid, color=green];
m44_186 -> m44_82  [key=2, style=dotted, color=green];
m44_187 -> m44_183  [key=0, style=bold, color=blue];
m44_189 -> m44_190  [key=0, style=solid, color=green];
m44_189 -> m44_161  [key=2, style=dotted, color=green];
m44_190 -> m44_191  [key=0, style=solid, color=green];
m44_190 -> m44_161  [key=2, style=dotted, color=green];
m44_191 -> m44_188  [key=0, style=bold, color=blue];
m44_195 -> m44_196  [key=0, style=solid, color=green];
m44_195 -> m44_197  [key=1, style=dashed, color=green, label=SqlConnection];
m44_196 -> m44_197  [key=0, style=solid, color=green];
m44_196 -> m44_25  [key=2, style=dotted, color=green];
m44_196 -> m44_202  [key=1, style=dashed, color=green, label="lambda expression"];
m44_197 -> m44_198  [key=0, style=solid, color=green];
m44_197 -> m44_22  [key=2, style=dotted, color=green];
m44_197 -> m44_23  [key=2, style=dotted, color=green];
m44_197 -> m44_199  [key=1, style=dashed, color=green, label=record];
m44_197 -> m44_200  [key=1, style=dashed, color=green, label=record];
m44_202 -> m44_203  [key=0, style=solid, color=green];
m44_198 -> m44_199  [key=0, style=solid, color=green];
m44_198 -> m44_82  [key=2, style=dotted, color=green];
m44_199 -> m44_200  [key=0, style=solid, color=green];
m44_199 -> m44_82  [key=2, style=dotted, color=green];
m44_200 -> m44_201  [key=0, style=solid, color=green];
m44_200 -> m44_82  [key=2, style=dotted, color=green];
m44_201 -> m44_195  [key=0, style=bold, color=blue];
m44_203 -> m44_204  [key=0, style=solid, color=green];
m44_203 -> m44_205  [key=2, style=dotted, color=green];
m44_204 -> m44_202  [key=0, style=bold, color=blue];
m44_209 -> m44_210  [key=0, style=solid, color=green];
m44_209 -> m44_211  [key=1, style=dashed, color=green, label=SqlConnection];
m44_210 -> m44_211  [key=0, style=solid, color=green];
m44_210 -> m44_25  [key=2, style=dotted, color=green];
m44_210 -> m44_219  [key=1, style=dashed, color=green, label="lambda expression"];
m44_211 -> m44_212  [key=0, style=solid, color=green];
m44_211 -> m44_22  [key=2, style=dotted, color=green];
m44_211 -> m44_23  [key=2, style=dotted, color=green];
m44_211 -> m44_213  [key=1, style=dashed, color=green, label=record];
m44_211 -> m44_214  [key=1, style=dashed, color=green, label=record];
m44_211 -> m44_215  [key=1, style=dashed, color=green, label=record];
m44_219 -> m44_220  [key=0, style=solid, color=green];
m44_212 -> m44_213  [key=0, style=solid, color=green];
m44_212 -> m44_82  [key=2, style=dotted, color=green];
m44_213 -> m44_214  [key=0, style=solid, color=green];
m44_213 -> m44_82  [key=2, style=dotted, color=green];
m44_214 -> m44_215  [key=0, style=solid, color=green];
m44_214 -> m44_48  [key=2, style=dotted, color=green];
m44_215 -> m44_216  [key=0, style=solid, color=green];
m44_215 -> m44_217  [key=1, style=dashed, color=green, label=expireAt];
m44_216 -> m44_217  [key=0, style=solid, color=green];
m44_216 -> m44_175  [key=2, style=dotted, color=green];
m44_216 -> m44_28  [key=2, style=dotted, color=green];
m44_217 -> m44_218  [key=0, style=solid, color=green];
m44_217 -> m44_175  [key=2, style=dotted, color=green];
m44_217 -> m44_28  [key=2, style=dotted, color=green];
m44_218 -> m44_209  [key=0, style=bold, color=blue];
m44_220 -> m44_221  [key=0, style=solid, color=green];
m44_220 -> m44_33  [key=2, style=dotted, color=green];
m44_220 -> m44_222  [key=2, style=dotted, color=green];
m44_221 -> m44_219  [key=0, style=bold, color=blue];
m44_226 -> m44_227  [key=0, style=solid, color=green];
m44_226 -> m44_228  [key=1, style=dashed, color=green, label=SqlConnection];
m44_227 -> m44_228  [key=0, style=solid, color=green];
m44_227 -> m44_25  [key=2, style=dotted, color=green];
m44_227 -> m44_231  [key=1, style=dashed, color=green, label="lambda expression"];
m44_228 -> m44_229  [key=0, style=solid, color=green];
m44_228 -> m44_3  [key=2, style=dotted, color=green];
m44_228 -> m44_23  [key=2, style=dotted, color=green];
m44_231 -> m44_232  [key=0, style=solid, color=green];
m44_231 -> m44_233  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m44_229 -> m44_230  [key=0, style=solid, color=green];
m44_229 -> m44_82  [key=2, style=dotted, color=green];
m44_230 -> m44_226  [key=0, style=bold, color=blue];
m44_232 -> m44_233  [key=0, style=solid, color=green];
m44_232 -> m44_205  [key=2, style=dotted, color=green];
m44_233 -> m44_234  [key=0, style=solid, color=green];
m44_233 -> m44_205  [key=2, style=dotted, color=green];
m44_234 -> m44_231  [key=0, style=bold, color=blue];
m44_238 -> m44_239  [key=0, style=solid, color=green];
m44_238 -> m44_240  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m44_239 -> m44_240  [key=0, style=solid, color=green];
m44_239 -> m44_25  [key=2, style=dotted, color=green];
m44_239 -> m44_245  [key=1, style=dashed, color=green, label="lambda expression"];
m44_240 -> m44_241  [key=0, style=solid, color=green];
m44_240 -> m44_242  [key=1, style=dashed, color=green, label=record];
m44_240 -> m44_243  [key=1, style=dashed, color=green, label=record];
m44_240 -> m44_22  [key=2, style=dotted];
m44_240 -> m44_23  [key=2, style=dotted];
m44_245 -> m44_246  [key=0, style=solid, color=green];
m44_241 -> m44_242  [key=0, style=solid, color=green];
m44_241 -> m44_82  [key=2, style=dotted, color=green];
m44_242 -> m44_243  [key=0, style=solid, color=green];
m44_242 -> m44_82  [key=2, style=dotted, color=green];
m44_243 -> m44_244  [key=0, style=solid, color=green];
m44_243 -> m44_82  [key=2, style=dotted, color=green];
m44_244 -> m44_238  [key=0, style=bold, color=blue];
m44_246 -> m44_247  [key=0, style=solid, color=green];
m44_246 -> m44_248  [key=2, style=dotted, color=green];
m44_247 -> m44_245  [key=0, style=bold, color=blue];
m44_252 -> m44_253  [key=0, style=solid, color=green];
m44_252 -> m44_254  [key=1, style=dashed, color=green, label=SqlConnection];
m44_253 -> m44_254  [key=0, style=solid, color=green];
m44_253 -> m44_25  [key=2, style=dotted, color=green];
m44_253 -> m44_257  [key=1, style=dashed, color=green, label="lambda expression"];
m44_254 -> m44_255  [key=0, style=solid, color=green];
m44_254 -> m44_3  [key=2, style=dotted, color=green];
m44_254 -> m44_23  [key=2, style=dotted, color=green];
m44_257 -> m44_258  [key=0, style=solid, color=green];
m44_257 -> m44_259  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m44_255 -> m44_256  [key=0, style=solid, color=green];
m44_255 -> m44_82  [key=2, style=dotted, color=green];
m44_256 -> m44_252  [key=0, style=bold, color=blue];
m44_258 -> m44_259  [key=0, style=solid, color=green];
m44_258 -> m44_248  [key=2, style=dotted, color=green];
m44_259 -> m44_260  [key=0, style=solid, color=green];
m44_259 -> m44_248  [key=2, style=dotted, color=green];
m44_260 -> m44_257  [key=0, style=bold, color=blue];
m44_264 -> m44_265  [key=0, style=solid, color=green];
m44_264 -> m44_266  [key=1, style=dashed, color=green, label=SqlConnection];
m44_265 -> m44_266  [key=0, style=solid, color=green];
m44_265 -> m44_25  [key=2, style=dotted, color=green];
m44_265 -> m44_269  [key=1, style=dashed, color=green, label="lambda expression"];
m44_266 -> m44_267  [key=0, style=solid, color=green];
m44_266 -> m44_3  [key=2, style=dotted, color=green];
m44_266 -> m44_23  [key=2, style=dotted, color=green];
m44_269 -> m44_270  [key=0, style=solid, color=green];
m44_269 -> m44_271  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m44_267 -> m44_268  [key=0, style=solid, color=green];
m44_267 -> m44_82  [key=2, style=dotted, color=green];
m44_268 -> m44_264  [key=0, style=bold, color=blue];
m44_270 -> m44_271  [key=0, style=solid, color=green];
m44_270 -> m44_248  [key=2, style=dotted, color=green];
m44_271 -> m44_272  [key=0, style=solid, color=green];
m44_271 -> m44_248  [key=2, style=dotted, color=green];
m44_272 -> m44_269  [key=0, style=bold, color=blue];
m44_276 -> m44_277  [key=0, style=solid, color=green];
m44_276 -> m44_278  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m44_277 -> m44_278  [key=0, style=solid, color=green];
m44_277 -> m44_25  [key=2, style=dotted, color=green];
m44_277 -> m44_283  [key=1, style=dashed, color=green, label="lambda expression"];
m44_278 -> m44_279  [key=0, style=solid, color=green];
m44_278 -> m44_280  [key=1, style=dashed, color=green, label=record];
m44_278 -> m44_281  [key=1, style=dashed, color=green, label=record];
m44_278 -> m44_22  [key=2, style=dotted];
m44_278 -> m44_23  [key=2, style=dotted];
m44_283 -> m44_284  [key=0, style=solid, color=green];
m44_279 -> m44_280  [key=0, style=solid, color=green];
m44_279 -> m44_82  [key=2, style=dotted, color=green];
m44_280 -> m44_281  [key=0, style=solid, color=green];
m44_280 -> m44_82  [key=2, style=dotted, color=green];
m44_281 -> m44_282  [key=0, style=solid, color=green];
m44_281 -> m44_82  [key=2, style=dotted, color=green];
m44_282 -> m44_276  [key=0, style=bold, color=blue];
m44_284 -> m44_285  [key=0, style=solid, color=green];
m44_284 -> m44_286  [key=2, style=dotted, color=green];
m44_285 -> m44_283  [key=0, style=bold, color=blue];
m44_290 -> m44_291  [key=0, style=solid, color=green];
m44_290 -> m44_292  [key=1, style=dashed, color=green, label=SqlConnection];
m44_291 -> m44_292  [key=0, style=solid, color=green];
m44_291 -> m44_25  [key=2, style=dotted, color=green];
m44_291 -> m44_295  [key=1, style=dashed, color=green, label="lambda expression"];
m44_292 -> m44_293  [key=0, style=solid, color=green];
m44_292 -> m44_22  [key=2, style=dotted, color=green];
m44_292 -> m44_23  [key=2, style=dotted, color=green];
m44_295 -> m44_296  [key=0, style=solid, color=green];
m44_295 -> m44_297  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m44_293 -> m44_294  [key=0, style=solid, color=green];
m44_293 -> m44_82  [key=2, style=dotted, color=green];
m44_294 -> m44_290  [key=0, style=bold, color=blue];
m44_296 -> m44_297  [key=0, style=solid, color=green];
m44_296 -> m44_248  [key=2, style=dotted, color=green];
m44_297 -> m44_298  [key=0, style=solid, color=green];
m44_297 -> m44_286  [key=2, style=dotted, color=green];
m44_298 -> m44_295  [key=0, style=bold, color=blue];
m44_302 -> m44_303  [key=0, style=solid, color=green];
m44_302 -> m44_304  [key=1, style=dashed, color=green, label=SqlConnection];
m44_303 -> m44_304  [key=0, style=solid, color=green];
m44_303 -> m44_25  [key=2, style=dotted, color=green];
m44_303 -> m44_307  [key=1, style=dashed, color=green, label="lambda expression"];
m44_304 -> m44_305  [key=0, style=solid, color=green];
m44_304 -> m44_3  [key=2, style=dotted, color=green];
m44_304 -> m44_23  [key=2, style=dotted, color=green];
m44_307 -> m44_308  [key=0, style=solid, color=green];
m44_307 -> m44_309  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m44_305 -> m44_82  [key=2, style=dotted];
m44_305 -> m44_306  [key=0, style=solid];
m44_308 -> m44_309  [key=0, style=solid, color=green];
m44_308 -> m44_248  [key=2, style=dotted, color=green];
m44_309 -> m44_310  [key=0, style=solid, color=green];
m44_309 -> m44_311  [key=2, style=dotted, color=green];
m44_310 -> m44_307  [key=0, style=bold, color=blue];
m44_315 -> m44_316  [key=0, style=solid, color=green];
m44_315 -> m44_317  [key=1, style=dashed, color=green, label=SqlConnection];
m44_316 -> m44_317  [key=0, style=solid, color=green];
m44_316 -> m44_25  [key=2, style=dotted, color=green];
m44_316 -> m44_320  [key=1, style=dashed, color=green, label="lambda expression"];
m44_317 -> m44_318  [key=0, style=solid, color=green];
m44_317 -> m44_3  [key=2, style=dotted, color=green];
m44_317 -> m44_23  [key=2, style=dotted, color=green];
m44_320 -> m44_321  [key=0, style=solid, color=green];
m44_320 -> m44_322  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m44_318 -> m44_319  [key=0, style=solid, color=green];
m44_318 -> m44_82  [key=2, style=dotted, color=green];
m44_319 -> m44_315  [key=0, style=bold, color=blue];
m44_321 -> m44_322  [key=0, style=solid, color=green];
m44_321 -> m44_248  [key=2, style=dotted, color=green];
m44_322 -> m44_323  [key=0, style=solid, color=green];
m44_322 -> m44_311  [key=2, style=dotted, color=green];
m44_323 -> m44_320  [key=0, style=bold, color=blue];
m44_327 -> m44_328  [key=0, style=solid, color=green];
m44_327 -> m44_329  [key=1, style=dashed, color=green, label=SqlConnection];
m44_328 -> m44_329  [key=0, style=solid, color=green];
m44_328 -> m44_25  [key=2, style=dotted, color=green];
m44_328 -> m44_332  [key=1, style=dashed, color=green, label="lambda expression"];
m44_329 -> m44_330  [key=0, style=solid, color=green];
m44_329 -> m44_3  [key=2, style=dotted, color=green];
m44_329 -> m44_23  [key=2, style=dotted, color=green];
m44_332 -> m44_333  [key=0, style=solid, color=green];
m44_332 -> m44_334  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m44_330 -> m44_331  [key=0, style=solid, color=green];
m44_330 -> m44_82  [key=2, style=dotted, color=green];
m44_331 -> m44_327  [key=0, style=bold, color=blue];
m44_333 -> m44_334  [key=0, style=solid, color=green];
m44_333 -> m44_248  [key=2, style=dotted, color=green];
m44_334 -> m44_335  [key=0, style=solid, color=green];
m44_334 -> m44_311  [key=2, style=dotted, color=green];
m44_335 -> m44_332  [key=0, style=bold, color=blue];
m44_339 -> m44_340  [key=0, style=solid, color=green];
m44_339 -> m44_341  [key=1, style=dashed, color=green, label=SqlConnection];
m44_340 -> m44_341  [key=0, style=solid, color=green];
m44_340 -> m44_25  [key=2, style=dotted, color=green];
m44_340 -> m44_345  [key=1, style=dashed, color=green, label="lambda expression"];
m44_341 -> m44_342  [key=0, style=solid, color=green];
m44_341 -> m44_22  [key=2, style=dotted, color=green];
m44_341 -> m44_23  [key=2, style=dotted, color=green];
m44_341 -> m44_343  [key=1, style=dashed, color=green, label=record];
m44_345 -> m44_346  [key=0, style=solid, color=green];
m44_342 -> m44_343  [key=0, style=solid, color=green];
m44_342 -> m44_82  [key=2, style=dotted, color=green];
m44_343 -> m44_344  [key=0, style=solid, color=green];
m44_343 -> m44_82  [key=2, style=dotted, color=green];
m44_344 -> m44_339  [key=0, style=bold, color=blue];
m44_346 -> m44_347  [key=0, style=solid, color=green];
m44_346 -> m44_348  [key=2, style=dotted, color=green];
m44_347 -> m44_345  [key=0, style=bold, color=blue];
m44_352 -> m44_353  [key=0, style=solid, color=green];
m44_352 -> m44_354  [key=1, style=dashed, color=green, label=SqlConnection];
m44_353 -> m44_354  [key=0, style=solid, color=green];
m44_353 -> m44_25  [key=2, style=dotted, color=green];
m44_353 -> m44_357  [key=1, style=dashed, color=green, label="lambda expression"];
m44_354 -> m44_355  [key=0, style=solid, color=green];
m44_354 -> m44_3  [key=2, style=dotted, color=green];
m44_354 -> m44_23  [key=2, style=dotted, color=green];
m44_357 -> m44_358  [key=0, style=solid, color=green];
m44_357 -> m44_359  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m44_355 -> m44_356  [key=0, style=solid, color=green];
m44_355 -> m44_82  [key=2, style=dotted, color=green];
m44_356 -> m44_352  [key=0, style=bold, color=blue];
m44_358 -> m44_359  [key=0, style=solid, color=green];
m44_358 -> m44_348  [key=2, style=dotted, color=green];
m44_359 -> m44_360  [key=0, style=solid, color=green];
m44_359 -> m44_348  [key=2, style=dotted, color=green];
m44_360 -> m44_357  [key=0, style=bold, color=blue];
m44_364 -> m44_365  [key=0, style=solid, color=green];
m44_364 -> m44_366  [key=1, style=dashed, color=green, label=SqlConnection];
m44_365 -> m44_366  [key=0, style=solid, color=green];
m44_365 -> m44_25  [key=2, style=dotted, color=green];
m44_365 -> m44_369  [key=1, style=dashed, color=green, label="lambda expression"];
m44_366 -> m44_367  [key=0, style=solid, color=green];
m44_366 -> m44_3  [key=2, style=dotted, color=green];
m44_366 -> m44_23  [key=2, style=dotted, color=green];
m44_369 -> m44_370  [key=0, style=solid, color=green];
m44_369 -> m44_371  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m44_369 -> m44_372  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m44_367 -> m44_368  [key=0, style=solid, color=green];
m44_367 -> m44_82  [key=2, style=dotted, color=green];
m44_368 -> m44_364  [key=0, style=bold, color=blue];
m44_370 -> m44_371  [key=0, style=solid, color=green];
m44_370 -> m44_348  [key=2, style=dotted, color=green];
m44_371 -> m44_372  [key=0, style=solid, color=green];
m44_371 -> m44_348  [key=2, style=dotted, color=green];
m44_372 -> m44_373  [key=0, style=solid, color=green];
m44_372 -> m44_374  [key=2, style=dotted, color=green];
m44_373 -> m44_369  [key=0, style=bold, color=blue];
m44_380 -> m44_3  [key=2, style=dotted];
m44_380 -> m44_23  [key=2, style=dotted];
m44_380 -> m44_381  [key=0, style=solid];
m44_392 -> m44_3  [key=2, style=dotted];
m44_392 -> m44_23  [key=2, style=dotted];
m44_392 -> m44_393  [key=0, style=solid];
m44_423 -> m44_3  [key=2, style=dotted];
m44_423 -> m44_23  [key=2, style=dotted];
m44_423 -> m44_424  [key=0, style=solid];
m44_437 -> m44_3  [key=2, style=dotted];
m44_437 -> m44_23  [key=2, style=dotted];
m44_437 -> m44_438  [key=0, style=solid];
m44_449 -> m44_3  [key=2, style=dotted];
m44_449 -> m44_23  [key=2, style=dotted];
m44_449 -> m44_450  [key=0, style=solid];
m44_461 -> m44_3  [key=2, style=dotted];
m44_461 -> m44_23  [key=2, style=dotted];
m44_461 -> m44_462  [key=0, style=solid];
m44_135 -> m44_25  [key=2, style=dotted];
m44_135 -> m44_136  [key=0, style=solid];
m44_135 -> m44_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_379 -> m44_25  [key=2, style=dotted];
m44_379 -> m44_380  [key=0, style=solid];
m44_379 -> m44_383  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_391 -> m44_25  [key=2, style=dotted];
m44_391 -> m44_392  [key=0, style=solid];
m44_391 -> m44_395  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_403 -> m44_25  [key=2, style=dotted];
m44_403 -> m44_404  [key=0, style=solid];
m44_403 -> m44_410  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_422 -> m44_25  [key=2, style=dotted];
m44_422 -> m44_423  [key=0, style=solid];
m44_422 -> m44_426  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_436 -> m44_25  [key=2, style=dotted];
m44_436 -> m44_437  [key=0, style=solid];
m44_436 -> m44_440  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_448 -> m44_25  [key=2, style=dotted];
m44_448 -> m44_449  [key=0, style=solid];
m44_448 -> m44_452  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_460 -> m44_25  [key=2, style=dotted];
m44_460 -> m44_461  [key=0, style=solid];
m44_460 -> m44_464  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_136 -> m44_22  [key=2, style=dotted];
m44_136 -> m44_23  [key=2, style=dotted];
m44_136 -> m44_137  [key=0, style=solid];
m44_136 -> m44_138  [key=1, style=dashed, color=darkseagreen4, label=record];
m44_136 -> m44_139  [key=1, style=dashed, color=darkseagreen4, label=record];
m44_404 -> m44_22  [key=2, style=dotted];
m44_404 -> m44_405  [key=0, style=solid];
m44_404 -> m44_409  [key=2, style=dotted];
m44_404 -> m44_406  [key=1, style=dashed, color=darkseagreen4, label=records];
m44_404 -> m44_407  [key=1, style=dashed, color=darkseagreen4, label=records];
m44_137 -> m44_24  [key=2, style=dotted];
m44_137 -> m44_82  [key=2, style=dotted];
m44_137 -> m44_138  [key=0, style=solid];
m44_139 -> m44_29  [key=2, style=dotted];
m44_139 -> m44_140  [key=0, style=solid];
m44_77 -> m44_57  [key=0, style=bold, color=blue];
m44_89 -> m44_90  [key=0, style=solid];
m44_66 -> m44_67  [key=0, style=solid];
m44_66 -> m44_82  [key=2, style=dotted];
m44_138 -> m44_82  [key=2, style=dotted];
m44_138 -> m44_139  [key=0, style=solid];
m44_381 -> m44_82  [key=2, style=dotted];
m44_381 -> m44_382  [key=0, style=solid];
m44_393 -> m44_82  [key=2, style=dotted];
m44_393 -> m44_394  [key=0, style=solid];
m44_405 -> m44_82  [key=2, style=dotted];
m44_405 -> m44_406  [key=0, style=solid];
m44_406 -> m44_82  [key=2, style=dotted];
m44_406 -> m44_407  [key=0, style=solid];
m44_407 -> m44_82  [key=2, style=dotted];
m44_407 -> m44_408  [key=0, style=solid];
m44_424 -> m44_82  [key=2, style=dotted];
m44_424 -> m44_425  [key=0, style=solid];
m44_438 -> m44_82  [key=2, style=dotted];
m44_438 -> m44_439  [key=0, style=solid];
m44_450 -> m44_82  [key=2, style=dotted];
m44_450 -> m44_451  [key=0, style=solid];
m44_462 -> m44_82  [key=2, style=dotted];
m44_462 -> m44_463  [key=0, style=solid];
m44_83 -> m44_84  [key=0, style=solid];
m44_90 -> m44_92  [key=2, style=dotted];
m44_90 -> m44_91  [key=0, style=solid];
m44_140 -> m44_134  [key=0, style=bold, color=blue];
m44_158 -> m44_159  [key=0, style=solid];
m44_159 -> m44_161  [key=2, style=dotted];
m44_159 -> m44_160  [key=0, style=solid];
m44_306 -> m44_302  [key=0, style=bold, color=blue];
m44_384 -> m44_348  [key=2, style=dotted];
m44_384 -> m44_385  [key=0, style=solid];
m44_396 -> m44_348  [key=2, style=dotted];
m44_396 -> m44_397  [key=0, style=solid];
m44_411 -> m44_348  [key=2, style=dotted];
m44_411 -> m44_412  [key=0, style=solid];
m44_412 -> m44_348  [key=2, style=dotted];
m44_412 -> m44_413  [key=0, style=solid];
m44_413 -> m44_348  [key=2, style=dotted];
m44_413 -> m44_414  [key=0, style=solid];
m44_414 -> m44_348  [key=2, style=dotted];
m44_414 -> m44_415  [key=0, style=solid];
m44_427 -> m44_348  [key=2, style=dotted];
m44_427 -> m44_428  [key=0, style=solid];
m44_428 -> m44_348  [key=2, style=dotted];
m44_428 -> m44_429  [key=0, style=solid];
m44_429 -> m44_348  [key=2, style=dotted];
m44_429 -> m44_430  [key=0, style=solid];
m44_441 -> m44_348  [key=2, style=dotted];
m44_441 -> m44_442  [key=0, style=solid];
m44_453 -> m44_348  [key=2, style=dotted];
m44_453 -> m44_454  [key=0, style=solid];
m44_465 -> m44_348  [key=2, style=dotted];
m44_465 -> m44_466  [key=0, style=solid];
m44_385 -> m44_374  [key=2, style=dotted];
m44_385 -> m44_386  [key=0, style=solid];
m44_397 -> m44_374  [key=2, style=dotted];
m44_397 -> m44_398  [key=0, style=solid];
m44_378 -> m44_380  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m44_378 -> m44_379  [key=0, style=solid];
m44_390 -> m44_392  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m44_390 -> m44_391  [key=0, style=solid];
m44_421 -> m44_423  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m44_421 -> m44_422  [key=0, style=solid];
m44_435 -> m44_437  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m44_435 -> m44_436  [key=0, style=solid];
m44_447 -> m44_449  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m44_447 -> m44_448  [key=0, style=solid];
m44_459 -> m44_461  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m44_459 -> m44_460  [key=0, style=solid];
m44_141 -> m44_142  [key=0, style=solid];
m44_383 -> m44_384  [key=0, style=solid];
m44_383 -> m44_385  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m44_395 -> m44_396  [key=0, style=solid];
m44_395 -> m44_397  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m44_402 -> m44_403  [key=0, style=solid];
m44_402 -> m44_404  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m44_410 -> m44_411  [key=0, style=solid];
m44_410 -> m44_412  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m44_410 -> m44_413  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m44_410 -> m44_414  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m44_410 -> m44_415  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m44_426 -> m44_427  [key=0, style=solid];
m44_426 -> m44_428  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m44_426 -> m44_429  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m44_426 -> m44_430  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m44_440 -> m44_441  [key=0, style=solid];
m44_440 -> m44_442  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m44_452 -> m44_453  [key=0, style=solid];
m44_452 -> m44_454  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m44_91 -> m44_89  [key=0, style=bold, color=blue];
m44_382 -> m44_378  [key=0, style=bold, color=blue];
m44_394 -> m44_390  [key=0, style=bold, color=blue];
m44_408 -> m44_402  [key=0, style=bold, color=blue];
m44_425 -> m44_421  [key=0, style=bold, color=blue];
m44_439 -> m44_435  [key=0, style=bold, color=blue];
m44_451 -> m44_447  [key=0, style=bold, color=blue];
m44_463 -> m44_459  [key=0, style=bold, color=blue];
m44_85 -> m44_83  [key=0, style=bold, color=blue];
m44_84 -> m44_85  [key=0, style=solid];
m44_160 -> m44_158  [key=0, style=bold, color=blue];
m44_415 -> m44_416  [key=0, style=solid];
m44_415 -> m44_417  [key=2, style=dotted];
m44_430 -> m44_431  [key=0, style=solid];
m44_430 -> m44_417  [key=2, style=dotted];
m44_442 -> m44_443  [key=0, style=solid];
m44_442 -> m44_417  [key=2, style=dotted];
m44_454 -> m44_455  [key=0, style=solid];
m44_454 -> m44_417  [key=2, style=dotted];
m44_466 -> m44_467  [key=0, style=solid];
m44_466 -> m44_417  [key=2, style=dotted];
m44_386 -> m44_383  [key=0, style=bold, color=blue];
m44_398 -> m44_395  [key=0, style=bold, color=blue];
m44_143 -> m44_141  [key=0, style=bold, color=blue];
m44_142 -> m44_143  [key=0, style=solid];
m44_142 -> m44_144  [key=2, style=dotted];
m44_416 -> m44_410  [key=0, style=bold, color=blue];
m44_431 -> m44_426  [key=0, style=bold, color=blue];
m44_443 -> m44_440  [key=0, style=bold, color=blue];
m44_455 -> m44_452  [key=0, style=bold, color=blue];
m44_467 -> m44_464  [key=0, style=bold, color=blue];
m44_312 -> m44_313  [key=0, style=solid, color=green];
m44_313 -> m44_314  [key=0, style=solid, color=green];
m44_313 -> m44_12  [key=2, style=dotted, color=green];
m44_313 -> m44_315  [key=1, style=dashed, color=green, label="lambda expression"];
m44_314 -> m44_312  [key=0, style=bold, color=blue];
m44_261 -> m44_262  [key=0, style=solid, color=green];
m44_262 -> m44_263  [key=0, style=solid, color=green];
m44_262 -> m44_12  [key=2, style=dotted, color=green];
m44_262 -> m44_264  [key=1, style=dashed, color=green, label="lambda expression"];
m44_263 -> m44_261  [key=0, style=bold, color=blue];
m44_468 -> m44_470  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection>"];
m44_468 -> m44_469  [key=0, style=solid];
m44_470 -> m44_473  [key=2, style=dotted];
m44_470 -> m44_471  [key=0, style=solid];
m44_469 -> m44_470  [key=0, style=solid];
m44_469 -> m44_472  [key=2, style=dotted];
m44_471 -> m44_468  [key=0, style=bold, color=blue];
m44_7 -> m44_14  [key=0, style=solid, color=red];
m44_7 -> m44_15  [key=2, style=dotted, color=red];
m44_456 -> m44_457  [key=0, style=solid];
m44_457 -> m44_12  [key=2, style=dotted];
m44_457 -> m44_458  [key=0, style=solid];
m44_457 -> m44_459  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_458 -> m44_456  [key=0, style=bold, color=blue];
m44_8 -> m44_9  [key=0, style=solid, color=red];
m44_8 -> m44_10  [key=0, style=solid, color=red];
m44_9 -> m44_10  [key=0, style=solid, color=green];
m44_9 -> m44_14  [key=1, style=dashed, color=green, label=arrangeSql];
m44_9 -> m44_15  [key=1, style=dashed, color=green, label=arrangeSql];
m44_10 -> m44_11  [key=0, style=solid, color=red];
m44_10 -> m44_12  [key=2, style=dotted, color=green];
m44_10 -> m44_13  [key=1, style=dashed, color=green, label="lambda expression"];
m44_11 -> m44_8  [key=0, style=bold, color=blue];
m44_11 -> m44_12  [key=0, style=solid, color=red];
m44_53 -> m44_54  [key=0, style=solid, color=green];
m44_54 -> m44_55  [key=0, style=solid, color=green];
m44_54 -> m44_58  [key=1, style=dashed, color=green, label=arrangeSql];
m44_54 -> m44_59  [key=1, style=dashed, color=green, label=arrangeSql];
m44_55 -> m44_56  [key=0, style=solid, color=green];
m44_55 -> m44_12  [key=2, style=dotted, color=green];
m44_55 -> m44_57  [key=1, style=dashed, color=green, label="lambda expression"];
m44_56 -> m44_53  [key=0, style=bold, color=blue];
m44_349 -> m44_350  [key=0, style=solid, color=green];
m44_350 -> m44_351  [key=0, style=solid, color=green];
m44_350 -> m44_12  [key=2, style=dotted, color=green];
m44_350 -> m44_352  [key=1, style=dashed, color=green, label="lambda expression"];
m44_351 -> m44_349  [key=0, style=bold, color=blue];
m44_418 -> m44_419  [key=0, style=solid];
m44_419 -> m44_12  [key=2, style=dotted];
m44_419 -> m44_420  [key=0, style=solid];
m44_419 -> m44_421  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_420 -> m44_418  [key=0, style=bold, color=blue];
m44_249 -> m44_250  [key=0, style=solid, color=green];
m44_250 -> m44_251  [key=0, style=solid, color=green];
m44_250 -> m44_12  [key=2, style=dotted, color=green];
m44_250 -> m44_252  [key=1, style=dashed, color=green, label="lambda expression"];
m44_251 -> m44_249  [key=0, style=bold, color=blue];
m44_287 -> m44_288  [key=0, style=solid, color=green];
m44_288 -> m44_289  [key=0, style=solid, color=green];
m44_288 -> m44_12  [key=2, style=dotted, color=green];
m44_288 -> m44_290  [key=1, style=dashed, color=green, label="lambda expression"];
m44_289 -> m44_287  [key=0, style=bold, color=blue];
m44_336 -> m44_337  [key=0, style=solid, color=green];
m44_337 -> m44_338  [key=0, style=solid, color=green];
m44_337 -> m44_12  [key=2, style=dotted, color=green];
m44_337 -> m44_339  [key=1, style=dashed, color=green, label="lambda expression"];
m44_338 -> m44_336  [key=0, style=bold, color=blue];
m44_192 -> m44_193  [key=0, style=solid, color=green];
m44_193 -> m44_194  [key=0, style=solid, color=green];
m44_193 -> m44_12  [key=2, style=dotted, color=green];
m44_193 -> m44_195  [key=1, style=dashed, color=green, label="lambda expression"];
m44_194 -> m44_192  [key=0, style=bold, color=blue];
m44_479 -> m44_10  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_16  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_17  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_19  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_37  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_42  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_43  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_45  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_55  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_64  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_68  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_99  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_107  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_108  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_132  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_149  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_163  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_166  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_181  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_184  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_193  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_196  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_207  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_210  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_224  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_227  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_236  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_239  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_250  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_253  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_262  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_265  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_274  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_277  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_288  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_291  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_300  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_303  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_313  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_316  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_325  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_328  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_337  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_340  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_350  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_353  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_362  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_365  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_135  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_152  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_376  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_379  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_388  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_391  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_400  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_403  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_419  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_422  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_433  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_436  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_445  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_448  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_457  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_479 -> m44_460  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.WriteTransactionFacts"];
m44_480 -> m44_14  [key=1, style=dashed, color=green, label=arrangeSql];
m44_480 -> m44_15  [key=1, style=dashed, color=green, label=arrangeSql];
m44_481 -> m44_31  [key=1, style=dashed, color=green, label=jobId];
m44_482 -> m44_40  [key=1, style=dashed, color=green, label=arrangeSql];
m44_482 -> m44_41  [key=1, style=dashed, color=green, label=arrangeSql];
m44_483 -> m44_50  [key=1, style=dashed, color=green, label=jobId];
m44_485 -> m44_94  [key=1, style=dashed, color=green, label=jobId];
m44_486 -> m44_94  [key=1, style=dashed, color=green, label=state];
m44_487 -> m44_102  [key=1, style=dashed, color=green, label=arrangeSql];
m44_488 -> m44_128  [key=1, style=dashed, color=green, label=jobId];
m44_489 -> m44_128  [key=1, style=dashed, color=green, label=state];
m44_484 -> m44_58  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m44_484 -> m44_59  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m46_0 -> m46_1  [key=0, style=solid];
m46_1 -> m46_2  [key=0, style=solid];
m46_2 -> m46_0  [key=0, style=bold, color=blue];
m46_3 -> m46_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_0 -> m47_1  [key=0, style=solid];
m47_1 -> m47_2  [key=0, style=solid];
m47_1 -> m47_35  [key=2, style=dotted];
m47_2 -> m47_3  [key=0, style=solid];
m47_2 -> m47_35  [key=2, style=dotted];
m47_3 -> m47_4  [key=0, style=solid];
m47_3 -> m47_31  [key=0, style=solid];
m47_4 -> m47_5  [key=0, style=solid];
m47_4 -> m47_35  [key=2, style=dotted];
m47_31 -> m47_32  [key=0, style=solid];
m47_31 -> m47_35  [key=2, style=dotted];
m47_5 -> m47_6  [key=0, style=solid];
m47_5 -> m47_29  [key=0, style=solid];
m47_5 -> m47_9  [key=1, style=dashed, color=darkseagreen4, label=page];
m47_5 -> m47_11  [key=1, style=dashed, color=darkseagreen4, label=page];
m47_5 -> m47_13  [key=1, style=dashed, color=darkseagreen4, label=page];
m47_5 -> m47_17  [key=1, style=dashed, color=darkseagreen4, label=page];
m47_5 -> m47_19  [key=1, style=dashed, color=darkseagreen4, label=page];
m47_5 -> m47_23  [key=1, style=dashed, color=darkseagreen4, label=page];
m47_5 -> m47_25  [key=1, style=dashed, color=darkseagreen4, label=page];
m47_6 -> m47_7  [key=0, style=solid];
m47_6 -> m47_15  [key=0, style=solid];
m47_6 -> m47_21  [key=0, style=solid];
m47_6 -> m47_27  [key=0, style=solid];
m47_29 -> m47_30  [key=0, style=solid];
m47_29 -> m47_35  [key=2, style=dotted];
m47_9 -> m47_10  [key=0, style=solid];
m47_9 -> m47_36  [key=2, style=dotted];
m47_9 -> m47_37  [key=2, style=dotted];
m47_11 -> m47_12  [key=0, style=solid];
m47_11 -> m47_37  [key=2, style=dotted];
m47_13 -> m47_14  [key=0, style=solid];
m47_13 -> m47_37  [key=2, style=dotted];
m47_17 -> m47_18  [key=0, style=solid];
m47_17 -> m47_36  [key=2, style=dotted];
m47_17 -> m47_37  [key=2, style=dotted];
m47_19 -> m47_20  [key=0, style=solid];
m47_19 -> m47_37  [key=2, style=dotted];
m47_23 -> m47_24  [key=0, style=solid];
m47_23 -> m47_36  [key=2, style=dotted];
m47_23 -> m47_37  [key=2, style=dotted];
m47_25 -> m47_26  [key=0, style=solid];
m47_25 -> m47_37  [key=2, style=dotted];
m47_7 -> m47_8  [key=0, style=solid];
m47_15 -> m47_16  [key=0, style=solid];
m47_21 -> m47_22  [key=0, style=solid];
m47_27 -> m47_28  [key=0, style=solid];
m47_8 -> m47_9  [key=0, style=solid];
m47_8 -> m47_35  [key=2, style=dotted];
m47_10 -> m47_11  [key=0, style=solid];
m47_10 -> m47_35  [key=2, style=dotted];
m47_12 -> m47_13  [key=0, style=solid];
m47_12 -> m47_35  [key=2, style=dotted];
m47_14 -> m47_5  [key=0, style=solid];
m47_14 -> m47_35  [key=2, style=dotted];
m47_16 -> m47_17  [key=0, style=solid];
m47_16 -> m47_35  [key=2, style=dotted];
m47_18 -> m47_19  [key=0, style=solid];
m47_18 -> m47_35  [key=2, style=dotted];
m47_20 -> m47_5  [key=0, style=solid];
m47_20 -> m47_35  [key=2, style=dotted];
m47_22 -> m47_23  [key=0, style=solid];
m47_22 -> m47_35  [key=2, style=dotted];
m47_24 -> m47_25  [key=0, style=solid];
m47_24 -> m47_35  [key=2, style=dotted];
m47_26 -> m47_5  [key=0, style=solid];
m47_26 -> m47_35  [key=2, style=dotted];
m47_28 -> m47_5  [key=0, style=solid];
m47_28 -> m47_35  [key=2, style=dotted];
m47_30 -> m47_31  [key=0, style=solid];
m47_30 -> m47_35  [key=2, style=dotted];
m47_32 -> m47_33  [key=0, style=solid];
m47_32 -> m47_37  [key=2, style=dotted];
m47_33 -> m47_34  [key=0, style=solid];
m47_33 -> m47_35  [key=2, style=dotted];
m47_34 -> m47_0  [key=0, style=bold, color=blue];
m47_38 -> m47_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m47_38 -> m47_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.Paginator"];
m48_0 -> m48_1  [key=0, style=solid];
m48_1 -> m48_2  [key=0, style=solid];
m48_2 -> m48_0  [key=0, style=bold, color=blue];
m48_3 -> m48_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.PerPageSelector"];
m49_14 -> m49_15  [key=0, style=solid];
m49_56 -> m49_57  [key=0, style=solid];
m49_61 -> m49_8  [key=2, style=dotted];
m49_61 -> m49_62  [key=0, style=solid];
m49_61 -> m49_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_59 -> m49_31  [key=2, style=dotted];
m49_59 -> m49_60  [key=0, style=solid];
m49_58 -> m49_29  [key=2, style=dotted];
m49_58 -> m49_59  [key=0, style=solid];
m49_60 -> m49_61  [key=0, style=solid];
m49_60 -> m49_64  [key=2, style=dotted];
m49_62 -> m49_9  [key=2, style=dotted];
m49_62 -> m49_63  [key=0, style=solid];
m49_57 -> m49_58  [key=0, style=solid];
m49_57 -> m49_40  [key=2, style=dotted];
m49_63 -> m49_56  [key=0, style=bold, color=blue];
m49_41 -> m49_42  [key=0, style=solid];
m49_44 -> m49_45  [key=0, style=solid, color=green];
m49_44 -> m49_8  [key=2, style=dotted, color=green];
m49_44 -> m49_47  [key=1, style=dashed, color=green, label="lambda expression"];
m49_42 -> m49_44  [key=1, style=dashed, color=green, label=queue];
m49_42 -> m49_48  [key=1, style=dashed, color=green, label=queue];
m49_42 -> m49_43  [key=0, style=solid];
m49_42 -> m49_29  [key=2, style=dotted];
m49_43 -> m49_44  [key=0, style=solid, color=green];
m49_43 -> m49_48  [key=1, style=dashed, color=green, label=token];
m49_43 -> m49_46  [key=2, style=dotted];
m49_45 -> m49_41  [key=0, style=bold, color=blue];
m49_9 -> m49_10  [key=0, style=solid];
m49_9 -> m49_14  [key=2, style=dotted];
m49_3 -> m49_4  [key=0, style=solid];
m49_3 -> m49_11  [key=0, style=solid];
m49_3 -> m49_5  [key=1, style=dashed, color=darkseagreen4, label=count];
m49_3 -> m49_7  [key=1, style=dashed, color=darkseagreen4, label=count];
m49_3 -> m49_9  [key=1, style=dashed, color=darkseagreen4, label=count];
m49_4 -> m49_5  [key=0, style=solid];
m49_4 -> m49_13  [key=2, style=dotted];
m49_5 -> m49_8  [key=2, style=dotted];
m49_5 -> m49_6  [key=0, style=solid];
m49_5 -> m49_10  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_5 -> m49_14  [key=2, style=dotted];
m49_6 -> m49_9  [key=2, style=dotted];
m49_6 -> m49_7  [key=0, style=solid];
m49_6 -> m49_13  [key=2, style=dotted];
m49_7 -> m49_4  [key=0, style=bold, color=blue];
m49_7 -> m49_8  [key=0, style=solid];
m49_7 -> m49_15  [key=2, style=dotted];
m49_7 -> m49_14  [key=2, style=dotted];
m49_8 -> m49_9  [key=0, style=solid];
m49_8 -> m49_13  [key=2, style=dotted];
m49_70 -> m49_71  [key=0, style=solid];
m49_74 -> m49_32  [key=2, style=dotted];
m49_74 -> m49_75  [key=0, style=solid];
m49_75 -> m49_8  [key=2, style=dotted];
m49_75 -> m49_76  [key=0, style=solid];
m49_75 -> m49_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_73 -> m49_31  [key=2, style=dotted];
m49_73 -> m49_74  [key=0, style=solid];
m49_72 -> m49_29  [key=2, style=dotted];
m49_72 -> m49_73  [key=0, style=solid];
m49_76 -> m49_9  [key=2, style=dotted];
m49_76 -> m49_77  [key=0, style=solid];
m49_71 -> m49_72  [key=0, style=solid];
m49_71 -> m49_40  [key=2, style=dotted];
m49_77 -> m49_70  [key=0, style=bold, color=blue];
m49_50 -> m49_51  [key=0, style=solid];
m49_53 -> m49_31  [key=2, style=dotted];
m49_53 -> m49_54  [key=0, style=solid];
m49_52 -> m49_29  [key=2, style=dotted];
m49_52 -> m49_53  [key=0, style=solid];
m49_54 -> m49_9  [key=2, style=dotted];
m49_54 -> m49_55  [key=0, style=solid];
m49_51 -> m49_52  [key=0, style=solid];
m49_51 -> m49_40  [key=2, style=dotted];
m49_55 -> m49_50  [key=0, style=bold, color=blue];
m49_0 -> m49_1  [key=0, style=solid];
m49_1 -> m49_2  [key=0, style=solid];
m49_1 -> m49_3  [key=2, style=dotted];
m49_1 -> m49_13  [key=2, style=dotted];
m49_2 -> m49_0  [key=0, style=bold, color=blue];
m49_2 -> m49_3  [key=0, style=solid];
m49_2 -> m49_13  [key=2, style=dotted];
m49_33 -> m49_34  [key=0, style=solid];
m49_37 -> m49_32  [key=2, style=dotted];
m49_37 -> m49_38  [key=0, style=solid];
m49_36 -> m49_31  [key=2, style=dotted];
m49_36 -> m49_37  [key=0, style=solid];
m49_36 -> m49_38  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m49_38 -> m49_9  [key=2, style=dotted];
m49_38 -> m49_39  [key=0, style=solid];
m49_35 -> m49_29  [key=2, style=dotted];
m49_35 -> m49_36  [key=0, style=solid];
m49_34 -> m49_35  [key=0, style=solid];
m49_34 -> m49_40  [key=2, style=dotted];
m49_39 -> m49_33  [key=0, style=bold, color=blue];
m49_15 -> m49_8  [key=2, style=dotted];
m49_15 -> m49_16  [key=0, style=solid];
m49_15 -> m49_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_11 -> m49_12  [key=0, style=solid];
m49_11 -> m49_13  [key=2, style=dotted];
m49_10 -> m49_3  [key=0, style=solid];
m49_10 -> m49_13  [key=2, style=dotted];
m49_10 -> m49_11  [key=0, style=solid];
m49_12 -> m49_0  [key=0, style=bold, color=blue];
m49_12 -> m49_10  [key=0, style=bold, color=blue];
m49_78 -> m49_79  [key=0, style=solid];
m49_47 -> m49_48  [key=0, style=solid, color=green];
m49_48 -> m49_49  [key=0, style=solid, color=green];
m49_48 -> m49_31  [key=2, style=dotted, color=green];
m49_49 -> m49_47  [key=0, style=bold, color=blue];
m49_18 -> m49_19  [key=0, style=solid];
m49_65 -> m49_66  [key=0, style=solid];
m49_20 -> m49_18  [key=0, style=bold, color=blue];
m49_19 -> m49_20  [key=0, style=solid];
m49_19 -> m49_13  [key=2, style=dotted];
m49_67 -> m49_65  [key=0, style=bold, color=blue];
m49_66 -> m49_67  [key=0, style=solid];
m49_66 -> m49_68  [key=2, style=dotted];
m49_66 -> m49_69  [key=2, style=dotted];
m49_79 -> m49_80  [key=0, style=solid];
m49_79 -> m49_68  [key=2, style=dotted];
m49_79 -> m49_69  [key=2, style=dotted];
m49_80 -> m49_78  [key=0, style=bold, color=blue];
m49_16 -> m49_9  [key=2, style=dotted];
m49_16 -> m49_17  [key=0, style=solid];
m49_16 -> m49_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.PerPageSelector"];
m49_16 -> m49_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.PerPageSelector"];
m49_16 -> m49_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.PerPageSelector"];
m49_16 -> m49_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.PerPageSelector"];
m49_16 -> m49_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.PerPageSelector"];
m49_16 -> m49_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.PerPageSelector"];
m49_16 -> m49_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.PerPageSelector"];
m49_16 -> m49_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.PerPageSelector"];
m49_16 -> m49_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.PerPageSelector"];
m49_17 -> m49_14  [key=0, style=bold, color=blue];
m49_90 -> m49_91  [key=0, style=solid];
m49_93 -> m49_31  [key=2, style=dotted];
m49_93 -> m49_94  [key=0, style=solid];
m49_95 -> m49_31  [key=2, style=dotted];
m49_95 -> m49_96  [key=0, style=solid];
m49_92 -> m49_29  [key=2, style=dotted];
m49_92 -> m49_93  [key=0, style=solid];
m49_92 -> m49_95  [key=1, style=dashed, color=darkseagreen4, label=queue];
m49_94 -> m49_95  [key=0, style=solid];
m49_94 -> m49_89  [key=2, style=dotted];
m49_96 -> m49_9  [key=2, style=dotted];
m49_96 -> m49_97  [key=0, style=solid];
m49_91 -> m49_92  [key=0, style=solid];
m49_91 -> m49_40  [key=2, style=dotted];
m49_97 -> m49_90  [key=0, style=bold, color=blue];
m49_81 -> m49_82  [key=0, style=solid];
m49_84 -> m49_31  [key=2, style=dotted];
m49_84 -> m49_85  [key=0, style=solid];
m49_83 -> m49_29  [key=2, style=dotted];
m49_83 -> m49_84  [key=0, style=solid];
m49_85 -> m49_86  [key=0, style=solid];
m49_85 -> m49_89  [key=2, style=dotted];
m49_87 -> m49_9  [key=2, style=dotted];
m49_87 -> m49_88  [key=0, style=solid];
m49_82 -> m49_83  [key=0, style=solid];
m49_82 -> m49_40  [key=2, style=dotted];
m49_86 -> m49_87  [key=0, style=solid];
m49_86 -> m49_68  [key=2, style=dotted];
m49_86 -> m49_69  [key=2, style=dotted];
m49_88 -> m49_81  [key=0, style=bold, color=blue];
m49_21 -> m49_22  [key=0, style=solid];
m49_25 -> m49_26  [key=0, style=solid, color=green];
m49_25 -> m49_32  [key=2, style=dotted, color=green];
m49_24 -> m49_25  [key=0, style=solid, color=green];
m49_24 -> m49_31  [key=2, style=dotted];
m49_24 -> m49_26  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m49_26 -> m49_27  [key=0, style=solid];
m49_22 -> m49_24  [key=1, style=dashed, color=darkseagreen4, label=queue];
m49_22 -> m49_23  [key=0, style=solid];
m49_22 -> m49_29  [key=2, style=dotted];
m49_23 -> m49_24  [key=0, style=solid];
m49_23 -> m49_30  [key=2, style=dotted];
m49_27 -> m49_28  [key=0, style=solid];
m49_27 -> m49_9  [key=2, style=dotted];
m49_28 -> m49_21  [key=0, style=bold, color=blue];
m49_99 -> m49_48  [key=1, style=dashed, color=green, label=queue];
m49_100 -> m49_48  [key=1, style=dashed, color=green, label=token];
m49_98 -> m49_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts"];
m49_98 -> m49_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts"];
m49_98 -> m49_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts"];
m49_98 -> m49_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts"];
m49_98 -> m49_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts"];
m49_98 -> m49_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts"];
m49_98 -> m49_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts"];
m49_98 -> m49_93  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts"];
m49_98 -> m49_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts"];
}
