digraph  {
n18 [label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", span=""];
n0 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="13-13"];
n1 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", label="queues == null", span="15-15"];
n3 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", label="configureAction == null", span="16-16"];
n5 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", label="_jobQueue = new RabbitMqJobQueue(queues, configureAction)", span="18-18"];
n6 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", label="_monitoringApi = new RabbitMqMonitoringApi(configureAction, queues.ToArray())", span="19-19"];
n2 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", label="throw new ArgumentNullException(''queues'');", span="15-15"];
n4 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", label="throw new ArgumentNullException(''configureAction'');", span="16-16"];
n9 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="21-21"];
n7 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="13-13"];
n8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n10 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqMonitoringApi.RabbitMqMonitoringApi(ConnectionFactory, params string[])", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqMonitoringApi.RabbitMqMonitoringApi(ConnectionFactory, params string[])", span="15-15"];
n11 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
n12 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue()", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue()", span="22-22"];
n13 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue()", label="return _jobQueue;", span="24-24"];
n14 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue()", label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue()", span="22-22"];
n15 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi()", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi()", span="27-27"];
n16 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi()", label="return _monitoringApi;", span="29-29"];
n17 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi()", label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi()", span="27-27"];
m1_2 [cluster="HangFire.Server.IServerComponentRunner.Stop()", file="IServerComponentRunner.cs", label="Entry HangFire.Server.IServerComponentRunner.Stop()", span="23-23"];
m1_3 [cluster="HangFire.Server.IServerComponentRunner.Stop()", file="IServerComponentRunner.cs", label="Exit HangFire.Server.IServerComponentRunner.Stop()", span="23-23"];
m1_0 [cluster="HangFire.Server.IServerComponentRunner.Start()", file="IServerComponentRunner.cs", label="Entry HangFire.Server.IServerComponentRunner.Start()", span="22-22"];
m1_1 [cluster="HangFire.Server.IServerComponentRunner.Start()", file="IServerComponentRunner.cs", label="Exit HangFire.Server.IServerComponentRunner.Start()", span="22-22"];
m2_0 [cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue()", file="IStorageConnection.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue()", span="20-20"];
m2_1 [cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue()", file="IStorageConnection.cs", label="Exit Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue()", span="20-20"];
m2_2 [cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi()", file="IStorageConnection.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi()", span="21-21"];
m2_3 [cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi()", file="IStorageConnection.cs", label="Exit Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi()", span="21-21"];
m3_8 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", color=green, community=0, file="ProcessingJob.cs", label="JobId = jobId", prediction=0, span="32-32"];
m3_0 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="ProcessingJob.cs", label="Entry HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", span="24-24"];
m3_1 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="ProcessingJob.cs", label="connection == null", span="26-26"];
m3_3 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", color=green, community=0, file="ProcessingJob.cs", label="jobId == null", prediction=1, span="27-27"];
m3_5 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="ProcessingJob.cs", label="queue == null", span="28-28"];
m3_6 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="ProcessingJob.cs", label="throw new ArgumentNullException(''queue'');", span="28-28"];
m3_2 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="ProcessingJob.cs", label="throw new ArgumentNullException(''connection'');", span="26-26"];
m3_4 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", color=green, community=0, file="ProcessingJob.cs", label="throw new ArgumentNullException(''jobId'');", prediction=2, span="27-27"];
m3_7 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="ProcessingJob.cs", label="_connection = connection", span="30-30"];
m3_12 [cluster="HangFire.Storage.ProcessingJob.Dispose()", file="ProcessingJob.cs", label="Entry HangFire.Storage.ProcessingJob.Dispose()", span="39-39"];
m3_13 [cluster="HangFire.Storage.ProcessingJob.Dispose()", color=green, community=0, file="ProcessingJob.cs", label="_connection.DeleteJobFromQueue(JobId, Queue)", prediction=3, span="41-41"];
m3_14 [cluster="HangFire.Storage.ProcessingJob.Dispose()", file="ProcessingJob.cs", label="Exit HangFire.Storage.ProcessingJob.Dispose()", span="39-39"];
m3_9 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="ProcessingJob.cs", label="HangFire.Storage.ProcessingJob", span=""];
m3_10 [cluster="HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="ProcessingJob.cs", label="Exit HangFire.Storage.ProcessingJob.RedisProcessingJob(HangFire.Storage.IStorageConnection, string, string)", span="24-24"];
m3_15 [cluster="HangFire.Storage.IStorageConnection.DeleteJobFromQueue(string, string)", file="ProcessingJob.cs", label="Entry HangFire.Storage.IStorageConnection.DeleteJobFromQueue(string, string)", span="31-31"];
m3_16 [file="ProcessingJob.cs", label="HangFire.Storage.ProcessingJob", span=""];
m4_0 [cluster="HangFire.QueueAttribute.QueueAttribute(string)", file="ProcessingJobFacts.cs", label="Entry HangFire.QueueAttribute.QueueAttribute(string)", span="53-53"];
m4_1 [cluster="HangFire.QueueAttribute.QueueAttribute(string)", file="ProcessingJobFacts.cs", label="Name = name", span="55-55"];
m4_2 [cluster="HangFire.QueueAttribute.QueueAttribute(string)", file="ProcessingJobFacts.cs", label="Exit HangFire.QueueAttribute.QueueAttribute(string)", span="53-53"];
m4_3 [file="ProcessingJobFacts.cs", label="HangFire.QueueAttribute", span=""];
m5_0 [cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", file="RedisConnection.cs", label="Entry HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", span="6-6"];
m5_1 [cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", file="RedisConnection.cs", label="Canceled = canceled", span="12-12"];
m5_2 [cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", file="RedisConnection.cs", label="Exception = exception", span="13-13"];
m5_3 [cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", file="RedisConnection.cs", label="Exit HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", span="6-6"];
m5_4 [file="RedisConnection.cs", label="HangFire.Filters.PerformedContext", span=""];
m8_26 [cluster="System.Collections.Generic.List<T>.GetEnumerator()", file="ServerComponentRunnerCollection.cs", label="Entry System.Collections.Generic.List<T>.GetEnumerator()", span="0-0"];
m8_47 [cluster="HangFire.Server.ServerComponentRunnerCollection.Remove(HangFire.Server.IServerComponentRunner)", file="ServerComponentRunnerCollection.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Remove(HangFire.Server.IServerComponentRunner)", span="92-92"];
m8_49 [cluster="HangFire.Server.ServerComponentRunnerCollection.Remove(HangFire.Server.IServerComponentRunner)", file="ServerComponentRunnerCollection.cs", label="Exit HangFire.Server.ServerComponentRunnerCollection.Remove(HangFire.Server.IServerComponentRunner)", span="92-92"];
m8_6 [cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="ServerComponentRunnerCollection.cs", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m8_50 [cluster="System.Collections.Generic.List<T>.Remove(T)", file="ServerComponentRunnerCollection.cs", label="Entry System.Collections.Generic.List<T>.Remove(T)", span="0-0"];
m8_43 [cluster="HangFire.Server.ServerComponentRunnerCollection.CopyTo(HangFire.Server.IServerComponentRunner[], int)", file="ServerComponentRunnerCollection.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.CopyTo(HangFire.Server.IServerComponentRunner[], int)", span="87-87"];
m8_45 [cluster="HangFire.Server.ServerComponentRunnerCollection.CopyTo(HangFire.Server.IServerComponentRunner[], int)", file="ServerComponentRunnerCollection.cs", label="Exit HangFire.Server.ServerComponentRunnerCollection.CopyTo(HangFire.Server.IServerComponentRunner[], int)", span="87-87"];
m8_12 [cluster="HangFire.Server.ServerComponentRunnerCollection.Stop()", file="ServerComponentRunnerCollection.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Stop()", span="44-44"];
m8_15 [cluster="HangFire.Server.ServerComponentRunnerCollection.Stop()", file="ServerComponentRunnerCollection.cs", label="Exit HangFire.Server.ServerComponentRunnerCollection.Stop()", span="44-44"];
m8_27 [cluster="HangFire.Server.ServerComponentRunnerCollection.System.Collections.IEnumerable.GetEnumerator()", file="ServerComponentRunnerCollection.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.System.Collections.IEnumerable.GetEnumerator()", span="67-67"];
m8_29 [cluster="HangFire.Server.ServerComponentRunnerCollection.System.Collections.IEnumerable.GetEnumerator()", file="ServerComponentRunnerCollection.cs", label="Exit HangFire.Server.ServerComponentRunnerCollection.System.Collections.IEnumerable.GetEnumerator()", span="67-67"];
m8_30 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="ServerComponentRunnerCollection.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m8_11 [cluster="HangFire.Server.IServerComponentRunner.Start()", file="ServerComponentRunnerCollection.cs", label="Entry HangFire.Server.IServerComponentRunner.Start()", span="22-22"];
m8_42 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="ServerComponentRunnerCollection.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m8_39 [cluster="HangFire.Server.ServerComponentRunnerCollection.Contains(HangFire.Server.IServerComponentRunner)", file="ServerComponentRunnerCollection.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Contains(HangFire.Server.IServerComponentRunner)", span="82-82"];
m8_41 [cluster="HangFire.Server.ServerComponentRunnerCollection.Contains(HangFire.Server.IServerComponentRunner)", file="ServerComponentRunnerCollection.cs", label="Exit HangFire.Server.ServerComponentRunnerCollection.Contains(HangFire.Server.IServerComponentRunner)", span="82-82"];
m8_16 [cluster="HangFire.Server.IServerComponentRunner.Stop()", file="ServerComponentRunnerCollection.cs", label="Entry HangFire.Server.IServerComponentRunner.Stop()", span="23-23"];
m8_7 [cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", file="ServerComponentRunnerCollection.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Start()", span="36-36"];
m8_10 [cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", file="ServerComponentRunnerCollection.cs", label="Exit HangFire.Server.ServerComponentRunnerCollection.Start()", span="36-36"];
m8_31 [cluster="HangFire.Server.ServerComponentRunnerCollection.Add(HangFire.Server.IServerComponentRunner)", file="ServerComponentRunnerCollection.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Add(HangFire.Server.IServerComponentRunner)", span="72-72"];
m8_33 [cluster="HangFire.Server.ServerComponentRunnerCollection.Add(HangFire.Server.IServerComponentRunner)", file="ServerComponentRunnerCollection.cs", label="Exit HangFire.Server.ServerComponentRunnerCollection.Add(HangFire.Server.IServerComponentRunner)", span="72-72"];
m8_35 [cluster="HangFire.Server.ServerComponentRunnerCollection.Clear()", file="ServerComponentRunnerCollection.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Clear()", span="77-77"];
m8_37 [cluster="HangFire.Server.ServerComponentRunnerCollection.Clear()", file="ServerComponentRunnerCollection.cs", label="Exit HangFire.Server.ServerComponentRunnerCollection.Clear()", span="77-77"];
m8_0 [cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="ServerComponentRunnerCollection.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26"];
m8_4 [cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="ServerComponentRunnerCollection.cs", label="Exit HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26"];
m8_34 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ServerComponentRunnerCollection.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m8_17 [cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="ServerComponentRunnerCollection.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Dispose()", span="52-52"];
m8_18 [cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="ServerComponentRunnerCollection.cs", label="Stop()", span="54-54"];
m8_21 [cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="ServerComponentRunnerCollection.cs", label="Exit HangFire.Server.ServerComponentRunnerCollection.Dispose()", span="52-52"];
m8_22 [cluster="System.IDisposable.Dispose()", file="ServerComponentRunnerCollection.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m8_23 [cluster="HangFire.Server.ServerComponentRunnerCollection.GetEnumerator()", file="ServerComponentRunnerCollection.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.GetEnumerator()", span="62-62"];
m8_25 [cluster="HangFire.Server.ServerComponentRunnerCollection.GetEnumerator()", file="ServerComponentRunnerCollection.cs", label="Exit HangFire.Server.ServerComponentRunnerCollection.GetEnumerator()", span="62-62"];
m8_46 [cluster="System.Collections.Generic.List<T>.CopyTo(T[], int)", file="ServerComponentRunnerCollection.cs", label="Entry System.Collections.Generic.List<T>.CopyTo(T[], int)", span="0-0"];
m8_38 [cluster="System.Collections.Generic.List<T>.Clear()", file="ServerComponentRunnerCollection.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m8_51 [file="ServerComponentRunnerCollection.cs", label="HangFire.Server.ServerComponentRunnerCollection", span=""];
m9_0 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="6-6"];
m9_1 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="ServerComponentRunnerCollectionFacts.cs", label="Items = context.Items", span="9-9"];
m9_2 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="6-6"];
m9_7 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ServerComponentRunnerCollectionFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m9_3 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", file="ServerComponentRunnerCollectionFacts.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12"];
m9_5 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", file="ServerComponentRunnerCollectionFacts.cs", label="Items = new Dictionary<string, object>()", span="15-15"];
m9_6 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", file="ServerComponentRunnerCollectionFacts.cs", label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12"];
m9_8 [file="ServerComponentRunnerCollectionFacts.cs", label="HangFire.Client.CreateContext", span=""];
m10_179 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Component_ReturnsUnderlyingComponent()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Component_ReturnsUnderlyingComponent()", span="228-228"];
m10_182 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Component_ReturnsUnderlyingComponent()", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Component_ReturnsUnderlyingComponent()", span="228-228"];
m10_212 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Dispose()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Dispose()", span="276-276"];
m10_213 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Dispose()", file="ServerComponentRunnerFacts.cs", label="Disposed = true", span="278-278"];
m10_214 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Dispose()", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Dispose()", span="276-276"];
m10_183 [cluster="Unk.Same", file="ServerComponentRunnerFacts.cs", label="Entry Unk.Same", span=""];
m10_38 [cluster="System.TimeSpan.FromMilliseconds(double)", file="ServerComponentRunnerFacts.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m10_11 [cluster="Unk.Equal", file="ServerComponentRunnerFacts.cs", label="Entry Unk.Equal", span=""];
m10_51 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_LeadsToLoopedComponentExecution()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_LeadsToLoopedComponentExecution()", span="67-67"];
m10_54 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_LeadsToLoopedComponentExecution()", file="ServerComponentRunnerFacts.cs", label="Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="72-72"];
m10_55 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_LeadsToLoopedComponentExecution()", file="ServerComponentRunnerFacts.cs", label="_component.Verify(\r\n                x => x.Execute(It.IsNotNull<CancellationToken>()),\r\n                Times.AtLeast(2))", span="74-76"];
m10_56 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_LeadsToLoopedComponentExecution()", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_LeadsToLoopedComponentExecution()", span="67-67"];
m10_131 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", span="163-163"];
m10_136 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", span="163-163"];
m10_0 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.ServerComponentRunnerFacts()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.ServerComponentRunnerFacts()", span="13-13"];
m10_1 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.ServerComponentRunnerFacts()", file="ServerComponentRunnerFacts.cs", label="_component = new Mock<IServerComponent>()", span="15-15"];
m10_3 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.ServerComponentRunnerFacts()", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.ServerComponentRunnerFacts()", span="13-13"];
m10_27 [cluster="Unk.DoesNotThrow", file="ServerComponentRunnerFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m10_137 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", span="173-173"];
m10_138 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="ServerComponentRunnerFacts.cs", label="_options.MaxRetryAttempts = 0", span="176-176"];
m10_139 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="ServerComponentRunnerFacts.cs", label="var component = new DisposableComponent()", span="178-178"];
m10_145 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="ServerComponentRunnerFacts.cs", label="Assert.True(component.Disposed)", span="189-189"];
m10_142 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="ServerComponentRunnerFacts.cs", label="Thread.Sleep(100)", span="182-182"];
m10_144 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="ServerComponentRunnerFacts.cs", label="Thread.Sleep(500)", span="186-186"];
m10_146 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", span="173-173"];
m10_100 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", span="121-121"];
m10_101 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="ServerComponentRunnerFacts.cs", label="int timesExecuted = 0", span="124-124"];
m10_103 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="ServerComponentRunnerFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                .Callback(() => { timesExecuted++; Thread.Yield(); })", span="127-128"];
m10_106 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="ServerComponentRunnerFacts.cs", label="Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="132-132"];
m10_107 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="ServerComponentRunnerFacts.cs", label="timesExecuted = 0", span="133-133"];
m10_110 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="ServerComponentRunnerFacts.cs", label="Assert.True(timesExecuted > 0)", span="140-140"];
m10_109 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="ServerComponentRunnerFacts.cs", label="Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="137-137"];
m10_111 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", span="121-121"];
m10_149 [cluster="System.Threading.Thread.Sleep(int)", file="ServerComponentRunnerFacts.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m10_37 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.CreateRunner()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.CreateRunner()", span="260-260"];
m10_200 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.CreateRunner()", file="ServerComponentRunnerFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                .Callback(() => Thread.Yield())", span="262-263"];
m10_202 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.CreateRunner()", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.CreateRunner()", span="260-260"];
m10_10 [cluster="Unk.>", file="ServerComponentRunnerFacts.cs", label="Entry Unk.>", span=""];
m10_193 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", span="252-252"];
m10_194 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="ServerComponentRunnerFacts.cs", label="CalledTimes++", span="254-254"];
m10_195 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="ServerComponentRunnerFacts.cs", label="token.WaitHandle.WaitOne(Timeout.Infinite)", span="255-255"];
m10_196 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="ServerComponentRunnerFacts.cs", label="token.ThrowIfCancellationRequested()", span="256-256"];
m10_197 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", span="252-252"];
m10_192 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent.WaitingComponent()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent.WaitingComponent()", span="248-248"];
m10_83 [cluster="HangFire.Server.ServerComponentRunner.Stop()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Server.ServerComponentRunner.Stop()", span="70-70"];
m10_165 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", span="213-213"];
m10_167 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="ServerComponentRunnerFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="216-216"];
m10_169 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="ServerComponentRunnerFacts.cs", label="Thread.Sleep(5000)", span="219-219"];
m10_171 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="ServerComponentRunnerFacts.cs", label="_component.Verify(x => x.Execute(\r\n                It.IsAny<CancellationToken>()),\r\n                Times.AtLeast(2))", span="222-224"];
m10_172 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", span="213-213"];
m10_120 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", span="144-144"];
m10_125 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", span="144-144"];
m10_62 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", span="80-80"];
m10_66 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", span="80-80"];
m10_39 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="ServerComponentRunnerFacts.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m10_92 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", span="112-112"];
m10_96 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", span="112-112"];
m10_184 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", span="236-236"];
m10_185 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", file="ServerComponentRunnerFacts.cs", label="var component = new WaitingComponent()", span="238-238"];
m10_190 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", file="ServerComponentRunnerFacts.cs", label="Assert.Equal(1, component.CalledTimes)", span="245-245"];
m10_188 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", file="ServerComponentRunnerFacts.cs", label="Thread.Sleep(500)", span="242-242"];
m10_191 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", span="236-236"];
m10_126 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", span="154-154"];
m10_130 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", span="154-154"];
m10_199 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="ServerComponentRunnerFacts.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m10_23 [cluster="ServerComponentRunner.cstr", file="ServerComponentRunnerFacts.cs", label="Entry ServerComponentRunner.cstr", span=""];
m10_16 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="32-32"];
m10_18 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ServerComponentRunnerFacts.cs", label="Assert.Equal(''options'', exception.ParamName)", span="37-37"];
m10_19 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="32-32"];
m10_40 [cluster="HangFire.Server.ServerComponentRunner.Dispose()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Server.ServerComponentRunner.Dispose()", span="84-84"];
m10_81 [cluster="Unk.Setup", file="ServerComponentRunnerFacts.cs", label="Entry Unk.Setup", span=""];
m10_57 [cluster="HangFire.Server.ServerComponentRunner.Start()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Server.ServerComponentRunner.Start()", span="61-61"];
m10_31 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_OnJustCreatedRunner_DoNotLeadToComponentExecution()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_OnJustCreatedRunner_DoNotLeadToComponentExecution()", span="47-47"];
m10_33 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_OnJustCreatedRunner_DoNotLeadToComponentExecution()", file="ServerComponentRunnerFacts.cs", label="Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="50-50"];
m10_35 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_OnJustCreatedRunner_DoNotLeadToComponentExecution()", file="ServerComponentRunnerFacts.cs", label="_component.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Never)", span="54-54"];
m10_36 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_OnJustCreatedRunner_DoNotLeadToComponentExecution()", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_OnJustCreatedRunner_DoNotLeadToComponentExecution()", span="47-47"];
m10_46 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalledMultipleTimes()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalledMultipleTimes()", span="58-58"];
m10_50 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalledMultipleTimes()", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalledMultipleTimes()", span="58-58"];
m10_148 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", span="41-41"];
m10_91 [cluster="System.Threading.Thread.Yield()", file="ServerComponentRunnerFacts.cs", label="Entry System.Threading.Thread.Yield()", span="0-0"];
m10_4 [cluster="Mock<IServerComponent>.cstr", file="ServerComponentRunnerFacts.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m10_206 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Entry lambda expression", span="263-263"];
m10_12 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Entry lambda expression", span="26-26"];
m10_14 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Exit lambda expression", span="26-26"];
m10_20 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Entry lambda expression", span="35-35"];
m10_22 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Exit lambda expression", span="35-35"];
m10_28 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Entry lambda expression", span="43-43"];
m10_30 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Exit lambda expression", span="43-43"];
m10_42 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Entry lambda expression", span="54-54"];
m10_43 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="54-54"];
m10_44 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Exit lambda expression", span="54-54"];
m10_59 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Entry lambda expression", span="75-75"];
m10_60 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="x.Execute(It.IsNotNull<CancellationToken>())", span="75-75"];
m10_61 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Exit lambda expression", span="75-75"];
m10_67 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Entry lambda expression", span="85-85"];
m10_69 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Exit lambda expression", span="85-85"];
m10_84 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Entry lambda expression", span="95-95"];
m10_87 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Entry lambda expression", span="96-96"];
m10_88 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="timesExecuted++", span="96-96"];
m10_85 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="95-95"];
m10_86 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Exit lambda expression", span="95-95"];
m10_89 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Thread.Yield()", span="96-96"];
m10_90 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Exit lambda expression", span="96-96"];
m10_97 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Entry lambda expression", span="117-117"];
m10_99 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Exit lambda expression", span="117-117"];
m10_113 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Entry lambda expression", span="127-127"];
m10_116 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Entry lambda expression", span="128-128"];
m10_117 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="timesExecuted++", span="128-128"];
m10_114 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="127-127"];
m10_115 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Exit lambda expression", span="127-127"];
m10_118 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Thread.Yield()", span="128-128"];
m10_119 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Exit lambda expression", span="128-128"];
m10_159 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Entry lambda expression", span="199-199"];
m10_162 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Entry lambda expression", span="208-208"];
m10_160 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="199-199"];
m10_161 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Exit lambda expression", span="199-199"];
m10_163 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="208-208"];
m10_164 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Exit lambda expression", span="208-208"];
m10_173 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Entry lambda expression", span="216-216"];
m10_176 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Entry lambda expression", span="222-223"];
m10_174 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="216-216"];
m10_175 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Exit lambda expression", span="216-216"];
m10_177 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="x.Execute(\r\n                It.IsAny<CancellationToken>())", span="222-223"];
m10_178 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Exit lambda expression", span="222-223"];
m10_203 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Entry lambda expression", span="262-262"];
m10_204 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="262-262"];
m10_205 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Exit lambda expression", span="262-262"];
m10_207 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Thread.Yield()", span="263-263"];
m10_208 [cluster="lambda expression", file="ServerComponentRunnerFacts.cs", label="Exit lambda expression", span="263-263"];
m10_6 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", span="23-23"];
m10_8 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", file="ServerComponentRunnerFacts.cs", label="Assert.Equal(''component'', exception.ParamName)", span="28-28"];
m10_9 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", span="23-23"];
m10_58 [cluster="Unk.AtLeast", file="ServerComponentRunnerFacts.cs", label="Entry Unk.AtLeast", span=""];
m10_24 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", span="41-41"];
m10_26 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", span="41-41"];
m10_209 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", span="271-271"];
m10_210 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", file="ServerComponentRunnerFacts.cs", label="Thread.Yield()", span="273-273"];
m10_211 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", span="271-271"];
m10_147 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.DisposableComponent()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.DisposableComponent()", span="267-267"];
m10_112 [cluster="Unk.True", file="ServerComponentRunnerFacts.cs", label="Entry Unk.True", span=""];
m10_45 [cluster="Unk.Execute", file="ServerComponentRunnerFacts.cs", label="Entry Unk.Execute", span=""];
m10_70 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", span="89-89"];
m10_71 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="ServerComponentRunnerFacts.cs", label="int timesExecuted = 0", span="92-92"];
m10_73 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="ServerComponentRunnerFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                .Callback(() => { timesExecuted++; Thread.Yield(); })", span="95-96"];
m10_76 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="ServerComponentRunnerFacts.cs", label="Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="102-102"];
m10_77 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="ServerComponentRunnerFacts.cs", label="timesExecuted = 0", span="103-103"];
m10_78 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="ServerComponentRunnerFacts.cs", label="Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="105-105"];
m10_79 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="ServerComponentRunnerFacts.cs", label="Assert.Equal(0, timesExecuted)", span="108-108"];
m10_80 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", span="89-89"];
m10_82 [cluster="Unk.Callback", file="ServerComponentRunnerFacts.cs", label="Entry Unk.Callback", span=""];
m10_5 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="25-25"];
m10_198 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="ServerComponentRunnerFacts.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m10_15 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", span="36-36"];
m10_41 [cluster="Unk.Verify", file="ServerComponentRunnerFacts.cs", label="Entry Unk.Verify", span=""];
m10_150 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="ServerComponentRunnerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", span="193-193"];
m10_151 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="ServerComponentRunnerFacts.cs", label="_options.MaxRetryAttempts = 0", span="196-196"];
m10_153 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="ServerComponentRunnerFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="199-199"];
m10_155 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="ServerComponentRunnerFacts.cs", label="Thread.Sleep(500)", span="202-202"];
m10_157 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="ServerComponentRunnerFacts.cs", label="_component.Verify(\r\n                x => x.Execute(It.IsAny<CancellationToken>()),\r\n                Times.Once)", span="207-209"];
m10_158 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="ServerComponentRunnerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", span="193-193"];
m10_215 [file="ServerComponentRunnerFacts.cs", label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", span=""];
m10_216 [file="ServerComponentRunnerFacts.cs", label=runner, span=""];
m10_217 [file="ServerComponentRunnerFacts.cs", label=timesExecuted, span=""];
m10_218 [file="ServerComponentRunnerFacts.cs", label=runner, span=""];
m10_219 [file="ServerComponentRunnerFacts.cs", label=timesExecuted, span=""];
m10_220 [file="ServerComponentRunnerFacts.cs", label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent", span=""];
m10_221 [file="ServerComponentRunnerFacts.cs", label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent", span=""];
m11_0 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="25-25"];
m11_1 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="MaxRetryAttempts = 10", span="27-27"];
m11_2 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="ShutdownTimeout = TimeSpan.FromMilliseconds(Timeout.Infinite)", span="28-28"];
m11_3 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="LowerLogVerbosity = false", span="29-29"];
m11_4 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="Exit HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="25-25"];
m11_5 [cluster="System.TimeSpan.FromMilliseconds(double)", file="ServerComponentRunnerOptions.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m11_6 [file="ServerComponentRunnerOptions.cs", label="HangFire.Server.ServerComponentRunnerOptions", span=""];
m14_22 [cluster="System.Collections.Generic.List<T>.GetEnumerator()", file="ServerCoreFacts.cs", label="Entry System.Collections.Generic.List<T>.GetEnumerator()", span="0-0"];
m14_3 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ServerCoreFacts.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m14_19 [cluster="HangFire.Filters.GlobalJobFilterCollection.GetEnumerator()", file="ServerCoreFacts.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.GetEnumerator()", span="37-37"];
m14_20 [cluster="HangFire.Filters.GlobalJobFilterCollection.GetEnumerator()", file="ServerCoreFacts.cs", label="return _filters.GetEnumerator();", span="39-39"];
m14_21 [cluster="HangFire.Filters.GlobalJobFilterCollection.GetEnumerator()", file="ServerCoreFacts.cs", label="Exit HangFire.Filters.GlobalJobFilterCollection.GetEnumerator()", span="37-37"];
m14_8 [cluster="HangFire.Filters.GlobalJobFilterCollection.Contains(HangFire.Filters.IJobFilter)", file="ServerCoreFacts.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.Contains(HangFire.Filters.IJobFilter)", span="27-27"];
m14_9 [cluster="HangFire.Filters.GlobalJobFilterCollection.Contains(HangFire.Filters.IJobFilter)", file="ServerCoreFacts.cs", label="return _filters.Contains(filter);", span="29-29"];
m14_10 [cluster="HangFire.Filters.GlobalJobFilterCollection.Contains(HangFire.Filters.IJobFilter)", file="ServerCoreFacts.cs", label="Exit HangFire.Filters.GlobalJobFilterCollection.Contains(HangFire.Filters.IJobFilter)", span="27-27"];
m14_11 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="ServerCoreFacts.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m14_15 [cluster="System.Collections.Generic.List<T>.RemoveAll(System.Predicate<T>)", file="ServerCoreFacts.cs", label="Entry System.Collections.Generic.List<T>.RemoveAll(System.Predicate<T>)", span="0-0"];
m14_0 [cluster="HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", file="ServerCoreFacts.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", span="17-17"];
m14_1 [cluster="HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", file="ServerCoreFacts.cs", label="_filters.Add(filter)", span="19-19"];
m14_2 [cluster="HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", file="ServerCoreFacts.cs", label="Exit HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", span="17-17"];
m14_12 [cluster="HangFire.Filters.GlobalJobFilterCollection.Remove(HangFire.Filters.IJobFilter)", file="ServerCoreFacts.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.Remove(HangFire.Filters.IJobFilter)", span="32-32"];
m14_13 [cluster="HangFire.Filters.GlobalJobFilterCollection.Remove(HangFire.Filters.IJobFilter)", file="ServerCoreFacts.cs", label="_filters.RemoveAll(x => x == filter)", span="34-34"];
m14_14 [cluster="HangFire.Filters.GlobalJobFilterCollection.Remove(HangFire.Filters.IJobFilter)", file="ServerCoreFacts.cs", label="Exit HangFire.Filters.GlobalJobFilterCollection.Remove(HangFire.Filters.IJobFilter)", span="32-32"];
m14_16 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Entry lambda expression", span="34-34"];
m14_17 [cluster="lambda expression", file="ServerCoreFacts.cs", label="x == filter", span="34-34"];
m14_18 [cluster="lambda expression", file="ServerCoreFacts.cs", label="Exit lambda expression", span="34-34"];
m14_7 [cluster="System.Collections.Generic.List<T>.Clear()", file="ServerCoreFacts.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m14_4 [cluster="HangFire.Filters.GlobalJobFilterCollection.Clear()", file="ServerCoreFacts.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.Clear()", span="22-22"];
m14_6 [cluster="HangFire.Filters.GlobalJobFilterCollection.Clear()", file="ServerCoreFacts.cs", label="Exit HangFire.Filters.GlobalJobFilterCollection.Clear()", span="22-22"];
m14_23 [cluster="HangFire.Filters.GlobalJobFilterCollection.System.Collections.IEnumerable.GetEnumerator()", file="ServerCoreFacts.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.System.Collections.IEnumerable.GetEnumerator()", span="42-42"];
m14_24 [cluster="HangFire.Filters.GlobalJobFilterCollection.System.Collections.IEnumerable.GetEnumerator()", file="ServerCoreFacts.cs", label="return GetEnumerator();", span="44-44"];
m14_25 [cluster="HangFire.Filters.GlobalJobFilterCollection.System.Collections.IEnumerable.GetEnumerator()", file="ServerCoreFacts.cs", label="Exit HangFire.Filters.GlobalJobFilterCollection.System.Collections.IEnumerable.GetEnumerator()", span="42-42"];
m14_26 [file="ServerCoreFacts.cs", label="HangFire.Filters.GlobalJobFilterCollection", span=""];
m14_27 [file="ServerCoreFacts.cs", label="HangFire.Filters.IJobFilter", span=""];
m16_4 [cluster="HangFire.Web.SingleResourceHandler.WriteResponse()", file="SqlServerConnection.cs", label="Entry HangFire.Web.SingleResourceHandler.WriteResponse()", span="15-15"];
m16_5 [cluster="HangFire.Web.SingleResourceHandler.WriteResponse()", file="SqlServerConnection.cs", label="WriteResource(_assembly, _resourceName)", span="17-17"];
m16_6 [cluster="HangFire.Web.SingleResourceHandler.WriteResponse()", file="SqlServerConnection.cs", label="Exit HangFire.Web.SingleResourceHandler.WriteResponse()", span="15-15"];
m16_7 [cluster="HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", file="SqlServerConnection.cs", label="Entry HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", span="34-34"];
m16_0 [cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", file="SqlServerConnection.cs", label="Entry HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", span="9-9"];
m16_1 [cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", file="SqlServerConnection.cs", label="_assembly = assembly", span="11-11"];
m16_2 [cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", file="SqlServerConnection.cs", label="_resourceName = resourceName", span="12-12"];
m16_3 [cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", file="SqlServerConnection.cs", label="Exit HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", span="9-9"];
m16_8 [file="SqlServerConnection.cs", label="HangFire.Web.SingleResourceHandler", span=""];
m17_12 [cluster="HangFire.SqlServer.SqlServerProcessingJob.Dispose()", file="SqlServerProcessingJob.cs", label="Entry HangFire.SqlServer.SqlServerProcessingJob.Dispose()", span="40-40"];
m17_13 [cluster="HangFire.SqlServer.SqlServerProcessingJob.Dispose()", color=green, community=0, file="SqlServerProcessingJob.cs", label="_connection.DeleteJobFromQueue(JobId, Queue)", prediction=4, span="42-42"];
m17_14 [cluster="HangFire.SqlServer.SqlServerProcessingJob.Dispose()", file="SqlServerProcessingJob.cs", label="Exit HangFire.SqlServer.SqlServerProcessingJob.Dispose()", span="40-40"];
m17_0 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="SqlServerProcessingJob.cs", label="Entry HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(HangFire.Storage.IStorageConnection, string, string)", span="25-25"];
m17_1 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(HangFire.Storage.IStorageConnection, string, string)", color=green, community=0, file="SqlServerProcessingJob.cs", label="connection == null", prediction=5, span="27-27"];
m17_2 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(HangFire.Storage.IStorageConnection, string, string)", color=green, community=0, file="SqlServerProcessingJob.cs", label="throw new ArgumentNullException(''connection'');", prediction=6, span="27-27"];
m17_3 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(HangFire.Storage.IStorageConnection, string, string)", color=green, community=0, file="SqlServerProcessingJob.cs", label="jobId == null", prediction=7, span="28-28"];
m17_4 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(HangFire.Storage.IStorageConnection, string, string)", color=green, community=0, file="SqlServerProcessingJob.cs", label="throw new ArgumentNullException(''jobId'');", prediction=8, span="28-28"];
m17_5 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(HangFire.Storage.IStorageConnection, string, string)", color=green, community=0, file="SqlServerProcessingJob.cs", label="queue == null", prediction=7, span="29-29"];
m17_6 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(HangFire.Storage.IStorageConnection, string, string)", color=green, community=0, file="SqlServerProcessingJob.cs", label="throw new ArgumentNullException(''queue'');", prediction=10, span="29-29"];
m17_7 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(HangFire.Storage.IStorageConnection, string, string)", color=green, community=0, file="SqlServerProcessingJob.cs", label="_connection = connection", prediction=11, span="31-31"];
m17_8 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(HangFire.Storage.IStorageConnection, string, string)", color=green, community=0, file="SqlServerProcessingJob.cs", label="JobId = jobId", prediction=12, span="33-33"];
m17_9 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(HangFire.Storage.IStorageConnection, string, string)", color=green, community=0, file="SqlServerProcessingJob.cs", label="Queue = queue", prediction=13, span="34-34"];
m17_10 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="SqlServerProcessingJob.cs", label="Exit HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(HangFire.Storage.IStorageConnection, string, string)", span="25-25"];
m17_15 [cluster="HangFire.Storage.IStorageConnection.DeleteJobFromQueue(string, string)", file="SqlServerProcessingJob.cs", label="Entry HangFire.Storage.IStorageConnection.DeleteJobFromQueue(string, string)", span="31-31"];
m17_16 [file="SqlServerProcessingJob.cs", label="HangFire.SqlServer.SqlServerProcessingJob", span=""];
m18_14 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="29-29"];
m18_15 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", color=green, community=2, file="SqlServerProcessingJobFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerProcessingJob(_connection.Object, null, Queue))", prediction=14, span="31-32"];
m18_16 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="Assert.Equal(''jobId'', exception.ParamName)", prediction=15, span="34-34"];
m18_17 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="29-29"];
m18_8 [cluster="Unk.>", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.>", span=""];
m18_29 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="47-47"];
m18_30 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="var processingJob = CreateProcessingJob()", prediction=16, span="49-49"];
m18_31 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="Assert.Equal(JobId, processingJob.JobId)", prediction=17, span="51-51"];
m18_32 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="Assert.Equal(Queue, processingJob.Queue)", prediction=16, span="52-52"];
m18_33 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="47-47"];
m18_13 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(HangFire.Storage.IStorageConnection, string, string)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(HangFire.Storage.IStorageConnection, string, string)", span="25-25"];
m18_0 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", span="14-14"];
m18_1 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="_connection = new Mock<IStorageConnection>()", prediction=19, span="16-16"];
m18_2 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", span="14-14"];
m18_45 [cluster="Unk.DeleteJobFromQueue", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.DeleteJobFromQueue", span=""];
m18_9 [cluster="Unk.Equal", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.Equal", span=""];
m18_3 [cluster="Mock<IStorageConnection>.cstr", file="SqlServerProcessingJobFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m18_35 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", span="56-56"];
m18_36 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="var processingJob = CreateProcessingJob()", prediction=20, span="58-58"];
m18_37 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="processingJob.Dispose()", prediction=21, span="60-60"];
m18_38 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="_connection.Verify(x => x.DeleteJobFromQueue(JobId, Queue))", prediction=22, span="62-62"];
m18_39 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Dispose_CallsDeleteFromQueue()", span="56-56"];
m18_4 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="20-20"];
m18_5 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=green, community=2, file="SqlServerProcessingJobFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerProcessingJob(null, JobId, Queue))", prediction=23, span="22-23"];
m18_6 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="Assert.Equal(''connection'', exception.ParamName)", prediction=24, span="25-25"];
m18_7 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="20-20"];
m18_42 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Entry lambda expression", span="62-62"];
m18_10 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Entry lambda expression", span="23-23"];
m18_11 [cluster="lambda expression", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="new SqlServerProcessingJob(null, JobId, Queue)", prediction=25, span="23-23"];
m18_12 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Exit lambda expression", span="23-23"];
m18_18 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Entry lambda expression", span="32-32"];
m18_19 [cluster="lambda expression", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="new SqlServerProcessingJob(_connection.Object, null, Queue)", prediction=22, span="32-32"];
m18_20 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Exit lambda expression", span="32-32"];
m18_26 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Entry lambda expression", span="41-41"];
m18_27 [cluster="lambda expression", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="new SqlServerProcessingJob(_connection.Object, JobId, null)", prediction=22, span="41-41"];
m18_28 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Exit lambda expression", span="41-41"];
m18_43 [cluster="lambda expression", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="x.DeleteJobFromQueue(JobId, Queue)", prediction=28, span="62-62"];
m18_44 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Exit lambda expression", span="62-62"];
m18_34 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", span="65-65"];
m18_46 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="return new SqlServerProcessingJob(_connection.Object, JobId, Queue);", prediction=22, span="67-67"];
m18_47 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", span="65-65"];
m18_21 [cluster="SqlServerProcessingJob.cstr", file="SqlServerProcessingJobFacts.cs", label="Entry SqlServerProcessingJob.cstr", span=""];
m18_40 [cluster="HangFire.SqlServer.SqlServerProcessingJob.Dispose()", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.SqlServer.SqlServerProcessingJob.Dispose()", span="40-40"];
m18_22 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="38-38"];
m18_23 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", color=green, community=2, file="SqlServerProcessingJobFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerProcessingJob(_connection.Object, JobId, null))", prediction=30, span="40-41"];
m18_24 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="Assert.Equal(''queue'', exception.ParamName)", prediction=31, span="43-43"];
m18_25 [cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="38-38"];
m18_41 [cluster="Unk.Verify", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.Verify", span=""];
m18_48 [file="SqlServerProcessingJobFacts.cs", label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts", span=""];
m19_201 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="242-242"];
m19_202 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", color=green, community=1, file="WorkerFacts.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData { LoadException = new JobLoadException() })", prediction=32, span="245-246"];
m19_203 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="248-248"];
m19_205 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", color=green, community=0, file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>()))", prediction=33, span="254-257"];
m19_204 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="251-251"];
m19_206 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="242-242"];
m19_146 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="175-175"];
m19_147 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="177-177"];
m19_148 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="179-179"];
m19_149 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="_process.Verify(x => x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>()))", span="181-183"];
m19_150 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="175-175"];
m19_26 [cluster="lambda expression", file="WorkerFacts.cs", label="x.GetConnection()", span="33-33"];
m19_27 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="33-33"];
m19_43 [cluster="Unk.GetJobData", file="WorkerFacts.cs", label="Entry Unk.GetJobData", span=""];
m19_93 [cluster="Unk.DeleteJobFromQueue", file="WorkerFacts.cs", label="Entry Unk.DeleteJobFromQueue", span=""];
m19_8 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=green, community=0, file="WorkerFacts.cs", label="_processingJob.Setup(x => x.Queue).Returns(Queue)", prediction=33, span="37-37"];
m19_9 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=green, community=0, file="WorkerFacts.cs", label="_connection\r\n                .Setup(x => x.FetchNextJob(_context.SharedContext.Queues, It.IsNotNull<CancellationToken>()))\r\n                .Returns(_processingJob.Object)", prediction=33, span="39-41"];
m19_36 [cluster="lambda expression", file="WorkerFacts.cs", label="x.FetchNextJob(_context.SharedContext.Queues, It.IsNotNull<CancellationToken>())", span="40-40"];
m19_37 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="40-40"];
m19_60 [cluster="Unk.Equal", file="WorkerFacts.cs", label="Entry Unk.Equal", span=""];
m19_72 [cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="WorkerFacts.cs", label="Entry HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", span="34-34"];
m19_17 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="WorkerFacts.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="22-22"];
m19_24 [cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="WorkerFacts.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="30-30"];
m19_94 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="98-98"];
m19_95 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", color=green, community=0, file="WorkerFacts.cs", label="_stateMachine\r\n                .Setup(x => x.TryToChangeState(\r\n                    JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>()))\r\n                .InSequence()\r\n                .Returns(true)", prediction=33, span="101-105"];
m19_96 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .InSequence()", span="107-108"];
m19_97 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", color=green, community=0, file="WorkerFacts.cs", label="_stateMachine\r\n                .Setup(x => x.TryToChangeState(\r\n                    JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>()))\r\n                .InSequence()\r\n                .Returns(true)", prediction=33, span="110-114"];
m19_98 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="116-116"];
m19_99 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="119-119"];
m19_100 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="98-98"];
m19_14 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_token = new CancellationToken()", span="60-60"];
m19_15 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="25-25"];
m19_207 [cluster="HangFire.Common.JobLoadException.JobLoadException()", file="WorkerFacts.cs", label="Entry HangFire.Common.JobLoadException.JobLoadException()", span="33-33"];
m19_20 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="WorkerFacts.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="26-26"];
m19_16 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="WorkerFacts.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="22-22"];
m19_108 [cluster="Unk.Run", file="WorkerFacts.cs", label="Entry Unk.Run", span=""];
m19_34 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="37-37"];
m19_35 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="40-40"];
m19_165 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="200-200"];
m19_170 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", color=green, community=0, file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>()))", prediction=33, span="214-217"];
m19_166 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="var exception = new InvalidOperationException()", span="203-203"];
m19_169 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="211-211"];
m19_167 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(exception)", span="204-206"];
m19_168 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="208-208"];
m19_171 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="200-200"];
m19_172 [cluster="System.InvalidOperationException.InvalidOperationException()", file="WorkerFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m19_6 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=green, community=0, file="WorkerFacts.cs", label="_processingJob = new Mock<IProcessingJob>()", prediction=39, span="35-35"];
m19_7 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=green, community=0, file="WorkerFacts.cs", label="_processingJob.Setup(x => x.JobId).Returns(JobId)", prediction=33, span="36-36"];
m19_191 [cluster="HangFire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="WorkerFacts.cs", label="Entry HangFire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22"];
m19_38 [cluster="Unk.>", file="WorkerFacts.cs", label="Entry Unk.>", span=""];
m19_47 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Method()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Method()", span="265-265"];
m19_216 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Method()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Method()", span="265-265"];
m19_154 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="187-187"];
m19_155 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="189-189"];
m19_156 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="191-191"];
m19_157 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName)))", span="193-196"];
m19_158 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="187-187"];
m19_28 [cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="WorkerFacts.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="32-32"];
m19_12 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_context.SharedContext.StateMachineFactory\r\n                .Setup(x => x.Create(_connection.Object))\r\n                .Returns(_stateMachine.Object)", span="51-53"];
m19_13 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_stateMachine.Setup(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<IState>(),\r\n                It.IsAny<string[]>())).Returns(true)", span="55-58"];
m19_101 [cluster="Unk.InSequence", file="WorkerFacts.cs", label="Entry Unk.InSequence", span=""];
m19_184 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="221-221"];
m19_189 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", color=green, community=0, file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>()))", prediction=33, span="235-238"];
m19_185 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="var exception = new InvalidOperationException()", span="224-224"];
m19_188 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="232-232"];
m19_186 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(new JobPerformanceException(''hello'', exception))", span="225-227"];
m19_187 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="229-229"];
m19_190 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="221-221"];
m19_123 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="138-138"];
m19_124 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="140-140"];
m19_125 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="142-142"];
m19_126 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName)))", span="144-149"];
m19_127 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="138-138"];
m19_0 [cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="WorkerFacts.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="10-10"];
m19_5 [cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.State)", file="WorkerFacts.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.State)", span="12-12"];
m19_10 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", color=green, community=1, file="WorkerFacts.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", prediction=33, span="19-19"];
m19_11 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="WorkerFacts.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="19-19"];
m19_1 [cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="WorkerFacts.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="10-10"];
m19_2 [cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="WorkerFacts.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="11-11"];
m19_3 [cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="WorkerFacts.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="11-11"];
m19_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.State)", file="WorkerFacts.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.State)", span="12-12"];
m19_18 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="WorkerFacts.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="25-25"];
m19_173 [cluster="Unk.Throws", file="WorkerFacts.cs", label="Entry Unk.Throws", span=""];
m19_134 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="153-153"];
m19_135 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="_stateMachine\r\n                .Setup(x => x.TryToChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>()))\r\n                .Returns(false)", span="156-161"];
m19_136 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="163-163"];
m19_137 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="166-166"];
m19_138 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="_process.Verify(\r\n                x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()),\r\n                Times.Never)", span="169-171"];
m19_139 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="153-153"];
m19_65 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="73-73"];
m19_66 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="75-75"];
m19_67 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="77-77"];
m19_68 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="_storage.Verify(x => x.GetConnection(), Times.Once)", span="79-79"];
m19_69 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="_connection.Verify(x => x.Dispose(), Times.Once)", span="80-80"];
m19_70 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="73-73"];
m19_39 [cluster="Unk.FetchNextJob", file="WorkerFacts.cs", label="Entry Unk.FetchNextJob", span=""];
m19_80 [cluster="Unk.Dispose", file="WorkerFacts.cs", label="Entry Unk.Dispose", span=""];
m19_21 [cluster="HangFire.Storage.JobData.JobData()", file="WorkerFacts.cs", label="Entry HangFire.Storage.JobData.JobData()", span="20-20"];
m19_55 [cluster="Unk.TryToChangeState", file="WorkerFacts.cs", label="Entry Unk.TryToChangeState", span=""];
m19_162 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="196-196"];
m19_29 [cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="WorkerFacts.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="32-32"];
m19_32 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementValue(string)", file="WorkerFacts.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementValue(string)", span="36-36"];
m19_40 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="43-43"];
m19_44 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="46-46"];
m19_30 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementValue(string)", color=green, community=0, file="WorkerFacts.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementValue(string)", prediction=43, span="35-35"];
m19_31 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementValue(string)", file="WorkerFacts.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementValue(string)", span="35-35"];
m19_33 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementValue(string)", color=green, community=0, file="WorkerFacts.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementValue(string)", prediction=44, span="36-36"];
m19_41 [cluster="lambda expression", color=green, community=0, file="WorkerFacts.cs", label="x.GetJobData(JobId)", prediction=45, span="43-43"];
m19_42 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="43-43"];
m19_90 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="94-94"];
m19_91 [cluster="lambda expression", color=green, community=0, file="WorkerFacts.cs", label="x.DeleteJobFromQueue(JobId, Queue)", prediction=46, span="94-94"];
m19_92 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="94-94"];
m19_102 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="102-103"];
m19_109 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="111-112"];
m19_103 [cluster="lambda expression", color=green, community=0, file="WorkerFacts.cs", label="x.TryToChangeState(\r\n                    JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>())", prediction=47, span="102-103"];
m19_104 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="102-103"];
m19_110 [cluster="lambda expression", color=green, community=0, file="WorkerFacts.cs", label="x.TryToChangeState(\r\n                    JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>())", prediction=48, span="111-112"];
m19_111 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="111-112"];
m19_177 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="214-217"];
m19_178 [cluster="lambda expression", color=green, community=0, file="WorkerFacts.cs", label="x.TryToChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>())", prediction=33, span="214-217"];
m19_179 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="214-217"];
m19_180 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="216-216"];
m19_195 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="235-238"];
m19_196 [cluster="lambda expression", color=green, community=0, file="WorkerFacts.cs", label="x.TryToChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>())", prediction=33, span="235-238"];
m19_197 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="235-238"];
m19_198 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="237-237"];
m19_208 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="245-245"];
m19_211 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="254-257"];
m19_209 [cluster="lambda expression", color=green, community=0, file="WorkerFacts.cs", label="x.GetJobData(JobId)", prediction=51, span="245-245"];
m19_210 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="245-245"];
m19_212 [cluster="lambda expression", color=green, community=0, file="WorkerFacts.cs", label="x.TryToChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>())", prediction=52, span="254-257"];
m19_213 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="254-257"];
m19_49 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Create(_connection.Object)", span="52-52"];
m19_88 [cluster="lambda expression", file="WorkerFacts.cs", label="x.FetchNextJob(_context.SharedContext.Queues, _token)", span="91-91"];
m19_118 [cluster="lambda expression", file="WorkerFacts.cs", label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerName == _context.Object.ServerId),\r\n                It.IsAny<string[]>())", span="131-134"];
m19_121 [cluster="lambda expression", file="WorkerFacts.cs", label="state.ServerName == _context.Object.ServerId", span="133-133"];
m19_25 [cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="WorkerFacts.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="30-30"];
m19_46 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="46-46"];
m19_45 [cluster="lambda expression", file="WorkerFacts.cs", label="Method()", span="46-46"];
m19_87 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="91-91"];
m19_105 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="107-107"];
m19_53 [cluster="lambda expression", file="WorkerFacts.cs", label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<IState>(),\r\n                It.IsAny<string[]>())", span="55-58"];
m19_106 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="107-107"];
m19_129 [cluster="lambda expression", file="WorkerFacts.cs", label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName))", span="144-149"];
m19_141 [cluster="lambda expression", file="WorkerFacts.cs", label="x.TryToChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>())", span="157-160"];
m19_144 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="170-170"];
m19_152 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>())", span="181-183"];
m19_160 [cluster="lambda expression", file="WorkerFacts.cs", label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName))", span="193-196"];
m19_175 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="205-205"];
m19_193 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="226-226"];
m19_181 [cluster="lambda expression", file="WorkerFacts.cs", label="state.Exception == exception && state.Reason.Contains(''Internal'')", span="216-216"];
m19_182 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="216-216"];
m19_199 [cluster="lambda expression", file="WorkerFacts.cs", label="state.Exception == exception && state.Reason == ''hello''", span="237-237"];
m19_200 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="237-237"];
m19_48 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="52-52"];
m19_50 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="52-52"];
m19_52 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="55-58"];
m19_74 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="79-79"];
m19_77 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="80-80"];
m19_89 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="91-91"];
m19_117 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="131-134"];
m19_119 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="131-134"];
m19_120 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="133-133"];
m19_122 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="133-133"];
m19_128 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="144-149"];
m19_140 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="157-160"];
m19_143 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="170-170"];
m19_151 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="181-183"];
m19_159 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="193-196"];
m19_174 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="205-205"];
m19_192 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="226-226"];
m19_107 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="107-107"];
m19_54 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="55-58"];
m19_61 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="67-67"];
m19_130 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="144-149"];
m19_131 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="148-149"];
m19_142 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="157-160"];
m19_145 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="170-170"];
m19_153 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="181-183"];
m19_161 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="193-196"];
m19_176 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="205-205"];
m19_194 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="226-226"];
m19_76 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="79-79"];
m19_75 [cluster="lambda expression", file="WorkerFacts.cs", label="x.GetConnection()", span="79-79"];
m19_79 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="80-80"];
m19_78 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Dispose()", span="80-80"];
m19_62 [cluster="lambda expression", file="WorkerFacts.cs", label="new Worker(null)", span="67-67"];
m19_63 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="67-67"];
m19_133 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="148-149"];
m19_132 [cluster="lambda expression", file="WorkerFacts.cs", label="states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName", span="148-149"];
m19_163 [cluster="lambda expression", file="WorkerFacts.cs", label="states.Length == 1 && states[0] == ProcessingState.StateName", span="196-196"];
m19_164 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="196-196"];
m19_112 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="125-125"];
m19_113 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="127-127"];
m19_114 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="129-129"];
m19_115 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerName == _context.Object.ServerId),\r\n                It.IsAny<string[]>()))", span="131-134"];
m19_116 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="125-125"];
m19_64 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="WorkerFacts.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", span="27-27"];
m19_81 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", span="84-84"];
m19_85 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", color=green, community=0, file="WorkerFacts.cs", label="_connection.Verify(x => x.DeleteJobFromQueue(JobId, Queue))", prediction=33, span="94-94"];
m19_84 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="WorkerFacts.cs", label="_connection.Verify(\r\n                x => x.FetchNextJob(_context.SharedContext.Queues, _token),\r\n                Times.Once)", span="90-92"];
m19_82 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="86-86"];
m19_83 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="88-88"];
m19_86 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", span="84-84"];
m19_183 [cluster="Unk.Contains", file="WorkerFacts.cs", label="Entry Unk.Contains", span=""];
m19_71 [cluster="HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="260-260"];
m19_214 [cluster="HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs", label="return new Worker(_context.Object);", span="262-262"];
m19_215 [cluster="HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="260-260"];
m19_22 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerFacts.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="116-116"];
m19_23 [cluster="Mock<IStateMachine>.cstr", file="WorkerFacts.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m19_56 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="64-64"];
m19_57 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(null))", span="66-67"];
m19_58 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs", label="Assert.Equal(''context'', exception.ParamName)", span="69-69"];
m19_59 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="64-64"];
m19_51 [cluster="Unk.Create", file="WorkerFacts.cs", label="Entry Unk.Create", span=""];
m19_19 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="WorkerFacts.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="25-25"];
m19_73 [cluster="Unk.Verify", file="WorkerFacts.cs", label="Entry Unk.Verify", span=""];
m19_217 [file="WorkerFacts.cs", label="HangFire.Core.Tests.Server.WorkerFacts", span=""];
m19_218 [file="WorkerFacts.cs", label=exception, span=""];
m19_219 [file="WorkerFacts.cs", label=exception, span=""];
m20_35 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="WorkerManager.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="25-25"];
m20_21 [cluster="System.Collections.Generic.List<T>.List(int)", file="WorkerManager.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m20_28 [cluster="HangFire.Server.WorkerManager.ToString()", file="WorkerManager.cs", label="Entry HangFire.Server.WorkerManager.ToString()", span="57-57"];
m20_29 [cluster="HangFire.Server.WorkerManager.ToString()", file="WorkerManager.cs", label="return ''Worker Manager'';", span="59-59"];
m20_30 [cluster="HangFire.Server.WorkerManager.ToString()", file="WorkerManager.cs", label="Exit HangFire.Server.WorkerManager.ToString()", span="57-57"];
m20_22 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", span="27-27"];
m20_9 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="WorkerManager.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m20_24 [cluster="System.Collections.Generic.List<T>.Add(T)", file="WorkerManager.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m20_26 [cluster="HangFire.Server.ServerSupervisorCollection.Start()", file="WorkerManager.cs", label="Entry HangFire.Server.ServerSupervisorCollection.Start()", span="36-36"];
m20_23 [cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="WorkerManager.cs", label="Entry HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", span="62-62"];
m20_32 [cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="WorkerManager.cs", label="Exit HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", span="62-62"];
m20_33 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", file="WorkerManager.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", span="41-41"];
m20_25 [cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="WorkerManager.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26"];
m20_0 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="Entry HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="30-30"];
m20_1 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="sharedContext == null", span="32-32"];
m20_3 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="workerCount <= 0", span="33-33"];
m20_5 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="_sharedContext = sharedContext", span="35-35"];
m20_6 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="_workerCount = workerCount", span="36-36"];
m20_2 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="throw new ArgumentNullException(''sharedContext'');", span="32-32"];
m20_4 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="throw new ArgumentOutOfRangeException(''workerCount'', ''Worker count value must be more than zero.'');", span="33-33"];
m20_7 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="Exit HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="30-30"];
m20_27 [cluster="System.Threading.WaitHandle.WaitOne()", file="WorkerManager.cs", label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0"];
m20_34 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="WorkerManager.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", span="27-27"];
m20_10 [cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="WorkerManager.cs", label="Entry HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", span="39-39"];
m20_11 [cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", color=green, community=0, file="WorkerManager.cs", label="var workerSupervisors = new List<IServerSupervisor>(_workerCount)", prediction=54, span="41-41"];
m20_19 [cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="WorkerManager.cs", label="cancellationToken.WaitHandle.WaitOne()", span="53-53"];
m20_12 [cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="WorkerManager.cs", label="var i = 1", span="42-42"];
m20_15 [cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", color=green, community=0, file="WorkerManager.cs", label="workerSupervisors.Add(CreateWorkerSupervisor(workerContext))", prediction=54, span="47-47"];
m20_17 [cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", color=green, community=0, file="WorkerManager.cs", label="var supervisors = new ServerSupervisorCollection(workerSupervisors)", prediction=56, span="50-50"];
m20_13 [cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="WorkerManager.cs", label="i <= _workerCount", span="42-42"];
m20_14 [cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="WorkerManager.cs", label="var workerContext = new WorkerContext(_sharedContext, i)", span="44-44"];
m20_16 [cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="WorkerManager.cs", label="i++", span="42-42"];
m20_18 [cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", color=green, community=0, file="WorkerManager.cs", label="supervisors.Start()", prediction=57, span="52-52"];
m20_20 [cluster="HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="WorkerManager.cs", label="Exit HangFire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", span="39-39"];
m20_36 [file="WorkerManager.cs", label="HangFire.Server.WorkerManager", span=""];
m21_2 [cluster="HangFire.Filters.IStateChangedFilter.OnStateUnapplied(IRedisTransaction, string, string)", file="WorkerManagerFacts.cs", label="Entry HangFire.Filters.IStateChangedFilter.OnStateUnapplied(IRedisTransaction, string, string)", span="8-8"];
m21_3 [cluster="HangFire.Filters.IStateChangedFilter.OnStateUnapplied(IRedisTransaction, string, string)", file="WorkerManagerFacts.cs", label="Exit HangFire.Filters.IStateChangedFilter.OnStateUnapplied(IRedisTransaction, string, string)", span="8-8"];
m21_0 [cluster="HangFire.Filters.IStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="WorkerManagerFacts.cs", label="Entry HangFire.Filters.IStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", span="7-7"];
m21_1 [cluster="HangFire.Filters.IStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="WorkerManagerFacts.cs", label="Exit HangFire.Filters.IStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", span="7-7"];
n18 -> n13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
n18 -> n16  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
n0 -> n3  [color=darkseagreen4, key=1, label=ConnectionFactory, style=dashed];
m3_0 -> m3_3  [color=green, key=1, label=string, style=dashed];
m3_0 -> m3_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_0 -> m3_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_0 -> m3_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_9 -> m3_5  [color=darkseagreen4, key=1, label="HangFire.Storage.ProcessingJob", style=dashed];
m3_9 -> m3_6  [color=darkseagreen4, key=1, label="HangFire.Storage.ProcessingJob", style=dashed];
m3_16 -> m3_13  [color=green, key=1, label="HangFire.Storage.ProcessingJob", style=dashed];
m3_16 -> m3_9  [color=darkseagreen4, key=1, label="HangFire.Storage.ProcessingJob", style=dashed];
m8_51 -> m8_18  [color=darkseagreen4, key=1, label="HangFire.Server.ServerComponentRunnerCollection", style=dashed];
m10_55 -> m10_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_139 -> m10_145  [color=darkseagreen4, key=1, label=component, style=dashed];
m10_101 -> m10_103  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m10_103 -> m10_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_103 -> m10_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_103 -> m10_117  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m10_107 -> m10_110  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m10_200 -> m10_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_200 -> m10_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_193 -> m10_195  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m10_195 -> m10_195  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m10_196 -> m10_196  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m10_167 -> m10_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_171 -> m10_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_185 -> m10_190  [color=darkseagreen4, key=1, label=component, style=dashed];
m10_35 -> m10_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_88 -> m10_88  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m10_117 -> m10_117  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m10_71 -> m10_73  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m10_73 -> m10_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_73 -> m10_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_73 -> m10_88  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m10_77 -> m10_79  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m10_153 -> m10_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_157 -> m10_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_215 -> m10_35  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m10_215 -> m10_55  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m10_215 -> m10_73  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m10_215 -> m10_103  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m10_215 -> m10_153  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m10_215 -> m10_157  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m10_215 -> m10_167  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m10_215 -> m10_171  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m10_215 -> m10_200  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m10_217 -> m10_88  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m10_219 -> m10_117  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m10_220 -> m10_194  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent", style=dashed];
m14_12 -> m14_17  [color=darkseagreen4, key=1, label="HangFire.Filters.IJobFilter", style=dashed];
m14_13 -> m14_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_26 -> m14_1  [color=darkseagreen4, key=1, label="HangFire.Filters.GlobalJobFilterCollection", style=dashed];
m14_26 -> m14_9  [color=darkseagreen4, key=1, label="HangFire.Filters.GlobalJobFilterCollection", style=dashed];
m14_26 -> m14_13  [color=darkseagreen4, key=1, label="HangFire.Filters.GlobalJobFilterCollection", style=dashed];
m14_26 -> m14_20  [color=darkseagreen4, key=1, label="HangFire.Filters.GlobalJobFilterCollection", style=dashed];
m14_26 -> m14_24  [color=darkseagreen4, key=1, label="HangFire.Filters.GlobalJobFilterCollection", style=dashed];
m14_27 -> m14_17  [color=darkseagreen4, key=1, label="HangFire.Filters.IJobFilter", style=dashed];
m16_8 -> m16_5  [color=darkseagreen4, key=1, label="HangFire.Web.SingleResourceHandler", style=dashed];
m17_0 -> m17_3  [color=green, key=1, label=string, style=dashed];
m17_0 -> m17_5  [color=green, key=1, label=string, style=dashed];
m17_16 -> m17_13  [color=green, key=1, label="HangFire.SqlServer.SqlServerProcessingJob", style=dashed];
m18_15 -> m18_18  [color=green, key=1, label="lambda expression", style=dashed];
m18_30 -> m18_32  [color=green, key=1, label=processingJob, style=dashed];
m18_38 -> m18_42  [color=green, key=1, label="lambda expression", style=dashed];
m18_5 -> m18_10  [color=green, key=1, label="lambda expression", style=dashed];
m18_23 -> m18_26  [color=green, key=1, label="lambda expression", style=dashed];
m18_48 -> m18_19  [color=green, key=1, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts", style=dashed];
m18_48 -> m18_27  [color=green, key=1, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts", style=dashed];
m18_48 -> m18_38  [color=green, key=1, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts", style=dashed];
m18_48 -> m18_46  [color=green, key=1, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts", style=dashed];
m19_202 -> m19_208  [color=green, key=1, label="lambda expression", style=dashed];
m19_205 -> m19_211  [color=green, key=1, label="lambda expression", style=dashed];
m19_149 -> m19_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_8 -> m19_32  [color=green, key=1, label="lambda expression", style=dashed];
m19_9 -> m19_35  [color=green, key=1, label="lambda expression", style=dashed];
m19_95 -> m19_102  [color=green, key=1, label="lambda expression", style=dashed];
m19_96 -> m19_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_97 -> m19_109  [color=green, key=1, label="lambda expression", style=dashed];
m19_170 -> m19_177  [color=green, key=1, label="lambda expression", style=dashed];
m19_166 -> m19_170  [color=green, key=1, label=exception, style=dashed];
m19_166 -> m19_178  [color=green, key=1, label=exception, style=dashed];
m19_166 -> m19_181  [color=darkseagreen4, key=1, label=exception, style=dashed];
m19_167 -> m19_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_7 -> m19_29  [color=green, key=1, label="lambda expression", style=dashed];
m19_157 -> m19_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_12 -> m19_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_13 -> m19_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_189 -> m19_195  [color=green, key=1, label="lambda expression", style=dashed];
m19_185 -> m19_189  [color=green, key=1, label=exception, style=dashed];
m19_185 -> m19_196  [color=green, key=1, label=exception, style=dashed];
m19_185 -> m19_199  [color=darkseagreen4, key=1, label=exception, style=dashed];
m19_186 -> m19_192  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_126 -> m19_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_5 -> m19_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_10 -> m19_40  [color=green, key=1, label="lambda expression", style=dashed];
m19_10 -> m19_44  [color=green, key=1, label="lambda expression", style=dashed];
m19_135 -> m19_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_138 -> m19_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_68 -> m19_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_69 -> m19_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_178 -> m19_180  [color=green, key=1, label="lambda expression", style=dashed];
m19_196 -> m19_198  [color=green, key=1, label="lambda expression", style=dashed];
m19_118 -> m19_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_129 -> m19_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_160 -> m19_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_115 -> m19_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_85 -> m19_90  [color=green, key=1, label="lambda expression", style=dashed];
m19_84 -> m19_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_57 -> m19_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_217 -> m19_7  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_8  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_9  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_10  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_85  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_95  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_97  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_170  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_189  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_205  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_36  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_11  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_12  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_49  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_13  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_67  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_68  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_69  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_83  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_84  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_88  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_96  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_99  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_114  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_115  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_118  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_121  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_125  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_126  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_135  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_137  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_138  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_148  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_149  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_156  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_157  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_167  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_169  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_186  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_188  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_204  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_217 -> m19_214  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m19_218 -> m19_178  [color=green, key=1, label=exception, style=dashed];
m19_218 -> m19_181  [color=darkseagreen4, key=1, label=exception, style=dashed];
m19_219 -> m19_196  [color=green, key=1, label=exception, style=dashed];
m19_219 -> m19_199  [color=darkseagreen4, key=1, label=exception, style=dashed];
m20_0 -> m20_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_10 -> m20_19  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m20_11 -> m20_15  [color=green, key=1, label=workerSupervisors, style=dashed];
m20_19 -> m20_19  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m20_12 -> m20_16  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_16 -> m20_16  [color=darkseagreen4, key=1, label=i, style=dashed];
m20_36 -> m20_13  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m20_36 -> m20_15  [color=green, key=1, label="HangFire.Server.WorkerManager", style=dashed];
}
