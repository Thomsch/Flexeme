digraph  {
m0_72 [label="Entry Unk.OnClientException", span="", cluster="Unk.OnClientException", file="CoreBackgroundJobPerformer.cs"];
m0_5 [label="_filters = new List<object>()", span="24-24", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="CoreBackgroundJobPerformer.cs"];
m0_12 [label="Entry Hangfire.Server.ServerSupervisorCollection.Stop()", span="44-44", cluster="Hangfire.Server.ServerSupervisorCollection.Stop()", file="CoreBackgroundJobPerformer.cs"];
m0_11 [label="Entry Hangfire.Server.IServerSupervisor.Start()", span="22-22", cluster="Hangfire.Server.IServerSupervisor.Start()", file="CoreBackgroundJobPerformer.cs"];
m0_31 [label="var process = CreateProcess()", span="43-43", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="CoreBackgroundJobPerformer.cs"];
m0_32 [label="process.Run(_context.Object)", span="45-45", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="CoreBackgroundJobPerformer.cs"];
m0_33 [label="_context.Verify(x => x.CreateJob(), Times.Once)", span="47-47", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="CoreBackgroundJobPerformer.cs"];
m0_26 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_0 [label="Entry Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", span="26-26", cluster="Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", file="CoreBackgroundJobPerformer.cs"];
m0_2 [label="throw new ArgumentNullException(''supervisors'');", span="28-28", cluster="Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", color=green, community=0, file="CoreBackgroundJobPerformer.cs"];
m0_1 [label="supervisors == null", span="28-28", cluster="Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", file="CoreBackgroundJobPerformer.cs"];
m0_3 [label="_supervisors = new List<IServerSupervisor>(supervisors)", span="30-30", cluster="Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", file="CoreBackgroundJobPerformer.cs"];
m0_6 [label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="CoreBackgroundJobPerformer.cs"];
m0_4 [label="Exit Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", span="26-26", cluster="Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", file="CoreBackgroundJobPerformer.cs"];
m0_7 [label="Entry Hangfire.Server.ServerSupervisorCollection.Start()", span="36-36", cluster="Hangfire.Server.ServerSupervisorCollection.Start()", file="CoreBackgroundJobPerformer.cs"];
m0_25 [label="Exit Hangfire.Server.ServerSupervisorCollection.GetEnumerator()", span="62-62", cluster="Hangfire.Server.ServerSupervisorCollection.GetEnumerator()", file="CoreBackgroundJobPerformer.cs"];
m0_140 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="CoreBackgroundJobPerformer.cs"];
m0_143 [label="_filters.Add(outerFilter.Object)", span="143-143", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="CoreBackgroundJobPerformer.cs"];
m0_144 [label="_filters.Add(innerFilter.Object)", span="144-144", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="CoreBackgroundJobPerformer.cs"];
m0_149 [label="var process = CreateProcess()", span="151-151", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="CoreBackgroundJobPerformer.cs"];
m0_150 [label="process.Run(_context.Object)", span="154-154", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="CoreBackgroundJobPerformer.cs"];
m0_141 [label="var outerFilter = new Mock<IClientFilter>()", span="140-140", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="CoreBackgroundJobPerformer.cs"];
m0_142 [label="var innerFilter = new Mock<IClientFilter>()", span="141-141", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="CoreBackgroundJobPerformer.cs"];
m0_145 [label="outerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="146-146", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="CoreBackgroundJobPerformer.cs"];
m0_148 [label="outerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="149-149", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="CoreBackgroundJobPerformer.cs"];
m0_146 [label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="147-147", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="CoreBackgroundJobPerformer.cs"];
m0_147 [label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="148-148", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="CoreBackgroundJobPerformer.cs"];
m0_151 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="CoreBackgroundJobPerformer.cs"];
m0_47 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_48 [label="x.CreateJob()", span="53-53", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_49 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_50 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_13 [label=_supervisors, span="46-46", cluster="Hangfire.Server.ServerSupervisorCollection.Stop()", file="CoreBackgroundJobPerformer.cs"];
m0_97 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="CoreBackgroundJobPerformer.cs"];
m0_98 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="104-104", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="CoreBackgroundJobPerformer.cs"];
m0_101 [label="_filters.Add(filter.Object)", span="109-109", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="CoreBackgroundJobPerformer.cs"];
m0_102 [label="var process = CreateProcess()", span="111-111", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="CoreBackgroundJobPerformer.cs"];
m0_103 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="114-114", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="CoreBackgroundJobPerformer.cs"];
m0_99 [label="var filter = new Mock<IClientExceptionFilter>()", span="105-105", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="CoreBackgroundJobPerformer.cs"];
m0_100 [label="filter.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>()))\r\n                .Callback((ClientExceptionContext x) => x.ExceptionHandled = true)", span="106-107", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="CoreBackgroundJobPerformer.cs"];
m0_104 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="CoreBackgroundJobPerformer.cs"];
m0_106 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="CoreBackgroundJobPerformer.cs"];
m0_41 [label="Exit Hangfire.Server.ServerSupervisorCollection.Contains(Hangfire.Server.IServerSupervisor)", span="82-82", cluster="Hangfire.Server.ServerSupervisorCollection.Contains(Hangfire.Server.IServerSupervisor)", file="CoreBackgroundJobPerformer.cs"];
m0_42 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="CoreBackgroundJobPerformer.cs"];
m0_43 [label="Entry Hangfire.Server.ServerSupervisorCollection.CopyTo(Hangfire.Server.IServerSupervisor[], int)", span="87-87", cluster="Hangfire.Server.ServerSupervisorCollection.CopyTo(Hangfire.Server.IServerSupervisor[], int)", file="CoreBackgroundJobPerformer.cs"];
m0_44 [label="_supervisors.CopyTo(array, arrayIndex)", span="89-89", cluster="Hangfire.Server.ServerSupervisorCollection.CopyTo(Hangfire.Server.IServerSupervisor[], int)", file="CoreBackgroundJobPerformer.cs"];
m0_45 [label="Exit Hangfire.Server.ServerSupervisorCollection.CopyTo(Hangfire.Server.IServerSupervisor[], int)", span="87-87", cluster="Hangfire.Server.ServerSupervisorCollection.CopyTo(Hangfire.Server.IServerSupervisor[], int)", file="CoreBackgroundJobPerformer.cs"];
m0_251 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="CoreBackgroundJobPerformer.cs"];
m0_254 [label="_filters.Add(outerFilter.Object)", span="250-250", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="CoreBackgroundJobPerformer.cs"];
m0_255 [label="_filters.Add(innerFilter.Object)", span="251-251", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="CoreBackgroundJobPerformer.cs"];
m0_257 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="254-254", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="CoreBackgroundJobPerformer.cs"];
m0_258 [label="var process = CreateProcess()", span="256-256", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="CoreBackgroundJobPerformer.cs"];
m0_259 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="259-260", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="CoreBackgroundJobPerformer.cs"];
m0_252 [label="var outerFilter = new Mock<IClientFilter>()", span="247-247", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="CoreBackgroundJobPerformer.cs"];
m0_253 [label="var innerFilter = new Mock<IClientFilter>()", span="248-248", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="CoreBackgroundJobPerformer.cs"];
m0_256 [label="var exception = new InvalidOperationException()", span="253-253", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="CoreBackgroundJobPerformer.cs"];
m0_260 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))", span="262-262", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="CoreBackgroundJobPerformer.cs"];
m0_261 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="CoreBackgroundJobPerformer.cs"];
m0_35 [label="Entry Hangfire.Server.ServerSupervisorCollection.Clear()", span="77-77", cluster="Hangfire.Server.ServerSupervisorCollection.Clear()", file="CoreBackgroundJobPerformer.cs"];
m0_237 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="CoreBackgroundJobPerformer.cs"];
m0_53 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="CoreBackgroundJobPerformer.cs"];
m0_55 [label="_filters.Add(filter.Object)", span="64-64", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="CoreBackgroundJobPerformer.cs"];
m0_56 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="66-66", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="CoreBackgroundJobPerformer.cs"];
m0_57 [label="var process = CreateProcess()", span="67-67", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="CoreBackgroundJobPerformer.cs"];
m0_58 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="69-70", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="CoreBackgroundJobPerformer.cs"];
m0_54 [label="var filter = new Mock<IClientExceptionFilter>()", span="63-63", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="CoreBackgroundJobPerformer.cs"];
m0_59 [label="filter.Verify(x => x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>()))", span="72-73", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="CoreBackgroundJobPerformer.cs"];
m0_60 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="CoreBackgroundJobPerformer.cs"];
m0_24 [label="return _supervisors.GetEnumerator();", span="64-64", cluster="Hangfire.Server.ServerSupervisorCollection.GetEnumerator()", file="CoreBackgroundJobPerformer.cs"];
m0_61 [label="Entry Mock<IClientExceptionFilter>.cstr", span="", cluster="Mock<IClientExceptionFilter>.cstr", file="CoreBackgroundJobPerformer.cs"];
m0_30 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="CoreBackgroundJobPerformer.cs"];
m0_29 [label="Exit Hangfire.Server.ServerSupervisorCollection.System.Collections.IEnumerable.GetEnumerator()", span="67-67", cluster="Hangfire.Server.ServerSupervisorCollection.System.Collections.IEnumerable.GetEnumerator()", file="CoreBackgroundJobPerformer.cs"];
m0_23 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="CoreBackgroundJobPerformer.cs"];
m0_119 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="CoreBackgroundJobPerformer.cs"];
m0_121 [label="_filters.Add(filter.Object)", span="122-122", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="CoreBackgroundJobPerformer.cs"];
m0_123 [label="_context.Setup(x => x.CreateJob()).InSequence()", span="125-125", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="CoreBackgroundJobPerformer.cs"];
m0_125 [label="var process = CreateProcess()", span="128-128", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="CoreBackgroundJobPerformer.cs"];
m0_126 [label="process.Run(_context.Object)", span="131-131", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="CoreBackgroundJobPerformer.cs"];
m0_120 [label="var filter = new Mock<IClientFilter>()", span="121-121", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="CoreBackgroundJobPerformer.cs"];
m0_122 [label="filter.Setup(x => x.OnCreating(It.IsNotNull<CreatingContext>())).InSequence()", span="124-124", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="CoreBackgroundJobPerformer.cs"];
m0_124 [label="filter.Setup(x => x.OnCreated(It.IsNotNull<CreatedContext>())).InSequence()", span="126-126", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="CoreBackgroundJobPerformer.cs"];
m0_127 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="CoreBackgroundJobPerformer.cs"];
m0_18 [label="Stop()", span="54-54", cluster="Hangfire.Server.ServerSupervisorCollection.Dispose()", file="CoreBackgroundJobPerformer.cs"];
m0_19 [label=_supervisors, span="56-56", cluster="Hangfire.Server.ServerSupervisorCollection.Dispose()", file="CoreBackgroundJobPerformer.cs"];
m0_20 [label="supervisor.Dispose()", span="58-58", cluster="Hangfire.Server.ServerSupervisorCollection.Dispose()", file="CoreBackgroundJobPerformer.cs"];
m0_21 [label="Exit Hangfire.Server.ServerSupervisorCollection.Dispose()", span="52-52", cluster="Hangfire.Server.ServerSupervisorCollection.Dispose()", file="CoreBackgroundJobPerformer.cs"];
m0_22 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="CoreBackgroundJobPerformer.cs"];
m0_14 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_15 [label="TestMethod()", span="20-20", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs", color=green, community=0];
m0_164 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="CoreBackgroundJobPerformer.cs"];
m0_166 [label="_filters.Add(filter.Object)", span="164-164", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="CoreBackgroundJobPerformer.cs"];
m0_168 [label="var process = CreateProcess()", span="169-169", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="CoreBackgroundJobPerformer.cs"];
m0_169 [label="process.Run(_context.Object)", span="172-172", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="CoreBackgroundJobPerformer.cs"];
m0_170 [label="_context.Verify(x => x.CreateJob(), Times.Never)", span="175-175", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="CoreBackgroundJobPerformer.cs"];
m0_165 [label="var filter = new Mock<IClientFilter>()", span="163-163", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="CoreBackgroundJobPerformer.cs"];
m0_167 [label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext x) => x.Canceled = true)", span="166-167", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="CoreBackgroundJobPerformer.cs"];
m0_171 [label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="176-176", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="CoreBackgroundJobPerformer.cs"];
m0_172 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="CoreBackgroundJobPerformer.cs"];
m0_328 [label="return new JobCreationProcess(_filters);", span="314-314", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="CoreBackgroundJobPerformer.cs"];
m0_329 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="CoreBackgroundJobPerformer.cs"];
m0_139 [label="Entry Unk.OnCreated", span="", cluster="Unk.OnCreated", file="CoreBackgroundJobPerformer.cs"];
m0_228 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="CoreBackgroundJobPerformer.cs"];
m0_230 [label="_filters.Add(filter.Object)", span="227-227", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="CoreBackgroundJobPerformer.cs"];
m0_232 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="230-230", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="CoreBackgroundJobPerformer.cs"];
m0_233 [label="var process = CreateProcess()", span="232-232", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="CoreBackgroundJobPerformer.cs"];
m0_234 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="235-236", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="CoreBackgroundJobPerformer.cs"];
m0_229 [label="var filter = new Mock<IClientFilter>()", span="226-226", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="CoreBackgroundJobPerformer.cs"];
m0_231 [label="var exception = new InvalidOperationException()", span="229-229", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="CoreBackgroundJobPerformer.cs"];
m0_235 [label="filter.Verify(x => x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception)))", span="239-240", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="CoreBackgroundJobPerformer.cs"];
m0_236 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="CoreBackgroundJobPerformer.cs"];
m0_84 [label="Entry Unk.InSequence", span="", cluster="Unk.InSequence", file="CoreBackgroundJobPerformer.cs"];
m0_62 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="CoreBackgroundJobPerformer.cs"];
m0_330 [label="Entry HangFire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39", cluster="HangFire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="CoreBackgroundJobPerformer.cs"];
m0_185 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="CoreBackgroundJobPerformer.cs"];
m0_188 [label="_filters.Add(outerFilter.Object)", span="186-186", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="CoreBackgroundJobPerformer.cs"];
m0_189 [label="_filters.Add(innerFilter.Object)", span="187-187", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="CoreBackgroundJobPerformer.cs"];
m0_191 [label="var process = CreateProcess()", span="192-192", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="CoreBackgroundJobPerformer.cs"];
m0_192 [label="process.Run(_context.Object)", span="195-195", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="CoreBackgroundJobPerformer.cs"];
m0_186 [label="var outerFilter = new Mock<IClientFilter>()", span="183-183", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="CoreBackgroundJobPerformer.cs"];
m0_187 [label="var innerFilter = new Mock<IClientFilter>()", span="184-184", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="CoreBackgroundJobPerformer.cs"];
m0_190 [label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext context) => context.Canceled = true)", span="189-190", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="CoreBackgroundJobPerformer.cs"];
m0_193 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Canceled)))", span="198-198", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="CoreBackgroundJobPerformer.cs"];
m0_194 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="CoreBackgroundJobPerformer.cs"];
m0_10 [label="Exit Hangfire.Server.ServerSupervisorCollection.Start()", span="36-36", cluster="Hangfire.Server.ServerSupervisorCollection.Start()", file="CoreBackgroundJobPerformer.cs"];
m0_46 [label="Entry System.Collections.Generic.List<T>.CopyTo(T[], int)", span="0-0", cluster="System.Collections.Generic.List<T>.CopyTo(T[], int)", file="CoreBackgroundJobPerformer.cs"];
m0_238 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="CoreBackgroundJobPerformer.cs"];
m0_17 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="CoreBackgroundJobPerformer.cs"];
m0_8 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="CoreBackgroundJobPerformer.cs"];
m0_9 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="CoreBackgroundJobPerformer.cs"];
m0_73 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="CoreBackgroundJobPerformer.cs"];
m0_74 [label="var filter1 = new Mock<IClientExceptionFilter>()", span="80-80", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", color=green, community=0, file="CoreBackgroundJobPerformer.cs"];
m0_75 [label="var filter2 = new Mock<IClientExceptionFilter>()", span="81-81", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="CoreBackgroundJobPerformer.cs"];
m0_77 [label="filter1.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="84-84", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="CoreBackgroundJobPerformer.cs"];
m0_78 [label="_filters.Add(filter1.Object)", span="86-86", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="CoreBackgroundJobPerformer.cs"];
m0_79 [label="_filters.Add(filter2.Object)", span="87-87", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="CoreBackgroundJobPerformer.cs"];
m0_80 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="89-89", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="CoreBackgroundJobPerformer.cs"];
m0_81 [label="var process = CreateProcess()", span="91-91", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="CoreBackgroundJobPerformer.cs"];
m0_82 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="94-95", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="CoreBackgroundJobPerformer.cs"];
m0_76 [label="filter2.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="83-83", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="CoreBackgroundJobPerformer.cs"];
m0_83 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="CoreBackgroundJobPerformer.cs"];
m0_34 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="CoreBackgroundJobPerformer.cs"];
m0_324 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_16 [label="Entry Hangfire.Server.IServerSupervisor.Stop()", span="23-23", cluster="Hangfire.Server.IServerSupervisor.Stop()", file="CoreBackgroundJobPerformer.cs"];
m0_51 [label="Hangfire.Server.ServerSupervisorCollection", span="", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_67 [label="process.Run(_context.Object)", span="70-70", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_95 [label="process.Run(_context.Object)", span="95-95", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_117 [label="process.Run(_context.Object)", span="114-114", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_220 [label="process.Run(_context.Object)", span="215-215", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_243 [label="process.Run(_context.Object)", span="236-236", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_266 [label="process.Run(_context.Object)", span="260-260", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_296 [label="process.Run(_context.Object)", span="281-281", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_319 [label="process.Run(_context.Object)", span="302-302", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_88 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_27 [label="Entry Hangfire.Server.ServerSupervisorCollection.System.Collections.IEnumerable.GetEnumerator()", span="67-67", cluster="Hangfire.Server.ServerSupervisorCollection.System.Collections.IEnumerable.GetEnumerator()", file="CoreBackgroundJobPerformer.cs"];
m0_37 [label="Exit Hangfire.Server.ServerSupervisorCollection.Clear()", span="77-77", cluster="Hangfire.Server.ServerSupervisorCollection.Clear()", file="CoreBackgroundJobPerformer.cs"];
m0_52 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_63 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_66 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_68 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_91 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_94 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_96 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_107 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_116 [label="Entry lambda expression", span="114-114", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_118 [label="Exit lambda expression", span="114-114", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_133 [label="Entry lambda expression", span="125-125", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_179 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_219 [label="Entry lambda expression", span="215-215", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_221 [label="Exit lambda expression", span="215-215", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_222 [label="Entry lambda expression", span="218-218", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_239 [label="Entry lambda expression", span="230-230", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_242 [label="Entry lambda expression", span="236-236", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_244 [label="Exit lambda expression", span="236-236", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_262 [label="Entry lambda expression", span="254-254", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_265 [label="Entry lambda expression", span="260-260", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_267 [label="Exit lambda expression", span="260-260", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_283 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_295 [label="Entry lambda expression", span="281-281", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_297 [label="Exit lambda expression", span="281-281", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_309 [label="Entry lambda expression", span="294-294", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_318 [label="Entry lambda expression", span="302-302", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_320 [label="Exit lambda expression", span="302-302", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_85 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_90 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_89 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="84-84", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_28 [label="return ((IEnumerable) _supervisors).GetEnumerator();", span="69-69", cluster="Hangfire.Server.ServerSupervisorCollection.System.Collections.IEnumerable.GetEnumerator()", file="CoreBackgroundJobPerformer.cs"];
m0_39 [label="Entry Hangfire.Server.ServerSupervisorCollection.Contains(Hangfire.Server.IServerSupervisor)", span="82-82", cluster="Hangfire.Server.ServerSupervisorCollection.Contains(Hangfire.Server.IServerSupervisor)", file="CoreBackgroundJobPerformer.cs"];
m0_38 [label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0", cluster="System.Collections.Generic.List<T>.Clear()", file="CoreBackgroundJobPerformer.cs"];
m0_70 [label="x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>())", span="72-73", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_86 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="83-83", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_111 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="106-106", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_130 [label="x.OnCreating(It.IsNotNull<CreatingContext>())", span="124-124", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_137 [label="x.OnCreated(It.IsNotNull<CreatedContext>())", span="126-126", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_153 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="146-146", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_156 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="147-147", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_159 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="148-148", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_162 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="149-149", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_174 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="166-166", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_183 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="176-176", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_196 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="189-189", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_202 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Canceled))", span="198-198", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_217 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="208-208", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_226 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="219-219", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_246 [label="x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception))", span="239-240", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_269 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="262-262", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_287 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="275-275", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_313 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="296-296", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_322 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null))", span="305-305", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_65 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_64 [label="x.CreateJob()", span="66-66", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_69 [label="Entry lambda expression", span="72-73", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_93 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_92 [label="x.CreateJob()", span="89-89", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_109 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_108 [label="x.CreateJob()", span="104-104", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_110 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_113 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_129 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_136 [label="Entry lambda expression", span="126-126", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_135 [label="Exit lambda expression", span="125-125", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_134 [label="x.CreateJob()", span="125-125", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_152 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_161 [label="Entry lambda expression", span="149-149", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_173 [label="Entry lambda expression", span="166-166", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_176 [label="Entry lambda expression", span="167-167", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_182 [label="Entry lambda expression", span="176-176", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_181 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_180 [label="x.CreateJob()", span="175-175", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_195 [label="Entry lambda expression", span="189-189", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_198 [label="Entry lambda expression", span="190-190", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_201 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_216 [label="Entry lambda expression", span="208-208", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_225 [label="Entry lambda expression", span="219-219", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_224 [label="Exit lambda expression", span="218-218", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_223 [label="x.CreateJob()", span="218-218", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_249 [label="context.Exception == exception", span="240-240", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_241 [label="Exit lambda expression", span="230-230", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_240 [label="x.CreateJob()", span="230-230", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_245 [label="Entry lambda expression", span="239-240", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_272 [label="context.Exception == exception", span="262-262", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_264 [label="Exit lambda expression", span="254-254", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_263 [label="x.CreateJob()", span="254-254", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_268 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_290 [label="context.Exception == exception", span="275-275", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_286 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_292 [label="Entry lambda expression", span="276-276", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_285 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_284 [label="x.CreateJob()", span="273-273", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_312 [label="Entry lambda expression", span="296-296", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_315 [label="Entry lambda expression", span="297-297", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_311 [label="Exit lambda expression", span="294-294", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_310 [label="x.CreateJob()", span="294-294", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_321 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_87 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_155 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_158 [label="Entry lambda expression", span="148-148", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_71 [label="Exit lambda expression", span="72-73", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_112 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_131 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_138 [label="Exit lambda expression", span="126-126", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_154 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_157 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_160 [label="Exit lambda expression", span="148-148", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_163 [label="Exit lambda expression", span="149-149", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_175 [label="Exit lambda expression", span="166-166", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_184 [label="Exit lambda expression", span="176-176", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_197 [label="Exit lambda expression", span="189-189", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_203 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_204 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_218 [label="Exit lambda expression", span="208-208", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_227 [label="Exit lambda expression", span="219-219", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_247 [label="Exit lambda expression", span="239-240", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_248 [label="Entry lambda expression", span="240-240", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_270 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_271 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_288 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_289 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_314 [label="Exit lambda expression", span="296-296", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_323 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_115 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_114 [label="x.ExceptionHandled = true", span="107-107", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_178 [label="Exit lambda expression", span="167-167", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_177 [label="x.Canceled = true", span="167-167", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_200 [label="Exit lambda expression", span="190-190", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_199 [label="context.Canceled = true", span="190-190", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_250 [label="Exit lambda expression", span="240-240", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_273 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_291 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_294 [label="Exit lambda expression", span="276-276", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_293 [label="x.ExceptionHandled = true", span="276-276", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_317 [label="Exit lambda expression", span="297-297", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_316 [label="x.ExceptionHandled = true", span="297-297", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_206 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_205 [label="context.Canceled", span="198-198", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_325 [label="context.Exception != null", span="305-305", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_326 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="CoreBackgroundJobPerformer.cs"];
m0_36 [label="_supervisors.Clear()", span="79-79", cluster="Hangfire.Server.ServerSupervisorCollection.Clear()", file="CoreBackgroundJobPerformer.cs", color=red, community=0];
m0_207 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="CoreBackgroundJobPerformer.cs"];
m0_209 [label="_filters.Add(filter.Object)", span="206-206", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="CoreBackgroundJobPerformer.cs"];
m0_211 [label="var process = CreateProcess()", span="211-211", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="CoreBackgroundJobPerformer.cs"];
m0_212 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="214-215", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="CoreBackgroundJobPerformer.cs"];
m0_213 [label="_context.Verify(x => x.CreateJob(), Times.Never)", span="218-218", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="CoreBackgroundJobPerformer.cs"];
m0_208 [label="var filter = new Mock<IClientFilter>()", span="205-205", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="CoreBackgroundJobPerformer.cs"];
m0_210 [label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Throws<InvalidOperationException>()", span="208-209", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="CoreBackgroundJobPerformer.cs"];
m0_214 [label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="219-219", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="CoreBackgroundJobPerformer.cs"];
m0_215 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="CoreBackgroundJobPerformer.cs"];
m0_298 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="CoreBackgroundJobPerformer.cs"];
m0_301 [label="_filters.Add(outerFilter.Object)", span="291-291", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="CoreBackgroundJobPerformer.cs"];
m0_302 [label="_filters.Add(innerFilter.Object)", span="292-292", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="CoreBackgroundJobPerformer.cs"];
m0_303 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="294-294", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="CoreBackgroundJobPerformer.cs"];
m0_305 [label="var process = CreateProcess()", span="299-299", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="CoreBackgroundJobPerformer.cs"];
m0_306 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="302-302", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="CoreBackgroundJobPerformer.cs"];
m0_299 [label="var outerFilter = new Mock<IClientFilter>()", span="288-288", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="CoreBackgroundJobPerformer.cs"];
m0_300 [label="var innerFilter = new Mock<IClientFilter>()", span="289-289", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="CoreBackgroundJobPerformer.cs"];
m0_304 [label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>()))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="296-297", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="CoreBackgroundJobPerformer.cs"];
m0_307 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null)))", span="305-305", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="CoreBackgroundJobPerformer.cs"];
m0_308 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="CoreBackgroundJobPerformer.cs"];
m0_132 [label="Entry Unk.OnCreating", span="", cluster="Unk.OnCreating", file="CoreBackgroundJobPerformer.cs"];
m0_40 [label="Entry Unk.CreateJob", span="", cluster="Unk.CreateJob", file="CoreBackgroundJobPerformer.cs"];
m0_274 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="CoreBackgroundJobPerformer.cs"];
m0_276 [label="_filters.Add(filter.Object)", span="270-270", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="CoreBackgroundJobPerformer.cs"];
m0_278 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="273-273", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="CoreBackgroundJobPerformer.cs"];
m0_280 [label="var process = CreateProcess()", span="278-278", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="CoreBackgroundJobPerformer.cs"];
m0_281 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="281-281", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="CoreBackgroundJobPerformer.cs"];
m0_275 [label="var filter = new Mock<IClientFilter>()", span="269-269", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="CoreBackgroundJobPerformer.cs"];
m0_277 [label="var exception = new InvalidOperationException()", span="272-272", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="CoreBackgroundJobPerformer.cs"];
m0_279 [label="filter.Setup(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="275-276", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="CoreBackgroundJobPerformer.cs"];
m0_282 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="CoreBackgroundJobPerformer.cs"];
m0_105 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="CoreBackgroundJobPerformer.cs"];
m0_327 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="CoreBackgroundJobPerformer.cs"];
m0_128 [label="Entry Mock<IClientFilter>.cstr", span="", cluster="Mock<IClientFilter>.cstr", file="CoreBackgroundJobPerformer.cs"];
m0_331 [label="HangFire.Core.Tests.Client.JobCreationProcessFacts", span="", file="CoreBackgroundJobPerformer.cs"];
m0_333 [label=process, span="", file="CoreBackgroundJobPerformer.cs"];
m0_334 [label=process, span="", file="CoreBackgroundJobPerformer.cs"];
m0_335 [label=process, span="", file="CoreBackgroundJobPerformer.cs"];
m0_336 [label=process, span="", file="CoreBackgroundJobPerformer.cs"];
m0_337 [label=process, span="", file="CoreBackgroundJobPerformer.cs"];
m0_338 [label=process, span="", file="CoreBackgroundJobPerformer.cs"];
m0_340 [label=process, span="", file="CoreBackgroundJobPerformer.cs"];
m0_343 [label=process, span="", file="CoreBackgroundJobPerformer.cs"];
m0_344 [label=process, span="", file="CoreBackgroundJobPerformer.cs"];
m0_332 [label=process, span="", file="CoreBackgroundJobPerformer.cs"];
m0_339 [label=exception, span="", file="CoreBackgroundJobPerformer.cs"];
m0_341 [label=exception, span="", file="CoreBackgroundJobPerformer.cs"];
m0_342 [label=exception, span="", file="CoreBackgroundJobPerformer.cs"];
m1_6 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="CountersAggregator.cs"];
m1_24 [label="Entry Hangfire.SqlServer.CountersAggregator.GetAggregationQuery()", span="72-72", cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery()", file="CountersAggregator.cs"];
m1_31 [label="return @''\r\nDECLARE @RecordsToAggregate TABLE\r\n(\r\n	[Key] NVARCHAR(100) NOT NULL,\r\n	[Value] SMALLINT NOT NULL,\r\n	[ExpireAt] DATETIME NULL\r\n)\r\n\r\nSET TRANSACTION ISOLATION LEVEL READ COMMITTED\r\nBEGIN TRAN\r\n\r\nDELETE TOP (@count) [HangFire].[Counter] with (readpast)\r\nOUTPUT DELETED.[Key], DELETED.[Value], DELETED.[ExpireAt] INTO @RecordsToAggregate\r\n\r\nSET NOCOUNT ON\r\n\r\n;MERGE [HangFire].[AggregatedCounter] AS [Target]\r\nUSING (\r\n	SELECT [Key], SUM([Value]) as [Value], MAX([ExpireAt]) AS [ExpireAt] FROM @RecordsToAggregate\r\n	GROUP BY [Key]) AS [Source] ([Key], [Value], [ExpireAt])\r\nON [Target].[Key] = [Source].[Key]\r\nWHEN MATCHED THEN UPDATE SET \r\n	[Target].[Value] = [Target].[Value] + [Source].[Value],\r\n	[Target].[ExpireAt] = (SELECT MAX([ExpireAt]) FROM (VALUES ([Source].ExpireAt), ([Target].[ExpireAt])) AS MaxExpireAt([ExpireAt]))\r\nWHEN NOT MATCHED THEN INSERT ([Key], [Value], [ExpireAt]) VALUES ([Source].[Key], [Source].[Value], [Source].[ExpireAt]);\r\n\r\nCOMMIT TRAN'';", span="74-100", cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery()", color=green, community=0, file="CountersAggregator.cs"];
m1_32 [label="Exit Hangfire.SqlServer.CountersAggregator.GetAggregationQuery()", span="72-72", cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery()", file="CountersAggregator.cs"];
m1_0 [label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs"];
m1_3 [label="_storage = storage", span="38-38", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs"];
m1_4 [label="_interval = interval", span="39-39", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs"];
m1_1 [label="storage == null", span="36-36", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs"];
m1_2 [label="throw new ArgumentNullException(''storage'');", span="36-36", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs"];
m1_5 [label="Exit Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs"];
m1_19 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="CountersAggregator.cs"];
m1_30 [label="Entry System.Type.ToString()", span="0-0", cluster="System.Type.ToString()", file="CountersAggregator.cs"];
m1_25 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="CountersAggregator.cs"];
m1_7 [label="Entry Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="42-42", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m1_10 [label="_storage.UseConnection(connection =>\r\n                {\r\n                    removedCount = connection.Execute(\r\n                        GetAggregationQuery(),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass });\r\n                })", span="50-55", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", color=green, community=0, file="CountersAggregator.cs"];
m1_9 [label="int removedCount = 0", span="46-46", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m1_11 [label="removedCount >= NumberOfRecordsInSinglePass", span="57-57", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m1_14 [label="removedCount >= NumberOfRecordsInSinglePass", span="62-62", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m1_15 [label="cancellationToken.WaitHandle.WaitOne(_interval)", span="64-64", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m1_8 [label="Logger.DebugFormat(''Aggregating records in 'Counter' table...'')", span="44-44", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m1_12 [label="cancellationToken.WaitHandle.WaitOne(DelayBetweenPasses)", span="59-59", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m1_13 [label="cancellationToken.ThrowIfCancellationRequested()", span="60-60", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m1_16 [label="Exit Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="42-42", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m1_26 [label="Entry Hangfire.SqlServer.CountersAggregator.ToString()", span="67-67", cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="CountersAggregator.cs"];
m1_27 [label="return GetType().ToString();", span="69-69", cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="CountersAggregator.cs"];
m1_28 [label="Exit Hangfire.SqlServer.CountersAggregator.ToString()", span="67-67", cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="CountersAggregator.cs"];
m1_17 [label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122", cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="CountersAggregator.cs"];
m1_18 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="173-173", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="CountersAggregator.cs"];
m1_29 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="CountersAggregator.cs"];
m1_21 [label="Entry lambda expression", span="50-55", cluster="lambda expression", file="CountersAggregator.cs"];
m1_22 [label="removedCount = connection.Execute(\r\n                        GetAggregationQuery(),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass })", span="52-54", cluster="lambda expression", color=green, community=0, file="CountersAggregator.cs"];
m1_23 [label="Exit lambda expression", span="50-55", cluster="lambda expression", file="CountersAggregator.cs"];
m1_20 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="CountersAggregator.cs"];
m1_33 [label="Hangfire.SqlServer.CountersAggregator", span="", file="CountersAggregator.cs"];
m2_8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ExpirationManager.cs"];
m2_31 [label="Entry Unk.Acquire", span="", cluster="Unk.Acquire", file="ExpirationManager.cs"];
m2_25 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ExpirationManager.cs"];
m2_32 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ExpirationManager.cs"];
m2_23 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="ExpirationManager.cs"];
m2_24 [label="Entry Hangfire.Logging.ILog.Trace(string)", span="232-232", cluster="Hangfire.Logging.ILog.Trace(string)", file="ExpirationManager.cs"];
m2_33 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="ExpirationManager.cs"];
m2_35 [label="Entry Hangfire.SqlServer.ExpirationManager.ToString()", span="100-100", cluster="Hangfire.SqlServer.ExpirationManager.ToString()", file="ExpirationManager.cs"];
m2_36 [label="return GetType().ToString();", span="102-102", cluster="Hangfire.SqlServer.ExpirationManager.ToString()", file="ExpirationManager.cs"];
m2_37 [label="Exit Hangfire.SqlServer.ExpirationManager.ToString()", span="100-100", cluster="Hangfire.SqlServer.ExpirationManager.ToString()", file="ExpirationManager.cs"];
m2_26 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="ExpirationManager.cs"];
m2_0 [label="Entry Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage)", span="45-45", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage)", file="ExpirationManager.cs"];
m2_1 [label="Exit Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage)", span="45-45", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage)", file="ExpirationManager.cs"];
m2_21 [label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122", cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="ExpirationManager.cs"];
m2_34 [label="Entry Unk.Release", span="", cluster="Unk.Release", file="ExpirationManager.cs"];
m2_39 [label="Entry System.Type.ToString()", span="0-0", cluster="System.Type.ToString()", file="ExpirationManager.cs"];
m2_38 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="ExpirationManager.cs"];
m2_22 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="173-173", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="ExpirationManager.cs"];
m2_2 [label="Entry Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="50-50", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m2_3 [label="storage == null", span="52-52", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m2_5 [label="_storage = storage", span="54-54", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m2_6 [label="_checkInterval = checkInterval", span="55-55", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m2_4 [label="throw new ArgumentNullException(''storage'');", span="52-52", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m2_7 [label="Exit Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="50-50", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m2_27 [label="Entry lambda expression", span="68-84", cluster="lambda expression", file="ExpirationManager.cs"];
m2_29 [label="removedCount = connection.Execute(\r\n                                String.Format(@''\r\nset transaction isolation level read committed;\r\ndelete top (@count) from HangFire.[{0}] with (readpast) where ExpireAt < @now;'', table),\r\n                                new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass })", span="74-78", cluster="lambda expression", color=red, community=0, file="ExpirationManager.cs"];
m2_28 [label="SqlServerDistributedLock.Acquire(connection, DistributedLockKey, DefaultLockTimeout)", span="70-70", cluster="lambda expression", file="ExpirationManager.cs"];
m2_30 [label="Exit lambda expression", span="68-84", cluster="lambda expression", file="ExpirationManager.cs"];
m2_9 [label="Entry Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="58-58", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m2_10 [label=ProcessedTables, span="60-60", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m2_16 [label="cancellationToken.WaitHandle.WaitOne(DelayBetweenPasses)", span="91-91", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m2_19 [label="cancellationToken.WaitHandle.WaitOne(_checkInterval)", span="97-97", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m2_11 [label="Logger.DebugFormat(''Removing outdated records from table '{0}'...'', table)", span="62-62", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m2_13 [label="_storage.UseConnection(connection =>\r\n                    {\r\n                        SqlServerDistributedLock.Acquire(connection, DistributedLockKey, DefaultLockTimeout);\r\n\r\n                        try\r\n                        {\r\n                            removedCount = connection.Execute(\r\n                                String.Format(@''\r\nset transaction isolation level read committed;\r\ndelete top (@count) from HangFire.[{0}] with (readpast) where ExpireAt < @now;'', table),\r\n                                new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass });\r\n                        }\r\n                        finally\r\n                        {\r\n                            SqlServerDistributedLock.Release(connection, DistributedLockKey);\r\n                        }\r\n                    })", span="68-84", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", color=red, community=0, file="ExpirationManager.cs"];
m2_15 [label="Logger.Trace(String.Format(''Removed {0} outdated record(s) from '{1}' table.'', removedCount,\r\n                            table))", span="88-89", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m2_12 [label="int removedCount = 0", span="64-64", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m2_14 [label="removedCount > 0", span="86-86", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m2_18 [label="removedCount != 0", span="94-94", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m2_17 [label="cancellationToken.ThrowIfCancellationRequested()", span="92-92", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m2_20 [label="Exit Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="58-58", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m2_40 [label="Hangfire.SqlServer.ExpirationManager", span="", file="ExpirationManager.cs"];
m2_41 [label=table, span="", file="ExpirationManager.cs"];
m3_12 [label="Exit HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", span="40-40", cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", file="RecurringJobManager.cs"];
m3_66 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="RecurringJobManager.cs"];
m3_19 [label="Entry Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", span="71-71", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m3_20 [label="recurringJobId == null", span="78-78", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m3_22 [label="job == null", span="79-79", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m3_24 [label="cronExpression == null", span="80-80", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m3_26 [label="timeZone == null", span="81-81", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m3_28 [label="ValidateCronExpression(cronExpression)", span="83-83", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m3_31 [label="var invocationData = InvocationData.Serialize(job)", span="88-88", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m3_33 [label="recurringJob[''Cron''] = cronExpression", span="91-91", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m3_34 [label="recurringJob[''TimeZoneId''] = timeZone.Id", span="92-92", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m3_35 [label="recurringJob[''Queue''] = queue", span="93-93", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m3_37 [label="transaction.SetRangeInHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId),\r\n                        recurringJob)", span="97-99", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m3_38 [label="transaction.AddToSet(''recurring-jobs'', recurringJobId)", span="101-101", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m3_21 [label="throw new ArgumentNullException(''recurringJobId'');", span="78-78", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m3_23 [label="throw new ArgumentNullException(''job'');", span="79-79", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m3_25 [label="throw new ArgumentNullException(''cronExpression'');", span="80-80", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m3_27 [label="throw new ArgumentNullException(''timeZone'');", span="81-81", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m3_29 [label="var connection = _storage.GetConnection()", span="85-85", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m3_30 [label="var recurringJob = new Dictionary<string, string>()", span="87-87", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m3_36 [label="var transaction = connection.CreateWriteTransaction()", span="95-95", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m3_32 [label="recurringJob[''Job''] = JobHelper.ToJson(invocationData)", span="90-90", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m3_39 [label="transaction.Commit()", span="103-103", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m3_40 [label="Exit Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", span="71-71", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m3_42 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()", file="RecurringJobManager.cs"];
m3_67 [label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87", cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="RecurringJobManager.cs"];
m3_0 [label="Entry Hangfire.RecurringJobManager.RecurringJobManager()", span="35-35", cluster="Hangfire.RecurringJobManager.RecurringJobManager()", file="RecurringJobManager.cs"];
m3_2 [label="Entry Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", span="40-40", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", color=green, community=0, file="RecurringJobManager.cs"];
m3_1 [label="Exit Hangfire.RecurringJobManager.RecurringJobManager()", span="35-35", cluster="Hangfire.RecurringJobManager.RecurringJobManager()", file="RecurringJobManager.cs"];
m3_3 [label="Exit Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", span="40-40", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", file="RecurringJobManager.cs"];
m3_4 [label="Entry Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.IBackgroundJobClient)", span="45-45", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.IBackgroundJobClient)", file="RecurringJobManager.cs"];
m3_51 [label="Entry Hangfire.RecurringJobManager.Trigger(string)", span="108-108", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m3_52 [label="recurringJobId == null", span="110-110", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m3_55 [label="var hash = connection.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', recurringJobId))", span="114-114", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m3_53 [label="throw new ArgumentNullException(''recurringJobId'');", span="110-110", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m3_54 [label="var connection = _storage.GetConnection()", span="112-112", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m3_56 [label="hash == null", span="115-115", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m3_58 [label="var job = JobHelper.FromJson<InvocationData>(hash[''Job'']).Deserialize()", span="120-120", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m3_60 [label="hash.ContainsKey(''Queue'')", span="123-123", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m3_61 [label="state.Queue = hash[''Queue'']", span="125-125", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m3_57 [label="return;", span="117-117", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m3_59 [label="var state = new EnqueuedState { Reason = ''Triggered using recurring job manager'' }", span="121-121", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m3_62 [label="_client.Create(job, state)", span="128-128", cluster="Hangfire.RecurringJobManager.Trigger(string)", color=red, community=0, file="RecurringJobManager.cs"];
m3_63 [label="Exit Hangfire.RecurringJobManager.Trigger(string)", span="108-108", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m3_70 [label="Entry Hangfire.RecurringJobManager.RemoveIfExists(string)", span="132-132", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m3_71 [label="recurringJobId == null", span="134-134", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m3_75 [label="transaction.RemoveHash(String.Format(''recurring-job:{0}'', recurringJobId))", span="139-139", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m3_76 [label="transaction.RemoveFromSet(''recurring-jobs'', recurringJobId)", span="140-140", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m3_72 [label="throw new ArgumentNullException(''recurringJobId'');", span="134-134", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m3_73 [label="var connection = _storage.GetConnection()", span="136-136", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m3_74 [label="var transaction = connection.CreateWriteTransaction()", span="137-137", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m3_77 [label="transaction.Commit()", span="142-142", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m3_78 [label="Exit Hangfire.RecurringJobManager.RemoveIfExists(string)", span="132-132", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m3_47 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RecurringJobManager.cs"];
m3_87 [label="Entry Unk.GetNextOccurrence", span="", cluster="Unk.GetNextOccurrence", file="RecurringJobManager.cs"];
m3_88 [label="Entry System.ArgumentException.ArgumentException(string, string, System.Exception)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string, System.Exception)", file="RecurringJobManager.cs"];
m3_80 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="43-43", cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="RecurringJobManager.cs"];
m3_68 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RecurringJobManager.cs"];
m3_5 [label="storage == null", span="47-47", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.IBackgroundJobClient)", file="RecurringJobManager.cs"];
m3_13 [label="Entry Unk.OnFeatureEnd", span="", cluster="Unk.OnFeatureEnd", file="RecurringJobManager.cs"];
m3_14 [label="Entry HangFire.Tests.Server.SchedulePollerFeature.TestInitialize()", span="47-47", cluster="HangFire.Tests.Server.SchedulePollerFeature.TestInitialize()", file="RecurringJobManager.cs"];
m3_15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''SchedulePoller''))", span="49-50", cluster="HangFire.Tests.Server.SchedulePollerFeature.TestInitialize()", file="RecurringJobManager.cs", color=green, community=0];
m3_69 [label="Entry Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="65-65", cluster="Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="RecurringJobManager.cs"];
m3_16 [label="Entry Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo)", span="62-62", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo)", color=green, community=0, file="RecurringJobManager.cs"];
m3_17 [label="AddOrUpdate(recurringJobId, job, cronExpression, timeZone, EnqueuedState.DefaultQueue)", span="68-68", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo)", file="RecurringJobManager.cs"];
m3_18 [label="Exit Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo)", span="62-62", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo)", file="RecurringJobManager.cs"];
m3_44 [label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="72-72", cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="RecurringJobManager.cs"];
m3_46 [label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27", cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", file="RecurringJobManager.cs"];
m3_86 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="RecurringJobManager.cs"];
m3_7 [label="client == null", span="48-48", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.IBackgroundJobClient)", file="RecurringJobManager.cs", color=red, community=0];
m3_49 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="41-41", cluster="Hangfire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="RecurringJobManager.cs"];
m3_43 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobManager.cs"];
m3_48 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="51-51", cluster="Hangfire.Storage.IWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RecurringJobManager.cs"];
m3_65 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="RecurringJobManager.cs"];
m3_41 [label="Entry Hangfire.RecurringJobManager.ValidateCronExpression(string)", span="146-146", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs"];
m3_81 [label="var schedule = CrontabSchedule.Parse(cronExpression)", span="150-150", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs"];
m3_82 [label="schedule.GetNextOccurrence(DateTime.UtcNow)", span="151-151", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs"];
m3_83 [label=Exception, span="153-153", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs"];
m3_84 [label="throw new ArgumentException(''CRON expression is invalid. Please see the inner exception for details.'', ''cronExpression'', ex);", span="155-155", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs"];
m3_85 [label="Exit Hangfire.RecurringJobManager.ValidateCronExpression(string)", span="146-146", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs"];
m3_50 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54", cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="RecurringJobManager.cs"];
m3_45 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="RecurringJobManager.cs"];
m3_9 [label="Entry HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", span="40-40", cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", file="RecurringJobManager.cs"];
m3_10 [label="testRunner.OnFeatureEnd()", span="42-42", cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", color=green, community=0, file="RecurringJobManager.cs"];
m3_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="RecurringJobManager.cs"];
m3_8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart", color=red, community=0, file="RecurringJobManager.cs"];
m3_11 [label="testRunner = null", span="43-43", cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", file="RecurringJobManager.cs"];
m3_64 [label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64", cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="RecurringJobManager.cs"];
m3_79 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveHash(string)", span="52-52", cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveHash(string)", file="RecurringJobManager.cs"];
m3_89 [label="Hangfire.RecurringJobManager", span="", file="RecurringJobManager.cs"];
m4_0 [label="Entry HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", span="26-26", cluster="HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", file="RecurringJobManagerFacts.cs"];
m4_1 [label="_command = command", span="28-28", cluster="HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", file="RecurringJobManagerFacts.cs"];
m4_2 [label="Exit HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", span="26-26", cluster="HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", file="RecurringJobManagerFacts.cs"];
m4_13 [label="Entry Unk.GetValues", span="", cluster="Unk.GetValues", file="RecurringJobManagerFacts.cs"];
m4_3 [label="Entry HangFire.Web.BatchCommandHandler.ProcessRequest()", span="31-31", cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", file="RecurringJobManagerFacts.cs"];
m4_4 [label="var request = HttpContext.Current.Request", span="33-33", cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", file="RecurringJobManagerFacts.cs"];
m4_5 [label="var jobIds = request.Form.GetValues(''jobs[]'')", span="34-34", cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", file="RecurringJobManagerFacts.cs"];
m4_6 [label="jobIds == null", span="36-36", cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", file="RecurringJobManagerFacts.cs"];
m4_9 [label=jobIds, span="42-42", cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", file="RecurringJobManagerFacts.cs"];
m4_7 [label="Response.StatusCode = 422", span="38-38", cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", file="RecurringJobManagerFacts.cs"];
m4_8 [label="return;", span="39-39", cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", color=red, community=0, file="RecurringJobManagerFacts.cs"];
m4_10 [label="_command(jobId)", span="44-44", cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", file="RecurringJobManagerFacts.cs"];
m4_11 [label="Response.StatusCode = (int)HttpStatusCode.NoContent", span="47-47", cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", file="RecurringJobManagerFacts.cs"];
m4_12 [label="Exit HangFire.Web.BatchCommandHandler.ProcessRequest()", span="31-31", cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", file="RecurringJobManagerFacts.cs"];
m4_14 [label="Entry Unk._command", span="", cluster="Unk._command", file="RecurringJobManagerFacts.cs"];
m4_15 [label="HangFire.Web.BatchCommandHandler", span="", file="RecurringJobManagerFacts.cs"];
m5_83 [label="Exit HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", span="121-121", cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="SqlServerConnection.cs"];
m5_84 [label="Entry HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", span="131-131", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="SqlServerConnection.cs"];
m5_85 [label="var properties = state.GetProperties()", span="134-134", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", color=red, community=0, file="SqlServerConnection.cs"];
m5_86 [label="var now = DateTime.UtcNow", span="135-135", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", color=red, community=0, file="SqlServerConnection.cs"];
m5_87 [label="properties.Add(''State'', state.StateName)", span="137-137", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="SqlServerConnection.cs"];
m5_88 [label=appendToJob, span="139-139", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="SqlServerConnection.cs"];
m5_131 [label="Entry Mock<IElectStateFilter>.cstr", span="", cluster="Mock<IElectStateFilter>.cstr", file="SqlServerConnection.cs"];
m5_55 [label="context.CandidateState = null", span="73-73", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_48 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.CreateContext()", span="174-174", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.CreateContext()", color=green, community=0, file="SqlServerConnection.cs"];
m5_47 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", span="56-56", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="SqlServerConnection.cs"];
m5_49 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="SqlServerConnection.cs"];
m5_52 [label="Assert.Throws<ArgumentNullException>(() => context.CandidateState = null)", span="73-73", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="SqlServerConnection.cs"];
m5_53 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", span="69-69", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="SqlServerConnection.cs"];
m5_54 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_57 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", span="77-77", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="SqlServerConnection.cs"];
m5_61 [label="Assert.Same(newState.Object, context.CandidateState)", span="84-84", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", color=red, community=0, file="SqlServerConnection.cs"];
m5_51 [label="var context = CreateContext()", span="71-71", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="SqlServerConnection.cs"];
m5_60 [label="context.CandidateState = newState.Object", span="82-82", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="SqlServerConnection.cs", color=red, community=0];
m5_56 [label="Exit lambda expression", span="73-73", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_58 [label="var context = CreateContext()", span="79-79", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="SqlServerConnection.cs"];
m5_59 [label="var newState = new Mock<IState>()", span="80-80", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="SqlServerConnection.cs"];
m5_50 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", span="69-69", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="SqlServerConnection.cs"];
m5_62 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", span="77-77", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="SqlServerConnection.cs"];
m5_63 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", span="88-88", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="SqlServerConnection.cs"];
m5_107 [label="Entry lambda expression", span="138-138", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_39 [label="Exit lambda expression", span="46-50", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_10 [label="Entry HangFire.States.JobState.JobState()", span="33-33", cluster="HangFire.States.JobState.JobState()", file="SqlServerConnection.cs"];
m5_99 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", span="122-122", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="SqlServerConnection.cs"];
m5_12 [label="RegisterDescriptor(ProcessingState.Name, new ProcessingState.Descriptor())", span="36-36", cluster="HangFire.States.JobState.JobState()", file="SqlServerConnection.cs"];
m5_94 [label="Exit HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", span="131-131", cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, HangFire.States.JobState, bool)", file="SqlServerConnection.cs"];
m5_95 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerConnection.cs"];
m5_96 [label="Entry lambda expression", span="141-146", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_97 [label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}'', state.JobId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''State'', state.StateName },\r\n                        })", span="141-146", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_98 [label="Exit lambda expression", span="141-146", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m5_73 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlServerConnection.cs"];
m5_75 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="SqlServerConnection.cs"];
m5_76 [label="var context = CreateContext()", span="101-101", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="SqlServerConnection.cs"];
m5_77 [label="x.RemoveEntry(\r\n                        String.Format(''hangfire:job:{0}:state'', state.JobId))", span="99-100", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_78 [label="_connection.Verify(x => x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(null)))", span="105-106", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="SqlServerConnection.cs"];
m5_79 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="SqlServerConnection.cs"];
m5_28 [label="throw new ArgumentNullException(''state'');", span="51-51", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="SqlServerConnection.cs"];
m5_43 [label="Assert.Equal(_stateContext.Job, context.Job)", span="61-61", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="SqlServerConnection.cs"];
m5_66 [label="_connection.Verify(x => x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(''Value'')))", span="94-95", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="SqlServerConnection.cs"];
m5_111 [label=properties, span="", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ReturnsCandidateState_WhenFiltersArrayIsEmpty()", file="SqlServerConnection.cs"];
m5_112 [label="var context = CreateContext()", span="144-144", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ReturnsCandidateState_WhenFiltersArrayIsEmpty()", file="SqlServerConnection.cs"];
m5_113 [label="var electedState = context.ElectState(Enumerable.Empty<IElectStateFilter>())", span="146-146", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ReturnsCandidateState_WhenFiltersArrayIsEmpty()", file="SqlServerConnection.cs"];
m5_114 [label="Assert.Same(_candidateState.Object, electedState)", span="148-148", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ReturnsCandidateState_WhenFiltersArrayIsEmpty()", file="SqlServerConnection.cs"];
m5_115 [label="_connection.Verify(x => x.CreateWriteTransaction(), Times.Never)", span="149-149", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ReturnsCandidateState_WhenFiltersArrayIsEmpty()", file="SqlServerConnection.cs"];
m5_116 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ReturnsCandidateState_WhenFiltersArrayIsEmpty()", span="142-142", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ReturnsCandidateState_WhenFiltersArrayIsEmpty()", file="SqlServerConnection.cs"];
m5_121 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", span="153-153", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="SqlServerConnection.cs"];
m5_122 [label="var newState = new Mock<IState>()", span="156-156", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="SqlServerConnection.cs"];
m5_123 [label="var filter = new Mock<IElectStateFilter>()", span="158-158", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="SqlServerConnection.cs"];
m5_124 [label="filter.Setup(x => x.OnStateElection(It.IsNotNull<ElectStateContext>()))\r\n                .Callback((ElectStateContext x) => x.CandidateState = newState.Object)", span="159-160", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="SqlServerConnection.cs"];
m5_127 [label="Assert.Same(newState.Object, electedState)", span="168-168", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="SqlServerConnection.cs"];
m5_126 [label="var electedState = context.ElectState(new[] { filter.Object })", span="165-165", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="SqlServerConnection.cs"];
m5_125 [label="var context = CreateContext()", span="162-162", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="SqlServerConnection.cs"];
m5_128 [label="_transaction.Verify(x => x.AddJobState(JobId, _candidateState.Object))", span="170-170", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="SqlServerConnection.cs"];
m5_129 [label="_transaction.Verify(x => x.Dispose())", span="171-171", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", color=red, community=0, file="SqlServerConnection.cs"];
m5_130 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", span="153-153", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="SqlServerConnection.cs"];
m5_133 [label="Entry Unk.ElectState", span="", cluster="Unk.ElectState", file="SqlServerConnection.cs"];
m5_42 [label="Assert.Equal(_stateContext.JobId, context.JobId)", span="60-60", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="SqlServerConnection.cs"];
m5_106 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ThrowsAnException_WhenFiltersArrayIsNull()", span="134-134", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ThrowsAnException_WhenFiltersArrayIsNull()", file="SqlServerConnection.cs"];
m5_71 [label="x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(''Value''))", span="94-95", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_27 [label="state == null", span="51-51", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="SqlServerConnection.cs"];
m5_9 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerConnection.cs"];
m5_89 [label="Entry HangFire.States.ElectStateContext.GetJobParameter<T>(string)", span="63-63", cluster="HangFire.States.ElectStateContext.GetJobParameter<T>(string)", file="SqlServerConnection.cs"];
m5_90 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_93 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="SqlServerConnection.cs"];
m5_91 [label="x.GetJobParameter(''1'', ''Name'')", span="113-113", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_92 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_18 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="SqlServerConnection.cs"];
m5_19 [label="Entry lambda expression", span="26-26", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_137 [label="Entry Unk.OnStateElection", span="", cluster="Unk.OnStateElection", file="SqlServerConnection.cs"];
m5_74 [label="Entry Unk.SetJobParameter", span="", cluster="Unk.SetJobParameter", file="SqlServerConnection.cs"];
m5_144 [label="Entry Unk.AddJobState", span="", cluster="Unk.AddJobState", file="SqlServerConnection.cs"];
m5_68 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="SqlServerConnection.cs"];
m5_16 [label="Console.WriteLine()", span="20-20", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_0 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", span="18-18", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="SqlServerConnection.cs"];
m5_1 [label="var job = Job.FromExpression(() => Console.WriteLine())", span="20-20", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="SqlServerConnection.cs"];
m5_2 [label="_stateContext = new StateContext(JobId, job)", span="21-21", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="SqlServerConnection.cs"];
m5_3 [label="_candidateState = new Mock<IState>()", span="22-22", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="SqlServerConnection.cs"];
m5_4 [label="_connection = new Mock<IStorageConnection>()", span="23-23", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="SqlServerConnection.cs"];
m5_5 [label="_transaction = new Mock<IWriteOnlyTransaction>()", span="24-24", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="SqlServerConnection.cs"];
m5_6 [label="Entry HangFire.States.JobState.GetProperties()", span="24-24", cluster="HangFire.States.JobState.GetProperties()", file="SqlServerConnection.cs"];
m5_7 [label="return new Dictionary<string, string>();", span="26-26", cluster="HangFire.States.JobState.GetProperties()", file="SqlServerConnection.cs"];
m5_13 [label="RegisterDescriptor(ScheduledState.Name, new ScheduledState.Descriptor())", span="37-37", cluster="HangFire.States.JobState.JobState()", file="SqlServerConnection.cs"];
m5_17 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_21 [label="Exit lambda expression", span="26-26", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_22 [label="Entry Unk.CreateWriteTransaction", span="", cluster="Unk.CreateWriteTransaction", file="SqlServerConnection.cs"];
m5_148 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="SqlServerConnection.cs"];
m5_103 [label="Entry lambda expression", span="156-158", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_104 [label="x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', state.JobId),\r\n                JobHelper.ToJson(properties))", span="156-158", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_105 [label="Exit lambda expression", span="156-158", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_69 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="SqlServerConnection.cs"];
m5_41 [label="var context = CreateContext()", span="58-58", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="SqlServerConnection.cs"];
m5_40 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", span="56-56", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="SqlServerConnection.cs"];
m5_15 [label="Exit HangFire.States.JobState.JobState()", span="33-33", cluster="HangFire.States.JobState.JobState()", file="SqlServerConnection.cs"];
m5_20 [label="Entry HangFire.States.SucceededState.Descriptor.Descriptor()", span="49-49", cluster="HangFire.States.SucceededState.Descriptor.Descriptor()", file="SqlServerConnection.cs"];
m5_29 [label="var changingFilters = GlobalJobFilters.Filters\r\n                .OfType<IStateChangedFilter>().ToList()", span="53-54", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="SqlServerConnection.cs"];
m5_30 [label="redis.AcquireLock(\r\n                String.Format(''hangfire:job:{0}:state-lock'', state.JobId), TimeSpan.FromMinutes(1))", span="56-57", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="SqlServerConnection.cs"];
m5_31 [label=changingFilters, span="59-59", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="SqlServerConnection.cs"];
m5_37 [label="return ApplyState(redis, state, appliedFilters, allowedStates);", span="73-73", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="SqlServerConnection.cs"];
m5_38 [label="Exit HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="SqlServerConnection.cs"];
m5_70 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="SqlServerConnection.cs"];
m5_72 [label="Entry Unk.AppendHistory", span="", cluster="Unk.AppendHistory", file="SqlServerConnection.cs"];
m5_80 [label="var transaction = redis.CreateTransaction()", span="124-124", cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="SqlServerConnection.cs"];
m5_81 [label="AppendHistory(transaction, state, appendToJob)", span="126-126", cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="SqlServerConnection.cs"];
m5_82 [label="transaction.Commit()", span="127-127", cluster="HangFire.States.JobState.AppendHistory(IRedisClient, HangFire.States.JobState, bool)", file="SqlServerConnection.cs"];
m5_100 [label="Entry lambda expression", span="148-150", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_101 [label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', state.JobId),\r\n                    properties)", span="148-150", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_102 [label="Exit lambda expression", span="148-150", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_108 [label="context.ElectState(null)", span="138-138", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_109 [label="HangFire.States.JobState", span="", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_118 [label="Entry lambda expression", span="149-149", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_119 [label="x.CreateWriteTransaction()", span="149-149", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_120 [label="Exit lambda expression", span="149-149", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_139 [label="x.CandidateState = newState.Object", span="160-160", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_134 [label="Entry lambda expression", span="159-159", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_138 [label="Entry lambda expression", span="160-160", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_141 [label="Entry lambda expression", span="170-170", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_145 [label="Entry lambda expression", span="171-171", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_135 [label="x.OnStateElection(It.IsNotNull<ElectStateContext>())", span="159-159", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_136 [label="Exit lambda expression", span="159-159", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_140 [label="Exit lambda expression", span="160-160", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_142 [label="x.AddJobState(JobId, _candidateState.Object)", span="170-170", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_143 [label="Exit lambda expression", span="170-170", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_146 [label="x.Dispose()", span="171-171", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m5_147 [label="Exit lambda expression", span="171-171", cluster="lambda expression", file="SqlServerConnection.cs"];
m5_11 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="SqlServerConnection.cs"];
m5_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="SqlServerConnection.cs"];
m5_65 [label="context.SetJobParameter(''Name'', ''Value'')", span="92-92", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="SqlServerConnection.cs"];
m5_64 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="SqlServerConnection.cs"];
m5_67 [label="Entry Unk.IsNullOrEmpty", span="", cluster="Unk.IsNullOrEmpty", file="SqlServerConnection.cs"];
m5_24 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ElectStateContext(\r\n                    _stateContext,\r\n                    null,\r\n                    null,\r\n                    _connection.Object))", span="32-37", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="SqlServerConnection.cs"];
m5_35 [label="Assert.Equal(''connection'', exception.ParamName)", span="52-52", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerConnection.cs"];
m5_25 [label="Assert.Equal(''candidateState'', exception.ParamName)", span="39-39", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="SqlServerConnection.cs"];
m5_32 [label="Entry ElectStateContext.cstr", span="", cluster="ElectStateContext.cstr", file="SqlServerConnection.cs"];
m5_33 [label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="43-43", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerConnection.cs"];
m5_36 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="43-43", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerConnection.cs"];
m5_34 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ElectStateContext(\r\n                    _stateContext,\r\n                    _candidateState.Object,\r\n                    null,\r\n                    null))", span="45-50", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerConnection.cs"];
m5_26 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", span="30-30", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="SqlServerConnection.cs"];
m5_46 [label="Assert.Same(_connection.Object, context.Connection)", span="65-65", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="SqlServerConnection.cs"];
m5_45 [label="Assert.Equal(''State'', context.CurrentState)", span="64-64", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="SqlServerConnection.cs"];
m5_44 [label="Entry Unk.AcquireLock", span="", cluster="Unk.AcquireLock", file="SqlServerConnection.cs"];
m5_8 [label="Exit HangFire.States.JobState.GetProperties()", span="24-24", cluster="HangFire.States.JobState.GetProperties()", file="SqlServerConnection.cs"];
m5_23 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="SqlServerConnection.cs"];
m5_132 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="SqlServerConnection.cs"];
m5_149 [label="return new ElectStateContext(\r\n                _stateContext,\r\n                _candidateState.Object,\r\n                ''State'',\r\n                _connection.Object);", span="176-180", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="SqlServerConnection.cs"];
m5_150 [label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.CreateContext()", span="174-174", cluster="HangFire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="SqlServerConnection.cs"];
m5_110 [label="HangFire.States.JobState", span="", cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="SqlServerConnection.cs"];
m5_117 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="SqlServerConnection.cs"];
m5_151 [label="HangFire.Core.Tests.States.ElectStateContextFacts", span="", file="SqlServerConnection.cs"];
m5_152 [label=context, span="", file="SqlServerConnection.cs"];
m5_153 [label=context, span="", file="SqlServerConnection.cs"];
m5_154 [label=newState, span="", file="SqlServerConnection.cs"];
m6_12 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerJobQueueMonitoringApi.cs"];
m6_7 [label="Entry Unk.True", span="", cluster="Unk.True", file="SqlServerJobQueueMonitoringApi.cs"];
m6_6 [label="Entry Unk.NotEqual", span="", cluster="Unk.NotEqual", file="SqlServerJobQueueMonitoringApi.cs"];
m6_5 [label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerJobQueueMonitoringApi.cs"];
m6_23 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerJobQueueMonitoringApi.cs"];
m6_29 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="SqlServerJobQueueMonitoringApi.cs"];
m6_16 [label="Entry HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsNegative()", span="24-24", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsNegative()", file="SqlServerJobQueueMonitoringApi.cs"];
m6_17 [label="var options = new SqlServerStorageOptions()", span="26-26", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsNegative()", file="SqlServerJobQueueMonitoringApi.cs"];
m6_18 [label="Assert.Throws<ArgumentException>(\r\n                () => options.QueuePollInterval = TimeSpan.FromSeconds(-1))", span="27-28", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsNegative()", file="SqlServerJobQueueMonitoringApi.cs"];
m6_19 [label="Exit HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsNegative()", span="24-24", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsNegative()", file="SqlServerJobQueueMonitoringApi.cs"];
m6_24 [label="Entry HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_SetsTheValue()", span="32-32", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_SetsTheValue()", file="SqlServerJobQueueMonitoringApi.cs"];
m6_25 [label="var options = new SqlServerStorageOptions()", span="34-34", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_SetsTheValue()", file="SqlServerJobQueueMonitoringApi.cs"];
m6_26 [label="options.QueuePollInterval = TimeSpan.FromSeconds(1)", span="35-35", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_SetsTheValue()", file="SqlServerJobQueueMonitoringApi.cs"];
m6_27 [label="Assert.Equal(TimeSpan.FromSeconds(1), options.QueuePollInterval)", span="36-36", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_SetsTheValue()", file="SqlServerJobQueueMonitoringApi.cs"];
m6_28 [label="Exit HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_SetsTheValue()", span="32-32", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_SetsTheValue()", file="SqlServerJobQueueMonitoringApi.cs"];
m6_8 [label="Entry HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", span="16-16", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", file="SqlServerJobQueueMonitoringApi.cs"];
m6_9 [label="var options = new SqlServerStorageOptions()", span="18-18", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", file="SqlServerJobQueueMonitoringApi.cs"];
m6_10 [label="Assert.Throws<ArgumentException>(\r\n                () => options.QueuePollInterval = TimeSpan.Zero)", span="19-20", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", file="SqlServerJobQueueMonitoringApi.cs"];
m6_11 [label="Exit HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", span="16-16", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Set_QueuePollInterval_ShouldThrowAnException_WhenGivenIntervalIsEqualToZero()", file="SqlServerJobQueueMonitoringApi.cs"];
m6_20 [label="Entry lambda expression", span="28-28", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m6_14 [label="options.QueuePollInterval = TimeSpan.Zero", span="20-20", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m6_13 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m6_15 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m6_21 [label="options.QueuePollInterval = TimeSpan.FromSeconds(-1)", span="28-28", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m6_22 [label="Exit lambda expression", span="28-28", cluster="lambda expression", file="SqlServerJobQueueMonitoringApi.cs"];
m6_0 [label="Entry HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", span="8-8", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", file="SqlServerJobQueueMonitoringApi.cs"];
m6_1 [label="var options = new SqlServerStorageOptions()", span="10-10", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", file="SqlServerJobQueueMonitoringApi.cs"];
m6_2 [label="Assert.NotEqual(0, options.QueuePollInterval.TotalSeconds)", span="11-11", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", file="SqlServerJobQueueMonitoringApi.cs"];
m6_3 [label="Assert.True(options.PrepareSchemaIfNecessary)", span="12-12", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", file="SqlServerJobQueueMonitoringApi.cs"];
m6_4 [label="Exit HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", span="8-8", cluster="HangFire.SqlServer.Tests.StorageOptionsFacts.Ctor_SetsTheDefaultOptions()", file="SqlServerJobQueueMonitoringApi.cs"];
m6_30 [label=options, span="", file="SqlServerJobQueueMonitoringApi.cs"];
m6_31 [label=options, span="", file="SqlServerJobQueueMonitoringApi.cs"];
m7_11 [label="Entry Unk.EnqueueItemOnList", span="", cluster="Unk.EnqueueItemOnList", file="SqlServerMonitoringApi.cs"];
m7_15 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="SqlServerMonitoringApi.cs"];
m7_16 [label="Entry HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", span="41-41", cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", file="SqlServerMonitoringApi.cs"];
m7_17 [label="Given(String.Format(''the '{0}' job'', jobId))", span="43-43", cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", file="SqlServerMonitoringApi.cs"];
m7_18 [label="Redis.Client.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', queue),\r\n                jobId)", span="45-47", cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", file="SqlServerMonitoringApi.cs"];
m7_19 [label="Exit HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", span="41-41", cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", file="SqlServerMonitoringApi.cs"];
m7_2 [label="Entry HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", span="19-19", cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", file="SqlServerMonitoringApi.cs"];
m7_3 [label="Given(String.Format(''a job in the '{0}' queue'', DefaultQueue))", span="21-21", cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", file="SqlServerMonitoringApi.cs"];
m7_4 [label="Exit HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", span="19-19", cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", file="SqlServerMonitoringApi.cs"];
m7_5 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SqlServerMonitoringApi.cs"];
m7_43 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="SqlServerMonitoringApi.cs"];
m7_42 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="SqlServerMonitoringApi.cs"];
m7_33 [label="Entry HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", span="74-74", cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="SqlServerMonitoringApi.cs"];
m7_34 [label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="76-77", cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="SqlServerMonitoringApi.cs"];
m7_35 [label="CollectionAssert.DoesNotContain(jobIds, JobSteps.DefaultJobId)", span="79-79", cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="SqlServerMonitoringApi.cs"];
m7_36 [label="Exit HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", span="74-74", cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="SqlServerMonitoringApi.cs"];
m7_7 [label="Entry HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", span="25-25", cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="SqlServerMonitoringApi.cs"];
m7_8 [label="Given(''a job'')", span="27-27", cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="SqlServerMonitoringApi.cs"];
m7_9 [label="Redis.Client.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', queue),\r\n                JobSteps.DefaultJobId)", span="29-31", cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="SqlServerMonitoringApi.cs"];
m7_10 [label="Exit HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", span="25-25", cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="SqlServerMonitoringApi.cs"];
m7_30 [label="Entry HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", span="68-68", cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", file="SqlServerMonitoringApi.cs"];
m7_31 [label="Then(String.Format(''the '{0}' queue does not contain the job'', DefaultQueue))", span="70-70", cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", file="SqlServerMonitoringApi.cs"];
m7_32 [label="Exit HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", span="68-68", cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", file="SqlServerMonitoringApi.cs"];
m7_24 [label="Entry HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", span="58-58", cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", file="SqlServerMonitoringApi.cs"];
m7_25 [label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="60-61", cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", file="SqlServerMonitoringApi.cs"];
m7_26 [label="CollectionAssert.Contains(jobIds, JobSteps.DefaultJobId)", span="63-63", cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", file="SqlServerMonitoringApi.cs"];
m7_27 [label="Exit HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", span="58-58", cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", file="SqlServerMonitoringApi.cs"];
m7_28 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="SqlServerMonitoringApi.cs"];
m7_29 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="SqlServerMonitoringApi.cs"];
m7_23 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="SqlServerMonitoringApi.cs"];
m7_6 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="SqlServerMonitoringApi.cs"];
m7_37 [label="Entry Unk.DoesNotContain", span="", cluster="Unk.DoesNotContain", file="SqlServerMonitoringApi.cs"];
m7_12 [label="Entry HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", span="35-35", cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", file="SqlServerMonitoringApi.cs"];
m7_13 [label="Given(String.Format(''the '{0}' job in the '{1}' queue'', jobId, DefaultQueue))", span="37-37", cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", file="SqlServerMonitoringApi.cs"];
m7_14 [label="Exit HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", span="35-35", cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", file="SqlServerMonitoringApi.cs"];
m7_44 [label="Entry HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", span="91-91", cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="SqlServerMonitoringApi.cs"];
m7_45 [label="var actualLength = Redis.Client.GetListCount(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="93-94", cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="SqlServerMonitoringApi.cs"];
m7_46 [label="Assert.AreEqual(length, actualLength)", span="95-95", cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="SqlServerMonitoringApi.cs"];
m7_47 [label="Exit HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", span="91-91", cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="SqlServerMonitoringApi.cs"];
m7_20 [label="Entry HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", span="51-51", cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="SqlServerMonitoringApi.cs"];
m7_21 [label="Then(String.Format(''the '{0}' queue contains the job'', DefaultQueue))", span="53-53", cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="SqlServerMonitoringApi.cs"];
m7_22 [label="Exit HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", span="51-51", cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="SqlServerMonitoringApi.cs"];
m7_38 [label="Entry HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", span="83-83", cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="SqlServerMonitoringApi.cs"];
m7_39 [label="var length = Redis.Client.GetListCount(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="85-86", cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="SqlServerMonitoringApi.cs"];
m7_40 [label="Assert.AreEqual(0, length)", span="87-87", cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="SqlServerMonitoringApi.cs"];
m7_41 [label="Exit HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", span="83-83", cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="SqlServerMonitoringApi.cs"];
m7_0 [label="Entry HangFire.Tests.QueueSteps.GivenAnEmptyQueue()", span="14-14", cluster="HangFire.Tests.QueueSteps.GivenAnEmptyQueue()", file="SqlServerMonitoringApi.cs"];
m7_1 [label="Exit HangFire.Tests.QueueSteps.GivenAnEmptyQueue()", span="14-14", cluster="HangFire.Tests.QueueSteps.GivenAnEmptyQueue()", file="SqlServerMonitoringApi.cs"];
m8_10 [label="connection.Execute(script)", span="56-56", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m8_18 [label="throw new ArgumentException(''Only DateTime values in UTC should be passed.'', ''lastInstant'');", span="53-53", cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="SqlServerObjectsInstaller.cs"];
m8_20 [label="var endTime = NowInstant.AddSeconds(1)", span="57-57", cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="SqlServerObjectsInstaller.cs", color=green, community=0];
m8_26 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="SqlServerObjectsInstaller.cs"];
m8_27 [label="TimeZoneInfo.ConvertTimeToUtc(x, _timeZone)", span="63-63", cluster="lambda expression", file="SqlServerObjectsInstaller.cs"];
m8_28 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="SqlServerObjectsInstaller.cs"];
m8_39 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="SqlServerObjectsInstaller.cs"];
m8_25 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="SqlServerObjectsInstaller.cs"];
m8_12 [label="ex.ErrorCode == 1205", span="61-61", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m8_15 [label="i++", span="52-52", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m8_0 [label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="35-35", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m8_5 [label="throw new PlatformNotSupportedException(''The SQL Server edition of the target server is unsupported, e.g. SQL Azure.'');", span="43-43", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=green, community=0, file="SqlServerObjectsInstaller.cs"];
m8_3 [label="Log.Info(''Start installing Hangfire SQL objects...'')", span="39-39", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m8_6 [label="var script = GetStringResource(\r\n                typeof(SqlServerObjectsInstaller).Assembly, \r\n                ''Hangfire.SqlServer.Install.sql'')", span="46-48", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=green, community=0, file="SqlServerObjectsInstaller.cs"];
m8_7 [label="script = script.Replace(''SET @TARGET_SCHEMA_VERSION = 5;'', ''SET @TARGET_SCHEMA_VERSION = '' + RequiredSchemaVersion + '';'')", span="50-50", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=green, community=0, file="SqlServerObjectsInstaller.cs"];
m8_8 [label="var i = 0", span="52-52", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m8_1 [label="connection == null", span="37-37", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m8_4 [label="!IsSqlEditionSupported(connection)", span="41-41", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m8_2 [label="throw new ArgumentNullException(''connection'');", span="37-37", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m8_9 [label="i < RetryAttempts", span="52-52", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m8_14 [label="throw;", span="67-67", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m8_23 [label="Entry Unk.GetNextOccurrences", span="", cluster="Unk.GetNextOccurrences", file="SqlServerObjectsInstaller.cs"];
m8_13 [label="Log.WarnException(''Deadlock occurred during automatic migration execution. Retrying...'', ex)", span="63-63", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m8_29 [label="Hangfire.Server.ScheduleInstant", span="", cluster="Unk.>", file="SqlServerObjectsInstaller.cs"];
m8_16 [label="Log.Info(''Hangfire SQL objects installed.'')", span="72-72", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m8_19 [label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202", cluster="Hangfire.Logging.ILog.Info(string)", file="SqlServerObjectsInstaller.cs"];
m8_21 [label="Entry System.PlatformNotSupportedException.PlatformNotSupportedException(string)", span="0-0", cluster="System.PlatformNotSupportedException.PlatformNotSupportedException(string)", file="SqlServerObjectsInstaller.cs"];
m8_17 [label="Exit Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="35-35", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerObjectsInstaller.cs"];
m8_22 [label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="81-81", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs"];
m8_38 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SqlServerObjectsInstaller.cs"];
m8_37 [label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0", cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="SqlServerObjectsInstaller.cs"];
m8_11 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerObjectsInstaller.cs"];
m8_31 [label="var stream = assembly.GetManifestResourceStream(resourceName)", span="83-83", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs"];
m8_33 [label="throw new InvalidOperationException(String.Format(\r\n                        ''Requested resource `{0}` was not found in the assembly `{1}`.'',\r\n                        resourceName,\r\n                        assembly));", span="87-90", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs"];
m8_32 [label="stream == null", span="85-85", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs"];
m8_34 [label="var reader = new StreamReader(stream)", span="93-93", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs"];
m8_35 [label="return reader.ReadToEnd();", span="95-95", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs"];
m8_36 [label="Exit Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="81-81", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerObjectsInstaller.cs"];
m8_24 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerObjectsInstaller.cs"];
m8_40 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="SqlServerObjectsInstaller.cs"];
m8_30 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="SqlServerObjectsInstaller.cs"];
m8_41 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="SqlServerObjectsInstaller.cs"];
m9_61 [label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="129-129", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="SqlServerStorage.cs"];
m9_123 [label="return new ServerBootstrapper(ServerId, _context, _storage.Object, _supervisorFactory);", span="131-131", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="SqlServerStorage.cs"];
m9_124 [label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="129-129", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="SqlServerStorage.cs"];
m9_34 [label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="42-42", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="SqlServerStorage.cs"];
m9_35 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, null, _storage.Object, _supervisorFactory))", span="44-45", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="SqlServerStorage.cs"];
m9_36 [label="Assert.Equal(''context'', exception.ParamName)", span="47-47", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="SqlServerStorage.cs"];
m9_37 [label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="42-42", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="SqlServerStorage.cs"];
m9_82 [label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", span="90-90", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", file="SqlServerStorage.cs"];
m9_83 [label="var server = CreateServer()", span="92-92", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", file="SqlServerStorage.cs"];
m9_84 [label="server.Execute(_token)", span="93-93", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", file="SqlServerStorage.cs"];
m9_85 [label="_supervisor.Verify(x => x.Start())", span="95-95", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", file="SqlServerStorage.cs"];
m9_86 [label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", span="90-90", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", file="SqlServerStorage.cs"];
m9_29 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="SqlServerStorage.cs"];
m9_13 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="SqlServerStorage.cs"];
m9_48 [label="Entry HangFire.Server.ServerBootstrapper.ServerBootstrapper(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerSupervisor>)", span="31-31", cluster="HangFire.Server.ServerBootstrapper.ServerBootstrapper(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerSupervisor>)", file="SqlServerStorage.cs"];
m9_11 [label="Entry Mock<IServerSupervisor>.cstr", span="", cluster="Mock<IServerSupervisor>.cstr", file="SqlServerStorage.cs"];
m9_41 [label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="51-51", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerStorage.cs"];
m9_42 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, _context, null, _supervisorFactory))", span="53-54", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerStorage.cs"];
m9_43 [label="Assert.Equal(''storage'', exception.ParamName)", span="56-56", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerStorage.cs"];
m9_44 [label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="51-51", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerStorage.cs"];
m9_99 [label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="109-109", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="SqlServerStorage.cs"];
m9_100 [label="var server = CreateServer()", span="111-111", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="SqlServerStorage.cs"];
m9_101 [label="server.Execute(_token)", span="113-113", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="SqlServerStorage.cs"];
m9_102 [label="_connection.Verify(x => x.RemoveServer(ServerId))", span="115-115", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="SqlServerStorage.cs"];
m9_103 [label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="109-109", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="SqlServerStorage.cs"];
m9_28 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerStorage.cs"];
m9_12 [label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0", cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="SqlServerStorage.cs"];
m9_4 [label="_supervisorFactory = new Lazy<IServerSupervisor>(() => _supervisor.Object)", span="25-25", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerStorage.cs"];
m9_108 [label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", span="119-119", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="SqlServerStorage.cs"];
m9_109 [label="_supervisor.Setup(x => x.Dispose()).Throws<InvalidOperationException>()", span="121-121", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="SqlServerStorage.cs"];
m9_110 [label="var server = CreateServer()", span="122-122", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="SqlServerStorage.cs"];
m9_111 [label="Assert.Throws<InvalidOperationException>(() => server.Execute(_token))", span="124-124", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="SqlServerStorage.cs"];
m9_112 [label="_connection.Verify(x => x.RemoveServer(It.IsAny<string>()))", span="126-126", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="SqlServerStorage.cs"];
m9_113 [label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", span="119-119", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="SqlServerStorage.cs"];
m9_23 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="SqlServerStorage.cs"];
m9_62 [label="Entry HangFire.Server.ServerBootstrapper.Execute(System.Threading.CancellationToken)", span="48-48", cluster="HangFire.Server.ServerBootstrapper.Execute(System.Threading.CancellationToken)", file="SqlServerStorage.cs"];
m9_24 [label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="33-33", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerStorage.cs"];
m9_25 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(null, _context, _storage.Object, _supervisorFactory))", span="35-36", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerStorage.cs"];
m9_26 [label="Assert.Equal(''serverId'', exception.ParamName)", span="38-38", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerStorage.cs"];
m9_27 [label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="33-33", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerStorage.cs"];
m9_68 [label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="79-79", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="SqlServerStorage.cs"];
m9_70 [label="server.Execute(_token)", span="83-83", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", color=green, community=0, file="SqlServerStorage.cs"];
m9_69 [label="var server = CreateServer()", span="81-81", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="SqlServerStorage.cs"];
m9_71 [label="_storage.Verify(x => x.GetConnection(), Times.Exactly(2))", span="85-85", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="SqlServerStorage.cs"];
m9_72 [label="_connection.Verify(x => x.Dispose(), Times.Exactly(2))", span="86-86", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="SqlServerStorage.cs"];
m9_73 [label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="79-79", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="SqlServerStorage.cs"];
m9_49 [label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", span="60-60", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", file="SqlServerStorage.cs"];
m9_50 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, _context, _storage.Object, null))", span="62-63", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", file="SqlServerStorage.cs"];
m9_51 [label="Assert.Equal(''supervisorFactory'', exception.ParamName)", span="65-65", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", file="SqlServerStorage.cs"];
m9_52 [label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", span="60-60", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", file="SqlServerStorage.cs"];
m9_15 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="SqlServerStorage.cs"];
m9_81 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="SqlServerStorage.cs"];
m9_9 [label="Entry HangFire.Server.ServerContext.ServerContext()", span="18-18", cluster="HangFire.Server.ServerContext.ServerContext()", file="SqlServerStorage.cs"];
m9_33 [label="Entry ServerBootstrapper.cstr", span="", cluster="ServerBootstrapper.cstr", file="SqlServerStorage.cs"];
m9_74 [label="Entry Unk.Exactly", span="", cluster="Unk.Exactly", file="SqlServerStorage.cs"];
m9_120 [label="Entry lambda expression", span="126-126", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_18 [label="_supervisor.Object", span="25-25", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_31 [label="new ServerBootstrapper(null, _context, _storage.Object, _supervisorFactory)", span="36-36", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_39 [label="new ServerBootstrapper(ServerId, null, _storage.Object, _supervisorFactory)", span="45-45", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_46 [label="new ServerBootstrapper(ServerId, _context, null, _supervisorFactory)", span="54-54", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_54 [label="new ServerBootstrapper(ServerId, _context, _storage.Object, null)", span="63-63", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_65 [label="x.AnnounceServer(ServerId, _context)", span="75-75", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_118 [label="server.Execute(_token)", span="124-124", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_75 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_17 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_19 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_20 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_30 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_32 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_38 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_40 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_45 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_47 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_53 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_55 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_64 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_66 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_78 [label="Entry lambda expression", span="86-86", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_87 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_96 [label="Entry lambda expression", span="105-105", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_104 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_114 [label="Entry lambda expression", span="121-121", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_117 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_119 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_77 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_76 [label="x.GetConnection()", span="85-85", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_22 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_21 [label="x.GetConnection()", span="29-29", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_121 [label="x.RemoveServer(It.IsAny<string>())", span="126-126", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_80 [label="Exit lambda expression", span="86-86", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_79 [label="x.Dispose()", span="86-86", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_89 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_88 [label="x.Start()", span="95-95", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_98 [label="Exit lambda expression", span="105-105", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_97 [label="x.Dispose()", span="105-105", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_106 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_105 [label="x.RemoveServer(ServerId)", span="115-115", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_116 [label="Exit lambda expression", span="121-121", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_115 [label="x.Dispose()", span="121-121", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_122 [label="Exit lambda expression", span="126-126", cluster="lambda expression", file="SqlServerStorage.cs"];
m9_0 [label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorage.cs"];
m9_1 [label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="26-26", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorage.cs"];
m9_2 [label="PrepareSchemaIfNecessary = true", span="27-27", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorage.cs"];
m9_3 [label="Exit HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorage.cs"];
m9_5 [label="HangFire.SqlServer.SqlServerStorageOptions", span="", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerStorage.cs"];
m9_6 [label="_token = new CancellationToken(true)", span="27-27", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerStorage.cs"];
m9_7 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="29-29", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerStorage.cs"];
m9_8 [label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", span="20-20", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerStorage.cs"];
m9_67 [label="Entry Unk.AnnounceServer", span="", cluster="Unk.AnnounceServer", file="SqlServerStorage.cs"];
m9_14 [label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="SqlServerStorage.cs"];
m9_90 [label="Entry Unk.Start", span="", cluster="Unk.Start", file="SqlServerStorage.cs"];
m9_107 [label="Entry Unk.RemoveServer", span="", cluster="Unk.RemoveServer", file="SqlServerStorage.cs"];
m9_16 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="SqlServerStorage.cs"];
m9_56 [label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="69-69", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="SqlServerStorage.cs"];
m9_57 [label="var server = CreateServer()", span="71-71", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="SqlServerStorage.cs"];
m9_58 [label="server.Execute(_token)", span="73-73", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="SqlServerStorage.cs"];
m9_59 [label="_connection.Verify(x => x.AnnounceServer(ServerId, _context))", span="75-75", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="SqlServerStorage.cs"];
m9_60 [label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="69-69", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="SqlServerStorage.cs"];
m9_91 [label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", span="99-99", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="SqlServerStorage.cs"];
m9_92 [label="var server = CreateServer()", span="101-101", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="SqlServerStorage.cs"];
m9_93 [label="server.Execute(_token)", span="103-103", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="SqlServerStorage.cs"];
m9_94 [label="_supervisor.Verify(x => x.Dispose())", span="105-105", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="SqlServerStorage.cs"];
m9_95 [label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", span="99-99", cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="SqlServerStorage.cs"];
m9_63 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="SqlServerStorage.cs"];
m9_10 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="SqlServerStorage.cs"];
m9_125 [label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", span="", file="SqlServerStorage.cs"];
m9_126 [label=server, span="", file="SqlServerStorage.cs"];
m10_10 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerStorageOptions.cs"];
m10_11 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="SqlServerStorageOptions.cs"];
m10_12 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="SqlServerStorageOptions.cs"];
m10_0 [label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m10_1 [label="TransactionIsolationLevel = null", span="27-27", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m10_2 [label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="28-28", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m10_3 [label="InvisibilityTimeout = TimeSpan.FromMinutes(30)", span="29-29", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m10_4 [label="JobExpirationCheckInterval = TimeSpan.FromHours(1)", span="30-30", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m10_5 [label="CountersAggregateInterval = TimeSpan.FromMinutes(5)", span="31-31", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m10_6 [label="PrepareSchemaIfNecessary = true", span="32-32", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m10_7 [label="DashboardJobListLimit = 50000", span="33-33", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m10_8 [label="TransactionTimeout = TimeSpan.FromMinutes(1)", span="34-34", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m10_9 [label="Exit Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m10_13 [label="Hangfire.SqlServer.SqlServerStorageOptions", span="", file="SqlServerStorageOptions.cs"];
m11_97 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="341-341", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="SqlServerWriteOnlyTransaction.cs"];
m11_252 [label="AcquireLock(String.Format(''Hangfire:Set:Lock''))", span="343-343", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="SqlServerWriteOnlyTransaction.cs"];
m11_253 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="341-341", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="SqlServerWriteOnlyTransaction.cs"];
m11_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_101 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="173-173", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_102 [label="string query = @''delete from HangFire.[Set] where [Key] = @key and Value = @value''", span="175-175", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m11_104 [label="QueueCommand(x => x.Execute(\r\n                query,\r\n                new { key, value }))", span="178-180", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_103 [label="AcquireSetLock()", span="177-177", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_105 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="173-173", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_45 [label="Entry Hangfire.States.IState.SerializeData()", span="202-202", cluster="Hangfire.States.IState.SerializeData()", file="SqlServerWriteOnlyTransaction.cs"];
m11_6 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="44-44", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m11_7 [label="_storage.UseTransaction(connection =>\r\n            {\r\n                connection.EnlistTransaction(Transaction.Current);\r\n\r\n                if (_lockedResources.Count > 0)\r\n                {\r\n                    connection.Execute(\r\n                        ''set nocount on;'' +\r\n                        ''exec sp_getapplock @Resource=@resource, @LockMode=N'Exclusive''',\r\n                        _lockedResources.Select(x => new { resource = x }));\r\n                }\r\n\r\n                foreach (var command in _commandQueue)\r\n                {\r\n                    command(connection);\r\n                }\r\n            })", span="46-62", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m11_8 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="44-44", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m11_60 [label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue()", span="20-20", cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue()", file="SqlServerWriteOnlyTransaction.cs"];
m11_65 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_66 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="127-129", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m11_67 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_59 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_225 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="309-309", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_226 [label="key == null", span="311-311", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_230 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="317-317", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_227 [label="throw new ArgumentNullException(''key'');", span="311-311", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_228 [label="string query = @''\r\nupdate HangFire.[Set] set ExpireAt = null where [Key] = @key''", span="313-314", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", color=red, community=1, file="SqlServerWriteOnlyTransaction.cs"];
m11_229 [label="AcquireSetLock()", span="316-316", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_231 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="309-309", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_77 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_78 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="141-143", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m11_79 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_235 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="320-320", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_236 [label="key == null", span="322-322", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_240 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="328-328", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_237 [label="throw new ArgumentNullException(''key'');", span="322-322", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_238 [label="string query = @''\r\nupdate HangFire.[List] set ExpireAt = null where [Key] = @key''", span="324-325", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", color=red, community=1, file="SqlServerWriteOnlyTransaction.cs"];
m11_239 [label="AcquireListLock()", span="327-327", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_241 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="320-320", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_250 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="SqlServerWriteOnlyTransaction.cs"];
m11_195 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="276-276", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_196 [label="key == null", span="278-278", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_200 [label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="284-284", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_197 [label="throw new ArgumentNullException(''key'');", span="278-278", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_198 [label="string query = @''\r\nupdate HangFire.[Set] set ExpireAt = @expireAt where [Key] = @key''", span="280-281", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", color=red, community=1, file="SqlServerWriteOnlyTransaction.cs"];
m11_199 [label="AcquireSetLock()", span="283-283", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_201 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="276-276", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_251 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="351-351", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_256 [label="_lockedResources.Add(resource)", span="353-353", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_257 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="351-351", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_141 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="346-346", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="SqlServerWriteOnlyTransaction.cs"];
m11_254 [label="AcquireLock(String.Format(''Hangfire:Hash:Lock''))", span="348-348", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="SqlServerWriteOnlyTransaction.cs"];
m11_255 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="346-346", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="SqlServerWriteOnlyTransaction.cs"];
m11_247 [label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="SqlServerWriteOnlyTransaction.cs"];
m11_38 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="79-79", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="SqlServerWriteOnlyTransaction.cs"];
m11_39 [label="string addAndSetStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate HangFire.Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="81-84", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", color=red, community=1, file="SqlServerWriteOnlyTransaction.cs"];
m11_40 [label="QueueCommand(x => x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                }))", span="86-96", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="SqlServerWriteOnlyTransaction.cs"];
m11_41 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="79-79", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="SqlServerWriteOnlyTransaction.cs"];
m11_205 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="287-287", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_206 [label="key == null", span="289-289", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_210 [label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="295-295", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_207 [label="throw new ArgumentNullException(''key'');", span="289-289", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_208 [label="string query = @''\r\nupdate HangFire.[List] set ExpireAt = @expireAt where [Key] = @key''", span="291-292", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", color=red, community=1, file="SqlServerWriteOnlyTransaction.cs"];
m11_209 [label="AcquireListLock()", span="294-294", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_211 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="287-287", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_47 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="99-99", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="SqlServerWriteOnlyTransaction.cs"];
m11_48 [label="string addStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="101-103", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", color=red, community=1, file="SqlServerWriteOnlyTransaction.cs"];
m11_49 [label="QueueCommand(x => x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                }))", span="105-114", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="SqlServerWriteOnlyTransaction.cs"];
m11_50 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="99-99", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="SqlServerWriteOnlyTransaction.cs"];
m11_83 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_84 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="148-150", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m11_85 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_175 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="255-255", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_176 [label="key == null", span="257-257", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_180 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="262-262", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_177 [label="throw new ArgumentNullException(''key'');", span="257-257", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_178 [label="string query = @''delete from HangFire.[Set] where [Key] = @key''", span="259-259", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m11_179 [label="AcquireSetLock()", span="261-261", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_181 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="255-255", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_89 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_90 [label="AddToSet(key, value, 0.0)", span="155-155", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_91 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_27 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="331-331", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs"];
m11_245 [label="_commandQueue.Enqueue(action)", span="333-333", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs"];
m11_246 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="331-331", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs"];
m11_54 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="117-117", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_55 [label="var provider = _storage.QueueProviders.GetProvider(queue)", span="119-119", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_57 [label="QueueCommand(x => persistentQueue.Enqueue(x, queue, jobId))", span="122-122", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_56 [label="var persistentQueue = provider.GetJobQueue()", span="120-120", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_58 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="117-117", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_9 [label="Entry Unk.UseTransaction", span="", cluster="Unk.UseTransaction", file="SqlServerWriteOnlyTransaction.cs"];
m11_17 [label="Entry Unk.EnlistTransaction", span="", cluster="Unk.EnlistTransaction", file="SqlServerWriteOnlyTransaction.cs"];
m11_20 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="SqlServerWriteOnlyTransaction.cs"];
m11_64 [label="Entry Unk.Enqueue", span="", cluster="Unk.Enqueue", file="SqlServerWriteOnlyTransaction.cs"];
m11_71 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_72 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="134-136", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m11_73 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_92 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs"];
m11_93 [label="string addSql = @''\r\n;merge HangFire.[Set] with (holdlock) as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="160-165", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", color=red, community=1, file="SqlServerWriteOnlyTransaction.cs"];
m11_95 [label="QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="168-170", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs"];
m11_94 [label="AcquireSetLock()", span="167-167", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs"];
m11_96 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs"];
m11_132 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="214-214", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerWriteOnlyTransaction.cs"];
m11_133 [label="key == null", span="216-216", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerWriteOnlyTransaction.cs"];
m11_135 [label="keyValuePairs == null", span="217-217", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerWriteOnlyTransaction.cs"];
m11_139 [label="QueueCommand(x => x.Execute(\r\n                sql,\r\n                keyValuePairs.Select(y => new { key = key, field = y.Key, value = y.Value })))", span="227-229", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerWriteOnlyTransaction.cs"];
m11_134 [label="throw new ArgumentNullException(''key'');", span="216-216", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerWriteOnlyTransaction.cs"];
m11_136 [label="throw new ArgumentNullException(''keyValuePairs'');", span="217-217", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerWriteOnlyTransaction.cs"];
m11_137 [label="string sql = @''\r\n;merge HangFire.Hash with (holdlock) as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="219-224", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=red, community=1, file="SqlServerWriteOnlyTransaction.cs"];
m11_138 [label="AcquireHashLock()", span="226-226", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerWriteOnlyTransaction.cs"];
m11_140 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="214-214", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerWriteOnlyTransaction.cs"];
m11_149 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="232-232", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_150 [label="key == null", span="234-234", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_154 [label="QueueCommand(x => x.Execute(query, new { key }))", span="239-239", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_151 [label="throw new ArgumentNullException(''key'');", span="234-234", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_152 [label="string query = @''delete from HangFire.Hash where [Key] = @key''", span="236-236", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m11_153 [label="AcquireHashLock()", span="238-238", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_155 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="232-232", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_31 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_32 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="72-72", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_33 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="74-76", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m11_34 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="72-72", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_0 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", span="37-37", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerWriteOnlyTransaction.cs"];
m11_1 [label="storage == null", span="39-39", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerWriteOnlyTransaction.cs"];
m11_3 [label="_storage = storage", span="41-41", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerWriteOnlyTransaction.cs"];
m11_2 [label="throw new ArgumentNullException(''storage'');", span="39-39", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerWriteOnlyTransaction.cs"];
m11_4 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", span="37-37", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerWriteOnlyTransaction.cs"];
m11_185 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="265-265", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_186 [label="key == null", span="267-267", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_190 [label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="273-273", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_187 [label="throw new ArgumentNullException(''key'');", span="267-267", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_188 [label="string query = @''\r\nupdate HangFire.[Hash] set ExpireAt = @expireAt where [Key] = @key''", span="269-270", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", color=red, community=1, file="SqlServerWriteOnlyTransaction.cs"];
m11_189 [label="AcquireHashLock()", span="272-272", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_191 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="265-265", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_46 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="SqlServerWriteOnlyTransaction.cs"];
m11_24 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="65-65", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_25 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="67-69", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m11_26 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="65-65", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m11_242 [label="Entry lambda expression", span="328-328", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_10 [label="Entry lambda expression", span="46-62", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_11 [label="connection.EnlistTransaction(Transaction.Current)", span="48-48", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_13 [label="connection.Execute(\r\n                        ''set nocount on;'' +\r\n                        ''exec sp_getapplock @Resource=@resource, @LockMode=N'Exclusive''',\r\n                        _lockedResources.Select(x => new { resource = x }))", span="52-55", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_15 [label="command(connection)", span="60-60", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_12 [label="_lockedResources.Count > 0", span="50-50", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_14 [label=_commandQueue, span="58-58", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_21 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_16 [label="Exit lambda expression", span="46-62", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_22 [label="new { resource = x }", span="55-55", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_23 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_29 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="67-69", cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m11_28 [label="Entry lambda expression", span="67-69", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_30 [label="Exit lambda expression", span="67-69", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_36 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="74-76", cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m11_35 [label="Entry lambda expression", span="74-76", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_37 [label="Exit lambda expression", span="74-76", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_43 [label="x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                })", span="86-96", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_42 [label="Entry lambda expression", span="86-96", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_44 [label="Exit lambda expression", span="86-96", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_52 [label="x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                })", span="105-114", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_51 [label="Entry lambda expression", span="105-114", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_53 [label="Exit lambda expression", span="105-114", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_62 [label="persistentQueue.Enqueue(x, queue, jobId)", span="122-122", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_61 [label="Entry lambda expression", span="122-122", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_63 [label="Exit lambda expression", span="122-122", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_69 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="127-129", cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m11_68 [label="Entry lambda expression", span="127-129", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_70 [label="Exit lambda expression", span="127-129", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_75 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="134-136", cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m11_74 [label="Entry lambda expression", span="134-136", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_76 [label="Exit lambda expression", span="134-136", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_81 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="141-143", cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m11_80 [label="Entry lambda expression", span="141-143", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_82 [label="Exit lambda expression", span="141-143", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_87 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="148-150", cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m11_86 [label="Entry lambda expression", span="148-150", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_88 [label="Exit lambda expression", span="148-150", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_99 [label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="168-170", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_98 [label="Entry lambda expression", span="168-170", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_100 [label="Exit lambda expression", span="168-170", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_107 [label="x.Execute(\r\n                query,\r\n                new { key, value })", span="178-180", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_106 [label="Entry lambda expression", span="178-180", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_108 [label="Exit lambda expression", span="178-180", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_115 [label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value);'',\r\n                new { key, value })", span="186-188", cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m11_114 [label="Entry lambda expression", span="186-188", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_116 [label="Exit lambda expression", span="186-188", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_122 [label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="194-196", cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m11_121 [label="Entry lambda expression", span="194-196", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_123 [label="Exit lambda expression", span="194-196", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_130 [label="x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="209-211", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_129 [label="Entry lambda expression", span="209-211", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_131 [label="Exit lambda expression", span="209-211", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_144 [label="x.Execute(\r\n                sql,\r\n                keyValuePairs.Select(y => new { key = key, field = y.Key, value = y.Value }))", span="227-229", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_147 [label="new { key = key, field = y.Key, value = y.Value }", span="229-229", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_143 [label="Entry lambda expression", span="227-229", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_145 [label="Exit lambda expression", span="227-229", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_146 [label="Entry lambda expression", span="229-229", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_148 [label="Exit lambda expression", span="229-229", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_157 [label="x.Execute(query, new { key })", span="239-239", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_156 [label="Entry lambda expression", span="239-239", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_158 [label="Exit lambda expression", span="239-239", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_169 [label="x.Execute(query, items.Select(value => new { key = key, value = value }).ToList())", span="252-252", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_173 [label="new { key = key, value = value }", span="252-252", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_168 [label="Entry lambda expression", span="252-252", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_170 [label="Exit lambda expression", span="252-252", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_172 [label="Entry lambda expression", span="252-252", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_174 [label="Exit lambda expression", span="252-252", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_183 [label="x.Execute(query, new { key = key })", span="262-262", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_182 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_184 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_193 [label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="273-273", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_192 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_194 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_203 [label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="284-284", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_202 [label="Entry lambda expression", span="284-284", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_204 [label="Exit lambda expression", span="284-284", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_213 [label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="295-295", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_212 [label="Entry lambda expression", span="295-295", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_214 [label="Exit lambda expression", span="295-295", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_223 [label="x.Execute(query, new { key = key })", span="306-306", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_222 [label="Entry lambda expression", span="306-306", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_224 [label="Exit lambda expression", span="306-306", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_233 [label="x.Execute(query, new { key = key })", span="317-317", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_232 [label="Entry lambda expression", span="317-317", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_234 [label="Exit lambda expression", span="317-317", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_243 [label="x.Execute(query, new { key = key })", span="328-328", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_244 [label="Exit lambda expression", span="328-328", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m11_159 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="242-242", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="SqlServerWriteOnlyTransaction.cs"];
m11_160 [label="key == null", span="244-244", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="SqlServerWriteOnlyTransaction.cs"];
m11_162 [label="items == null", span="245-245", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="SqlServerWriteOnlyTransaction.cs"];
m11_166 [label="QueueCommand(x => x.Execute(query, items.Select(value => new { key = key, value = value }).ToList()))", span="252-252", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="SqlServerWriteOnlyTransaction.cs"];
m11_161 [label="throw new ArgumentNullException(''key'');", span="244-244", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="SqlServerWriteOnlyTransaction.cs"];
m11_163 [label="throw new ArgumentNullException(''items'');", span="245-245", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="SqlServerWriteOnlyTransaction.cs"];
m11_164 [label="string query = @''\r\ninsert into HangFire.[Set] ([Key], Value, Score)\r\nvalues (@key, @value, 0.0)''", span="247-249", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", color=red, community=1, file="SqlServerWriteOnlyTransaction.cs"];
m11_165 [label="AcquireSetLock()", span="251-251", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="SqlServerWriteOnlyTransaction.cs"];
m11_167 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="242-242", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="SqlServerWriteOnlyTransaction.cs"];
m11_18 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SqlServerWriteOnlyTransaction.cs"];
m11_258 [label="Entry System.Collections.Generic.SortedSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.SortedSet<T>.Add(T)", file="SqlServerWriteOnlyTransaction.cs"];
m11_171 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="SqlServerWriteOnlyTransaction.cs"];
m11_19 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerWriteOnlyTransaction.cs"];
m11_142 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="SqlServerWriteOnlyTransaction.cs"];
m11_117 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="191-191", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_118 [label="AcquireListLock()", span="193-193", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_119 [label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="194-196", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m11_120 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="191-191", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_113 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="336-336", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="SqlServerWriteOnlyTransaction.cs"];
m11_248 [label="AcquireLock(String.Format(''Hangfire:List:Lock''))", span="338-338", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="SqlServerWriteOnlyTransaction.cs"];
m11_249 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="336-336", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="SqlServerWriteOnlyTransaction.cs"];
m11_215 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="298-298", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_216 [label="key == null", span="300-300", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_220 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="306-306", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_217 [label="throw new ArgumentNullException(''key'');", span="300-300", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_218 [label="string query = @''\r\nupdate HangFire.Hash set ExpireAt = null where [Key] = @key''", span="302-303", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", color=red, community=1, file="SqlServerWriteOnlyTransaction.cs"];
m11_219 [label="AcquireHashLock()", span="305-305", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_221 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="298-298", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_109 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="183-183", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_110 [label="AcquireListLock()", span="185-185", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_111 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value);'',\r\n                new { key, value }))", span="186-188", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m11_112 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="183-183", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m11_124 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="199-199", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs"];
m11_125 [label="string trimSql = @''\r\n;with cte as (\r\n    select row_number() over (order by Id desc) as row_num, [Key] \r\n    from HangFire.List\r\n    where [Key] = @key)\r\ndelete from cte where row_num not between @start and @end''", span="201-206", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", color=red, community=1, file="SqlServerWriteOnlyTransaction.cs"];
m11_127 [label="QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="209-211", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs"];
m11_126 [label="AcquireListLock()", span="208-208", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs"];
m11_128 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="199-199", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs"];
m11_259 [label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_260 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_261 [label="System.TimeSpan", span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_262 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_263 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_264 [label="Hangfire.States.IState", span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_265 [label=addAndSetStateSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_266 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_267 [label="Hangfire.States.IState", span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_268 [label=addStateSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_269 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_270 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_271 [label=persistentQueue, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_272 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_273 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_274 [label="System.TimeSpan", span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_275 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_276 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_277 [label="System.TimeSpan", span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_278 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_279 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_280 [label=double, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_281 [label=addSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_282 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_283 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_284 [label=query, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_285 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_286 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_287 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_288 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_289 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_290 [label=int, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_291 [label=int, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_292 [label=trimSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_293 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_294 [label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_295 [label=sql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_296 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_297 [label=query, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_298 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_299 [label="System.Collections.Generic.IList<string>", span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_300 [label=query, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_301 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_302 [label=query, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_303 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_304 [label="System.TimeSpan", span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_305 [label=query, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_306 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_307 [label="System.TimeSpan", span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_308 [label=query, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_309 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_310 [label="System.TimeSpan", span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_311 [label=query, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_312 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_313 [label=query, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_314 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_315 [label=query, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_316 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m11_317 [label=query, span="", file="SqlServerWriteOnlyTransaction.cs"];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_12  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_23  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_34  [key=2, style=dotted];
m0_32 -> m0_35  [key=2, style=dotted];
m0_33 -> m0_31  [key=0, style=bold, color=blue];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_36  [key=2, style=dotted];
m0_33 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_26 -> m0_27  [key=0, style=solid];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>"];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_9  [key=2, style=dotted, color=green];
m0_2 -> m0_14  [key=1, style=dashed, color=green, label="lambda expression"];
m0_2 -> m0_6  [key=1, style=dashed, color=green, label=job];
m0_2 -> m0_4  [key=0, style=solid];
m0_2 -> m0_5  [key=2, style=dotted];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_8  [key=2, style=dotted];
m0_1 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=connection];
m0_1 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_10  [key=2, style=dotted];
m0_3 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=state];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_13  [key=2, style=dotted];
m0_4 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=stateMachineFactory];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_11  [key=2, style=dotted];
m0_4 -> m0_0  [key=0, style=bold, color=blue];
m0_7 -> m0_0  [key=0, style=bold, color=blue];
m0_7 -> m0_8  [key=0, style=solid];
m0_25 -> m0_23  [key=0, style=bold, color=blue];
m0_140 -> m0_141  [key=0, style=solid];
m0_143 -> m0_144  [key=0, style=solid];
m0_143 -> m0_62  [key=2, style=dotted];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_62  [key=2, style=dotted];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_23  [key=2, style=dotted];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_35  [key=2, style=dotted];
m0_141 -> m0_143  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_128  [key=2, style=dotted];
m0_141 -> m0_145  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m0_141 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m0_142 -> m0_128  [key=2, style=dotted];
m0_142 -> m0_146  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m0_142 -> m0_147  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m0_145 -> m0_46  [key=2, style=dotted];
m0_145 -> m0_84  [key=2, style=dotted];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_46  [key=2, style=dotted];
m0_148 -> m0_84  [key=2, style=dotted];
m0_148 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_146 -> m0_46  [key=2, style=dotted];
m0_146 -> m0_84  [key=2, style=dotted];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_147 -> m0_46  [key=2, style=dotted];
m0_147 -> m0_84  [key=2, style=dotted];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_151 -> m0_140  [key=0, style=bold, color=blue];
m0_47 -> m0_48  [key=0, style=solid];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_50  [key=2, style=dotted];
m0_48 -> m0_40  [key=2, style=dotted];
m0_49 -> m0_47  [key=0, style=bold, color=blue];
m0_50 -> m0_51  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [key=0, style=solid];
m0_97 -> m0_98  [key=0, style=solid];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_46  [key=2, style=dotted];
m0_98 -> m0_24  [key=2, style=dotted];
m0_98 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_62  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_23  [key=2, style=dotted];
m0_102 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label=process];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_106  [key=2, style=dotted];
m0_103 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_99 -> m0_61  [key=2, style=dotted];
m0_99 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label=filter];
m0_99 -> m0_100  [key=0, style=solid];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_46  [key=2, style=dotted];
m0_100 -> m0_105  [key=2, style=dotted];
m0_100 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_100 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_104 -> m0_97  [key=0, style=bold, color=blue];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_39  [key=0, style=bold, color=blue];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_46  [key=2, style=dotted];
m0_42 -> m0_24  [key=2, style=dotted];
m0_42 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_23  [key=2, style=dotted];
m0_43 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label=process];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_24  [key=2, style=dotted];
m0_44 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_44 -> m0_46  [key=2, style=dotted];
m0_45 -> m0_41  [key=0, style=bold, color=blue];
m0_45 -> m0_43  [key=0, style=bold, color=blue];
m0_251 -> m0_252  [key=0, style=solid];
m0_254 -> m0_255  [key=0, style=solid];
m0_254 -> m0_62  [key=2, style=dotted];
m0_255 -> m0_256  [key=0, style=solid];
m0_255 -> m0_62  [key=2, style=dotted];
m0_257 -> m0_258  [key=0, style=solid];
m0_257 -> m0_46  [key=2, style=dotted];
m0_257 -> m0_238  [key=2, style=dotted];
m0_257 -> m0_262  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_258 -> m0_259  [key=0, style=solid];
m0_258 -> m0_23  [key=2, style=dotted];
m0_258 -> m0_266  [key=1, style=dashed, color=darkseagreen4, label=process];
m0_259 -> m0_260  [key=0, style=solid];
m0_259 -> m0_24  [key=2, style=dotted];
m0_259 -> m0_265  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_252 -> m0_254  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m0_252 -> m0_253  [key=0, style=solid];
m0_252 -> m0_128  [key=2, style=dotted];
m0_252 -> m0_260  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m0_253 -> m0_254  [key=0, style=solid];
m0_253 -> m0_255  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m0_253 -> m0_128  [key=2, style=dotted];
m0_256 -> m0_257  [key=0, style=solid];
m0_256 -> m0_237  [key=2, style=dotted];
m0_256 -> m0_260  [key=1, style=dashed, color=darkseagreen4, label=exception];
m0_256 -> m0_269  [key=1, style=dashed, color=darkseagreen4, label=exception];
m0_256 -> m0_272  [key=1, style=dashed, color=darkseagreen4, label=exception];
m0_260 -> m0_36  [key=2, style=dotted];
m0_260 -> m0_261  [key=0, style=solid];
m0_260 -> m0_268  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_261 -> m0_251  [key=0, style=bold, color=blue];
m0_35 -> m0_36  [key=0, style=solid, color=red];
m0_53 -> m0_54  [key=0, style=solid];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_62  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_46  [key=2, style=dotted];
m0_56 -> m0_24  [key=2, style=dotted];
m0_56 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_23  [key=2, style=dotted];
m0_57 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label=process];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_24  [key=2, style=dotted];
m0_58 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_54 -> m0_61  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label=filter];
m0_59 -> m0_36  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_60 -> m0_53  [key=0, style=bold, color=blue];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_26  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_29 -> m0_29  [key=3, color=darkorchid, style=bold, label="Local variable object instance"];
m0_29 -> m0_27  [key=0, style=bold, color=blue];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_328  [key=0, style=solid];
m0_119 -> m0_120  [key=0, style=solid];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_62  [key=2, style=dotted];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_46  [key=2, style=dotted];
m0_123 -> m0_84  [key=2, style=dotted];
m0_123 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_23  [key=2, style=dotted];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_35  [key=2, style=dotted];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_128  [key=2, style=dotted];
m0_120 -> m0_122  [key=1, style=dashed, color=darkseagreen4, label=filter];
m0_120 -> m0_124  [key=1, style=dashed, color=darkseagreen4, label=filter];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_46  [key=2, style=dotted];
m0_122 -> m0_84  [key=2, style=dotted];
m0_122 -> m0_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_46  [key=2, style=dotted];
m0_124 -> m0_84  [key=2, style=dotted];
m0_124 -> m0_136  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_127 -> m0_119  [key=0, style=bold, color=blue];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_12  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_23  [key=2, style=dotted];
m0_19 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label=process];
m0_19 -> m0_21  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_24  [key=2, style=dotted];
m0_20 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_20 -> m0_19  [key=0, style=solid];
m0_20 -> m0_22  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_25  [key=2, style=dotted];
m0_21 -> m0_17  [key=0, style=bold, color=blue];
m0_22 -> m0_18  [key=0, style=bold, color=blue];
m0_14 -> m0_13  [key=0, style=solid];
m0_14 -> m0_16  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid, color=green];
m0_15 -> m0_12  [key=0, style=bold, color=blue];
m0_15 -> m0_16  [key=0, style=solid, color=green];
m0_15 -> m0_17  [key=2, style=dotted, color=green];
m0_164 -> m0_165  [key=0, style=solid];
m0_166 -> m0_167  [key=0, style=solid];
m0_166 -> m0_62  [key=2, style=dotted];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_23  [key=2, style=dotted];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_35  [key=2, style=dotted];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_36  [key=2, style=dotted];
m0_170 -> m0_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_128  [key=2, style=dotted];
m0_165 -> m0_167  [key=1, style=dashed, color=darkseagreen4, label=filter];
m0_165 -> m0_171  [key=1, style=dashed, color=darkseagreen4, label=filter];
m0_167 -> m0_168  [key=0, style=solid];
m0_167 -> m0_46  [key=2, style=dotted];
m0_167 -> m0_105  [key=2, style=dotted];
m0_167 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_167 -> m0_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_171 -> m0_36  [key=2, style=dotted];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_172 -> m0_164  [key=0, style=bold, color=blue];
m0_328 -> m0_329  [key=0, style=solid];
m0_328 -> m0_330  [key=2, style=dotted];
m0_329 -> m0_23  [key=0, style=bold, color=blue];
m0_228 -> m0_229  [key=0, style=solid];
m0_230 -> m0_231  [key=0, style=solid];
m0_230 -> m0_62  [key=2, style=dotted];
m0_232 -> m0_233  [key=0, style=solid];
m0_232 -> m0_46  [key=2, style=dotted];
m0_232 -> m0_238  [key=2, style=dotted];
m0_232 -> m0_239  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_233 -> m0_234  [key=0, style=solid];
m0_233 -> m0_23  [key=2, style=dotted];
m0_233 -> m0_243  [key=1, style=dashed, color=darkseagreen4, label=process];
m0_234 -> m0_235  [key=0, style=solid];
m0_234 -> m0_24  [key=2, style=dotted];
m0_234 -> m0_242  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_229 -> m0_230  [key=0, style=solid];
m0_229 -> m0_128  [key=2, style=dotted];
m0_229 -> m0_235  [key=1, style=dashed, color=darkseagreen4, label=filter];
m0_231 -> m0_232  [key=0, style=solid];
m0_231 -> m0_237  [key=2, style=dotted];
m0_231 -> m0_235  [key=1, style=dashed, color=darkseagreen4, label=exception];
m0_231 -> m0_246  [key=1, style=dashed, color=darkseagreen4, label=exception];
m0_231 -> m0_249  [key=1, style=dashed, color=darkseagreen4, label=exception];
m0_235 -> m0_36  [key=2, style=dotted];
m0_235 -> m0_236  [key=0, style=solid];
m0_235 -> m0_245  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_236 -> m0_228  [key=0, style=bold, color=blue];
m0_185 -> m0_186  [key=0, style=solid];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_62  [key=2, style=dotted];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_62  [key=2, style=dotted];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_23  [key=2, style=dotted];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_35  [key=2, style=dotted];
m0_186 -> m0_188  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_128  [key=2, style=dotted];
m0_186 -> m0_193  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m0_187 -> m0_128  [key=2, style=dotted];
m0_187 -> m0_190  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_46  [key=2, style=dotted];
m0_190 -> m0_105  [key=2, style=dotted];
m0_190 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_190 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_193 -> m0_36  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> m0_201  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_194 -> m0_185  [key=0, style=bold, color=blue];
m0_10 -> m0_7  [key=0, style=bold, color=blue];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_327  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_10  [key=0, style=solid];
m0_9 -> m0_8  [key=0, style=solid];
m0_9 -> m0_11  [key=2, style=dotted];
m0_73 -> m0_74  [key=0, style=solid, color=green];
m0_74 -> m0_75  [key=0, style=solid, color=green];
m0_74 -> m0_61  [key=2, style=dotted, color=green];
m0_74 -> m0_77  [key=1, style=dashed, color=green, label=filter1];
m0_74 -> m0_78  [key=1, style=dashed, color=green, label=filter1];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_61  [key=2, style=dotted];
m0_75 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label=filter2];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_46  [key=2, style=dotted];
m0_77 -> m0_84  [key=2, style=dotted];
m0_77 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_62  [key=2, style=dotted];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_62  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_46  [key=2, style=dotted];
m0_80 -> m0_24  [key=2, style=dotted];
m0_80 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_23  [key=2, style=dotted];
m0_81 -> m0_95  [key=1, style=dashed, color=darkseagreen4, label=process];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_24  [key=2, style=dotted];
m0_82 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_46  [key=2, style=dotted];
m0_76 -> m0_84  [key=2, style=dotted];
m0_76 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_83 -> m0_73  [key=0, style=bold, color=blue];
m0_34 -> m0_30  [key=0, style=bold, color=blue];
m0_324 -> m0_325  [key=0, style=solid];
m0_16 -> m0_14  [key=0, style=bold, color=blue];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_35  [key=2, style=dotted];
m0_51 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerSupervisorCollection"];
m0_51 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerSupervisorCollection"];
m0_51 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerSupervisorCollection"];
m0_51 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerSupervisorCollection"];
m0_51 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerSupervisorCollection"];
m0_51 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerSupervisorCollection"];
m0_51 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerSupervisorCollection"];
m0_51 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerSupervisorCollection"];
m0_51 -> m0_36  [key=1, style=dashed, color=red, label="Hangfire.Server.ServerSupervisorCollection"];
m0_51 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerSupervisorCollection"];
m0_51 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerSupervisorCollection"];
m0_51 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerSupervisorCollection"];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_35  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_35  [key=2, style=dotted];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_35  [key=2, style=dotted];
m0_220 -> m0_221  [key=0, style=solid];
m0_220 -> m0_35  [key=2, style=dotted];
m0_243 -> m0_244  [key=0, style=solid];
m0_243 -> m0_35  [key=2, style=dotted];
m0_266 -> m0_267  [key=0, style=solid];
m0_266 -> m0_35  [key=2, style=dotted];
m0_296 -> m0_297  [key=0, style=solid];
m0_296 -> m0_35  [key=2, style=dotted];
m0_319 -> m0_320  [key=0, style=solid];
m0_319 -> m0_35  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_29  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_35  [key=0, style=bold, color=blue];
m0_52 -> m0_50  [key=0, style=bold, color=blue];
m0_63 -> m0_64  [key=0, style=solid];
m0_66 -> m0_67  [key=0, style=solid];
m0_68 -> m0_66  [key=0, style=bold, color=blue];
m0_91 -> m0_92  [key=0, style=solid];
m0_94 -> m0_95  [key=0, style=solid];
m0_96 -> m0_94  [key=0, style=bold, color=blue];
m0_107 -> m0_108  [key=0, style=solid];
m0_116 -> m0_117  [key=0, style=solid];
m0_118 -> m0_116  [key=0, style=bold, color=blue];
m0_133 -> m0_134  [key=0, style=solid];
m0_179 -> m0_180  [key=0, style=solid];
m0_219 -> m0_220  [key=0, style=solid];
m0_221 -> m0_219  [key=0, style=bold, color=blue];
m0_222 -> m0_223  [key=0, style=solid];
m0_239 -> m0_240  [key=0, style=solid];
m0_242 -> m0_243  [key=0, style=solid];
m0_244 -> m0_242  [key=0, style=bold, color=blue];
m0_262 -> m0_263  [key=0, style=solid];
m0_265 -> m0_266  [key=0, style=solid];
m0_267 -> m0_265  [key=0, style=bold, color=blue];
m0_283 -> m0_284  [key=0, style=solid];
m0_295 -> m0_296  [key=0, style=solid];
m0_297 -> m0_295  [key=0, style=bold, color=blue];
m0_309 -> m0_310  [key=0, style=solid];
m0_318 -> m0_319  [key=0, style=solid];
m0_320 -> m0_318  [key=0, style=bold, color=blue];
m0_85 -> m0_86  [key=0, style=solid];
m0_90 -> m0_88  [key=0, style=bold, color=blue];
m0_89 -> m0_24  [key=2, style=dotted];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_72  [key=2, style=dotted];
m0_28 -> m0_26  [key=0, style=bold, color=blue];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_30  [key=2, style=dotted];
m0_39 -> m0_37  [key=0, style=bold, color=blue];
m0_39 -> m0_40  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_40  [key=2, style=dotted];
m0_70 -> m0_24  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_72  [key=2, style=dotted];
m0_86 -> m0_24  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_72  [key=2, style=dotted];
m0_111 -> m0_24  [key=2, style=dotted];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_72  [key=2, style=dotted];
m0_130 -> m0_24  [key=2, style=dotted];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_132  [key=2, style=dotted];
m0_137 -> m0_24  [key=2, style=dotted];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_139  [key=2, style=dotted];
m0_153 -> m0_24  [key=2, style=dotted];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_132  [key=2, style=dotted];
m0_156 -> m0_24  [key=2, style=dotted];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_132  [key=2, style=dotted];
m0_159 -> m0_24  [key=2, style=dotted];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_139  [key=2, style=dotted];
m0_162 -> m0_24  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_139  [key=2, style=dotted];
m0_174 -> m0_24  [key=2, style=dotted];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_132  [key=2, style=dotted];
m0_183 -> m0_24  [key=2, style=dotted];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_139  [key=2, style=dotted];
m0_196 -> m0_24  [key=2, style=dotted];
m0_196 -> m0_197  [key=0, style=solid];
m0_196 -> m0_132  [key=2, style=dotted];
m0_202 -> m0_24  [key=2, style=dotted];
m0_202 -> m0_203  [key=0, style=solid];
m0_202 -> m0_139  [key=2, style=dotted];
m0_202 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_217 -> m0_24  [key=2, style=dotted];
m0_217 -> m0_218  [key=0, style=solid];
m0_217 -> m0_132  [key=2, style=dotted];
m0_226 -> m0_24  [key=2, style=dotted];
m0_226 -> m0_227  [key=0, style=solid];
m0_226 -> m0_139  [key=2, style=dotted];
m0_246 -> m0_24  [key=2, style=dotted];
m0_246 -> m0_247  [key=0, style=solid];
m0_246 -> m0_139  [key=2, style=dotted];
m0_246 -> m0_248  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_269 -> m0_24  [key=2, style=dotted];
m0_269 -> m0_270  [key=0, style=solid];
m0_269 -> m0_139  [key=2, style=dotted];
m0_269 -> m0_271  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_287 -> m0_24  [key=2, style=dotted];
m0_287 -> m0_288  [key=0, style=solid];
m0_287 -> m0_139  [key=2, style=dotted];
m0_287 -> m0_289  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_313 -> m0_24  [key=2, style=dotted];
m0_313 -> m0_314  [key=0, style=solid];
m0_313 -> m0_139  [key=2, style=dotted];
m0_322 -> m0_24  [key=2, style=dotted];
m0_322 -> m0_323  [key=0, style=solid];
m0_322 -> m0_139  [key=2, style=dotted];
m0_322 -> m0_324  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_65 -> m0_63  [key=0, style=bold, color=blue];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_40  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_93 -> m0_91  [key=0, style=bold, color=blue];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_40  [key=2, style=dotted];
m0_109 -> m0_107  [key=0, style=bold, color=blue];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_40  [key=2, style=dotted];
m0_110 -> m0_111  [key=0, style=solid];
m0_113 -> m0_114  [key=0, style=solid];
m0_129 -> m0_130  [key=0, style=solid];
m0_136 -> m0_137  [key=0, style=solid];
m0_135 -> m0_133  [key=0, style=bold, color=blue];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_40  [key=2, style=dotted];
m0_152 -> m0_153  [key=0, style=solid];
m0_161 -> m0_162  [key=0, style=solid];
m0_173 -> m0_174  [key=0, style=solid];
m0_176 -> m0_177  [key=0, style=solid];
m0_182 -> m0_183  [key=0, style=solid];
m0_181 -> m0_179  [key=0, style=bold, color=blue];
m0_180 -> m0_181  [key=0, style=solid];
m0_180 -> m0_40  [key=2, style=dotted];
m0_195 -> m0_196  [key=0, style=solid];
m0_198 -> m0_199  [key=0, style=solid];
m0_201 -> m0_202  [key=0, style=solid];
m0_216 -> m0_217  [key=0, style=solid];
m0_225 -> m0_226  [key=0, style=solid];
m0_224 -> m0_222  [key=0, style=bold, color=blue];
m0_223 -> m0_224  [key=0, style=solid];
m0_223 -> m0_40  [key=2, style=dotted];
m0_249 -> m0_250  [key=0, style=solid];
m0_241 -> m0_239  [key=0, style=bold, color=blue];
m0_240 -> m0_241  [key=0, style=solid];
m0_240 -> m0_40  [key=2, style=dotted];
m0_245 -> m0_246  [key=0, style=solid];
m0_272 -> m0_273  [key=0, style=solid];
m0_264 -> m0_262  [key=0, style=bold, color=blue];
m0_263 -> m0_264  [key=0, style=solid];
m0_263 -> m0_40  [key=2, style=dotted];
m0_268 -> m0_269  [key=0, style=solid];
m0_290 -> m0_291  [key=0, style=solid];
m0_286 -> m0_287  [key=0, style=solid];
m0_292 -> m0_293  [key=0, style=solid];
m0_285 -> m0_283  [key=0, style=bold, color=blue];
m0_284 -> m0_285  [key=0, style=solid];
m0_284 -> m0_40  [key=2, style=dotted];
m0_312 -> m0_313  [key=0, style=solid];
m0_315 -> m0_316  [key=0, style=solid];
m0_311 -> m0_309  [key=0, style=bold, color=blue];
m0_310 -> m0_311  [key=0, style=solid];
m0_310 -> m0_40  [key=2, style=dotted];
m0_321 -> m0_322  [key=0, style=solid];
m0_87 -> m0_85  [key=0, style=bold, color=blue];
m0_155 -> m0_156  [key=0, style=solid];
m0_158 -> m0_159  [key=0, style=solid];
m0_71 -> m0_69  [key=0, style=bold, color=blue];
m0_112 -> m0_110  [key=0, style=bold, color=blue];
m0_131 -> m0_129  [key=0, style=bold, color=blue];
m0_138 -> m0_136  [key=0, style=bold, color=blue];
m0_154 -> m0_152  [key=0, style=bold, color=blue];
m0_157 -> m0_155  [key=0, style=bold, color=blue];
m0_160 -> m0_158  [key=0, style=bold, color=blue];
m0_163 -> m0_161  [key=0, style=bold, color=blue];
m0_175 -> m0_173  [key=0, style=bold, color=blue];
m0_184 -> m0_182  [key=0, style=bold, color=blue];
m0_197 -> m0_195  [key=0, style=bold, color=blue];
m0_203 -> m0_201  [key=0, style=bold, color=blue];
m0_204 -> m0_205  [key=0, style=solid];
m0_218 -> m0_216  [key=0, style=bold, color=blue];
m0_227 -> m0_225  [key=0, style=bold, color=blue];
m0_247 -> m0_245  [key=0, style=bold, color=blue];
m0_248 -> m0_249  [key=0, style=solid];
m0_270 -> m0_268  [key=0, style=bold, color=blue];
m0_271 -> m0_272  [key=0, style=solid];
m0_288 -> m0_286  [key=0, style=bold, color=blue];
m0_289 -> m0_290  [key=0, style=solid];
m0_314 -> m0_312  [key=0, style=bold, color=blue];
m0_323 -> m0_321  [key=0, style=bold, color=blue];
m0_115 -> m0_113  [key=0, style=bold, color=blue];
m0_114 -> m0_115  [key=0, style=solid];
m0_178 -> m0_176  [key=0, style=bold, color=blue];
m0_177 -> m0_178  [key=0, style=solid];
m0_200 -> m0_198  [key=0, style=bold, color=blue];
m0_199 -> m0_200  [key=0, style=solid];
m0_250 -> m0_248  [key=0, style=bold, color=blue];
m0_273 -> m0_271  [key=0, style=bold, color=blue];
m0_291 -> m0_289  [key=0, style=bold, color=blue];
m0_294 -> m0_292  [key=0, style=bold, color=blue];
m0_293 -> m0_294  [key=0, style=solid];
m0_317 -> m0_315  [key=0, style=bold, color=blue];
m0_316 -> m0_317  [key=0, style=solid];
m0_206 -> m0_204  [key=0, style=bold, color=blue];
m0_205 -> m0_206  [key=0, style=solid];
m0_325 -> m0_326  [key=0, style=solid];
m0_326 -> m0_324  [key=0, style=bold, color=blue];
m0_36 -> m0_37  [key=0, style=solid, color=red];
m0_36 -> m0_38  [key=2, style=dotted, color=red];
m0_207 -> m0_208  [key=0, style=solid];
m0_209 -> m0_210  [key=0, style=solid];
m0_209 -> m0_62  [key=2, style=dotted];
m0_211 -> m0_212  [key=0, style=solid];
m0_211 -> m0_23  [key=2, style=dotted];
m0_211 -> m0_220  [key=1, style=dashed, color=darkseagreen4, label=process];
m0_212 -> m0_213  [key=0, style=solid];
m0_212 -> m0_24  [key=2, style=dotted];
m0_212 -> m0_219  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_213 -> m0_214  [key=0, style=solid];
m0_213 -> m0_36  [key=2, style=dotted];
m0_213 -> m0_222  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_208 -> m0_209  [key=0, style=solid];
m0_208 -> m0_128  [key=2, style=dotted];
m0_208 -> m0_210  [key=1, style=dashed, color=darkseagreen4, label=filter];
m0_208 -> m0_214  [key=1, style=dashed, color=darkseagreen4, label=filter];
m0_210 -> m0_211  [key=0, style=solid];
m0_210 -> m0_46  [key=2, style=dotted];
m0_210 -> m0_24  [key=2, style=dotted];
m0_210 -> m0_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_214 -> m0_36  [key=2, style=dotted];
m0_214 -> m0_215  [key=0, style=solid];
m0_214 -> m0_225  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_215 -> m0_207  [key=0, style=bold, color=blue];
m0_298 -> m0_299  [key=0, style=solid];
m0_301 -> m0_302  [key=0, style=solid];
m0_301 -> m0_62  [key=2, style=dotted];
m0_302 -> m0_303  [key=0, style=solid];
m0_302 -> m0_62  [key=2, style=dotted];
m0_303 -> m0_304  [key=0, style=solid];
m0_303 -> m0_46  [key=2, style=dotted];
m0_303 -> m0_24  [key=2, style=dotted];
m0_303 -> m0_309  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_305 -> m0_306  [key=0, style=solid];
m0_305 -> m0_23  [key=2, style=dotted];
m0_305 -> m0_319  [key=1, style=dashed, color=darkseagreen4, label=process];
m0_306 -> m0_307  [key=0, style=solid];
m0_306 -> m0_106  [key=2, style=dotted];
m0_306 -> m0_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_299 -> m0_301  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m0_299 -> m0_300  [key=0, style=solid];
m0_299 -> m0_128  [key=2, style=dotted];
m0_299 -> m0_307  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m0_300 -> m0_301  [key=0, style=solid];
m0_300 -> m0_302  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m0_300 -> m0_128  [key=2, style=dotted];
m0_300 -> m0_304  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m0_304 -> m0_305  [key=0, style=solid];
m0_304 -> m0_46  [key=2, style=dotted];
m0_304 -> m0_105  [key=2, style=dotted];
m0_304 -> m0_312  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_304 -> m0_315  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_307 -> m0_36  [key=2, style=dotted];
m0_307 -> m0_308  [key=0, style=solid];
m0_307 -> m0_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_308 -> m0_298  [key=0, style=bold, color=blue];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_42  [key=2, style=dotted];
m0_274 -> m0_275  [key=0, style=solid];
m0_276 -> m0_277  [key=0, style=solid];
m0_276 -> m0_62  [key=2, style=dotted];
m0_278 -> m0_279  [key=0, style=solid];
m0_278 -> m0_46  [key=2, style=dotted];
m0_278 -> m0_238  [key=2, style=dotted];
m0_278 -> m0_283  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_280 -> m0_281  [key=0, style=solid];
m0_280 -> m0_23  [key=2, style=dotted];
m0_280 -> m0_296  [key=1, style=dashed, color=darkseagreen4, label=process];
m0_281 -> m0_282  [key=0, style=solid];
m0_281 -> m0_106  [key=2, style=dotted];
m0_281 -> m0_295  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_275 -> m0_276  [key=0, style=solid];
m0_275 -> m0_128  [key=2, style=dotted];
m0_275 -> m0_279  [key=1, style=dashed, color=darkseagreen4, label=filter];
m0_277 -> m0_278  [key=0, style=solid];
m0_277 -> m0_237  [key=2, style=dotted];
m0_277 -> m0_279  [key=1, style=dashed, color=darkseagreen4, label=exception];
m0_277 -> m0_287  [key=1, style=dashed, color=darkseagreen4, label=exception];
m0_277 -> m0_290  [key=1, style=dashed, color=darkseagreen4, label=exception];
m0_279 -> m0_280  [key=0, style=solid];
m0_279 -> m0_46  [key=2, style=dotted];
m0_279 -> m0_105  [key=2, style=dotted];
m0_279 -> m0_286  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_279 -> m0_292  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_282 -> m0_274  [key=0, style=bold, color=blue];
m0_327 -> m0_17  [key=0, style=bold, color=blue];
m0_331 -> m0_2  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_15  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_123  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_126  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_143  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_150  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_166  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_168  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_169  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_170  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_188  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_191  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_192  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_209  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_211  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_212  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_220  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_213  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_230  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_232  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_233  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_234  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_243  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_254  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_255  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_257  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_258  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_259  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_266  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_276  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_278  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_280  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_281  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_296  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_301  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_302  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_303  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_305  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_306  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_319  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_331 -> m0_328  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m0_333 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label=process];
m0_334 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label=process];
m0_335 -> m0_95  [key=1, style=dashed, color=darkseagreen4, label=process];
m0_336 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label=process];
m0_337 -> m0_220  [key=1, style=dashed, color=darkseagreen4, label=process];
m0_338 -> m0_243  [key=1, style=dashed, color=darkseagreen4, label=process];
m0_340 -> m0_266  [key=1, style=dashed, color=darkseagreen4, label=process];
m0_343 -> m0_296  [key=1, style=dashed, color=darkseagreen4, label=process];
m0_344 -> m0_319  [key=1, style=dashed, color=darkseagreen4, label=process];
m0_332 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label=process];
m0_339 -> m0_246  [key=1, style=dashed, color=darkseagreen4, label=exception];
m0_339 -> m0_249  [key=1, style=dashed, color=darkseagreen4, label=exception];
m0_341 -> m0_269  [key=1, style=dashed, color=darkseagreen4, label=exception];
m0_341 -> m0_272  [key=1, style=dashed, color=darkseagreen4, label=exception];
m0_342 -> m0_287  [key=1, style=dashed, color=darkseagreen4, label=exception];
m0_342 -> m0_290  [key=1, style=dashed, color=darkseagreen4, label=exception];
m1_24 -> m1_31  [key=0, style=solid, color=green];
m1_31 -> m1_32  [key=0, style=solid, color=green];
m1_32 -> m1_24  [key=0, style=bold, color=blue];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m1_0 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_0 -> m1_1  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_5  [key=0, style=solid];
m1_2 -> m1_6  [key=2, style=dotted];
m1_5 -> m1_0  [key=0, style=bold, color=blue];
m1_7 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m1_10 -> m1_11  [key=0, style=solid, color=green];
m1_10 -> m1_18  [key=2, style=dotted, color=green];
m1_10 -> m1_21  [key=1, style=dashed, color=green, label="lambda expression"];
m1_10 -> m1_14  [key=1, style=dashed, color=green, label=removedCount];
m1_9 -> m1_10  [key=0, style=solid, color=green];
m1_9 -> m1_9  [key=3, color=darkorchid, style=bold, label="Local variable int removedCount"];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_14  [key=0, style=solid];
m1_14 -> m1_9  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid];
m1_15 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_19  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_17  [key=2, style=dotted];
m1_12 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_19  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m1_13 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m1_13 -> m1_20  [key=2, style=dotted];
m1_16 -> m1_7  [key=0, style=bold, color=blue];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_29  [key=2, style=dotted];
m1_27 -> m1_30  [key=2, style=dotted];
m1_28 -> m1_26  [key=0, style=bold, color=blue];
m1_21 -> m1_22  [key=0, style=solid, color=green];
m1_22 -> m1_23  [key=0, style=solid, color=green];
m1_22 -> m1_24  [key=2, style=dotted, color=green];
m1_22 -> m1_25  [key=2, style=dotted, color=green];
m1_23 -> m1_21  [key=0, style=bold, color=blue];
m1_33 -> m1_10  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.CountersAggregator"];
m1_33 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m1_33 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m1_33 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m1_33 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m2_35 -> m2_36  [key=0, style=solid];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_38  [key=2, style=dotted];
m2_36 -> m2_39  [key=2, style=dotted];
m2_37 -> m2_35  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [key=0, style=bold, color=blue];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m2_2 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_4 -> m2_7  [key=0, style=solid];
m2_4 -> m2_8  [key=2, style=dotted];
m2_7 -> m2_2  [key=0, style=bold, color=blue];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_29  [key=1, style=dashed, color=red, label=SqlConnection];
m2_27 -> m2_13  [key=1, style=dashed, color=red, label=SqlConnection];
m2_29 -> m2_30  [key=0, style=solid, color=red];
m2_29 -> m2_32  [key=2, style=dotted, color=red];
m2_29 -> m2_33  [key=2, style=dotted, color=red];
m2_28 -> m2_29  [key=0, style=solid, color=red];
m2_28 -> m2_31  [key=2, style=dotted];
m2_30 -> m2_27  [key=0, style=bold, color=blue];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m2_9 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_19  [key=0, style=solid];
m2_10 -> m2_13  [key=1, style=dashed, color=red, label=table];
m2_10 -> m2_29  [key=1, style=dashed, color=red, label=table];
m2_10 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label=table];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_25  [key=2, style=dotted];
m2_16 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_25  [key=2, style=dotted];
m2_19 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_21  [key=2, style=dotted];
m2_13 -> m2_14  [key=0, style=solid, color=red];
m2_13 -> m2_22  [key=2, style=dotted, color=red];
m2_13 -> m2_34  [key=2, style=dotted, color=red];
m2_13 -> m2_27  [key=1, style=dashed, color=red, label="lambda expression"];
m2_13 -> m2_15  [key=1, style=dashed, color=red, label=removedCount];
m2_13 -> m2_18  [key=1, style=dashed, color=red, label=removedCount];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_23  [key=2, style=dotted];
m2_15 -> m2_24  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid, color=red];
m2_12 -> m2_12  [key=3, color=darkorchid, style=bold, label="Local variable int removedCount"];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_18  [key=0, style=solid];
m2_18 -> m2_12  [key=0, style=solid];
m2_18 -> m2_10  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_26  [key=2, style=dotted];
m2_17 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m2_17 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m2_20 -> m2_9  [key=0, style=bold, color=blue];
m2_40 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.ExpirationManager"];
m2_40 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.ExpirationManager"];
m2_40 -> m2_13  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.ExpirationManager"];
m2_40 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.ExpirationManager"];
m2_40 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.ExpirationManager"];
m2_41 -> m2_29  [key=1, style=dashed, color=red, label=table];
m3_12 -> m3_9  [key=0, style=bold, color=blue];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m3_19 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_19 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label="System.TimeZoneInfo"];
m3_19 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_19 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m3_19 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_19 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label="System.TimeZoneInfo"];
m3_19 -> m3_35  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_19 -> m3_37  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_19 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_22  [key=0, style=solid];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_24  [key=0, style=solid];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_26  [key=0, style=solid];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_28  [key=0, style=solid];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_41  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_44  [key=2, style=dotted];
m3_33 -> m3_34  [key=0, style=solid];
m3_34 -> m3_35  [key=0, style=solid];
m3_35 -> m3_36  [key=0, style=solid];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_47  [key=2, style=dotted];
m3_37 -> m3_48  [key=2, style=dotted];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_49  [key=2, style=dotted];
m3_21 -> m3_40  [key=0, style=solid];
m3_21 -> m3_12  [key=2, style=dotted];
m3_23 -> m3_40  [key=0, style=solid];
m3_23 -> m3_12  [key=2, style=dotted];
m3_25 -> m3_40  [key=0, style=solid];
m3_25 -> m3_12  [key=2, style=dotted];
m3_27 -> m3_40  [key=0, style=solid];
m3_27 -> m3_12  [key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_42  [key=2, style=dotted];
m3_29 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label=connection];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_43  [key=2, style=dotted];
m3_30 -> m3_32  [key=1, style=dashed, color=darkseagreen4, label=recurringJob];
m3_30 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label=recurringJob];
m3_30 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label=recurringJob];
m3_30 -> m3_35  [key=1, style=dashed, color=darkseagreen4, label=recurringJob];
m3_30 -> m3_37  [key=1, style=dashed, color=darkseagreen4, label=recurringJob];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_46  [key=2, style=dotted];
m3_36 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m3_36 -> m3_39  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_45  [key=2, style=dotted];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_50  [key=2, style=dotted];
m3_40 -> m3_19  [key=0, style=bold, color=blue];
m3_0 -> m3_16  [key=3, color=green, style=bold, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext"];
m3_0 -> m3_1  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid, color=green];
m3_2 -> m3_6  [key=2, style=dotted, color=green];
m3_2 -> m3_7  [key=2, style=dotted, color=green];
m3_1 -> m3_2  [key=0, style=solid, color=green];
m3_1 -> m3_5  [key=2, style=dotted];
m3_1 -> m3_0  [key=0, style=bold, color=blue];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_8  [key=2, style=dotted];
m3_3 -> m3_2  [key=0, style=bold, color=blue];
m3_4 -> m3_0  [key=0, style=bold, color=blue];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_7  [key=1, style=dashed, color=red, label="Hangfire.IBackgroundJobClient"];
m3_4 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m3_4 -> m3_10  [key=1, style=dashed, color=red, label="Hangfire.IBackgroundJobClient"];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_55  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_54  [key=0, style=solid];
m3_55 -> m3_56  [key=0, style=solid];
m3_55 -> m3_47  [key=2, style=dotted];
m3_55 -> m3_64  [key=2, style=dotted];
m3_55 -> m3_58  [key=1, style=dashed, color=darkseagreen4, label=hash];
m3_55 -> m3_60  [key=1, style=dashed, color=darkseagreen4, label=hash];
m3_55 -> m3_61  [key=1, style=dashed, color=darkseagreen4, label=hash];
m3_53 -> m3_63  [key=0, style=solid];
m3_53 -> m3_12  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_42  [key=2, style=dotted];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_58  [key=0, style=solid];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_65  [key=2, style=dotted];
m3_58 -> m3_66  [key=2, style=dotted];
m3_58 -> m3_62  [key=1, style=dashed, color=red, label=job];
m3_60 -> m3_61  [key=0, style=solid];
m3_60 -> m3_62  [key=0, style=solid, color=red];
m3_60 -> m3_68  [key=2, style=dotted];
m3_61 -> m3_62  [key=0, style=solid, color=red];
m3_57 -> m3_63  [key=0, style=solid];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_67  [key=2, style=dotted];
m3_59 -> m3_61  [key=1, style=dashed, color=darkseagreen4, label=state];
m3_59 -> m3_62  [key=1, style=dashed, color=red, label=state];
m3_62 -> m3_63  [key=0, style=solid, color=red];
m3_62 -> m3_69  [key=2, style=dotted, color=red];
m3_63 -> m3_51  [key=0, style=bold, color=blue];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_75  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_70 -> m3_76  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_73  [key=0, style=solid];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_47  [key=2, style=dotted];
m3_75 -> m3_79  [key=2, style=dotted];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_80  [key=2, style=dotted];
m3_72 -> m3_78  [key=0, style=solid];
m3_72 -> m3_12  [key=2, style=dotted];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_42  [key=2, style=dotted];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_46  [key=2, style=dotted];
m3_74 -> m3_76  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m3_74 -> m3_77  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_50  [key=2, style=dotted];
m3_78 -> m3_70  [key=0, style=bold, color=blue];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_7  [key=0, style=solid, color=red];
m3_13 -> m3_14  [key=0, style=solid];
m3_14 -> m3_15  [key=0, style=solid, color=green];
m3_14 -> m3_16  [key=2, style=dotted];
m3_15 -> m3_13  [key=0, style=bold, color=blue];
m3_15 -> m3_16  [key=0, style=solid, color=green];
m3_15 -> m3_17  [key=0, style=solid, color=green];
m3_16 -> m3_17  [key=0, style=solid, color=green];
m3_16 -> m3_0  [key=2, style=dotted, color=green];
m3_17 -> m3_14  [key=0, style=bold, color=blue];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_19  [key=2, style=dotted];
m3_18 -> m3_16  [key=0, style=bold, color=blue];
m3_7 -> m3_8  [key=0, style=solid, color=red];
m3_7 -> m3_9  [key=0, style=solid, color=red];
m3_41 -> m3_81  [key=0, style=solid];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_86  [key=2, style=dotted];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_85  [key=0, style=solid];
m3_82 -> m3_87  [key=2, style=dotted];
m3_83 -> m3_84  [key=0, style=solid];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_88  [key=2, style=dotted];
m3_85 -> m3_41  [key=0, style=bold, color=blue];
m3_45 -> m3_4  [key=3, color=darkorchid, style=bold, label="Field variable Hangfire.JobStorage _storage"];
m3_9 -> m3_10  [key=0, style=solid, color=green];
m3_10 -> m3_11  [key=0, style=solid, color=green];
m3_10 -> m3_13  [key=2, style=dotted, color=green];
m3_6 -> m3_11  [key=0, style=solid];
m3_6 -> m3_12  [key=2, style=dotted];
m3_8 -> m3_11  [key=0, style=solid, color=red];
m3_8 -> m3_12  [key=2, style=dotted, color=red];
m3_11 -> m3_4  [key=0, style=bold, color=blue];
m3_11 -> m3_12  [key=0, style=solid];
m3_64 -> m3_42  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.Common.Job job"];
m3_89 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.RecurringJobManager"];
m3_89 -> m3_10  [key=1, style=dashed, color=red, label="Hangfire.RecurringJobManager"];
m3_89 -> m3_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.RecurringJobManager"];
m3_89 -> m3_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.RecurringJobManager"];
m3_89 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.RecurringJobManager"];
m3_89 -> m3_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.RecurringJobManager"];
m3_89 -> m3_62  [key=1, style=dashed, color=red, label="Hangfire.RecurringJobManager"];
m3_89 -> m3_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.RecurringJobManager"];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_3 -> m4_4  [key=0, style=solid];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_13  [key=2, style=dotted];
m4_5 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label=jobIds];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_9  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_11  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid, color=red];
m4_8 -> m4_12  [key=0, style=solid, color=red];
m4_10 -> m4_9  [key=0, style=solid];
m4_10 -> m4_14  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_12 -> m4_3  [key=0, style=bold, color=blue];
m4_15 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.BatchCommandHandler"];
m4_15 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.BatchCommandHandler"];
m4_15 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.BatchCommandHandler"];
m4_15 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.BatchCommandHandler"];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_46  [key=0, style=bold, color=blue];
m5_84 -> m5_85  [key=0, style=solid, color=red];
m5_84 -> m5_48  [key=2, style=dotted];
m5_84 -> m5_86  [key=1, style=dashed, color=red, label=context];
m5_84 -> m5_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_84 -> m5_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_84 -> m5_104  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_84 -> m5_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_84 -> m5_88  [key=1, style=dashed, color=darkseagreen4, label=bool];
m5_84 -> m5_89  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m5_84 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m5_84 -> m5_91  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_84 -> m5_93  [key=1, style=dashed, color=darkseagreen4, label=IRedisTransaction];
m5_85 -> m5_86  [key=0, style=solid, color=red];
m5_85 -> m5_13  [key=2, style=dotted, color=red];
m5_85 -> m5_73  [key=2, style=dotted, color=red];
m5_85 -> m5_14  [key=2, style=dotted, color=red];
m5_85 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label=properties];
m5_85 -> m5_101  [key=1, style=dashed, color=darkseagreen4, label=properties];
m5_85 -> m5_104  [key=1, style=dashed, color=darkseagreen4, label=properties];
m5_85 -> m5_6  [key=2, style=dotted];
m5_85 -> m5_87  [key=1, style=dashed, color=darkseagreen4, label=properties];
m5_85 -> m5_91  [key=1, style=dashed, color=darkseagreen4, label=properties];
m5_85 -> m5_92  [key=1, style=dashed, color=darkseagreen4, label=properties];
m5_85 -> m5_93  [key=1, style=dashed, color=darkseagreen4, label=properties];
m5_86 -> m5_87  [key=0, style=solid, color=red];
m5_86 -> m5_89  [key=2, style=dotted, color=red];
m5_86 -> m5_92  [key=1, style=dashed, color=darkseagreen4, label=now];
m5_87 -> m5_88  [key=0, style=solid];
m5_87 -> m5_28  [key=2, style=dotted];
m5_87 -> m5_23  [key=2, style=dotted];
m5_88 -> m5_83  [key=0, style=bold, color=blue];
m5_88 -> m5_89  [key=0, style=solid];
m5_88 -> m5_91  [key=0, style=solid];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_70  [key=2, style=dotted];
m5_55 -> m5_145  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_48 -> m5_49  [key=0, style=solid, color=green];
m5_48 -> m5_42  [key=2, style=dotted, color=green];
m5_48 -> m5_64  [key=2, style=dotted, color=green];
m5_48 -> m5_52  [key=1, style=dashed, color=green, label=oldState];
m5_48 -> m5_53  [key=1, style=dashed, color=green, label=oldState];
m5_48 -> m5_54  [key=1, style=dashed, color=green, label=oldState];
m5_48 -> m5_57  [key=1, style=dashed, color=green, label=oldState];
m5_48 -> m5_149  [key=0, style=solid];
m5_47 -> m5_48  [key=0, style=solid, color=green];
m5_47 -> m5_61  [key=1, style=dashed, color=green, label="HangFire.States.JobState"];
m5_47 -> m5_49  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m5_47 -> m5_51  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m5_47 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_47 -> m5_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_47 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_47 -> m5_56  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<HangFire.IStateAppliedFilter>"];
m5_47 -> m5_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_47 -> m5_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_47 -> m5_60  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<HangFire.IStateAppliedFilter>"];
m5_47 -> m5_35  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ApplyState"];
m5_47 -> m5_40  [key=0, style=bold, color=blue];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_51  [key=0, style=solid];
m5_49 -> m5_65  [key=2, style=dotted];
m5_52 -> m5_53  [key=0, style=solid];
m5_52 -> m5_58  [key=0, style=solid];
m5_52 -> m5_67  [key=2, style=dotted];
m5_52 -> m5_27  [key=2, style=dotted];
m5_52 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_53 -> m5_54  [key=0, style=solid];
m5_53 -> m5_55  [key=0, style=solid];
m5_53 -> m5_68  [key=2, style=dotted];
m5_53 -> m5_50  [key=0, style=bold, color=blue];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_69  [key=2, style=dotted];
m5_57 -> m5_56  [key=0, style=solid];
m5_57 -> m5_71  [key=2, style=dotted];
m5_57 -> m5_58  [key=0, style=solid];
m5_61 -> m5_60  [key=0, style=solid, color=green];
m5_61 -> m5_74  [key=2, style=dotted, color=green];
m5_61 -> m5_62  [key=0, style=solid, color=red];
m5_61 -> m5_49  [key=2, style=dotted, color=red];
m5_51 -> m5_61  [key=1, style=dashed, color=green, label=transaction];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_51 -> m5_57  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_51 -> m5_66  [key=2, style=dotted];
m5_51 -> m5_55  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_51 -> m5_58  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_51 -> m5_59  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_51 -> m5_62  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_51 -> m5_48  [key=2, style=dotted];
m5_60 -> m5_61  [key=0, style=solid, color=red];
m5_60 -> m5_62  [key=0, style=solid];
m5_56 -> m5_57  [key=0, style=solid];
m5_56 -> m5_58  [key=0, style=solid];
m5_56 -> m5_54  [key=0, style=bold, color=blue];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_72  [key=2, style=dotted];
m5_58 -> m5_48  [key=2, style=dotted];
m5_58 -> m5_60  [key=1, style=dashed, color=red, label=context];
m5_58 -> m5_61  [key=1, style=dashed, color=red, label=context];
m5_59 -> m5_60  [key=0, style=solid, color=red];
m5_59 -> m5_73  [key=2, style=dotted];
m5_59 -> m5_10  [key=2, style=dotted];
m5_59 -> m5_61  [key=1, style=dashed, color=red, label=newState];
m5_50 -> m5_63  [key=0, style=solid];
m5_50 -> m5_51  [key=0, style=solid];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> m5_75  [key=2, style=dotted];
m5_62 -> m5_57  [key=0, style=bold, color=blue];
m5_63 -> m5_47  [key=0, style=bold, color=blue];
m5_63 -> m5_64  [key=0, style=solid];
m5_107 -> m5_108  [key=0, style=solid];
m5_39 -> m5_37  [key=0, style=bold, color=blue];
m5_10 -> m5_11  [key=0, style=solid];
m5_99 -> m5_94  [key=0, style=bold, color=blue];
m5_12 -> m5_17  [key=2, style=dotted];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_18  [key=2, style=dotted];
m5_94 -> m5_95  [key=0, style=solid];
m5_94 -> m5_84  [key=0, style=bold, color=blue];
m5_95 -> m5_96  [key=0, style=solid];
m5_95 -> m5_48  [key=2, style=dotted];
m5_95 -> m5_97  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_96 -> m5_97  [key=0, style=solid];
m5_96 -> m5_13  [key=2, style=dotted];
m5_96 -> m5_73  [key=2, style=dotted];
m5_96 -> m5_14  [key=2, style=dotted];
m5_96 -> m5_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_97 -> m5_98  [key=0, style=solid, color=red];
m5_97 -> m5_89  [key=2, style=dotted];
m5_97 -> m5_42  [key=2, style=dotted];
m5_97 -> m5_9  [key=2, style=dotted];
m5_97 -> m5_99  [key=2, style=dotted];
m5_98 -> m5_99  [key=0, style=solid, color=red];
m5_98 -> m5_28  [key=2, style=dotted, color=red];
m5_98 -> m5_96  [key=0, style=bold, color=blue];
m5_75 -> m5_76  [key=0, style=solid];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_48  [key=2, style=dotted];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_68  [key=2, style=dotted];
m5_77 -> m5_42  [key=2, style=dotted];
m5_77 -> m5_147  [key=0, style=solid];
m5_77 -> m5_79  [key=2, style=dotted];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_69  [key=2, style=dotted];
m5_78 -> m5_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_79 -> m5_75  [key=0, style=bold, color=blue];
m5_28 -> m5_38  [key=0, style=solid];
m5_28 -> m5_39  [key=2, style=dotted];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_28  [key=2, style=dotted];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_69  [key=2, style=dotted];
m5_66 -> m5_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_111 -> m5_112  [key=0, style=solid];
m5_111 -> m5_101  [key=1, style=dashed, color=darkseagreen4, label=properties];
m5_111 -> m5_104  [key=1, style=dashed, color=darkseagreen4, label=properties];
m5_112 -> m5_113  [key=0, style=solid];
m5_112 -> m5_48  [key=2, style=dotted];
m5_113 -> m5_114  [key=0, style=solid];
m5_113 -> m5_117  [key=2, style=dotted];
m5_113 -> m5_110  [key=2, style=dotted];
m5_114 -> m5_115  [key=0, style=solid];
m5_114 -> m5_49  [key=2, style=dotted];
m5_115 -> m5_116  [key=0, style=solid];
m5_115 -> m5_69  [key=2, style=dotted];
m5_115 -> m5_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_116 -> m5_111  [key=0, style=bold, color=blue];
m5_121 -> m5_122  [key=0, style=solid];
m5_122 -> m5_123  [key=0, style=solid];
m5_122 -> m5_10  [key=2, style=dotted];
m5_122 -> m5_124  [key=1, style=dashed, color=darkseagreen4, label=newState];
m5_122 -> m5_139  [key=1, style=dashed, color=darkseagreen4, label=newState];
m5_122 -> m5_127  [key=1, style=dashed, color=darkseagreen4, label=newState];
m5_123 -> m5_124  [key=0, style=solid];
m5_123 -> m5_131  [key=2, style=dotted];
m5_123 -> m5_126  [key=1, style=dashed, color=darkseagreen4, label=filter];
m5_124 -> m5_125  [key=0, style=solid];
m5_124 -> m5_13  [key=2, style=dotted];
m5_124 -> m5_132  [key=2, style=dotted];
m5_124 -> m5_134  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_124 -> m5_138  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_127 -> m5_128  [key=0, style=solid];
m5_127 -> m5_49  [key=2, style=dotted];
m5_126 -> m5_127  [key=0, style=solid];
m5_126 -> m5_133  [key=2, style=dotted];
m5_125 -> m5_126  [key=0, style=solid];
m5_125 -> m5_48  [key=2, style=dotted];
m5_128 -> m5_129  [key=0, style=solid, color=red];
m5_128 -> m5_69  [key=2, style=dotted];
m5_128 -> m5_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_129 -> m5_130  [key=0, style=solid, color=red];
m5_129 -> m5_69  [key=2, style=dotted, color=red];
m5_129 -> m5_145  [key=1, style=dashed, color=red, label="lambda expression"];
m5_130 -> m5_121  [key=0, style=bold, color=blue];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_28  [key=2, style=dotted];
m5_106 -> m5_103  [key=0, style=bold, color=blue];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_73  [key=2, style=dotted];
m5_71 -> m5_74  [key=2, style=dotted];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_29  [key=0, style=solid];
m5_89 -> m5_70  [key=2, style=dotted];
m5_89 -> m5_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_89 -> m5_90  [key=0, style=solid];
m5_90 -> m5_70  [key=2, style=dotted];
m5_90 -> m5_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_90 -> m5_91  [key=0, style=solid];
m5_93 -> m5_70  [key=2, style=dotted];
m5_93 -> m5_103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_93 -> m5_94  [key=0, style=solid];
m5_91 -> m5_92  [key=0, style=solid];
m5_91 -> m5_23  [key=2, style=dotted];
m5_91 -> m5_93  [key=2, style=dotted];
m5_92 -> m5_93  [key=0, style=solid];
m5_92 -> m5_95  [key=2, style=dotted];
m5_92 -> m5_23  [key=2, style=dotted];
m5_92 -> m5_90  [key=0, style=bold, color=blue];
m5_19 -> m5_20  [key=0, style=solid];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_18  [key=2, style=dotted];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_8  [key=2, style=dotted];
m5_1 -> m5_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_9  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_10  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_11  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_12  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_13  [key=2, style=dotted];
m5_6 -> m5_14  [key=2, style=dotted];
m5_6 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_7 -> m5_0  [key=0, style=bold, color=blue];
m5_7 -> m5_9  [key=2, style=dotted];
m5_7 -> m5_8  [key=0, style=solid];
m5_13 -> m5_17  [key=2, style=dotted];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_19  [key=2, style=dotted];
m5_17 -> m5_21  [key=0, style=solid];
m5_17 -> m5_15  [key=0, style=bold, color=blue];
m5_21 -> m5_23  [key=2, style=dotted];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_19  [key=0, style=bold, color=blue];
m5_22 -> m5_17  [key=0, style=bold, color=blue];
m5_103 -> m5_104  [key=0, style=solid];
m5_104 -> m5_105  [key=0, style=solid];
m5_104 -> m5_48  [key=2, style=dotted];
m5_104 -> m5_108  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_104 -> m5_42  [key=2, style=dotted];
m5_104 -> m5_106  [key=2, style=dotted];
m5_104 -> m5_107  [key=2, style=dotted];
m5_105 -> m5_106  [key=0, style=solid];
m5_105 -> m5_27  [key=2, style=dotted];
m5_105 -> m5_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_105 -> m5_103  [key=0, style=bold, color=blue];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_48  [key=2, style=dotted];
m5_41 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_41 -> m5_44  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_41 -> m5_45  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_41 -> m5_46  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_40 -> m5_41  [key=0, style=solid];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_10  [key=0, style=bold, color=blue];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_22  [key=2, style=dotted];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label=changingFilters];
m5_29 -> m5_40  [key=2, style=dotted];
m5_29 -> m5_41  [key=2, style=dotted];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_32  [key=2, style=dotted];
m5_30 -> m5_42  [key=2, style=dotted];
m5_30 -> m5_43  [key=2, style=dotted];
m5_30 -> m5_44  [key=2, style=dotted];
m5_31 -> m5_29  [key=0, style=bold, color=blue];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label=filter];
m5_31 -> m5_36  [key=0, style=solid];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_47  [key=2, style=dotted];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_32  [key=2, style=dotted];
m5_38 -> m5_24  [key=0, style=bold, color=blue];
m5_70 -> m5_71  [key=0, style=solid];
m5_72 -> m5_70  [key=0, style=bold, color=blue];
m5_80 -> m5_81  [key=0, style=solid];
m5_80 -> m5_66  [key=2, style=dotted];
m5_80 -> m5_82  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_81 -> m5_82  [key=0, style=solid];
m5_81 -> m5_73  [key=2, style=dotted];
m5_81 -> m5_74  [key=2, style=dotted];
m5_81 -> m5_72  [key=2, style=dotted];
m5_82 -> m5_80  [key=0, style=bold, color=blue];
m5_82 -> m5_75  [key=2, style=dotted];
m5_82 -> m5_83  [key=0, style=solid];
m5_100 -> m5_101  [key=0, style=solid];
m5_101 -> m5_102  [key=0, style=solid];
m5_101 -> m5_93  [key=2, style=dotted];
m5_101 -> m5_42  [key=2, style=dotted];
m5_101 -> m5_99  [key=2, style=dotted];
m5_102 -> m5_100  [key=0, style=bold, color=blue];
m5_108 -> m5_109  [key=0, style=solid];
m5_108 -> m5_110  [key=2, style=dotted];
m5_109 -> m5_107  [key=0, style=bold, color=blue];
m5_109 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_118 -> m5_119  [key=0, style=solid];
m5_119 -> m5_120  [key=0, style=solid];
m5_119 -> m5_22  [key=2, style=dotted];
m5_120 -> m5_118  [key=0, style=bold, color=blue];
m5_139 -> m5_140  [key=0, style=solid];
m5_134 -> m5_135  [key=0, style=solid];
m5_138 -> m5_139  [key=0, style=solid];
m5_141 -> m5_142  [key=0, style=solid];
m5_145 -> m5_146  [key=0, style=solid, color=red];
m5_145 -> m5_77  [key=0, style=solid];
m5_135 -> m5_136  [key=0, style=solid];
m5_135 -> m5_27  [key=2, style=dotted];
m5_135 -> m5_137  [key=2, style=dotted];
m5_136 -> m5_134  [key=0, style=bold, color=blue];
m5_140 -> m5_138  [key=0, style=bold, color=blue];
m5_142 -> m5_143  [key=0, style=solid];
m5_142 -> m5_144  [key=2, style=dotted];
m5_143 -> m5_141  [key=0, style=bold, color=blue];
m5_146 -> m5_147  [key=0, style=solid, color=red];
m5_146 -> m5_148  [key=2, style=dotted, color=red];
m5_147 -> m5_145  [key=0, style=bold, color=blue];
m5_11 -> m5_17  [key=2, style=dotted];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_16  [key=2, style=dotted];
m5_14 -> m5_17  [key=2, style=dotted];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_20  [key=2, style=dotted];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_68  [key=2, style=dotted];
m5_64 -> m5_65  [key=0, style=solid];
m5_64 -> m5_48  [key=2, style=dotted];
m5_67 -> m5_63  [key=0, style=bold, color=blue];
m5_24 -> m5_47  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Apply"];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_24 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m5_24 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_24 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m5_24 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m5_24 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m5_24 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_35 -> m5_31  [key=0, style=solid];
m5_35 -> m5_46  [key=2, style=dotted];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_28  [key=2, style=dotted];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_27  [key=0, style=solid];
m5_25 -> m5_28  [key=2, style=dotted];
m5_32 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m5_33 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_33 -> m5_55  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_45  [key=2, style=dotted];
m5_33 -> m5_82  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_40  [key=2, style=dotted];
m5_36 -> m5_41  [key=2, style=dotted];
m5_36 -> m5_33  [key=0, style=bold, color=blue];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_31  [key=0, style=solid];
m5_34 -> m5_27  [key=2, style=dotted];
m5_34 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_26 -> m5_38  [key=0, style=solid];
m5_26 -> m5_39  [key=2, style=dotted];
m5_26 -> m5_23  [key=0, style=bold, color=blue];
m5_46 -> m5_80  [key=0, style=solid];
m5_46 -> m5_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_49  [key=2, style=dotted];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> m5_28  [key=2, style=dotted];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_49  [key=2, style=dotted];
m5_8 -> m5_6  [key=0, style=bold, color=blue];
m5_23 -> m5_24  [key=0, style=solid];
m5_149 -> m5_150  [key=0, style=solid];
m5_149 -> m5_32  [key=2, style=dotted];
m5_150 -> m5_48  [key=0, style=bold, color=blue];
m5_110 -> m5_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_110 -> m5_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_110 -> m5_104  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m5_151 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_85  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_96  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_104  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_114  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_128  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_142  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_129  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_151 -> m5_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.ElectStateContextFacts"];
m5_152 -> m5_55  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_153 -> m5_108  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_154 -> m5_139  [key=1, style=dashed, color=darkseagreen4, label=newState];
m6_16 -> m6_17  [key=0, style=solid];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_5  [key=2, style=dotted];
m6_17 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label=options];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_12  [key=2, style=dotted];
m6_18 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_19 -> m6_16  [key=0, style=bold, color=blue];
m6_24 -> m6_25  [key=0, style=solid];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_5  [key=2, style=dotted];
m6_25 -> m6_27  [key=1, style=dashed, color=darkseagreen4, label=options];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_23  [key=2, style=dotted];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_23  [key=2, style=dotted];
m6_27 -> m6_29  [key=2, style=dotted];
m6_28 -> m6_24  [key=0, style=bold, color=blue];
m6_8 -> m6_9  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_5  [key=2, style=dotted];
m6_9 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label=options];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_12  [key=2, style=dotted];
m6_10 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_11 -> m6_8  [key=0, style=bold, color=blue];
m6_20 -> m6_21  [key=0, style=solid];
m6_14 -> m6_15  [key=0, style=solid];
m6_13 -> m6_14  [key=0, style=solid];
m6_15 -> m6_13  [key=0, style=bold, color=blue];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_23  [key=2, style=dotted];
m6_22 -> m6_20  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_5  [key=2, style=dotted];
m6_1 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label=options];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_6  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_7  [key=2, style=dotted];
m6_4 -> m6_0  [key=0, style=bold, color=blue];
m6_30 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label=options];
m6_31 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_18  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_5  [key=2, style=dotted];
m7_17 -> m7_6  [key=2, style=dotted];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_5  [key=2, style=dotted];
m7_18 -> m7_11  [key=2, style=dotted];
m7_19 -> m7_16  [key=0, style=bold, color=blue];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_5  [key=2, style=dotted];
m7_3 -> m7_6  [key=2, style=dotted];
m7_4 -> m7_2  [key=0, style=bold, color=blue];
m7_33 -> m7_34  [key=0, style=solid];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_5  [key=2, style=dotted];
m7_34 -> m7_28  [key=2, style=dotted];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_37  [key=2, style=dotted];
m7_36 -> m7_33  [key=0, style=bold, color=blue];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_6  [key=2, style=dotted];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_5  [key=2, style=dotted];
m7_9 -> m7_11  [key=2, style=dotted];
m7_9 -> m7_20  [key=3, color=green, style=bold, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext"];
m7_10 -> m7_7  [key=0, style=bold, color=blue];
m7_30 -> m7_31  [key=0, style=solid];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_5  [key=2, style=dotted];
m7_31 -> m7_23  [key=2, style=dotted];
m7_32 -> m7_30  [key=0, style=bold, color=blue];
m7_24 -> m7_25  [key=0, style=solid];
m7_25 -> m7_26  [key=0, style=solid];
m7_25 -> m7_5  [key=2, style=dotted];
m7_25 -> m7_28  [key=2, style=dotted];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> m7_29  [key=2, style=dotted];
m7_27 -> m7_24  [key=0, style=bold, color=blue];
m7_12 -> m7_13  [key=0, style=solid];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_15  [key=2, style=dotted];
m7_13 -> m7_6  [key=2, style=dotted];
m7_14 -> m7_12  [key=0, style=bold, color=blue];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_46  [key=1, style=dashed, color=darkseagreen4, label=int];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> m7_5  [key=2, style=dotted];
m7_45 -> m7_42  [key=2, style=dotted];
m7_46 -> m7_47  [key=0, style=solid];
m7_46 -> m7_43  [key=2, style=dotted];
m7_47 -> m7_44  [key=0, style=bold, color=blue];
m7_20 -> m7_21  [key=0, style=solid];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_5  [key=2, style=dotted];
m7_21 -> m7_23  [key=2, style=dotted];
m7_22 -> m7_20  [key=0, style=bold, color=blue];
m7_38 -> m7_39  [key=0, style=solid];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_5  [key=2, style=dotted];
m7_39 -> m7_42  [key=2, style=dotted];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> m7_43  [key=2, style=dotted];
m7_41 -> m7_38  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [key=0, style=bold, color=blue];
m8_10 -> m8_16  [key=0, style=solid];
m8_10 -> m8_24  [key=2, style=dotted];
m8_18 -> m8_22  [key=0, style=solid];
m8_18 -> m8_11  [key=2, style=dotted];
m8_20 -> m8_26  [key=0, style=solid];
m8_20 -> m8_0  [key=3, color=darkorchid, style=bold, label="Parameter variable SqlConnection connection"];
m8_20 -> m8_21  [key=0, style=solid, color=green];
m8_20 -> m8_12  [key=2, style=dotted, color=green];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_29  [key=2, style=dotted];
m8_26 -> m8_30  [key=2, style=dotted];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_15  [key=2, style=dotted];
m8_28 -> m8_20  [key=0, style=bold, color=blue];
m8_28 -> m8_26  [key=0, style=bold, color=blue];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_14  [key=0, style=solid];
m8_15 -> m8_9  [key=0, style=solid];
m8_15 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_0 -> m8_5  [key=1, style=dashed, color=green, label="System.TimeZoneInfo"];
m8_0 -> m8_6  [key=1, style=dashed, color=green, label=CrontabSchedule];
m8_0 -> m8_7  [key=1, style=dashed, color=green, label="System.DateTime"];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m8_0 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m8_0 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m8_5 -> m8_6  [key=0, style=solid, color=green];
m8_5 -> m8_17  [key=0, style=solid];
m8_5 -> m8_21  [key=2, style=dotted];
m8_3 -> m8_5  [key=0, style=solid, color=green];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_19  [key=2, style=dotted];
m8_6 -> m8_7  [key=0, style=solid, color=green];
m8_6 -> m8_22  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid, color=green];
m8_7 -> m8_12  [key=2, style=dotted, color=green];
m8_7 -> m8_23  [key=2, style=dotted];
m8_7 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label=script];
m8_7 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label=script];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_13  [key=2, style=dotted];
m8_8 -> m8_14  [key=2, style=dotted];
m8_8 -> m8_15  [key=2, style=dotted];
m8_8 -> m8_8  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m8_1 -> m8_3  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_4 -> m8_9  [key=0, style=solid];
m8_4 -> m8_11  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_6  [key=0, style=solid];
m8_4 -> m8_20  [key=2, style=dotted];
m8_2 -> m8_9  [key=0, style=solid];
m8_2 -> m8_10  [key=2, style=dotted];
m8_2 -> m8_17  [key=0, style=solid];
m8_2 -> m8_18  [key=2, style=dotted];
m8_9 -> m8_0  [key=0, style=bold, color=blue];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_16  [key=0, style=solid];
m8_14 -> m8_17  [key=0, style=solid];
m8_13 -> m8_15  [key=0, style=solid];
m8_13 -> m8_25  [key=2, style=dotted];
m8_29 -> m8_5  [key=1, style=dashed, color=green, label="Hangfire.Server.ScheduleInstant"];
m8_29 -> m8_6  [key=1, style=dashed, color=green, label="Hangfire.Server.ScheduleInstant"];
m8_29 -> m8_7  [key=1, style=dashed, color=green, label="Hangfire.Server.ScheduleInstant"];
m8_29 -> m8_20  [key=1, style=dashed, color=green, label="Hangfire.Server.ScheduleInstant"];
m8_29 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ScheduleInstant"];
m8_29 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ScheduleInstant"];
m8_29 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ScheduleInstant"];
m8_29 -> m8_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ScheduleInstant"];
m8_16 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime?"];
m8_16 -> m8_17  [key=0, style=solid];
m8_19 -> m8_20  [key=0, style=solid, color=green];
m8_19 -> m8_12  [key=2, style=dotted];
m8_19 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label=baseTime];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_13  [key=2, style=dotted];
m8_21 -> m8_23  [key=2, style=dotted];
m8_21 -> m8_24  [key=2, style=dotted];
m8_21 -> m8_25  [key=2, style=dotted];
m8_21 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_17 -> m8_19  [key=0, style=solid];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_0  [key=0, style=bold, color=blue];
m8_22 -> m8_16  [key=0, style=bold, color=blue];
m8_22 -> m8_31  [key=0, style=solid];
m8_22 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.Assembly"];
m8_22 -> m8_6  [key=3, color=darkorchid, style=bold, label="Parameter variable string resourceName"];
m8_11 -> m8_12  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_37  [key=2, style=dotted];
m8_31 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label=stream];
m8_33 -> m8_36  [key=0, style=solid];
m8_33 -> m8_38  [key=2, style=dotted];
m8_33 -> m8_39  [key=2, style=dotted];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_34  [key=0, style=solid];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_40  [key=2, style=dotted];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_41  [key=2, style=dotted];
m8_36 -> m8_22  [key=0, style=bold, color=blue];
m9_61 -> m9_123  [key=0, style=solid];
m9_123 -> m9_124  [key=0, style=solid];
m9_123 -> m9_33  [key=2, style=dotted];
m9_124 -> m9_61  [key=0, style=bold, color=blue];
m9_34 -> m9_35  [key=0, style=solid];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_28  [key=2, style=dotted];
m9_35 -> m9_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_29  [key=2, style=dotted];
m9_37 -> m9_34  [key=0, style=bold, color=blue];
m9_82 -> m9_83  [key=0, style=solid];
m9_83 -> m9_84  [key=0, style=solid];
m9_83 -> m9_61  [key=2, style=dotted];
m9_84 -> m9_62  [key=2, style=dotted];
m9_84 -> m9_85  [key=0, style=solid];
m9_85 -> m9_86  [key=0, style=solid];
m9_85 -> m9_63  [key=2, style=dotted];
m9_85 -> m9_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_86 -> m9_82  [key=0, style=bold, color=blue];
m9_41 -> m9_42  [key=0, style=solid];
m9_42 -> m9_43  [key=0, style=solid];
m9_42 -> m9_28  [key=2, style=dotted];
m9_42 -> m9_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_43 -> m9_44  [key=0, style=solid];
m9_43 -> m9_29  [key=2, style=dotted];
m9_44 -> m9_41  [key=0, style=bold, color=blue];
m9_99 -> m9_100  [key=0, style=solid];
m9_100 -> m9_101  [key=0, style=solid];
m9_100 -> m9_61  [key=2, style=dotted];
m9_101 -> m9_62  [key=2, style=dotted];
m9_101 -> m9_102  [key=0, style=solid];
m9_102 -> m9_103  [key=0, style=solid];
m9_102 -> m9_63  [key=2, style=dotted];
m9_102 -> m9_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_103 -> m9_99  [key=0, style=bold, color=blue];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_12  [key=2, style=dotted];
m9_108 -> m9_109  [key=0, style=solid];
m9_109 -> m9_110  [key=0, style=solid];
m9_109 -> m9_15  [key=2, style=dotted];
m9_109 -> m9_28  [key=2, style=dotted];
m9_109 -> m9_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_110 -> m9_111  [key=0, style=solid];
m9_110 -> m9_61  [key=2, style=dotted];
m9_110 -> m9_118  [key=1, style=dashed, color=darkseagreen4, label=server];
m9_111 -> m9_112  [key=0, style=solid];
m9_111 -> m9_28  [key=2, style=dotted];
m9_111 -> m9_117  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_112 -> m9_113  [key=0, style=solid];
m9_112 -> m9_63  [key=2, style=dotted];
m9_112 -> m9_120  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_113 -> m9_108  [key=0, style=bold, color=blue];
m9_24 -> m9_25  [key=0, style=solid];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_28  [key=2, style=dotted];
m9_25 -> m9_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_29  [key=2, style=dotted];
m9_27 -> m9_24  [key=0, style=bold, color=blue];
m9_68 -> m9_69  [key=0, style=solid];
m9_70 -> m9_71  [key=0, style=solid, color=green];
m9_70 -> m9_62  [key=2, style=dotted, color=green];
m9_69 -> m9_70  [key=0, style=solid, color=green];
m9_69 -> m9_61  [key=2, style=dotted];
m9_71 -> m9_72  [key=0, style=solid];
m9_71 -> m9_74  [key=2, style=dotted];
m9_71 -> m9_63  [key=2, style=dotted];
m9_71 -> m9_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_72 -> m9_73  [key=0, style=solid];
m9_72 -> m9_74  [key=2, style=dotted];
m9_72 -> m9_63  [key=2, style=dotted];
m9_72 -> m9_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_73 -> m9_68  [key=0, style=bold, color=blue];
m9_49 -> m9_50  [key=0, style=solid];
m9_50 -> m9_51  [key=0, style=solid];
m9_50 -> m9_28  [key=2, style=dotted];
m9_50 -> m9_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_29  [key=2, style=dotted];
m9_52 -> m9_49  [key=0, style=bold, color=blue];
m9_120 -> m9_121  [key=0, style=solid];
m9_18 -> m9_19  [key=0, style=solid];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_33  [key=2, style=dotted];
m9_39 -> m9_40  [key=0, style=solid];
m9_39 -> m9_33  [key=2, style=dotted];
m9_46 -> m9_47  [key=0, style=solid];
m9_46 -> m9_48  [key=2, style=dotted];
m9_54 -> m9_55  [key=0, style=solid];
m9_54 -> m9_33  [key=2, style=dotted];
m9_65 -> m9_66  [key=0, style=solid];
m9_65 -> m9_67  [key=2, style=dotted];
m9_118 -> m9_62  [key=2, style=dotted];
m9_118 -> m9_119  [key=0, style=solid];
m9_75 -> m9_76  [key=0, style=solid];
m9_17 -> m9_18  [key=0, style=solid];
m9_19 -> m9_17  [key=0, style=bold, color=blue];
m9_20 -> m9_21  [key=0, style=solid];
m9_30 -> m9_31  [key=0, style=solid];
m9_32 -> m9_30  [key=0, style=bold, color=blue];
m9_38 -> m9_39  [key=0, style=solid];
m9_40 -> m9_38  [key=0, style=bold, color=blue];
m9_45 -> m9_46  [key=0, style=solid];
m9_47 -> m9_45  [key=0, style=bold, color=blue];
m9_53 -> m9_54  [key=0, style=solid];
m9_55 -> m9_53  [key=0, style=bold, color=blue];
m9_64 -> m9_65  [key=0, style=solid];
m9_66 -> m9_64  [key=0, style=bold, color=blue];
m9_78 -> m9_79  [key=0, style=solid];
m9_87 -> m9_88  [key=0, style=solid];
m9_96 -> m9_97  [key=0, style=solid];
m9_104 -> m9_105  [key=0, style=solid];
m9_114 -> m9_115  [key=0, style=solid];
m9_117 -> m9_118  [key=0, style=solid];
m9_119 -> m9_117  [key=0, style=bold, color=blue];
m9_77 -> m9_75  [key=0, style=bold, color=blue];
m9_76 -> m9_77  [key=0, style=solid];
m9_76 -> m9_23  [key=2, style=dotted];
m9_22 -> m9_20  [key=0, style=bold, color=blue];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_23  [key=2, style=dotted];
m9_121 -> m9_28  [key=2, style=dotted];
m9_121 -> m9_122  [key=0, style=solid];
m9_121 -> m9_107  [key=2, style=dotted];
m9_80 -> m9_78  [key=0, style=bold, color=blue];
m9_79 -> m9_80  [key=0, style=solid];
m9_79 -> m9_81  [key=2, style=dotted];
m9_89 -> m9_87  [key=0, style=bold, color=blue];
m9_88 -> m9_89  [key=0, style=solid];
m9_88 -> m9_90  [key=2, style=dotted];
m9_98 -> m9_96  [key=0, style=bold, color=blue];
m9_97 -> m9_98  [key=0, style=solid];
m9_97 -> m9_81  [key=2, style=dotted];
m9_106 -> m9_104  [key=0, style=bold, color=blue];
m9_105 -> m9_106  [key=0, style=solid];
m9_105 -> m9_107  [key=2, style=dotted];
m9_116 -> m9_114  [key=0, style=bold, color=blue];
m9_115 -> m9_116  [key=0, style=solid];
m9_115 -> m9_81  [key=2, style=dotted];
m9_122 -> m9_120  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_9  [key=2, style=dotted];
m9_1 -> m9_4  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_10  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_11  [key=2, style=dotted];
m9_3 -> m9_0  [key=0, style=bold, color=blue];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_13  [key=2, style=dotted];
m9_5 -> m9_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorageOptions"];
m9_5 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorageOptions"];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_14  [key=2, style=dotted];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_15  [key=2, style=dotted];
m9_7 -> m9_16  [key=2, style=dotted];
m9_7 -> m9_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_8 -> m9_0  [key=0, style=bold, color=blue];
m9_56 -> m9_57  [key=0, style=solid];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_61  [key=2, style=dotted];
m9_58 -> m9_62  [key=2, style=dotted];
m9_58 -> m9_59  [key=0, style=solid];
m9_59 -> m9_60  [key=0, style=solid];
m9_59 -> m9_63  [key=2, style=dotted];
m9_59 -> m9_64  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_60 -> m9_56  [key=0, style=bold, color=blue];
m9_91 -> m9_92  [key=0, style=solid];
m9_92 -> m9_93  [key=0, style=solid];
m9_92 -> m9_61  [key=2, style=dotted];
m9_93 -> m9_62  [key=2, style=dotted];
m9_93 -> m9_94  [key=0, style=solid];
m9_94 -> m9_95  [key=0, style=solid];
m9_94 -> m9_63  [key=2, style=dotted];
m9_94 -> m9_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_95 -> m9_91  [key=0, style=bold, color=blue];
m9_125 -> m9_70  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_85  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_94  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_102  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_110  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_111  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_118  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_125 -> m9_123  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts"];
m9_126 -> m9_118  [key=1, style=dashed, color=darkseagreen4, label=server];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_10  [key=2, style=dotted];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_11  [key=2, style=dotted];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_12  [key=2, style=dotted];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_11  [key=2, style=dotted];
m10_6 -> m10_7  [key=0, style=solid];
m10_7 -> m10_8  [key=0, style=solid];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_11  [key=2, style=dotted];
m10_9 -> m10_0  [key=0, style=bold, color=blue];
m10_13 -> m10_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m10_13 -> m10_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m10_13 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m10_13 -> m10_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m10_13 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m10_13 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m10_13 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m10_13 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m11_97 -> m11_252  [key=0, style=solid];
m11_252 -> m11_253  [key=0, style=solid];
m11_252 -> m11_250  [key=2, style=dotted];
m11_252 -> m11_251  [key=2, style=dotted];
m11_253 -> m11_97  [key=0, style=bold, color=blue];
m11_101 -> m11_102  [key=0, style=solid, color=red];
m11_101 -> m11_104  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_101 -> m11_107  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_102 -> m11_103  [key=0, style=solid, color=red];
m11_102 -> m11_104  [key=1, style=dashed, color=red, label=query];
m11_102 -> m11_107  [key=1, style=dashed, color=red, label=query];
m11_102 -> m11_102  [key=3, color=red, style=bold, label="Local variable string query"];
m11_104 -> m11_105  [key=0, style=solid];
m11_104 -> m11_27  [key=2, style=dotted];
m11_104 -> m11_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_103 -> m11_104  [key=0, style=solid];
m11_103 -> m11_97  [key=2, style=dotted];
m11_105 -> m11_101  [key=0, style=bold, color=blue];
m11_6 -> m11_7  [key=0, style=solid];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_9  [key=2, style=dotted];
m11_7 -> m11_10  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_8 -> m11_6  [key=0, style=bold, color=blue];
m11_65 -> m11_66  [key=0, style=solid, color=red];
m11_65 -> m11_69  [key=1, style=dashed, color=red, label=string];
m11_66 -> m11_67  [key=0, style=solid, color=red];
m11_66 -> m11_27  [key=2, style=dotted, color=red];
m11_66 -> m11_68  [key=1, style=dashed, color=red, label="lambda expression"];
m11_67 -> m11_65  [key=0, style=bold, color=blue];
m11_225 -> m11_226  [key=0, style=solid];
m11_225 -> m11_230  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_225 -> m11_233  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_226 -> m11_227  [key=0, style=solid];
m11_226 -> m11_228  [key=0, style=solid, color=red];
m11_230 -> m11_231  [key=0, style=solid];
m11_230 -> m11_27  [key=2, style=dotted];
m11_230 -> m11_232  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_227 -> m11_231  [key=0, style=solid];
m11_227 -> m11_5  [key=2, style=dotted];
m11_228 -> m11_229  [key=0, style=solid, color=red];
m11_228 -> m11_230  [key=1, style=dashed, color=red, label=query];
m11_228 -> m11_233  [key=1, style=dashed, color=red, label=query];
m11_228 -> m11_228  [key=3, color=red, style=bold, label="Local variable string query"];
m11_229 -> m11_230  [key=0, style=solid];
m11_229 -> m11_97  [key=2, style=dotted];
m11_231 -> m11_225  [key=0, style=bold, color=blue];
m11_77 -> m11_78  [key=0, style=solid, color=red];
m11_77 -> m11_81  [key=1, style=dashed, color=red, label=string];
m11_78 -> m11_79  [key=0, style=solid, color=red];
m11_78 -> m11_27  [key=2, style=dotted, color=red];
m11_78 -> m11_80  [key=1, style=dashed, color=red, label="lambda expression"];
m11_79 -> m11_77  [key=0, style=bold, color=blue];
m11_235 -> m11_236  [key=0, style=solid];
m11_235 -> m11_240  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_235 -> m11_243  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_236 -> m11_237  [key=0, style=solid];
m11_236 -> m11_238  [key=0, style=solid, color=red];
m11_240 -> m11_241  [key=0, style=solid];
m11_240 -> m11_27  [key=2, style=dotted];
m11_240 -> m11_242  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_237 -> m11_241  [key=0, style=solid];
m11_237 -> m11_5  [key=2, style=dotted];
m11_238 -> m11_239  [key=0, style=solid, color=red];
m11_238 -> m11_240  [key=1, style=dashed, color=red, label=query];
m11_238 -> m11_243  [key=1, style=dashed, color=red, label=query];
m11_238 -> m11_238  [key=3, color=red, style=bold, label="Local variable string query"];
m11_239 -> m11_240  [key=0, style=solid];
m11_239 -> m11_113  [key=2, style=dotted];
m11_241 -> m11_235  [key=0, style=bold, color=blue];
m11_195 -> m11_196  [key=0, style=solid];
m11_195 -> m11_200  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_195 -> m11_203  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_196 -> m11_197  [key=0, style=solid];
m11_196 -> m11_198  [key=0, style=solid, color=red];
m11_200 -> m11_201  [key=0, style=solid];
m11_200 -> m11_27  [key=2, style=dotted];
m11_200 -> m11_202  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_197 -> m11_201  [key=0, style=solid];
m11_197 -> m11_5  [key=2, style=dotted];
m11_198 -> m11_199  [key=0, style=solid, color=red];
m11_198 -> m11_200  [key=1, style=dashed, color=red, label=query];
m11_198 -> m11_203  [key=1, style=dashed, color=red, label=query];
m11_198 -> m11_198  [key=3, color=red, style=bold, label="Local variable string query"];
m11_199 -> m11_200  [key=0, style=solid];
m11_199 -> m11_97  [key=2, style=dotted];
m11_201 -> m11_195  [key=0, style=bold, color=blue];
m11_251 -> m11_256  [key=0, style=solid];
m11_256 -> m11_257  [key=0, style=solid];
m11_256 -> m11_258  [key=2, style=dotted];
m11_257 -> m11_251  [key=0, style=bold, color=blue];
m11_141 -> m11_254  [key=0, style=solid];
m11_254 -> m11_255  [key=0, style=solid];
m11_254 -> m11_250  [key=2, style=dotted];
m11_254 -> m11_251  [key=2, style=dotted];
m11_255 -> m11_141  [key=0, style=bold, color=blue];
m11_38 -> m11_39  [key=0, style=solid, color=red];
m11_38 -> m11_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_38 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_39 -> m11_40  [key=0, style=solid, color=red];
m11_39 -> m11_43  [key=1, style=dashed, color=red, label=addAndSetStateSql];
m11_39 -> m11_39  [key=3, color=red, style=bold, label="Local variable string addAndSetStateSql"];
m11_40 -> m11_41  [key=0, style=solid];
m11_40 -> m11_27  [key=2, style=dotted];
m11_40 -> m11_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_41 -> m11_38  [key=0, style=bold, color=blue];
m11_205 -> m11_206  [key=0, style=solid];
m11_205 -> m11_210  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_205 -> m11_213  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_206 -> m11_207  [key=0, style=solid];
m11_206 -> m11_208  [key=0, style=solid, color=red];
m11_210 -> m11_211  [key=0, style=solid];
m11_210 -> m11_27  [key=2, style=dotted];
m11_210 -> m11_212  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_207 -> m11_211  [key=0, style=solid];
m11_207 -> m11_5  [key=2, style=dotted];
m11_208 -> m11_209  [key=0, style=solid, color=red];
m11_208 -> m11_210  [key=1, style=dashed, color=red, label=query];
m11_208 -> m11_213  [key=1, style=dashed, color=red, label=query];
m11_208 -> m11_208  [key=3, color=red, style=bold, label="Local variable string query"];
m11_209 -> m11_210  [key=0, style=solid];
m11_209 -> m11_113  [key=2, style=dotted];
m11_211 -> m11_205  [key=0, style=bold, color=blue];
m11_47 -> m11_48  [key=0, style=solid, color=red];
m11_47 -> m11_49  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_47 -> m11_52  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_48 -> m11_49  [key=0, style=solid, color=red];
m11_48 -> m11_52  [key=1, style=dashed, color=red, label=addStateSql];
m11_48 -> m11_48  [key=3, color=red, style=bold, label="Local variable string addStateSql"];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_27  [key=2, style=dotted];
m11_49 -> m11_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_50 -> m11_47  [key=0, style=bold, color=blue];
m11_83 -> m11_84  [key=0, style=solid, color=red];
m11_83 -> m11_87  [key=1, style=dashed, color=red, label=string];
m11_84 -> m11_85  [key=0, style=solid, color=red];
m11_84 -> m11_27  [key=2, style=dotted, color=red];
m11_84 -> m11_86  [key=1, style=dashed, color=red, label="lambda expression"];
m11_85 -> m11_83  [key=0, style=bold, color=blue];
m11_175 -> m11_176  [key=0, style=solid];
m11_175 -> m11_180  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_175 -> m11_183  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_176 -> m11_177  [key=0, style=solid];
m11_176 -> m11_178  [key=0, style=solid, color=red];
m11_180 -> m11_181  [key=0, style=solid];
m11_180 -> m11_27  [key=2, style=dotted];
m11_180 -> m11_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_177 -> m11_181  [key=0, style=solid];
m11_177 -> m11_5  [key=2, style=dotted];
m11_178 -> m11_179  [key=0, style=solid, color=red];
m11_178 -> m11_180  [key=1, style=dashed, color=red, label=query];
m11_178 -> m11_183  [key=1, style=dashed, color=red, label=query];
m11_178 -> m11_178  [key=3, color=red, style=bold, label="Local variable string query"];
m11_179 -> m11_180  [key=0, style=solid];
m11_179 -> m11_97  [key=2, style=dotted];
m11_181 -> m11_175  [key=0, style=bold, color=blue];
m11_89 -> m11_90  [key=0, style=solid];
m11_90 -> m11_91  [key=0, style=solid];
m11_90 -> m11_92  [key=2, style=dotted];
m11_91 -> m11_89  [key=0, style=bold, color=blue];
m11_27 -> m11_245  [key=0, style=solid];
m11_27 -> m11_25  [key=3, color=red, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_27 -> m11_33  [key=3, color=red, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_27 -> m11_40  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_27 -> m11_49  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_27 -> m11_57  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_27 -> m11_66  [key=3, color=red, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_27 -> m11_72  [key=3, color=red, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_27 -> m11_78  [key=3, color=red, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_27 -> m11_84  [key=3, color=red, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_27 -> m11_95  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_27 -> m11_104  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_27 -> m11_111  [key=3, color=red, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_27 -> m11_119  [key=3, color=red, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_27 -> m11_127  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_27 -> m11_154  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_27 -> m11_180  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_27 -> m11_190  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_27 -> m11_200  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_27 -> m11_210  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_27 -> m11_220  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_27 -> m11_230  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_27 -> m11_240  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_245 -> m11_246  [key=0, style=solid];
m11_245 -> m11_247  [key=2, style=dotted];
m11_246 -> m11_27  [key=0, style=bold, color=blue];
m11_54 -> m11_55  [key=0, style=solid];
m11_54 -> m11_57  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_54 -> m11_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_55 -> m11_56  [key=0, style=solid];
m11_55 -> m11_59  [key=2, style=dotted];
m11_57 -> m11_58  [key=0, style=solid];
m11_57 -> m11_27  [key=2, style=dotted];
m11_57 -> m11_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_56 -> m11_57  [key=0, style=solid];
m11_56 -> m11_60  [key=2, style=dotted];
m11_56 -> m11_62  [key=1, style=dashed, color=darkseagreen4, label=persistentQueue];
m11_58 -> m11_54  [key=0, style=bold, color=blue];
m11_71 -> m11_72  [key=0, style=solid, color=red];
m11_71 -> m11_75  [key=1, style=dashed, color=red, label=string];
m11_72 -> m11_73  [key=0, style=solid, color=red];
m11_72 -> m11_27  [key=2, style=dotted, color=red];
m11_72 -> m11_74  [key=1, style=dashed, color=red, label="lambda expression"];
m11_73 -> m11_71  [key=0, style=bold, color=blue];
m11_92 -> m11_93  [key=0, style=solid, color=red];
m11_92 -> m11_95  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_92 -> m11_99  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_92 -> m11_89  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m11_92 -> m11_90  [key=3, color=darkorchid, style=bold, label="Parameter variable double score"];
m11_93 -> m11_94  [key=0, style=solid, color=red];
m11_93 -> m11_95  [key=1, style=dashed, color=red, label=addSql];
m11_93 -> m11_99  [key=1, style=dashed, color=red, label=addSql];
m11_93 -> m11_93  [key=3, color=red, style=bold, label="Local variable string addSql"];
m11_95 -> m11_96  [key=0, style=solid];
m11_95 -> m11_27  [key=2, style=dotted];
m11_95 -> m11_98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_94 -> m11_95  [key=0, style=solid];
m11_94 -> m11_97  [key=2, style=dotted];
m11_96 -> m11_92  [key=0, style=bold, color=blue];
m11_132 -> m11_133  [key=0, style=solid];
m11_132 -> m11_135  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m11_132 -> m11_139  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_132 -> m11_144  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_132 -> m11_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_133 -> m11_134  [key=0, style=solid];
m11_133 -> m11_135  [key=0, style=solid];
m11_135 -> m11_136  [key=0, style=solid];
m11_135 -> m11_137  [key=0, style=solid, color=red];
m11_139 -> m11_140  [key=0, style=solid];
m11_139 -> m11_142  [key=2, style=dotted];
m11_139 -> m11_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_134 -> m11_140  [key=0, style=solid];
m11_134 -> m11_5  [key=2, style=dotted];
m11_136 -> m11_140  [key=0, style=solid];
m11_136 -> m11_5  [key=2, style=dotted];
m11_137 -> m11_138  [key=0, style=solid, color=red];
m11_137 -> m11_139  [key=1, style=dashed, color=red, label=sql];
m11_137 -> m11_144  [key=1, style=dashed, color=red, label=sql];
m11_137 -> m11_137  [key=3, color=red, style=bold, label="Local variable string sql"];
m11_138 -> m11_139  [key=0, style=solid];
m11_138 -> m11_141  [key=2, style=dotted];
m11_140 -> m11_132  [key=0, style=bold, color=blue];
m11_149 -> m11_150  [key=0, style=solid];
m11_149 -> m11_154  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_149 -> m11_157  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_150 -> m11_151  [key=0, style=solid];
m11_150 -> m11_152  [key=0, style=solid, color=red];
m11_154 -> m11_155  [key=0, style=solid];
m11_154 -> m11_27  [key=2, style=dotted];
m11_154 -> m11_156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_151 -> m11_155  [key=0, style=solid];
m11_151 -> m11_5  [key=2, style=dotted];
m11_152 -> m11_153  [key=0, style=solid, color=red];
m11_152 -> m11_154  [key=1, style=dashed, color=red, label=query];
m11_152 -> m11_157  [key=1, style=dashed, color=red, label=query];
m11_152 -> m11_152  [key=3, color=red, style=bold, label="Local variable string query"];
m11_153 -> m11_154  [key=0, style=solid];
m11_153 -> m11_141  [key=2, style=dotted];
m11_155 -> m11_149  [key=0, style=bold, color=blue];
m11_32 -> m11_33  [key=0, style=solid, color=red];
m11_32 -> m11_36  [key=1, style=dashed, color=red, label=string];
m11_33 -> m11_34  [key=0, style=solid, color=red];
m11_33 -> m11_27  [key=2, style=dotted, color=red];
m11_33 -> m11_35  [key=1, style=dashed, color=red, label="lambda expression"];
m11_34 -> m11_32  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_3  [key=0, style=solid];
m11_3 -> m11_4  [key=0, style=solid];
m11_2 -> m11_4  [key=0, style=solid];
m11_2 -> m11_5  [key=2, style=dotted];
m11_4 -> m11_0  [key=0, style=bold, color=blue];
m11_185 -> m11_186  [key=0, style=solid];
m11_185 -> m11_190  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_185 -> m11_193  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_186 -> m11_187  [key=0, style=solid];
m11_186 -> m11_188  [key=0, style=solid, color=red];
m11_190 -> m11_191  [key=0, style=solid];
m11_190 -> m11_27  [key=2, style=dotted];
m11_190 -> m11_192  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_187 -> m11_191  [key=0, style=solid];
m11_187 -> m11_5  [key=2, style=dotted];
m11_188 -> m11_189  [key=0, style=solid, color=red];
m11_188 -> m11_190  [key=1, style=dashed, color=red, label=query];
m11_188 -> m11_193  [key=1, style=dashed, color=red, label=query];
m11_188 -> m11_188  [key=3, color=red, style=bold, label="Local variable string query"];
m11_189 -> m11_190  [key=0, style=solid];
m11_189 -> m11_141  [key=2, style=dotted];
m11_191 -> m11_185  [key=0, style=bold, color=blue];
m11_24 -> m11_25  [key=0, style=solid, color=red];
m11_24 -> m11_29  [key=1, style=dashed, color=red, label=string];
m11_25 -> m11_26  [key=0, style=solid, color=red];
m11_25 -> m11_27  [key=2, style=dotted, color=red];
m11_25 -> m11_28  [key=1, style=dashed, color=red, label="lambda expression"];
m11_26 -> m11_24  [key=0, style=bold, color=blue];
m11_242 -> m11_243  [key=0, style=solid];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_13  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m11_10 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_17  [key=2, style=dotted];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_18  [key=2, style=dotted];
m11_13 -> m11_19  [key=2, style=dotted];
m11_13 -> m11_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_15 -> m11_14  [key=0, style=solid];
m11_15 -> m11_20  [key=2, style=dotted];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_14  [key=0, style=solid];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_16  [key=0, style=solid];
m11_21 -> m11_22  [key=0, style=solid];
m11_16 -> m11_10  [key=0, style=bold, color=blue];
m11_22 -> m11_23  [key=0, style=solid];
m11_23 -> m11_21  [key=0, style=bold, color=blue];
m11_29 -> m11_30  [key=0, style=solid, color=red];
m11_29 -> m11_31  [key=2, style=dotted, color=red];
m11_29 -> m11_19  [key=2, style=dotted, color=red];
m11_28 -> m11_29  [key=0, style=solid, color=red];
m11_30 -> m11_28  [key=0, style=bold, color=blue];
m11_36 -> m11_37  [key=0, style=solid, color=red];
m11_36 -> m11_19  [key=2, style=dotted, color=red];
m11_35 -> m11_36  [key=0, style=solid, color=red];
m11_37 -> m11_35  [key=0, style=bold, color=blue];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_45  [key=2, style=dotted];
m11_43 -> m11_46  [key=2, style=dotted];
m11_43 -> m11_19  [key=2, style=dotted];
m11_42 -> m11_43  [key=0, style=solid];
m11_44 -> m11_42  [key=0, style=bold, color=blue];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_45  [key=2, style=dotted];
m11_52 -> m11_46  [key=2, style=dotted];
m11_52 -> m11_19  [key=2, style=dotted];
m11_51 -> m11_52  [key=0, style=solid];
m11_53 -> m11_51  [key=0, style=bold, color=blue];
m11_62 -> m11_63  [key=0, style=solid];
m11_62 -> m11_64  [key=2, style=dotted];
m11_61 -> m11_62  [key=0, style=solid];
m11_63 -> m11_61  [key=0, style=bold, color=blue];
m11_69 -> m11_70  [key=0, style=solid, color=red];
m11_69 -> m11_19  [key=2, style=dotted, color=red];
m11_68 -> m11_69  [key=0, style=solid, color=red];
m11_70 -> m11_68  [key=0, style=bold, color=blue];
m11_75 -> m11_76  [key=0, style=solid, color=red];
m11_75 -> m11_31  [key=2, style=dotted, color=red];
m11_75 -> m11_19  [key=2, style=dotted, color=red];
m11_74 -> m11_75  [key=0, style=solid, color=red];
m11_76 -> m11_74  [key=0, style=bold, color=blue];
m11_81 -> m11_82  [key=0, style=solid, color=red];
m11_81 -> m11_19  [key=2, style=dotted, color=red];
m11_80 -> m11_81  [key=0, style=solid, color=red];
m11_82 -> m11_80  [key=0, style=bold, color=blue];
m11_87 -> m11_88  [key=0, style=solid, color=red];
m11_87 -> m11_31  [key=2, style=dotted, color=red];
m11_87 -> m11_19  [key=2, style=dotted, color=red];
m11_86 -> m11_87  [key=0, style=solid, color=red];
m11_88 -> m11_86  [key=0, style=bold, color=blue];
m11_99 -> m11_100  [key=0, style=solid];
m11_99 -> m11_19  [key=2, style=dotted];
m11_98 -> m11_99  [key=0, style=solid];
m11_100 -> m11_98  [key=0, style=bold, color=blue];
m11_107 -> m11_108  [key=0, style=solid];
m11_107 -> m11_19  [key=2, style=dotted];
m11_106 -> m11_107  [key=0, style=solid];
m11_108 -> m11_106  [key=0, style=bold, color=blue];
m11_115 -> m11_116  [key=0, style=solid, color=red];
m11_115 -> m11_19  [key=2, style=dotted, color=red];
m11_114 -> m11_115  [key=0, style=solid, color=red];
m11_116 -> m11_114  [key=0, style=bold, color=blue];
m11_122 -> m11_123  [key=0, style=solid, color=red];
m11_122 -> m11_19  [key=2, style=dotted, color=red];
m11_121 -> m11_122  [key=0, style=solid, color=red];
m11_123 -> m11_121  [key=0, style=bold, color=blue];
m11_130 -> m11_131  [key=0, style=solid];
m11_130 -> m11_19  [key=2, style=dotted];
m11_129 -> m11_130  [key=0, style=solid];
m11_131 -> m11_129  [key=0, style=bold, color=blue];
m11_144 -> m11_145  [key=0, style=solid];
m11_144 -> m11_18  [key=2, style=dotted];
m11_144 -> m11_19  [key=2, style=dotted];
m11_144 -> m11_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_147 -> m11_148  [key=0, style=solid];
m11_147 -> m11_147  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, string>"];
m11_143 -> m11_144  [key=0, style=solid];
m11_145 -> m11_143  [key=0, style=bold, color=blue];
m11_146 -> m11_147  [key=0, style=solid];
m11_148 -> m11_146  [key=0, style=bold, color=blue];
m11_157 -> m11_158  [key=0, style=solid];
m11_157 -> m11_19  [key=2, style=dotted];
m11_156 -> m11_157  [key=0, style=solid];
m11_158 -> m11_156  [key=0, style=bold, color=blue];
m11_169 -> m11_170  [key=0, style=solid];
m11_169 -> m11_18  [key=2, style=dotted];
m11_169 -> m11_171  [key=2, style=dotted];
m11_169 -> m11_19  [key=2, style=dotted];
m11_169 -> m11_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_173 -> m11_174  [key=0, style=solid];
m11_168 -> m11_169  [key=0, style=solid];
m11_170 -> m11_168  [key=0, style=bold, color=blue];
m11_172 -> m11_173  [key=0, style=solid];
m11_174 -> m11_172  [key=0, style=bold, color=blue];
m11_183 -> m11_184  [key=0, style=solid];
m11_183 -> m11_19  [key=2, style=dotted];
m11_182 -> m11_183  [key=0, style=solid];
m11_184 -> m11_182  [key=0, style=bold, color=blue];
m11_193 -> m11_194  [key=0, style=solid];
m11_193 -> m11_31  [key=2, style=dotted];
m11_193 -> m11_19  [key=2, style=dotted];
m11_192 -> m11_193  [key=0, style=solid];
m11_194 -> m11_192  [key=0, style=bold, color=blue];
m11_203 -> m11_204  [key=0, style=solid];
m11_203 -> m11_31  [key=2, style=dotted];
m11_203 -> m11_19  [key=2, style=dotted];
m11_202 -> m11_203  [key=0, style=solid];
m11_204 -> m11_202  [key=0, style=bold, color=blue];
m11_213 -> m11_214  [key=0, style=solid];
m11_213 -> m11_31  [key=2, style=dotted];
m11_213 -> m11_19  [key=2, style=dotted];
m11_212 -> m11_213  [key=0, style=solid];
m11_214 -> m11_212  [key=0, style=bold, color=blue];
m11_223 -> m11_224  [key=0, style=solid];
m11_223 -> m11_19  [key=2, style=dotted];
m11_222 -> m11_223  [key=0, style=solid];
m11_224 -> m11_222  [key=0, style=bold, color=blue];
m11_233 -> m11_234  [key=0, style=solid];
m11_233 -> m11_19  [key=2, style=dotted];
m11_232 -> m11_233  [key=0, style=solid];
m11_234 -> m11_232  [key=0, style=bold, color=blue];
m11_243 -> m11_244  [key=0, style=solid];
m11_243 -> m11_19  [key=2, style=dotted];
m11_244 -> m11_242  [key=0, style=bold, color=blue];
m11_159 -> m11_160  [key=0, style=solid];
m11_159 -> m11_162  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m11_159 -> m11_166  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_159 -> m11_169  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_159 -> m11_173  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_160 -> m11_161  [key=0, style=solid];
m11_160 -> m11_162  [key=0, style=solid];
m11_162 -> m11_163  [key=0, style=solid];
m11_162 -> m11_164  [key=0, style=solid, color=red];
m11_166 -> m11_167  [key=0, style=solid];
m11_166 -> m11_142  [key=2, style=dotted];
m11_166 -> m11_168  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_161 -> m11_167  [key=0, style=solid];
m11_161 -> m11_5  [key=2, style=dotted];
m11_163 -> m11_167  [key=0, style=solid];
m11_163 -> m11_5  [key=2, style=dotted];
m11_164 -> m11_165  [key=0, style=solid, color=red];
m11_164 -> m11_166  [key=1, style=dashed, color=red, label=query];
m11_164 -> m11_169  [key=1, style=dashed, color=red, label=query];
m11_164 -> m11_164  [key=3, color=red, style=bold, label="Local variable string query"];
m11_165 -> m11_166  [key=0, style=solid];
m11_165 -> m11_97  [key=2, style=dotted];
m11_167 -> m11_159  [key=0, style=bold, color=blue];
m11_117 -> m11_118  [key=0, style=solid];
m11_117 -> m11_119  [key=1, style=dashed, color=red, label=string];
m11_117 -> m11_122  [key=1, style=dashed, color=red, label=string];
m11_118 -> m11_119  [key=0, style=solid, color=red];
m11_118 -> m11_113  [key=2, style=dotted];
m11_119 -> m11_120  [key=0, style=solid, color=red];
m11_119 -> m11_27  [key=2, style=dotted, color=red];
m11_119 -> m11_121  [key=1, style=dashed, color=red, label="lambda expression"];
m11_120 -> m11_117  [key=0, style=bold, color=blue];
m11_113 -> m11_248  [key=0, style=solid];
m11_248 -> m11_249  [key=0, style=solid];
m11_248 -> m11_250  [key=2, style=dotted];
m11_248 -> m11_251  [key=2, style=dotted];
m11_249 -> m11_113  [key=0, style=bold, color=blue];
m11_215 -> m11_216  [key=0, style=solid];
m11_215 -> m11_220  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_215 -> m11_223  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_216 -> m11_217  [key=0, style=solid];
m11_216 -> m11_218  [key=0, style=solid, color=red];
m11_220 -> m11_221  [key=0, style=solid];
m11_220 -> m11_27  [key=2, style=dotted];
m11_220 -> m11_222  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_217 -> m11_221  [key=0, style=solid];
m11_217 -> m11_5  [key=2, style=dotted];
m11_218 -> m11_219  [key=0, style=solid, color=red];
m11_218 -> m11_220  [key=1, style=dashed, color=red, label=query];
m11_218 -> m11_223  [key=1, style=dashed, color=red, label=query];
m11_218 -> m11_218  [key=3, color=red, style=bold, label="Local variable string query"];
m11_219 -> m11_220  [key=0, style=solid];
m11_219 -> m11_141  [key=2, style=dotted];
m11_221 -> m11_215  [key=0, style=bold, color=blue];
m11_109 -> m11_110  [key=0, style=solid];
m11_109 -> m11_111  [key=1, style=dashed, color=red, label=string];
m11_109 -> m11_115  [key=1, style=dashed, color=red, label=string];
m11_110 -> m11_111  [key=0, style=solid, color=red];
m11_110 -> m11_113  [key=2, style=dotted];
m11_111 -> m11_112  [key=0, style=solid, color=red];
m11_111 -> m11_27  [key=2, style=dotted, color=red];
m11_111 -> m11_114  [key=1, style=dashed, color=red, label="lambda expression"];
m11_112 -> m11_109  [key=0, style=bold, color=blue];
m11_124 -> m11_125  [key=0, style=solid, color=red];
m11_124 -> m11_127  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_124 -> m11_130  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_125 -> m11_126  [key=0, style=solid, color=red];
m11_125 -> m11_127  [key=1, style=dashed, color=red, label=trimSql];
m11_125 -> m11_130  [key=1, style=dashed, color=red, label=trimSql];
m11_125 -> m11_125  [key=3, color=red, style=bold, label="Local variable string trimSql"];
m11_127 -> m11_128  [key=0, style=solid];
m11_127 -> m11_27  [key=2, style=dotted];
m11_127 -> m11_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_126 -> m11_127  [key=0, style=solid];
m11_126 -> m11_113  [key=2, style=dotted];
m11_128 -> m11_124  [key=0, style=bold, color=blue];
m11_259 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_25  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_33  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_66  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_72  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_78  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_84  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_90  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_103  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_104  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_110  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_111  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_118  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_119  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_126  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_127  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_138  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_139  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_153  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_154  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_165  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_166  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_180  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_189  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_190  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_199  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_200  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_209  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_210  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_219  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_220  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_229  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_230  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_239  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_240  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_245  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_248  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_252  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_254  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_259 -> m11_256  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_260 -> m11_29  [key=1, style=dashed, color=red, label=string];
m11_261 -> m11_29  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m11_262 -> m11_36  [key=1, style=dashed, color=red, label=string];
m11_263 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_264 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m11_265 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label=addAndSetStateSql];
m11_266 -> m11_52  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_267 -> m11_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m11_268 -> m11_52  [key=1, style=dashed, color=darkseagreen4, label=addStateSql];
m11_269 -> m11_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_270 -> m11_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_271 -> m11_62  [key=1, style=dashed, color=darkseagreen4, label=persistentQueue];
m11_272 -> m11_69  [key=1, style=dashed, color=red, label=string];
m11_273 -> m11_75  [key=1, style=dashed, color=red, label=string];
m11_274 -> m11_75  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m11_275 -> m11_81  [key=1, style=dashed, color=red, label=string];
m11_276 -> m11_87  [key=1, style=dashed, color=red, label=string];
m11_277 -> m11_87  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m11_278 -> m11_99  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_279 -> m11_99  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_280 -> m11_99  [key=1, style=dashed, color=darkseagreen4, label=double];
m11_281 -> m11_99  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m11_282 -> m11_107  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_283 -> m11_107  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_284 -> m11_107  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_285 -> m11_115  [key=1, style=dashed, color=red, label=string];
m11_286 -> m11_115  [key=1, style=dashed, color=red, label=string];
m11_287 -> m11_122  [key=1, style=dashed, color=red, label=string];
m11_288 -> m11_122  [key=1, style=dashed, color=red, label=string];
m11_289 -> m11_130  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_290 -> m11_130  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_291 -> m11_130  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_292 -> m11_130  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m11_293 -> m11_144  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_293 -> m11_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_294 -> m11_144  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m11_295 -> m11_144  [key=1, style=dashed, color=darkseagreen4, label=sql];
m11_296 -> m11_157  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_297 -> m11_157  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_298 -> m11_169  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_298 -> m11_173  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_299 -> m11_169  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m11_300 -> m11_169  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_301 -> m11_183  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_302 -> m11_183  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_303 -> m11_193  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_304 -> m11_193  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m11_305 -> m11_193  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_306 -> m11_203  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_307 -> m11_203  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m11_308 -> m11_203  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_309 -> m11_213  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_310 -> m11_213  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m11_311 -> m11_213  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_312 -> m11_223  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_313 -> m11_223  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_314 -> m11_233  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_315 -> m11_233  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_316 -> m11_243  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_317 -> m11_243  [key=1, style=dashed, color=darkseagreen4, label=query];
}
