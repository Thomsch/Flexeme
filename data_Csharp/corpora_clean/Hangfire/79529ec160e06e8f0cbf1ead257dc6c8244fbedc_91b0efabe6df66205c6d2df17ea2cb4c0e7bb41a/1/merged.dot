digraph  {
n54 [label="Hangfire.Common.JobFilterProviderCollection", span=""];
n55 [label="Hangfire.Common.Job", span=""];
n0 [label="Entry Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection()", span="34-34", cluster="Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection()"];
n1 [label="Exit Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection()", span="34-34", cluster="Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection()"];
n2 [label="Entry Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])", span="38-38", cluster="Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])"];
n3 [label="Exit Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])", span="38-38", cluster="Hangfire.Common.JobFilterProviderCollection.JobFilterProviderCollection(params Hangfire.Common.IJobFilterProvider[])"];
n4 [label="Entry Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", span="48-48", cluster="Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)"];
n5 [label="IEnumerable<JobFilter> combinedFilters =\r\n                Items.SelectMany(fp => fp.GetFilters(job))\r\n                    .OrderBy(filter => filter, _filterComparer)", span="50-52", cluster="Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)"];
n13 [label="fp.GetFilters(job)", span="51-51", cluster="lambda expression"];
n6 [label="return RemoveDuplicates(combinedFilters.Reverse()).Reverse();", span="55-55", cluster="Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)"];
n8 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)"];
n9 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)"];
n12 [label="Entry lambda expression", span="51-51", cluster="lambda expression"];
n16 [label="Entry lambda expression", span="52-52", cluster="lambda expression"];
n7 [label="Exit Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)", span="48-48", cluster="Hangfire.Common.JobFilterProviderCollection.GetFilters(Hangfire.Common.Job)"];
n10 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()"];
n11 [label="Entry Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="58-58", cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)"];
n14 [label="Exit lambda expression", span="51-51", cluster="lambda expression"];
n15 [label="Entry Hangfire.Common.IJobFilterProvider.GetFilters(Hangfire.Common.Job)", span="32-32", cluster="Hangfire.Common.IJobFilterProvider.GetFilters(Hangfire.Common.Job)"];
n17 [label=filter, span="52-52", cluster="lambda expression"];
n18 [label="Exit lambda expression", span="52-52", cluster="lambda expression"];
n19 [label="var visitedTypes = new HashSet<Type>()", span="61-61", cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)"];
n24 [label="yield return filter;", span="70-70", cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)"];
n20 [label=filters, span="63-63", cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)"];
n27 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()"];
n23 [label="!visitedTypes.Contains(filterInstanceType) || AllowMultiple(filterInstance)", span="68-68", cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)"];
n25 [label="visitedTypes.Add(filterInstanceType)", span="71-71", cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)"];
n21 [label="var filterInstance = filter.Instance", span="65-65", cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)"];
n26 [label="Exit Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="58-58", cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)"];
n22 [label="var filterInstanceType = filterInstance.GetType()", span="66-66", cluster="Hangfire.Common.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)"];
n28 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
n29 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)"];
n30 [label="Entry Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", span="76-76", cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)"];
n31 [label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Add(T)"];
n32 [label="var mvcFilter = filterInstance as IJobFilter", span="78-78", cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)"];
n33 [label="mvcFilter == null", span="79-79", cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)"];
n35 [label="return mvcFilter.AllowMultiple;", span="84-84", cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)"];
n34 [label="return true;", span="81-81", cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)"];
n36 [label="Exit Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)", span="76-76", cluster="Hangfire.Common.JobFilterProviderCollection.AllowMultiple(object)"];
n37 [label="Entry Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", span="89-89", cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)"];
n38 [label="x == null && y == null", span="92-92", cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)"];
n40 [label="x == null", span="96-96", cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)"];
n42 [label="y == null", span="100-100", cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)"];
n44 [label="x.Order < y.Order", span="107-107", cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)"];
n46 [label="x.Order > y.Order", span="111-111", cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)"];
n48 [label="x.Scope < y.Scope", span="118-118", cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)"];
n50 [label="x.Scope > y.Scope", span="122-122", cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)"];
n39 [label="return 0;", span="94-94", cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)"];
n41 [label="return -1;", span="98-98", cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)"];
n43 [label="return 1;", span="102-102", cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)"];
n45 [label="return -1;", span="109-109", cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)"];
n47 [label="return 1;", span="113-113", cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)"];
n49 [label="return -1;", span="120-120", cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)"];
n51 [label="return 1;", span="124-124", cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)"];
n52 [label="return 0;", span="127-127", cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)"];
n53 [label="Exit Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)", span="89-89", cluster="Hangfire.Common.JobFilterProviderCollection.FilterComparer.Compare(Hangfire.Common.JobFilter, Hangfire.Common.JobFilter)"];
d2 [label="InvisibilityTimeout = TimeSpan.FromMinutes(5)", span="27-27", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0];
d7 [label="HangFire.SqlServer.SqlServerStorageOptions", span=""];
d1 [label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="26-26", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()"];
d3 [label="PrepareSchemaIfNecessary = true", span="29-29", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()"];
d6 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)"];
d0 [label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()"];
d5 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)"];
d4 [label="Exit HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()"];
m0_10 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="WorkerManagerFacts.cs"];
m0_34 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="WorkerManagerFacts.cs"];
m0_47 [label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", span="70-70", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", file="WorkerManagerFacts.cs"];
m0_48 [label="_manager.Object.Execute(new CancellationToken(true))", span="72-72", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", file="WorkerManagerFacts.cs"];
m0_49 [label="_workerRunners[0].Verify(x => x.Start())", span="74-74", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", file="WorkerManagerFacts.cs"];
m0_50 [label="_workerRunners[1].Verify(x => x.Start())", span="75-75", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", file="WorkerManagerFacts.cs"];
m0_51 [label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", span="70-70", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStartMethodOnAllWorkers()", file="WorkerManagerFacts.cs"];
m0_70 [label="Entry Unk.Stop", span="", cluster="Unk.Stop", file="WorkerManagerFacts.cs"];
m0_74 [label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", span="88-88", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs"];
m0_75 [label="_manager.Object.Dispose()", span="90-90", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", color=red, community=0, file="WorkerManagerFacts.cs"];
m0_76 [label="_workerRunners[0].Verify(x => x.Dispose())", span="92-92", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs"];
m0_77 [label="_workerRunners[1].Verify(x => x.Dispose())", span="93-93", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs"];
m0_78 [label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", span="88-88", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs"];
m0_11 [label="Entry Mock<IServerComponentRunner>.cstr", span="", cluster="Mock<IServerComponentRunner>.cstr", file="WorkerManagerFacts.cs"];
m0_12 [label="Entry Mock<WorkerManager>.cstr", span="", cluster="Mock<WorkerManager>.cstr", file="WorkerManagerFacts.cs"];
m0_0 [label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", span="18-18", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="WorkerManagerFacts.cs"];
m0_1 [label="_sharedContext = new SharedWorkerContext(\r\n                ''server'',\r\n                new[] { ''default'' },\r\n                new Mock<JobStorage>().Object,\r\n                new Mock<IJobPerformanceProcess>().Object,\r\n                new Mock<JobActivator>().Object,\r\n                new Mock<IStateMachineFactory>().Object)", span="20-26", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="WorkerManagerFacts.cs"];
m0_2 [label="_workerRunners = new[]\r\n            {\r\n                new Mock<IServerComponentRunner>(), \r\n                new Mock<IServerComponentRunner>()\r\n            }", span="28-32", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="WorkerManagerFacts.cs"];
m0_3 [label="_manager = new Mock<WorkerManager>(\r\n                _sharedContext, WorkerCount)", span="34-35", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="WorkerManagerFacts.cs"];
m0_4 [label="_manager.Setup(x => x.CreateWorkerRunner(It.IsNotNull<WorkerContext>()))\r\n                .Returns((WorkerContext context) => _workerRunners[context.WorkerNumber - 1].Object)", span="37-38", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="WorkerManagerFacts.cs"];
m0_5 [label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", span="18-18", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="WorkerManagerFacts.cs"];
m0_18 [label="Entry Unk.>", span="", cluster="Unk.>", file="WorkerManagerFacts.cs"];
m0_23 [label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", span="42-42", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", file="WorkerManagerFacts.cs"];
m0_24 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new WorkerManager(null, WorkerCount))", span="44-45", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", file="WorkerManagerFacts.cs"];
m0_25 [label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", span="42-42", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", file="WorkerManagerFacts.cs"];
m0_30 [label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", span="49-49", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="WorkerManagerFacts.cs"];
m0_31 [label="var exception = Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => new WorkerManager(\r\n                    _sharedContext, 0))", span="51-53", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="WorkerManagerFacts.cs"];
m0_32 [label="Assert.Equal(''workerCount'', exception.ParamName)", span="55-55", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="WorkerManagerFacts.cs"];
m0_33 [label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", span="49-49", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="WorkerManagerFacts.cs"];
m0_46 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="WorkerManagerFacts.cs"];
m0_44 [label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", span="27-27", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", file="WorkerManagerFacts.cs"];
m0_13 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="WorkerManagerFacts.cs"];
m0_79 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="WorkerManagerFacts.cs"];
m0_45 [label="Entry HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", span="62-62", cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="WorkerManagerFacts.cs"];
m0_8 [label="Entry Mock<IJobPerformanceProcess>.cstr", span="", cluster="Mock<IJobPerformanceProcess>.cstr", file="WorkerManagerFacts.cs"];
m0_83 [label="Entry lambda expression", span="93-93", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_15 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_20 [label="Entry lambda expression", span="38-38", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_16 [label="x.CreateWorkerRunner(It.IsNotNull<WorkerContext>())", span="37-37", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_17 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_21 [label="_workerRunners[context.WorkerNumber - 1].Object", span="38-38", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_22 [label="Exit lambda expression", span="38-38", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_26 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_27 [label="new WorkerManager(null, WorkerCount)", span="45-45", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_28 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_35 [label="Entry lambda expression", span="52-53", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_36 [label="new WorkerManager(\r\n                    _sharedContext, 0)", span="52-53", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_37 [label="Exit lambda expression", span="52-53", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_55 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_59 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_56 [label="x.Start()", span="74-74", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_57 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_60 [label="x.Start()", span="75-75", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_61 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_67 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_71 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_68 [label="x.Stop()", span="83-83", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_69 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_72 [label="x.Stop()", span="84-84", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_73 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_80 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_81 [label="x.Dispose()", span="92-92", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_82 [label="Exit lambda expression", span="92-92", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_84 [label="x.Dispose()", span="93-93", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_85 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="WorkerManagerFacts.cs"];
m0_52 [label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="WorkerManagerFacts.cs"];
m0_58 [label="Entry Unk.Start", span="", cluster="Unk.Start", file="WorkerManagerFacts.cs"];
m0_9 [label="Entry Mock<JobActivator>.cstr", span="", cluster="Mock<JobActivator>.cstr", file="WorkerManagerFacts.cs"];
m0_19 [label="Entry Unk.CreateWorkerRunner", span="", cluster="Unk.CreateWorkerRunner", file="WorkerManagerFacts.cs"];
m0_62 [label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", span="79-79", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", file="WorkerManagerFacts.cs"];
m0_63 [label="_manager.Object.Execute(new CancellationToken(true))", span="81-81", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", file="WorkerManagerFacts.cs"];
m0_64 [label="_workerRunners[0].Verify(x => x.Stop())", span="83-83", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", file="WorkerManagerFacts.cs"];
m0_65 [label="_workerRunners[1].Verify(x => x.Stop())", span="84-84", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", file="WorkerManagerFacts.cs"];
m0_66 [label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", span="79-79", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Execute_CallsStopMethodOnAllWorkers()", file="WorkerManagerFacts.cs"];
m0_53 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="WorkerManagerFacts.cs"];
m0_6 [label="Entry SharedWorkerContext.cstr", span="", cluster="SharedWorkerContext.cstr", file="WorkerManagerFacts.cs"];
m0_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="WorkerManagerFacts.cs"];
m0_29 [label="Entry HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="30-30", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManagerFacts.cs"];
m0_54 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="WorkerManagerFacts.cs"];
m0_7 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="WorkerManagerFacts.cs"];
m0_38 [label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", span="59-59", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="WorkerManagerFacts.cs"];
m0_39 [label="var manager = new WorkerManager(_sharedContext, WorkerCount)", span="61-61", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="WorkerManagerFacts.cs"];
m0_40 [label="var context = new WorkerContext(_sharedContext, 1)", span="62-62", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="WorkerManagerFacts.cs"];
m0_41 [label="var worker = manager.CreateWorkerRunner(context)", span="64-64", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="WorkerManagerFacts.cs"];
m0_42 [label="Assert.NotNull(worker)", span="66-66", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="WorkerManagerFacts.cs"];
m0_43 [label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", span="59-59", cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="WorkerManagerFacts.cs"];
m0_86 [label="HangFire.Core.Tests.Server.WorkerManagerFacts", span="", file="WorkerManagerFacts.cs"];
n54 -> n5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.JobFilterProviderCollection"];
n55 -> n13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
n2 -> n3  [key=0, style=solid];
n3 -> n2  [key=0, style=bold, color=blue];
n4 -> n5  [key=0, style=solid];
n4 -> n13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
n5 -> n6  [key=0, style=solid];
n5 -> n8  [key=2, style=dotted];
n5 -> n9  [key=2, style=dotted];
n5 -> n12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n5 -> n16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n6 -> n10  [key=2, style=dotted];
n6 -> n11  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n7 -> n4  [key=0, style=bold, color=blue];
n11 -> n19  [key=0, style=solid];
n11 -> n24  [key=0, style=bold, color=crimson];
n11 -> n20  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>"];
n14 -> n12  [key=0, style=bold, color=blue];
n17 -> n18  [key=0, style=solid];
n18 -> n16  [key=0, style=bold, color=blue];
n19 -> n20  [key=0, style=solid];
n19 -> n27  [key=2, style=dotted];
n19 -> n23  [key=1, style=dashed, color=darkseagreen4, label=visitedTypes];
n19 -> n25  [key=1, style=dashed, color=darkseagreen4, label=visitedTypes];
n24 -> n25  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n20 -> n26  [key=0, style=solid];
n20 -> n24  [key=1, style=dashed, color=darkseagreen4, label=filter];
n23 -> n24  [key=0, style=solid];
n23 -> n20  [key=0, style=solid];
n23 -> n29  [key=2, style=dotted];
n23 -> n30  [key=2, style=dotted];
n25 -> n20  [key=0, style=solid];
n25 -> n31  [key=2, style=dotted];
n21 -> n22  [key=0, style=solid];
n21 -> n23  [key=1, style=dashed, color=darkseagreen4, label=filterInstance];
n26 -> n11  [key=0, style=bold, color=blue];
n22 -> n23  [key=0, style=solid];
n22 -> n28  [key=2, style=dotted];
n22 -> n25  [key=1, style=dashed, color=darkseagreen4, label=filterInstanceType];
n30 -> n32  [key=0, style=solid];
n30 -> n21  [key=3, color=darkorchid, style=bold, label="Parameter variable object filterInstance"];
n30 -> n34  [key=3, color=darkorchid, style=bold, label="method methodReturn bool AllowMultiple"];
n32 -> n33  [key=0, style=solid];
n32 -> n35  [key=1, style=dashed, color=darkseagreen4, label=mvcFilter];
n33 -> n34  [key=0, style=solid];
n33 -> n35  [key=0, style=solid];
n35 -> n36  [key=0, style=solid];
n34 -> n36  [key=0, style=solid];
n36 -> n30  [key=0, style=bold, color=blue];
n37 -> n38  [key=0, style=solid];
n37 -> n40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.JobFilter"];
n37 -> n42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.JobFilter"];
n37 -> n44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.JobFilter"];
n37 -> n46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.JobFilter"];
n37 -> n48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.JobFilter"];
n37 -> n50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.JobFilter"];
n37 -> n39  [key=3, color=darkorchid, style=bold, label="method methodReturn int Compare"];
n37 -> n41  [key=3, color=darkorchid, style=bold, label="method methodReturn int Compare"];
n37 -> n43  [key=3, color=darkorchid, style=bold, label="method methodReturn int Compare"];
n38 -> n39  [key=0, style=solid];
n38 -> n40  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n40 -> n42  [key=0, style=solid];
n42 -> n43  [key=0, style=solid];
n42 -> n44  [key=0, style=solid];
n44 -> n45  [key=0, style=solid];
n44 -> n46  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n46 -> n48  [key=0, style=solid];
n48 -> n49  [key=0, style=solid];
n48 -> n50  [key=0, style=solid];
n50 -> n51  [key=0, style=solid];
n50 -> n52  [key=0, style=solid];
n39 -> n53  [key=0, style=solid];
n41 -> n53  [key=0, style=solid];
n43 -> n53  [key=0, style=solid];
n45 -> n53  [key=0, style=solid];
n47 -> n53  [key=0, style=solid];
n49 -> n53  [key=0, style=solid];
n51 -> n53  [key=0, style=solid];
n52 -> n53  [key=0, style=solid];
n53 -> n37  [key=0, style=bold, color=blue];
d2 -> d3  [key=0, style=solid, color=green];
d2 -> d6  [key=2, style=dotted, color=green];
d7 -> d2  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerStorageOptions"];
d7 -> d1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorageOptions"];
d7 -> d3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorageOptions"];
d1 -> d2  [key=0, style=solid, color=green];
d1 -> d5  [key=2, style=dotted];
d3 -> d4  [key=0, style=solid];
d0 -> d1  [key=0, style=solid];
d4 -> d0  [key=0, style=bold, color=blue];
m0_47 -> m0_48  [key=0, style=solid];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_52  [key=2, style=dotted];
m0_48 -> m0_53  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_54  [key=2, style=dotted];
m0_49 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_54  [key=2, style=dotted];
m0_50 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_51 -> m0_47  [key=0, style=bold, color=blue];
m0_74 -> m0_75  [key=0, style=solid, color=red];
m0_75 -> m0_76  [key=0, style=solid, color=red];
m0_75 -> m0_79  [key=2, style=dotted, color=red];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_54  [key=2, style=dotted];
m0_76 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_54  [key=2, style=dotted];
m0_77 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_78 -> m0_74  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_6  [key=2, style=dotted];
m0_1 -> m0_7  [key=2, style=dotted];
m0_1 -> m0_8  [key=2, style=dotted];
m0_1 -> m0_9  [key=2, style=dotted];
m0_1 -> m0_10  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_11  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_12  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_13  [key=2, style=dotted];
m0_4 -> m0_14  [key=2, style=dotted];
m0_4 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_4 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_5 -> m0_0  [key=0, style=bold, color=blue];
m0_23 -> m0_24  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_18  [key=2, style=dotted];
m0_24 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_25 -> m0_23  [key=0, style=bold, color=blue];
m0_30 -> m0_31  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_18  [key=2, style=dotted];
m0_31 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_34  [key=2, style=dotted];
m0_33 -> m0_30  [key=0, style=bold, color=blue];
m0_83 -> m0_84  [key=0, style=solid];
m0_15 -> m0_16  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_18  [key=2, style=dotted];
m0_16 -> m0_19  [key=2, style=dotted];
m0_17 -> m0_15  [key=0, style=bold, color=blue];
m0_21 -> m0_22  [key=0, style=solid];
m0_22 -> m0_20  [key=0, style=bold, color=blue];
m0_26 -> m0_27  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_29  [key=2, style=dotted];
m0_28 -> m0_26  [key=0, style=bold, color=blue];
m0_35 -> m0_36  [key=0, style=solid];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_29  [key=2, style=dotted];
m0_37 -> m0_35  [key=0, style=bold, color=blue];
m0_55 -> m0_56  [key=0, style=solid];
m0_59 -> m0_60  [key=0, style=solid];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_58  [key=2, style=dotted];
m0_57 -> m0_55  [key=0, style=bold, color=blue];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_58  [key=2, style=dotted];
m0_61 -> m0_59  [key=0, style=bold, color=blue];
m0_67 -> m0_68  [key=0, style=solid];
m0_71 -> m0_72  [key=0, style=solid];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_70  [key=2, style=dotted];
m0_69 -> m0_67  [key=0, style=bold, color=blue];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_70  [key=2, style=dotted];
m0_73 -> m0_71  [key=0, style=bold, color=blue];
m0_80 -> m0_81  [key=0, style=solid];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_79  [key=2, style=dotted];
m0_82 -> m0_80  [key=0, style=bold, color=blue];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_79  [key=2, style=dotted];
m0_85 -> m0_83  [key=0, style=bold, color=blue];
m0_62 -> m0_63  [key=0, style=solid];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_52  [key=2, style=dotted];
m0_63 -> m0_53  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_54  [key=2, style=dotted];
m0_64 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_54  [key=2, style=dotted];
m0_65 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_66 -> m0_62  [key=0, style=bold, color=blue];
m0_38 -> m0_39  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_29  [key=2, style=dotted];
m0_39 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=manager];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_44  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_45  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_46  [key=2, style=dotted];
m0_43 -> m0_38  [key=0, style=bold, color=blue];
m0_86 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m0_86 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m0_86 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m0_86 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m0_86 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m0_86 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m0_86 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m0_86 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m0_86 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m0_86 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m0_86 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m0_86 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m0_86 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m0_86 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m0_86 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m0_86 -> m0_75  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m0_86 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
m0_86 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerManagerFacts"];
}
