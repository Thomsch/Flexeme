digraph  {
n0 [cluster="HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)", label="Entry HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)", span="32-32"];
n1 [cluster="HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)", label="var queue = GetQueue(data)", span="34-34"];
n2 [cluster="HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''EnqueuedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''Queue'', queue }\r\n                };", span="36-40"];
n4 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="Entry HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", span="43-43"];
n3 [cluster="HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)", label="Exit HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)", span="32-32"];
n5 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n6 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
n7 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="method == null", span="45-45"];
n10 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="!method.OldFormat", span="49-49"];
n11 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="attribute = method.Method\r\n                    .GetCustomAttributes(true)\r\n                    .OfType<QueueAttribute>()\r\n                    .FirstOrDefault()", span="51-54"];
n13 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="attribute = method.Type\r\n                    .GetCustomAttributes(true)\r\n                    .OfType<QueueAttribute>()\r\n                    .FirstOrDefault()", span="59-62"];
n8 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="throw new ArgumentNullException(''method'');", span="45-45"];
n9 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="QueueAttribute attribute = null", span="47-47"];
n12 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="attribute == null", span="57-57"];
n14 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="var queueName = attribute != null\r\n                ? !String.IsNullOrEmpty(attribute.Name) ? attribute.Name : DefaultQueue\r\n                : DefaultQueue", span="65-67"];
n19 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
n20 [cluster="System.Collections.IEnumerable.OfType<TResult>()", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
n21 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
n15 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="ValidateQueueName(queueName)", span="68-68"];
n22 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n16 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="return queueName;", span="70-70"];
n23 [cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", label="Entry HangFire.States.EnqueuedState.ValidateQueueName(string)", span="73-73"];
n17 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", label="Exit HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", span="43-43"];
n18 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n24 [cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", label="String.IsNullOrWhiteSpace(queue)", span="75-75"];
n26 [cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", label="!Regex.IsMatch(queue, @''^[a-z0-9_]+$'')", span="80-80"];
n27 [cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", label="throw new InvalidOperationException(String.Format(\r\n                    ''The queue name must consist of lowercase letters, digits and underscore characters only. Given: '{0}''', queue));", span="82-83"];
n25 [cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", label="throw new ArgumentNullException(''queue'');", span="77-77"];
n29 [cluster="string.IsNullOrWhiteSpace(string)", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
n28 [cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", label="Exit HangFire.States.EnqueuedState.ValidateQueueName(string)", span="73-73"];
n30 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0"];
n31 [cluster="System.InvalidOperationException.InvalidOperationException(string)", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
n32 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
n33 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", label="Entry HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="89-89"];
n34 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", label="var queue = GetQueue(context.JobMethod)", span="92-92"];
n36 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", label="Exit HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="89-89"];
n37 [cluster="HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)", label="Entry HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)", span="4-4"];
n38 [cluster="HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", label="Entry HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", span="106-106"];
n39 [cluster="HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", label="method == null", span="108-108"];
n41 [cluster="HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", label="return EnqueuedState.GetQueue(method);", span="109-109"];
n40 [cluster="HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", label="return null;", span="108-108"];
n42 [cluster="HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", label="Exit HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", span="106-106"];
m0_5 [cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="FailedStateHandler.cs", label="Entry HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18"];
m0_7 [cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="FailedStateHandler.cs", label="Exit HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18"];
m0_8 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", file="FailedStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", span="6-6"];
m0_0 [cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="FailedStateHandler.cs", label="Entry HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="10-10"];
m0_2 [cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="FailedStateHandler.cs", label="Exit HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="10-10"];
m0_3 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="FailedStateHandler.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35"];
m0_4 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", file="FailedStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", span="5-5"];
m2_0 [cluster="HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", file="IPersistentSet.cs", label="Entry HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", span="4-4"];
m2_1 [cluster="HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", file="IPersistentSet.cs", label="Exit HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", span="4-4"];
m3_2 [cluster="HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="9-9"];
m3_3 [cluster="HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="9-9"];
m3_6 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17"];
m3_7 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17"];
m3_0 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
m3_1 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
m3_12 [cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.Heartbeat(string)", span="25-25"];
m3_13 [cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.Heartbeat(string)", span="25-25"];
m3_8 [cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="23-23"];
m3_9 [cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="23-23"];
m3_4 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11"];
m3_5 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11"];
m3_10 [cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.RemoveServer(string)", span="24-24"];
m3_11 [cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.RemoveServer(string)", span="24-24"];
m3_14 [cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="26-26"];
m3_15 [cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="26-26"];
m4_100 [cluster="Mock<T>.cstr", file="IWriteOnlyPersistentCounter.cs", label="Entry Mock<T>.cstr", span=""];
m4_8 [cluster="System.Collections.Generic.List<T>.List()", file="IWriteOnlyPersistentCounter.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_17 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="IWriteOnlyPersistentCounter.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="29-29"];
m4_18 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="IWriteOnlyPersistentCounter.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundProcessServer(null, _processes, _properties))", span="31-32"];
m4_19 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="IWriteOnlyPersistentCounter.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="34-34"];
m4_20 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="IWriteOnlyPersistentCounter.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="29-29"];
m4_48 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateServer()", file="IWriteOnlyPersistentCounter.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateServer()", span="84-84"];
m4_94 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateServer()", file="IWriteOnlyPersistentCounter.cs", label="return new BackgroundProcessServer(_storage.Object, _processes, _properties);", span="86-86"];
m4_95 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateServer()", file="IWriteOnlyPersistentCounter.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateServer()", span="84-84"];
m4_22 [cluster="Unk.Equal", file="IWriteOnlyPersistentCounter.cs", label="Entry Unk.Equal", span=""];
m4_10 [cluster="Mock<IStorageConnection>.cstr", file="IWriteOnlyPersistentCounter.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m4_0 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", file="IWriteOnlyPersistentCounter.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", span="18-18"];
m4_1 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", file="IWriteOnlyPersistentCounter.cs", label="_storage = new Mock<JobStorage>()", span="20-20"];
m4_2 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", file="IWriteOnlyPersistentCounter.cs", label="_processes = new List<IServerProcess>()", span="21-21"];
m4_3 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", file="IWriteOnlyPersistentCounter.cs", label="_properties = new Dictionary<string, object> { { ''Queues'', _queues } }", span="22-22"];
m4_4 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", file="IWriteOnlyPersistentCounter.cs", label="_connection = new Mock<IStorageConnection>()", span="24-24"];
m4_5 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", file="IWriteOnlyPersistentCounter.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="25-25"];
m4_6 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", file="IWriteOnlyPersistentCounter.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", span="18-18"];
m4_49 [cluster="System.Threading.Thread.Sleep(int)", file="IWriteOnlyPersistentCounter.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m4_21 [cluster="Unk.>", file="IWriteOnlyPersistentCounter.cs", label="Entry Unk.>", span=""];
m4_34 [cluster="BackgroundProcessServer.cstr", file="IWriteOnlyPersistentCounter.cs", label="Entry BackgroundProcessServer.cstr", span=""];
m4_72 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateProcessMock<T>()", file="IWriteOnlyPersistentCounter.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateProcessMock<T>()", span="89-89"];
m4_96 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateProcessMock<T>()", file="IWriteOnlyPersistentCounter.cs", label="var mock = new Mock<T>()", span="92-92"];
m4_97 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateProcessMock<T>()", file="IWriteOnlyPersistentCounter.cs", label="_processes.Add(mock.Object)", span="93-93"];
m4_98 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateProcessMock<T>()", file="IWriteOnlyPersistentCounter.cs", label="return mock;", span="95-95"];
m4_99 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateProcessMock<T>()", file="IWriteOnlyPersistentCounter.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateProcessMock<T>()", span="89-89"];
m4_62 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="IWriteOnlyPersistentCounter.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", span="68-68"];
m4_63 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="IWriteOnlyPersistentCounter.cs", label="var component1 = CreateProcessMock<IServerComponent>()", span="71-71"];
m4_64 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="IWriteOnlyPersistentCounter.cs", label="component1.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Callback(() => Thread.Sleep(10))", span="72-72"];
m4_69 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="IWriteOnlyPersistentCounter.cs", label="component1.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.AtLeast(5))", span="80-80"];
m4_65 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="IWriteOnlyPersistentCounter.cs", label="var component2 = CreateProcessMock<IBackgroundProcess>()", span="73-73"];
m4_66 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="IWriteOnlyPersistentCounter.cs", label="component2.Setup(x => x.Execute(It.IsAny<BackgroundProcessContext>())).Callback(() => Thread.Sleep(10))", span="74-74"];
m4_70 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="IWriteOnlyPersistentCounter.cs", label="component2.Verify(x => x.Execute(It.IsNotNull<BackgroundProcessContext>()), Times.AtLeast(5))", span="81-81"];
m4_67 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="IWriteOnlyPersistentCounter.cs", label="CreateServer()", span="77-77"];
m4_68 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="IWriteOnlyPersistentCounter.cs", label="Thread.Sleep(100)", span="77-77"];
m4_71 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="IWriteOnlyPersistentCounter.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", span="68-68"];
m4_16 [cluster="Unk.GetConnection", file="IWriteOnlyPersistentCounter.cs", label="Entry Unk.GetConnection", span=""];
m4_35 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", file="IWriteOnlyPersistentCounter.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", span="47-47"];
m4_36 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", file="IWriteOnlyPersistentCounter.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundProcessServer(_storage.Object, _processes, null))", span="49-50"];
m4_37 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", file="IWriteOnlyPersistentCounter.cs", label="Assert.Equal(''properties'', exception.ParamName)", span="52-52"];
m4_38 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", file="IWriteOnlyPersistentCounter.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", span="47-47"];
m4_101 [cluster="Unk.Add", file="IWriteOnlyPersistentCounter.cs", label="Entry Unk.Add", span=""];
m4_11 [cluster="Unk.Setup", file="IWriteOnlyPersistentCounter.cs", label="Entry Unk.Setup", span=""];
m4_54 [cluster="Unk.AnnounceServer", file="IWriteOnlyPersistentCounter.cs", label="Entry Unk.AnnounceServer", span=""];
m4_91 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Entry lambda expression", span="81-81"];
m4_13 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Entry lambda expression", span="25-25"];
m4_14 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="x.GetConnection()", span="25-25"];
m4_15 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Exit lambda expression", span="25-25"];
m4_23 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Entry lambda expression", span="32-32"];
m4_24 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="new BackgroundProcessServer(null, _processes, _properties)", span="32-32"];
m4_25 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Exit lambda expression", span="32-32"];
m4_31 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Entry lambda expression", span="41-41"];
m4_32 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="new BackgroundProcessServer(_storage.Object, null, _properties)", span="41-41"];
m4_33 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Exit lambda expression", span="41-41"];
m4_39 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Entry lambda expression", span="50-50"];
m4_40 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="new BackgroundProcessServer(_storage.Object, _processes, null)", span="50-50"];
m4_41 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Exit lambda expression", span="50-50"];
m4_51 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Entry lambda expression", span="60-62"];
m4_58 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Entry lambda expression", span="64-64"];
m4_52 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="x.AnnounceServer(\r\n                It.IsNotNull<string>(),\r\n                It.Is<ServerContext>(y => y.Queues == _queues))", span="60-62"];
m4_53 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Exit lambda expression", span="60-62"];
m4_55 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Entry lambda expression", span="62-62"];
m4_56 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="y.Queues == _queues", span="62-62"];
m4_57 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Exit lambda expression", span="62-62"];
m4_59 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="x.RemoveServer(It.IsNotNull<string>())", span="64-64"];
m4_60 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Exit lambda expression", span="64-64"];
m4_75 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Entry lambda expression", span="72-72"];
m4_79 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Entry lambda expression", span="72-72"];
m4_82 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Entry lambda expression", span="74-74"];
m4_85 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Entry lambda expression", span="74-74"];
m4_88 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Entry lambda expression", span="80-80"];
m4_76 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="72-72"];
m4_77 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Exit lambda expression", span="72-72"];
m4_80 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Thread.Sleep(10)", span="72-72"];
m4_81 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Exit lambda expression", span="72-72"];
m4_83 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="x.Execute(It.IsAny<BackgroundProcessContext>())", span="74-74"];
m4_84 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Exit lambda expression", span="74-74"];
m4_86 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Thread.Sleep(10)", span="74-74"];
m4_87 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Exit lambda expression", span="74-74"];
m4_89 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="80-80"];
m4_90 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Exit lambda expression", span="80-80"];
m4_92 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="x.Execute(It.IsNotNull<BackgroundProcessContext>())", span="81-81"];
m4_93 [cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs", label="Exit lambda expression", span="81-81"];
m4_50 [cluster="Unk.Verify", file="IWriteOnlyPersistentCounter.cs", label="Entry Unk.Verify", span=""];
m4_74 [cluster="Unk.AtLeast", file="IWriteOnlyPersistentCounter.cs", label="Entry Unk.AtLeast", span=""];
m4_61 [cluster="Unk.RemoveServer", file="IWriteOnlyPersistentCounter.cs", label="Entry Unk.RemoveServer", span=""];
m4_78 [cluster="Unk.Execute", file="IWriteOnlyPersistentCounter.cs", label="Entry Unk.Execute", span=""];
m4_73 [cluster="Unk.Callback", file="IWriteOnlyPersistentCounter.cs", label="Entry Unk.Callback", span=""];
m4_12 [cluster="Unk.Returns", file="IWriteOnlyPersistentCounter.cs", label="Entry Unk.Returns", span=""];
m4_42 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", file="IWriteOnlyPersistentCounter.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", span="56-56"];
m4_43 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", file="IWriteOnlyPersistentCounter.cs", label="CreateServer()", span="58-58"];
m4_44 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", file="IWriteOnlyPersistentCounter.cs", label="Thread.Sleep(50)", span="58-58"];
m4_45 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", file="IWriteOnlyPersistentCounter.cs", label="_connection.Verify(x => x.AnnounceServer(\r\n                It.IsNotNull<string>(),\r\n                It.Is<ServerContext>(y => y.Queues == _queues)))", span="60-62"];
m4_46 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", file="IWriteOnlyPersistentCounter.cs", label="_connection.Verify(x => x.RemoveServer(It.IsNotNull<string>()))", span="64-64"];
m4_47 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", file="IWriteOnlyPersistentCounter.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", span="56-56"];
m4_27 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenProcessesArgumentIsNull()", file="IWriteOnlyPersistentCounter.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenProcessesArgumentIsNull()", span="38-38"];
m4_28 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenProcessesArgumentIsNull()", file="IWriteOnlyPersistentCounter.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundProcessServer(_storage.Object, null, _properties))", span="40-41"];
m4_29 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenProcessesArgumentIsNull()", file="IWriteOnlyPersistentCounter.cs", label="Assert.Equal(''processes'', exception.ParamName)", span="43-43"];
m4_30 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenProcessesArgumentIsNull()", file="IWriteOnlyPersistentCounter.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenProcessesArgumentIsNull()", span="38-38"];
m4_7 [cluster="Mock<JobStorage>.cstr", file="IWriteOnlyPersistentCounter.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m4_26 [cluster="Hangfire.Server.BackgroundProcessServer.BackgroundProcessServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerProcess>, System.Collections.Generic.IDictionary<string, object>)", file="IWriteOnlyPersistentCounter.cs", label="Entry Hangfire.Server.BackgroundProcessServer.BackgroundProcessServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerProcess>, System.Collections.Generic.IDictionary<string, object>)", span="38-38"];
m4_102 [file="IWriteOnlyPersistentCounter.cs", label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", span=""];
m5_0 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", file="IWriteOnlyPersistentJob.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", span="7-7"];
m5_1 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", file="IWriteOnlyPersistentJob.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", span="7-7"];
m5_2 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", file="IWriteOnlyPersistentJob.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", span="8-8"];
m5_3 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", file="IWriteOnlyPersistentJob.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", span="8-8"];
m5_6 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="IWriteOnlyPersistentJob.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="12-12"];
m5_7 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="IWriteOnlyPersistentJob.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="12-12"];
m5_4 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="IWriteOnlyPersistentJob.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="10-10"];
m5_5 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="IWriteOnlyPersistentJob.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="10-10"];
m6_0 [cluster="HangFire.Storage.IWriteOnlyPersistentList.AddToLeft(string, string)", file="IWriteOnlyPersistentList.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentList.AddToLeft(string, string)", span="4-4"];
m6_1 [cluster="HangFire.Storage.IWriteOnlyPersistentList.AddToLeft(string, string)", file="IWriteOnlyPersistentList.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentList.AddToLeft(string, string)", span="4-4"];
m6_2 [cluster="HangFire.Storage.IWriteOnlyPersistentList.Remove(string, string)", file="IWriteOnlyPersistentList.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentList.Remove(string, string)", span="5-5"];
m6_3 [cluster="HangFire.Storage.IWriteOnlyPersistentList.Remove(string, string)", file="IWriteOnlyPersistentList.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentList.Remove(string, string)", span="5-5"];
m6_4 [cluster="HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", file="IWriteOnlyPersistentList.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", span="7-7"];
m6_5 [cluster="HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", file="IWriteOnlyPersistentList.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", span="7-7"];
m7_1 [cluster="HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)", file="IWriteOnlyPersistentQueue.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)", span="4-4"];
m8_2 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", file="IWriteOnlyPersistentSet.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", span="5-5"];
m8_3 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", file="IWriteOnlyPersistentSet.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", span="5-5"];
m8_0 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string)", file="IWriteOnlyPersistentSet.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string)", span="4-4"];
m8_1 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string)", file="IWriteOnlyPersistentSet.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string)", span="4-4"];
m8_4 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", file="IWriteOnlyPersistentSet.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", span="6-6"];
m8_5 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", file="IWriteOnlyPersistentSet.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", span="6-6"];
m9_4 [cluster="HangFire.Storage.IWriteOnlyPersistentValue.ExpireIn(string, System.TimeSpan)", file="IWriteOnlyPersistentValue.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentValue.ExpireIn(string, System.TimeSpan)", span="9-9"];
m9_5 [cluster="HangFire.Storage.IWriteOnlyPersistentValue.ExpireIn(string, System.TimeSpan)", file="IWriteOnlyPersistentValue.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentValue.ExpireIn(string, System.TimeSpan)", span="9-9"];
m9_2 [cluster="HangFire.Storage.IWriteOnlyPersistentValue.Decrement(string)", file="IWriteOnlyPersistentValue.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentValue.Decrement(string)", span="7-7"];
m9_3 [cluster="HangFire.Storage.IWriteOnlyPersistentValue.Decrement(string)", file="IWriteOnlyPersistentValue.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentValue.Decrement(string)", span="7-7"];
m9_0 [cluster="HangFire.Storage.IWriteOnlyPersistentValue.Increment(string)", file="IWriteOnlyPersistentValue.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentValue.Increment(string)", span="6-6"];
m9_1 [cluster="HangFire.Storage.IWriteOnlyPersistentValue.Increment(string)", file="IWriteOnlyPersistentValue.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentValue.Increment(string)", span="6-6"];
m10_11 [cluster="System.DateTime.DateTime(int, int, int)", file="IWriteOnlyTransaction.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m10_4 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="IWriteOnlyTransaction.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32"];
m10_20 [cluster="System.DateTime.AddMinutes(double)", file="IWriteOnlyTransaction.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m10_6 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", span="18-18"];
m10_7 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", color=green, community=0, file="IWriteOnlyTransaction.cs", label="var date = new DateTime(2012, 12, 12)", prediction=0, span="20-20"];
m10_8 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", color=green, community=0, file="IWriteOnlyTransaction.cs", label="var state = new ScheduledState(date)", prediction=1, span="21-21"];
m10_9 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", color=green, community=0, file="IWriteOnlyTransaction.cs", label="Assert.Equal(date, state.EnqueueAt)", prediction=0, span="22-22"];
m10_10 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", span="18-18"];
m10_0 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="13-13"];
m10_1 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", color=green, community=0, file="IWriteOnlyTransaction.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.Commit()", prediction=3, span="13-13"];
m10_2 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", color=green, community=0, file="IWriteOnlyTransaction.cs", label="Assert.Equal(ScheduledState.StateName, state.Name)", prediction=4, span="14-14"];
m10_3 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", span="11-11"];
m10_21 [cluster="Unk.True", file="IWriteOnlyTransaction.cs", label="Entry Unk.True", span=""];
m10_35 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", span="53-53"];
m10_36 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="IWriteOnlyTransaction.cs", label="var state = new ScheduledState(DateTime.UtcNow)", span="55-55"];
m10_37 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="IWriteOnlyTransaction.cs", label="Assert.False(state.IgnoreJobLoadException)", span="56-56"];
m10_38 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", span="53-53"];
m10_17 [cluster="HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="IWriteOnlyTransaction.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27"];
m10_34 [cluster="Unk.False", file="IWriteOnlyTransaction.cs", label="Entry Unk.False", span=""];
m10_5 [cluster="Unk.Equal", file="IWriteOnlyTransaction.cs", label="Entry Unk.Equal", span=""];
m10_28 [cluster="HangFire.States.ScheduledState.SerializeData()", file="IWriteOnlyTransaction.cs", label="Entry HangFire.States.ScheduledState.SerializeData()", span="46-46"];
m10_30 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", span="45-45"];
m10_31 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="IWriteOnlyTransaction.cs", label="var state = new ScheduledState(DateTime.UtcNow)", span="47-47"];
m10_32 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="IWriteOnlyTransaction.cs", label="Assert.False(state.IsFinal)", span="49-49"];
m10_33 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", span="45-45"];
m10_18 [cluster="System.TimeSpan.FromDays(double)", file="IWriteOnlyTransaction.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m10_22 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", span="34-34"];
m10_23 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", color=green, community=0, file="IWriteOnlyTransaction.cs", label="var state = new ScheduledState(new DateTime(2012, 12, 12))", prediction=5, span="36-36"];
m10_24 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="IWriteOnlyTransaction.cs", label="var data = state.SerializeData()", span="38-38"];
m10_25 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="IWriteOnlyTransaction.cs", label="Assert.Equal(JobHelper.SerializeDateTime(state.EnqueueAt), data[''EnqueueAt''])", span="40-40"];
m10_26 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="IWriteOnlyTransaction.cs", label="Assert.Equal(JobHelper.SerializeDateTime(state.ScheduledAt), data[''ScheduledAt''])", span="41-41"];
m10_27 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", span="34-34"];
m10_12 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", span="26-26"];
m10_13 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", color=green, community=0, file="IWriteOnlyTransaction.cs", label="var state = new ScheduledState(TimeSpan.FromDays(1))", prediction=6, span="28-28"];
m10_14 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", color=green, community=0, file="IWriteOnlyTransaction.cs", label="Assert.True(DateTime.UtcNow.AddDays(1).AddMinutes(-1) < state.EnqueueAt)", prediction=7, span="29-29"];
m10_15 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", color=green, community=0, file="IWriteOnlyTransaction.cs", label="Assert.True(state.EnqueueAt < DateTime.UtcNow.AddDays(1).AddMinutes(1))", prediction=6, span="30-30"];
m10_16 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", span="26-26"];
m10_19 [cluster="System.DateTime.AddDays(double)", file="IWriteOnlyTransaction.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m10_29 [cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50"];
m12_86 [cluster="HangFire.Web.RazorPage.Write(object)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m12_82 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", span="34-34"];
m12_95 [cluster="HangFire.Web.JobHistoryRenderer.Render(string, System.Collections.Generic.IDictionary<string, string>)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.JobHistoryRenderer.Render(string, System.Collections.Generic.IDictionary<string, string>)", span="74-74"];
m12_81 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", span="9-9"];
m12_92 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="51-51"];
m12_93 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JobDetailsPage1.generated.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m12_78 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m12_0 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.Pages.JobDetailsPage.Execute()", span="69-69"];
m12_1 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\r\n'')", span="73-73"];
m12_2 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="JobDetailsDto job", span="88-88"];
m12_3 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="89-89"];
m12_4 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job = monitor.JobDetails(JobId.ToString())", span="91-91"];
m12_5 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="string title = null", span="94-94"];
m12_6 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job != null && job.Method != null", span="96-96"];
m12_7 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="title = HtmlHelper.DisplayMethod(job.Method)", span="98-98"];
m12_11 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job == null", span="114-114"];
m12_17 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.CreatedAt.HasValue", span="149-149"];
m12_19 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(JobHelper.ToStringTimestamp(job.CreatedAt.Value))", span="161-161"];
m12_21 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.Method != null", span="179-179"];
m12_23 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(JobMethodCallRenderer.Render(job.Method, job.Arguments, job.OldFormatArguments))", span="190-190"];
m12_26 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.Properties.Count > 0", span="210-210"];
m12_28 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.Properties", span="221-221"];
m12_37 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.History.Count > 0", span="277-277"];
m12_40 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.History", span="289-289"];
m12_8 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="title = title ?? ''Job''", span="101-101"];
m12_9 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Layout = new LayoutPage { Title = title, Subtitle = HtmlHelper.JobId(JobId.ToString(), false).ToString() }", span="103-103"];
m12_10 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\r\n'')", span="109-109"];
m12_12 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''    '')", span="120-120"];
m12_16 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''    <div class=\''job-snippet\''>\r\n        <div class=\''job-snippet-code\''>\r\n'')", span="144-144"];
m12_13 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral('' The job with id \''')", span="122-122"];
m12_14 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(JobId)", span="127-127"];
m12_15 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\' was expired or was not existed on the server.\r\n'')", span="132-132"];
m12_18 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                <div class=\''pull-right job-creation-date\''>\r\n                    C'' +\r\n''reated\r\n                    <span data-moment=\'''')", span="155-156"];
m12_20 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''></span>\r\n                </div>\r\n'')", span="166-166"];
m12_22 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                <pre><code>'')", span="185-185"];
m12_25 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''            <div class=\''clearfix\''></div>\r\n        </div>\r\n\r\n'')", span="205-205"];
m12_24 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</code></pre>\r\n'')", span="195-195"];
m12_27 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''            <div class=\''job-snippet-properties\''>\r\n                <dl>\r\n'')", span="216-216"];
m12_36 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''    </div>\r\n'')", span="271-271"];
m12_29 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                        <dt>'')", span="227-227"];
m12_35 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                </dl>\r\n            </div>\r\n'')", span="261-261"];
m12_30 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(property.Key)", span="232-232"];
m12_31 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</dt>\r\n'')", span="237-237"];
m12_33 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(property.Value)", span="246-246"];
m12_32 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                        <dd><pre>'')", span="241-241"];
m12_34 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</pre></dd>\r\n'')", span="251-251"];
m12_38 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''        <h3>History</h3>\r\n'')", span="283-283"];
m12_39 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="var index = 0", span="288-288"];
m12_42 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="index == 0", span="295-295"];
m12_45 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(index == 0 ? ''job-history-current'' : null)", span="311-311"];
m12_76 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="index++", span="488-488"];
m12_47 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(background != null ? String.Format(''background-color: {0};'', background) : null)", span="321-321"];
m12_44 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''            <div class=\''job-history '')", span="306-306"];
m12_46 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''>\r\n                <div class=\''job-history-heading\'' style=\'''')", span="316-316"];
m12_48 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''>\r\n                    <span class=\''pull-right\'' data-moment=\'''')", span="326-326"];
m12_50 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''>'')", span="336-336"];
m12_52 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</span>\r\n                    <h4 class=\''job-history-title\''>\r\n                    '' +\r\n''    '')", span="346-347"];
m12_54 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\r\n\r\n'')", span="357-357"];
m12_56 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                            <small>'')", span="368-368"];
m12_59 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                    </h4>\r\n                </div>\r\n\r\n'')", span="388-388"];
m12_58 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</small>\r\n'')", span="378-378"];
m12_66 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                    <div class=\''job-history-body\''>\r\n                        <dl c'' +\r\n''lass=\''dl-horizontal\''>\r\n'')", span="426-427"];
m12_62 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="rendered != null", span="396-396"];
m12_64 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(rendered)", span="408-408"];
m12_63 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                        <div class=\''job-history-body\''>\r\n                         '' +\r\n''   '')", span="402-403"];
m12_75 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''            </div>\r\n'')", span="482-482"];
m12_65 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\r\n                        </div>\r\n'')", span="413-413"];
m12_68 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                                <dt>'')", span="438-438"];
m12_74 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                        </dl>\r\n                    </div>\r\n'')", span="472-472"];
m12_69 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(item.Key)", span="443-443"];
m12_72 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(item.Value)", span="457-457"];
m12_70 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral('':</dt>\r\n'')", span="448-448"];
m12_71 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                                <dd>'')", span="452-452"];
m12_73 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</dd>\r\n'')", span="462-462"];
m12_77 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Exit HangFire.Web.Pages.JobDetailsPage.Execute()", span="69-69"];
m12_94 [cluster="HangFire.Web.JobHistoryRenderer.Exists(string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.JobHistoryRenderer.Exists(string)", span="69-69"];
m12_96 [cluster="Unk.Where", file="JobDetailsPage1.generated.cs", label="Entry Unk.Where", span=""];
m12_85 [cluster="Unk.ToString", file="JobDetailsPage1.generated.cs", label="Entry Unk.ToString", span=""];
m12_90 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JobDetailsPage1.generated.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m12_97 [cluster="lambda expression", file="JobDetailsPage1.generated.cs", label="Entry lambda expression", span="432-432"];
m12_99 [cluster="lambda expression", file="JobDetailsPage1.generated.cs", label="Exit lambda expression", span="432-432"];
m12_88 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>)", span="28-28"];
m12_87 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m12_80 [cluster="string.ToString()", file="JobDetailsPage1.generated.cs", label="Entry string.ToString()", span="0-0"];
m12_89 [cluster="Unk.Write", file="JobDetailsPage1.generated.cs", label="Entry Unk.Write", span=""];
m12_84 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="55-55"];
m12_79 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobDetailsPage1.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="43-43"];
m12_83 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m12_100 [file="JobDetailsPage1.generated.cs", label="HangFire.Web.Pages.JobDetailsPage", span=""];
m14_37 [cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="JobMethod.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", span="10-10"];
m14_38 [cluster="System.DateTime.Add(System.TimeSpan)", file="JobMethod.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m14_41 [cluster="System.Guid.NewGuid()", file="JobMethod.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m14_26 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="JobMethod.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="113-113"];
m14_27 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="JobMethod.cs", label="return In(delay, typeof(TJob), args);", span="116-116"];
m14_28 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="JobMethod.cs", label="Exit HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="113-113"];
m14_3 [cluster="HangFire.Perform.Async<TJob>(object)", file="JobMethod.cs", label="Entry HangFire.Perform.Async<TJob>(object)", span="40-40"];
m14_4 [cluster="HangFire.Perform.Async<TJob>(object)", file="JobMethod.cs", label="return Async(typeof(TJob), args);", span="43-43"];
m14_5 [cluster="HangFire.Perform.Async<TJob>(object)", file="JobMethod.cs", label="Exit HangFire.Perform.Async<TJob>(object)", span="40-40"];
m14_19 [cluster="HangFire.JobHelper.GetQueue(System.Type)", file="JobMethod.cs", label="Entry HangFire.JobHelper.GetQueue(System.Type)", span="23-23"];
m14_21 [cluster="HangFire.Perform.GenerateId()", file="JobMethod.cs", label="Entry HangFire.Perform.GenerateId()", span="157-157"];
m14_39 [cluster="HangFire.Perform.GenerateId()", file="JobMethod.cs", label="return Guid.NewGuid().ToString();", span="159-159"];
m14_40 [cluster="HangFire.Perform.GenerateId()", file="JobMethod.cs", label="Exit HangFire.Perform.GenerateId()", span="157-157"];
m14_6 [cluster="HangFire.Perform.Async(System.Type, object)", file="JobMethod.cs", label="Entry HangFire.Perform.Async(System.Type, object)", span="71-71"];
m14_10 [cluster="HangFire.Perform.Async(System.Type, object)", file="JobMethod.cs", label="type == null", span="73-73"];
m14_13 [cluster="HangFire.Perform.Async(System.Type, object)", file="JobMethod.cs", label="var queue = JobHelper.GetQueue(type)", span="80-80"];
m14_15 [cluster="HangFire.Perform.Async(System.Type, object)", file="JobMethod.cs", label="return client.CreateJob(GenerateId(), type, enqueuedState, args);", span="83-83"];
m14_11 [cluster="HangFire.Perform.Async(System.Type, object)", file="JobMethod.cs", label="throw new ArgumentNullException(''type'');", span="75-75"];
m14_12 [cluster="HangFire.Perform.Async(System.Type, object)", file="JobMethod.cs", label="var client = new JobClient(RedisFactory.PooledManager)", span="78-78"];
m14_14 [cluster="HangFire.Perform.Async(System.Type, object)", file="JobMethod.cs", label="var enqueuedState = new EnqueuedState(''Enqueued by the Сlient'', queue)", span="81-81"];
m14_16 [cluster="HangFire.Perform.Async(System.Type, object)", file="JobMethod.cs", label="Exit HangFire.Perform.Async(System.Type, object)", span="71-71"];
m14_30 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="JobMethod.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="128-128"];
m14_31 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="JobMethod.cs", label="return In(delay, type, null);", span="130-130"];
m14_32 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="JobMethod.cs", label="Exit HangFire.Perform.In(System.TimeSpan, System.Type)", span="128-128"];
m14_0 [cluster="HangFire.Perform.Async<TJob>()", file="JobMethod.cs", label="Entry HangFire.Perform.Async<TJob>()", span="24-24"];
m14_1 [cluster="HangFire.Perform.Async<TJob>()", file="JobMethod.cs", label="return Async<TJob>(null);", span="27-27"];
m14_2 [cluster="HangFire.Perform.Async<TJob>()", file="JobMethod.cs", label="Exit HangFire.Perform.Async<TJob>()", span="24-24"];
m14_7 [cluster="HangFire.Perform.Async(System.Type)", file="JobMethod.cs", label="Entry HangFire.Perform.Async(System.Type)", span="55-55"];
m14_8 [cluster="HangFire.Perform.Async(System.Type)", file="JobMethod.cs", label="return Async(type, null);", span="57-57"];
m14_9 [cluster="HangFire.Perform.Async(System.Type)", file="JobMethod.cs", label="Exit HangFire.Perform.Async(System.Type)", span="55-55"];
m14_18 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="JobMethod.cs", label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="13-13"];
m14_20 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="JobMethod.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10"];
m14_22 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="JobMethod.cs", label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27"];
m14_29 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="JobMethod.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="144-144"];
m14_33 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="JobMethod.cs", label="var client = new JobClient(RedisFactory.BasicManager)", span="146-146"];
m14_34 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="JobMethod.cs", label="var scheduledState = new ScheduledState(''Scheduled by the Client'', DateTime.UtcNow.Add(delay))", span="148-148"];
m14_35 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="JobMethod.cs", label="return client.CreateJob(GenerateId(), type, scheduledState, args);", span="149-149"];
m14_36 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="JobMethod.cs", label="Exit HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="144-144"];
m14_42 [cluster="System.Guid.ToString()", file="JobMethod.cs", label="Entry System.Guid.ToString()", span="0-0"];
m14_23 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="JobMethod.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan)", span="96-96"];
m14_24 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="JobMethod.cs", label="return In<TJob>(delay, null);", span="99-99"];
m14_25 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="JobMethod.cs", label="Exit HangFire.Perform.In<TJob>(System.TimeSpan)", span="96-96"];
m16_0 [cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="JobStateHandler.cs", label="Entry HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="22-22"];
m16_1 [cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="JobStateHandler.cs", label="Exit HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="22-22"];
m16_2 [cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="JobStateHandler.cs", label="Entry HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m16_3 [cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="JobStateHandler.cs", label="Exit HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m17_16 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="PerformContext.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m17_20 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="PerformContext.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m17_25 [cluster="HangFire.Storage.IPersistentJob.GetParameter(string, string)", file="PerformContext.cs", label="Entry HangFire.Storage.IPersistentJob.GetParameter(string, string)", span="8-8"];
m17_17 [cluster="HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", file="PerformContext.cs", label="Entry HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", span="64-64"];
m17_19 [cluster="HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", file="PerformContext.cs", label="Exit HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", span="64-64"];
m17_26 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="PerformContext.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28"];
m17_3 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="Entry HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", span="35-35"];
m17_4 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="connection == null", span="42-42"];
m17_6 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="jobId == null", span="43-43"];
m17_8 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="jobMethod == null", span="44-44"];
m17_10 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="Connection = connection", span="46-46"];
m17_11 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="JobId = jobId", span="47-47"];
m17_12 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="JobMethod = jobMethod", span="48-48"];
m17_5 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="throw new ArgumentNullException(''connection'');", span="42-42"];
m17_7 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="throw new ArgumentNullException(''jobId'');", span="43-43"];
m17_9 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="throw new ArgumentNullException(''jobMethod'');", span="44-44"];
m17_13 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="Items = new Dictionary<string, object>()", span="49-49"];
m17_14 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="Exit HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", span="35-35"];
m17_0 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.Performing.PerformContext)", file="PerformContext.cs", label="Entry HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.Performing.PerformContext)", span="29-29"];
m17_1 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.Performing.PerformContext)", file="PerformContext.cs", label="Items = context.Items", span="32-32"];
m17_2 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.Performing.PerformContext)", file="PerformContext.cs", label="Exit HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.Performing.PerformContext)", span="29-29"];
m17_21 [cluster="HangFire.Storage.IPersistentJob.SetParameter(string, string, string)", file="PerformContext.cs", label="Entry HangFire.Storage.IPersistentJob.SetParameter(string, string, string)", span="7-7"];
m17_22 [cluster="HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", file="PerformContext.cs", label="Entry HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", span="69-69"];
m17_24 [cluster="HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", file="PerformContext.cs", label="Exit HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", span="69-69"];
m17_27 [file="PerformContext.cs", label="HangFire.Server.Performing.PerformContext", span=""];
m18_0 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateHandler.cs", label="Entry HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="10-10"];
m18_2 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateHandler.cs", label="Exit HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="10-10"];
m18_4 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", file="ProcessingStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", span="5-5"];
m18_5 [cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ProcessingStateHandler.cs", label="Entry HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18"];
m18_7 [cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ProcessingStateHandler.cs", label="Exit HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18"];
m18_3 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ProcessingStateHandler.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35"];
m18_8 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", file="ProcessingStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", span="6-6"];
m19_8 [cluster="HangFire.Redis.RedisConnection.Dispose()", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.Dispose()", span="24-24"];
m19_9 [cluster="HangFire.Redis.RedisConnection.Dispose()", file="RedisConnection.cs", label="_redis.Dispose()", span="26-26"];
m19_10 [cluster="HangFire.Redis.RedisConnection.Dispose()", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.Dispose()", span="24-24"];
m19_73 [cluster="int.ToString(System.IFormatProvider)", file="RedisConnection.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m19_132 [cluster="Unk.FromNullableStringTimestamp", file="RedisConnection.cs", label="Entry Unk.FromNullableStringTimestamp", span=""];
m19_20 [cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", span="17-17"];
m19_51 [cluster="Unk.SetRangeInHash", file="RedisConnection.cs", label="Entry Unk.SetRangeInHash", span=""];
m19_17 [cluster="HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="34-34"];
m19_18 [cluster="HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", label="return new RedisJobFetcher(_redis, queueNames, TimeSpan.FromSeconds(1));", span="36-36"];
m19_19 [cluster="HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="34-34"];
m19_26 [cluster="System.TimeSpan.FromMinutes(double)", file="RedisConnection.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m19_6 [cluster="HangFire.Redis.DataTypes.RedisJob.RedisJob(IRedisClient)", file="RedisConnection.cs", label="Entry HangFire.Redis.DataTypes.RedisJob.RedisJob(IRedisClient)", span="12-12"];
m19_131 [cluster="Unk.FromStringTimestamp", file="RedisConnection.cs", label="Entry Unk.FromStringTimestamp", span=""];
m19_99 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="137-137"];
m19_100 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var serverNames = _redis.GetAllItemsFromSet(RedisStorage.Prefix + ''servers'')", span="139-139"];
m19_111 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="utcNow > maxTime.Add(timeOut)", span="170-170"];
m19_101 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="140-140"];
m19_104 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label=serverNames, span="146-146"];
m19_102 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var utcNow = DateTime.UtcNow", span="142-142"];
m19_106 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1]))))", span="150-158"];
m19_109 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label=heartbeats, span="165-165"];
m19_103 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var pipeline = _redis.CreatePipeline()", span="144-144"];
m19_107 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="pipeline.Flush()", span="161-161"];
m19_105 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var name = serverName", span="148-148"];
m19_108 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var removedServerCount = 0", span="164-164"];
m19_113 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="removedServerCount++", span="173-173"];
m19_114 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="return removedServerCount;", span="177-177"];
m19_110 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="167-168"];
m19_112 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="RemoveServer(_redis, heartbeat.Key)", span="172-172"];
m19_115 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="137-137"];
m19_98 [cluster="Unk.SetEntryInHash", file="RedisConnection.cs", label="Entry Unk.SetEntryInHash", span=""];
m19_68 [cluster="Unk.AddItemToSet", file="RedisConnection.cs", label="Entry Unk.AddItemToSet", span=""];
m19_148 [cluster="Unk.RemoveEntryFromHash", file="RedisConnection.cs", label="Entry Unk.RemoveEntryFromHash", span=""];
m19_96 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="RedisConnection.cs", label="_redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="131-134"];
m19_95 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.Heartbeat(string)", span="129-129"];
m19_97 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.Heartbeat(string)", span="129-129"];
m19_94 [cluster="Unk.RemoveEntry", file="RedisConnection.cs", label="Entry Unk.RemoveEntry", span=""];
m19_84 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", color=green, community=0, file="RedisConnection.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId)))", prediction=9, span="121-123"];
m19_81 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="113-113"];
m19_82 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", color=green, community=0, file="RedisConnection.cs", label="var transaction = redis.CreateTransaction()", prediction=9, span="115-115"];
m19_83 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", color=green, community=0, file="RedisConnection.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId))", prediction=9, span="117-119"];
m19_85 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", color=green, community=0, file="RedisConnection.cs", label="transaction.Commit()", prediction=9, span="125-125"];
m19_86 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="113-113"];
m19_12 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="29-29"];
m19_13 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="RedisConnection.cs", label="return new RedisWriteOnlyTransaction(_redis.CreateTransaction());", span="31-31"];
m19_14 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="29-29"];
m19_7 [cluster="HangFire.Redis.DataTypes.RedisSet.RedisSet(IRedisClient)", file="RedisConnection.cs", label="Entry HangFire.Redis.DataTypes.RedisSet.RedisSet(IRedisClient)", span="11-11"];
m19_21 [cluster="System.TimeSpan.FromSeconds(double)", file="RedisConnection.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m19_55 [cluster="Unk.ExpireEntryIn", file="RedisConnection.cs", label="Entry Unk.ExpireEntryIn", span=""];
m19_42 [cluster="System.Guid.ToString()", file="RedisConnection.cs", label="Entry System.Guid.ToString()", span="0-0"];
m19_118 [cluster="Unk.Flush", file="RedisConnection.cs", label="Entry Unk.Flush", span=""];
m19_15 [cluster="RedisWriteOnlyTransaction.cstr", file="RedisConnection.cs", label="Entry RedisWriteOnlyTransaction.cstr", span=""];
m19_133 [cluster="Unk.Add", file="RedisConnection.cs", label="Entry Unk.Add", span=""];
m19_121 [cluster="System.DateTime.Add(System.TimeSpan)", file="RedisConnection.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m19_72 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisConnection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m19_130 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="RedisConnection.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m19_138 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Checked''))", span="195-197"];
m19_134 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", span="180-180"];
m19_135 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs", label="var transaction = redis.CreateTransaction()", span="185-185"];
m19_136 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1))", span="187-190"];
m19_137 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Fetched''))", span="192-194"];
m19_139 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs", label="transaction.Commit()", span="199-199"];
m19_140 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", span="180-180"];
m19_77 [cluster="Unk.AddItemToList", file="RedisConnection.cs", label="Entry Unk.AddItemToList", span=""];
m19_11 [cluster="Unk.Dispose", file="RedisConnection.cs", label="Entry Unk.Dispose", span=""];
m19_56 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="81-81"];
m19_57 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="RedisConnection.cs", label="var transaction = _redis.CreateTransaction()", prediction=13, span="83-83"];
m19_58 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="RedisConnection.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId))", prediction=13, span="85-86"];
m19_59 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="RedisConnection.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', workerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", prediction=13, span="88-94"];
m19_60 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="RedisConnection.cs", label=queues, prediction=13, span="96-96"];
m19_62 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="RedisConnection.cs", label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1))", prediction=13, span="99-101"];
m19_63 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="RedisConnection.cs", label="transaction.Commit()", prediction=13, span="104-104"];
m19_61 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="RedisConnection.cs", label="var queue1 = queue", prediction=13, span="98-98"];
m19_64 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="81-81"];
m19_90 [cluster="Unk.RemoveItemFromSet", file="RedisConnection.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m19_119 [cluster="System.DateTime.DateTime(long)", file="RedisConnection.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m19_78 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(string)", span="108-108"];
m19_79 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", color=green, community=0, file="RedisConnection.cs", label="RemoveServer(_redis, serverId)", prediction=20, span="110-110"];
m19_80 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(string)", span="108-108"];
m19_37 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn))", span="70-72"];
m19_28 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="50-50"];
m19_29 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="var jobId = Guid.NewGuid().ToString()", span="56-56"];
m19_30 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="parameters.Add(''Type'', invocationData.Type)", span="58-58"];
m19_31 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="parameters.Add(''Method'', invocationData.Method)", span="59-59"];
m19_32 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="parameters.Add(''ParameterTypes'', invocationData.ParameterTypes)", span="60-60"];
m19_33 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="parameters.Add(''Arguments'', JobHelper.ToJson(arguments))", span="61-61"];
m19_34 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="parameters.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="62-62"];
m19_36 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    parameters))", span="66-68"];
m19_39 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=green, community=0, file="RedisConnection.cs", label="return jobId;", prediction=21, span="78-78"];
m19_35 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="var transaction = _redis.CreateTransaction()", span="64-64"];
m19_38 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="transaction.Commit()", span="75-75"];
m19_40 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="50-50"];
m19_120 [cluster="System.Math.Max(long, long)", file="RedisConnection.cs", label="Entry System.Math.Max(long, long)", span="0-0"];
m19_92 [cluster="lambda expression", color=green, community=0, file="RedisConnection.cs", label="x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId))", prediction=9, span="121-123"];
m19_49 [cluster="lambda expression", file="RedisConnection.cs", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    parameters)", span="66-68"];
m19_53 [cluster="lambda expression", file="RedisConnection.cs", label="x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn)", span="70-72"];
m19_48 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="66-68"];
m19_52 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="70-72"];
m19_50 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="66-68"];
m19_54 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="70-72"];
m19_66 [cluster="lambda expression", color=green, community=0, file="RedisConnection.cs", label="x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId)", prediction=13, span="85-86"];
m19_70 [cluster="lambda expression", color=green, community=0, file="RedisConnection.cs", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', workerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", prediction=13, span="88-94"];
m19_75 [cluster="lambda expression", color=green, community=0, file="RedisConnection.cs", label="x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1)", prediction=13, span="99-101"];
m19_65 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="85-86"];
m19_69 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="88-94"];
m19_74 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="99-101"];
m19_67 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="85-86"];
m19_71 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="88-94"];
m19_76 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="99-101"];
m19_88 [cluster="lambda expression", color=green, community=0, file="RedisConnection.cs", label="x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId)", prediction=9, span="117-119"];
m19_87 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="117-119"];
m19_91 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="121-123"];
m19_89 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="117-119"];
m19_93 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="121-123"];
m19_128 [cluster="lambda expression", file="RedisConnection.cs", label="heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1])))", span="154-158"];
m19_123 [cluster="lambda expression", file="RedisConnection.cs", label="x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="151-153"];
m19_122 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="151-153"];
m19_127 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="154-158"];
m19_124 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="151-153"];
m19_129 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="154-158"];
m19_142 [cluster="lambda expression", file="RedisConnection.cs", label="x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1)", span="187-190"];
m19_146 [cluster="lambda expression", file="RedisConnection.cs", label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Fetched'')", span="192-194"];
m19_150 [cluster="lambda expression", file="RedisConnection.cs", label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Checked'')", span="195-197"];
m19_141 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="187-190"];
m19_145 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="192-194"];
m19_149 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="195-197"];
m19_143 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="187-190"];
m19_147 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="192-194"];
m19_151 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="195-197"];
m19_45 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RedisConnection.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m19_22 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="39-39"];
m19_23 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="RedisConnection.cs", label="return _redis.AcquireLock(\r\n                RedisStorage.Prefix + String.Format(''job:{0}:state-lock'', jobId),\r\n                TimeSpan.FromMinutes(1));", span="41-43"];
m19_24 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="39-39"];
m19_117 [cluster="Unk.CreatePipeline", file="RedisConnection.cs", label="Entry Unk.CreatePipeline", span=""];
m19_144 [cluster="Unk.RemoveItemFromList", file="RedisConnection.cs", label="Entry Unk.RemoveItemFromList", span=""];
m19_41 [cluster="System.Guid.NewGuid()", file="RedisConnection.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m19_44 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="RedisConnection.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m19_47 [cluster="Unk.Commit", file="RedisConnection.cs", label="Entry Unk.Commit", span=""];
m19_116 [cluster="Unk.GetAllItemsFromSet", file="RedisConnection.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m19_126 [cluster="Unk.GetValuesFromHash", file="RedisConnection.cs", label="Entry Unk.GetValuesFromHash", span=""];
m19_125 [cluster="Unk.Format", file="RedisConnection.cs", label="Entry Unk.Format", span=""];
m19_46 [cluster="Unk.QueueCommand", file="RedisConnection.cs", label="Entry Unk.QueueCommand", span=""];
m19_0 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", span="15-15"];
m19_1 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="RedisConnection.cs", label="_redis = redis", span="17-17"];
m19_4 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", color=green, community=0, file="RedisConnection.cs", label="Storage = storage", prediction=27, span="21-21"];
m19_5 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", span="15-15"];
m19_43 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisConnection.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m19_27 [cluster="Unk.AcquireLock", file="RedisConnection.cs", label="Entry Unk.AcquireLock", span=""];
m19_16 [cluster="Unk.CreateTransaction", file="RedisConnection.cs", label="Entry Unk.CreateTransaction", span=""];
m19_152 [file="RedisConnection.cs", label="HangFire.Redis.RedisConnection", span=""];
m19_153 [file="RedisConnection.cs", label="System.Collections.Generic.IDictionary<string, string>", span=""];
m19_154 [file="RedisConnection.cs", label=jobId, span=""];
m19_155 [file="RedisConnection.cs", label="System.TimeSpan", span=""];
m19_156 [file="RedisConnection.cs", label=string, span=""];
m19_157 [file="RedisConnection.cs", label=int, span=""];
m19_158 [file="RedisConnection.cs", label=queue1, span=""];
m19_159 [file="RedisConnection.cs", label=string, span=""];
m19_160 [file="RedisConnection.cs", label=name, span=""];
m19_161 [file="RedisConnection.cs", label=heartbeats, span=""];
m19_162 [file="RedisConnection.cs", label=string, span=""];
m19_163 [file="RedisConnection.cs", label=string, span=""];
m20_21 [cluster="HangFire.Redis.DataTypes.RedisJob.SetParameter(string, string, string)", file="RedisJob.cs", label="Entry HangFire.Redis.DataTypes.RedisJob.SetParameter(string, string, string)", span="45-45"];
m20_23 [cluster="HangFire.Redis.DataTypes.RedisJob.SetParameter(string, string, string)", file="RedisJob.cs", label="Exit HangFire.Redis.DataTypes.RedisJob.SetParameter(string, string, string)", span="45-45"];
m20_28 [cluster="Unk.GetValueFromHash", file="RedisJob.cs", label="Entry Unk.GetValueFromHash", span=""];
m20_32 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisJob.cs", label="Entry HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", span="180-180"];
m20_20 [cluster="HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", file="RedisJob.cs", label="Entry HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", span="2-2"];
m20_17 [cluster="Unk.GetAllEntriesFromHash", file="RedisJob.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m20_0 [cluster="HangFire.Redis.DataTypes.RedisJob.RedisJob(IRedisClient)", file="RedisJob.cs", label="Entry HangFire.Redis.DataTypes.RedisJob.RedisJob(IRedisClient)", span="12-12"];
m20_2 [cluster="HangFire.Redis.DataTypes.RedisJob.RedisJob(IRedisClient)", file="RedisJob.cs", label="Exit HangFire.Redis.DataTypes.RedisJob.RedisJob(IRedisClient)", span="12-12"];
m20_29 [cluster="HangFire.Redis.DataTypes.RedisJob.Complete(HangFire.Server.JobPayload)", file="RedisJob.cs", label="Entry HangFire.Redis.DataTypes.RedisJob.Complete(HangFire.Server.JobPayload)", span="60-60"];
m20_31 [cluster="HangFire.Redis.DataTypes.RedisJob.Complete(HangFire.Server.JobPayload)", file="RedisJob.cs", label="Exit HangFire.Redis.DataTypes.RedisJob.Complete(HangFire.Server.JobPayload)", span="60-60"];
m20_19 [cluster="Unk.ContainsKey", file="RedisJob.cs", label="Entry Unk.ContainsKey", span=""];
m20_24 [cluster="Unk.SetEntryInHash", file="RedisJob.cs", label="Entry Unk.SetEntryInHash", span=""];
m20_25 [cluster="HangFire.Redis.DataTypes.RedisJob.GetParameter(string, string)", file="RedisJob.cs", label="Entry HangFire.Redis.DataTypes.RedisJob.GetParameter(string, string)", span="53-53"];
m20_27 [cluster="HangFire.Redis.DataTypes.RedisJob.GetParameter(string, string)", file="RedisJob.cs", label="Exit HangFire.Redis.DataTypes.RedisJob.GetParameter(string, string)", span="53-53"];
m20_3 [cluster="HangFire.Redis.DataTypes.RedisJob.GetStateAndInvocationData(string)", file="RedisJob.cs", label="Entry HangFire.Redis.DataTypes.RedisJob.GetStateAndInvocationData(string)", span="17-17"];
m20_15 [cluster="HangFire.Redis.DataTypes.RedisJob.GetStateAndInvocationData(string)", file="RedisJob.cs", label="Exit HangFire.Redis.DataTypes.RedisJob.GetStateAndInvocationData(string)", span="17-17"];
m20_18 [cluster="HangFire.Storage.InvocationData.InvocationData()", file="RedisJob.cs", label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2"];
m20_33 [file="RedisJob.cs", label="HangFire.Redis.DataTypes.RedisJob", span=""];
m22_0 [cluster="HangFire.Redis.DataTypes.RedisSet.RedisSet(IRedisClient)", file="RedisSet.cs", label="Entry HangFire.Redis.DataTypes.RedisSet.RedisSet(IRedisClient)", span="11-11"];
m22_2 [cluster="HangFire.Redis.DataTypes.RedisSet.RedisSet(IRedisClient)", file="RedisSet.cs", label="Exit HangFire.Redis.DataTypes.RedisSet.RedisSet(IRedisClient)", span="11-11"];
m22_6 [cluster="Unk.GetRangeFromSortedSetByLowestScore", file="RedisSet.cs", label="Entry Unk.GetRangeFromSortedSetByLowestScore", span=""];
m22_3 [cluster="HangFire.Redis.DataTypes.RedisSet.GetFirstByLowestScore(string, long, long)", file="RedisSet.cs", label="Entry HangFire.Redis.DataTypes.RedisSet.GetFirstByLowestScore(string, long, long)", span="16-16"];
m22_5 [cluster="HangFire.Redis.DataTypes.RedisSet.GetFirstByLowestScore(string, long, long)", file="RedisSet.cs", label="Exit HangFire.Redis.DataTypes.RedisSet.GetFirstByLowestScore(string, long, long)", span="16-16"];
m22_7 [cluster="Unk.FirstOrDefault", file="RedisSet.cs", label="Entry Unk.FirstOrDefault", span=""];
m22_8 [file="RedisSet.cs", label="HangFire.Redis.DataTypes.RedisSet", span=""];
m24_6 [cluster="Mock<IBackgroundProcess>.cstr", file="RedisWriteOnlyJob.cs", label="Entry Mock<IBackgroundProcess>.cstr", span=""];
m24_7 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="RedisWriteOnlyJob.cs", label="Entry Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="11-11"];
m24_22 [cluster="Unk.Same", file="RedisWriteOnlyJob.cs", label="Entry Unk.Same", span=""];
m24_21 [cluster="Unk.CreateProcess", file="RedisWriteOnlyJob.cs", label="Entry Unk.CreateProcess", span=""];
m24_16 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", file="RedisWriteOnlyJob.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", span="28-28"];
m24_20 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", file="RedisWriteOnlyJob.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", span="28-28"];
m24_32 [cluster="System.TimeSpan.FromMilliseconds(double)", file="RedisWriteOnlyJob.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m24_90 [cluster="Unk.Equal", file="RedisWriteOnlyJob.cs", label="Entry Unk.Equal", span=""];
m24_91 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateProcess(Hangfire.Server.ILongRunningProcess)", file="RedisWriteOnlyJob.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateProcess(Hangfire.Server.ILongRunningProcess)", span="91-91"];
m24_92 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateProcess(Hangfire.Server.ILongRunningProcess)", file="RedisWriteOnlyJob.cs", label="return new InfiniteLoopProcess(process);", span="93-93"];
m24_93 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateProcess(Hangfire.Server.ILongRunningProcess)", file="RedisWriteOnlyJob.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateProcess(Hangfire.Server.ILongRunningProcess)", span="91-91"];
m24_76 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="RedisWriteOnlyJob.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m24_23 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", file="RedisWriteOnlyJob.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", span="36-36"];
m24_29 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", file="RedisWriteOnlyJob.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", span="36-36"];
m24_43 [cluster="System.Threading.Thread.Sleep(int)", file="RedisWriteOnlyJob.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m24_8 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="RedisWriteOnlyJob.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="22-22"];
m24_10 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="RedisWriteOnlyJob.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="22-22"];
m24_11 [cluster="Unk.>", file="RedisWriteOnlyJob.cs", label="Entry Unk.>", span=""];
m24_88 [cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="RedisWriteOnlyJob.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.ToString()", span="41-41"];
m24_15 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="RedisWriteOnlyJob.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", span="24-24"];
m24_47 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="RedisWriteOnlyJob.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="32-32"];
m24_0 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="RedisWriteOnlyJob.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="14-14"];
m24_4 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="RedisWriteOnlyJob.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="14-14"];
m24_89 [cluster="Unk.ToString", file="RedisWriteOnlyJob.cs", label="Entry Unk.ToString", span=""];
m24_51 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", file="RedisWriteOnlyJob.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", span="53-53"];
m24_57 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", file="RedisWriteOnlyJob.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", span="53-53"];
m24_30 [cluster="Unk.Setup", file="RedisWriteOnlyJob.cs", label="Entry Unk.Setup", span=""];
m24_5 [cluster="Mock<IServerComponent>.cstr", file="RedisWriteOnlyJob.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m24_80 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Entry lambda expression", span="80-80"];
m24_12 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Entry lambda expression", span="24-24"];
m24_14 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Exit lambda expression", span="24-24"];
m24_36 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Entry lambda expression", span="39-39"];
m24_40 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Entry lambda expression", span="40-40"];
m24_44 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Entry lambda expression", span="46-46"];
m24_48 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Entry lambda expression", span="49-49"];
m24_38 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Exit lambda expression", span="39-39"];
m24_42 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Exit lambda expression", span="40-40"];
m24_46 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Exit lambda expression", span="46-46"];
m24_50 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Exit lambda expression", span="49-49"];
m24_58 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Entry lambda expression", span="56-56"];
m24_61 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Entry lambda expression", span="57-57"];
m24_64 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Entry lambda expression", span="63-63"];
m24_67 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Entry lambda expression", span="66-66"];
m24_60 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Exit lambda expression", span="56-56"];
m24_63 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Exit lambda expression", span="57-57"];
m24_66 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Exit lambda expression", span="63-63"];
m24_69 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Exit lambda expression", span="66-66"];
m24_78 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="process.Execute(_context.Object)", span="77-77"];
m24_77 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Entry lambda expression", span="77-77"];
m24_79 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Exit lambda expression", span="77-77"];
m24_81 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="80-80"];
m24_82 [cluster="lambda expression", file="RedisWriteOnlyJob.cs", label="Exit lambda expression", span="80-80"];
m24_83 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="RedisWriteOnlyJob.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="84-84"];
m24_84 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="RedisWriteOnlyJob.cs", label="var process = CreateProcess(_innerComponent.Object)", span="86-86"];
m24_85 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="RedisWriteOnlyJob.cs", label="var result = process.ToString()", span="87-87"];
m24_86 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="RedisWriteOnlyJob.cs", label="Assert.Equal(_innerComponent.Object.ToString(), result)", span="88-88"];
m24_87 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="RedisWriteOnlyJob.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="84-84"];
m24_70 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="RedisWriteOnlyJob.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", span="70-70"];
m24_71 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="RedisWriteOnlyJob.cs", label="var process = CreateProcess(_innerComponent.Object)", span="73-73"];
m24_72 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="RedisWriteOnlyJob.cs", label="_context.CancellationTokenSource.Cancel()", span="74-74"];
m24_73 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="RedisWriteOnlyJob.cs", label="Assert.Throws<OperationCanceledException>(() => process.Execute(_context.Object))", span="77-77"];
m24_74 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="RedisWriteOnlyJob.cs", label="_innerComponent.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Never)", span="80-80"];
m24_75 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="RedisWriteOnlyJob.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", span="70-70"];
m24_33 [cluster="System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)", file="RedisWriteOnlyJob.cs", label="Entry System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)", span="0-0"];
m24_34 [cluster="Unk.AtLeast", file="RedisWriteOnlyJob.cs", label="Entry Unk.AtLeast", span=""];
m24_39 [cluster="Unk.Execute", file="RedisWriteOnlyJob.cs", label="Entry Unk.Execute", span=""];
m24_31 [cluster="Unk.Callback", file="RedisWriteOnlyJob.cs", label="Entry Unk.Callback", span=""];
m24_35 [cluster="Unk.Verify", file="RedisWriteOnlyJob.cs", label="Entry Unk.Verify", span=""];
m24_94 [file="RedisWriteOnlyJob.cs", label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", span=""];
m24_95 [file="RedisWriteOnlyJob.cs", label=process, span=""];
m24_96 [file="RedisWriteOnlyJob.cs", label=process, span=""];
m24_97 [file="RedisWriteOnlyJob.cs", label=process, span=""];
m25_0 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", file="RedisWriteOnlyList.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", span="10-10"];
m25_4 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", file="RedisWriteOnlyList.cs", label="Exit HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", span="10-10"];
m25_13 [cluster="Unk.EnqueueItemOnList", file="RedisWriteOnlyList.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m25_6 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.AddToLeft(string, string)", file="RedisWriteOnlyList.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyList.AddToLeft(string, string)", span="17-17"];
m25_8 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.AddToLeft(string, string)", file="RedisWriteOnlyList.cs", label="Exit HangFire.Redis.DataTypes.RedisWriteOnlyList.AddToLeft(string, string)", span="17-17"];
m25_9 [cluster="Unk.QueueCommand", file="RedisWriteOnlyList.cs", label="Entry Unk.QueueCommand", span=""];
m25_14 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.Remove(string, string)", file="RedisWriteOnlyList.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyList.Remove(string, string)", span="23-23"];
m25_16 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.Remove(string, string)", file="RedisWriteOnlyList.cs", label="Exit HangFire.Redis.DataTypes.RedisWriteOnlyList.Remove(string, string)", span="23-23"];
m25_27 [cluster="Unk.TrimList", file="RedisWriteOnlyList.cs", label="Entry Unk.TrimList", span=""];
m25_24 [cluster="lambda expression", file="RedisWriteOnlyList.cs", label="Entry lambda expression", span="32-33"];
m25_10 [cluster="lambda expression", file="RedisWriteOnlyList.cs", label="Entry lambda expression", span="19-20"];
m25_12 [cluster="lambda expression", file="RedisWriteOnlyList.cs", label="Exit lambda expression", span="19-20"];
m25_17 [cluster="lambda expression", file="RedisWriteOnlyList.cs", label="Entry lambda expression", span="25-26"];
m25_19 [cluster="lambda expression", file="RedisWriteOnlyList.cs", label="Exit lambda expression", span="25-26"];
m25_26 [cluster="lambda expression", file="RedisWriteOnlyList.cs", label="Exit lambda expression", span="32-33"];
m25_21 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.Trim(string, int, int)", file="RedisWriteOnlyList.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyList.Trim(string, int, int)", span="29-29"];
m25_23 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.Trim(string, int, int)", file="RedisWriteOnlyList.cs", label="Exit HangFire.Redis.DataTypes.RedisWriteOnlyList.Trim(string, int, int)", span="29-29"];
m25_20 [cluster="Unk.RemoveItemFromList", file="RedisWriteOnlyList.cs", label="Entry Unk.RemoveItemFromList", span=""];
m25_28 [file="RedisWriteOnlyList.cs", label="HangFire.Redis.DataTypes.RedisWriteOnlyList", span=""];
m25_29 [file="RedisWriteOnlyList.cs", label=string, span=""];
m25_30 [file="RedisWriteOnlyList.cs", label=string, span=""];
m25_31 [file="RedisWriteOnlyList.cs", label=string, span=""];
m25_32 [file="RedisWriteOnlyList.cs", label=string, span=""];
m25_33 [file="RedisWriteOnlyList.cs", label=string, span=""];
m25_34 [file="RedisWriteOnlyList.cs", label=int, span=""];
m25_35 [file="RedisWriteOnlyList.cs", label=int, span=""];
m26_6 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", span="46-46"];
m26_7 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs", label="connection == null", span="52-52"];
m26_9 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs", label="stateMachineFactory == null", span="53-53"];
m26_11 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs", label="job == null", span="54-54"];
m26_13 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs", label="initialState == null", span="55-55"];
m26_15 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs", label="_stateMachineFactory = stateMachineFactory", span="57-57"];
m26_16 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs", label="Connection = connection", span="59-59"];
m26_17 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs", label="Job = job", span="60-60"];
m26_18 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs", label="InitialState = initialState", span="61-61"];
m26_8 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs", label="throw new ArgumentNullException(''connection'');", span="52-52"];
m26_10 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs", label="throw new ArgumentNullException(''stateMachineFactory'');", span="53-53"];
m26_12 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs", label="throw new ArgumentNullException(''job'');", span="54-54"];
m26_14 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs", label="throw new ArgumentNullException(''initialState'');", span="55-55"];
m26_19 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs", label="Items = new Dictionary<string, object>()", span="63-63"];
m26_20 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", span="46-46"];
m26_22 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisWriteOnlyQueue.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m26_35 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m26_23 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Client.CreateContext.SetJobParameter(string, object)", span="96-96"];
m26_24 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyQueue.cs", label="String.IsNullOrWhiteSpace(name)", span="98-98"];
m26_28 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyQueue.cs", label="var serializedValue = JobHelper.ToJson(value)", span="105-105"];
m26_29 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyQueue.cs", label="!_parameters.ContainsKey(name)", span="107-107"];
m26_30 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyQueue.cs", label="_parameters.Add(name, serializedValue)", span="109-109"];
m26_31 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyQueue.cs", label="_parameters[name] = serializedValue", span="113-113"];
m26_25 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyQueue.cs", label="throw new ArgumentNullException(''name'');", span="98-98"];
m26_26 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyQueue.cs", label=_jobWasCreated, span="100-100"];
m26_27 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyQueue.cs", label="throw new InvalidOperationException(''Could not set parameter for a created job.'');", span="102-102"];
m26_32 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Client.CreateContext.SetJobParameter(string, object)", span="96-96"];
m26_46 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="RedisWriteOnlyQueue.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m26_53 [cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8"];
m26_0 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="37-37"];
m26_1 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="RedisWriteOnlyQueue.cs", label="Items = context.Items", span="40-40"];
m26_2 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="RedisWriteOnlyQueue.cs", label="JobId = context.JobId", span="41-41"];
m26_3 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="RedisWriteOnlyQueue.cs", label="_jobWasCreated = context._jobWasCreated", span="42-42"];
m26_4 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="RedisWriteOnlyQueue.cs", label="_parameters = context._parameters", span="43-43"];
m26_5 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="37-37"];
m26_45 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30"];
m26_38 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129"];
m26_39 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="RedisWriteOnlyQueue.cs", label="String.IsNullOrWhiteSpace(name)", span="131-131"];
m26_41 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="RedisWriteOnlyQueue.cs", label="return _parameters.ContainsKey(name)\r\n                    ? JobHelper.FromJson<T>(_parameters[name])\r\n                    : default(T);", span="135-137"];
m26_43 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="RedisWriteOnlyQueue.cs", label="throw new InvalidOperationException(String.Format(\r\n                    ''Could not get a value of the job parameter `{0}`. See inner exception for details.'',\r\n                    name), ex);", span="141-143"];
m26_40 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="RedisWriteOnlyQueue.cs", label="throw new ArgumentNullException(''name'');", span="131-131"];
m26_42 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="RedisWriteOnlyQueue.cs", label=Exception, span="139-139"];
m26_44 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129"];
m26_33 [cluster="string.IsNullOrWhiteSpace(string)", file="RedisWriteOnlyQueue.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m26_48 [cluster="HangFire.Client.CreateContext.CreateJob()", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.Client.CreateContext.CreateJob()", span="147-147"];
m26_49 [cluster="HangFire.Client.CreateContext.CreateJob()", file="RedisWriteOnlyQueue.cs", label="var stateMachine = _stateMachineFactory.Create(Connection)", span="149-149"];
m26_50 [cluster="HangFire.Client.CreateContext.CreateJob()", file="RedisWriteOnlyQueue.cs", label="JobId = stateMachine.CreateInState(Job, _parameters, InitialState)", span="151-151"];
m26_51 [cluster="HangFire.Client.CreateContext.CreateJob()", file="RedisWriteOnlyQueue.cs", label="_jobWasCreated = true", span="152-152"];
m26_52 [cluster="HangFire.Client.CreateContext.CreateJob()", file="RedisWriteOnlyQueue.cs", label="Exit HangFire.Client.CreateContext.CreateJob()", span="147-147"];
m26_36 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="RedisWriteOnlyQueue.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m26_37 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisWriteOnlyQueue.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m26_54 [cluster="HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs", label="Entry HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", span="23-23"];
m26_47 [cluster="string.Format(string, object)", file="RedisWriteOnlyQueue.cs", label="Entry string.Format(string, object)", span="0-0"];
m26_34 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="RedisWriteOnlyQueue.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m26_55 [file="RedisWriteOnlyQueue.cs", label="HangFire.Client.CreateContext", span=""];
m27_6 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.Add(string, string)", file="RedisWriteOnlySet.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlySet.Add(string, string)", span="17-17"];
m27_8 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.Add(string, string)", file="RedisWriteOnlySet.cs", label="Exit HangFire.Redis.DataTypes.RedisWriteOnlySet.Add(string, string)", span="17-17"];
m27_14 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.Add(string, string, double)", file="RedisWriteOnlySet.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlySet.Add(string, string, double)", span="23-23"];
m27_16 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.Add(string, string, double)", file="RedisWriteOnlySet.cs", label="Exit HangFire.Redis.DataTypes.RedisWriteOnlySet.Add(string, string, double)", span="23-23"];
m27_9 [cluster="Unk.QueueCommand", file="RedisWriteOnlySet.cs", label="Entry Unk.QueueCommand", span=""];
m27_13 [cluster="Unk.AddItemToSortedSet", file="RedisWriteOnlySet.cs", label="Entry Unk.AddItemToSortedSet", span=""];
m27_23 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Entry lambda expression", span="31-32"];
m27_10 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Entry lambda expression", span="19-20"];
m27_12 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Exit lambda expression", span="19-20"];
m27_17 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Entry lambda expression", span="25-26"];
m27_19 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Exit lambda expression", span="25-26"];
m27_25 [cluster="lambda expression", file="RedisWriteOnlySet.cs", label="Exit lambda expression", span="31-32"];
m27_0 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.RedisWriteOnlySet(IRedisTransaction)", file="RedisWriteOnlySet.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlySet.RedisWriteOnlySet(IRedisTransaction)", span="10-10"];
m27_4 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.RedisWriteOnlySet(IRedisTransaction)", file="RedisWriteOnlySet.cs", label="Exit HangFire.Redis.DataTypes.RedisWriteOnlySet.RedisWriteOnlySet(IRedisTransaction)", span="10-10"];
m27_26 [cluster="Unk.RemoveItemFromSortedSet", file="RedisWriteOnlySet.cs", label="Entry Unk.RemoveItemFromSortedSet", span=""];
m27_20 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.Remove(string, string)", file="RedisWriteOnlySet.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlySet.Remove(string, string)", span="29-29"];
m27_22 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.Remove(string, string)", file="RedisWriteOnlySet.cs", label="Exit HangFire.Redis.DataTypes.RedisWriteOnlySet.Remove(string, string)", span="29-29"];
m27_27 [file="RedisWriteOnlySet.cs", label="HangFire.Redis.DataTypes.RedisWriteOnlySet", span=""];
m27_28 [file="RedisWriteOnlySet.cs", label=string, span=""];
m27_29 [file="RedisWriteOnlySet.cs", label=string, span=""];
m27_30 [file="RedisWriteOnlySet.cs", label=string, span=""];
m27_31 [file="RedisWriteOnlySet.cs", label=string, span=""];
m27_32 [file="RedisWriteOnlySet.cs", label=double, span=""];
m27_33 [file="RedisWriteOnlySet.cs", label=string, span=""];
m27_34 [file="RedisWriteOnlySet.cs", label=string, span=""];
m28_77 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m28_16 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="33-33"];
m28_17 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="String.IsNullOrEmpty(jobId)", span="36-36"];
m28_21 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="state == null", span="38-38"];
m28_25 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="!typeof(BackgroundJob).IsAssignableFrom(jobType)", span="41-41"];
m28_26 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="throw new ArgumentException(\r\n                    String.Format(''The type '{0}' must inherit '{1}'.'', jobType, typeof(BackgroundJob)),\r\n                    ''jobType'');", span="43-45"];
m28_27 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="var jobParameters = CreateJobParameters(jobType, args)", span="50-50"];
m28_28 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="var context = new CreateContext(\r\n                    new ClientJobDescriptor(_redis, jobId, jobParameters, state))", span="52-53"];
m28_30 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="return jobId;", span="57-57"];
m28_18 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''jobId'');", span="36-36"];
m28_22 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''state'');", span="38-38"];
m28_29 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="_jobCreator.CreateJob(context)", span="55-55"];
m28_31 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label=Exception, span="59-59"];
m28_32 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="throw new CreateJobFailedException(''Job creation was failed. See the inner exception for details.'', ex);", span="61-61"];
m28_33 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="33-33"];
m28_37 [cluster="string.Format(string, object, object)", file="RedisWriteOnlyTransaction.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m28_75 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="RedisWriteOnlyTransaction.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
m28_43 [cluster="HangFire.Client.JobClient.Dispose()", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Client.JobClient.Dispose()", span="65-65"];
m28_44 [cluster="HangFire.Client.JobClient.Dispose()", file="RedisWriteOnlyTransaction.cs", label="_redis.Dispose()", span="67-67"];
m28_45 [cluster="HangFire.Client.JobClient.Dispose()", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Client.JobClient.Dispose()", span="65-65"];
m28_38 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="70-70"];
m28_47 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="var job = new Dictionary<string, string>()", span="73-73"];
m28_48 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="job[''Type''] = jobType.AssemblyQualifiedName", span="74-74"];
m28_49 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="job[''Args''] = JobHelper.ToJson(jobArgs)", span="75-75"];
m28_50 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="job[''State''] = String.Empty", span="76-76"];
m28_51 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="job[''CreatedAt''] = JobHelper.ToStringTimestamp(DateTime.UtcNow)", span="77-77"];
m28_52 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="return job;", span="79-79"];
m28_53 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="70-70"];
m28_35 [cluster="System.Type.IsAssignableFrom(System.Type)", file="RedisWriteOnlyTransaction.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m28_73 [cluster="object.GetType()", file="RedisWriteOnlyTransaction.cs", label="Entry object.GetType()", span="0-0"];
m28_55 [cluster="HangFire.JobHelper.ToJson(object)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="40-40"];
m28_56 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="63-63"];
m28_71 [cluster="System.ComponentModel.TypeDescriptor.GetProperties(object)", file="RedisWriteOnlyTransaction.cs", label="Entry System.ComponentModel.TypeDescriptor.GetProperties(object)", span="0-0"];
m28_0 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="13-13"];
m28_1 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="13-13"];
m28_2 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="18-18"];
m28_7 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="RedisWriteOnlyTransaction.cs", label="_redis = redisManager.GetClient()", span="23-23"];
m28_8 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="RedisWriteOnlyTransaction.cs", label="_jobCreator = jobCreator", span="24-24"];
m28_9 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="18-18"];
m28_74 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="RedisWriteOnlyTransaction.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m28_11 [cluster="Unk.GetClient", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.GetClient", span=""];
m28_54 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m28_76 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="RedisWriteOnlyTransaction.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m28_72 [cluster="System.ComponentModel.PropertyDescriptor.GetValue(object)", file="RedisWriteOnlyTransaction.cs", label="Entry System.ComponentModel.PropertyDescriptor.GetValue(object)", span="0-0"];
m28_34 [cluster="string.IsNullOrEmpty(string)", file="RedisWriteOnlyTransaction.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m28_46 [cluster="Unk.Dispose", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Dispose", span=""];
m28_41 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="38-38"];
m28_42 [cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="22-22"];
m28_15 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Client.JobClient.PropertiesToDictionary(object)", span="82-82"];
m28_57 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs", label="var result = new Dictionary<string, string>()", span="84-84"];
m28_58 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs", label="obj == null", span="85-85"];
m28_60 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs", label="TypeDescriptor.GetProperties(obj)", span="87-87"];
m28_61 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs", label="var propertyValue = descriptor.GetValue(obj)", span="89-89"];
m28_59 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs", label="return result;", span="85-85"];
m28_68 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs", label="result.Add(descriptor.Name, value)", span="110-110"];
m28_69 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs", label="return result;", span="113-113"];
m28_67 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs", label="throw new InvalidOperationException(\r\n                            String.Format(\r\n                                ''Could not convert property '{0}' of type '{1}' to a string. See the inner exception for details.'',\r\n                                descriptor.Name,\r\n                                descriptor.PropertyType),\r\n                            ex);", span="101-106"];
m28_62 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs", label="string value = null", span="90-90"];
m28_63 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs", label="propertyValue != null", span="92-92"];
m28_64 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs", label="var converter = TypeDescriptor.GetConverter(propertyValue.GetType())", span="96-96"];
m28_65 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs", label="value = converter.ConvertToInvariantString(propertyValue)", span="97-97"];
m28_66 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs", label=Exception, span="99-99"];
m28_70 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Client.JobClient.PropertiesToDictionary(object)", span="82-82"];
m28_40 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="15-15"];
m28_36 [cluster="System.ArgumentException.ArgumentException(string, string)", file="RedisWriteOnlyTransaction.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m28_12 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27"];
m28_14 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27"];
m28_39 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12"];
m28_78 [file="RedisWriteOnlyTransaction.cs", label="HangFire.Client.JobClient", span=""];
m29_44 [cluster="Unk.NotNull", file="RedisWriteOnlyValue.cs", label="Entry Unk.NotNull", span=""];
m29_19 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="RedisWriteOnlyValue.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", span="29-29"];
m29_22 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="RedisWriteOnlyValue.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", span="29-29"];
m29_15 [cluster="Unk.>", file="RedisWriteOnlyValue.cs", label="Entry Unk.>", span=""];
m29_11 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", file="RedisWriteOnlyValue.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", span="20-20"];
m29_14 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", file="RedisWriteOnlyValue.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", span="20-20"];
m29_33 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="RedisWriteOnlyValue.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", span="47-47"];
m29_34 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="RedisWriteOnlyValue.cs", label="var options = CreateOptions()", span="49-49"];
m29_35 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="RedisWriteOnlyValue.cs", label="Assert.Throws<ArgumentException>(\r\n                () => options.Queues = new string[0])", span="51-52"];
m29_36 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="RedisWriteOnlyValue.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", span="47-47"];
m29_40 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", file="RedisWriteOnlyValue.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", span="56-56"];
m29_41 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", file="RedisWriteOnlyValue.cs", label="var options = CreateOptions()", span="58-58"];
m29_42 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", file="RedisWriteOnlyValue.cs", label="Assert.NotNull(options.ServerWatchdogOptions)", span="60-60"];
m29_43 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", file="RedisWriteOnlyValue.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", span="56-56"];
m29_8 [cluster="System.Math.Min(int, int)", file="RedisWriteOnlyValue.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m29_10 [cluster="Unk.True", file="RedisWriteOnlyValue.cs", label="Entry Unk.True", span=""];
m29_9 [cluster="Unk.Equal", file="RedisWriteOnlyValue.cs", label="Entry Unk.Equal", span=""];
m29_0 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="RedisWriteOnlyValue.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", span="9-9"];
m29_6 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="RedisWriteOnlyValue.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", span="9-9"];
m29_26 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", file="RedisWriteOnlyValue.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", span="38-38"];
m29_27 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", file="RedisWriteOnlyValue.cs", label="var options = CreateOptions()", span="40-40"];
m29_28 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", file="RedisWriteOnlyValue.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => options.Queues = null)", span="42-43"];
m29_29 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", file="RedisWriteOnlyValue.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", span="38-38"];
m29_47 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="RedisWriteOnlyValue.cs", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="32-32"];
m29_37 [cluster="lambda expression", file="RedisWriteOnlyValue.cs", label="Entry lambda expression", span="52-52"];
m29_16 [cluster="lambda expression", file="RedisWriteOnlyValue.cs", label="Entry lambda expression", span="25-25"];
m29_18 [cluster="lambda expression", file="RedisWriteOnlyValue.cs", label="Exit lambda expression", span="25-25"];
m29_23 [cluster="lambda expression", file="RedisWriteOnlyValue.cs", label="Entry lambda expression", span="34-34"];
m29_25 [cluster="lambda expression", file="RedisWriteOnlyValue.cs", label="Exit lambda expression", span="34-34"];
m29_31 [cluster="lambda expression", file="RedisWriteOnlyValue.cs", label="options.Queues = null", span="43-43"];
m29_30 [cluster="lambda expression", file="RedisWriteOnlyValue.cs", label="Entry lambda expression", span="43-43"];
m29_32 [cluster="lambda expression", file="RedisWriteOnlyValue.cs", label="Exit lambda expression", span="43-43"];
m29_38 [cluster="lambda expression", file="RedisWriteOnlyValue.cs", label="options.Queues = new string[0]", span="52-52"];
m29_39 [cluster="lambda expression", file="RedisWriteOnlyValue.cs", label="Exit lambda expression", span="52-52"];
m29_7 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", file="RedisWriteOnlyValue.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", span="63-63"];
m29_45 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", file="RedisWriteOnlyValue.cs", label="return new BackgroundJobServerOptions();", span="65-65"];
m29_46 [cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", file="RedisWriteOnlyValue.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", span="63-63"];
m29_48 [file="RedisWriteOnlyValue.cs", label=options, span=""];
m29_49 [file="RedisWriteOnlyValue.cs", label=options, span=""];
m29_50 [file="RedisWriteOnlyValue.cs", label=options, span=""];
m29_51 [file="RedisWriteOnlyValue.cs", label=options, span=""];
m30_13 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="ScheduledState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="24-24"];
m30_8 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledState.cs", label="Entry HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="46-46"];
m30_9 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="ScheduledState.cs", label="var timestamp = long.Parse(stateData[''EnqueueAt''])", prediction=28, span="48-48"];
m30_10 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledState.cs", label="context.Transaction.AddToSet(''schedule'', context.JobId, timestamp)", span="49-49"];
m30_11 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledState.cs", label="Exit HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="46-46"];
m30_12 [cluster="long.Parse(string)", file="ScheduledState.cs", label="Entry long.Parse(string)", span="0-0"];
m31_11 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", file="SchedulePoller.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m31_0 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="SchedulePoller.cs", label="Entry Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25"];
m31_1 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="SchedulePoller.cs", label="serverId == null", span="30-30"];
m31_3 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="SchedulePoller.cs", label="storage == null", span="31-31"];
m31_6 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="SchedulePoller.cs", label="ServerId = serverId", span="35-35"];
m31_7 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="SchedulePoller.cs", label="Storage = storage", span="36-36"];
m31_8 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="SchedulePoller.cs", label="CancellationToken = cancellationToken", span="37-37"];
m31_2 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="SchedulePoller.cs", label="throw new ArgumentNullException(''serverId'');", span="30-30"];
m31_4 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="SchedulePoller.cs", label="throw new ArgumentNullException(''storage'');", span="31-31"];
m31_5 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="SchedulePoller.cs", label="ServerData = new Dictionary<string, object>(StringComparer.OrdinalIgnoreCase)", span="33-33"];
m31_9 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="SchedulePoller.cs", label="Exit Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25"];
m31_12 [file="SchedulePoller.cs", label="Hangfire.Server.BackgroundProcessContext", span=""];
m32_96 [cluster="Mock<T>.cstr", file="SqlServerConnection.cs", label="Entry Mock<T>.cstr", span=""];
m32_10 [cluster="System.Collections.Generic.List<T>.List()", file="SqlServerConnection.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m32_7 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="11-11"];
m32_42 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="50-50"];
m32_43 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="SqlServerConnection.cs", label="var server = CreateServer()", span="52-52"];
m32_44 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="SqlServerConnection.cs", label="server.Execute(_context.Object)", span="54-54"];
m32_45 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="SqlServerConnection.cs", label="_context.Storage.Verify(x => x.GetConnection(), Times.Exactly(2))", span="56-56"];
m32_46 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="SqlServerConnection.cs", label="_connection.Verify(x => x.Dispose(), Times.Exactly(2))", span="57-57"];
m32_47 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="50-50"];
m32_33 [cluster="Hangfire.Server.ServerBootstrapper.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerConnection.cs", label="Entry Hangfire.Server.ServerBootstrapper.Execute(Hangfire.Server.BackgroundProcessContext)", span="33-33"];
m32_22 [cluster="Unk.Equal", file="SqlServerConnection.cs", label="Entry Unk.Equal", span=""];
m32_9 [cluster="Mock<IStorageConnection>.cstr", file="SqlServerConnection.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m32_0 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", span="17-17"];
m32_3 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=green, community=0, file="SqlServerConnection.cs", label="_connection = new Mock<IStorageConnection>()", prediction=29, span="22-22"];
m32_2 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerConnection.cs", label="_context.Object.ServerData.Add(''Queues'', _queues)", span="20-20"];
m32_4 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=green, community=0, file="SqlServerConnection.cs", label="_processes = new List<ILongRunningProcess>()", prediction=30, span="23-23"];
m32_5 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerConnection.cs", label="_context.Storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="25-25"];
m32_1 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerConnection.cs", label="_context = new BackgroundProcessContextMock()", span="19-19"];
m32_6 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", span="17-17"];
m32_56 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", span="61-61"];
m32_57 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="SqlServerConnection.cs", label="var component1 = CreateProcessMock<IServerComponent>()", span="64-64"];
m32_59 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="SqlServerConnection.cs", label="var component2 = CreateProcessMock<IBackgroundProcess>()", span="67-67"];
m32_60 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="SqlServerConnection.cs", label="var server = CreateServer()", span="68-68"];
m32_61 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="SqlServerConnection.cs", label="server.Execute(_context.Object)", span="71-71"];
m32_62 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="SqlServerConnection.cs", label="component1.Verify(x => x.Execute(_context.CancellationTokenSource.Token))", span="74-74"];
m32_63 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="SqlServerConnection.cs", label="component2.Verify(x => x.Execute(_context.Object))", span="75-75"];
m32_58 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="SqlServerConnection.cs", label="component1.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Callback(() => Thread.Sleep(100))", span="65-65"];
m32_64 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", span="61-61"];
m32_74 [cluster="System.Threading.Thread.Sleep(int)", file="SqlServerConnection.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m32_21 [cluster="Unk.>", file="SqlServerConnection.cs", label="Entry Unk.>", span=""];
m32_65 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateProcessMock<T>()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateProcessMock<T>()", span="93-93"];
m32_92 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateProcessMock<T>()", color=green, community=0, file="SqlServerConnection.cs", label="var mock = new Mock<T>()", prediction=31, span="96-96"];
m32_93 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateProcessMock<T>()", color=green, community=0, file="SqlServerConnection.cs", label="_processes.Add(mock.Object)", prediction=32, span="97-97"];
m32_94 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateProcessMock<T>()", color=green, community=0, file="SqlServerConnection.cs", label="return mock;", prediction=31, span="99-99"];
m32_95 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateProcessMock<T>()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateProcessMock<T>()", span="93-93"];
m32_32 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="88-88"];
m32_90 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="SqlServerConnection.cs", label="return new ServerBootstrapper(_processes);", span="90-90"];
m32_91 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="88-88"];
m32_16 [cluster="Unk.GetConnection", file="SqlServerConnection.cs", label="Entry Unk.GetConnection", span=""];
m32_97 [cluster="Unk.Add", file="SqlServerConnection.cs", label="Entry Unk.Add", span=""];
m32_81 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="79-79"];
m32_82 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="SqlServerConnection.cs", label="var server = CreateServer()", span="81-81"];
m32_83 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="SqlServerConnection.cs", label="server.Execute(_context.Object)", span="83-83"];
m32_84 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="SqlServerConnection.cs", label="_connection.Verify(x => x.RemoveServer(_context.ServerId))", span="85-85"];
m32_85 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="79-79"];
m32_11 [cluster="Unk.Setup", file="SqlServerConnection.cs", label="Entry Unk.Setup", span=""];
m32_55 [cluster="Unk.Dispose", file="SqlServerConnection.cs", label="Entry Unk.Dispose", span=""];
m32_27 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="38-38"];
m32_28 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="SqlServerConnection.cs", label="var server = CreateServer()", span="40-40"];
m32_29 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="SqlServerConnection.cs", label="server.Execute(_context.Object)", span="42-42"];
m32_30 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="SqlServerConnection.cs", label="_connection.Verify(x => x.AnnounceServer(\r\n                _context.ServerId, \r\n                It.Is<ServerContext>(y => y.Queues == _queues)))", span="44-46"];
m32_31 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="38-38"];
m32_48 [cluster="Unk.Exactly", file="SqlServerConnection.cs", label="Entry Unk.Exactly", span=""];
m32_23 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="32-32"];
m32_36 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.AnnounceServer(\r\n                _context.ServerId, \r\n                It.Is<ServerContext>(y => y.Queues == _queues))", span="44-46"];
m32_40 [cluster="lambda expression", file="SqlServerConnection.cs", label="y.Queues == _queues", span="46-46"];
m32_76 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.Execute(_context.CancellationTokenSource.Token)", span="74-74"];
m32_79 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.Execute(_context.Object)", span="75-75"];
m32_87 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.RemoveServer(_context.ServerId)", span="85-85"];
m32_13 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="25-25"];
m32_35 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="44-46"];
m32_37 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="44-46"];
m32_39 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="46-46"];
m32_41 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="46-46"];
m32_49 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="56-56"];
m32_52 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="57-57"];
m32_75 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="74-74"];
m32_77 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="74-74"];
m32_78 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="75-75"];
m32_80 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="75-75"];
m32_86 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="85-85"];
m32_88 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="85-85"];
m32_15 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="25-25"];
m32_14 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.GetConnection()", span="25-25"];
m32_68 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="65-65"];
m32_51 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="56-56"];
m32_50 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.GetConnection()", span="56-56"];
m32_54 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="57-57"];
m32_53 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.Dispose()", span="57-57"];
m32_67 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="65-65"];
m32_71 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="65-65"];
m32_24 [cluster="lambda expression", file="SqlServerConnection.cs", label="new ServerBootstrapper(null)", span="32-32"];
m32_69 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="65-65"];
m32_73 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="65-65"];
m32_72 [cluster="lambda expression", file="SqlServerConnection.cs", label="Thread.Sleep(100)", span="65-65"];
m32_25 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="32-32"];
m32_38 [cluster="Unk.AnnounceServer", file="SqlServerConnection.cs", label="Entry Unk.AnnounceServer", span=""];
m32_17 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenProcessesCollection_IsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenProcessesCollection_IsNull()", span="29-29"];
m32_18 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenProcessesCollection_IsNull()", file="SqlServerConnection.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(null))", span="31-32"];
m32_19 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenProcessesCollection_IsNull()", file="SqlServerConnection.cs", label="Assert.Equal(''processes'', exception.ParamName)", span="34-34"];
m32_20 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenProcessesCollection_IsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenProcessesCollection_IsNull()", span="29-29"];
m32_89 [cluster="Unk.RemoveServer", file="SqlServerConnection.cs", label="Entry Unk.RemoveServer", span=""];
m32_70 [cluster="Unk.Execute", file="SqlServerConnection.cs", label="Entry Unk.Execute", span=""];
m32_66 [cluster="Unk.Callback", file="SqlServerConnection.cs", label="Entry Unk.Callback", span=""];
m32_12 [cluster="Unk.Returns", file="SqlServerConnection.cs", label="Entry Unk.Returns", span=""];
m32_8 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="SqlServerConnection.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m32_26 [cluster="Hangfire.Server.ServerBootstrapper.ServerBootstrapper(System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>)", file="SqlServerConnection.cs", label="Entry Hangfire.Server.ServerBootstrapper.ServerBootstrapper(System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>)", span="27-27"];
m32_34 [cluster="Unk.Verify", file="SqlServerConnection.cs", label="Entry Unk.Verify", span=""];
m32_98 [file="SqlServerConnection.cs", label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", span=""];
m35_3 [cluster="HangFire.SqlServer.DataTypes.SqlServerSet.GetFirstByLowestScore(string, long, long)", file="SqlServerSet.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerSet.GetFirstByLowestScore(string, long, long)", span="16-16"];
m35_5 [cluster="HangFire.SqlServer.DataTypes.SqlServerSet.GetFirstByLowestScore(string, long, long)", file="SqlServerSet.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerSet.GetFirstByLowestScore(string, long, long)", span="16-16"];
m35_7 [cluster="Unk.SingleOrDefault", file="SqlServerSet.cs", label="Entry Unk.SingleOrDefault", span=""];
m35_6 [cluster="Unk.>", file="SqlServerSet.cs", label="Entry Unk.>", span=""];
m35_0 [cluster="HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", file="SqlServerSet.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", span="11-11"];
m35_2 [cluster="HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", file="SqlServerSet.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", span="11-11"];
m35_8 [file="SqlServerSet.cs", label="HangFire.SqlServer.DataTypes.SqlServerSet", span=""];
m36_25 [cluster="Unk.OnScenarioStart", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.OnScenarioStart", span=""];
m36_29 [cluster="Unk.CollectScenarioErrors", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m36_21 [cluster="Unk.OnScenarioEnd", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.OnScenarioEnd", span=""];
m36_55 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", span="119-119"];
m36_56 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="SqlServerWriteOnlyCounter.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher returns null when it tries to dequeue a job from an empty queue'', ((string[])(null)))", span="121-121"];
m36_57 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="SqlServerWriteOnlyCounter.cs", label="this.ScenarioSetup(scenarioInfo)", span="123-123"];
m36_58 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.Given(''an empty queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="125-125"];
m36_59 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="127-127"];
m36_60 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="129-129"];
m36_61 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.Then(''the fetcher does not return any job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="131-131"];
m36_62 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="SqlServerWriteOnlyCounter.cs", label="this.ScenarioCleanup()", span="133-133"];
m36_63 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", span="119-119"];
m36_41 [cluster="Unk.And", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.And", span=""];
m36_54 [cluster="Unk.But", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.But", span=""];
m36_5 [cluster="Unk.GetTestRunner", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.GetTestRunner", span=""];
m36_26 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", span="66-66"];
m36_27 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m36_28 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", span="66-66"];
m36_0 [cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m36_4 [cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m36_76 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", span="167-167"];
m36_77 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="SqlServerWriteOnlyCounter.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher listens only specified queue'', ((string[])(null)))", span="169-169"];
m36_78 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="SqlServerWriteOnlyCounter.cs", label="this.ScenarioSetup(scenarioInfo)", span="171-171"];
m36_79 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.Given(''a job in the \'another\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="173-173"];
m36_80 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.And(''the fetcher listening the \'default\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="175-175"];
m36_81 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="177-177"];
m36_82 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.Then(''the fetcher does not return any job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="179-179"];
m36_83 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="SqlServerWriteOnlyCounter.cs", label="this.ScenarioCleanup()", span="181-181"];
m36_84 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", span="167-167"];
m36_30 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", span="75-75"];
m36_31 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher returns the job payload when it dequeues a job'', ((string[])(null)))", span="77-77"];
m36_32 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs", label="this.ScenarioSetup(scenarioInfo)", span="79-79"];
m36_33 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="81-81"];
m36_34 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="83-83"];
m36_35 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="85-85"];
m36_36 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.Then(''the fetcher returns the payload'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="87-87"];
m36_37 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs", label="this.ScenarioCleanup()", span="89-89"];
m36_38 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", span="75-75"];
m36_9 [cluster="HangFire.Tests.JobFetcherFeature.FeatureTearDown()", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.Tests.JobFetcherFeature.FeatureTearDown()", span="39-39"];
m36_12 [cluster="HangFire.Tests.JobFetcherFeature.FeatureTearDown()", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.Tests.JobFetcherFeature.FeatureTearDown()", span="39-39"];
m36_13 [cluster="Unk.OnFeatureEnd", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.OnFeatureEnd", span=""];
m36_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="SqlServerWriteOnlyCounter.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m36_42 [cluster="Unk.When", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.When", span=""];
m36_44 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="96-96"];
m36_45 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="SqlServerWriteOnlyCounter.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher removes the dequeued job from the queue and adds it to the dequeued list'', ((string[])(null)))", span="98-98"];
m36_46 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="SqlServerWriteOnlyCounter.cs", label="this.ScenarioSetup(scenarioInfo)", span="100-100"];
m36_47 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="102-102"];
m36_48 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="104-104"];
m36_49 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="106-106"];
m36_50 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.Then(''the queue does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="108-108"];
m36_51 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.But(''the dequeued jobs list contains it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="110-110"];
m36_52 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="SqlServerWriteOnlyCounter.cs", label="this.ScenarioCleanup()", span="112-112"];
m36_53 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="96-96"];
m36_64 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", span="140-140"];
m36_65 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher dequeues jobs in the FIFO order'', ((string[])(null)))", span="142-142"];
m36_66 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs", label="this.ScenarioSetup(scenarioInfo)", span="144-144"];
m36_67 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.Given(''the \'first\' job in the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="146-146"];
m36_68 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.And(''the \'second\' job in the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="148-148"];
m36_69 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="150-150"];
m36_70 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.When(''it dequeues a job for the first time'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="152-152"];
m36_71 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.Then(''the fetcher returns the \'first\' job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="154-154"];
m36_72 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.When(''it dequeues a job for the second time'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="156-156"];
m36_73 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.Then(''the fetcher returns the \'second\' job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="158-158"];
m36_74 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs", label="this.ScenarioCleanup()", span="160-160"];
m36_75 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", span="140-140"];
m36_39 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="SqlServerWriteOnlyCounter.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m36_43 [cluster="Unk.Then", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.Then", span=""];
m36_40 [cluster="Unk.Given", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.Given", span=""];
m36_85 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", span="188-188"];
m36_86 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher sets the \'fetched\' flag when it dequeues a job'', ((string[])(null)))", span="190-190"];
m36_87 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs", label="this.ScenarioSetup(scenarioInfo)", span="192-192"];
m36_88 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="194-194"];
m36_89 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="196-196"];
m36_90 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="198-198"];
m36_91 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.Then(''the job has the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="200-200"];
m36_92 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs", label="this.ScenarioCleanup()", span="202-202"];
m36_93 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", span="188-188"];
m36_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="SqlServerWriteOnlyCounter.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m36_14 [cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.Tests.JobFetcherFeature.TestInitialize()", span="46-46"];
m36_15 [cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="SqlServerWriteOnlyCounter.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''JobFetcher''))", span="48-49"];
m36_16 [cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="SqlServerWriteOnlyCounter.cs", label="HangFire.Tests.JobFetcherFeature.FeatureSetup(null)", span="51-51"];
m36_17 [cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.Tests.JobFetcherFeature.TestInitialize()", span="46-46"];
m36_18 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", span="56-56"];
m36_19 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", file="SqlServerWriteOnlyCounter.cs", label="testRunner.OnScenarioEnd()", span="58-58"];
m36_20 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", span="56-56"];
m36_22 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="SqlServerWriteOnlyCounter.cs", label="Entry HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m36_23 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="SqlServerWriteOnlyCounter.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m36_24 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="SqlServerWriteOnlyCounter.cs", label="Exit HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m36_8 [cluster="Unk.OnFeatureStart", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.OnFeatureStart", span=""];
m36_94 [file="SqlServerWriteOnlyCounter.cs", label="HangFire.Tests.JobFetcherFeature", span=""];
m37_11 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerWriteOnlyJob.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m37_8 [cluster="HangFire.States.ProcessingState.SerializeData()", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.States.ProcessingState.SerializeData()", span="41-41"];
m37_10 [cluster="HangFire.States.ProcessingState.SerializeData()", file="SqlServerWriteOnlyJob.cs", label="Exit HangFire.States.ProcessingState.SerializeData()", span="41-41"];
m37_6 [cluster="string.IsNullOrWhiteSpace(string)", file="SqlServerWriteOnlyJob.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m37_0 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="26-26"];
m37_5 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="SqlServerWriteOnlyJob.cs", label="Exit HangFire.States.ProcessingState.ProcessingState(string)", span="26-26"];
m37_12 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m37_13 [file="SqlServerWriteOnlyJob.cs", label="HangFire.States.ProcessingState", span=""];
m38_14 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", file="SqlServerWriteOnlyList.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", span="24-24"];
m38_16 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", file="SqlServerWriteOnlyList.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", span="24-24"];
m38_13 [cluster="Unk.Execute", file="SqlServerWriteOnlyList.cs", label="Entry Unk.Execute", span=""];
m38_0 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyList.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m38_4 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyList.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m38_20 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", file="SqlServerWriteOnlyList.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", span="31-31"];
m38_23 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", file="SqlServerWriteOnlyList.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", span="31-31"];
m38_9 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyList.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="39-39"];
m38_6 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", file="SqlServerWriteOnlyList.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", span="17-17"];
m38_8 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", file="SqlServerWriteOnlyList.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", span="17-17"];
m38_24 [cluster="lambda expression", file="SqlServerWriteOnlyList.cs", label="Entry lambda expression", span="38-40"];
m38_10 [cluster="lambda expression", file="SqlServerWriteOnlyList.cs", label="Entry lambda expression", span="19-21"];
m38_12 [cluster="lambda expression", file="SqlServerWriteOnlyList.cs", label="Exit lambda expression", span="19-21"];
m38_17 [cluster="lambda expression", file="SqlServerWriteOnlyList.cs", label="Entry lambda expression", span="26-28"];
m38_19 [cluster="lambda expression", file="SqlServerWriteOnlyList.cs", label="Exit lambda expression", span="26-28"];
m38_26 [cluster="lambda expression", file="SqlServerWriteOnlyList.cs", label="Exit lambda expression", span="38-40"];
m38_27 [file="SqlServerWriteOnlyList.cs", label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList", span=""];
m38_28 [file="SqlServerWriteOnlyList.cs", label=string, span=""];
m38_29 [file="SqlServerWriteOnlyList.cs", label=string, span=""];
m38_30 [file="SqlServerWriteOnlyList.cs", label=string, span=""];
m38_31 [file="SqlServerWriteOnlyList.cs", label=string, span=""];
m38_32 [file="SqlServerWriteOnlyList.cs", label=int, span=""];
m38_33 [file="SqlServerWriteOnlyList.cs", label=int, span=""];
m38_34 [file="SqlServerWriteOnlyList.cs", label=trimSql, span=""];
m39_0 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m39_4 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m39_14 [cluster="Unk.Execute", file="SqlServerWriteOnlyQueue.cs", label="Entry Unk.Execute", span=""];
m39_10 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="39-39"];
m39_6 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", file="SqlServerWriteOnlyQueue.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", span="17-17"];
m39_9 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", file="SqlServerWriteOnlyQueue.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", span="17-17"];
m39_11 [cluster="lambda expression", file="SqlServerWriteOnlyQueue.cs", label="Entry lambda expression", span="23-25"];
m39_13 [cluster="lambda expression", file="SqlServerWriteOnlyQueue.cs", label="Exit lambda expression", span="23-25"];
m39_15 [file="SqlServerWriteOnlyQueue.cs", label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue", span=""];
m39_16 [file="SqlServerWriteOnlyQueue.cs", label=string, span=""];
m39_17 [file="SqlServerWriteOnlyQueue.cs", label=string, span=""];
m39_18 [file="SqlServerWriteOnlyQueue.cs", label=enqueueJobSql, span=""];
m40_6 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.Add(string, string)", file="SqlServerWriteOnlySet.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.Add(string, string)", span="17-17"];
m40_8 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.Add(string, string)", file="SqlServerWriteOnlySet.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.Add(string, string)", span="17-17"];
m40_10 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.Add(string, string, double)", file="SqlServerWriteOnlySet.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.Add(string, string, double)", span="22-22"];
m40_13 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.Add(string, string, double)", file="SqlServerWriteOnlySet.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.Add(string, string, double)", span="22-22"];
m40_18 [cluster="Unk.Execute", file="SqlServerWriteOnlySet.cs", label="Entry Unk.Execute", span=""];
m40_19 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", file="SqlServerWriteOnlySet.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", span="36-36"];
m40_21 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", file="SqlServerWriteOnlySet.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", span="36-36"];
m40_0 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.SqlServerWriteOnlySet(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlySet.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.SqlServerWriteOnlySet(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m40_4 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.SqlServerWriteOnlySet(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlySet.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.SqlServerWriteOnlySet(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m40_14 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlySet.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="39-39"];
m40_22 [cluster="lambda expression", file="SqlServerWriteOnlySet.cs", label="Entry lambda expression", span="38-40"];
m40_15 [cluster="lambda expression", file="SqlServerWriteOnlySet.cs", label="Entry lambda expression", span="31-33"];
m40_17 [cluster="lambda expression", file="SqlServerWriteOnlySet.cs", label="Exit lambda expression", span="31-33"];
m40_24 [cluster="lambda expression", file="SqlServerWriteOnlySet.cs", label="Exit lambda expression", span="38-40"];
m40_9 [cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", file="SqlServerWriteOnlySet.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", span="5-5"];
m40_25 [file="SqlServerWriteOnlySet.cs", label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet", span=""];
m40_26 [file="SqlServerWriteOnlySet.cs", label=string, span=""];
m40_27 [file="SqlServerWriteOnlySet.cs", label=string, span=""];
m40_28 [file="SqlServerWriteOnlySet.cs", label=double, span=""];
m40_29 [file="SqlServerWriteOnlySet.cs", label=addSql, span=""];
m40_30 [file="SqlServerWriteOnlySet.cs", label=string, span=""];
m40_31 [file="SqlServerWriteOnlySet.cs", label=string, span=""];
m41_22 [cluster="HangFire.JobActivator.JobActivator()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.JobActivator.JobActivator()", span="4-4"];
m41_31 [cluster="System.Threading.Thread.Join()", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m41_51 [cluster="HangFire.Server.JobServer.RunServer()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Server.JobServer.RunServer()", span="98-98"];
m41_52 [cluster="HangFire.Server.JobServer.RunServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="AnnounceServer()", prediction=34, span="102-102"];
m41_53 [cluster="HangFire.Server.JobServer.RunServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="StartServer()", prediction=34, span="103-103"];
m41_54 [cluster="HangFire.Server.JobServer.RunServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label=true, prediction=36, span="105-105"];
m41_56 [cluster="HangFire.Server.JobServer.RunServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="_stopped.WaitOne(HeartbeatInterval)", prediction=34, span="109-109"];
m41_55 [cluster="HangFire.Server.JobServer.RunServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="Heartbeat()", prediction=34, span="107-107"];
m41_57 [cluster="HangFire.Server.JobServer.RunServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="StopServer()", prediction=34, span="115-115"];
m41_60 [cluster="HangFire.Server.JobServer.RunServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="_logger.Fatal(''Unexpected exception caught.'', ex)", prediction=34, span="120-120"];
m41_58 [cluster="HangFire.Server.JobServer.RunServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="RemoveServer(_redis, _context.ServerName)", prediction=34, span="116-116"];
m41_59 [cluster="HangFire.Server.JobServer.RunServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label=Exception, prediction=42, span="118-118"];
m41_61 [cluster="HangFire.Server.JobServer.RunServer()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Server.JobServer.RunServer()", span="98-98"];
m41_0 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", span="33-33"];
m41_1 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="SqlServerWriteOnlyTransaction.cs", label="_redis = redisManager.GetClient()", span="41-41"];
m41_2 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="SqlServerWriteOnlyTransaction.cs", label="_redisManager = redisManager", span="43-43"];
m41_3 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="SqlServerWriteOnlyTransaction.cs", label="_workerCount = workerCount", span="44-44"];
m41_5 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="SqlServerWriteOnlyTransaction.cs", label="_pollInterval = pollInterval", span="46-46"];
m41_6 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="queues == null", prediction=34, span="48-48"];
m41_7 [cluster="HangFire.States.FailedState.SerializeData()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.States.FailedState.SerializeData()", prediction=44, span="42-42"];
m41_8 [cluster="HangFire.States.FailedState.SerializeData()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="return new Dictionary<string, string>\r\n            {\r\n                { ''FailedAt'', JobHelper.SerializeDateTime(FailedAt) },\r\n                { ''ExceptionType'', Exception.GetType().FullName },\r\n                { ''ExceptionMessage'', Exception.Message },\r\n                { ''ExceptionDetails'', Exception.ToString() }\r\n            };", prediction=34, span="44-50"];
m41_9 [cluster="HangFire.States.FailedState.SerializeData()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.States.FailedState.SerializeData()", prediction=46, span="42-42"];
m41_10 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", prediction=34, span="0-0"];
m41_11 [cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", prediction=34, span="50-50"];
m41_12 [cluster="System.Exception.GetType()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Exception.GetType()", prediction=34, span="0-0"];
m41_13 [cluster="System.Exception.ToString()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Exception.ToString()", prediction=34, span="0-0"];
m41_14 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="SqlServerWriteOnlyTransaction.cs", label="HangFire.States.FailedState", span=""];
m41_89 [cluster="Unk.SetRangeInHash", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.SetRangeInHash", span=""];
m41_20 [cluster="string.Format(string, object, object)", file="SqlServerWriteOnlyTransaction.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m41_25 [cluster="System.Threading.Thread.Start()", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m41_26 [cluster="HangFire.Server.JobServer.Dispose()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Server.JobServer.Dispose()", span="70-70"];
m41_27 [cluster="HangFire.Server.JobServer.Dispose()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="_stopped.Set()", prediction=34, span="72-72"];
m41_28 [cluster="HangFire.Server.JobServer.Dispose()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="_serverThread.Join()", prediction=34, span="73-73"];
m41_29 [cluster="HangFire.Server.JobServer.Dispose()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Server.JobServer.Dispose()", span="70-70"];
m41_42 [cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", span="21-21"];
m41_96 [cluster="Unk.SetEntryInHash", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.SetEntryInHash", span=""];
m41_81 [cluster="Unk.AddItemToSet", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.AddItemToSet", span=""];
m41_85 [cluster="string.Format(string, object)", file="SqlServerWriteOnlyTransaction.cs", label="Entry string.Format(string, object)", span="0-0"];
m41_88 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m41_41 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", span="21-21"];
m41_109 [cluster="Unk.RemoveEntry", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.RemoveEntry", span=""];
m41_18 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m41_87 [cluster="int.ToString()", file="SqlServerWriteOnlyTransaction.cs", label="Entry int.ToString()", span="0-0"];
m41_19 [cluster="System.Diagnostics.Process.GetCurrentProcess()", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
m41_38 [cluster="HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", span="10-10"];
m41_30 [cluster="System.Threading.EventWaitHandle.Set()", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m41_94 [cluster="HangFire.Server.JobServer.Heartbeat()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="_redis.SetEntryInHash(\r\n                String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", prediction=34, span="153-156"];
m41_63 [cluster="HangFire.Server.JobServer.Heartbeat()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Server.JobServer.Heartbeat()", span="151-151"];
m41_95 [cluster="HangFire.Server.JobServer.Heartbeat()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Server.JobServer.Heartbeat()", span="151-151"];
m41_99 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', serverName),\r\n                    String.Format(''hangfire:server:{0}:queues'', serverName)))", prediction=54, span="167-169"];
m41_65 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", span="159-159"];
m41_97 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="var transaction = redis.CreateTransaction()", prediction=54, span="161-161"];
m41_98 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    serverName))", prediction=54, span="163-165"];
m41_100 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="transaction.Commit()", prediction=54, span="171-171"];
m41_101 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", span="159-159"];
m41_44 [cluster="HangFire.Server.JobServer.StopServer()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Server.JobServer.StopServer()", span="89-89"];
m41_45 [cluster="HangFire.Server.JobServer.StopServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="_serverWatchdog.Dispose()", prediction=34, span="91-91"];
m41_46 [cluster="HangFire.Server.JobServer.StopServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="_fetchedJobsWatcher.Dispose()", prediction=34, span="92-92"];
m41_47 [cluster="HangFire.Server.JobServer.StopServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="_schedulePoller.Dispose()", prediction=34, span="93-93"];
m41_48 [cluster="HangFire.Server.JobServer.StopServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="_manager.Dispose()", prediction=34, span="94-94"];
m41_49 [cluster="HangFire.Server.JobServer.StopServer()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Server.JobServer.StopServer()", span="89-89"];
m41_23 [cluster="HangFire.Server.JobPerformer.JobPerformer()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Server.JobPerformer.JobPerformer()", span="13-13"];
m41_15 [cluster="Unk.GetClient", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.GetClient", span=""];
m41_50 [cluster="HangFire.Server.ThreadWrapper.Dispose()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Server.ThreadWrapper.Dispose()", span="23-23"];
m41_93 [cluster="Unk.AddItemToList", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.AddItemToList", span=""];
m41_62 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Server.JobServer.AnnounceServer()", span="124-124"];
m41_67 [cluster="HangFire.Server.JobServer.AnnounceServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="var transaction = _redis.CreateTransaction()", prediction=34, span="126-126"];
m41_68 [cluster="HangFire.Server.JobServer.AnnounceServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName))", prediction=34, span="128-129"];
m41_69 [cluster="HangFire.Server.JobServer.AnnounceServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', _workerCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", prediction=34, span="131-137"];
m41_72 [cluster="HangFire.Server.JobServer.AnnounceServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queue1))", prediction=34, span="142-144"];
m41_73 [cluster="HangFire.Server.JobServer.AnnounceServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="transaction.Commit()", prediction=34, span="147-147"];
m41_70 [cluster="HangFire.Server.JobServer.AnnounceServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label=_queues, prediction=34, span="139-139"];
m41_71 [cluster="HangFire.Server.JobServer.AnnounceServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="var queue1 = queue", prediction=34, span="141-141"];
m41_74 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Server.JobServer.AnnounceServer()", span="124-124"];
m41_105 [cluster="Unk.RemoveItemFromSet", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m41_66 [cluster="Unk.Fatal", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Fatal", span=""];
m41_17 [cluster="System.TimeSpan.Duration()", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m41_32 [cluster="HangFire.Server.JobServer.StartServer()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Server.JobServer.StartServer()", span="76-76"];
m41_33 [cluster="HangFire.Server.JobServer.StartServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="_manager = new ThreadWrapper(new JobManager(\r\n                new PrioritizedJobFetcher(_redisManager, _queues, _workerCount),\r\n                _redisManager, \r\n                _context, \r\n                _workerCount))", prediction=69, span="78-82"];
m41_34 [cluster="HangFire.Server.JobServer.StartServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="_schedulePoller = new ThreadWrapper(new SchedulePoller(_redisManager, _pollInterval))", prediction=70, span="84-84"];
m41_35 [cluster="HangFire.Server.JobServer.StartServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="_fetchedJobsWatcher = new ThreadWrapper(new DequeuedJobsWatcher(_redisManager))", prediction=71, span="85-85"];
m41_36 [cluster="HangFire.Server.JobServer.StartServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="_serverWatchdog = new ThreadWrapper(new ServerWatchdog(_redisManager))", prediction=72, span="86-86"];
m41_37 [cluster="HangFire.Server.JobServer.StartServer()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Server.JobServer.StartServer()", span="76-76"];
m41_107 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', serverName),\r\n                    String.Format(''hangfire:server:{0}:queues'', serverName))", prediction=54, span="167-169"];
m41_78 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="128-129"];
m41_82 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="131-137"];
m41_90 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="142-144"];
m41_91 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="x.AddItemToList(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queue1)", prediction=34, span="142-144"];
m41_92 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="142-144"];
m41_79 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName)", prediction=34, span="128-129"];
m41_80 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="128-129"];
m41_83 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', _workerCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", prediction=34, span="131-137"];
m41_84 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="131-137"];
m41_102 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="163-165"];
m41_103 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    serverName)", prediction=54, span="163-165"];
m41_104 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="163-165"];
m41_106 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="167-169"];
m41_108 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="167-169"];
m41_77 [cluster="Unk.Commit", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Commit", span=""];
m41_64 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m41_21 [cluster="HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="9-9"];
m41_40 [cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", span="13-13"];
m41_43 [cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(IRedisClientsManager)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(IRedisClientsManager)", span="18-18"];
m41_76 [cluster="Unk.QueueCommand", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.QueueCommand", span=""];
m41_39 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.IJobFetcher, IRedisClientsManager, HangFire.Server.ServerContext, int)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Server.JobManager.JobManager(HangFire.Server.IJobFetcher, IRedisClientsManager, HangFire.Server.ServerContext, int)", span="18-18"];
m41_75 [cluster="Unk.CreateTransaction", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.CreateTransaction", span=""];
m41_24 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m41_110 [file="SqlServerWriteOnlyTransaction.cs", label="HangFire.Server.JobServer", span=""];
m41_111 [file="SqlServerWriteOnlyTransaction.cs", label=queue1, span=""];
m41_112 [file="SqlServerWriteOnlyTransaction.cs", label=string, span=""];
m42_13 [cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.ToString()", span="41-41"];
m42_15 [cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="SqlServerWriteOnlyValue.cs", label="Exit Hangfire.Server.InfiniteLoopProcess.ToString()", span="41-41"];
m42_0 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", span="24-24"];
m42_4 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="SqlServerWriteOnlyValue.cs", label="Exit Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", span="24-24"];
m42_6 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="32-32"];
m42_10 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyValue.cs", label="Exit Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="32-32"];
m42_12 [cluster="Hangfire.Server.ILongRunningProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyValue.cs", label="Entry Hangfire.Server.ILongRunningProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="26-26"];
m42_16 [cluster="object.ToString()", file="SqlServerWriteOnlyValue.cs", label="Entry object.ToString()", span="0-0"];
m42_11 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="SqlServerWriteOnlyValue.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m42_17 [file="SqlServerWriteOnlyValue.cs", label="Hangfire.Server.InfiniteLoopProcess", span=""];
m43_0 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateApplyingContext.cs", label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23"];
m43_1 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateApplyingContext.cs", label="transaction == null", span="27-27"];
m43_3 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateApplyingContext.cs", label="Transaction = transaction", span="29-29"];
m43_2 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateApplyingContext.cs", label="throw new ArgumentNullException(''transaction'');", span="27-27"];
m43_4 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateApplyingContext.cs", label="Exit HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23"];
m43_6 [file="StateApplyingContext.cs", label="HangFire.Common.States.StateApplyingContext", span=""];
m44_15 [cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="StateChangingContext.cs", label="Entry HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", span="62-62"];
m44_16 [cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", color=green, community=0, file="StateChangingContext.cs", label="return JobHelper.FromJson<T>(Connection.Jobs.GetParameter(\r\n                JobId, name));", prediction=78, span="64-65"];
m44_17 [cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="StateChangingContext.cs", label="Exit HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", span="62-62"];
m44_10 [cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", file="StateChangingContext.cs", label="Entry HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", span="57-57"];
m44_11 [cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", color=green, community=0, file="StateChangingContext.cs", label="Connection.Jobs.SetParameter(JobId, name, JobHelper.ToJson(value))", prediction=78, span="59-59"];
m44_12 [cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", file="StateChangingContext.cs", label="Exit HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", span="57-57"];
m44_13 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="StateChangingContext.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m44_18 [cluster="HangFire.Storage.IPersistentJob.GetParameter(string, string)", file="StateChangingContext.cs", label="Entry HangFire.Storage.IPersistentJob.GetParameter(string, string)", span="8-8"];
m44_19 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="StateChangingContext.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28"];
m44_14 [cluster="HangFire.Storage.IPersistentJob.SetParameter(string, string, string)", file="StateChangingContext.cs", label="Entry HangFire.Storage.IPersistentJob.SetParameter(string, string, string)", span="7-7"];
m44_0 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25"];
m44_1 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="candidateState == null", span="32-32"];
m44_3 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="connection == null", span="33-33"];
m44_5 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="CandidateState = candidateState", span="35-35"];
m44_6 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="CurrentState = currentState", span="36-36"];
m44_7 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="Connection = connection", span="37-37"];
m44_2 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="throw new ArgumentNullException(''candidateState'');", span="32-32"];
m44_4 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="throw new ArgumentNullException(''connection'');", span="33-33"];
m44_8 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="Exit HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25"];
m44_20 [file="StateChangingContext.cs", label="HangFire.Common.States.StateChangingContext", span=""];
m46_50 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="StateSteps.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30"];
m46_32 [cluster="string.Format(string, object)", file="StateSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m46_59 [cluster="Unk.GetNextOccurrence", file="StateSteps.cs", label="Entry Unk.GetNextOccurrence", span=""];
m46_53 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="StateSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m46_54 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="StateSteps.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="55-55"];
m46_60 [cluster="HangFire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="StateSteps.cs", label="Entry HangFire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="61-61"];
m46_55 [cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="StateSteps.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="31-31"];
m46_56 [cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="StateSteps.cs", label="Entry HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="41-41"];
m46_26 [cluster="System.TimeSpan.FromSeconds(double)", file="StateSteps.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m46_52 [cluster="Unk.Parse", file="StateSteps.cs", label="Entry Unk.Parse", span=""];
m46_28 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="StateSteps.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m46_29 [cluster="HangFire.JobStorage.GetConnection()", file="StateSteps.cs", label="Entry HangFire.JobStorage.GetConnection()", span="56-56"];
m46_57 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m46_31 [cluster="HangFire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="StateSteps.cs", label="Entry HangFire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55"];
m46_33 [cluster="HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="StateSteps.cs", label="Entry HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
m46_12 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs", label="Entry HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", span="51-51"];
m46_13 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs", label="_dateTimeProvider.CurrentDateTime.Second != 0", span="53-53"];
m46_14 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs", label="cancellationToken.WaitHandle.WaitOne(TimeSpan.FromSeconds(1))", span="55-55"];
m46_16 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs", label="var connection = _storage.GetConnection()", span="59-59"];
m46_15 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="56-56"];
m46_17 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs", label="connection.AcquireDistributedLock(''recurring-jobs:lock'', LockTimeout)", span="60-60"];
m46_18 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs", label="var recurringJobIds = connection.GetAllItemsFromSet(''recurring-jobs'')", span="62-62"];
m46_20 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs", label="var recurringJob = connection.GetAllEntriesFromHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId))", span="66-67"];
m46_22 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs", label="TryScheduleJob(connection, recurringJobId, recurringJob)", span="76-76"];
m46_19 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs", label=recurringJobIds, span="64-64"];
m46_24 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs", label="Logger.WarnFormat(''Recurring job '{0}' can not be scheduled due to job load exception.'', ex, recurringJobId)", span="80-80"];
m46_21 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs", label="recurringJob == null", span="69-69"];
m46_23 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs", label=JobLoadException, span="78-78"];
m46_25 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs", label="Exit HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", span="51-51"];
m46_34 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs", label="Entry HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", span="87-87"];
m46_36 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs", label="var serializedJob = JobHelper.FromJson<InvocationData>(recurringJob[''Job''])", span="89-89"];
m46_38 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs", label="var cron = recurringJob[''Cron'']", span="91-91"];
m46_41 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs", label="recurringJob.ContainsKey(''NextExecution'')", span="96-96"];
m46_42 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs", label="var nextExecution = JobHelper.FromStringTimestamp(recurringJob[''NextExecution''])", span="98-98"];
m46_46 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs", label="connection.SetRangeInHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId),\r\n                        new Dictionary<string, string>\r\n                        {\r\n                            { ''LastExecution'', JobHelper.ToStringTimestamp(currentTime) },\r\n                            { ''LastJobId'', jobId },\r\n                            { ''NextExecution'', JobHelper.ToStringTimestamp(_dateTimeProvider.GetNextOccurrence(cronSchedule)) }\r\n                        })", span="105-112"];
m46_48 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs", label="connection.SetRangeInHash(\r\n                    String.Format(''recurring-job:{0}'', recurringJobId),\r\n                    new Dictionary<string, string>\r\n                    {\r\n                        { ''NextExecution'', JobHelper.ToStringTimestamp(nextExecution) }\r\n                    })", span="119-124"];
m46_37 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs", label="var job = serializedJob.Deserialize()", span="90-90"];
m46_45 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs", label="var jobId = _client.Create(job, state)", span="103-103"];
m46_39 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs", label="var cronSchedule = CrontabSchedule.Parse(cron)", span="92-92"];
m46_40 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs", label="var currentTime = _dateTimeProvider.CurrentDateTime", span="94-94"];
m46_47 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs", label="var nextExecution = _dateTimeProvider.GetNextOccurrence(cronSchedule)", span="117-117"];
m46_43 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs", label="nextExecution <= currentTime", span="100-100"];
m46_44 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs", label="var state = new EnqueuedState { Reason = ''Triggered by recurring job scheduler'' }", span="102-102"];
m46_49 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs", label="Exit HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", span="87-87"];
m46_58 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="StateSteps.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m46_61 [cluster="HangFire.Server.RecurringJobScheduler.ToString()", file="StateSteps.cs", label="Entry HangFire.Server.RecurringJobScheduler.ToString()", span="128-128"];
m46_62 [cluster="HangFire.Server.RecurringJobScheduler.ToString()", file="StateSteps.cs", label="return ''Recurring Job Scheduler'';", span="130-130"];
m46_63 [cluster="HangFire.Server.RecurringJobScheduler.ToString()", file="StateSteps.cs", label="Exit HangFire.Server.RecurringJobScheduler.ToString()", span="128-128"];
m46_35 [cluster="Unk.WarnFormat", file="StateSteps.cs", label="Entry Unk.WarnFormat", span=""];
m46_27 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="StateSteps.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m46_51 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="StateSteps.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m46_0 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="StateSteps.cs", label="Entry HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", span="37-37"];
m46_1 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="StateSteps.cs", label="storage == null", span="42-42"];
m46_3 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="StateSteps.cs", label="client == null", span="43-43"];
m46_5 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="StateSteps.cs", label="dateTimeProvider == null", span="44-44"];
m46_7 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="StateSteps.cs", label="_storage = storage", span="46-46"];
m46_8 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="StateSteps.cs", label="_client = client", span="47-47"];
m46_9 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="StateSteps.cs", label="_dateTimeProvider = dateTimeProvider", span="48-48"];
m46_2 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="StateSteps.cs", label="throw new ArgumentNullException(''storage'');", span="42-42"];
m46_4 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="StateSteps.cs", label="throw new ArgumentNullException(''client'');", span="43-43"];
m46_6 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="StateSteps.cs", label="throw new ArgumentNullException(''dateTimeProvider'');", span="44-44"];
m46_10 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="StateSteps.cs", label="Exit HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", span="37-37"];
m46_30 [cluster="HangFire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="StateSteps.cs", label="Entry HangFire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28"];
m46_64 [file="StateSteps.cs", label="HangFire.Server.RecurringJobScheduler", span=""];
m47_3 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30"];
m47_4 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StatisticsHistoryFilterAttribute.cs", label="var transaction = context.Connection.CreateWriteTransaction()", span="32-32"];
m47_5 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StatisticsHistoryFilterAttribute.cs", label="context.CandidateState.StateName == SucceededState.Name", span="34-34"];
m47_8 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StatisticsHistoryFilterAttribute.cs", label="context.CandidateState.StateName == FailedState.Name", span="48-48"];
m47_6 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=1, file="StatisticsHistoryFilterAttribute.cs", label="transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:succeeded:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd'')),\r\n                        DateTime.UtcNow.AddMonths(1) - DateTime.UtcNow)", prediction=80, span="36-40"];
m47_7 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=1, file="StatisticsHistoryFilterAttribute.cs", label="transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:succeeded:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd-HH'')),\r\n                        TimeSpan.FromDays(1))", prediction=80, span="42-46"];
m47_9 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=1, file="StatisticsHistoryFilterAttribute.cs", label="transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:failed:{0}'', \r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd'')),\r\n                        DateTime.UtcNow.AddMonths(1) - DateTime.UtcNow)", prediction=80, span="50-54"];
m47_10 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=1, file="StatisticsHistoryFilterAttribute.cs", label="transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:failed:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd-HH'')),\r\n                        TimeSpan.FromDays(1))", prediction=80, span="56-60"];
m47_11 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StatisticsHistoryFilterAttribute.cs", label="transaction.Commit()", span="63-63"];
m47_12 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StatisticsHistoryFilterAttribute.cs", label="Exit HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30"];
m47_17 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="18-18"];
m47_14 [cluster="System.DateTime.ToString(string)", file="StatisticsHistoryFilterAttribute.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m47_13 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
m47_0 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", span="25-25"];
m47_1 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", file="StatisticsHistoryFilterAttribute.cs", label="Order = 30", span="27-27"];
m47_2 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", file="StatisticsHistoryFilterAttribute.cs", label="Exit HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", span="25-25"];
m47_19 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="StatisticsHistoryFilterAttribute.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="13-13"];
m47_18 [cluster="System.TimeSpan.FromDays(double)", file="StatisticsHistoryFilterAttribute.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m47_16 [cluster="System.DateTime.AddMonths(int)", file="StatisticsHistoryFilterAttribute.cs", label="Entry System.DateTime.AddMonths(int)", span="0-0"];
m47_20 [file="StatisticsHistoryFilterAttribute.cs", label="HangFire.Filters.StatisticsHistoryFilterAttribute", span=""];
m48_0 [cluster="HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", span="30-30"];
m48_1 [cluster="HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", file="SucceededState.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''SucceededAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                };", span="32-35"];
m48_2 [cluster="HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", span="30-30"];
m48_5 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="40-40"];
m48_8 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="40-40"];
m48_16 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", span="8-8"];
m48_10 [cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string)", span="6-6"];
m48_15 [cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string)", span="9-9"];
m48_9 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", span="7-7"];
m48_11 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="47-47"];
m48_14 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="47-47"];
m48_4 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SucceededState.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m49_9 [cluster="HangFire.Storage.IWriteOnlyPersistentList.Remove(string, string)", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentList.Remove(string, string)", span="5-5"];
m49_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="28-28"];
m49_5 [cluster="HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", span="7-7"];
m49_6 [cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededStateHandler.cs", label="Entry HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="14-14"];
m49_8 [cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededStateHandler.cs", label="Exit HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="14-14"];
m49_0 [cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededStateHandler.cs", label="Entry HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="8-8"];
m49_1 [cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", color=green, community=1, file="SucceededStateHandler.cs", label="context.Transaction.InsertToList(''succeeded'', context.JobId)", prediction=84, span="10-10"];
m49_3 [cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededStateHandler.cs", label="Exit HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="8-8"];
m50_3 [cluster="Unk.>", file="SucceededStateHandlerFacts.cs", label="Entry Unk.>", span=""];
m50_8 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", span="20-20"];
m50_9 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="var connection = new Mock<IStorageConnection>()", prediction=85, span="22-22"];
m50_10 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="var job = Job.FromExpression(() => TestMethod())", prediction=86, span="23-23"];
m50_13 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="var createContext = new CreateContext(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", prediction=87, span="27-28"];
m50_11 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="var state = new Mock<IState>()", prediction=88, span="24-24"];
m50_12 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="var stateMachineFactory = new Mock<IStateMachineFactory>()", prediction=89, span="25-25"];
m50_14 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="var context = new CreatingContext(createContext)", prediction=90, span="29-29"];
m50_15 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="Assert.False(context.Canceled)", prediction=91, span="31-31"];
m50_16 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", span="20-20"];
m50_20 [cluster="Mock<IStateMachineFactory>.cstr", file="SucceededStateHandlerFacts.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m50_19 [cluster="Mock<IState>.cstr", file="SucceededStateHandlerFacts.cs", label="Entry Mock<IState>.cstr", span=""];
m50_22 [cluster="Unk.False", file="SucceededStateHandlerFacts.cs", label="Entry Unk.False", span=""];
m50_7 [cluster="HangFire.Client.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Client.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="24-24"];
m50_18 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m50_0 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="13-13"];
m50_1 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="Assert.Throws<NullReferenceException>(\r\n                () => new CreatingContext(null))", prediction=92, span="15-16"];
m50_2 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="13-13"];
m50_26 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", span="34-34"];
m50_27 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", span="34-34"];
m50_17 [cluster="Mock<IStorageConnection>.cstr", file="SucceededStateHandlerFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m50_23 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="23-23"];
m50_4 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="16-16"];
m50_5 [cluster="lambda expression", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="new CreatingContext(null)", prediction=93, span="16-16"];
m50_6 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="16-16"];
m50_24 [cluster="lambda expression", color=green, community=0, file="SucceededStateHandlerFacts.cs", label="TestMethod()", prediction=94, span="23-23"];
m50_25 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="23-23"];
m50_21 [cluster="CreateContext.cstr", file="SucceededStateHandlerFacts.cs", label="Entry CreateContext.cstr", span=""];
m51_0 [cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="Entry Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="24-24"];
m51_1 [cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="Exit Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="24-24"];
n4 -> n10  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
n9 -> n12  [color=darkseagreen4, key=1, label=attribute, style=dashed];
n14 -> n16  [color=darkseagreen4, key=1, label=queueName, style=dashed];
n23 -> n26  [color=darkseagreen4, key=1, label=string, style=dashed];
n23 -> n27  [color=darkseagreen4, key=1, label=string, style=dashed];
n38 -> n41  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m4_18 -> m4_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_5 -> m4_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_96 -> m4_98  [color=darkseagreen4, key=1, label=mock, style=dashed];
m4_63 -> m4_69  [color=darkseagreen4, key=1, label=component1, style=dashed];
m4_64 -> m4_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_64 -> m4_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_69 -> m4_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_65 -> m4_70  [color=darkseagreen4, key=1, label=component2, style=dashed];
m4_66 -> m4_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_66 -> m4_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_70 -> m4_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_36 -> m4_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_52 -> m4_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_45 -> m4_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_46 -> m4_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_28 -> m4_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_102 -> m4_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m4_102 -> m4_24  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m4_102 -> m4_32  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m4_102 -> m4_40  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m4_102 -> m4_43  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m4_102 -> m4_45  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m4_102 -> m4_52  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m4_102 -> m4_56  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m4_102 -> m4_46  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m4_102 -> m4_67  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m4_102 -> m4_94  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m4_102 -> m4_97  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", style=dashed];
m10_7 -> m10_9  [color=green, key=1, label=date, style=dashed];
m10_23 -> m10_25  [color=green, key=1, label=state, style=dashed];
m10_23 -> m10_26  [color=green, key=1, label=state, style=dashed];
m10_24 -> m10_26  [color=darkseagreen4, key=1, label=data, style=dashed];
m10_13 -> m10_15  [color=green, key=1, label=state, style=dashed];
m12_4 -> m12_6  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_4 -> m12_11  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_4 -> m12_17  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_4 -> m12_19  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_4 -> m12_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_4 -> m12_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_4 -> m12_26  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_4 -> m12_28  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_4 -> m12_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_4 -> m12_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_28 -> m12_30  [color=darkseagreen4, key=1, label=property, style=dashed];
m12_30 -> m12_30  [color=darkseagreen4, key=1, label=property, style=dashed];
m12_30 -> m12_33  [color=darkseagreen4, key=1, label=property, style=dashed];
m12_33 -> m12_33  [color=darkseagreen4, key=1, label=property, style=dashed];
m12_39 -> m12_42  [color=darkseagreen4, key=1, label=index, style=dashed];
m12_39 -> m12_45  [color=darkseagreen4, key=1, label=index, style=dashed];
m12_39 -> m12_76  [color=darkseagreen4, key=1, label=index, style=dashed];
m12_76 -> m12_76  [color=darkseagreen4, key=1, label=index, style=dashed];
m12_100 -> m12_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_56  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_58  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_59  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_63  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_64  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_65  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_66  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_68  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_69  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_70  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_71  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_72  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_73  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_74  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m12_100 -> m12_75  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m14_6 -> m14_15  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m14_12 -> m14_15  [color=darkseagreen4, key=1, label=client, style=dashed];
m14_29 -> m14_35  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m14_33 -> m14_35  [color=darkseagreen4, key=1, label=client, style=dashed];
m17_3 -> m17_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_3 -> m17_8  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m19_99 -> m19_111  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m19_100 -> m19_104  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m19_101 -> m19_106  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m19_101 -> m19_128  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m19_101 -> m19_109  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m19_102 -> m19_111  [color=darkseagreen4, key=1, label=utcNow, style=dashed];
m19_106 -> m19_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_106 -> m19_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_103 -> m19_106  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m19_103 -> m19_107  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m19_105 -> m19_123  [color=darkseagreen4, key=1, label=name, style=dashed];
m19_105 -> m19_128  [color=darkseagreen4, key=1, label=name, style=dashed];
m19_108 -> m19_113  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m19_108 -> m19_114  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m19_113 -> m19_113  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m19_113 -> m19_114  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m19_110 -> m19_112  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m19_112 -> m19_112  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m19_84 -> m19_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_81 -> m19_83  [color=green, key=1, label=string, style=dashed];
m19_81 -> m19_88  [color=green, key=1, label=string, style=dashed];
m19_81 -> m19_84  [color=green, key=1, label=string, style=dashed];
m19_81 -> m19_92  [color=green, key=1, label=string, style=dashed];
m19_82 -> m19_84  [color=green, key=1, label=transaction, style=dashed];
m19_82 -> m19_85  [color=green, key=1, label=transaction, style=dashed];
m19_83 -> m19_87  [color=green, key=1, label="lambda expression", style=dashed];
m19_138 -> m19_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_134 -> m19_136  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_134 -> m19_142  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_134 -> m19_137  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_134 -> m19_146  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_134 -> m19_138  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_134 -> m19_150  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_135 -> m19_137  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m19_135 -> m19_138  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m19_135 -> m19_139  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m19_136 -> m19_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_137 -> m19_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_56 -> m19_58  [color=green, key=1, label=string, style=dashed];
m19_56 -> m19_66  [color=green, key=1, label=string, style=dashed];
m19_56 -> m19_59  [color=green, key=1, label=string, style=dashed];
m19_56 -> m19_70  [color=green, key=1, label=string, style=dashed];
m19_56 -> m19_60  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m19_56 -> m19_62  [color=green, key=1, label=string, style=dashed];
m19_56 -> m19_75  [color=green, key=1, label=string, style=dashed];
m19_57 -> m19_59  [color=green, key=1, label=transaction, style=dashed];
m19_57 -> m19_62  [color=green, key=1, label=transaction, style=dashed];
m19_57 -> m19_63  [color=green, key=1, label=transaction, style=dashed];
m19_58 -> m19_65  [color=green, key=1, label="lambda expression", style=dashed];
m19_59 -> m19_69  [color=green, key=1, label="lambda expression", style=dashed];
m19_62 -> m19_74  [color=green, key=1, label="lambda expression", style=dashed];
m19_61 -> m19_75  [color=green, key=1, label=queue1, style=dashed];
m19_37 -> m19_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_28 -> m19_30  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m19_28 -> m19_31  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m19_28 -> m19_32  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m19_28 -> m19_33  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m19_28 -> m19_34  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m19_28 -> m19_36  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m19_28 -> m19_49  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m19_28 -> m19_37  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m19_28 -> m19_53  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m19_29 -> m19_36  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m19_29 -> m19_49  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m19_29 -> m19_37  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m19_29 -> m19_53  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m19_29 -> m19_39  [color=green, key=1, label=jobId, style=dashed];
m19_36 -> m19_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_35 -> m19_37  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m19_35 -> m19_38  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m19_152 -> m19_9  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m19_152 -> m19_13  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m19_152 -> m19_18  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m19_152 -> m19_23  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m19_152 -> m19_79  [color=green, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m19_152 -> m19_96  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m19_152 -> m19_112  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m19_153 -> m19_49  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m19_154 -> m19_49  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m19_154 -> m19_53  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m19_155 -> m19_53  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m19_156 -> m19_66  [color=green, key=1, label=string, style=dashed];
m19_156 -> m19_70  [color=green, key=1, label=string, style=dashed];
m19_156 -> m19_75  [color=green, key=1, label=string, style=dashed];
m19_157 -> m19_70  [color=green, key=1, label=int, style=dashed];
m19_158 -> m19_75  [color=green, key=1, label=queue1, style=dashed];
m19_159 -> m19_88  [color=green, key=1, label=string, style=dashed];
m19_159 -> m19_92  [color=green, key=1, label=string, style=dashed];
m19_160 -> m19_123  [color=darkseagreen4, key=1, label=name, style=dashed];
m19_160 -> m19_128  [color=darkseagreen4, key=1, label=name, style=dashed];
m19_161 -> m19_128  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m19_162 -> m19_142  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_163 -> m19_142  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_163 -> m19_146  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_163 -> m19_150  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_71 -> m24_73  [color=darkseagreen4, key=1, label=process, style=dashed];
m24_71 -> m24_78  [color=darkseagreen4, key=1, label=process, style=dashed];
m24_73 -> m24_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_74 -> m24_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_94 -> m24_72  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m24_94 -> m24_73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m24_94 -> m24_78  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m24_94 -> m24_74  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m24_94 -> m24_86  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m24_97 -> m24_78  [color=darkseagreen4, key=1, label=process, style=dashed];
m26_6 -> m26_9  [color=darkseagreen4, key=1, label="HangFire.States.IStateMachineFactory", style=dashed];
m26_6 -> m26_11  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m26_6 -> m26_13  [color=darkseagreen4, key=1, label="HangFire.States.IState", style=dashed];
m26_23 -> m26_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_23 -> m26_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_28 -> m26_30  [color=darkseagreen4, key=1, label=serializedValue, style=dashed];
m26_38 -> m26_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_38 -> m26_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_55 -> m26_26  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m26_55 -> m26_29  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m26_55 -> m26_30  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m26_55 -> m26_41  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m28_16 -> m28_21  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m28_16 -> m28_25  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m28_16 -> m28_26  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m28_16 -> m28_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_47 -> m28_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_15 -> m28_58  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_15 -> m28_60  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_57 -> m28_59  [color=darkseagreen4, key=1, label=result, style=dashed];
m28_57 -> m28_68  [color=darkseagreen4, key=1, label=result, style=dashed];
m28_57 -> m28_69  [color=darkseagreen4, key=1, label=result, style=dashed];
m28_60 -> m28_67  [color=darkseagreen4, key=1, label=descriptor, style=dashed];
m28_60 -> m28_68  [color=darkseagreen4, key=1, label=descriptor, style=dashed];
m28_61 -> m28_63  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m28_62 -> m28_68  [color=darkseagreen4, key=1, label=value, style=dashed];
m28_78 -> m28_29  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m28_78 -> m28_44  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m29_35 -> m29_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_28 -> m29_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_8 -> m30_10  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m31_0 -> m31_3  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m32_45 -> m32_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_46 -> m32_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_5 -> m32_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_57 -> m32_62  [color=darkseagreen4, key=1, label=component1, style=dashed];
m32_59 -> m32_63  [color=darkseagreen4, key=1, label=component2, style=dashed];
m32_62 -> m32_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_63 -> m32_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_58 -> m32_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_58 -> m32_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_92 -> m32_94  [color=green, key=1, label=mock, style=dashed];
m32_84 -> m32_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_30 -> m32_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_36 -> m32_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_18 -> m32_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_98 -> m32_93  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m32_98 -> m32_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m32_98 -> m32_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m32_98 -> m32_29  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m32_98 -> m32_30  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m32_98 -> m32_36  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m32_98 -> m32_40  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m32_98 -> m32_44  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m32_98 -> m32_45  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m32_98 -> m32_46  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m32_98 -> m32_61  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m32_98 -> m32_62  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m32_98 -> m32_76  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m32_98 -> m32_63  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m32_98 -> m32_79  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m32_98 -> m32_83  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m32_98 -> m32_84  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m32_98 -> m32_87  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m32_98 -> m32_90  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m36_94 -> m36_32  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m36_94 -> m36_37  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m36_94 -> m36_46  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m36_94 -> m36_52  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m36_94 -> m36_57  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m36_94 -> m36_62  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m36_94 -> m36_66  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m36_94 -> m36_74  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m36_94 -> m36_78  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m36_94 -> m36_83  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m36_94 -> m36_87  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m36_94 -> m36_92  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m41_0 -> m41_6  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m41_0 -> m41_8  [color=green, key=1, label="System.TimeSpan", style=dashed];
m41_0 -> m41_10  [color=green, key=1, label=string, style=dashed];
m41_0 -> m41_11  [color=green, key=1, label="HangFire.JobActivator", style=dashed];
m41_8 -> m41_8  [color=green, key=1, label="System.TimeSpan", style=dashed];
m41_14 -> m41_8  [color=darkseagreen4, key=1, label="HangFire.States.FailedState", style=dashed];
m41_99 -> m41_106  [color=green, key=1, label="lambda expression", style=dashed];
m41_65 -> m41_98  [color=green, key=1, label=string, style=dashed];
m41_65 -> m41_103  [color=green, key=1, label=string, style=dashed];
m41_65 -> m41_99  [color=green, key=1, label=string, style=dashed];
m41_65 -> m41_107  [color=green, key=1, label=string, style=dashed];
m41_97 -> m41_99  [color=green, key=1, label=transaction, style=dashed];
m41_97 -> m41_100  [color=green, key=1, label=transaction, style=dashed];
m41_98 -> m41_102  [color=green, key=1, label="lambda expression", style=dashed];
m41_67 -> m41_69  [color=green, key=1, label=transaction, style=dashed];
m41_67 -> m41_72  [color=green, key=1, label=transaction, style=dashed];
m41_67 -> m41_73  [color=green, key=1, label=transaction, style=dashed];
m41_68 -> m41_78  [color=green, key=1, label="lambda expression", style=dashed];
m41_69 -> m41_82  [color=green, key=1, label="lambda expression", style=dashed];
m41_72 -> m41_90  [color=green, key=1, label="lambda expression", style=dashed];
m41_71 -> m41_91  [color=green, key=1, label=queue1, style=dashed];
m41_110 -> m41_11  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_110 -> m41_12  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_110 -> m41_13  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_110 -> m41_27  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_110 -> m41_28  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_110 -> m41_45  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_110 -> m41_46  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_110 -> m41_47  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_110 -> m41_48  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_110 -> m41_52  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_110 -> m41_53  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_110 -> m41_55  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_110 -> m41_57  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_110 -> m41_56  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_110 -> m41_58  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_110 -> m41_60  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_110 -> m41_68  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_110 -> m41_69  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_110 -> m41_72  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_110 -> m41_70  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_110 -> m41_91  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_110 -> m41_79  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_110 -> m41_83  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_110 -> m41_94  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m41_111 -> m41_91  [color=green, key=1, label=queue1, style=dashed];
m41_112 -> m41_103  [color=green, key=1, label=string, style=dashed];
m41_112 -> m41_107  [color=green, key=1, label=string, style=dashed];
m44_0 -> m44_3  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m44_20 -> m44_11  [color=green, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m44_20 -> m44_16  [color=green, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m46_12 -> m46_14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m46_14 -> m46_14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m46_16 -> m46_22  [color=darkseagreen4, key=1, label=connection, style=dashed];
m46_15 -> m46_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m46_20 -> m46_22  [color=darkseagreen4, key=1, label=recurringJob, style=dashed];
m46_19 -> m46_22  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
m46_19 -> m46_24  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
m46_34 -> m46_41  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m46_34 -> m46_46  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m46_34 -> m46_48  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m46_39 -> m46_46  [color=darkseagreen4, key=1, label=cronSchedule, style=dashed];
m46_40 -> m46_43  [color=darkseagreen4, key=1, label=currentTime, style=dashed];
m46_40 -> m46_46  [color=darkseagreen4, key=1, label=currentTime, style=dashed];
m46_0 -> m46_3  [color=darkseagreen4, key=1, label="HangFire.IBackgroundJobClient", style=dashed];
m46_0 -> m46_5  [color=darkseagreen4, key=1, label="HangFire.Server.IDateTimeProvider", style=dashed];
m46_64 -> m46_13  [color=darkseagreen4, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
m46_64 -> m46_22  [color=darkseagreen4, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
m46_64 -> m46_46  [color=darkseagreen4, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
m47_3 -> m47_5  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m47_3 -> m47_8  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m47_4 -> m47_6  [color=green, key=1, label=transaction, style=dashed];
m47_4 -> m47_7  [color=green, key=1, label=transaction, style=dashed];
m47_4 -> m47_9  [color=green, key=1, label=transaction, style=dashed];
m47_4 -> m47_10  [color=green, key=1, label=transaction, style=dashed];
m47_4 -> m47_11  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m50_10 -> m50_23  [color=green, key=1, label="lambda expression", style=dashed];
m50_1 -> m50_4  [color=green, key=1, label="lambda expression", style=dashed];
}
