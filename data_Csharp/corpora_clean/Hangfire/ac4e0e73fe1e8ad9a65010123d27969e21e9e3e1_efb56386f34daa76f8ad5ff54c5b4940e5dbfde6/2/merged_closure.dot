digraph  {
n0 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", label="Entry Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", span="36-36"];
n1 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", label="client == null", span="40-40"];
n3 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", label="return client.Create(methodCall, new EnqueuedState());", span="42-42"];
n2 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", label="throw new ArgumentNullException(''client'');", span="40-40"];
n4 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", label="Exit Hangfire.BackgroundJobClientExtensions.Enqueue(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", span="36-36"];
n5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n6 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87"];
n7 [cluster="Hangfire.IBackgroundJobClient.Create(System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", label="Entry Hangfire.IBackgroundJobClient.Create(System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="148-148"];
n8 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", label="Entry Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="56-56"];
n9 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", label="client == null", span="60-60"];
n11 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", label="return client.Create(methodCall, new EnqueuedState());", span="62-62"];
n10 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", label="throw new ArgumentNullException(''client'');", span="60-60"];
n12 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", label="Exit Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="56-56"];
n13 [cluster="Hangfire.IBackgroundJobClient.Create<T>(System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", label="Entry Hangfire.IBackgroundJobClient.Create<T>(System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="168-168"];
n14 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="73-73"];
n15 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", label="client == null", span="78-78"];
n17 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", label="return client.Create(methodCall, new ScheduledState(delay));", span="80-80"];
n16 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", label="throw new ArgumentNullException(''client'');", span="78-78"];
n18 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", label="Exit Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="73-73"];
n19 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="68-68"];
n20 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="91-91"];
n21 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", label="client == null", span="96-96"];
n23 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", label="return client.Create(methodCall, new ScheduledState(enqueueAt.UtcDateTime));", span="98-98"];
n22 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", label="throw new ArgumentNullException(''client'');", span="96-96"];
n24 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", label="Exit Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="91-91"];
n25 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", span="81-81"];
n26 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="111-111"];
n27 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", label="client == null", span="116-116"];
n29 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", label="return client.Create(methodCall, new ScheduledState(delay));", span="118-118"];
n28 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", label="throw new ArgumentNullException(''client'');", span="116-116"];
n30 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", label="Exit Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="111-111"];
n31 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="130-130"];
n32 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", label="client == null", span="135-135"];
n34 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", label="return client.Create(methodCall, new ScheduledState(enqueueAt.UtcDateTime));", span="137-137"];
n33 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", label="throw new ArgumentNullException(''client'');", span="135-135"];
n35 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", label="Exit Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="130-130"];
n36 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", label="Entry Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="148-148"];
n37 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", label="client == null", span="153-153"];
n39 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", label="return client.Create(Job.FromExpression(methodCall), state);", span="155-155"];
n38 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", label="throw new ArgumentNullException(''client'');", span="153-153"];
n40 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", label="Exit Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="148-148"];
n41 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="227-227"];
n42 [cluster="Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", label="Entry Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="50-50"];
n43 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", label="Entry Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="168-168"];
n44 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", label="client == null", span="173-173"];
n46 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", label="return client.Create(Job.FromExpression(methodCall), state);", span="175-175"];
n45 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", label="throw new ArgumentNullException(''client'');", span="173-173"];
n47 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", label="Exit Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="168-168"];
n48 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", label="Entry Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", span="281-281"];
n49 [cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", label="Entry Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", span="187-187"];
n50 [cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", label="client == null", span="192-192"];
n52 [cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", label="return client.ChangeState(jobId, state, null);", span="193-193"];
n51 [cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", label="throw new ArgumentNullException(''client'');", span="192-192"];
n53 [cluster="Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", label="Exit Hangfire.BackgroundJobClientExtensions.ChangeState(Hangfire.IBackgroundJobClient, string, Hangfire.States.IState)", span="187-187"];
n54 [cluster="Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", label="Entry Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="63-63"];
n55 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", label="Entry Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", span="217-217"];
n56 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", label="return Delete(client, jobId, null);", span="219-219"];
n57 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", label="Exit Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", span="217-217"];
n58 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", label="Entry Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", span="246-246"];
n59 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", label="client == null", span="251-251"];
n62 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", label="return client.ChangeState(jobId, state, fromState);", span="254-254"];
n60 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", label="throw new ArgumentNullException(''client'');", span="251-251"];
n61 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", label="var state = new DeletedState()", span="253-253"];
n64 [cluster="Hangfire.States.DeletedState.DeletedState()", label="Entry Hangfire.States.DeletedState.DeletedState()", span="65-65"];
n63 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", label="Exit Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", span="246-246"];
n65 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", label="Entry Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", span="265-265"];
n66 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", label="return Requeue(client, jobId, null);", span="267-267"];
n67 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", label="Exit Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string)", span="265-265"];
n68 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", label="Entry Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", span="281-281"];
n69 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", label="client == null", span="286-286"];
n72 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", label="return client.ChangeState(jobId, state, fromState);", span="289-289"];
n70 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", label="throw new ArgumentNullException(''client'');", span="286-286"];
n71 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", label="var state = new EnqueuedState()", span="288-288"];
n73 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", label="Exit Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", span="281-281"];
n74 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", span="292-292"];
n75 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", label="return ContinueWith(client, parentId, methodCall, new EnqueuedState());", span="297-297"];
n76 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", span="292-292"];
n77 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="308-308"];
n78 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>)", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>)", span="300-300"];
n79 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>)", label="return ContinueWith(client, parentId, methodCall, new EnqueuedState());", span="305-305"];
n80 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>)", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>)", span="300-300"];
n81 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="317-317"];
n82 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", label="return ContinueWith(client, parentId, methodCall, nextState, JobContinuationOptions.OnlyOnSucceededState);", span="314-314"];
n83 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="308-308"];
n84 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", span="344-344"];
n85 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", label="return ContinueWith(client, parentId, methodCall, nextState, JobContinuationOptions.OnlyOnSucceededState);", span="323-323"];
n86 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="317-317"];
n87 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", span="357-357"];
n88 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="326-326"];
n89 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", label="return ContinueWith(client, parentId, methodCall, new EnqueuedState(), options);", span="332-332"];
n90 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="326-326"];
n91 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.JobContinuationOptions)", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.JobContinuationOptions)", span="335-335"];
n92 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.JobContinuationOptions)", label="return ContinueWith(client, parentId, methodCall, new EnqueuedState(), options);", span="341-341"];
n93 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.JobContinuationOptions)", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.JobContinuationOptions)", span="335-335"];
n94 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", label="client == null", span="351-351"];
n96 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", label="var state = new AwaitingState(parentId, nextState, options)", span="353-353"];
n97 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", label="return client.Create(Job.FromExpression(methodCall), state);", span="354-354"];
n95 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", label="throw new ArgumentNullException(''client'');", span="351-351"];
n99 [cluster="Hangfire.States.AwaitingState.AwaitingState(string, Hangfire.States.IState, Hangfire.JobContinuationOptions)", label="Entry Hangfire.States.AwaitingState.AwaitingState(string, Hangfire.States.IState, Hangfire.JobContinuationOptions)", span="79-79"];
n98 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", span="344-344"];
n100 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", label="client == null", span="364-364"];
n102 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", label="var state = new AwaitingState(parentId, nextState, options)", span="366-366"];
n103 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", label="return client.Create(Job.FromExpression(methodCall), state);", span="367-367"];
n101 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", label="throw new ArgumentNullException(''client'');", span="364-364"];
n104 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", span="357-357"];
m0_26 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="BackgroundJob.cs", label="WriteLiteral(''\r\n                            </span>\r\n'')", span="198-198"];
m0_33 [cluster="HangFire.Web.RazorPage.Write(object)", file="BackgroundJob.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="40-40"];
m0_32 [cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJob.cs", label="HangFire.Web.Pages.ServersPage", span=""];
m0_23 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="BackgroundJob.cs", label="Write(JobHelper.ToStringTimestamp(server.Heartbeat.Value))", span="183-183"];
m0_30 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="BackgroundJob.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="33-33"];
m0_0 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="BackgroundJob.cs", label="Entry HangFire.Web.Pages.ServersPage.Execute()", span="39-39"];
m0_1 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="BackgroundJob.cs", label="WriteLiteral(''\r\n'')", span="43-43"];
m0_2 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="BackgroundJob.cs", label="Layout = new LayoutPage { Title = ''Servers'' }", span="53-53"];
m0_3 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="BackgroundJob.cs", label="WriteLiteral(''\r\n'')", span="59-59"];
m0_5 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="BackgroundJob.cs", label="WriteLiteral(''\r\n'')", span="71-71"];
m0_6 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="BackgroundJob.cs", label="servers.Count == 0", span="76-76"];
m0_9 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="BackgroundJob.cs", label=servers, span="103-103"];
m0_8 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="BackgroundJob.cs", label="WriteLiteral(''    <table class=\''table\''>\r\n        <thead>\r\n            <tr>\r\n                <th'' +\r\n''>Name</th>\r\n                <th>Workers</th>\r\n                <th>Queues</th>\r\n '' +\r\n''               <th>Started</th>\r\n            </tr>\r\n        </thead>\r\n        <t'' +\r\n''body>\r\n'')", prediction=0, span="95-98"];
m0_11 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="BackgroundJob.cs", label="Write(server.Name)", span="122-122"];
m0_13 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="BackgroundJob.cs", label="Write(server.WorkersCount)", span="132-132"];
m0_15 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="BackgroundJob.cs", label="Write(HtmlHelper.Raw(String.Join('' '', server.Queues.Select(HtmlHelper.QueueLabel))))", span="142-142"];
m0_19 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="BackgroundJob.cs", label="Write(server.StartedAt)", prediction=0, span="154-154"];
m0_21 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="BackgroundJob.cs", label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="169-169"];
m0_25 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="BackgroundJob.cs", label="Write(server.Heartbeat)", span="193-193"];
m0_12 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="BackgroundJob.cs", label="WriteLiteral(''</td>\r\n                    <td>'')", span="127-127"];
m0_14 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="BackgroundJob.cs", label="WriteLiteral(''</td>\r\n                    <td>'')", span="137-137"];
m0_16 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="BackgroundJob.cs", label="WriteLiteral(''</td>\r\n                    <td data-moment=\'''')", span="147-147"];
m0_18 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="BackgroundJob.cs", label="WriteLiteral(''\''>'')", span="149-149"];
m0_22 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="BackgroundJob.cs", label="WriteLiteral(''                            <span data-moment=\'''')", span="178-178"];
m0_27 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="BackgroundJob.cs", label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", span="208-208"];
m0_24 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="BackgroundJob.cs", label="WriteLiteral(''\''>\r\n                                '')", span="188-188"];
m0_29 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="BackgroundJob.cs", label="Exit HangFire.Web.Pages.ServersPage.Execute()", span="39-39"];
m0_36 [cluster="HangFire.Web.HtmlHelper.Raw(string)", file="BackgroundJob.cs", label="Entry HangFire.Web.HtmlHelper.Raw(string)", span="12-12"];
m0_31 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="BackgroundJob.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m0_35 [cluster="Unk.Join", file="BackgroundJob.cs", label="Entry Unk.Join", span=""];
m0_38 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="BackgroundJob.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m0_37 [cluster="Unk.Write", file="BackgroundJob.cs", label="Entry Unk.Write", span=""];
m0_34 [cluster="Unk.Select", file="BackgroundJob.cs", label="Entry Unk.Select", span=""];
m0_39 [file="BackgroundJob.cs", label="HangFire.Web.Pages.ServersPage", span=""];
m1_23 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="BackgroundJobClient.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="217-217"];
m1_63 [cluster="string.Format(string, object, object)", file="BackgroundJobClient.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m1_60 [cluster="Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", file="BackgroundJobClient.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", span="22-22"];
m1_14 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="BackgroundJobClient.cs", label="!AcquiredLocks.Value.ContainsKey(_resource)", span="60-60"];
m1_38 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="BackgroundJobClient.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", span="132-132"];
m1_68 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="BackgroundJobClient.cs", label="connection.Execute(\r\n                @''sp_releaseapplock'',\r\n                parameters,\r\n                commandType: CommandType.StoredProcedure)", span="139-142"];
m1_64 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="BackgroundJobClient.cs", label="var parameters = new DynamicParameters()", span="134-134"];
m1_69 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="BackgroundJobClient.cs", label="var releaseResult = parameters.Get<int>(''@Result'')", span="144-144"];
m1_67 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="BackgroundJobClient.cs", label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="137-137"];
m1_65 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="BackgroundJobClient.cs", label="parameters.Add(''@Resource'', resource)", span="135-135"];
m1_66 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="BackgroundJobClient.cs", label="parameters.Add(''@LockOwner'', LockOwner)", span="136-136"];
m1_71 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="BackgroundJobClient.cs", label="throw new SqlServerDistributedLockException(\r\n                    String.Format(\r\n                        ''Could not release a lock on the resource '{0}': Server returned the '{1}' error.'',\r\n                        resource,\r\n                        releaseResult));", span="148-152"];
m1_70 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="BackgroundJobClient.cs", label="releaseResult < 0", span="146-146"];
m1_72 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="BackgroundJobClient.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", span="132-132"];
m1_61 [cluster="Unk.ContainsKey", file="BackgroundJobClient.cs", label="Entry Unk.ContainsKey", span=""];
m1_22 [cluster="string.Format(string, object)", file="BackgroundJobClient.cs", label="Entry string.Format(string, object)", span="0-0"];
m1_24 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="BackgroundJobClient.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m1_58 [cluster="Unk.>", file="BackgroundJobClient.cs", label="Entry Unk.>", span=""];
m1_13 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="BackgroundJobClient.cs", label="_connection = storage.CreateAndOpenConnection()", span="58-58"];
m1_10 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="BackgroundJobClient.cs", label="throw new ArgumentException(string.Format(''The timeout specified is too large. Please supply a timeout equal to or less than {0} seconds'', Int32.MaxValue - CommandTimeoutAdditionSeconds), ''timeout'');", span="54-54"];
m1_55 [cluster="DynamicParameters.cstr", file="BackgroundJobClient.cs", label="Entry DynamicParameters.cstr", span=""];
m1_56 [cluster="Unk.Add", file="BackgroundJobClient.cs", label="Entry Unk.Add", span=""];
m1_4 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="BackgroundJobClient.cs", label="genericTypeName = genericTypeName.Substring(0, genericTypeName.IndexOf('`'))", span="15-15"];
m1_15 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="BackgroundJobClient.cs", label="Acquire(_connection, _resource, timeout)", span="62-62"];
m1_9 [cluster="string.IndexOf(char)", file="BackgroundJobClient.cs", label="Entry string.IndexOf(char)", span="0-0"];
m1_16 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="BackgroundJobClient.cs", label="AcquiredLocks.Value[_resource] = 1", span="63-63"];
m1_5 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="BackgroundJobClient.cs", label="var genericArgs = string.Join('','', t.GetGenericArguments().Select(ToGenericTypeString).ToArray())", span="17-17"];
m1_7 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="BackgroundJobClient.cs", label="Exit Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", span="7-7"];
m1_11 [cluster="System.Type.GetGenericArguments()", file="BackgroundJobClient.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m1_12 [cluster="Unk.Select", file="BackgroundJobClient.cs", label="Entry Unk.Select", span=""];
m1_17 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="BackgroundJobClient.cs", label="AcquiredLocks.Value[_resource]++", span="67-67"];
m1_6 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="BackgroundJobClient.cs", label="return genericTypeName + ''<'' + genericArgs + ''>'';", span="19-19"];
m1_8 [cluster="System.Type.GetGenericTypeDefinition()", file="BackgroundJobClient.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m1_18 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="BackgroundJobClient.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="50-50"];
m1_0 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="BackgroundJobClient.cs", label="Entry Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", span="7-7"];
m1_1 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="BackgroundJobClient.cs", label="!t.IsGenericType", span="9-9"];
m1_2 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="BackgroundJobClient.cs", label="return t.Name;", span="11-11"];
m1_3 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="BackgroundJobClient.cs", label="var genericTypeName = t.GetGenericTypeDefinition().Name", span="14-14"];
m1_20 [cluster="string.IsNullOrEmpty(string)", file="BackgroundJobClient.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_25 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="BackgroundJobClient.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", span="94-94"];
m1_48 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0, file="BackgroundJobClient.cs", label="connection.Execute(\r\n                @''sp_getapplock'',\r\n                parameters,\r\n                commandTimeout: commandTimeout,\r\n                commandType: CommandType.StoredProcedure)", prediction=2, span="107-111"];
m1_40 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="BackgroundJobClient.cs", label="var parameters = new DynamicParameters()", span="96-96"];
m1_47 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="BackgroundJobClient.cs", label="var commandTimeout = (int)(timeout.TotalSeconds + CommandTimeoutAdditionSeconds)", span="105-105"];
m1_49 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="BackgroundJobClient.cs", label="var lockResult = parameters.Get<int>(''@Result'')", span="113-113"];
m1_41 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="BackgroundJobClient.cs", label="parameters.Add(''@Resource'', resource)", span="97-97"];
m1_45 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="BackgroundJobClient.cs", label="parameters.Add(''@LockTimeout'', timeout.TotalMilliseconds)", span="101-101"];
m1_52 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="BackgroundJobClient.cs", label="throw new DistributedLockTimeoutException(resource);", span="119-119"];
m1_53 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="BackgroundJobClient.cs", label="throw new SqlServerDistributedLockException(\r\n                    String.Format(\r\n                    ''Could not place a lock on the resource '{0}': {1}.'',\r\n                    resource,\r\n                    LockErrorMessages.ContainsKey(lockResult)\r\n                        ? LockErrorMessages[lockResult]\r\n                        : String.Format(''Server returned the '{0}' error.'', lockResult)));", span="122-128"];
m1_42 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="BackgroundJobClient.cs", label="parameters.Add(''@DbPrincipal'', ''public'')", span="98-98"];
m1_43 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="BackgroundJobClient.cs", label="parameters.Add(''@LockMode'', LockMode)", span="99-99"];
m1_44 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="BackgroundJobClient.cs", label="parameters.Add(''@LockOwner'', LockOwner)", span="100-100"];
m1_46 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="BackgroundJobClient.cs", label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="102-102"];
m1_50 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="BackgroundJobClient.cs", label="lockResult < 0", span="115-115"];
m1_51 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="BackgroundJobClient.cs", label="lockResult == -1", span="117-117"];
m1_54 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="BackgroundJobClient.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", span="94-94"];
m1_59 [cluster="Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", file="BackgroundJobClient.cs", label="Entry Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", span="6-6"];
m1_21 [cluster="System.ArgumentException.ArgumentException(string, string)", file="BackgroundJobClient.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m1_57 [cluster="Unk.Execute", file="BackgroundJobClient.cs", label="Entry Unk.Execute", span=""];
m1_62 [cluster="Unk.Format", file="BackgroundJobClient.cs", label="Entry Unk.Format", span=""];
m1_39 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="BackgroundJobClient.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m1_26 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="BackgroundJobClient.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="71-71"];
m1_27 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="BackgroundJobClient.cs", label=_completed, span="73-73"];
m1_29 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="BackgroundJobClient.cs", label="_completed = true", span="75-75"];
m1_30 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="BackgroundJobClient.cs", label="!AcquiredLocks.Value.ContainsKey(_resource)", span="77-77"];
m1_32 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="BackgroundJobClient.cs", label="AcquiredLocks.Value[_resource]--", span="79-79"];
m1_33 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="BackgroundJobClient.cs", label="AcquiredLocks.Value[_resource] != 0", span="81-81"];
m1_35 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="BackgroundJobClient.cs", label="Release(_connection, _resource)", span="85-85"];
m1_36 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="BackgroundJobClient.cs", label="AcquiredLocks.Value.Remove(_resource)", span="86-86"];
m1_28 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="BackgroundJobClient.cs", label="return;", span="73-73"];
m1_31 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="BackgroundJobClient.cs", label="return;", span="77-77"];
m1_34 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="BackgroundJobClient.cs", label="return;", span="81-81"];
m1_37 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="BackgroundJobClient.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="71-71"];
m1_73 [file="BackgroundJobClient.cs", label="Hangfire.SqlServer.SqlServerDistributedLock", span=""];
m2_16 [cluster="Mock<IStateMachineFactory>.cstr", file="BackgroundJobClientFacts.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m2_18 [cluster="Mock<IState>.cstr", file="BackgroundJobClientFacts.cs", label="Entry Mock<IState>.cstr", span=""];
m2_96 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="100-100"];
m2_97 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="102-102"];
m2_98 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(null, _state.Object))", span="104-105"];
m2_99 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs", label="Assert.Equal(''job'', exception.ParamName)", span="107-107"];
m2_100 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="100-100"];
m2_56 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="64-64"];
m2_57 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="BackgroundJobClientFacts.cs", label="JobStorage.Current = new Mock<JobStorage>().Object", span="66-66"];
m2_58 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="BackgroundJobClientFacts.cs", label="Assert.DoesNotThrow(() => new BackgroundJobClient())", span="67-67"];
m2_59 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="BackgroundJobClientFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="64-64"];
m2_136 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="146-146"];
m2_137 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="148-148"];
m2_138 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(null, _state.Object, null))", span="150-151"];
m2_139 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="153-153"];
m2_140 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="146-146"];
m2_37 [cluster="Unk.Equal", file="BackgroundJobClientFacts.cs", label="Entry Unk.Equal", span=""];
m2_77 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", span="84-84"];
m2_80 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", file="BackgroundJobClientFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", span="84-84"];
m2_17 [cluster="Mock<IJobCreationProcess>.cstr", file="BackgroundJobClientFacts.cs", label="Entry Mock<IJobCreationProcess>.cstr", span=""];
m2_60 [cluster="Unk.DoesNotThrow", file="BackgroundJobClientFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m2_112 [cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="BackgroundJobClientFacts.cs", label="Entry HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="81-81"];
m2_121 [cluster="Unk.Run", file="BackgroundJobClientFacts.cs", label="Entry Unk.Run", span=""];
m2_64 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient()", file="BackgroundJobClientFacts.cs", label="Entry HangFire.BackgroundJobClient.BackgroundJobClient()", span="39-39"];
m2_122 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="132-132"];
m2_123 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="134-134"];
m2_124 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs", label="_process.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="135-136"];
m2_125 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs", label="var exception = Assert.Throws<CreateJobFailedException>(\r\n                () => client.Create(_job, _state.Object))", span="138-139"];
m2_126 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs", label="Assert.NotNull(exception.InnerException)", span="141-141"];
m2_127 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="142-142"];
m2_128 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="132-132"];
m2_145 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="157-157"];
m2_146 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="159-159"];
m2_147 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(''jobId'', null, null))", span="161-162"];
m2_148 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="Assert.Equal(''state'', exception.ParamName)", span="164-164"];
m2_149 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="157-157"];
m2_154 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="168-168"];
m2_155 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="170-170"];
m2_156 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs", label="client.ChangeState(''job-id'', _state.Object, null)", span="172-172"];
m2_157 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null))", span="174-177"];
m2_158 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="168-168"];
m2_36 [cluster="Unk.>", file="BackgroundJobClientFacts.cs", label="Entry Unk.>", span=""];
m2_104 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="111-111"];
m2_105 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="113-113"];
m2_106 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(_job, null))", span="115-116"];
m2_107 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="Assert.Equal(''state'', exception.ParamName)", span="118-118"];
m2_108 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="111-111"];
m2_163 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="181-181"];
m2_164 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="183-183"];
m2_165 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs", label="client.ChangeState(''job-id'', _state.Object, ''State'')", span="185-185"];
m2_166 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' }))", span="187-190"];
m2_167 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="181-181"];
m2_91 [cluster="HangFire.BackgroundJobClient.Dispose()", file="BackgroundJobClientFacts.cs", label="Entry HangFire.BackgroundJobClient.Dispose()", span="113-113"];
m2_171 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="194-194"];
m2_172 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs", label="_stateMachine.Setup(x => x.TryToChangeState(''job-id'', _state.Object, null))\r\n                .Returns(true)", span="196-197"];
m2_173 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="198-198"];
m2_174 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs", label="var result = client.ChangeState(''job-id'', _state.Object, null)", span="200-200"];
m2_175 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs", label="Assert.True(result)", span="202-202"];
m2_176 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="194-194"];
m2_23 [cluster="Unk.GetConnection", file="BackgroundJobClientFacts.cs", label="Entry Unk.GetConnection", span=""];
m2_144 [cluster="Unk.ChangeState", file="BackgroundJobClientFacts.cs", label="Entry Unk.ChangeState", span=""];
m2_86 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", span="91-91"];
m2_90 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="BackgroundJobClientFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", span="91-91"];
m2_129 [cluster="Unk.NotNull", file="BackgroundJobClientFacts.cs", label="Entry Unk.NotNull", span=""];
m2_13 [cluster="Unk.Setup", file="BackgroundJobClientFacts.cs", label="Entry Unk.Setup", span=""];
m2_95 [cluster="Unk.Dispose", file="BackgroundJobClientFacts.cs", label="Entry Unk.Dispose", span=""];
m2_65 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="71-71"];
m2_66 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="BackgroundJobClientFacts.cs", label="Assert.DoesNotThrow(() => new BackgroundJobClient(_storage.Object))", span="73-73"];
m2_67 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="BackgroundJobClientFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="71-71"];
m2_81 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="209-209"];
m2_182 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="BackgroundJobClientFacts.cs", label="return new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, _process.Object);", span="211-211"];
m2_183 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="BackgroundJobClientFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="209-209"];
m2_71 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77"];
m2_72 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="BackgroundJobClientFacts.cs", label="Assert.DoesNotThrow(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object))", span="79-80"];
m2_73 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="BackgroundJobClientFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77"];
m2_153 [cluster="HangFire.BackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="BackgroundJobClientFacts.cs", label="Entry HangFire.BackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", span="100-100"];
m2_162 [cluster="Unk.TryToChangeState", file="BackgroundJobClientFacts.cs", label="Entry Unk.TryToChangeState", span=""];
m2_178 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="196-196"];
m2_20 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="24-24"];
m2_24 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="29-29"];
m2_28 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="33-33"];
m2_21 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="x.GetConnection()", span="24-24"];
m2_22 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="24-24"];
m2_25 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="x.Create(_connection.Object)", span="29-29"];
m2_26 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="29-29"];
m2_29 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Method()", span="33-33"];
m2_30 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="33-33"];
m2_38 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="40-40"];
m2_39 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object)", span="40-40"];
m2_40 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="40-40"];
m2_46 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="49-49"];
m2_47 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="new BackgroundJobClient(_storage.Object, null, _process.Object)", span="49-49"];
m2_48 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="49-49"];
m2_53 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="58-58"];
m2_54 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null)", span="58-58"];
m2_55 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="58-58"];
m2_61 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="67-67"];
m2_62 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="new BackgroundJobClient()", span="67-67"];
m2_63 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="67-67"];
m2_68 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="73-73"];
m2_69 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="new BackgroundJobClient(_storage.Object)", span="73-73"];
m2_70 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="73-73"];
m2_74 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="80-80"];
m2_75 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object)", span="80-80"];
m2_76 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="80-80"];
m2_83 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="87-87"];
m2_85 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="87-87"];
m2_92 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="96-96"];
m2_94 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="96-96"];
m2_102 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="client.Create(null, _state.Object)", span="105-105"];
m2_101 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="105-105"];
m2_103 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="105-105"];
m2_110 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="client.Create(_job, null)", span="116-116"];
m2_109 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="116-116"];
m2_111 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="116-116"];
m2_118 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="128-128"];
m2_119 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="x.Run(It.IsNotNull<CreateContext>())", span="128-128"];
m2_120 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="128-128"];
m2_134 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="client.Create(_job, _state.Object)", span="139-139"];
m2_130 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="135-135"];
m2_133 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="139-139"];
m2_131 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="x.Run(It.IsAny<CreateContext>())", span="135-135"];
m2_132 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="135-135"];
m2_135 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="139-139"];
m2_142 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="client.ChangeState(null, _state.Object, null)", span="151-151"];
m2_141 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="151-151"];
m2_143 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="151-151"];
m2_151 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="client.ChangeState(''jobId'', null, null)", span="162-162"];
m2_150 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="162-162"];
m2_152 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="162-162"];
m2_159 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="174-177"];
m2_160 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null)", span="174-177"];
m2_161 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="174-177"];
m2_168 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="187-190"];
m2_169 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' })", span="187-190"];
m2_170 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="187-190"];
m2_179 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="x.TryToChangeState(''job-id'', _state.Object, null)", span="196-196"];
m2_180 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="196-196"];
m2_82 [cluster="Unk.Verify", file="BackgroundJobClientFacts.cs", label="Entry Unk.Verify", span=""];
m2_49 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55"];
m2_50 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="BackgroundJobClientFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null))", span="57-58"];
m2_51 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="BackgroundJobClientFacts.cs", label="Assert.Equal(''process'', exception.ParamName)", span="60-60"];
m2_52 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="BackgroundJobClientFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55"];
m2_31 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Method()", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Method()", span="205-205"];
m2_181 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Method()", file="BackgroundJobClientFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Method()", span="205-205"];
m2_15 [cluster="Mock<IStateMachine>.cstr", file="BackgroundJobClientFacts.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m2_32 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37"];
m2_33 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClientFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object))", span="39-40"];
m2_34 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClientFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="42-42"];
m2_35 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClientFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37"];
m2_42 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46"];
m2_43 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobClientFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, null, _process.Object))", span="48-49"];
m2_44 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobClientFacts.cs", label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="51-51"];
m2_45 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobClientFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46"];
m2_19 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="117-117"];
m2_27 [cluster="Unk.Create", file="BackgroundJobClientFacts.cs", label="Entry Unk.Create", span=""];
m2_113 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="122-122"];
m2_114 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs", label="var client = CreateClient()", span="124-124"];
m2_115 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs", label="client.Create(_job, _state.Object)", span="126-126"];
m2_116 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs", label="_process.Verify(x => x.Run(It.IsNotNull<CreateContext>()))", span="128-128"];
m2_117 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="122-122"];
m2_177 [cluster="Unk.True", file="BackgroundJobClientFacts.cs", label="Entry Unk.True", span=""];
m2_14 [cluster="Unk.Returns", file="BackgroundJobClientFacts.cs", label="Entry Unk.Returns", span=""];
m2_41 [cluster="BackgroundJobClient.cstr", file="BackgroundJobClientFacts.cs", label="Entry BackgroundJobClient.cstr", span=""];
m2_11 [cluster="Mock<IStorageConnection>.cstr", file="BackgroundJobClientFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m2_12 [cluster="Mock<JobStorage>.cstr", file="BackgroundJobClientFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m2_0 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20"];
m2_1 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="22-22"];
m2_2 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="_storage = new Mock<JobStorage>()", span="23-23"];
m2_3 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="24-24"];
m2_4 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="_stateMachine = new Mock<IStateMachine>()", span="26-26"];
m2_5 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="28-28"];
m2_6 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="_stateMachineFactory.Setup(x => x.Create(_connection.Object)).Returns(_stateMachine.Object)", span="29-29"];
m2_7 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="_process = new Mock<IJobCreationProcess>()", span="31-31"];
m2_8 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="_state = new Mock<IState>()", span="32-32"];
m2_9 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="_job = Job.FromExpression(() => Method())", span="33-33"];
m2_10 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20"];
m2_184 [file="BackgroundJobClientFacts.cs", label="HangFire.Core.Tests.BackgroundJobClientFacts", span=""];
m2_185 [file="BackgroundJobClientFacts.cs", label=client, span=""];
m2_186 [file="BackgroundJobClientFacts.cs", label=client, span=""];
m2_187 [file="BackgroundJobClientFacts.cs", label=client, span=""];
m2_188 [file="BackgroundJobClientFacts.cs", label=client, span=""];
m2_189 [file="BackgroundJobClientFacts.cs", label=client, span=""];
m3_3 [cluster="Mock<IBackgroundJobClient>.cstr", file="BackgroundJobFacts.cs", label="Entry Mock<IBackgroundJobClient>.cstr", span=""];
m3_147 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", file="BackgroundJobFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", span="131-131"];
m3_148 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", file="BackgroundJobFacts.cs", label="Initialize()", span="133-133"];
m3_149 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", file="BackgroundJobFacts.cs", label="BackgroundJob.Requeue(''job-id'', FailedState.StateName)", span="135-135"];
m3_150 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<EnqueuedState>(),\r\n                FailedState.StateName))", span="137-140"];
m3_151 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", file="BackgroundJobFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobFacts.Requeue_WithFromState_ChangesStateOfAJobToEnqueued_WithFromState()", span="131-131"];
m3_106 [cluster="HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJobFacts.cs", label="Entry HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="148-148"];
m3_61 [cluster="HangFire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_WithQueue_CreatesAJobInEnqueuedState_WithCorrespondingQueue()", file="BackgroundJobFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_WithQueue_CreatesAJobInEnqueuedState_WithCorrespondingQueue()", span="53-53"];
m3_62 [cluster="HangFire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_WithQueue_CreatesAJobInEnqueuedState_WithCorrespondingQueue()", file="BackgroundJobFacts.cs", label="Initialize()", span="55-55"];
m3_63 [cluster="HangFire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_WithQueue_CreatesAJobInEnqueuedState_WithCorrespondingQueue()", file="BackgroundJobFacts.cs", label="BackgroundJob.Enqueue<BackgroundJobFacts>(x => Method(), ''queue'')", span="57-57"];
m3_64 [cluster="HangFire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_WithQueue_CreatesAJobInEnqueuedState_WithCorrespondingQueue()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''queue'')))", span="59-61"];
m3_66 [cluster="HangFire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_WithQueue_CreatesAJobInEnqueuedState_WithCorrespondingQueue()", file="BackgroundJobFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_WithQueue_CreatesAJobInEnqueuedState_WithCorrespondingQueue()", span="53-53"];
m3_20 [cluster="Unk.>", file="BackgroundJobFacts.cs", label="Entry Unk.>", span=""];
m3_4 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Enqueue_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobFacts.Enqueue_CreatesAJobInEnqueuedState()", span="18-18"];
m3_5 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Enqueue_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="Initialize()", span="20-20"];
m3_6 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Enqueue_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="BackgroundJob.Enqueue(() => Method())", span="22-22"];
m3_7 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Enqueue_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="24-24"];
m3_9 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Enqueue_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobFacts.Enqueue_CreatesAJobInEnqueuedState()", span="18-18"];
m3_10 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Initialize()", file="BackgroundJobFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobFacts.Initialize()", span="153-153"];
m3_165 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Initialize()", file="BackgroundJobFacts.cs", label="BackgroundJob.ClientFactory = () => _client.Object", span="155-155"];
m3_166 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Initialize()", file="BackgroundJobFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobFacts.Initialize()", span="153-153"];
m3_48 [cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>, string)", file="BackgroundJobFacts.cs", label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>, string)", span="96-96"];
m3_86 [cluster="System.TimeSpan.FromDays(double)", file="BackgroundJobFacts.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m3_124 [cluster="HangFire.BackgroundJob.Delete(string)", file="BackgroundJobFacts.cs", label="Entry HangFire.BackgroundJob.Delete(string)", span="164-164"];
m3_128 [cluster="Unk.ChangeState", file="BackgroundJobFacts.cs", label="Entry Unk.ChangeState", span=""];
m3_138 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", file="BackgroundJobFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", span="118-118"];
m3_139 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", file="BackgroundJobFacts.cs", label="Initialize()", span="120-120"];
m3_140 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", file="BackgroundJobFacts.cs", label="BackgroundJob.Requeue(''job-id'')", span="122-122"];
m3_141 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<EnqueuedState>(),\r\n                null))", span="124-127"];
m3_142 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", file="BackgroundJobFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobFacts.Requeue_ChangesStateOfAJobToEnqueued()", span="118-118"];
m3_164 [cluster="Unk.NotNull", file="BackgroundJobFacts.cs", label="Entry Unk.NotNull", span=""];
m3_119 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", file="BackgroundJobFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", span="92-92"];
m3_120 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", file="BackgroundJobFacts.cs", label="Initialize()", span="94-94"];
m3_121 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", file="BackgroundJobFacts.cs", label="BackgroundJob.Delete(''job-id'')", span="96-96"];
m3_122 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<DeletedState>(),\r\n                null))", span="98-101"];
m3_123 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", file="BackgroundJobFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobFacts.Delete_ChangesStateOfAJobToDeleted()", span="92-92"];
m3_32 [cluster="HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobFacts.cs", label="Entry HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="78-78"];
m3_156 [cluster="HangFire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", file="BackgroundJobFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", span="144-144"];
m3_157 [cluster="HangFire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", file="BackgroundJobFacts.cs", label="BackgroundJob.ClientFactory = null", span="146-146"];
m3_158 [cluster="HangFire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", file="BackgroundJobFacts.cs", label="JobStorage.Current = new Mock<JobStorage>().Object", span="147-147"];
m3_159 [cluster="HangFire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", file="BackgroundJobFacts.cs", label="var client = BackgroundJob.ClientFactory()", span="149-149"];
m3_160 [cluster="HangFire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", file="BackgroundJobFacts.cs", label="Assert.NotNull(client)", span="150-150"];
m3_161 [cluster="HangFire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", file="BackgroundJobFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobFacts.ClientFactory_HasDefaultValue_ThatReturns()", span="144-144"];
m3_25 [cluster="Unk.Dispose", file="BackgroundJobFacts.cs", label="Entry Unk.Dispose", span=""];
m3_80 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", span="66-66"];
m3_81 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="Initialize()", span="68-68"];
m3_82 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="BackgroundJob.Schedule(() => Method(), TimeSpan.FromDays(1))", span="70-70"];
m3_83 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="72-74"];
m3_85 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobFacts.Schedule_WithTimeSpan_CreatesAJobInScheduledState()", span="66-66"];
m3_143 [cluster="HangFire.BackgroundJob.Requeue(string)", file="BackgroundJobFacts.cs", label="Entry HangFire.BackgroundJob.Requeue(string)", span="197-197"];
m3_87 [cluster="HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJobFacts.cs", label="Entry HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="131-131"];
m3_26 [cluster="HangFire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", span="29-29"];
m3_27 [cluster="HangFire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="Initialize()", span="31-31"];
m3_28 [cluster="HangFire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="BackgroundJob.Enqueue<BackgroundJobFacts>(x => x.Method())", span="33-33"];
m3_29 [cluster="HangFire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="35-35"];
m3_31 [cluster="HangFire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", file="BackgroundJobFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobFacts.EnqueueGeneric_CreatesAJobInEnqueuedState()", span="29-29"];
m3_67 [cluster="HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", file="BackgroundJobFacts.cs", label="Entry HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", span="115-115"];
m3_167 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="155-155"];
m3_13 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="22-22"];
m3_17 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="24-24"];
m3_22 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="25-25"];
m3_14 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Method()", span="22-22"];
m3_15 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="22-22"];
m3_18 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="24-24"];
m3_19 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="24-24"];
m3_24 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="25-25"];
m3_33 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="33-33"];
m3_36 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="35-35"];
m3_39 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="36-36"];
m3_34 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.Method()", span="33-33"];
m3_35 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="33-33"];
m3_37 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="35-35"];
m3_38 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="35-35"];
m3_41 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="36-36"];
m3_49 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="44-44"];
m3_52 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="46-48"];
m3_58 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="49-49"];
m3_50 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Method()", span="44-44"];
m3_51 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="44-44"];
m3_53 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.Create(\r\n                It.IsNotNull<Job>(), \r\n                It.Is<EnqueuedState>(state => state.Queue == ''queue''))", span="46-48"];
m3_54 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="46-48"];
m3_55 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="48-48"];
m3_56 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="state.Queue == ''queue''", span="48-48"];
m3_57 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="48-48"];
m3_60 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="49-49"];
m3_68 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="57-57"];
m3_71 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="59-61"];
m3_77 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="62-62"];
m3_69 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Method()", span="57-57"];
m3_70 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="57-57"];
m3_72 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''queue''))", span="59-61"];
m3_73 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="59-61"];
m3_74 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="61-61"];
m3_75 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="state.Queue == ''queue''", span="61-61"];
m3_76 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="61-61"];
m3_79 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="62-62"];
m3_88 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="70-70"];
m3_91 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="72-74"];
m3_97 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="75-75"];
m3_89 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Method()", span="70-70"];
m3_90 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="70-70"];
m3_92 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="72-74"];
m3_93 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="72-74"];
m3_94 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="74-74"];
m3_95 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="state.EnqueueAt > DateTime.UtcNow", span="74-74"];
m3_96 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="74-74"];
m3_99 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="75-75"];
m3_107 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="83-83"];
m3_110 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="85-87"];
m3_116 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="88-88"];
m3_108 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Method()", span="83-83"];
m3_109 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="83-83"];
m3_111 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="85-87"];
m3_112 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="85-87"];
m3_113 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="87-87"];
m3_114 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="state.EnqueueAt > DateTime.UtcNow", span="87-87"];
m3_115 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="87-87"];
m3_118 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="88-88"];
m3_125 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="98-101"];
m3_126 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<DeletedState>(),\r\n                null)", span="98-101"];
m3_127 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="98-101"];
m3_135 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="111-114"];
m3_136 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<DeletedState>(),\r\n                FailedState.StateName)", span="111-114"];
m3_137 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="111-114"];
m3_144 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="124-127"];
m3_145 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<EnqueuedState>(),\r\n                null)", span="124-127"];
m3_146 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="124-127"];
m3_153 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Entry lambda expression", span="137-140"];
m3_154 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<EnqueuedState>(),\r\n                FailedState.StateName)", span="137-140"];
m3_155 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="137-140"];
m3_168 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="_client.Object", span="155-155"];
m3_169 [cluster="lambda expression", file="BackgroundJobFacts.cs", label="Exit lambda expression", span="155-155"];
m3_16 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Method()", file="BackgroundJobFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobFacts.Method()", span="158-158"];
m3_170 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Method()", file="BackgroundJobFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobFacts.Method()", span="158-158"];
m3_0 [cluster="HangFire.Core.Tests.BackgroundJobFacts.BackgroundJobFacts()", file="BackgroundJobFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobFacts.BackgroundJobFacts()", span="12-12"];
m3_1 [cluster="HangFire.Core.Tests.BackgroundJobFacts.BackgroundJobFacts()", file="BackgroundJobFacts.cs", label="_client = new Mock<IBackgroundJobClient>()", span="14-14"];
m3_2 [cluster="HangFire.Core.Tests.BackgroundJobFacts.BackgroundJobFacts()", file="BackgroundJobFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobFacts.BackgroundJobFacts()", span="12-12"];
m3_21 [cluster="Unk.Create", file="BackgroundJobFacts.cs", label="Entry Unk.Create", span=""];
m3_134 [cluster="HangFire.BackgroundJob.Delete(string, string)", file="BackgroundJobFacts.cs", label="Entry HangFire.BackgroundJob.Delete(string, string)", span="182-182"];
m3_129 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", file="BackgroundJobFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", span="105-105"];
m3_130 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", file="BackgroundJobFacts.cs", label="Initialize()", span="107-107"];
m3_131 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", file="BackgroundJobFacts.cs", label="BackgroundJob.Delete(''job-id'', FailedState.StateName)", span="109-109"];
m3_132 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                It.IsAny<DeletedState>(),\r\n                FailedState.StateName))", span="111-114"];
m3_133 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", file="BackgroundJobFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobFacts.Delete_WithFromState_ChangesStateOfAJobToDeleted_WithFromState()", span="105-105"];
m3_11 [cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobFacts.cs", label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="60-60"];
m3_42 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Enqueue_WithQueue_CreatesAJobInEnqueuedState_WithCorrespondingQueue()", file="BackgroundJobFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobFacts.Enqueue_WithQueue_CreatesAJobInEnqueuedState_WithCorrespondingQueue()", span="40-40"];
m3_43 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Enqueue_WithQueue_CreatesAJobInEnqueuedState_WithCorrespondingQueue()", file="BackgroundJobFacts.cs", label="Initialize()", span="42-42"];
m3_44 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Enqueue_WithQueue_CreatesAJobInEnqueuedState_WithCorrespondingQueue()", file="BackgroundJobFacts.cs", label="BackgroundJob.Enqueue(() => Method(), ''queue'')", span="44-44"];
m3_45 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Enqueue_WithQueue_CreatesAJobInEnqueuedState_WithCorrespondingQueue()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(), \r\n                It.Is<EnqueuedState>(state => state.Queue == ''queue'')))", span="46-48"];
m3_47 [cluster="HangFire.Core.Tests.BackgroundJobFacts.Enqueue_WithQueue_CreatesAJobInEnqueuedState_WithCorrespondingQueue()", file="BackgroundJobFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobFacts.Enqueue_WithQueue_CreatesAJobInEnqueuedState_WithCorrespondingQueue()", span="40-40"];
m3_12 [cluster="Unk.Verify", file="BackgroundJobFacts.cs", label="Entry Unk.Verify", span=""];
m3_162 [cluster="Mock<JobStorage>.cstr", file="BackgroundJobFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m3_100 [cluster="HangFire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", span="79-79"];
m3_101 [cluster="HangFire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="Initialize()", span="81-81"];
m3_102 [cluster="HangFire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="BackgroundJob.Schedule<BackgroundJobFacts>(x => Method(), TimeSpan.FromDays(1))", span="83-83"];
m3_103 [cluster="HangFire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="85-87"];
m3_105 [cluster="HangFire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", file="BackgroundJobFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobFacts.ScheduleGeneric_WithTimeSpan_CreatesAJobInScheduledState()", span="79-79"];
m3_163 [cluster="System.Func<TResult>.Invoke()", file="BackgroundJobFacts.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m3_152 [cluster="HangFire.BackgroundJob.Requeue(string, string)", file="BackgroundJobFacts.cs", label="Entry HangFire.BackgroundJob.Requeue(string, string)", span="215-215"];
m3_171 [file="BackgroundJobFacts.cs", label="HangFire.Core.Tests.BackgroundJobFacts", span=""];
m4_30 [cluster="Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="DashboardPage.generated.cs", label="Exit Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="192-192"];
m4_33 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="DashboardPage.generated.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="227-227"];
m4_52 [cluster="Hangfire.Common.Job.GetExpressionValues(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)", file="DashboardPage.generated.cs", label="Entry Hangfire.Common.Job.GetExpressionValues(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)", span="362-362"];
m4_84 [cluster="Hangfire.Common.Job.GetExpressionValues(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)", file="DashboardPage.generated.cs", label="return expressions.Select(GetExpressionValue).ToArray();", span="364-364"];
m4_85 [cluster="Hangfire.Common.Job.GetExpressionValues(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)", file="DashboardPage.generated.cs", label="Exit Hangfire.Common.Job.GetExpressionValues(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)", span="362-362"];
m4_82 [cluster="string.Format(string, object, object)", file="DashboardPage.generated.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m4_13 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="WriteLiteral(''\r\n<h3>Realtime graph</h3>\r\n<div id=\''realtimeGraph\''></div>\r\n\r\n<h3>\r\n    <div class'' +\r\n''=\''btn-group pull-right\'' style=\''margin-top: 2px;\''>\r\n        <a href=\''?period=day\'''' +\r\n'' class=\''btn btn-sm btn-default '')", span="91-93"];
m4_14 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="Write(''day''.Equals(period, StringComparison.OrdinalIgnoreCase) ? ''active'' : null)", span="98-98"];
m4_15 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="WriteLiteral(''\''>\r\n            Day\r\n        </a>\r\n        <a href=\''?period=week\'' class=\''btn btn-'' +\r\n''sm btn-default '')", span="103-104"];
m4_16 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="Write(''week''.Equals(period, StringComparison.OrdinalIgnoreCase) ? ''active'' : null)", span="109-109"];
m4_17 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="WriteLiteral(''\''>Week</a>\r\n    </div>\r\n    History graph\r\n</h3>\r\n\r\n'')", span="114-114"];
m4_91 [cluster="Hangfire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="DashboardPage.generated.cs", label="Entry Hangfire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", span="25-25"];
m4_81 [cluster="System.Type.IsAssignableFrom(System.Type)", file="DashboardPage.generated.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m4_32 [cluster="HangFire.Storage.IMonitoringApi.HourlyFailedJobs()", file="DashboardPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.HourlyFailedJobs()", span="50-50"];
m4_51 [cluster="object.GetType()", file="DashboardPage.generated.cs", label="Entry object.GetType()", span="0-0"];
m4_53 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="DashboardPage.generated.cs", label="Entry Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", span="281-281"];
m4_59 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="DashboardPage.generated.cs", label="return new Job(\r\n                typeof(TType),\r\n                callExpression.Method,\r\n                GetExpressionValues(callExpression.Arguments));", span="291-294"];
m4_55 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="DashboardPage.generated.cs", label="throw new ArgumentNullException(''methodCall'');", span="283-283"];
m4_56 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="DashboardPage.generated.cs", label="var callExpression = methodCall.Body as MethodCallExpression", span="285-285"];
m4_57 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="DashboardPage.generated.cs", label="callExpression == null", span="286-286"];
m4_54 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="DashboardPage.generated.cs", label="methodCall == null", span="283-283"];
m4_58 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="DashboardPage.generated.cs", label="throw new ArgumentException(''Expression body should be of type `MethodCallExpression`'', ''methodCall'');", span="288-288"];
m4_60 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="DashboardPage.generated.cs", label="Exit Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", span="281-281"];
m4_20 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="Write(JsonConvert.SerializeObject(succeeded))", span="130-130"];
m4_21 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="WriteLiteral(''\'' \r\n          data-failed=\'''')", span="135-135"];
m4_22 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="Write(JsonConvert.SerializeObject(failed))", span="140-140"];
m4_31 [cluster="HangFire.Storage.IMonitoringApi.HourlySucceededJobs()", file="DashboardPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.HourlySucceededJobs()", span="49-49"];
m4_25 [cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="DashboardPage.generated.cs", label="Entry Hangfire.Common.Job.GetMethodFilterAttributes(bool)", span="185-185"];
m4_34 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="DashboardPage.generated.cs", label="methodCall == null", span="229-229"];
m4_23 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="WriteLiteral(''\''>\r\n    </div>\r\n'')", span="145-145"];
m4_49 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="DashboardPage.generated.cs", label="Entry Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", span="367-367"];
m4_88 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="DashboardPage.generated.cs", label="var constantExpression = expression as ConstantExpression", span="369-369"];
m4_89 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="DashboardPage.generated.cs", label="return constantExpression != null\r\n                ? constantExpression.Value\r\n                : CachedExpressionCompiler.Evaluate(expression);", span="371-373"];
m4_90 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="DashboardPage.generated.cs", label="Exit Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", span="367-367"];
m4_87 [cluster="Unk.ToArray", file="DashboardPage.generated.cs", label="Entry Unk.ToArray", span=""];
m4_50 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="DashboardPage.generated.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m4_0 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="Entry HangFire.Web.Pages.DashboardPage.Execute()", span="51-51"];
m4_1 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="WriteLiteral(''\r\n'')", span="55-55"];
m4_2 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="Layout = new LayoutPage { Title = ''Dashboard'' }", span="67-67"];
m4_3 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="IDictionary<DateTime, long> succeeded = null", span="68-68"];
m4_4 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="IDictionary<DateTime, long> failed = null", span="69-69"];
m4_18 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="succeeded != null && failed != null", span="119-119"];
m4_5 [cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs", label="var period = Request.QueryString[''period'']?? ''day''", span="71-71"];
m4_19 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="DashboardPage.generated.cs", label="Entry Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", span="297-297"];
m4_24 [cluster="Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="DashboardPage.generated.cs", label="Entry Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="192-192"];
m4_80 [cluster="System.NotSupportedException.NotSupportedException(string)", file="DashboardPage.generated.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m4_29 [cluster="HangFire.Storage.IMonitoringApi.SucceededByDatesCount()", file="DashboardPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.SucceededByDatesCount()", span="47-47"];
m4_35 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="DashboardPage.generated.cs", label="throw new ArgumentNullException(''methodCall'');", span="229-229"];
m4_86 [cluster="Unk.Select", file="DashboardPage.generated.cs", label="Entry Unk.Select", span=""];
m4_28 [cluster="Unk.Equals", file="DashboardPage.generated.cs", label="Entry Unk.Equals", span=""];
m4_48 [cluster="System.ArgumentException.ArgumentException(string, string)", file="DashboardPage.generated.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m4_27 [cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="DashboardPage.generated.cs", label="Exit Hangfire.Common.Job.GetMethodFilterAttributes(bool)", span="185-185"];
m4_26 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="DashboardPage.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m4_83 [cluster="System.Reflection.MethodBase.GetParameters()", file="DashboardPage.generated.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m4_61 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="DashboardPage.generated.cs", label="!method.IsPublic", span="306-306"];
m4_63 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="DashboardPage.generated.cs", label="method.ContainsGenericParameters", span="311-311"];
m4_65 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="DashboardPage.generated.cs", label="method.DeclaringType == null", span="316-316"];
m4_67 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="DashboardPage.generated.cs", label="!method.DeclaringType.IsAssignableFrom(type)", span="321-321"];
m4_68 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="DashboardPage.generated.cs", label="throw new ArgumentException(\r\n                    String.Format(''The type `{0}` must be derived from the `{1}` type.'', method.DeclaringType, type),\r\n                    typeParameterName);", span="323-325"];
m4_69 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="DashboardPage.generated.cs", label="typeof(Task).IsAssignableFrom(method.ReturnType)", span="328-328"];
m4_71 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="DashboardPage.generated.cs", label="var parameters = method.GetParameters()", span="333-333"];
m4_72 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="DashboardPage.generated.cs", label="parameters.Length != argumentCount", span="335-335"];
m4_73 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="DashboardPage.generated.cs", label="throw new ArgumentException(\r\n                    ''Argument count must be equal to method parameter count.'',\r\n                    argumentParameterName);", span="337-339"];
m4_62 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="DashboardPage.generated.cs", label="throw new NotSupportedException(''Only public methods can be invoked in the background.'');", span="308-308"];
m4_64 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="DashboardPage.generated.cs", label="throw new NotSupportedException(''Job method can not contain unassigned generic type parameters.'');", span="313-313"];
m4_66 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="DashboardPage.generated.cs", label="throw new NotSupportedException(''Global methods are not supported. Use class methods instead.'');", span="318-318"];
m4_70 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="DashboardPage.generated.cs", label="throw new NotSupportedException(''Async methods are not supported. Please make them synchronous before using them in background.'');", span="330-330"];
m4_74 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="DashboardPage.generated.cs", label=parameters, span="342-342"];
m4_76 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="DashboardPage.generated.cs", label="throw new NotSupportedException(\r\n                        ''Output parameters are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="350-351"];
m4_78 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="DashboardPage.generated.cs", label="throw new NotSupportedException(\r\n                        ''Parameters, passed by reference, are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="356-357"];
m4_77 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="DashboardPage.generated.cs", label="parameter.ParameterType.IsByRef", span="354-354"];
m4_75 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="DashboardPage.generated.cs", label="parameter.IsOut", span="348-348"];
m4_79 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="DashboardPage.generated.cs", label="Exit Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", span="297-297"];
m4_46 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="DashboardPage.generated.cs", label="return new Job(\r\n                // ReSharper disable once AssignNullToNotNullAttribute\r\n                type,\r\n                callExpression.Method,\r\n                GetExpressionValues(callExpression.Arguments));", span="254-258"];
m4_36 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="DashboardPage.generated.cs", label="HangFire.Web.Pages.DashboardPage", span=""];
m4_45 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="DashboardPage.generated.cs", label="type = callExpression.Method.DeclaringType", span="251-251"];
m4_44 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="DashboardPage.generated.cs", label="type = objectValue.GetType()", span="247-247"];
m4_37 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="DashboardPage.generated.cs", label="callExpression == null", span="232-232"];
m4_40 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="DashboardPage.generated.cs", label="callExpression.Object != null", span="239-239"];
m4_41 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="DashboardPage.generated.cs", label="var objectValue = GetExpressionValue(callExpression.Object)", span="241-241"];
m4_42 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="DashboardPage.generated.cs", label="objectValue == null", span="242-242"];
m4_38 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="DashboardPage.generated.cs", label="throw new ArgumentException(''Expression body should be of type `MethodCallExpression`'', ''methodCall'');", span="234-234"];
m4_43 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="DashboardPage.generated.cs", label="throw new InvalidOperationException(''Expression object should be not null.'');", span="244-244"];
m4_39 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="DashboardPage.generated.cs", label="Type type", span="237-237"];
m4_47 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="DashboardPage.generated.cs", label="Exit Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="227-227"];
m4_92 [file="DashboardPage.generated.cs", label="Hangfire.Common.Job", span=""];
m5_64 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", span="29-29"];
m5_53 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="WriteLiteral(''            </tbody>\r\n        </table>\r\n    </div>\r\n'')", prediction=3, span="370-370"];
m5_56 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m5_70 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m5_24 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                        <td>\r\n'')", span="185-185"];
m5_4 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", label="int.TryParse(Request.QueryString[''from''], out from)", span="73-73"];
m5_7 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="JobList<DeletedJobDto> jobs", prediction=4, span="77-77"];
m5_9 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="pager = new Pager(from, perPage, monitor.DeletedListCount())\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/deleted'')\r\n        }", prediction=3, span="81-84"];
m5_14 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="WriteLiteral(''    <div class=\''js-jobs-list\''>\r\n        <div class=\''btn-toolbar btn-toolbar-top\''>'' +\r\n''\r\n            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\r\n     '' +\r\n''               data-url=\'''')", prediction=3, span="116-118"];
m5_15 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Write(Request.LinkTo(''/deleted/requeue''))", prediction=3, span="123-123"];
m5_6 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Pager pager", prediction=8, span="76-76"];
m5_8 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", prediction=9, span="79-79"];
m5_10 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="jobs = monitor.DeletedJobs(pager.FromRecord, pager.RecordsPerPage)", prediction=3, span="86-86"];
m5_12 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="pager.TotalPageCount == 0", prediction=3, span="98-98"];
m5_16 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="WriteLiteral(''\''\r\n                    data-loading-text=\''Enqueueing...\''>\r\n                <span '' +\r\n''class=\''glyphicon glyphicon-repeat\''></span>\r\n                Requeue jobs\r\n      '' +\r\n''      </button>\r\n            '')", prediction=3, span="128-130"];
m5_18 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="WriteLiteral(@''\r\n        </div>\r\n        <table class=''''table''''>\r\n            <thead>\r\n                <tr>\r\n                    <th class=''''min-width''''>\r\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                    </th>\r\n                    <th class=''''min-width''''>Id</th>\r\n                    <th>Job</th>\r\n                    <th class=''''align-right''''>Deleted</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n'')", prediction=3, span="140-154"];
m5_61 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="DeletedJobsPage.generated.cs", label="Exit HangFire.BackgroundJobServer.GetCommonComponentRunners()", span="107-107"];
m5_0 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", file="DeletedJobsPage.generated.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", span="36-36"];
m5_1 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", prediction=3, span="36-36"];
m5_2 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", file="DeletedJobsPage.generated.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", span="41-41"];
m5_54 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Entry HangFire.BackgroundJobServer.GetCommonComponentRunners()", prediction=3, span="107-107"];
m5_19 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", prediction=3, span="0-0"];
m5_52 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="DeletedJobsPage.generated.cs", label="Exit HangFire.BackgroundJobServer.GetServerComponentsRunner()", span="97-97"];
m5_20 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="WriteLiteral(''                    <tr class=\''js-jobs-list-row '')", prediction=3, span="165-165"];
m5_21 [cluster="System.ArgumentException.ArgumentException(string, string)", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", prediction=3, span="0-0"];
m5_22 [cluster="string.ToLowerInvariant()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Entry string.ToLowerInvariant()", prediction=3, span="0-0"];
m5_23 [cluster="System.Diagnostics.Process.GetCurrentProcess()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Entry System.Diagnostics.Process.GetCurrentProcess()", prediction=3, span="0-0"];
m5_25 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Entry HangFire.BackgroundJobServer.GetServerRunner()", prediction=3, span="78-78"];
m5_26 [cluster="HangFire.BackgroundJobServer.Start()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Entry HangFire.BackgroundJobServer.Start()", prediction=3, span="63-63"];
m5_29 [cluster="HangFire.Server.IServerComponentRunner.Start()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Entry HangFire.Server.IServerComponentRunner.Start()", prediction=3, span="22-22"];
m5_30 [cluster="HangFire.BackgroundJobServer.Stop()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Entry HangFire.BackgroundJobServer.Stop()", prediction=3, span="68-68"];
m5_28 [cluster="HangFire.BackgroundJobServer.Start()", file="DeletedJobsPage.generated.cs", label="Exit HangFire.BackgroundJobServer.Start()", span="63-63"];
m5_31 [cluster="HangFire.BackgroundJobServer.Stop()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="_serverRunner.Stop()", prediction=3, span="70-70"];
m5_32 [cluster="HangFire.BackgroundJobServer.Stop()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Exit HangFire.BackgroundJobServer.Stop()", prediction=3, span="68-68"];
m5_33 [cluster="HangFire.Server.IServerComponentRunner.Stop()", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Server.IServerComponentRunner.Stop()", span="23-23"];
m5_34 [cluster="HangFire.BackgroundJobServer.Dispose()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Entry HangFire.BackgroundJobServer.Dispose()", prediction=3, span="73-73"];
m5_35 [cluster="HangFire.BackgroundJobServer.Dispose()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="_serverRunner.Dispose()", prediction=3, span="75-75"];
m5_36 [cluster="HangFire.BackgroundJobServer.Dispose()", file="DeletedJobsPage.generated.cs", label="Exit HangFire.BackgroundJobServer.Dispose()", span="73-73"];
m5_37 [cluster="System.IDisposable.Dispose()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Entry System.IDisposable.Dispose()", prediction=3, span="0-0"];
m5_41 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Exit HangFire.BackgroundJobServer.GetServerRunner()", prediction=3, span="78-78"];
m5_42 [cluster="HangFire.Server.ServerContext.ServerContext()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Entry HangFire.Server.ServerContext.ServerContext()", prediction=3, span="18-18"];
m5_43 [cluster="HangFire.Server.JobServer.JobServer(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerComponentRunner>)", color=green, community=1, file="DeletedJobsPage.generated.cs", label="Entry HangFire.Server.JobServer.JobServer(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerComponentRunner>)", prediction=3, span="28-28"];
m5_45 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", prediction=3, span="41-41"];
m5_44 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="DeletedJobsPage.generated.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m5_46 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", prediction=3, span="24-24"];
m5_47 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="Entry HangFire.BackgroundJobServer.GetServerComponentsRunner()", prediction=3, span="97-97"];
m5_48 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", color=green, community=0, file="DeletedJobsPage.generated.cs", label="var componentRunners = new List<IServerComponentRunner>()", prediction=36, span="99-99"];
m5_3 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", file="DeletedJobsPage.generated.cs", label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", span="41-41"];
m5_55 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="DeletedJobsPage.generated.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m5_71 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m5_58 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="DeletedJobsPage.generated.cs", label="yield return new ServerComponentRunner(\r\n                new ServerHeartbeat(_storage, _serverId));", span="109-110"];
m5_73 [cluster="Unk.ToArray", file="DeletedJobsPage.generated.cs", label="Entry Unk.ToArray", span=""];
m5_66 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", span="16-16"];
m5_63 [cluster="HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", span="36-36"];
m5_65 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m5_74 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="Entry lambda expression", span="124-124"];
m5_76 [cluster="lambda expression", file="DeletedJobsPage.generated.cs", label="Exit lambda expression", span="124-124"];
m5_67 [cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="29-29"];
m5_57 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m5_72 [cluster="Unk.Select", file="DeletedJobsPage.generated.cs", label="HangFire.Web.Pages.DeletedJobsPage", span=""];
m5_62 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", file="DeletedJobsPage.generated.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", span="36-36"];
m5_77 [file="DeletedJobsPage.generated.cs", label="HangFire.BackgroundJobServer", span=""];
m6_0 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="EnqueuedJobsPage.generated.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24"];
m6_3 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="EnqueuedJobsPage.generated.cs", label="Exit HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24"];
m6_4 [cluster="System.TimeSpan.FromSeconds(double)", file="EnqueuedJobsPage.generated.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m6_5 [file="EnqueuedJobsPage.generated.cs", label="HangFire.Server.ServerComponentRunnerOptions", span=""];
m7_66 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44"];
m7_40 [cluster="Hangfire.JobStorage.GetConnection()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m7_14 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", span="55-55"];
m7_26 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="FailedJobsPage.generated.cs", label="var invocationData = InvocationData.Serialize(job)", span="67-67"];
m7_28 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="FailedJobsPage.generated.cs", label="recurringJob[''Cron''] = cronExpression", span="70-70"];
m7_29 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="FailedJobsPage.generated.cs", label="recurringJob[''TimeZoneId''] = options.TimeZone.Id", span="71-71"];
m7_30 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="FailedJobsPage.generated.cs", label="recurringJob[''Queue''] = options.QueueName", span="72-72"];
m7_31 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="FailedJobsPage.generated.cs", label="var existingJob = connection.GetAllEntriesFromHash($''recurring-job:{recurringJobId}'')", span="74-74"];
m7_27 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="FailedJobsPage.generated.cs", label="recurringJob[''Job''] = JobHelper.ToJson(invocationData)", span="69-69"];
m7_38 [cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", span="55-55"];
m7_67 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87"];
m7_50 [cluster="Hangfire.RecurringJobManager.Trigger(string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.RecurringJobManager.Trigger(string)", span="93-93"];
m7_54 [cluster="Hangfire.RecurringJobManager.Trigger(string)", file="FailedJobsPage.generated.cs", label="var hash = connection.GetAllEntriesFromHash($''recurring-job:{recurringJobId}'')", span="99-99"];
m7_60 [cluster="Hangfire.RecurringJobManager.Trigger(string)", file="FailedJobsPage.generated.cs", label="state.Queue = hash[''Queue'']", span="110-110"];
m7_64 [cluster="Hangfire.RecurringJobManager.Trigger(string)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.RecurringJobManager.Trigger(string)", span="93-93"];
m7_71 [cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.RecurringJobManager.RemoveIfExists(string)", span="119-119"];
m7_78 [cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="FailedJobsPage.generated.cs", label="transaction.Commit()", span="129-129"];
m7_79 [cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.RecurringJobManager.RemoveIfExists(string)", span="119-119"];
m7_0 [cluster="Hangfire.RecurringJobManager.RecurringJobManager()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.RecurringJobManager.RecurringJobManager()", span="36-36"];
m7_1 [cluster="Hangfire.RecurringJobManager.RecurringJobManager()", file="FailedJobsPage.generated.cs", label="Exit Hangfire.RecurringJobManager.RecurringJobManager()", span="36-36"];
m7_89 [cluster="System.ArgumentException.ArgumentException(string, string, System.Exception)", file="FailedJobsPage.generated.cs", label="Entry System.ArgumentException.ArgumentException(string, string, System.Exception)", span="0-0"];
m7_81 [cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="43-43"];
m7_68 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="FailedJobsPage.generated.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m7_42 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="69-69"];
m7_69 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="37-37"];
m7_2 [cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", span="41-41"];
m7_3 [cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", span="41-41"];
m7_13 [cluster="Unk.nameof", file="FailedJobsPage.generated.cs", label="Entry Unk.nameof", span=""];
m7_46 [cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27"];
m7_48 [cluster="Hangfire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="41-41"];
m7_41 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FailedJobsPage.generated.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m7_47 [cluster="Hangfire.Storage.IWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="51-51"];
m7_45 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m7_65 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m7_39 [cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.RecurringJobManager.ValidateCronExpression(string)", span="133-133"];
m7_86 [cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.RecurringJobManager.ValidateCronExpression(string)", span="133-133"];
m7_49 [cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54"];
m7_43 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m7_4 [cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", span="46-46"];
m7_11 [cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", file="FailedJobsPage.generated.cs", label="Exit Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", span="46-46"];
m7_44 [cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
m7_80 [cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveHash(string)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveHash(string)", span="52-52"];
m7_87 [cluster="NCrontab.CrontabSchedule.Parse(string)", file="FailedJobsPage.generated.cs", label="Entry NCrontab.CrontabSchedule.Parse(string)", span="93-93"];
m7_88 [cluster="NCrontab.CrontabSchedule.GetNextOccurrence(System.DateTime)", file="FailedJobsPage.generated.cs", label="Entry NCrontab.CrontabSchedule.GetNextOccurrence(System.DateTime)", span="193-193"];
m7_70 [cluster="Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", file="FailedJobsPage.generated.cs", label="Entry Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", span="31-31"];
m7_90 [file="FailedJobsPage.generated.cs", label="Hangfire.RecurringJobManager", span=""];
m8_56 [cluster="HangFire.Storage.IMonitoringApi.FetchedJobs(string, int, int)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.FetchedJobs(string, int, int)", span="30-30"];
m8_57 [cluster="HangFire.Web.RazorPage.Write(object)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m8_0 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.FetchedJobsPage.Execute()", span="62-62"];
m8_1 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\r\n'')", prediction=37, span="66-66"];
m8_2 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Layout = new LayoutPage\r\n        {\r\n            Title = Queue.ToUpperInvariant(),\r\n            Subtitle = ''Fetched jobs'',\r\n            Breadcrumbs = new Dictionary<string, string>\r\n                {\r\n                    { ''Queues'', Request.LinkTo(''/queues'') },\r\n                    { Queue.ToUpperInvariant(), Request.LinkTo(''/queues/'' + Queue) }\r\n                },\r\n            BreadcrumbsTitle = ''Fetched jobs'',\r\n        }", span="80-90"];
m8_12 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="pager.TotalPageCount == 0", prediction=38, span="120-120"];
m8_14 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''    <div class=\''js-jobs-list\''>\r\n        <div class=\''btn-toolbar btn-toolbar-top\''>'' +\r\n''\r\n            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\r\n     '' +\r\n''               data-url=\'''')", prediction=37, span="138-140"];
m8_15 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(Request.LinkTo(''/enqueued/requeue''))", span="145-145"];
m8_63 [cluster="string.Format(string, object)", file="FetchedJobsPage.generated.cs", label="Entry string.Format(string, object)", span="0-0"];
m8_54 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m8_52 [cluster="Unk.TryParse", file="FetchedJobsPage.generated.cs", label="Entry Unk.TryParse", span=""];
m8_47 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m8_5 [cluster="HangFire.States.DeletedState.SerializeData()", file="FetchedJobsPage.generated.cs", label="Exit HangFire.States.DeletedState.SerializeData()", span="51-51"];
m8_8 [cluster="HangFire.States.DeletedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Entry HangFire.States.DeletedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", prediction=37, span="61-61"];
m8_10 [cluster="HangFire.States.DeletedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Exit HangFire.States.DeletedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", prediction=37, span="61-61"];
m8_19 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="179-179"];
m8_45 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Write(RenderPartial(new Paginator(pager)))", prediction=37, span="349-349"];
m8_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", prediction=43, span="0-0"];
m8_7 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", prediction=44, span="50-50"];
m8_11 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33"];
m8_21 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label=fetchedJobs, prediction=37, span="205-205"];
m8_44 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''            </tbody>\r\n        </table>\r\n    </div>\r\n'')", prediction=37, span="338-338"];
m8_20 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(@''\r\n        </div>\r\n\r\n        <table class=''''table''''>\r\n            <thead>\r\n                <tr>\r\n                    <th class=''''min-width''''>\r\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                    </th>\r\n                    <th class=''''min-width''''>Id</th>\r\n                    <th class=''''min-width''''>State</th>\r\n                    <th>Job</th>\r\n                    <th class=''''align-right''''>Fetched</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n'')", prediction=37, span="184-200"];
m8_43 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''                        </td>\r\n                    </tr>\r\n'')", span="328-328"];
m8_22 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''                    <tr class=\''js-jobs-list-row hover\''>\r\n                        '' +\r\n''<td>\r\n                            <input type=\''checkbox\'' class=\''js-jobs-list-che'' +\r\n''ckbox\'' name=\''jobs[]\'' value=\'''')", prediction=37, span="211-213"];
m8_23 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Write(job.Key)", prediction=37, span="218-218"];
m8_16 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="HangFire.States.DeletedState", prediction=37, span=""];
m8_17 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Write(Request.LinkTo(''/enqueued/delete''))", span="162-162"];
m8_18 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Deleting...''''\r\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\r\n                <span class=''''glyphicon glyphicon-remove''''></span>\r\n                Delete selected\r\n            </button>\r\n\r\n            '')", prediction=37, span="167-174"];
m8_24 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\'' />\r\n                        </td>\r\n                        <td class=\''min-width'' +\r\n''\''>\r\n                            <a href=\'''')", prediction=37, span="223-224"];
m8_25 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", prediction=37, span="229-229"];
m8_26 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\''>'')", prediction=37, span="234-234"];
m8_27 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Write(HtmlHelper.JobId(job.Key))", prediction=37, span="239-239"];
m8_28 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''</a>\r\n                        </td>\r\n                        <td class=\''min-width'' +\r\n''\''>\r\n                            <span class=\''label label-default\'' style=\'''')", prediction=37, span="244-245"];
m8_29 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Write(JobHistoryRenderer.ForegroundStateColors.ContainsKey(job.Value.State) ? String.Format(''background-color: {0};'', JobHistoryRenderer.ForegroundStateColors[job.Value.State]) : null)", prediction=37, span="250-250"];
m8_30 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                                '')", prediction=37, span="255-255"];
m8_31 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Write(job.Value.State)", prediction=37, span="260-260"];
m8_32 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\r\n                            </span>\r\n                        </td>\r\n           '' +\r\n''             <td>\r\n                            <a class=\''job-method\'' href=\'''')", prediction=37, span="265-266"];
m8_33 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", prediction=37, span="271-271"];
m8_34 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                                '')", prediction=37, span="276-276"];
m8_35 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", prediction=37, span="281-281"];
m8_36 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\r\n                            </a>\r\n                        </td>\r\n              '' +\r\n''          <td class=\''align-right\''>\r\n'')", prediction=37, span="286-287"];
m8_37 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="job.Value.FetchedAt.HasValue", prediction=37, span="292-292"];
m8_38 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''                                <span data-moment=\'''')", prediction=37, span="298-298"];
m8_39 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.FetchedAt.Value))", prediction=37, span="303-303"];
m8_40 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                                    '')", prediction=37, span="308-308"];
m8_41 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs", label="Write(job.Value.FetchedAt)", prediction=37, span="313-313"];
m8_42 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="WriteLiteral(''\r\n                                </span>\r\n'')", span="318-318"];
m8_3 [cluster="HangFire.States.DeletedState.SerializeData()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.States.DeletedState.SerializeData()", span="51-51"];
m8_46 [cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", label="Exit HangFire.Web.Pages.FetchedJobsPage.Execute()", span="62-62"];
m8_49 [cluster="string.ToUpperInvariant()", file="FetchedJobsPage.generated.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m8_59 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m8_58 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m8_62 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="FetchedJobsPage.generated.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m8_60 [cluster="Unk.Write", file="FetchedJobsPage.generated.cs", label="Entry Unk.Write", span=""];
m8_61 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m8_53 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m8_48 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m8_51 [cluster="HttpRequestBase.LinkTo(string)", file="FetchedJobsPage.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m8_55 [cluster="HangFire.Storage.IMonitoringApi.FetchedCount(string)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.FetchedCount(string)", span="40-40"];
m8_64 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m8_66 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m8_67 [file="FetchedJobsPage.generated.cs", label="HangFire.Web.Pages.FetchedJobsPage", span=""];
m9_0 [cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="IBackgroundJobClient.cs", label="Entry HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="42-42"];
m9_1 [cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="IBackgroundJobClient.cs", label="Exit HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="42-42"];
m9_2 [cluster="HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="IBackgroundJobClient.cs", label="Entry HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", span="55-55"];
m9_3 [cluster="HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="IBackgroundJobClient.cs", label="Exit HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", span="55-55"];
m10_16 [cluster="string.Replace(string, string)", file="IMonitoringApi.cs", label="Entry string.Replace(string, string)", span="0-0"];
m10_0 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="IMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="32-32"];
m10_1 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="IMonitoringApi.cs", label="connection == null", span="34-34"];
m10_4 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="IMonitoringApi.cs", label="!IsSqlEditionSupported(connection)", span="38-38"];
m10_8 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="IMonitoringApi.cs", label="connection.Execute(script)", span="49-49"];
m10_2 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="IMonitoringApi.cs", label="throw new ArgumentNullException(''connection'');", span="34-34"];
m10_3 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="IMonitoringApi.cs", label="Log.Debug(''Start installing HangFire SQL objects...'')", span="36-36"];
m10_5 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="IMonitoringApi.cs", label="throw new PlatformNotSupportedException(''The SQL Server edition of the target server is unsupported, e.g. SQL Azure.'');", span="40-40"];
m10_6 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="IMonitoringApi.cs", label="var script = GetStringResource(\r\n                typeof(SqlServerObjectsInstaller).Assembly, \r\n                ''HangFire.SqlServer.Install.sql'')", span="43-45"];
m10_7 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="IMonitoringApi.cs", label="script = script.Replace(''SET @TARGET_SCHEMA_VERSION = 2;'', ''SET @TARGET_SCHEMA_VERSION = '' + RequiredSchemaVersion + '';'')", span="47-47"];
m10_9 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="IMonitoringApi.cs", label="Log.Debug(''HangFire SQL objects installed.'')", span="51-51"];
m10_10 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="IMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="32-32"];
m10_21 [cluster="Unk.>", file="IMonitoringApi.cs", label="Entry Unk.>", span=""];
m10_32 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="IMonitoringApi.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m10_22 [cluster="Unk.Single", file="IMonitoringApi.cs", label="Entry Unk.Single", span=""];
m10_30 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="IMonitoringApi.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m10_17 [cluster="Unk.Execute", file="IMonitoringApi.cs", label="Entry Unk.Execute", span=""];
m10_31 [cluster="string.Format(string, object, object)", file="IMonitoringApi.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m10_33 [cluster="System.IO.StreamReader.ReadToEnd()", file="IMonitoringApi.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m10_12 [cluster="Unk.Debug", file="IMonitoringApi.cs", label="Entry Unk.Debug", span=""];
m10_15 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="IMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="60-60"];
m10_23 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="IMonitoringApi.cs", label="var stream = assembly.GetManifestResourceStream(resourceName)", span="62-62"];
m10_25 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="IMonitoringApi.cs", label="throw new InvalidOperationException(String.Format(\r\n                        ''Requested resource `{0}` was not found in the assembly `{1}`.'',\r\n                        resourceName,\r\n                        assembly));", span="66-69"];
m10_24 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="IMonitoringApi.cs", label="stream == null", span="64-64"];
m10_26 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="IMonitoringApi.cs", label="var reader = new StreamReader(stream)", span="72-72"];
m10_27 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="IMonitoringApi.cs", label="return reader.ReadToEnd();", span="74-74"];
m10_28 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="IMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="60-60"];
m10_13 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="IMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", span="54-54"];
m10_18 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="IMonitoringApi.cs", label="var edition = connection.Query<int>(''SELECT SERVERPROPERTY ( 'EngineEdition' )'').Single()", span="56-56"];
m10_19 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="IMonitoringApi.cs", label="return edition >= SqlEngineEdition.Standard && edition <= SqlEngineEdition.Express;", span="57-57"];
m10_20 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="IMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", span="54-54"];
m10_29 [cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="IMonitoringApi.cs", label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0"];
m10_14 [cluster="System.PlatformNotSupportedException.PlatformNotSupportedException(string)", file="IMonitoringApi.cs", label="Entry System.PlatformNotSupportedException.PlatformNotSupportedException(string)", span="0-0"];
m11_3 [cluster="Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="JobDetailsPage1.generated.cs", label="Exit Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="96-96"];
m11_0 [cluster="Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="JobDetailsPage1.generated.cs", label="Entry Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="65-65"];
m11_1 [cluster="Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="JobDetailsPage1.generated.cs", label="Exit Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="65-65"];
m12_10 [cluster="HangFire.Perform.Async(System.Type, object)", file="JsonStats.cs", label="var client = new JobClient()", span="29-29"];
m12_12 [cluster="HangFire.Perform.Async(System.Type, object)", file="JsonStats.cs", label="Exit HangFire.Perform.Async(System.Type, object)", span="27-27"];
m12_18 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="JsonStats.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="43-43"];
m12_19 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="JsonStats.cs", label="return In(interval, typeof(TJob), args);", span="46-46"];
m12_20 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="JsonStats.cs", label="Exit HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="43-43"];
m12_3 [cluster="HangFire.Web.JsonStats.ProcessRequest()", color=green, community=1, file="JsonStats.cs", label="var settings = new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                }", prediction=70, span="31-34"];
m12_4 [cluster="HangFire.Web.JsonStats.ProcessRequest()", file="JsonStats.cs", label="var serialized = JsonConvert.SerializeObject(response, settings)", span="35-35"];
m12_5 [cluster="HangFire.Web.JsonStats.ProcessRequest()", color=green, community=1, file="JsonStats.cs", label="Response.ContentType = ''application/json''", prediction=71, span="37-37"];
m12_28 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="JsonStats.cs", label="Entry HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", span="40-40"];
m12_6 [cluster="HangFire.Web.JsonStats.ProcessRequest()", color=green, community=1, file="JsonStats.cs", label="Response.ContentEncoding = Encoding.UTF8", prediction=72, span="38-38"];
m12_9 [cluster="HangFire.Perform.Async(System.Type)", file="JsonStats.cs", label="Exit HangFire.Perform.Async(System.Type)", span="22-22"];
m12_22 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="JsonStats.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="49-49"];
m12_23 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="JsonStats.cs", label="return In(interval, jobType, null);", span="51-51"];
m12_24 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="JsonStats.cs", label="Exit HangFire.Perform.In(System.TimeSpan, System.Type)", span="49-49"];
m12_14 [cluster="Unk.Write", file="JsonStats.cs", label="Entry Unk.Write", span=""];
m12_13 [cluster="HangFire.Client.JobClient.JobClient()", file="JsonStats.cs", label="Entry HangFire.Client.JobClient.JobClient()", span="7-7"];
m12_0 [cluster="HangFire.Web.JsonStats.ProcessRequest()", file="JsonStats.cs", label="Entry HangFire.Web.JsonStats.ProcessRequest()", span="24-24"];
m12_1 [cluster="HangFire.Web.JsonStats.ProcessRequest()", color=green, community=0, file="JsonStats.cs", label="var monitoring = JobStorage.Current.GetMonitoringApi()", prediction=73, span="26-26"];
m12_2 [cluster="HangFire.Web.JsonStats.ProcessRequest()", file="JsonStats.cs", label="var response = monitoring.GetStatistics()", span="28-28"];
m12_7 [cluster="HangFire.Perform.Async(System.Type)", file="JsonStats.cs", label="Entry HangFire.Perform.Async(System.Type)", span="22-22"];
m12_8 [cluster="HangFire.Perform.Async(System.Type)", file="JsonStats.cs", label="return Async(jobType, null);", span="24-24"];
m12_21 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="JsonStats.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="54-54"];
m12_25 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="JsonStats.cs", label="var client = new JobClient()", span="56-56"];
m12_26 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="JsonStats.cs", label="return client.In(interval, jobType, args);", span="58-58"];
m12_27 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="JsonStats.cs", label="Exit HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="54-54"];
m12_15 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="JsonStats.cs", label="HangFire.Web.JsonStats", span=""];
m12_17 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="JsonStats.cs", label="Exit HangFire.Perform.In<TJob>(System.TimeSpan)", span="36-36"];
m13_6 [cluster="HangFire.JobFetcher.AddToFailedQueue(string)", file="LayoutPage.generated.cs", label="Entry HangFire.JobFetcher.AddToFailedQueue(string)", span="20-20"];
m13_7 [cluster="HangFire.JobFetcher.AddToFailedQueue(string)", file="LayoutPage.generated.cs", label="_redis.Lists.AddFirst(0, ''jobs:failed'', job)", span="22-22"];
m13_8 [cluster="HangFire.JobFetcher.AddToFailedQueue(string)", file="LayoutPage.generated.cs", label="Exit HangFire.JobFetcher.AddToFailedQueue(string)", span="20-20"];
m13_5 [cluster="Unk.Wait", file="LayoutPage.generated.cs", label="Entry Unk.Wait", span=""];
m13_4 [cluster="Unk.BlockingRemoveLastString", file="LayoutPage.generated.cs", label="Entry Unk.BlockingRemoveLastString", span=""];
m13_10 [cluster="HangFire.JobFetcher.Dispose()", file="LayoutPage.generated.cs", label="Entry HangFire.JobFetcher.Dispose()", span="25-25"];
m13_11 [cluster="HangFire.JobFetcher.Dispose()", file="LayoutPage.generated.cs", label="_blockingRedis.Dispose()", span="27-27"];
m13_12 [cluster="HangFire.JobFetcher.Dispose()", file="LayoutPage.generated.cs", label="_redis.Dispose()", span="28-28"];
m13_13 [cluster="HangFire.JobFetcher.Dispose()", file="LayoutPage.generated.cs", label="Exit HangFire.JobFetcher.Dispose()", span="25-25"];
m13_14 [cluster="Unk.Dispose", file="LayoutPage.generated.cs", label="Entry Unk.Dispose", span=""];
m13_9 [cluster="Unk.AddFirst", file="LayoutPage.generated.cs", label="Entry Unk.AddFirst", span=""];
m13_0 [cluster="HangFire.JobFetcher.TakeNext()", file="LayoutPage.generated.cs", label="Entry HangFire.JobFetcher.TakeNext()", span="12-12"];
m13_1 [cluster="HangFire.JobFetcher.TakeNext()", file="LayoutPage.generated.cs", label="var result = _blockingRedis.Lists\r\n                .BlockingRemoveLastString(0, new[] { ''queue:default'' }, 0)", span="14-15"];
m13_2 [cluster="HangFire.JobFetcher.TakeNext()", file="LayoutPage.generated.cs", label="return _blockingRedis.Wait(result).Item2;", span="17-17"];
m13_3 [cluster="HangFire.JobFetcher.TakeNext()", file="LayoutPage.generated.cs", label="Exit HangFire.JobFetcher.TakeNext()", span="12-12"];
m13_15 [file="LayoutPage.generated.cs", label="HangFire.JobFetcher", span=""];
m14_0 [cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.MsmqSqlServerStorageExtensionsFacts()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.MsmqSqlServerStorageExtensionsFacts()", span="13-13"];
m14_1 [cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.MsmqSqlServerStorageExtensionsFacts()", color=green, community=0, file="MsmqSqlServerStorageExtensionsFacts.cs", label="_storage = new SqlServerStorage(\r\n                String.Empty,\r\n                new SqlServerStorageOptions { PrepareSchemaIfNecessary = false })", prediction=74, span="15-17"];
m14_2 [cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.MsmqSqlServerStorageExtensionsFacts()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Exit HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.MsmqSqlServerStorageExtensionsFacts()", span="13-13"];
m14_15 [cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_AddsMsmqJobQueueProvider()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_AddsMsmqJobQueueProvider()", span="30-30"];
m14_16 [cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_AddsMsmqJobQueueProvider()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="_storage.UseMsmqQueues(CleanMsmqQueueAttribute.PathPattern)", span="32-32"];
m14_17 [cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_AddsMsmqJobQueueProvider()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="var providerTypes = _storage.QueueProviders.Select(x => x.GetType())", span="34-34"];
m14_18 [cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_AddsMsmqJobQueueProvider()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Assert.Contains(typeof(MsmqJobQueueProvider), providerTypes)", span="35-35"];
m14_19 [cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_AddsMsmqJobQueueProvider()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Exit HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_AddsMsmqJobQueueProvider()", span="30-30"];
m14_20 [cluster="HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string)", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string)", span="23-23"];
m14_4 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24"];
m14_3 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="37-37"];
m14_26 [cluster="object.GetType()", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry object.GetType()", span="0-0"];
m14_23 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry lambda expression", span="34-34"];
m14_24 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="x.GetType()", span="34-34"];
m14_25 [cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Exit lambda expression", span="34-34"];
m14_22 [cluster="Unk.Contains", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry Unk.Contains", span=""];
m14_21 [cluster="Unk.Select", file="MsmqSqlServerStorageExtensionsFacts.cs", label="Entry Unk.Select", span=""];
m14_27 [file="MsmqSqlServerStorageExtensionsFacts.cs", label="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts", span=""];
m15_4 [cluster="Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.LocalRequestsOnlyAuthorizationFilter()", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.LocalRequestsOnlyAuthorizationFilter()", span="22-22"];
m15_0 [cluster="Hangfire.DashboardOptions.DashboardOptions()", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.DashboardOptions.DashboardOptions()", span="23-23"];
m15_3 [cluster="Hangfire.DashboardOptions.DashboardOptions()", file="ProcessingJobsPage.generated.cs", label="Exit Hangfire.DashboardOptions.DashboardOptions()", span="23-23"];
m15_5 [file="ProcessingJobsPage.generated.cs", label="Hangfire.DashboardOptions", span=""];
m16_16 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="QueuesPage.generated.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m16_18 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.After(System.Reflection.MethodInfo)", file="QueuesPage.generated.cs", label="Exit Hangfire.SqlServer.Tests.CleanDatabaseAttribute.After(System.Reflection.MethodInfo)", span="43-43"];
m16_15 [cluster="TransactionOptions.cstr", file="QueuesPage.generated.cs", label="Entry TransactionOptions.cstr", span=""];
m16_26 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.GetDatabaseName()", file="QueuesPage.generated.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.GetDatabaseName()", span="16-16"];
m16_27 [cluster="string.Format(string, object)", file="QueuesPage.generated.cs", label="Entry string.Format(string, object)", span="0-0"];
m16_5 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", color=green, community=0, file="QueuesPage.generated.cs", label="_storage = storage", prediction=75, span="33-33"];
m16_6 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", color=green, community=0, file="QueuesPage.generated.cs", label="_serverId = serverId", prediction=76, span="34-34"];
m16_10 [cluster="HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", color=green, community=0, file="QueuesPage.generated.cs", label="var connection = _storage.GetConnection()", prediction=77, span="39-39"];
m16_11 [cluster="HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", color=green, community=0, file="QueuesPage.generated.cs", label="connection.Heartbeat(_serverId)", prediction=78, span="41-41"];
m16_0 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="QueuesPage.generated.cs", label="Entry HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", span="28-28"];
m16_1 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", color=green, community=0, file="QueuesPage.generated.cs", label="storage == null", prediction=79, span="30-30"];
m16_28 [cluster="SqlConnection.cstr", file="QueuesPage.generated.cs", label="Entry SqlConnection.cstr", span=""];
m16_14 [cluster="HangFire.JobStorage.GetConnection()", file="QueuesPage.generated.cs", label="Entry HangFire.JobStorage.GetConnection()", span="55-55"];
m16_2 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", color=green, community=0, file="QueuesPage.generated.cs", label="throw new ArgumentNullException(''storage'');", prediction=80, span="30-30"];
m16_3 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", color=green, community=0, file="QueuesPage.generated.cs", label="serverId == null", prediction=81, span="31-31"];
m16_4 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", color=green, community=0, file="QueuesPage.generated.cs", label="throw new ArgumentNullException(''serverId'');", prediction=82, span="31-31"];
m16_13 [cluster="HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", file="QueuesPage.generated.cs", label="Exit HangFire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", span="37-37"];
m16_25 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", file="QueuesPage.generated.cs", label="Exit Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", span="56-56"];
m16_12 [cluster="System.Threading.Monitor.Enter(object)", color=green, community=0, file="QueuesPage.generated.cs", label="Entry System.Threading.Monitor.Enter(object)", prediction=83, span="0-0"];
m16_32 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="QueuesPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="35-35"];
m16_19 [cluster="Unk.Dispose", file="QueuesPage.generated.cs", label="Entry Unk.Dispose", span=""];
m16_29 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.GetMasterConnectionString()", file="QueuesPage.generated.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.GetMasterConnectionString()", span="21-21"];
m16_31 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", file="QueuesPage.generated.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", span="26-26"];
m16_30 [cluster="Unk.Execute", file="QueuesPage.generated.cs", label="Entry Unk.Execute", span=""];
m16_33 [file="QueuesPage.generated.cs", label="Hangfire.SqlServer.Tests.CleanDatabaseAttribute", span=""];
m17_25 [cluster="Unk.OnScenarioStart", file="RecurringJobsPage.generated.cs", label="Entry Unk.OnScenarioStart", span=""];
m17_29 [cluster="Unk.CollectScenarioErrors", file="RecurringJobsPage.generated.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m17_21 [cluster="Unk.OnScenarioEnd", file="RecurringJobsPage.generated.cs", label="Entry Unk.OnScenarioEnd", span=""];
m17_67 [cluster="HangFire.Tests.States.ProcessingStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheProcessingSet()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Tests.States.ProcessingStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheProcessingSet()", span="150-150"];
m17_68 [cluster="HangFire.Tests.States.ProcessingStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheProcessingSet()", file="RecurringJobsPage.generated.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying, it should remove the job from the processing set'', ((string[])(null)))", span="152-152"];
m17_69 [cluster="HangFire.Tests.States.ProcessingStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheProcessingSet()", file="RecurringJobsPage.generated.cs", label="this.ScenarioSetup(scenarioInfo)", span="154-154"];
m17_70 [cluster="HangFire.Tests.States.ProcessingStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheProcessingSet()", file="RecurringJobsPage.generated.cs", label="this.FeatureBackground()", span="156-156"];
m17_71 [cluster="HangFire.Tests.States.ProcessingStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheProcessingSet()", file="RecurringJobsPage.generated.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="158-158"];
m17_72 [cluster="HangFire.Tests.States.ProcessingStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheProcessingSet()", file="RecurringJobsPage.generated.cs", label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="160-160"];
m17_73 [cluster="HangFire.Tests.States.ProcessingStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheProcessingSet()", file="RecurringJobsPage.generated.cs", label="testRunner.Then(''the processing set should not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="162-162"];
m17_74 [cluster="HangFire.Tests.States.ProcessingStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheProcessingSet()", file="RecurringJobsPage.generated.cs", label="this.ScenarioCleanup()", span="164-164"];
m17_75 [cluster="HangFire.Tests.States.ProcessingStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheProcessingSet()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Tests.States.ProcessingStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheProcessingSet()", span="150-150"];
m17_35 [cluster="Unk.And", file="RecurringJobsPage.generated.cs", label="Entry Unk.And", span=""];
m17_5 [cluster="Unk.GetTestRunner", file="RecurringJobsPage.generated.cs", label="Entry Unk.GetTestRunner", span=""];
m17_14 [cluster="HangFire.Tests.States.ProcessingStateFeature.TestInitialize()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Tests.States.ProcessingStateFeature.TestInitialize()", span="46-46"];
m17_15 [cluster="HangFire.Tests.States.ProcessingStateFeature.TestInitialize()", file="RecurringJobsPage.generated.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Processing state''))", span="48-49"];
m17_16 [cluster="HangFire.Tests.States.ProcessingStateFeature.TestInitialize()", file="RecurringJobsPage.generated.cs", label="HangFire.Tests.States.ProcessingStateFeature.FeatureSetup(null)", span="51-51"];
m17_17 [cluster="HangFire.Tests.States.ProcessingStateFeature.TestInitialize()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Tests.States.ProcessingStateFeature.TestInitialize()", span="46-46"];
m17_18 [cluster="HangFire.Tests.States.ProcessingStateFeature.ScenarioTearDown()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Tests.States.ProcessingStateFeature.ScenarioTearDown()", span="56-56"];
m17_19 [cluster="HangFire.Tests.States.ProcessingStateFeature.ScenarioTearDown()", file="RecurringJobsPage.generated.cs", label="testRunner.OnScenarioEnd()", span="58-58"];
m17_20 [cluster="HangFire.Tests.States.ProcessingStateFeature.ScenarioTearDown()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Tests.States.ProcessingStateFeature.ScenarioTearDown()", span="56-56"];
m17_0 [cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Tests.States.ProcessingStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m17_1 [cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="RecurringJobsPage.generated.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m17_2 [cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="RecurringJobsPage.generated.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Processing state'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34"];
m17_3 [cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="RecurringJobsPage.generated.cs", label="testRunner.OnFeatureStart(featureInfo)", span="35-35"];
m17_4 [cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Tests.States.ProcessingStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m17_13 [cluster="Unk.OnFeatureEnd", file="RecurringJobsPage.generated.cs", label="Entry Unk.OnFeatureEnd", span=""];
m17_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="RecurringJobsPage.generated.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m17_36 [cluster="HangFire.Tests.States.ProcessingStateFeature.StateNameShouldBeProcessing()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Tests.States.ProcessingStateFeature.StateNameShouldBeProcessing()", span="85-85"];
m17_37 [cluster="HangFire.Tests.States.ProcessingStateFeature.StateNameShouldBeProcessing()", file="RecurringJobsPage.generated.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State name should be \'Processing\''', ((string[])(null)))", span="87-87"];
m17_38 [cluster="HangFire.Tests.States.ProcessingStateFeature.StateNameShouldBeProcessing()", file="RecurringJobsPage.generated.cs", label="this.ScenarioSetup(scenarioInfo)", span="89-89"];
m17_39 [cluster="HangFire.Tests.States.ProcessingStateFeature.StateNameShouldBeProcessing()", file="RecurringJobsPage.generated.cs", label="this.FeatureBackground()", span="91-91"];
m17_40 [cluster="HangFire.Tests.States.ProcessingStateFeature.StateNameShouldBeProcessing()", file="RecurringJobsPage.generated.cs", label="testRunner.Then(''the state name should be equal to \'Processing\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="93-93"];
m17_41 [cluster="HangFire.Tests.States.ProcessingStateFeature.StateNameShouldBeProcessing()", file="RecurringJobsPage.generated.cs", label="this.ScenarioCleanup()", span="95-95"];
m17_42 [cluster="HangFire.Tests.States.ProcessingStateFeature.StateNameShouldBeProcessing()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Tests.States.ProcessingStateFeature.StateNameShouldBeProcessing()", span="85-85"];
m17_66 [cluster="Unk.When", file="RecurringJobsPage.generated.cs", label="Entry Unk.When", span=""];
m17_57 [cluster="HangFire.Tests.States.ProcessingStateFeature.AfterApplyingItShouldAddTheJobToTheProcessingSet()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Tests.States.ProcessingStateFeature.AfterApplyingItShouldAddTheJobToTheProcessingSet()", span="129-129"];
m17_58 [cluster="HangFire.Tests.States.ProcessingStateFeature.AfterApplyingItShouldAddTheJobToTheProcessingSet()", file="RecurringJobsPage.generated.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying, it should add the job to the processing set'', ((string[])(null)))", span="131-131"];
m17_59 [cluster="HangFire.Tests.States.ProcessingStateFeature.AfterApplyingItShouldAddTheJobToTheProcessingSet()", file="RecurringJobsPage.generated.cs", label="this.ScenarioSetup(scenarioInfo)", span="133-133"];
m17_60 [cluster="HangFire.Tests.States.ProcessingStateFeature.AfterApplyingItShouldAddTheJobToTheProcessingSet()", file="RecurringJobsPage.generated.cs", label="this.FeatureBackground()", span="135-135"];
m17_61 [cluster="HangFire.Tests.States.ProcessingStateFeature.AfterApplyingItShouldAddTheJobToTheProcessingSet()", file="RecurringJobsPage.generated.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="137-137"];
m17_62 [cluster="HangFire.Tests.States.ProcessingStateFeature.AfterApplyingItShouldAddTheJobToTheProcessingSet()", file="RecurringJobsPage.generated.cs", label="testRunner.Then(''the processing set should contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="139-139"];
m17_63 [cluster="HangFire.Tests.States.ProcessingStateFeature.AfterApplyingItShouldAddTheJobToTheProcessingSet()", file="RecurringJobsPage.generated.cs", label="testRunner.And(''processing timestamp should be set to UtcNow'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="141-141"];
m17_64 [cluster="HangFire.Tests.States.ProcessingStateFeature.AfterApplyingItShouldAddTheJobToTheProcessingSet()", file="RecurringJobsPage.generated.cs", label="this.ScenarioCleanup()", span="143-143"];
m17_65 [cluster="HangFire.Tests.States.ProcessingStateFeature.AfterApplyingItShouldAddTheJobToTheProcessingSet()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Tests.States.ProcessingStateFeature.AfterApplyingItShouldAddTheJobToTheProcessingSet()", span="129-129"];
m17_56 [cluster="Unk.AddRow", file="RecurringJobsPage.generated.cs", label="Entry Unk.AddRow", span=""];
m17_43 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="RecurringJobsPage.generated.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m17_26 [cluster="HangFire.Tests.States.ProcessingStateFeature.ScenarioCleanup()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Tests.States.ProcessingStateFeature.ScenarioCleanup()", span="66-66"];
m17_27 [cluster="HangFire.Tests.States.ProcessingStateFeature.ScenarioCleanup()", file="RecurringJobsPage.generated.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m17_28 [cluster="HangFire.Tests.States.ProcessingStateFeature.ScenarioCleanup()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Tests.States.ProcessingStateFeature.ScenarioCleanup()", span="66-66"];
m17_44 [cluster="Unk.Then", file="RecurringJobsPage.generated.cs", label="Entry Unk.Then", span=""];
m17_34 [cluster="Unk.Given", file="RecurringJobsPage.generated.cs", label="Entry Unk.Given", span=""];
m17_45 [cluster="HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", span="102-102"];
m17_46 [cluster="HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="RecurringJobsPage.generated.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It should have the correct properties set'', ((string[])(null)))", span="104-104"];
m17_47 [cluster="HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="RecurringJobsPage.generated.cs", label="this.ScenarioSetup(scenarioInfo)", span="106-106"];
m17_48 [cluster="HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="RecurringJobsPage.generated.cs", label="this.FeatureBackground()", span="108-108"];
m17_49 [cluster="HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="RecurringJobsPage.generated.cs", label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="110-112"];
m17_50 [cluster="HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="RecurringJobsPage.generated.cs", label="table1.AddRow(new string[] {\r\n                        ''StartedAt'',\r\n                        ''<UtcNow timestamp>''})", span="113-115"];
m17_51 [cluster="HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="RecurringJobsPage.generated.cs", label="table1.AddRow(new string[] {\r\n                        ''ServerName'',\r\n                        ''TestServer''})", span="116-118"];
m17_52 [cluster="HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="RecurringJobsPage.generated.cs", label="testRunner.Then(''properties table should contain the following items:'', ((string)(null)), table1, ''Then '')", span="120-120"];
m17_53 [cluster="HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="RecurringJobsPage.generated.cs", label="this.ScenarioCleanup()", span="122-122"];
m17_54 [cluster="HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Tests.States.ProcessingStateFeature.ItShouldHaveTheCorrectPropertiesSet()", span="102-102"];
m17_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="RecurringJobsPage.generated.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m17_55 [cluster="TechTalk.SpecFlow.Table.cstr", file="RecurringJobsPage.generated.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m17_22 [cluster="HangFire.Tests.States.ProcessingStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Tests.States.ProcessingStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m17_23 [cluster="HangFire.Tests.States.ProcessingStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="RecurringJobsPage.generated.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m17_24 [cluster="HangFire.Tests.States.ProcessingStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Tests.States.ProcessingStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m17_30 [cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureBackground()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Tests.States.ProcessingStateFeature.FeatureBackground()", span="71-71"];
m17_31 [cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureBackground()", file="RecurringJobsPage.generated.cs", label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75"];
m17_32 [cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureBackground()", file="RecurringJobsPage.generated.cs", label="testRunner.And(''the Processing state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="77-77"];
m17_33 [cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureBackground()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Tests.States.ProcessingStateFeature.FeatureBackground()", span="71-71"];
m17_8 [cluster="Unk.OnFeatureStart", file="RecurringJobsPage.generated.cs", label="Entry Unk.OnFeatureStart", span=""];
m17_9 [cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureTearDown()", file="RecurringJobsPage.generated.cs", label="Entry HangFire.Tests.States.ProcessingStateFeature.FeatureTearDown()", span="39-39"];
m17_10 [cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureTearDown()", file="RecurringJobsPage.generated.cs", label="testRunner.OnFeatureEnd()", span="41-41"];
m17_11 [cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureTearDown()", file="RecurringJobsPage.generated.cs", label="testRunner = null", span="42-42"];
m17_12 [cluster="HangFire.Tests.States.ProcessingStateFeature.FeatureTearDown()", file="RecurringJobsPage.generated.cs", label="Exit HangFire.Tests.States.ProcessingStateFeature.FeatureTearDown()", span="39-39"];
m17_76 [file="RecurringJobsPage.generated.cs", label="HangFire.Tests.States.ProcessingStateFeature", span=""];
m18_36 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="62-62"];
m18_86 [cluster="HangFire.Web.ScheduleDto.ScheduleDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Web.ScheduleDto.ScheduleDto()", span="5-5"];
m18_113 [cluster="HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", span="23-23"];
m18_190 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="273-273"];
m18_249 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="RedisMonitoringApi.cs", label="var hiddenProperties = new[] { ''Type'', ''Args'', ''State'' }", span="419-419"];
m18_311 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="490-490"];
m18_274 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="endDate = endDate.AddHours(-1)", span="447-447"];
m18_329 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label=jobIds, span="514-514"];
m18_338 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="519-519"];
m18_334 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="pipeline.Flush()", span="530-530"];
m18_328 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="var pipeline = redis.CreatePipeline()", span="512-512"];
m18_336 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="Exit HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="500-500"];
m18_330 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="var id = jobId", span="516-516"];
m18_333 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="524-526"];
m18_337 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0"];
m18_343 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="jobs.Add(id, x)", span="520-520"];
m18_339 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties)", span="519-519"];
m18_344 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="520-520"];
m18_327 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="510-510"];
m18_331 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="518-520"];
m18_342 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="!jobs.ContainsKey(id)", span="520-520"];
m18_332 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="stateProperties != null", span="522-522"];
m18_340 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="519-519"];
m18_341 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="520-520"];
m18_345 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m18_122 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="176-177"];
m18_363 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="y == null", span="542-542"];
m18_362 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="542-542"];
m18_358 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="540-542"];
m18_365 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="RedisMonitoringApi.cs", label="Entry HangFire.Web.JobStorage.SucceededListCount()", span="546-546"];
m18_356 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="540-542"];
m18_364 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="542-542"];
m18_368 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="RedisMonitoringApi.cs", label="Exit HangFire.Web.JobStorage.SucceededListCount()", span="546-546"];
m18_359 [cluster="KeyValuePair<string, T>.cstr", file="RedisMonitoringApi.cs", label="Entry KeyValuePair<string, T>.cstr", span=""];
m18_360 [cluster="Unk.TrueForAll", file="RedisMonitoringApi.cs", label="Entry Unk.TrueForAll", span=""];
m18_361 [cluster="Unk.selector", file="RedisMonitoringApi.cs", label="Entry Unk.selector", span=""];
m18_369 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RedisMonitoringApi.cs", label="Entry HangFire.Web.JobStorage.GetStatistics()", span="554-554"];
m18_291 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="var stateHistory = new List<StateHistoryDto>(history.Count)", prediction=84, span="417-417"];
m18_257 [cluster="Unk.ContainsKey", file="RedisMonitoringApi.cs", label="Entry Unk.ContainsKey", span=""];
m18_258 [cluster="Unk.Where", color=green, community=2, file="RedisMonitoringApi.cs", label="Entry Unk.Where", prediction=85, span=""];
m18_259 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="433-433"];
m18_61 [cluster="Unk.QueueCommand", file="RedisMonitoringApi.cs", label="Entry Unk.QueueCommand", span=""];
m18_30 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedCount()", span="57-57"];
m18_62 [cluster="Unk.Flush", file="RedisMonitoringApi.cs", label="Entry Unk.Flush", span=""];
m18_133 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="var serverNames = redis.GetAllItemsFromSet(''hangfire:servers'')", prediction=85, span="168-168"];
m18_43 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RedisMonitoringApi.cs", label="Entry HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80"];
m18_44 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="redis.GetListCount(''hangfire:deleted'')", prediction=87, span="69-69"];
m18_51 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label="return new JobList<ProcessingJobDto>(GetJobsWithProperties(redis,\r\n                    jobIds,\r\n                    null,\r\n                    new[] { ''StartedAt'', ''ServerName'', ''ServerId'', ''State'' },\r\n                    (job, jobData, state) => new ProcessingJobDto\r\n                    {\r\n                        ServerId = state[2] ?? state[1],\r\n                        Job = job,\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.StateName.Equals(\r\n                            state[3], StringComparison.OrdinalIgnoreCase),\r\n                    }).OrderBy(x => x.Value.StartedAt).ToList());", prediction=88, span="82-93"];
m18_47 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", color=green, community=2, file="RedisMonitoringApi.cs", label="return UseConnection(redis =>\r\n            {\r\n                var jobIds = redis.GetRangeFromSortedSet(\r\n                    ''hangfire:processing'',\r\n                    from,\r\n                    from + count - 1);\r\n\r\n                return new JobList<ProcessingJobDto>(GetJobsWithProperties(redis,\r\n                    jobIds,\r\n                    null,\r\n                    new[] { ''StartedAt'', ''ServerName'', ''ServerId'', ''State'' },\r\n                    (job, jobData, state) => new ProcessingJobDto\r\n                    {\r\n                        ServerId = state[2] ?? state[1],\r\n                        Job = job,\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.StateName.Equals(\r\n                            state[3], StringComparison.OrdinalIgnoreCase),\r\n                    }).OrderBy(x => x.Value.StartedAt).ToList());\r\n            });", prediction=89, span="75-94"];
m18_48 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="72-72"];
m18_50 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label="var jobIds = redis.GetRangeFromSortedSet(\r\n                    ''hangfire:processing'',\r\n                    from,\r\n                    from + count - 1)", prediction=90, span="77-80"];
m18_52 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RedisMonitoringApi.cs", label="var job = scheduledJob", span="101-101"];
m18_57 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RedisMonitoringApi.cs", label="Exit HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80"];
m18_38 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="redis.GetSortedSetCount(''hangfire:processing'')", prediction=91, span="64-64"];
m18_275 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="i++", span="444-444"];
m18_276 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", color=green, community=0, file="RedisMonitoringApi.cs", label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", prediction=92, span="450-450"];
m18_277 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="451-451"];
m18_214 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x)", prediction=93, span="306-308"];
m18_515 [cluster="Unk.GetClient", file="RedisMonitoringApi.cs", label="Entry Unk.GetClient", span=""];
m18_386 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="properties = properties ?? new string[0]", span="530-530"];
m18_433 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RedisMonitoringApi.cs", label=jobs, span=""];
m18_434 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", color=green, community=2, file="RedisMonitoringApi.cs", label=states, prediction=85, span=""];
m18_435 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="RedisMonitoringApi.cs", label=name, span=""];
m18_22 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="RedisMonitoringApi.cs", label="Exit HangFire.Web.JobStorage.ProcessingCount()", span="44-44"];
m18_23 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", color=green, community=0, file="RedisMonitoringApi.cs", label="Entry HangFire.Web.JobStorage.ProcessingJobs(int, int)", prediction=85, span="52-52"];
m18_24 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="RedisMonitoringApi.cs", label=Redis, span="55-55"];
m18_29 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", color=green, community=0, file="RedisMonitoringApi.cs", label="return UseConnection(redis => redis.GetSortedSetCount(''hangfire:failed''));", prediction=85, span="59-59"];
m18_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m18_91 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="RedisMonitoringApi.cs", label="Exit HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133"];
m18_197 [cluster="HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", span="5-5"];
m18_60 [cluster="Unk.CreatePipeline", file="RedisMonitoringApi.cs", label="Entry Unk.CreatePipeline", span=""];
m18_76 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="var states = new Dictionary<string, List<String>>()", prediction=85, span="112-112"];
m18_522 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m18_26 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", prediction=85, span="54-54"];
m18_27 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="RedisMonitoringApi.cs", label="Exit HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="52-52"];
m18_516 [cluster="Unk.action", file="RedisMonitoringApi.cs", label="Entry Unk.action", span=""];
m18_134 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="serverNames.Count == 0", prediction=99, span="170-170"];
m18_402 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="573-573"];
m18_281 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="long value", span="456-456"];
m18_282 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", color=green, community=2, file="RedisMonitoringApi.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", prediction=85, span="457-457"];
m18_283 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="value = 0", span="459-459"];
m18_234 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="RedisMonitoringApi.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
m18_173 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisMonitoringApi.cs", label="Entry HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="500-500"];
m18_324 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="451-451"];
m18_326 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="451-451"];
m18_325 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="x.Value", prediction=101, span="451-451"];
m18_428 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="Exit lambda expression", prediction=85, span="592-592"];
m18_429 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="593-593"];
m18_454 [cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18"];
m18_11 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="redis.GetSortedSetCount(''hangfire:schedule'')", prediction=103, span="42-42"];
m18_12 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="RedisMonitoringApi.cs", label=Redis, span="30-30"];
m18_13 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="RedisMonitoringApi.cs", label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue));", span="32-32"];
m18_14 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="45-45"];
m18_219 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="return result;", prediction=104, span="339-339"];
m18_269 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", color=green, community=0, file="RedisMonitoringApi.cs", label="return UseConnection(redis => GetHourlyTimelineStats(redis, ''succeeded''));", prediction=85, span="393-393"];
m18_270 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="391-391"];
m18_273 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="dates.Add(endDate)", span="446-446"];
m18_271 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var i = 0", span="444-444"];
m18_280 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="398-398"];
m18_284 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="result.Add(dates[i], value)", span="462-462"];
m18_272 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="GetHourlyTimelineStats(redis, ''succeeded'')", prediction=85, span="393-393"];
m18_278 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="398-398"];
m18_279 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="GetHourlyTimelineStats(redis, ''failed'')", prediction=85, span="398-398"];
m18_286 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="job.Count == 0", prediction=108, span="406-406"];
m18_285 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="var job = redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", prediction=109, span="405-405"];
m18_287 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="return null;", prediction=110, span="406-406"];
m18_232 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", prediction=85, span="307-307"];
m18_58 [cluster="Unk.GetRangeWithScoresFromSortedSet", file="RedisMonitoringApi.cs", label="Entry Unk.GetRangeWithScoresFromSortedSet", span=""];
m18_132 [cluster="HangFire.Web.ServerDto.ServerDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Web.ServerDto.ServerDto()", span="5-5"];
m18_307 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var result = new Dictionary<DateTime, long>()", span="486-486"];
m18_191 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="274-274"];
m18_192 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label="dequeued = x", prediction=112, span="274-274"];
m18_193 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="274-274"];
m18_236 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="RedisMonitoringApi.cs", label="Entry HangFire.Web.JobStorage.EnqueueScheduled(string)", span="393-393"];
m18_238 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", prediction=85, span="311-311"];
m18_241 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="fetched = x", prediction=114, span="312-312"];
m18_243 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="RedisMonitoringApi.cs", label="Exit HangFire.Web.JobStorage.EnqueueScheduled(string)", span="393-393"];
m18_174 [cluster="HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4"];
m18_317 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="451-451"];
m18_222 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="RedisMonitoringApi.cs", label="return GetHourlyTimelineStats(Redis, ''failed'');", span="368-368"];
m18_394 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="Entry lambda expression", prediction=112, span="569-569"];
m18_384 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RedisMonitoringApi.cs", label="return stats;", span="599-599"];
m18_385 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RedisMonitoringApi.cs", label="Exit HangFire.Web.JobStorage.GetStatistics()", span="554-554"];
m18_393 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="566-566"];
m18_390 [cluster="Unk.GetSetCount", color=green, community=0, file="RedisMonitoringApi.cs", label="Entry Unk.GetSetCount", prediction=112, span=""];
m18_387 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="565-565"];
m18_389 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="565-565"];
m18_391 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="566-566"];
m18_383 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RedisMonitoringApi.cs", label="pipeline.Flush()", span="596-596"];
m18_9 [cluster="string.Format(string, object)", file="RedisMonitoringApi.cs", label="Entry string.Format(string, object)", span="0-0"];
m18_512 [cluster="HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", color=green, community=0, file="RedisMonitoringApi.cs", label="var redis = _connectionPool.GetClient()", prediction=117, span="639-639"];
m18_513 [cluster="HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", color=green, community=0, file="RedisMonitoringApi.cs", label="return action(redis);", prediction=118, span="641-641"];
m18_514 [cluster="HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", span="637-637"];
m18_313 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="result.Add(dates[i], value)", span="494-494"];
m18_112 [cluster="Unk.GetAllItemsFromSet", file="RedisMonitoringApi.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m18_0 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="RedisMonitoringApi.cs", label="Entry HangFire.Web.JobStorage.ScheduledCount()", span="12-12"];
m18_1 [cluster="HangFire.Web.JobStorage.ScheduledCount()", color=green, community=0, file="RedisMonitoringApi.cs", label=Redis, prediction=119, span="14-14"];
m18_2 [cluster="HangFire.Web.JobStorage.ScheduledCount()", color=green, community=0, file="RedisMonitoringApi.cs", label="return Redis.GetSortedSetCount(''hangfire:schedule'');", prediction=120, span="16-16"];
m18_3 [cluster="HangFire.Web.JobStorage.ScheduledCount()", color=green, community=0, file="RedisMonitoringApi.cs", label="Exit HangFire.Web.JobStorage.ScheduledCount()", prediction=85, span="12-12"];
m18_4 [cluster="Unk.GetSortedSetCount", file="RedisMonitoringApi.cs", label="Entry Unk.GetSortedSetCount", span=""];
m18_411 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="578-578"];
m18_32 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="redis.GetSortedSetCount(''hangfire:failed'')", prediction=85, span="59-59"];
m18_40 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedListCount()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.DeletedListCount()", span="67-67"];
m18_34 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="62-62"];
m18_41 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedListCount()", color=green, community=0, file="RedisMonitoringApi.cs", label="return UseConnection(redis => redis.GetListCount(''hangfire:deleted''));", prediction=85, span="69-69"];
m18_42 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedListCount()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.DeletedListCount()", span="67-67"];
m18_70 [cluster="Unk.UseConnection", file="RedisMonitoringApi.cs", label="Entry Unk.UseConnection", span=""];
m18_78 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label=scheduledJobs, prediction=85, span="116-116"];
m18_65 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="x.Value.StartedAt", prediction=125, span="93-93"];
m18_74 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="return new JobList<ScheduledJobDto>(new List<KeyValuePair<string, ScheduledJobDto>>());", prediction=126, span="108-108"];
m18_64 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="104-106"];
m18_69 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="97-97"];
m18_73 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="scheduledJobs.Count == 0", prediction=85, span="106-106"];
m18_77 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="var pipeline = redis.CreatePipeline()", prediction=85, span="114-114"];
m18_80 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }),\r\n                            x => jobs.Add(job.Key, x))", prediction=85, span="120-124"];
m18_83 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label="return new JobList<ScheduledJobDto>(scheduledJobs\r\n                    .Select(job => new KeyValuePair<string, ScheduledJobDto>(\r\n                        job.Key,\r\n                        new ScheduledJobDto\r\n                        {\r\n                            EnqueueAt = JobHelper.FromTimestamp((long) job.Value),\r\n                            Job = TryToGetJob(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2], jobs[job.Key][3]),\r\n                            ScheduledAt =\r\n                                states[job.Key].Count > 1\r\n                                    ? JobHelper.FromNullableStringTimestamp(states[job.Key][1])\r\n                                    : null,\r\n                            InScheduledState =\r\n                                ScheduledState.StateName.Equals(states[job.Key][0], StringComparison.OrdinalIgnoreCase)\r\n                        }))\r\n                    .ToList());", prediction=130, span="136-150"];
m18_66 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="104-106"];
m18_71 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="107-107"];
m18_75 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="var jobs = new Dictionary<string, List<string>>()", prediction=85, span="111-111"];
m18_79 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="var job = scheduledJob", prediction=85, span="118-118"];
m18_81 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                new[] { ''State'', ''ScheduledAt'' }),\r\n                            x => states.Add(job.Key, x))", prediction=85, span="126-130"];
m18_82 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="pipeline.Flush()", prediction=85, span="133-133"];
m18_85 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="121-129"];
m18_120 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="GetTimelineStats(redis, ''succeeded'')", prediction=85, span="156-156"];
m18_130 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", color=green, community=2, file="RedisMonitoringApi.cs", label="return UseConnection(redis =>\r\n            {\r\n                var serverNames = redis.GetAllItemsFromSet(''hangfire:servers'');\r\n\r\n                if (serverNames.Count == 0)\r\n                {\r\n                    return new List<ServerDto>();\r\n                }\r\n\r\n                var servers = new Dictionary<string, List<string>>();\r\n                var queues = new Dictionary<string, List<string>>();\r\n\r\n                using (var pipeline = redis.CreatePipeline())\r\n                {\r\n                    foreach (var serverName in serverNames)\r\n                    {\r\n                        var name = serverName;\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x));\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x));\r\n                    }\r\n\r\n                    pipeline.Flush();\r\n                }\r\n\r\n                return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }).ToList();\r\n            });", prediction=136, span="166-207"];
m18_127 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="GetTimelineStats(redis, ''failed'')", prediction=85, span="161-161"];
m18_117 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", color=green, community=0, file="RedisMonitoringApi.cs", label="return UseConnection(redis => GetTimelineStats(redis, ''succeeded''));", prediction=85, span="156-156"];
m18_116 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="154-154"];
m18_119 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="173-173"];
m18_126 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="178-178"];
m18_129 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.Servers()", span="164-164"];
m18_118 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="154-154"];
m18_121 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="173-173"];
m18_124 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", color=green, community=0, file="RedisMonitoringApi.cs", label="return UseConnection(redis => GetTimelineStats(redis, ''failed''));", prediction=85, span="161-161"];
m18_128 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="178-178"];
m18_131 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.Servers()", span="164-164"];
m18_141 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x))", prediction=85, span="184-188"];
m18_142 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x))", prediction=85, span="190-193"];
m18_143 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="pipeline.Flush()", prediction=142, span="196-196"];
m18_151 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="servers.Add(name, x)", prediction=85, span="188-188"];
m18_153 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="237-244"];
m18_177 [cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="23-23"];
m18_183 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label="return GetJobsWithProperties(\r\n                    redis,\r\n                    succeededJobIds,\r\n                    null,\r\n                    new[] { ''SucceededAt'', ''PerformanceDuration'', ''Latency'', ''State'' },\r\n                    (job, jobData, state) => new SucceededJobDto\r\n                    {\r\n                        Job = job,\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        TotalDuration = state[1] != null && state[2] != null\r\n                            ? (long?) long.Parse(state[1]) + (long?) long.Parse(state[2])\r\n                            : null,\r\n                        InSucceededState = SucceededState.StateName.Equals(state[3], StringComparison.OrdinalIgnoreCase)\r\n                    });", prediction=144, span="246-259"];
m18_176 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="264-265"];
m18_179 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", color=green, community=2, file="RedisMonitoringApi.cs", label="return UseConnection(redis =>\r\n            {\r\n                var succeededJobIds = redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1);\r\n\r\n                return GetJobsWithProperties(\r\n                    redis,\r\n                    succeededJobIds,\r\n                    null,\r\n                    new[] { ''SucceededAt'', ''PerformanceDuration'', ''Latency'', ''State'' },\r\n                    (job, jobData, state) => new SucceededJobDto\r\n                    {\r\n                        Job = job,\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        TotalDuration = state[1] != null && state[2] != null\r\n                            ? (long?) long.Parse(state[1]) + (long?) long.Parse(state[2])\r\n                            : null,\r\n                        InSucceededState = SucceededState.StateName.Equals(state[3], StringComparison.OrdinalIgnoreCase)\r\n                    });\r\n            });", prediction=85, span="239-260"];
m18_182 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label="var succeededJobIds = redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1)", prediction=146, span="241-244"];
m18_185 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="270-270"];
m18_188 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="273-273"];
m18_194 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="284-290"];
m18_178 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="237-237"];
m18_181 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="266-266"];
m18_184 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="269-269"];
m18_186 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="length = x", span="270-270"];
m18_187 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label="new SucceededJobDto\r\n                    {\r\n                        Job = job,\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        TotalDuration = state[1] != null && state[2] != null\r\n                            ? (long?) long.Parse(state[1]) + (long?) long.Parse(state[2])\r\n                            : null,\r\n                        InSucceededState = SucceededState.StateName.Equals(state[3], StringComparison.OrdinalIgnoreCase)\r\n                    }", prediction=147, span="251-259"];
m18_195 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label="var deletedJobIds = redis.GetRangeFromList(\r\n                    ''hangfire:deleted'',\r\n                    from,\r\n                    from + count - 1)", prediction=148, span="267-270"];
m18_196 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label="return GetJobsWithProperties(\r\n                    redis,\r\n                    deletedJobIds,\r\n                    null,\r\n                    new[] { ''DeletedAt'', ''State'' },\r\n                    (job, jobData, state) => new DeletedJobDto\r\n                    {\r\n                        Job = job,\r\n                        DeletedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InDeletedState = DeletedState.StateName.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", prediction=149, span="272-282"];
m18_203 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", color=green, community=2, file="RedisMonitoringApi.cs", label="return UseConnection(redis =>\r\n            {\r\n                var queues = redis.GetAllItemsFromSet(''hangfire:queues'');\r\n                var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count);\r\n\r\n                foreach (var queue in queues)\r\n                {\r\n                    IList<string> firstJobIds = null;\r\n                    long length = 0;\r\n                    long fetched = 0;\r\n\r\n                    using (var pipeline = redis.CreatePipeline())\r\n                    {\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x);\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x);\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => fetched = x);\r\n\r\n                        pipeline.Flush();\r\n                    }\r\n\r\n                    var jobs = GetJobsWithProperties(\r\n                        redis,\r\n                        firstJobIds,\r\n                        new[] { ''State'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, jobData, state) => new EnqueuedJobDto\r\n                        {\r\n                            Job = job,\r\n                            State = jobData[0],\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        });\r\n\r\n                    result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Fetched = fetched\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", prediction=150, span="288-340"];
m18_205 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="320-326"];
m18_211 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="long fetched = 0", prediction=151, span="297-297"];
m18_212 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="var pipeline = redis.CreatePipeline()", prediction=93, span="299-299"];
m18_213 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x)", prediction=85, span="301-304"];
m18_260 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="!hiddenProperties.Contains(x.Key)", span="433-433"];
m18_263 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="433-433"];
m18_266 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="433-433"];
m18_261 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label="var jobIds = redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1)", prediction=154, span="373-375"];
m18_264 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.Key", span="433-433"];
m18_265 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label="new FetchedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(jobData[1])\r\n                    }", prediction=155, span="382-387"];
m18_267 [cluster="HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21"];
m18_268 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="391-391"];
m18_294 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="var stateData = new Dictionary<string, string>(entry)", prediction=156, span="430-430"];
m18_293 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label="var dto = new StateHistoryDto\r\n                    {\r\n                        StateName = entry[''State''],\r\n                        Reason = entry.ContainsKey(''Reason'') ? entry[''Reason''] : null,\r\n                        CreatedAt = JobHelper.FromStringTimestamp(entry[''CreatedAt'']),\r\n                    }", prediction=157, span="420-425"];
m18_295 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="stateData.Remove(''State'')", prediction=158, span="431-431"];
m18_322 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="x.Key", prediction=85, span="451-451"];
m18_318 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="!hiddenProperties.Contains(x.Key)", prediction=85, span="451-451"];
m18_321 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="482-482"];
m18_319 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="451-451"];
m18_320 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="481-481"];
m18_323 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="482-482"];
m18_347 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="525-525"];
m18_350 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="!states.ContainsKey(id)", span="526-526"];
m18_351 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="states.Add(id, x)", span="526-526"];
m18_346 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="525-525"];
m18_349 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="526-526"];
m18_353 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="534-539"];
m18_348 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="525-525"];
m18_352 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="468-468"];
m18_355 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="534-539"];
m18_397 [cluster="JobList<T>.cstr", file="RedisMonitoringApi.cs", label="Entry JobList<T>.cstr", span=""];
m18_400 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="539-541"];
m18_403 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="542-542"];
m18_406 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="542-542"];
m18_409 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="547-547"];
m18_412 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="581-581"];
m18_416 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetJob(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2],\r\n                        jobs[x][properties.Length + 3]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="556-566"];
m18_420 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="567-571"];
m18_423 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="586-586"];
m18_426 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="569-569"];
m18_396 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="569-569"];
m18_399 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id),\r\n                            properties.Union(new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }).ToArray())", prediction=112, span="539-541"];
m18_405 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="574-574"];
m18_408 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="577-577"];
m18_414 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="548-548"];
m18_418 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="567-571"];
m18_422 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="585-585"];
m18_425 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="y == null", prediction=162, span="569-569"];
m18_431 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="redis.GetListCount(''hangfire:succeeded'')", prediction=163, span="577-577"];
m18_18 [cluster="HangFire.Web.JobStorage.FailedCount()", color=green, community=0, file="RedisMonitoringApi.cs", label="Exit HangFire.Web.JobStorage.FailedCount()", prediction=85, span="36-36"];
m18_59 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", color=green, community=2, file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", prediction=165, span="0-0"];
m18_72 [cluster="Unk.Add", color=green, community=2, file="RedisMonitoringApi.cs", label="Entry Unk.Add", prediction=85, span=""];
m18_100 [cluster="HangFire.Web.JobStorage.Servers()", color=green, community=0, file="RedisMonitoringApi.cs", label="serverNames.Count == 0", prediction=85, span="155-155"];
m18_95 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", color=green, community=2, file="RedisMonitoringApi.cs", label="return GetTimelineStats(Redis, ''failed'');", prediction=85, span="145-145"];
m18_139 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", color=green, community=0, file="RedisMonitoringApi.cs", label="Exit HangFire.Web.JobStorage.FailedJobs(int, int)", prediction=85, span="195-195"];
m18_144 [cluster="HangFire.Web.FailedJobDto.FailedJobDto()", color=green, community=2, file="RedisMonitoringApi.cs", label="Entry HangFire.Web.FailedJobDto.FailedJobDto()", prediction=85, span="5-5"];
m18_135 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", color=green, community=0, file="RedisMonitoringApi.cs", label="Entry HangFire.Web.JobStorage.FailedJobs(int, int)", prediction=171, span="195-195"];
m18_136 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", color=green, community=0, file="RedisMonitoringApi.cs", label=Redis, prediction=85, span="197-197"];
m18_140 [cluster="Unk.GetRangeFromSortedSetDesc", color=green, community=0, file="RedisMonitoringApi.cs", label="Entry Unk.GetRangeFromSortedSetDesc", prediction=85, span=""];
m18_154 [cluster="HangFire.Web.SucceededJobDto.SucceededJobDto()", color=green, community=2, file="RedisMonitoringApi.cs", label="Entry HangFire.Web.SucceededJobDto.SucceededJobDto()", prediction=85, span="5-5"];
m18_170 [cluster="HangFire.Web.JobStorage.Queues()", color=green, community=2, file="RedisMonitoringApi.cs", label="return result;", prediction=175, span="301-301"];
m18_171 [cluster="HangFire.Web.JobStorage.Queues()", color=green, community=2, file="RedisMonitoringApi.cs", label="Exit HangFire.Web.JobStorage.Queues()", prediction=85, span="248-248"];
m18_175 [cluster="System.Collections.Generic.List<T>.Add(T)", color=green, community=2, file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", prediction=177, span="0-0"];
m18_206 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", color=green, community=0, file="RedisMonitoringApi.cs", label="Entry HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", prediction=178, span="330-330"];
m18_215 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", color=green, community=2, file="RedisMonitoringApi.cs", label="Entry HangFire.Web.JobStorage.HourlySucceededJobs()", prediction=93, span="356-356"];
m18_216 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", color=green, community=0, file="RedisMonitoringApi.cs", label=Redis, prediction=93, span="358-358"];
m18_217 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", color=green, community=2, file="RedisMonitoringApi.cs", label="return GetHourlyTimelineStats(Redis, ''succeeded'');", prediction=85, span="360-360"];
m18_218 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", color=green, community=2, file="RedisMonitoringApi.cs", label="Exit HangFire.Web.JobStorage.HourlySucceededJobs()", prediction=93, span="356-356"];
m18_210 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", color=green, community=0, file="RedisMonitoringApi.cs", label="Exit HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", prediction=183, span="330-330"];
m18_235 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", color=green, community=0, file="RedisMonitoringApi.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", prediction=184, span="47-47"];
m18_244 [cluster="HangFire.Web.JobStorage.JobDetails(string)", color=green, community=2, file="RedisMonitoringApi.cs", label="Entry HangFire.Web.JobStorage.JobDetails(string)", prediction=185, span="412-412"];
m18_251 [cluster="HangFire.Web.JobStorage.JobDetails(string)", color=green, community=2, file="RedisMonitoringApi.cs", label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", prediction=186, span="424-426"];
m18_252 [cluster="HangFire.Web.JobStorage.JobDetails(string)", color=green, community=2, file="RedisMonitoringApi.cs", label="return new JobDetailsDto\r\n                {\r\n                    Type = job[''Type''],\r\n                    Arguments = JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']),\r\n                    State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                    Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = history\r\n                };", prediction=187, span="428-435"];
m18_262 [cluster="Unk.Contains", color=green, community=2, file="RedisMonitoringApi.cs", label="Entry Unk.Contains", prediction=85, span=""];
m18_300 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", color=green, community=0, file="RedisMonitoringApi.cs", label="var dates = new List<DateTime>()", prediction=189, span="473-473"];
m18_301 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", color=green, community=0, file="RedisMonitoringApi.cs", label="startDate <= endDate", prediction=109, span="475-475"];
m18_302 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", color=green, community=0, file="RedisMonitoringApi.cs", label="dates.Add(endDate)", prediction=109, span="477-477"];
m18_303 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", color=green, community=0, file="RedisMonitoringApi.cs", label="endDate = endDate.AddDays(-1)", prediction=192, span="478-478"];
m18_304 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", color=green, community=2, file="RedisMonitoringApi.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", prediction=85, span="481-481"];
m18_289 [cluster="Unk.GetValuesMap", color=green, community=2, file="RedisMonitoringApi.cs", label="Entry Unk.GetValuesMap", prediction=194, span=""];
m18_288 [cluster="System.DateTime.AddHours(double)", color=green, community=0, file="RedisMonitoringApi.cs", label="Entry System.DateTime.AddHours(double)", prediction=85, span="0-0"];
m18_290 [cluster="Unk.ElementAt", color=green, community=2, file="RedisMonitoringApi.cs", label="Entry Unk.ElementAt", prediction=196, span=""];
m18_292 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", color=green, community=2, file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", prediction=196, span="0-0"];
m18_299 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", color=green, community=0, file="RedisMonitoringApi.cs", label="var startDate = endDate.AddDays(-7)", prediction=109, span="472-472"];
m18_298 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", color=green, community=0, file="RedisMonitoringApi.cs", label="var endDate = DateTime.UtcNow.Date", prediction=109, span="471-471"];
m18_296 [cluster="System.DateTime.ToString(string)", color=green, community=0, file="RedisMonitoringApi.cs", label="Entry System.DateTime.ToString(string)", prediction=200, span="0-0"];
m18_297 [cluster="string.Format(string, object, object)", color=green, community=0, file="RedisMonitoringApi.cs", label="Entry string.Format(string, object, object)", prediction=201, span="0-0"];
m18_415 [cluster="Unk.GetValue", file="RedisMonitoringApi.cs", label="Entry Unk.GetValue", span=""];
m18_419 [cluster="Unk.Parse", color=green, community=0, file="RedisMonitoringApi.cs", label="Entry Unk.Parse", prediction=112, span=""];
m18_432 [cluster="lambda expression", file="RedisMonitoringApi.cs", label=job, span=""];
m18_436 [cluster="lambda expression", file="RedisMonitoringApi.cs", label=servers, span=""];
m18_437 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label=queues, prediction=85, span=""];
m18_438 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label=queue, prediction=85, span=""];
m18_440 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label=string, prediction=85, span=""];
m18_460 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="stats.Servers = x", prediction=206, span="592-592"];
m18_441 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label=string, prediction=85, span=""];
m18_466 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="stats.Queues = x", prediction=208, span="596-596"];
m18_442 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label="string[]", prediction=85, span=""];
m18_472 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="stats.Scheduled = x", prediction=210, span="600-600"];
m18_443 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label=id, prediction=85, span=""];
m18_478 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="stats.Processing = x", prediction=212, span="604-604"];
m18_444 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label=jobs, prediction=85, span=""];
m18_485 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="stats.Succeeded = long.Parse(x ?? ''0'')", prediction=214, span="608-608"];
m18_445 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label="string[]", prediction=85, span=""];
m18_492 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="stats.Failed = x", prediction=216, span="612-612"];
m18_446 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label=states, prediction=85, span=""];
m18_498 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="stats.Deleted = long.Parse(x ?? ''0'')", prediction=218, span="616-616"];
m18_447 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", prediction=85, span=""];
m18_504 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="stats.Recurring = x", prediction=220, span="620-620"];
m18_450 [cluster="lambda expression", color=green, community=2, file="RedisMonitoringApi.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", prediction=221, span="625-627"];
m18_510 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="stats.Enqueued += x", prediction=222, span="627-627"];
m18_452 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="return stats;", prediction=85, span="633-633"];
m18_439 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label=hiddenProperties, prediction=85, span=""];
m18_448 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label=stats, prediction=85, span=""];
m18_451 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="pipeline.Flush()", prediction=85, span="630-630"];
m18_455 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="591-591"];
m18_459 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="592-592"];
m18_461 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="592-592"];
m18_462 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="595-595"];
m18_465 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="596-596"];
m18_467 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="596-596"];
m18_468 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="599-599"];
m18_471 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="600-600"];
m18_473 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="600-600"];
m18_474 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="603-603"];
m18_477 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="604-604"];
m18_479 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="604-604"];
m18_480 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="607-607"];
m18_484 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="608-608"];
m18_486 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="608-608"];
m18_488 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="611-611"];
m18_491 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="612-612"];
m18_493 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="612-612"];
m18_494 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="615-615"];
m18_497 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="616-616"];
m18_499 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="616-616"];
m18_500 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="619-619"];
m18_503 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="620-620"];
m18_505 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="620-620"];
m18_449 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label=queueName, prediction=227, span=""];
m18_506 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="626-626"];
m18_509 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Entry lambda expression", span="627-627"];
m18_511 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="627-627"];
m18_453 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="582-634"];
m18_507 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", prediction=227, span="626-626"];
m18_508 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="626-626"];
m18_456 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="x.GetSetCount(''hangfire:servers'')", prediction=229, span="591-591"];
m18_457 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="591-591"];
m18_463 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="x.GetSetCount(''hangfire:queues'')", prediction=230, span="595-595"];
m18_464 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="595-595"];
m18_469 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="x.GetSortedSetCount(''hangfire:schedule'')", prediction=231, span="599-599"];
m18_470 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="599-599"];
m18_475 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="x.GetSortedSetCount(''hangfire:processing'')", prediction=232, span="603-603"];
m18_476 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="603-603"];
m18_481 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="x.GetValue(''hangfire:stats:succeeded'')", prediction=233, span="607-607"];
m18_482 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="607-607"];
m18_489 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="x.GetSortedSetCount(''hangfire:failed'')", prediction=234, span="611-611"];
m18_490 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="611-611"];
m18_495 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="x.GetValue(''hangfire:stats:deleted'')", prediction=235, span="615-615"];
m18_496 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="615-615"];
m18_501 [cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs", label="x.GetSortedSetCount(''hangfire:recurring-jobs'')", prediction=236, span="619-619"];
m18_502 [cluster="lambda expression", file="RedisMonitoringApi.cs", label="Exit lambda expression", span="619-619"];
m18_255 [cluster="HangFire.Web.JobDetailsDto.JobDetailsDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Web.JobDetailsDto.JobDetailsDto()", span="4-4"];
m18_381 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RedisMonitoringApi.cs", label="var queueName = queue", span="590-590"];
m18_28 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedCount()", span="57-57"];
m18_223 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="RedisMonitoringApi.cs", label="Exit HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364"];
m18_93 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="RedisMonitoringApi.cs", label="Entry HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141"];
m18_115 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", span="645-645"];
m18_97 [cluster="HangFire.Web.JobStorage.Servers()", file="RedisMonitoringApi.cs", label="Entry HangFire.Web.JobStorage.Servers()", span="149-149"];
m18_67 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="97-97"];
m18_220 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="RedisMonitoringApi.cs", label="Entry HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364"];
m18_221 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="RedisMonitoringApi.cs", label=Redis, span="366-366"];
m18_35 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", color=green, community=0, file="RedisMonitoringApi.cs", label="return UseConnection(redis => redis.GetSortedSetCount(''hangfire:processing''));", prediction=85, span="64-64"];
m18_37 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="RedisMonitoringApi.cs", label="Entry HangFire.JobHelper.TryToGetQueue(string)", span="9-9"];
m18_517 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RedisMonitoringApi.cs", label="return new InvocationData(\r\n                    type,\r\n                    method,\r\n                    parameterTypes,\r\n                    arguments).Deserialize();", span="650-654"];
m18_519 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RedisMonitoringApi.cs", label="return null;", span="658-658"];
m18_518 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RedisMonitoringApi.cs", label=Exception, span="656-656"];
m18_520 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", span="645-645"];
m18_167 [cluster="HangFire.Web.JobStorage.Queues()", color=green, community=2, file="RedisMonitoringApi.cs", label="pipeline.Flush()", prediction=85, span="276-276"];
m18_87 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m18_145 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="RedisMonitoringApi.cs", label="Entry HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223"];
m18_149 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="RedisMonitoringApi.cs", label="Exit HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223"];
m18_172 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="RedisMonitoringApi.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m18_150 [cluster="Unk.GetRangeFromList", file="RedisMonitoringApi.cs", label="Entry Unk.GetRangeFromList", span=""];
m18_155 [cluster="HangFire.Web.JobStorage.Queues()", file="RedisMonitoringApi.cs", label="Entry HangFire.Web.JobStorage.Queues()", span="248-248"];
m18_88 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="RedisMonitoringApi.cs", label="Entry HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133"];
m18_99 [cluster="HangFire.Web.JobStorage.Servers()", file="RedisMonitoringApi.cs", label="var serverNames = Redis.GetAllItemsFromSet(''hangfire:servers'')", span="153-153"];
m18_105 [cluster="HangFire.Web.JobStorage.Servers()", file="RedisMonitoringApi.cs", label=serverNames, span="165-165"];
m18_111 [cluster="HangFire.Web.JobStorage.Servers()", file="RedisMonitoringApi.cs", label="Exit HangFire.Web.JobStorage.Servers()", span="149-149"];
m18_39 [cluster="string.Equals(string, System.StringComparison)", file="RedisMonitoringApi.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m18_92 [cluster="Unk.Select", file="RedisMonitoringApi.cs", label="Entry Unk.Select", span=""];
m18_305 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="482-482"];
m18_306 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="484-484"];
m18_309 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="i < stringDates.Count", span="487-487"];
m18_308 [cluster="HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21"];
m18_315 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="return result;", span="497-497"];
m18_314 [cluster="Unk.TryToGetJob", file="RedisMonitoringApi.cs", label="Entry Unk.TryToGetJob", span=""];
m18_310 [cluster="Unk.FromStringTimestamp", file="RedisMonitoringApi.cs", label="Entry Unk.FromStringTimestamp", span=""];
m18_312 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="RedisMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m18_316 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisMonitoringApi.cs", label="Exit HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="468-468"];
m18_15 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", color=green, community=0, file="RedisMonitoringApi.cs", label="return UseConnection(redis => \r\n                redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue)));", prediction=85, span="47-48"];
m18_17 [cluster="HangFire.Web.JobStorage.FailedCount()", file="RedisMonitoringApi.cs", label="return Redis.GetSortedSetCount(''hangfire:failed'');", span="40-40"];
m18_250 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="RedisMonitoringApi.cs", label="var historyList = Redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="421-422"];
m18_253 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="RedisMonitoringApi.cs", label="Exit HangFire.Web.JobStorage.JobDetails(string)", span="412-412"];
m18_521 [cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="RedisMonitoringApi.cs", label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24"];
m18_5 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="RedisMonitoringApi.cs", label="Entry HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20"];
m18_6 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="RedisMonitoringApi.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="39-39"];
m18_7 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", color=green, community=0, file="RedisMonitoringApi.cs", label="return UseConnection(redis => \r\n                redis.GetSortedSetCount(''hangfire:schedule''));", prediction=85, span="41-42"];
m18_8 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="RedisMonitoringApi.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="39-39"];
m18_254 [cluster="Unk.GetAllEntriesFromHash", file="RedisMonitoringApi.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m18_63 [cluster="Unk.ToDictionary", file="RedisMonitoringApi.cs", label="Entry Unk.ToDictionary", span=""];
m18_114 [cluster="Unk.Select", file="RedisMonitoringApi.cs", label="Entry Unk.Select", span=""];
m18_125 [cluster="Unk.GetAllItemsFromList", file="RedisMonitoringApi.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m18_94 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="RedisMonitoringApi.cs", label=Redis, span="143-143"];
m18_96 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="RedisMonitoringApi.cs", label="Exit HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141"];
m18_256 [cluster="Unk.>", file="RedisMonitoringApi.cs", label="Entry Unk.>", span=""];
m18_202 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="RedisMonitoringApi.cs", label="Exit HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305"];
m18_10 [cluster="Unk.GetListCount", file="RedisMonitoringApi.cs", label="Entry Unk.GetListCount", span=""];
m18_68 [cluster="Unk.GetValuesFromHash", color=green, community=2, file="RedisMonitoringApi.cs", label="Entry Unk.GetValuesFromHash", prediction=85, span=""];
m18_233 [cluster="string.IsNullOrEmpty(string)", file="RedisMonitoringApi.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m18_19 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="RedisMonitoringApi.cs", label="Entry HangFire.Web.JobStorage.ProcessingCount()", span="44-44"];
m18_20 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="RedisMonitoringApi.cs", label=Redis, span="46-46"];
m18_224 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="RedisMonitoringApi.cs", label="Entry HangFire.Web.JobStorage.RetryJob(string)", span="372-372"];
m18_225 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="RedisMonitoringApi.cs", label=Redis, span="374-374"];
m18_231 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="RedisMonitoringApi.cs", label="Exit HangFire.Web.JobStorage.RetryJob(string)", span="372-372"];
m18_198 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="RedisMonitoringApi.cs", label="Entry HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305"];
m18_523 [file="RedisMonitoringApi.cs", label="HangFire.Redis.RedisMonitoringApi", span=""];
m18_526 [file="RedisMonitoringApi.cs", label=int, span=""];
m18_527 [file="RedisMonitoringApi.cs", label=int, span=""];
m18_528 [file="RedisMonitoringApi.cs", label=int, span=""];
m18_529 [file="RedisMonitoringApi.cs", label=int, span=""];
m18_536 [file="RedisMonitoringApi.cs", label=int, span=""];
m18_537 [file="RedisMonitoringApi.cs", label=int, span=""];
m18_538 [file="RedisMonitoringApi.cs", label=int, span=""];
m18_539 [file="RedisMonitoringApi.cs", label=int, span=""];
m18_540 [file="RedisMonitoringApi.cs", label=int, span=""];
m18_541 [file="RedisMonitoringApi.cs", label=int, span=""];
m18_543 [file="RedisMonitoringApi.cs", label=string, span=""];
m18_544 [file="RedisMonitoringApi.cs", label=int, span=""];
m18_545 [file="RedisMonitoringApi.cs", label=int, span=""];
m18_546 [file="RedisMonitoringApi.cs", label=string, span=""];
m18_547 [file="RedisMonitoringApi.cs", label=int, span=""];
m18_548 [file="RedisMonitoringApi.cs", label=int, span=""];
m18_549 [file="RedisMonitoringApi.cs", label=string, span=""];
m18_558 [file="RedisMonitoringApi.cs", label="System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span=""];
m18_553 [file="RedisMonitoringApi.cs", label="string[]", span=""];
m18_554 [file="RedisMonitoringApi.cs", label=id, span=""];
m18_552 [file="RedisMonitoringApi.cs", label=string, span=""];
m18_551 [file="RedisMonitoringApi.cs", label=string, span=""];
m19_51 [cluster="string.Format(string, object, object)", file="RedisStorage.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m19_52 [cluster="HangFire.Redis.RedisStorage.GetRedisKey(string)", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetRedisKey(string)", span="107-107"];
m19_53 [cluster="HangFire.Redis.RedisStorage.GetRedisKey(string)", file="RedisStorage.cs", label="key == null", span="109-109"];
m19_55 [cluster="HangFire.Redis.RedisStorage.GetRedisKey(string)", file="RedisStorage.cs", label="return Prefix + key;", span="111-111"];
m19_54 [cluster="HangFire.Redis.RedisStorage.GetRedisKey(string)", file="RedisStorage.cs", label="throw new ArgumentNullException(''key'');", span="109-109"];
m19_56 [cluster="HangFire.Redis.RedisStorage.GetRedisKey(string)", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetRedisKey(string)", span="107-107"];
m19_42 [cluster="HangFire.Redis.RedisStorage.WriteOptionsToLog(ILog)", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.WriteOptionsToLog(ILog)", span="96-96"];
m19_43 [cluster="HangFire.Redis.RedisStorage.WriteOptionsToLog(ILog)", file="RedisStorage.cs", label="logger.Info(''Using the following options for Redis job storage:'')", span="98-98"];
m19_44 [cluster="HangFire.Redis.RedisStorage.WriteOptionsToLog(ILog)", file="RedisStorage.cs", label="logger.InfoFormat(''    Connection pool size: {0}.'', Options.ConnectionPoolSize)", span="99-99"];
m19_45 [cluster="HangFire.Redis.RedisStorage.WriteOptionsToLog(ILog)", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.WriteOptionsToLog(ILog)", span="96-96"];
m19_46 [cluster="Unk.Info", file="RedisStorage.cs", label="Entry Unk.Info", span=""];
m19_40 [cluster="HangFire.Redis.SucceededStateHandler.SucceededStateHandler()", file="RedisStorage.cs", label="Entry HangFire.Redis.SucceededStateHandler.SucceededStateHandler()", span="21-21"];
m19_32 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetStateHandlers()", span="88-88"];
m19_33 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="yield return new FailedStateHandler();", span="90-90"];
m19_34 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="yield return new ProcessingStateHandler();", span="91-91"];
m19_35 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="yield return new SucceededStateHandler();", span="92-92"];
m19_36 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="yield return new DeletedStateHandler();", span="93-93"];
m19_37 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetStateHandlers()", span="88-88"];
m19_41 [cluster="HangFire.Redis.DeletedStateHandler.DeletedStateHandler()", file="RedisStorage.cs", label="Entry HangFire.Redis.DeletedStateHandler.DeletedStateHandler()", span="21-21"];
m19_2 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string)", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string)", span="38-38"];
m19_3 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string)", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage(string)", span="38-38"];
m19_47 [cluster="Unk.InfoFormat", file="RedisStorage.cs", label="Entry Unk.InfoFormat", span=""];
m19_38 [cluster="HangFire.Redis.FailedStateHandler.FailedStateHandler()", file="RedisStorage.cs", label="Entry HangFire.Redis.FailedStateHandler.FailedStateHandler()", span="23-23"];
m19_27 [cluster="RedisConnection.cstr", file="RedisStorage.cs", label="Entry RedisConnection.cstr", span=""];
m19_31 [cluster="HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage)", file="RedisStorage.cs", label="Entry HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage)", span="31-31"];
m19_23 [cluster="Unk.GetClient", file="RedisStorage.cs", label="Entry Unk.GetClient", span=""];
m19_39 [cluster="HangFire.Redis.ProcessingStateHandler.ProcessingStateHandler()", file="RedisStorage.cs", label="Entry HangFire.Redis.ProcessingStateHandler.ProcessingStateHandler()", span="23-23"];
m19_22 [cluster="RedisMonitoringApi.cstr", file="RedisStorage.cs", label="Entry RedisMonitoringApi.cstr", span=""];
m19_48 [cluster="HangFire.Redis.RedisStorage.ToString()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.ToString()", span="102-102"];
m19_49 [cluster="HangFire.Redis.RedisStorage.ToString()", file="RedisStorage.cs", label="return String.Format(''redis://{0}/{1}'', HostAndPort, Db);", span="104-104"];
m19_50 [cluster="HangFire.Redis.RedisStorage.ToString()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.ToString()", span="102-102"];
m19_0 [cluster="HangFire.Redis.RedisStorage.RedisStorage()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage()", span="33-33"];
m19_1 [cluster="HangFire.Redis.RedisStorage.RedisStorage()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage()", span="33-33"];
m19_6 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="48-48"];
m19_7 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="hostAndPort == null", span="50-50"];
m19_9 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="options == null", span="51-51"];
m19_11 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="HostAndPort = hostAndPort", span="53-53"];
m19_12 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="Db = db", span="54-54"];
m19_13 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="Options = options", span="55-55"];
m19_8 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="throw new ArgumentNullException(''hostAndPort'');", span="50-50"];
m19_10 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="throw new ArgumentNullException(''options'');", span="51-51"];
m19_14 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="_pooledManager = new PooledRedisClientManager(\r\n                new []{ HostAndPort },\r\n                new string[0],\r\n                new RedisClientManagerConfig\r\n                {\r\n                    DefaultDb = Db,\r\n                    MaxWritePoolSize = Options.ConnectionPoolSize\r\n                })", span="57-64"];
m19_15 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="48-48"];
m19_24 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetConnection()", span="78-78"];
m19_25 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="RedisStorage.cs", label="return new RedisConnection(_pooledManager.GetClient());", span="80-80"];
m19_26 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetConnection()", span="78-78"];
m19_18 [cluster="RedisClientManagerConfig.cstr", file="RedisStorage.cs", label="Entry RedisClientManagerConfig.cstr", span=""];
m19_19 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetMonitoringApi()", span="73-73"];
m19_21 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetMonitoringApi()", span="73-73"];
m19_4 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="43-43"];
m19_5 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="43-43"];
m19_28 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetComponents()", span="83-83"];
m19_29 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="yield return new FetchedJobsWatcher(this);", span="85-85"];
m19_30 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetComponents()", span="83-83"];
m19_17 [cluster="PooledRedisClientManager.cstr", file="RedisStorage.cs", label="Entry PooledRedisClientManager.cstr", span=""];
m19_57 [file="RedisStorage.cs", label="HangFire.Redis.RedisStorage", span=""];
m20_0 [cluster="HangFire.RetryAttribute.RetryAttribute()", file="RetryAttribute.cs", label="Entry HangFire.RetryAttribute.RetryAttribute()", span="23-23"];
m20_1 [cluster="HangFire.RetryAttribute.RetryAttribute()", file="RetryAttribute.cs", label="Exit HangFire.RetryAttribute.RetryAttribute()", span="23-23"];
m20_2 [cluster="HangFire.RetryAttribute.RetryAttribute(int)", file="RetryAttribute.cs", label="Entry HangFire.RetryAttribute.RetryAttribute(int)", span="27-27"];
m20_4 [cluster="HangFire.RetryAttribute.RetryAttribute(int)", file="RetryAttribute.cs", label="Exit HangFire.RetryAttribute.RetryAttribute(int)", span="27-27"];
m20_5 [file="RetryAttribute.cs", label="HangFire.RetryAttribute", span=""];
m21_0 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="ScheduledJobsPage.generated.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="33-33"];
m21_1 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="ScheduledJobsPage.generated.cs", label="Exit Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="33-33"];
m21_2 [cluster="Hangfire.Common.JobLoadException.JobLoadException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ScheduledJobsPage.generated.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="41-41"];
m21_3 [cluster="Hangfire.Common.JobLoadException.JobLoadException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ScheduledJobsPage.generated.cs", label="Exit Hangfire.Common.JobLoadException.JobLoadException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="41-41"];
m23_25 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(null, _context, _storage.Object, _supervisorFactory))", span="35-36"];
m23_61 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="129-129"];
m23_123 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="ServerBootstrapperFacts.cs", label="return new ServerBootstrapper(ServerId, _context, _storage.Object, _supervisorFactory);", span="131-131"];
m23_124 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="129-129"];
m23_34 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="42-42"];
m23_35 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, null, _storage.Object, _supervisorFactory))", span="44-45"];
m23_36 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''context'', exception.ParamName)", span="47-47"];
m23_37 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="42-42"];
m23_23 [cluster="Unk.GetConnection", file="ServerBootstrapperFacts.cs", label="Entry Unk.GetConnection", span=""];
m23_22 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="29-29"];
m23_29 [cluster="Unk.Equal", file="ServerBootstrapperFacts.cs", label="Entry Unk.Equal", span=""];
m23_82 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", span="90-90"];
m23_84 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="server.Execute(_token)", prediction=242, span="93-93"];
m23_83 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", file="ServerBootstrapperFacts.cs", label="var server = CreateServer()", span="92-92"];
m23_85 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", file="ServerBootstrapperFacts.cs", label="_supervisor.Verify(x => x.Start())", span="95-95"];
m23_86 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", span="90-90"];
m23_19 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="25-25"];
m23_26 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''serverId'', exception.ParamName)", span="38-38"];
m23_27 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="33-33"];
m23_28 [cluster="Unk.>", file="ServerBootstrapperFacts.cs", label="Entry Unk.>", span=""];
m23_48 [cluster="HangFire.Server.ServerBootstrapper.ServerBootstrapper(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerSupervisor>)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Server.ServerBootstrapper.ServerBootstrapper(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerSupervisor>)", span="31-31"];
m23_30 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="36-36"];
m23_11 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="ServerBootstrapperFacts.cs", label="context.SetJobParameter(''RetryCount'', retryAttempt)", span="50-50"];
m23_41 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="51-51"];
m23_42 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerBootstrapperFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, _context, null, _supervisorFactory))", span="53-54"];
m23_43 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="56-56"];
m23_44 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="51-51"];
m23_99 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="109-109"];
m23_101 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="server.Execute(_token)", prediction=242, span="113-113"];
m23_100 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs", label="var server = CreateServer()", span="111-111"];
m23_102 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs", label="_connection.Verify(x => x.RemoveServer(ServerId))", span="115-115"];
m23_103 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="109-109"];
m23_12 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="ServerBootstrapperFacts.cs", label="context.CandidateState = new ScheduledState(delay)\r\n                {\r\n                    Reason = String.Format(''Retry attempt {0} of {1}'', retryAttempt, Attempts)\r\n                }", span="54-57"];
m23_0 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", span="20-20"];
m23_1 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="_context = new ServerContext()", span="22-22"];
m23_3 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="_supervisor = new Mock<IServerSupervisor>()", span="24-24"];
m23_20 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="29-29"];
m23_108 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", span="119-119"];
m23_111 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="Assert.Throws<InvalidOperationException>(() => server.Execute(_token))", prediction=242, span="124-124"];
m23_110 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="ServerBootstrapperFacts.cs", label="var server = CreateServer()", span="122-122"];
m23_112 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="ServerBootstrapperFacts.cs", label="_connection.Verify(x => x.RemoveServer(It.IsAny<string>()))", span="126-126"];
m23_109 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="ServerBootstrapperFacts.cs", label="_supervisor.Setup(x => x.Dispose()).Throws<InvalidOperationException>()", span="121-121"];
m23_113 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", span="119-119"];
m23_68 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="79-79"];
m23_70 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="server.Execute(_token)", prediction=242, span="83-83"];
m23_69 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="var server = CreateServer()", span="81-81"];
m23_71 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="_storage.Verify(x => x.GetConnection(), Times.Exactly(2))", span="85-85"];
m23_72 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="_connection.Verify(x => x.Dispose(), Times.Exactly(2))", span="86-86"];
m23_73 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="79-79"];
m23_62 [cluster="HangFire.Server.ServerBootstrapper.Execute(System.Threading.CancellationToken)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Server.ServerBootstrapper.Execute(System.Threading.CancellationToken)", span="48-48"];
m23_24 [cluster="Unk.WarnFormat", file="ServerBootstrapperFacts.cs", label="Entry Unk.WarnFormat", span=""];
m23_21 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.GetConnection()", span="29-29"];
m23_49 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", span="60-60"];
m23_50 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", file="ServerBootstrapperFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, _context, _storage.Object, null))", span="62-63"];
m23_51 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''supervisorFactory'', exception.ParamName)", span="65-65"];
m23_52 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", span="60-60"];
m23_15 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="ServerBootstrapperFacts.cs", label=LogEvents, span="72-72"];
m23_81 [cluster="Unk.Dispose", file="ServerBootstrapperFacts.cs", label="Entry Unk.Dispose", span=""];
m23_31 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="new ServerBootstrapper(null, _context, _storage.Object, _supervisorFactory)", span="36-36"];
m23_32 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="36-36"];
m23_9 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="ServerBootstrapperFacts.cs", label="retryAttempt <= Attempts", span="46-46"];
m23_33 [cluster="ServerBootstrapper.cstr", file="ServerBootstrapperFacts.cs", label="HangFire.AutomaticRetryAttribute", span=""];
m23_6 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", color=green, community=0, file="ServerBootstrapperFacts.cs", label="failedState == null", prediction=242, span="38-38"];
m23_5 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="ServerBootstrapperFacts.cs", label="var failedState = context.CandidateState as FailedState", span="37-37"];
m23_7 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="ServerBootstrapperFacts.cs", label="return;", span="41-41"];
m23_4 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", span="35-35"];
m23_8 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="ServerBootstrapperFacts.cs", label="var retryAttempt = context.GetJobParameter<int>(''RetryCount'') + 1", span="44-44"];
m23_114 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="121-121"];
m23_117 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="124-124"];
m23_118 [cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs", label="server.Execute(_token)", prediction=242, span="124-124"];
m23_119 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="124-124"];
m23_18 [cluster="HangFire.States.ElectStateContext.GetJobParameter<T>(string)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.States.ElectStateContext.GetJobParameter<T>(string)", span="54-54"];
m23_39 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="new ServerBootstrapper(ServerId, null, _storage.Object, _supervisorFactory)", span="45-45"];
m23_46 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="new ServerBootstrapper(ServerId, _context, null, _supervisorFactory)", span="54-54"];
m23_54 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="new ServerBootstrapper(ServerId, _context, _storage.Object, null)", span="63-63"];
m23_65 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.AnnounceServer(ServerId, _context)", span="75-75"];
m23_64 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="75-75"];
m23_75 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="85-85"];
m23_87 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="95-95"];
m23_96 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="105-105"];
m23_104 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="115-115"];
m23_120 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="126-126"];
m23_121 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.RemoveServer(It.IsAny<string>())", span="126-126"];
m23_17 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="ServerBootstrapperFacts.cs", label="Exit HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", span="35-35"];
m23_38 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="45-45"];
m23_40 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="45-45"];
m23_45 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="54-54"];
m23_47 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="54-54"];
m23_53 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="63-63"];
m23_55 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="63-63"];
m23_66 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="75-75"];
m23_78 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="86-86"];
m23_77 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="85-85"];
m23_76 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.GetConnection()", span="85-85"];
m23_89 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="95-95"];
m23_88 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.Start()", span="95-95"];
m23_98 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="105-105"];
m23_97 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.Dispose()", span="105-105"];
m23_106 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="115-115"];
m23_105 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.RemoveServer(ServerId)", span="115-115"];
m23_122 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="126-126"];
m23_80 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="86-86"];
m23_79 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.Dispose()", span="86-86"];
m23_115 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.Dispose()", span="121-121"];
m23_116 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="121-121"];
m23_74 [cluster="Unk.Exactly", file="ServerBootstrapperFacts.cs", label="Entry Unk.Exactly", span=""];
m23_67 [cluster="Unk.AnnounceServer", file="ServerBootstrapperFacts.cs", label="Entry Unk.AnnounceServer", span=""];
m23_14 [cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", file="ServerBootstrapperFacts.cs", label="Logger.WarnFormat(\r\n                        ''Failed to process the job '{0}': an exception occurred. Retry attempt {1} of {2} will be performed in {3}.'',\r\n                        failedState.Exception,\r\n                        context.JobId,\r\n                        retryAttempt,\r\n                        Attempts,\r\n                        delay)", span="61-67"];
m23_90 [cluster="Unk.Start", file="ServerBootstrapperFacts.cs", label="Entry Unk.Start", span=""];
m23_63 [cluster="Unk.Verify", file="ServerBootstrapperFacts.cs", label="Entry Unk.Verify", span=""];
m23_107 [cluster="Unk.RemoveServer", file="ServerBootstrapperFacts.cs", label="Entry Unk.RemoveServer", span=""];
m23_16 [cluster="Unk.Returns", file="ServerBootstrapperFacts.cs", label="Entry Unk.Returns", span=""];
m23_10 [cluster="Mock<JobStorage>.cstr", file="ServerBootstrapperFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m23_13 [cluster="Mock<IStorageConnection>.cstr", file="ServerBootstrapperFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m23_56 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="69-69"];
m23_58 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="server.Execute(_token)", prediction=242, span="73-73"];
m23_57 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs", label="var server = CreateServer()", span="71-71"];
m23_59 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs", label="_connection.Verify(x => x.AnnounceServer(ServerId, _context))", span="75-75"];
m23_60 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="69-69"];
m23_91 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", span="99-99"];
m23_93 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="server.Execute(_token)", prediction=242, span="103-103"];
m23_92 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="ServerBootstrapperFacts.cs", label="var server = CreateServer()", span="101-101"];
m23_94 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="ServerBootstrapperFacts.cs", label="_supervisor.Verify(x => x.Dispose())", span="105-105"];
m23_95 [cluster="HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", span="99-99"];
m23_125 [file="ServerBootstrapperFacts.cs", label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", span=""];
m23_126 [file="ServerBootstrapperFacts.cs", label=server, span=""];
m25_104 [cluster="System.Collections.Generic.List<T>.List()", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m25_70 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="SqlServerMonitoringApi.cs", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
m25_121 [cluster="long.Parse(string)", file="SqlServerMonitoringApi.cs", label="Entry long.Parse(string)", span="0-0"];
m25_182 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", span="329-329"];
m25_183 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="string fetchedJobsSql = @''\r\nselect j.*, jq.FetchedAt, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is not null''", prediction=250, span="331-336"];
m25_184 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var jobs = _connection.Query<SqlJob>(\r\n                fetchedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", prediction=251, span="338-341"];
m25_185 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs", label="var result = new List<KeyValuePair<string, FetchedJobDto>>(jobs.Count)", span="343-343"];
m25_186 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs", label=jobs, span="345-345"];
m25_187 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="result.Add(new KeyValuePair<string, FetchedJobDto>(\r\n                    job.Id.ToString(),\r\n                    new FetchedJobDto\r\n                    {\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        State = job.StateName,\r\n                        FetchedAt = job.FetchedAt\r\n                    }))", prediction=252, span="347-354"];
m25_188 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="return new JobList<FetchedJobDto>(result);", prediction=253, span="357-357"];
m25_189 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(System.Collections.Generic.IEnumerable<int>)", span="329-329"];
m25_71 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m25_52 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="55-55"];
m25_232 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="415-415"];
m25_243 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="stats.Succeeded = multi.Read<int?>().SingleOrDefault() ?? 0", prediction=254, span="442-442"];
m25_233 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="var stats = new StatisticsDto()", span="417-417"];
m25_242 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="stats.Servers = multi.Read<int>().Single()", span="440-440"];
m25_235 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="var multi = _connection.QueryMultiple(sql)", span="429-429"];
m25_244 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="stats.Deleted = multi.Read<int?>().SingleOrDefault() ?? 0", prediction=255, span="443-443"];
m25_245 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="stats.Recurring = multi.Read<int>().Single()", prediction=256, span="445-445"];
m25_246 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="stats.Queues = _queueProviders\r\n                .SelectMany(x => x.GetJobQueueMonitoringApi(_connection).GetQueues())\r\n                .Count()", prediction=257, span="448-450"];
m25_247 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="return stats;", prediction=258, span="452-452"];
m25_236 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count)", prediction=259, span="431-431"];
m25_237 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0", span="433-433"];
m25_234 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="string sql = @''\r\nselect StateName as [State], count(id) as [Count] From HangFire.Job \r\ngroup by StateName\r\nhaving StateName is not null;\r\nselect count(Id) from HangFire.Server;\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:succeeded';\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:deleted';\r\nselect count(*) from HangFire.[Set] where [Key] = N'recurring-jobs';\r\n''", span="419-427"];
m25_238 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="stats.Enqueued = getCountIfExists(EnqueuedState.StateName)", span="435-435"];
m25_239 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="stats.Failed = getCountIfExists(FailedState.StateName)", span="436-436"];
m25_240 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="stats.Processing = getCountIfExists(ProcessingState.StateName)", span="437-437"];
m25_241 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="stats.Scheduled = getCountIfExists(ScheduledState.StateName)", span="438-438"];
m25_248 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="415-415"];
m25_50 [cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="23-23"];
m25_93 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="185-185"];
m25_94 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="return GetTimelineStats(''failed'');", prediction=260, span="187-187"];
m25_95 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="185-185"];
m25_113 [cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="60-60"];
m25_267 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", span="22-22"];
m25_8 [cluster="Unk.EnlistTransaction", file="SqlServerMonitoringApi.cs", label="Entry Unk.EnlistTransaction", span=""];
m25_198 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="455-455"];
m25_268 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var endDate = DateTime.UtcNow", prediction=261, span="457-457"];
m25_269 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var dates = new List<DateTime>()", span="458-458"];
m25_272 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="dates.Add(endDate)", span="461-461"];
m25_273 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="endDate = endDate.AddHours(-1)", prediction=262, span="462-462"];
m25_275 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var keys = dates.Select(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", prediction=263, span="465-465"];
m25_271 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="i < 24", prediction=264, span="459-459"];
m25_276 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", prediction=265, span="467-470"];
m25_277 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var valuesMap = _connection.Query(\r\n                sqlQuery,\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", prediction=263, span="472-475"];
m25_278 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label=keys, prediction=263, span="477-477"];
m25_274 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="i++", prediction=268, span="459-459"];
m25_270 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var i = 0", prediction=268, span="459-459"];
m25_283 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="i < dates.Count", span="483-483"];
m25_279 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="!valuesMap.ContainsKey(key)", prediction=263, span="479-479"];
m25_280 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="valuesMap.Add(key, 0)", prediction=263, span="479-479"];
m25_284 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="485-485"];
m25_281 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var result = new Dictionary<DateTime, long>()", prediction=272, span="482-482"];
m25_282 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var i = 0", span="483-483"];
m25_285 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="result.Add(dates[i], value)", span="486-486"];
m25_287 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="return result;", prediction=272, span="489-489"];
m25_286 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="i++", span="483-483"];
m25_288 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="455-455"];
m25_192 [cluster="Unk.ToString", file="SqlServerMonitoringApi.cs", label="Entry Unk.ToString", span=""];
m25_202 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="370-370"];
m25_208 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", prediction=274, span="382-382"];
m25_204 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="var multi = _connection.QueryMultiple(sql, new { id = jobId })", span="377-377"];
m25_206 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="job == null", span="380-380"];
m25_209 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var history =\r\n                    multi.Read<SqlState>()\r\n                        .ToList()\r\n                        .Select(x => new StateHistoryDto\r\n                         {\r\n                             StateName = x.Name,\r\n                             CreatedAt = x.CreatedAt,\r\n                             Reason = x.Reason,\r\n                             Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                         })\r\n                        .ToList()", prediction=275, span="383-393"];
m25_210 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="return new JobDetailsDto\r\n                {\r\n                    CreatedAt = job.CreatedAt,\r\n                    Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                    History = history,\r\n                    Properties = parameters\r\n                };", prediction=276, span="395-401"];
m25_205 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="var job = multi.Read<SqlJob>().SingleOrDefault()", span="379-379"];
m25_203 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc''", span="372-375"];
m25_207 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="return null;", span="380-380"];
m25_211 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="370-370"];
m25_252 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m25_58 [cluster="Unk.DeserializeJobs", file="SqlServerMonitoringApi.cs", label="Entry Unk.DeserializeJobs", span=""];
m25_195 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="360-360"];
m25_196 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="return GetHourlyTimelineStats(''succeeded'');", prediction=260, span="362-362"];
m25_197 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="360-360"];
m25_40 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="93-93"];
m25_41 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="SqlServerMonitoringApi.cs", label="return GetNumberOfJobsByStateName(ProcessingState.StateName);", span="95-95"];
m25_42 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="93-93"];
m25_181 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="24-24"];
m25_250 [cluster="Unk.Read", file="SqlServerMonitoringApi.cs", label="Entry Unk.Read", span=""];
m25_81 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m25_114 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="231-231"];
m25_115 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs", label="return GetJobs(\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                });", span="233-244"];
m25_116 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="231-231"];
m25_106 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="214-214"];
m25_107 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs", label="return GetJobs(\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(stateData[''FailedAt''])\r\n                });", span="216-228"];
m25_108 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="214-214"];
m25_263 [cluster="Unk.ContainsKey", file="SqlServerMonitoringApi.cs", label="Entry Unk.ContainsKey", span=""];
m25_88 [cluster="HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", span="23-23"];
m25_146 [cluster="Unk.EnqueuedJobs", file="SqlServerMonitoringApi.cs", label="Entry Unk.EnqueuedJobs", span=""];
m25_89 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="180-180"];
m25_90 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs", label="return GetTimelineStats(''succeeded'');", span="182-182"];
m25_91 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="180-180"];
m25_68 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30"];
m25_27 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="69-69"];
m25_28 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var queueApi = GetQueueApi(queue)", prediction=278, span="71-71"];
m25_29 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", prediction=279, span="72-72"];
m25_30 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SqlServerMonitoringApi.cs", label="return counters.FetchedCount ?? 0;", span="74-74"];
m25_31 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="69-69"];
m25_51 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m25_249 [cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18"];
m25_251 [cluster="System.Func<T, TResult>.Invoke(T)", file="SqlServerMonitoringApi.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m25_72 [cluster="int.ToString()", file="SqlServerMonitoringApi.cs", label="Entry int.ToString()", span="0-0"];
m25_32 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="77-77"];
m25_33 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="return GetNumberOfJobsByStateName(FailedState.StateName);", prediction=260, span="79-79"];
m25_34 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="77-77"];
m25_105 [cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="21-21"];
m25_59 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="134-134"];
m25_64 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="result.Add(new KeyValuePair<string, TDto>(\r\n                    job.Id.ToString(), dto))", span="145-146"];
m25_65 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="return new JobList<TDto>(result);", span="149-149"];
m25_60 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="var result = new List<KeyValuePair<string, TDto>>(jobs.Count)", span="138-138"];
m25_61 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label=jobs, span="140-140"];
m25_63 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="var dto = selector(job, DeserializeJob(job.InvocationData, job.Arguments), stateData)", span="143-143"];
m25_62 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="var stateData = JobHelper.FromJson<Dictionary<string, string>>(job.StateData)", span="142-142"];
m25_66 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="134-134"];
m25_6 [cluster="TransactionScope.cstr", file="SqlServerMonitoringApi.cs", label="Entry TransactionScope.cstr", span=""];
m25_141 [cluster="Unk.ToArray", file="SqlServerMonitoringApi.cs", label="Entry Unk.ToArray", span=""];
m25_326 [cluster="System.DateTime.AddDays(double)", file="SqlServerMonitoringApi.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m25_15 [cluster="Unk.Dispose", file="SqlServerMonitoringApi.cs", label="Entry Unk.Dispose", span=""];
m25_215 [cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="22-22"];
m25_344 [cluster="HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m25_25 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="532-532"];
m25_340 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var provider = _queueProviders.GetProvider(queueName)", prediction=281, span="534-534"];
m25_341 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var monitoringApi = provider.GetJobQueueMonitoringApi(_connection)", prediction=282, span="535-535"];
m25_342 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="return monitoringApi;", prediction=283, span="537-537"];
m25_343 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="532-532"];
m25_128 [cluster="HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", span="7-7"];
m25_125 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="253-257"];
m25_147 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="263-263"];
m25_151 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="264-264"];
m25_155 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="264-264"];
m25_158 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="265-265"];
m25_148 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x.GetJobQueueMonitoringApi(_connection)", prediction=260, span="263-263"];
m25_149 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="263-263"];
m25_152 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x.GetQueues()", prediction=285, span="264-264"];
m25_153 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="264-264"];
m25_156 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="new { Monitoring = monitoring, Queue = queue }", prediction=286, span="264-264"];
m25_157 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="264-264"];
m25_159 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x.Queue", prediction=287, span="265-265"];
m25_160 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="265-265"];
m25_172 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="311-318"];
m25_173 [cluster="lambda expression", color=green, community=1, file="SqlServerMonitoringApi.cs", label="new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName \r\n                        ? JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                        : null\r\n                }", prediction=288, span="311-318"];
m25_174 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="311-318"];
m25_216 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="382-382"];
m25_219 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="382-382"];
m25_222 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="386-392"];
m25_217 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x.Name", prediction=289, span="382-382"];
m25_218 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="382-382"];
m25_220 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x.Value", prediction=290, span="382-382"];
m25_221 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="382-382"];
m25_223 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="new StateHistoryDto\r\n                         {\r\n                             StateName = x.Name,\r\n                             CreatedAt = x.CreatedAt,\r\n                             Reason = x.Reason,\r\n                             Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                         }", prediction=291, span="386-392"];
m25_224 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="386-392"];
m25_264 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="449-449"];
m25_254 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="431-431"];
m25_257 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="431-431"];
m25_261 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="countByStates.ContainsKey(name) ? countByStates[name] : 0", span="433-433"];
m25_255 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x.State", prediction=292, span="431-431"];
m25_256 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="431-431"];
m25_258 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x.Count", prediction=293, span="431-431"];
m25_259 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="431-431"];
m25_265 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x.GetJobQueueMonitoringApi(_connection).GetQueues()", prediction=260, span="449-449"];
m25_266 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="449-449"];
m25_294 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="465-465"];
m25_295 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", prediction=295, span="465-465"];
m25_296 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="465-465"];
m25_299 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="475-475"];
m25_302 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="475-475"];
m25_300 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="(string)x.Key", prediction=296, span="475-475"];
m25_301 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="475-475"];
m25_303 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="(long)x.Count", prediction=297, span="475-475"];
m25_304 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="475-475"];
m25_327 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="504-504"];
m25_334 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="515-515"];
m25_337 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="515-515"];
m25_328 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x.ToString(''yyyy-MM-dd'')", prediction=298, span="504-504"];
m25_329 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="504-504"];
m25_335 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="(string)x.Key", prediction=299, span="515-515"];
m25_336 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="515-515"];
m25_338 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="(long)x.Count", prediction=300, span="515-515"];
m25_339 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="515-515"];
m25_331 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="String.Format(''stats:{0}:{1}'', type, x)", span="505-505"];
m25_110 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(stateData[''FailedAt''])\r\n                }", span="220-228"];
m25_118 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(stateData[''SucceededAt''])\r\n                }", span="237-244"];
m25_126 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.FromNullableStringTimestamp(stateData[''DeletedAt''])\r\n                }", span="253-257"];
m25_260 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="433-433"];
m25_262 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="433-433"];
m25_330 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="505-505"];
m25_47 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="103-108"];
m25_85 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="172-177"];
m25_109 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="220-228"];
m25_117 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="237-244"];
m25_332 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="505-505"];
m25_111 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="220-228"];
m25_119 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="237-244"];
m25_127 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="253-257"];
m25_49 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="103-108"];
m25_48 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.FromStringTimestamp(stateData[''StartedAt'']),\r\n                }", span="103-108"];
m25_86 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.FromStringTimestamp(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                }", span="172-177"];
m25_87 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="172-177"];
m25_145 [cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="18-18"];
m25_73 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m25_57 [cluster="Unk.ToList", file="SqlServerMonitoringApi.cs", label="Entry Unk.ToList", span=""];
m25_333 [cluster="Unk.Format", file="SqlServerMonitoringApi.cs", label="Entry Unk.Format", span=""];
m25_46 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="111-111"];
m25_53 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="string jobsSql = @''\r\nselect * from (\r\n  select j.*, s.Reason as StateReason, s.Data as StateData, row_number() over (order by j.Id desc) as row_num\r\n  from HangFire.Job j\r\n  left join HangFire.State s on j.StateId = s.Id\r\n  where j.StateName = @stateName\r\n) as j where j.row_num between @start and @end\r\n''", prediction=301, span="117-124"];
m25_54 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var jobs = _connection.Query<SqlJob>(\r\n                jobsSql,\r\n                new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                .ToList()", prediction=302, span="126-129"];
m25_55 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="return DeserializeJobs(jobs, selector);", span="131-131"];
m25_56 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="111-111"];
m25_193 [cluster="HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21"];
m25_297 [cluster="System.DateTime.ToString(string)", file="SqlServerMonitoringApi.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m25_176 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="321-321"];
m25_177 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var queueApi = GetQueueApi(queue)", prediction=303, span="323-323"];
m25_178 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="var fetchedJobIds = queueApi.GetFetchedJobIds(queue, from, perPage)", span="324-324"];
m25_179 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="return FetchedJobs(fetchedJobIds);", span="326-326"];
m25_180 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="321-321"];
m25_142 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="SqlServerMonitoringApi.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m25_293 [cluster="Unk.ElementAt", file="SqlServerMonitoringApi.cs", label="Entry Unk.ElementAt", span=""];
m25_9 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", span="49-49"];
m25_10 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs", label="_transaction.Complete()", span="51-51"];
m25_11 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs", label="_transaction.Dispose()", span="52-52"];
m25_12 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs", label="_connection.Dispose()", span="53-53"];
m25_13 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", span="49-49"];
m25_167 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", span="295-295"];
m25_168 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", color=green, community=1, file="SqlServerMonitoringApi.cs", label="string enqueuedJobsSql = @''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is null''", prediction=304, span="297-302"];
m25_169 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs", label="var jobs = _connection.Query<SqlJob>(\r\n                enqueuedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="304-307"];
m25_170 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", color=green, community=1, file="SqlServerMonitoringApi.cs", label="return DeserializeJobs(\r\n                jobs,\r\n                (sqlJob, job, stateData) => new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName \r\n                        ? JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                        : null\r\n                });", prediction=305, span="309-318"];
m25_171 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(System.Collections.Generic.IEnumerable<int>)", span="295-295"];
m25_191 [cluster="KeyValuePair<string, FetchedJobDto>.cstr", file="SqlServerMonitoringApi.cs", label="Entry KeyValuePair<string, FetchedJobDto>.cstr", span=""];
m25_290 [cluster="Unk.Query", file="SqlServerMonitoringApi.cs", label="Entry Unk.Query", span=""];
m25_43 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="98-98"];
m25_44 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SqlServerMonitoringApi.cs", label="return GetJobs(\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.FromStringTimestamp(stateData[''StartedAt'']),\r\n                });", span="100-108"];
m25_45 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="98-98"];
m25_291 [cluster="Unk.Add", file="SqlServerMonitoringApi.cs", label="Entry Unk.Add", span=""];
m25_14 [cluster="Unk.Complete", file="SqlServerMonitoringApi.cs", label="Entry Unk.Complete", span=""];
m25_7 [cluster="TransactionOptions.cstr", file="SqlServerMonitoringApi.cs", label="Entry TransactionOptions.cstr", span=""];
m25_190 [cluster="List<KeyValuePair<string, FetchedJobDto>>.cstr", file="SqlServerMonitoringApi.cs", label="Entry List<KeyValuePair<string, FetchedJobDto>>.cstr", span=""];
m25_0 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="36-36"];
m25_1 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerMonitoringApi.cs", label="_connection = connection", span="40-40"];
m25_2 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerMonitoringApi.cs", label="_queueProviders = queueProviders", span="41-41"];
m25_3 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerMonitoringApi.cs", label="_transaction = new TransactionScope(\r\n                TransactionScopeOption.Required,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted })", span="42-44"];
m25_4 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerMonitoringApi.cs", label="_connection.EnlistTransaction(Transaction.Current)", span="46-46"];
m25_5 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="36-36"];
m25_289 [cluster="System.DateTime.AddHours(double)", file="SqlServerMonitoringApi.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m25_16 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="56-56"];
m25_17 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs", label="return GetNumberOfJobsByStateName(ScheduledState.StateName);", span="58-58"];
m25_18 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="56-56"];
m25_212 [cluster="Unk.QueryMultiple", file="SqlServerMonitoringApi.cs", label="Entry Unk.QueryMultiple", span=""];
m25_120 [cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="23-23"];
m25_82 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="167-167"];
m25_83 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SqlServerMonitoringApi.cs", label="return GetJobs(\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.FromStringTimestamp(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                });", span="169-177"];
m25_84 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="167-167"];
m25_229 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="410-410"];
m25_230 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="return GetNumberOfJobsByStateName(DeletedState.StateName);", prediction=260, span="412-412"];
m25_231 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="410-410"];
m25_161 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="287-287"];
m25_162 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="var queueApi = GetQueueApi(queue)", span="289-289"];
m25_164 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="return EnqueuedJobs(enqueuedJobIds);", span="292-292"];
m25_163 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="var enqueuedJobIds = queueApi.GetEnqueuedJobIds(queue, from, perPage)", span="290-290"];
m25_165 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="287-287"];
m25_96 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="190-190"];
m25_97 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var servers = _connection.Query<Entities.Server>(\r\n                @''select * from HangFire.Server'')\r\n                .ToList()", prediction=307, span="192-194"];
m25_98 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="var result = new List<ServerDto>()", span="196-196"];
m25_99 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", color=green, community=0, file="SqlServerMonitoringApi.cs", label=servers, prediction=307, span="198-198"];
m25_101 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="result.Add(new ServerDto\r\n                {\r\n                    Name = server.Id,\r\n                    Heartbeat = server.LastHeartbeat,\r\n                    Queues = data.Queues,\r\n                    StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                    WorkersCount = data.WorkerCount\r\n                })", prediction=309, span="201-208"];
m25_100 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var data = JobHelper.FromJson<ServerData>(server.Data)", prediction=310, span="200-200"];
m25_102 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="return result;", span="211-211"];
m25_103 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="190-190"];
m25_298 [cluster="string.Format(string, object, object)", file="SqlServerMonitoringApi.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m25_139 [cluster="Unk.SelectMany", file="SqlServerMonitoringApi.cs", label="Entry Unk.SelectMany", span=""];
m25_214 [cluster="Unk.ToDictionary", file="SqlServerMonitoringApi.cs", label="Entry Unk.ToDictionary", span=""];
m25_226 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="405-405"];
m25_227 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="return GetNumberOfJobsByStateName(SucceededState.StateName);", prediction=260, span="407-407"];
m25_228 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="405-405"];
m25_69 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="152-152"];
m25_79 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs", label="return null;", span="163-163"];
m25_78 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs", label=JobLoadException, span="161-161"];
m25_75 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs", label="var data = JobHelper.FromJson<InvocationData>(invocationData)", span="154-154"];
m25_76 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs", label="data.Arguments = arguments", span="155-155"];
m25_77 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs", label="return data.Deserialize();", span="159-159"];
m25_80 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="152-152"];
m25_175 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="23-23"];
m25_112 [cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="23-23"];
m25_26 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="25-25"];
m25_38 [cluster="Unk.>", file="SqlServerMonitoringApi.cs", label="Entry Unk.>", span=""];
m25_143 [cluster="Unk.GetEnqueuedJobIds", file="SqlServerMonitoringApi.cs", label="Entry Unk.GetEnqueuedJobIds", span=""];
m25_140 [cluster="Unk.OrderBy", file="SqlServerMonitoringApi.cs", label="Entry Unk.OrderBy", span=""];
m25_144 [cluster="Unk.GetEnqueuedAndFetchedCount", file="SqlServerMonitoringApi.cs", label="Entry Unk.GetEnqueuedAndFetchedCount", span=""];
m25_154 [cluster="Unk.GetQueues", file="SqlServerMonitoringApi.cs", label="Entry Unk.GetQueues", span=""];
m25_92 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="492-492"];
m25_320 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="i < stringDates.Count", span="523-523"];
m25_313 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", prediction=312, span="507-510"];
m25_305 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var endDate = DateTime.UtcNow.Date", prediction=313, span="494-494"];
m25_306 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var startDate = endDate.AddDays(-7)", prediction=313, span="495-495"];
m25_308 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="startDate <= endDate", prediction=313, span="498-498"];
m25_309 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="dates.Add(endDate)", prediction=313, span="500-500"];
m25_310 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="endDate = endDate.AddDays(-1)", prediction=317, span="501-501"];
m25_307 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var dates = new List<DateTime>()", prediction=313, span="496-496"];
m25_311 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", prediction=319, span="504-504"];
m25_322 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="result.Add(dates[i], value)", span="526-526"];
m25_312 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var keys = stringDates.Select(x => String.Format(''stats:{0}:{1}'', type, x)).ToList()", span="505-505"];
m25_314 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var valuesMap = _connection.Query(\r\n                sqlQuery,\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", prediction=320, span="512-515"];
m25_315 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label=keys, prediction=320, span="517-517"];
m25_316 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="!valuesMap.ContainsKey(key)", prediction=320, span="519-519"];
m25_317 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="valuesMap.Add(key, 0)", prediction=320, span="519-519"];
m25_321 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", prediction=324, span="525-525"];
m25_318 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var result = new Dictionary<DateTime, long>()", prediction=325, span="522-522"];
m25_319 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var i = 0", span="523-523"];
m25_324 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="return result;", span="529-529"];
m25_323 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="i++", span="523-523"];
m25_325 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="492-492"];
m25_292 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m25_74 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="22-22"];
m25_122 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="247-247"];
m25_123 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="SqlServerMonitoringApi.cs", label="return GetJobs(\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.FromNullableStringTimestamp(stateData[''DeletedAt''])\r\n                });", span="249-257"];
m25_124 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="247-247"];
m25_20 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="61-61"];
m25_21 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs", label="var queueApi = GetQueueApi(queue)", span="63-63"];
m25_22 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs", label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="64-64"];
m25_23 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs", label="return counters.EnqueuedCount ?? 0;", span="66-66"];
m25_24 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="61-61"];
m25_199 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="365-365"];
m25_200 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs", label="return GetHourlyTimelineStats(''failed'');", span="367-367"];
m25_201 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="365-365"];
m25_166 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="23-23"];
m25_253 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m25_138 [cluster="Unk.Select", file="SqlServerMonitoringApi.cs", label="Entry Unk.Select", span=""];
m25_150 [cluster="Unk.GetJobQueueMonitoringApi", file="SqlServerMonitoringApi.cs", label="Entry Unk.GetJobQueueMonitoringApi", span=""];
m25_225 [cluster="HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21"];
m25_67 [cluster="System.Collections.Generic.List<T>.List(int)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m25_39 [cluster="Unk.Single", file="SqlServerMonitoringApi.cs", label="Entry Unk.Single", span=""];
m25_129 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="260-260"];
m25_130 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", color=green, community=1, file="SqlServerMonitoringApi.cs", label="var tuples = _queueProviders\r\n                .Select(x => x.GetJobQueueMonitoringApi(_connection))\r\n                .SelectMany(x => x.GetQueues(), (monitoring, queue) => new { Monitoring = monitoring, Queue = queue })\r\n                .OrderBy(x => x.Queue)\r\n                .ToArray()", prediction=326, span="262-266"];
m25_131 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length)", prediction=327, span="268-268"];
m25_132 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", color=green, community=0, file="SqlServerMonitoringApi.cs", label=tuples, prediction=326, span="270-270"];
m25_135 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", color=green, community=1, file="SqlServerMonitoringApi.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = tuple.Queue,\r\n                    Length = counters.EnqueuedCount ?? 0,\r\n                    Fetched = counters.FetchedCount,\r\n                    FirstJobs = EnqueuedJobs(enqueuedJobIds)\r\n                })", prediction=329, span="275-281"];
m25_136 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="return result;", prediction=327, span="284-284"];
m25_133 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue, 0, 5)", prediction=331, span="272-272"];
m25_134 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue)", prediction=332, span="273-273"];
m25_137 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="260-260"];
m25_19 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="82-82"];
m25_36 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="SqlServerMonitoringApi.cs", label="return _connection.Query<int>(\r\n                sqlQuery,\r\n                new { state = stateName })\r\n                .Single();", span="87-90"];
m25_35 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="SqlServerMonitoringApi.cs", label="string sqlQuery = @''\r\nselect count(Id) from HangFire.Job where StateName = @state''", span="84-85"];
m25_37 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="82-82"];
m25_213 [cluster="Unk.SingleOrDefault", file="SqlServerMonitoringApi.cs", label="Entry Unk.SingleOrDefault", span=""];
m25_194 [cluster="Unk.DeserializeJob", file="SqlServerMonitoringApi.cs", label="Entry Unk.DeserializeJob", span=""];
m25_345 [file="SqlServerMonitoringApi.cs", label="HangFire.SqlServer.SqlServerMonitoringApi", span=""];
m25_347 [file="SqlServerMonitoringApi.cs", label=string, span=""];
m25_346 [file="SqlServerMonitoringApi.cs", label=countByStates, span=""];
m25_348 [file="SqlServerMonitoringApi.cs", label=string, span=""];
m26_99 [cluster="string.Format(string, object, object, object)", file="SqlServerStorage.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m26_90 [cluster="HangFire.Web.RazorPage.Write(object)", file="SqlServerStorage.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="40-40"];
m26_89 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="SqlServerStorage.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="33-33"];
m26_92 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerStorage.cs", label="Entry HangFire.Web.JobStorage.GetStatistics()", span="493-493"];
m26_0 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Entry HangFire.Web.Pages.LayoutPage.Execute()", span="39-39"];
m26_1 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="SqlServerStorage.cs", label="WriteLiteral(''\r\n'')", prediction=333, span="43-43"];
m26_5 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="SqlServerStorage.cs", label="Write(Request.LinkTo(''/css/styles.css''))", prediction=333, span="65-65"];
m26_7 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(Request.LinkTo(''/''))", span="90-90"];
m26_8 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(@''''''>HangFire Monitor</a>\r\n                    </div>\r\n                    <div class=''''collapse navbar-collapse''''>\r\n                        <ul class=''''nav navbar-nav navbar-right''''>\r\n                            <li>\r\n                                <a href=''''/''''>\r\n                                    <span class=''''glyphicon glyphicon-log-out''''></span>\r\n                                    Back to site\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <!--/.nav-collapse -->\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Begin page content -->\r\n\r\n            <div class=''''container''''>\r\n                <div class=''''col-md-3''''>\r\n'')", span="95-115"];
m26_10 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\r\n                    <div id=\''stats\'' class=\''list-group\''>\r\n                      '' +\r\n''  <a class=\''list-group-item '')", span="125-126"];
m26_2 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="SqlServerStorage.cs", label="WriteLiteral(''<!DOCTYPE html>\r\n\r\n<html lang=\''ru\''>\r\n<head>\r\n    <title>'')", prediction=333, span="49-49"];
m26_4 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="SqlServerStorage.cs", label="WriteLiteral('' - HangFire</title>\r\n    <meta charset=\''utf-8\'' />\r\n    <meta name=\''viewport\'' cont'' +\r\n''ent=\''width=device-width, initial-scale=1.0\''>\r\n    <link rel=\''stylesheet\'' href=\'''')", prediction=333, span="59-60"];
m26_6 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="SqlServerStorage.cs", label="WriteLiteral(@'''''' />\r\n</head>\r\n    <body>\r\n        <!-- Wrap all page content here -->\r\n        <div id=''''wrap''''>\r\n\r\n            <!-- Fixed navbar -->\r\n            <div class=''''navbar navbar-default navbar-static-top''''>\r\n                <div class=''''container''''>\r\n                    <div class=''''navbar-header''''>\r\n                        <button type=''''button'''' class=''''navbar-toggle'''' data-toggle=''''collapse'''' data-target=''''.navbar-collapse''''>\r\n                            <span class=''''icon-bar''''></span>\r\n                            <span class=''''icon-bar''''></span>\r\n                            <span class=''''icon-bar''''></span>\r\n                        </button>\r\n                        <a class=''''navbar-brand'''' href='''''')", prediction=333, span="70-85"];
m26_11 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(Request.PathInfo.Equals(''/'') ? ''active'' : null)", span="131-131"];
m26_95 [cluster="string.IsNullOrEmpty(string)", file="SqlServerStorage.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m26_94 [cluster="Unk.StartsWith", file="SqlServerStorage.cs", label="Entry Unk.StartsWith", span=""];
m26_14 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\''>\r\n                            <span class=\''glyphicon glyphicon-dashboard\''></spa'' +\r\n''n>\r\n                            Dashboard\r\n                        </a>\r\n\r\n     '' +\r\n''                   <a class=\''list-group-item '')", span="146-148"];
m26_17 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="SqlServerStorage.cs", label="Write(Request.LinkTo(''/servers''))", prediction=333, span="163-163"];
m26_16 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\''\r\n                           href=\'''')", span="158-158"];
m26_18 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, file="SqlServerStorage.cs", label="WriteLiteral(''\''>\r\n                            <span class=\''label label-default pull-right\''>'')", prediction=333, span="168-168"];
m26_19 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(statistics.Servers)", span="173-173"];
m26_12 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\''\r\n                           href=\'''')", span="136-136"];
m26_13 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Hangfire.Dashboard.RequestDispatcherContext", span=""];
m26_15 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(Request.PathInfo.Equals(''/servers'') ? ''active'' : null)", span="153-153"];
m26_20 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''</span>\r\n                            <span class=\''glyphicon glyphicon-hdd\''></span'' +\r\n''>\r\n                            Active Servers\r\n                        </a>\r\n\r\n '' +\r\n''                       <a class=\''list-group-item '')", span="178-180"];
m26_21 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(Request.PathInfo.StartsWith(''/queues'') ? ''active'' : null)", span="185-185"];
m26_22 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\'' \r\n                           href=\'''')", span="190-190"];
m26_23 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(Request.LinkTo(''/queues''))", span="195-195"];
m26_24 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\''>\r\n                            <span class=\''label label-default pull-right\''>\r\n  '' +\r\n''                              <span id=\''stats-enqueued\'' title=\''Enqueued jobs cou'' +\r\n''nt\''>\r\n                                    '')", span="200-202"];
m26_25 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(statistics.Enqueued)", span="207-207"];
m26_26 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\r\n                                </span>\r\n                                / \r\n  '' +\r\n''                              <span id=\''stats-queues\'' title=\''Queues count\''>\r\n   '' +\r\n''                                 '')", span="212-214"];
m26_27 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(statistics.Queues)", span="219-219"];
m26_28 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(@''\r\n                                </span>\r\n                            </span>\r\n                            <span class=''''glyphicon glyphicon-inbox''''></span>\r\n                            Jobs & Queues\r\n                        </a>\r\n                        <a class=''''list-group-item stats-indent '')", span="224-230"];
m26_29 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(Request.PathInfo.Equals(''/scheduled'') ? ''active'' : null)", span="235-235"];
m26_30 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\'' \r\n                           href=\'''')", span="240-240"];
m26_31 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(Request.LinkTo(''/scheduled''))", span="245-245"];
m26_32 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\''>\r\n                            <span id=\''stats-scheduled\'' class=\''label label-inf'' +\r\n''o pull-right\''>\r\n                                '')", span="250-251"];
m26_33 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(statistics.Scheduled)", span="256-256"];
m26_34 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\r\n                            </span>\r\n                            Scheduled\r\n   '' +\r\n''                     </a>\r\n                        <a class=\''list-group-item sta'' +\r\n''ts-indent '')", span="261-263"];
m26_35 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(Request.PathInfo.Equals(''/processing'') ? ''active'' : null)", span="268-268"];
m26_36 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\'' \r\n                           href=\'''')", span="273-273"];
m26_37 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(Request.LinkTo(''/processing''))", span="278-278"];
m26_38 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\''>\r\n                            <span id=\''stats-workers\'' class=\''label label-warni'' +\r\n''ng pull-right\''>\r\n                                '')", span="283-284"];
m26_39 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(statistics.Processing)", span="289-289"];
m26_40 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\r\n                            </span>\r\n                            Processing\r\n  '' +\r\n''                      </a>\r\n                        <a class=\''list-group-item st'' +\r\n''ats-indent '')", span="294-296"];
m26_41 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(Request.PathInfo.Equals(''/succeeded'') ? ''active'' : null)", span="301-301"];
m26_42 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\'' \r\n                           href=\'''')", span="306-306"];
m26_43 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(Request.LinkTo(''/succeeded''))", span="311-311"];
m26_44 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\''>\r\n                            <span id=\''stats-succeeded\'' class=\''label label-suc'' +\r\n''cess pull-right\''>\r\n                                '')", span="316-317"];
m26_45 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(statistics.Succeeded)", span="322-322"];
m26_46 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\r\n                            </span>\r\n                            Succeeded\r\n   '' +\r\n''                     </a>\r\n                        <a class=\''list-group-item sta'' +\r\n''ts-indent '')", span="327-329"];
m26_47 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(Request.PathInfo.Equals(''/failed'') ? ''active'' : null)", span="334-334"];
m26_48 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\'' \r\n                           href=\'''')", span="339-339"];
m26_49 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(Request.LinkTo(''/failed''))", span="344-344"];
m26_50 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\''>\r\n                            <span id=\''stats-failed\'' class=\''label label-danger'' +\r\n'' pull-right\''>\r\n                                '')", span="349-350"];
m26_51 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(statistics.Failed)", span="355-355"];
m26_52 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\r\n                            </span>\r\n                            Failed\r\n      '' +\r\n''                  </a>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n'' +\r\n''                <div class=\''col-md-9\''>\r\n'')", span="360-362"];
m26_53 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Breadcrumbs != null", span="367-367"];
m26_54 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''                        <ol class=\''breadcrumb\''>\r\n                            <li>'' +\r\n''<a href=\'''')", span="373-374"];
m26_55 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(Request.LinkTo(''/''))", span="379-379"];
m26_56 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\''><span class=\''glyphicon glyphicon-home\''></span></a></li>\r\n'')", span="384-384"];
m26_57 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label=Breadcrumbs, span="389-389"];
m26_58 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''                                <li><a href=\'''')", span="395-395"];
m26_59 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(breadcrumb.Value)", span="400-400"];
m26_60 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\''>'')", span="405-405"];
m26_61 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(breadcrumb.Key)", span="410-410"];
m26_62 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''</a></li>\r\n'')", span="415-415"];
m26_63 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''                            <li class=\''active\''>'')", span="425-425"];
m26_64 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(BreadcrumbsTitle ?? Title)", span="430-430"];
m26_65 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''</li>\r\n                        </ol>\r\n'')", span="435-435"];
m26_66 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\r\n                    <h1 class=\''page-header\''>\r\n                        '')", span="445-445"];
m26_67 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(Title)", span="450-450"];
m26_68 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\r\n'')", span="455-455"];
m26_69 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="!String.IsNullOrEmpty(Subtitle)", span="460-460"];
m26_70 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''                            <small>'')", span="466-466"];
m26_71 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(Subtitle)", span="471-471"];
m26_72 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''</small>\r\n'')", span="476-476"];
m26_73 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''                    </h1>\r\n                    '')", span="486-486"];
m26_74 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(RenderBody())", span="491-491"];
m26_75 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(@''\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=''''footer''''>\r\n            <div class=''''container''''>\r\n                <ul class=''''list-inline credit''''>\r\n                    <li>\r\n                        <a href=''''http://github.io/odinserj/hangfire'''' target=''''_blank''''>HangFire \r\n                            '')", span="496-506"];
m26_76 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(FileVersionInfo.GetVersionInfo(GetType().Assembly.Location).ProductVersion)", span="511-511"];
m26_77 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\r\n                        </a>\r\n                    </li>\r\n                    <l'' +\r\n''i>\r\n                        '')", span="516-517"];
m26_78 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(String.Format(''redis://{0}:{1}/{2}'', RedisFactory.Host, RedisFactory.Port, RedisFactory.Db))", span="522-522"];
m26_79 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\r\n                    </li>\r\n                    <li>Time: '')", span="527-527"];
m26_80 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(DateTime.UtcNow)", span="532-532"];
m26_81 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral('' UTC\r\n                    </li>\r\n                    <li>Generated in ['')", span="537-537"];
m26_82 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write((DateTime.UtcNow - (DateTime)Context.Items[''GenerationStartedAt'']).Milliseconds)", span="542-542"];
m26_83 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(@'' ms]\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        \r\n        <script>\r\n            (function (hangFire) {\r\n                hangFire.config = {\r\n                    pollInterval: 2000,\r\n                    pollUrl: ''')", span="547-557"];
m26_84 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(Request.LinkTo(''/stats''))", span="562-562"];
m26_85 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\'\r\n                };\r\n            })(window.HangFire = window.HangFire || {});\r\n'' +\r\n''        </script>\r\n        <script src=\'''')", span="567-568"];
m26_86 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Write(Request.LinkTo(''/js/scripts.js''))", span="573-573"];
m26_87 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="WriteLiteral(''\''></script>\r\n    </body>\r\n</html>\r\n'')", span="578-578"];
m26_88 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="SqlServerStorage.cs", label="Exit HangFire.Web.Pages.LayoutPage.Execute()", span="39-39"];
m26_91 [cluster="HttpRequestBase.LinkTo(string)", file="SqlServerStorage.cs", label="Entry HttpRequestBase.LinkTo(string)", span="8-8"];
m26_98 [cluster="System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", file="SqlServerStorage.cs", label="Entry System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", span="0-0"];
m26_96 [cluster="HangFire.Web.RazorPage.RenderBody()", file="SqlServerStorage.cs", label="Entry HangFire.Web.RazorPage.RenderBody()", span="48-48"];
m26_97 [cluster="object.GetType()", file="SqlServerStorage.cs", label="Entry object.GetType()", span="0-0"];
m26_93 [cluster="Unk.Equals", file="SqlServerStorage.cs", label="Entry Unk.Equals", span=""];
m26_100 [cluster="Unk.Write", file="SqlServerStorage.cs", label="Entry Unk.Write", span=""];
m26_101 [file="SqlServerStorage.cs", label="HangFire.Web.Pages.LayoutPage", span=""];
m27_52 [cluster="System.Threading.Thread.Join()", file="StorageFacts.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m27_31 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="StorageFacts.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
m27_16 [cluster="HangFire.Server.SchedulePoller.Dispose()", file="StorageFacts.cs", label="Entry HangFire.Server.SchedulePoller.Dispose()", span="40-40"];
m27_17 [cluster="HangFire.Server.SchedulePoller.Dispose()", file="StorageFacts.cs", label="_redis.Dispose()", span="42-42"];
m27_18 [cluster="HangFire.Server.SchedulePoller.Dispose()", file="StorageFacts.cs", label="Exit HangFire.Server.SchedulePoller.Dispose()", span="40-40"];
m27_36 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="StorageFacts.cs", label="Entry HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="67-67"];
m27_37 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="StorageFacts.cs", label=true, span="71-71"];
m27_38 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="StorageFacts.cs", label="!EnqueueNextScheduledJob()", span="73-73"];
m27_40 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="StorageFacts.cs", label=OperationCanceledException, span="79-79"];
m27_41 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="StorageFacts.cs", label=ThreadInterruptedException, span="82-82"];
m27_42 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="StorageFacts.cs", label=Exception, span="85-85"];
m27_39 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="StorageFacts.cs", label="Thread.Sleep(_pollInterval)", span="75-75"];
m27_43 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="StorageFacts.cs", label="_logger.Fatal(\r\n                    ''Scheduled jobs will not be added to their queues by this server instance: ''\r\n                    + ''unexpected exception caught in the SchedulePoller thread.'',\r\n                    ex)", span="87-90"];
m27_44 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="StorageFacts.cs", label="Exit HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="67-67"];
m27_15 [cluster="Unk.EnqueueScheduledJob", file="StorageFacts.cs", label="Entry Unk.EnqueueScheduledJob", span=""];
m27_27 [cluster="string.Format(string, object)", file="StorageFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m27_20 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="StorageFacts.cs", label="Entry HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", span="45-45"];
m27_21 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="StorageFacts.cs", label="var jobType = _redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="47-47"];
m27_24 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="StorageFacts.cs", label="JobState.Apply(\r\n                    _redis, new EnqueuedState(jobId, ''Enqueued by schedule poller.'', queue),\r\n                    ScheduledState.Name)", span="52-54"];
m27_25 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="StorageFacts.cs", label="JobState.Apply(\r\n                    _redis,\r\n                    new FailedState(jobId, ''Could not enqueue the schedule job.'',\r\n                                    new InvalidOperationException(String.Format(''Could not find type '{0}'.'', jobType))),\r\n                    ScheduledState.Name)", span="58-62"];
m27_22 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="StorageFacts.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="48-48"];
m27_23 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="StorageFacts.cs", label="!String.IsNullOrEmpty(queue)", span="50-50"];
m27_26 [cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="StorageFacts.cs", label="Exit HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", span="45-45"];
m27_11 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="StorageFacts.cs", label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="44-44"];
m27_29 [cluster="Unk.TryToGetQueue", file="StorageFacts.cs", label="Entry Unk.TryToGetQueue", span=""];
m27_33 [cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="StorageFacts.cs", label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10"];
m27_45 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="StorageFacts.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m27_51 [cluster="System.Threading.Thread.Interrupt()", file="StorageFacts.cs", label="Entry System.Threading.Thread.Interrupt()", span="0-0"];
m27_0 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="StorageFacts.cs", label="Entry HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="17-17"];
m27_1 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="StorageFacts.cs", label="_pollInterval = pollInterval", span="19-19"];
m27_2 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="StorageFacts.cs", label="Exit HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="17-17"];
m27_34 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="StorageFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m27_30 [cluster="string.IsNullOrEmpty(string)", file="StorageFacts.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m27_19 [cluster="Unk.Dispose", file="StorageFacts.cs", label="Entry Unk.Dispose", span=""];
m27_47 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="StorageFacts.cs", label="Entry HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="94-94"];
m27_48 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="StorageFacts.cs", label="thread.Interrupt()", span="96-96"];
m27_49 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="StorageFacts.cs", label="thread.Join()", span="97-97"];
m27_50 [cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="StorageFacts.cs", label="Exit HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="94-94"];
m27_46 [cluster="Unk.Fatal", file="StorageFacts.cs", label="Entry Unk.Fatal", span=""];
m27_13 [cluster="Unk.FirstOrDefault", file="StorageFacts.cs", label="Entry Unk.FirstOrDefault", span=""];
m27_32 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="StorageFacts.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m27_28 [cluster="Unk.GetValueFromHash", file="StorageFacts.cs", label="Entry Unk.GetValueFromHash", span=""];
m27_14 [cluster="Unk.IsNullOrEmpty", file="StorageFacts.cs", label="Entry Unk.IsNullOrEmpty", span=""];
m27_35 [cluster="Unk.Format", file="StorageFacts.cs", label="Entry Unk.Format", span=""];
m27_12 [cluster="Unk.GetRangeFromSortedSetByLowestScore", file="StorageFacts.cs", label="Entry Unk.GetRangeFromSortedSetByLowestScore", span=""];
m27_3 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="StorageFacts.cs", label="Entry HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="22-22"];
m27_4 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="StorageFacts.cs", label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="24-24"];
m27_5 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="StorageFacts.cs", label="var jobId = _redis\r\n                .GetRangeFromSortedSetByLowestScore(\r\n                    ''hangfire:schedule'', Double.NegativeInfinity, timestamp, 0, 1)\r\n                .FirstOrDefault()", span="26-29"];
m27_8 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="StorageFacts.cs", label="EnqueueScheduledJob(jobId)", span="36-36"];
m27_9 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="StorageFacts.cs", label="return true;", span="37-37"];
m27_10 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="StorageFacts.cs", label="Exit HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="22-22"];
m27_53 [file="StorageFacts.cs", label="HangFire.Server.SchedulePoller", span=""];
m28_71 [cluster="HangFire.Web.RazorPage.Write(object)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m28_77 [cluster="System.TimeSpan.FromMilliseconds(double)", file="SucceededJobs1.generated.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m28_0 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="SucceededJobs1.generated.cs", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="34-34"];
m28_1 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="SucceededJobs1.generated.cs", label="WorkerCount = Math.Min(Environment.ProcessorCount * 5, MaxDefaultWorkerCount)", prediction=340, span="36-36"];
m28_2 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="SucceededJobs1.generated.cs", label="Queues = new[] { EnqueuedState.DefaultQueue }", prediction=341, span="37-37"];
m28_3 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="SucceededJobs1.generated.cs", label="ShutdownTimeout = BackgroundProcessingServer.DefaultShutdownTimeout", prediction=342, span="38-38"];
m28_4 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="SucceededJobs1.generated.cs", label="SchedulePollingInterval = DelayedJobScheduler.DefaultPollingDelay", prediction=343, span="39-39"];
m28_5 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="SucceededJobs1.generated.cs", label="HeartbeatInterval = ServerHeartbeat.DefaultHeartbeatInterval", prediction=344, span="40-40"];
m28_9 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="SucceededJobs1.generated.cs", label="Activator = JobActivator.Current", prediction=345, span="45-45"];
m28_6 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="SucceededJobs1.generated.cs", label="ServerTimeout = ServerWatchdog.DefaultServerTimeout", prediction=346, span="41-41"];
m28_7 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="SucceededJobs1.generated.cs", label="ServerCheckInterval = ServerWatchdog.DefaultCheckInterval", prediction=347, span="42-42"];
m28_8 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="SucceededJobs1.generated.cs", label="FilterProvider = JobFilterProviders.Providers", prediction=348, span="44-44"];
m28_12 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="SucceededJobs1.generated.cs", label="Entry Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="86-86"];
m28_17 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", color=green, community=0, file="SucceededJobs1.generated.cs", label="logger.InfoFormat(''    Schedule polling interval: {0}.'', SchedulePollingInterval)", prediction=349, span="92-92"];
m28_19 [cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="SucceededJobs1.generated.cs", label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210"];
m28_13 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", color=green, community=0, file="SucceededJobs1.generated.cs", label="logger.InfoFormat(''Using the following options for Hangfire Server:'')", prediction=350, span="88-88"];
m28_14 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", color=green, community=0, file="SucceededJobs1.generated.cs", label="logger.InfoFormat(''    Worker count: {0}.'', WorkerCount)", prediction=349, span="89-89"];
m28_15 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", color=green, community=0, file="SucceededJobs1.generated.cs", label="logger.InfoFormat(''    Listening queues: {0}.'', String.Join('', '', Queues.Select(x => ''''' + x + ''''')))", prediction=349, span="90-90"];
m28_16 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", color=green, community=0, file="SucceededJobs1.generated.cs", label="logger.InfoFormat(''    Shutdown timeout: {0}.'', ShutdownTimeout)", prediction=349, span="91-91"];
m28_23 [cluster="lambda expression", color=green, community=0, file="SucceededJobs1.generated.cs", label="''''' + x + '''''", prediction=354, span="90-90"];
m28_25 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Hangfire.BackgroundJobServerOptions", span=""];
m28_34 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="job.Value != null && !job.Value.InSucceededState", span="253-253"];
m28_37 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="job.Value == null", span="275-275"];
m28_45 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="job.Value.TotalDuration.HasValue", span="324-324"];
m28_52 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="job.Value.SucceededAt.HasValue", span="361-361"];
m28_62 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Exit HangFire.Web.Pages.SucceededJobs.Execute()", span="58-58"];
m28_68 [cluster="HangFire.Storage.IMonitoringApi.SucceededListCount()", file="SucceededJobs1.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.SucceededListCount()", span="44-44"];
m28_67 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m28_65 [cluster="Unk.TryParse", file="SucceededJobs1.generated.cs", label="Entry Unk.TryParse", span=""];
m28_63 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m28_73 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m28_78 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="53-53"];
m28_72 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m28_79 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m28_74 [cluster="Unk.Write", file="SucceededJobs1.generated.cs", label="Entry Unk.Write", span=""];
m28_75 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m28_70 [cluster="HangFire.Storage.IMonitoringApi.SucceededJobs(int, int)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.SucceededJobs(int, int)", span="34-34"];
m28_66 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="SucceededJobs1.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m28_64 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m28_69 [cluster="HttpRequestBase.LinkTo(string)", file="SucceededJobs1.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m28_76 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m28_80 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m28_81 [file="SucceededJobs1.generated.cs", label="HangFire.Web.Pages.SucceededJobs", span=""];
n0 -> n3  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
n8 -> n11  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
n14 -> n17  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
n20 -> n23  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
n23 -> n23  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
n26 -> n29  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
n31 -> n34  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
n34 -> n34  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
n36 -> n39  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
n43 -> n46  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
n49 -> n52  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
n58 -> n62  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
n68 -> n72  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
n84 -> n97  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
n87 -> n103  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m0_32 -> m0_8  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_32 -> m0_19  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_32 -> m0_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_32 -> m0_3  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_32 -> m0_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_32 -> m0_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_32 -> m0_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_32 -> m0_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_32 -> m0_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_32 -> m0_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_32 -> m0_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_32 -> m0_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_32 -> m0_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_9 -> m0_11  [color=darkseagreen4, key=1, label=server, style=dashed];
m0_9 -> m0_13  [color=darkseagreen4, key=1, label=server, style=dashed];
m0_9 -> m0_15  [color=darkseagreen4, key=1, label=server, style=dashed];
m0_9 -> m0_19  [color=green, key=1, label=server, style=dashed];
m0_9 -> m0_21  [color=darkseagreen4, key=1, label=server, style=dashed];
m0_9 -> m0_23  [color=darkseagreen4, key=1, label=server, style=dashed];
m0_9 -> m0_25  [color=darkseagreen4, key=1, label=server, style=dashed];
m0_39 -> m0_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_39 -> m0_3  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_39 -> m0_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_39 -> m0_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_39 -> m0_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_39 -> m0_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_39 -> m0_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_39 -> m0_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_39 -> m0_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_39 -> m0_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_39 -> m0_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_39 -> m0_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_39 -> m0_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_39 -> m0_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_39 -> m0_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_39 -> m0_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m0_39 -> m0_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m1_38 -> m1_68  [color=darkseagreen4, key=1, label=IDbConnection, style=dashed];
m1_38 -> m1_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_38 -> m1_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_64 -> m1_68  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m1_64 -> m1_66  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m1_64 -> m1_67  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m1_69 -> m1_71  [color=darkseagreen4, key=1, label=releaseResult, style=dashed];
m1_4 -> m1_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_4 -> m1_9  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_4 -> m1_11  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m1_4 -> m1_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_4 -> m1_6  [color=darkseagreen4, key=1, label=genericTypeName, style=dashed];
m1_9 -> m1_15  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_9 -> m1_9  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_25 -> m1_48  [color=green, key=1, label=IDbConnection, style=dashed];
m1_25 -> m1_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_25 -> m1_45  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_25 -> m1_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_25 -> m1_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_40 -> m1_48  [color=green, key=1, label=parameters, style=dashed];
m1_40 -> m1_42  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m1_40 -> m1_43  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m1_40 -> m1_44  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m1_40 -> m1_45  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m1_40 -> m1_46  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m1_49 -> m1_51  [color=darkseagreen4, key=1, label=lockResult, style=dashed];
m1_49 -> m1_53  [color=darkseagreen4, key=1, label=lockResult, style=dashed];
m1_45 -> m1_45  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_73 -> m1_15  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m1_73 -> m1_11  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m1_73 -> m1_12  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m1_73 -> m1_14  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m1_73 -> m1_17  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m1_73 -> m1_27  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m1_73 -> m1_30  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m1_73 -> m1_32  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m1_73 -> m1_33  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m1_73 -> m1_35  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m1_73 -> m1_36  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m2_97 -> m2_102  [color=darkseagreen4, key=1, label=client, style=dashed];
m2_98 -> m2_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_58 -> m2_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_137 -> m2_142  [color=darkseagreen4, key=1, label=client, style=dashed];
m2_138 -> m2_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_123 -> m2_134  [color=darkseagreen4, key=1, label=client, style=dashed];
m2_124 -> m2_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_125 -> m2_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_125 -> m2_127  [color=darkseagreen4, key=1, label=exception, style=dashed];
m2_146 -> m2_151  [color=darkseagreen4, key=1, label=client, style=dashed];
m2_147 -> m2_150  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_157 -> m2_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_105 -> m2_110  [color=darkseagreen4, key=1, label=client, style=dashed];
m2_106 -> m2_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_166 -> m2_168  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_172 -> m2_178  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_66 -> m2_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_72 -> m2_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_50 -> m2_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_33 -> m2_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_43 -> m2_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_116 -> m2_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_3 -> m2_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_6 -> m2_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_9 -> m2_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_184 -> m2_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_25  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_39  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_47  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_54  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_66  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_69  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_72  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_75  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_102  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_110  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_115  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_116  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_124  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_134  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_142  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_156  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_157  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_160  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_165  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_166  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_169  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_172  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_179  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_184 -> m2_182  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m2_185 -> m2_102  [color=darkseagreen4, key=1, label=client, style=dashed];
m2_186 -> m2_110  [color=darkseagreen4, key=1, label=client, style=dashed];
m2_187 -> m2_134  [color=darkseagreen4, key=1, label=client, style=dashed];
m2_188 -> m2_142  [color=darkseagreen4, key=1, label=client, style=dashed];
m2_189 -> m2_151  [color=darkseagreen4, key=1, label=client, style=dashed];
m3_150 -> m3_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_63 -> m3_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_64 -> m3_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_6 -> m3_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_7 -> m3_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_141 -> m3_144  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_122 -> m3_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_82 -> m3_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_83 -> m3_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_28 -> m3_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_29 -> m3_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_53 -> m3_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_72 -> m3_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_92 -> m3_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_111 -> m3_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_132 -> m3_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_44 -> m3_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_45 -> m3_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_102 -> m3_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_103 -> m3_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_171 -> m3_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_14  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_7  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_27  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_29  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_43  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_44  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_50  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_45  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_62  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_63  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_69  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_64  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_81  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_82  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_89  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_83  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_101  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_102  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_108  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_103  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_120  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_122  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_130  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_132  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_139  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_141  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_148  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_150  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m3_171 -> m3_168  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobFacts", style=dashed];
m4_33 -> m4_36  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action>", style=dashed];
m4_56 -> m4_59  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m4_49 -> m4_89  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression", style=dashed];
m4_3 -> m4_18  [color=darkseagreen4, key=1, label=succeeded, style=dashed];
m4_3 -> m4_20  [color=darkseagreen4, key=1, label=succeeded, style=dashed];
m4_4 -> m4_18  [color=darkseagreen4, key=1, label=failed, style=dashed];
m4_4 -> m4_22  [color=darkseagreen4, key=1, label=failed, style=dashed];
m4_5 -> m4_14  [color=darkseagreen4, key=1, label=period, style=dashed];
m4_5 -> m4_16  [color=darkseagreen4, key=1, label=period, style=dashed];
m4_19 -> m4_63  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m4_19 -> m4_65  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m4_19 -> m4_67  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_19 -> m4_68  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_19 -> m4_69  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m4_19 -> m4_72  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_19 -> m4_73  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_71 -> m4_74  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m4_74 -> m4_77  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m4_36 -> m4_46  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m4_36 -> m4_40  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m4_36 -> m4_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m4_36 -> m4_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m4_36 -> m4_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m4_36 -> m4_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m4_36 -> m4_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m4_36 -> m4_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m4_36 -> m4_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m4_36 -> m4_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m4_36 -> m4_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m4_36 -> m4_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m4_36 -> m4_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DashboardPage", style=dashed];
m4_92 -> m4_14  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m4_92 -> m4_15  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m4_92 -> m4_16  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m4_92 -> m4_21  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m4_92 -> m4_26  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m5_9 -> m5_12  [color=green, key=1, label=pager, style=dashed];
m5_9 -> m5_54  [color=green, key=1, label=pager, style=dashed];
m5_10 -> m5_19  [color=green, key=1, label=jobs, style=dashed];
m5_19 -> m5_21  [color=green, key=1, label=job, style=dashed];
m5_21 -> m5_21  [color=green, key=1, label=job, style=dashed];
m5_21 -> m5_23  [color=green, key=1, label=job, style=dashed];
m5_23 -> m5_23  [color=green, key=1, label=job, style=dashed];
m5_23 -> m5_25  [color=green, key=1, label=job, style=dashed];
m5_25 -> m5_25  [color=green, key=1, label=job, style=dashed];
m5_25 -> m5_30  [color=green, key=1, label=job, style=dashed];
m5_30 -> m5_30  [color=green, key=1, label=job, style=dashed];
m5_30 -> m5_32  [color=green, key=1, label=job, style=dashed];
m5_32 -> m5_32  [color=green, key=1, label=job, style=dashed];
m5_32 -> m5_34  [color=green, key=1, label=job, style=dashed];
m5_34 -> m5_34  [color=green, key=1, label=job, style=dashed];
m5_34 -> m5_37  [color=green, key=1, label=job, style=dashed];
m5_37 -> m5_37  [color=green, key=1, label=job, style=dashed];
m5_42 -> m5_42  [color=green, key=1, label=job, style=dashed];
m5_42 -> m5_45  [color=green, key=1, label=job, style=dashed];
m5_45 -> m5_45  [color=green, key=1, label=job, style=dashed];
m5_45 -> m5_47  [color=green, key=1, label=job, style=dashed];
m5_47 -> m5_47  [color=green, key=1, label=job, style=dashed];
m5_72 -> m5_1  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_54  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_14  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_15  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_16  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_18  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_20  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_53  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_21  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_22  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_23  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_26  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_29  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_30  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_31  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_32  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_35  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_41  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_42  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_43  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_46  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_47  [color=green, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_72 -> m5_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m5_77 -> m5_31  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_77 -> m5_35  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_77 -> m5_58  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m8_8 -> m8_10  [color=green, key=1, label=monitor, style=dashed];
m8_10 -> m8_21  [color=green, key=1, label=fetchedJobs, style=dashed];
m8_21 -> m8_23  [color=green, key=1, label=job, style=dashed];
m8_23 -> m8_23  [color=green, key=1, label=job, style=dashed];
m8_23 -> m8_25  [color=green, key=1, label=job, style=dashed];
m8_25 -> m8_25  [color=green, key=1, label=job, style=dashed];
m8_25 -> m8_27  [color=green, key=1, label=job, style=dashed];
m8_27 -> m8_27  [color=green, key=1, label=job, style=dashed];
m8_27 -> m8_29  [color=green, key=1, label=job, style=dashed];
m8_29 -> m8_29  [color=green, key=1, label=job, style=dashed];
m8_29 -> m8_31  [color=green, key=1, label=job, style=dashed];
m8_31 -> m8_31  [color=green, key=1, label=job, style=dashed];
m8_31 -> m8_33  [color=green, key=1, label=job, style=dashed];
m8_33 -> m8_33  [color=green, key=1, label=job, style=dashed];
m8_33 -> m8_35  [color=green, key=1, label=job, style=dashed];
m8_35 -> m8_35  [color=green, key=1, label=job, style=dashed];
m8_35 -> m8_37  [color=green, key=1, label=job, style=dashed];
m8_37 -> m8_37  [color=green, key=1, label=job, style=dashed];
m8_37 -> m8_39  [color=green, key=1, label=job, style=dashed];
m8_39 -> m8_39  [color=green, key=1, label=job, style=dashed];
m8_39 -> m8_41  [color=green, key=1, label=job, style=dashed];
m8_41 -> m8_41  [color=green, key=1, label=job, style=dashed];
m8_67 -> m8_1  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_10  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_45  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_14  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_16  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_18  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_20  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_22  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_44  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_23  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_24  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_25  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_26  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_27  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_28  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_29  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_30  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_31  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_32  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_33  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_34  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_35  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_36  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_38  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_39  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_40  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_41  [color=green, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m8_67 -> m8_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FetchedJobsPage", style=dashed];
m10_0 -> m10_4  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m10_0 -> m10_8  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m10_15 -> m10_25  [color=darkseagreen4, key=1, label="System.Reflection.Assembly", style=dashed];
m12_4 -> m12_7  [color=darkseagreen4, key=1, label=serialized, style=dashed];
m12_21 -> m12_26  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m12_15 -> m12_7  [color=darkseagreen4, key=1, label="HangFire.Web.JsonStats", style=dashed];
m13_15 -> m13_2  [color=darkseagreen4, key=1, label="HangFire.JobFetcher", style=dashed];
m13_15 -> m13_7  [color=darkseagreen4, key=1, label="HangFire.JobFetcher", style=dashed];
m13_15 -> m13_11  [color=darkseagreen4, key=1, label="HangFire.JobFetcher", style=dashed];
m13_15 -> m13_12  [color=darkseagreen4, key=1, label="HangFire.JobFetcher", style=dashed];
m14_17 -> m14_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_27 -> m14_16  [color=darkseagreen4, key=1, label="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts", style=dashed];
m16_0 -> m16_3  [color=green, key=1, label=string, style=dashed];
m16_12 -> m16_12  [color=green, key=1, label="System.Threading.CancellationToken", style=dashed];
m17_49 -> m17_51  [color=darkseagreen4, key=1, label=table1, style=dashed];
m17_49 -> m17_52  [color=darkseagreen4, key=1, label=table1, style=dashed];
m17_76 -> m17_38  [color=darkseagreen4, key=1, label="HangFire.Tests.States.ProcessingStateFeature", style=dashed];
m17_76 -> m17_39  [color=darkseagreen4, key=1, label="HangFire.Tests.States.ProcessingStateFeature", style=dashed];
m17_76 -> m17_41  [color=darkseagreen4, key=1, label="HangFire.Tests.States.ProcessingStateFeature", style=dashed];
m17_76 -> m17_47  [color=darkseagreen4, key=1, label="HangFire.Tests.States.ProcessingStateFeature", style=dashed];
m17_76 -> m17_48  [color=darkseagreen4, key=1, label="HangFire.Tests.States.ProcessingStateFeature", style=dashed];
m17_76 -> m17_53  [color=darkseagreen4, key=1, label="HangFire.Tests.States.ProcessingStateFeature", style=dashed];
m17_76 -> m17_59  [color=darkseagreen4, key=1, label="HangFire.Tests.States.ProcessingStateFeature", style=dashed];
m17_76 -> m17_60  [color=darkseagreen4, key=1, label="HangFire.Tests.States.ProcessingStateFeature", style=dashed];
m17_76 -> m17_64  [color=darkseagreen4, key=1, label="HangFire.Tests.States.ProcessingStateFeature", style=dashed];
m17_76 -> m17_69  [color=darkseagreen4, key=1, label="HangFire.Tests.States.ProcessingStateFeature", style=dashed];
m17_76 -> m17_70  [color=darkseagreen4, key=1, label="HangFire.Tests.States.ProcessingStateFeature", style=dashed];
m17_76 -> m17_74  [color=darkseagreen4, key=1, label="HangFire.Tests.States.ProcessingStateFeature", style=dashed];
m18_249 -> m18_260  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m18_274 -> m18_334  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_274 -> m18_352  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_329 -> m18_333  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_328 -> m18_338  [color=darkseagreen4, key=1, label=dates, style=dashed];
m18_328 -> m18_334  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m18_328 -> m18_331  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m18_328 -> m18_342  [color=darkseagreen4, key=1, label=dates, style=dashed];
m18_328 -> m18_333  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m18_336 -> m18_342  [color=darkseagreen4, key=1, label=result, style=dashed];
m18_336 -> m18_344  [color=darkseagreen4, key=1, label=result, style=dashed];
m18_330 -> m18_339  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_330 -> m18_342  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_330 -> m18_343  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_330 -> m18_333  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_330 -> m18_347  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_330 -> m18_350  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_330 -> m18_351  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_333 -> m18_333  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_333 -> m18_346  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_333 -> m18_349  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_337 -> m18_340  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_337 -> m18_342  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_337 -> m18_343  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_343 -> m18_343  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_327 -> m18_331  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m18_327 -> m18_332  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m18_327 -> m18_333  [color=darkseagreen4, key=1, label=states, style=dashed];
m18_327 -> m18_350  [color=darkseagreen4, key=1, label=states, style=dashed];
m18_327 -> m18_351  [color=darkseagreen4, key=1, label=states, style=dashed];
m18_331 -> m18_338  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_331 -> m18_341  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_332 -> m18_332  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m18_341 -> m18_343  [color=darkseagreen4, key=1, label="?", style=dashed];
m18_122 -> m18_363  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_122 -> m18_364  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m18_362 -> m18_289  [color=green, key=1, label=IRedisClient, style=dashed];
m18_358 -> m18_362  [color=darkseagreen4, key=1, label=dates, style=dashed];
m18_358 -> m18_360  [color=darkseagreen4, key=1, label=dates, style=dashed];
m18_356 -> m18_359  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m18_356 -> m18_360  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m18_356 -> m18_361  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m18_364 -> m18_369  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m18_361 -> m18_361  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m18_259 -> m18_262  [color=green, key=1, label=IRedisClient, style=dashed];
m18_133 -> m18_139  [color=green, key=1, label=serverNames, style=dashed];
m18_133 -> m18_144  [color=green, key=1, label=serverNames, style=dashed];
m18_51 -> m18_116  [color=green, key=1, label="lambda expression", style=dashed];
m18_51 -> m18_119  [color=green, key=1, label="lambda expression", style=dashed];
m18_48 -> m18_70  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m18_52 -> m18_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_52 -> m18_78  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_275 -> m18_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_276 -> m18_278  [color=green, key=1, label="lambda expression", style=dashed];
m18_277 -> m18_282  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m18_214 -> m18_218  [color=green, key=1, label=length, style=dashed];
m18_214 -> m18_409  [color=green, key=1, label="lambda expression", style=dashed];
m18_214 -> m18_412  [color=green, key=1, label="lambda expression", style=dashed];
m18_386 -> m18_394  [color=green, key=1, label="string[]", style=dashed];
m18_386 -> m18_390  [color=green, key=1, label="string[]", style=dashed];
m18_386 -> m18_399  [color=green, key=1, label="string[]", style=dashed];
m18_433 -> m18_70  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m18_433 -> m18_100  [color=green, key=1, label=jobs, style=dashed];
m18_434 -> m18_436  [color=green, key=1, label="lambda expression", style=dashed];
m18_434 -> m18_78  [color=darkseagreen4, key=1, label=states, style=dashed];
m18_435 -> m18_151  [color=green, key=1, label=name, style=dashed];
m18_435 -> m18_154  [color=green, key=1, label=name, style=dashed];
m18_22 -> m18_26  [color=green, key=1, label=string, style=dashed];
m18_23 -> m18_64  [color=green, key=1, label="lambda expression", style=dashed];
m18_29 -> m18_73  [color=green, key=1, label="lambda expression", style=dashed];
m18_76 -> m18_81  [color=green, key=1, label=states, style=dashed];
m18_281 -> m18_289  [color=green, key=1, label=string, style=dashed];
m18_282 -> m18_362  [color=green, key=1, label="lambda expression", style=dashed];
m18_173 -> m18_326  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m18_173 -> m18_329  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m18_173 -> m18_331  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m18_173 -> m18_339  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m18_173 -> m18_332  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m18_173 -> m18_333  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m18_173 -> m18_347  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m18_326 -> m18_331  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m18_326 -> m18_342  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m18_326 -> m18_343  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m18_11 -> m18_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_14 -> m18_18  [color=green, key=1, label=string, style=dashed];
m18_269 -> m18_273  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m18_269 -> m18_338  [color=green, key=1, label="lambda expression", style=dashed];
m18_270 -> m18_273  [color=darkseagreen4, key=1, label=dates, style=dashed];
m18_270 -> m18_280  [color=darkseagreen4, key=1, label=dates, style=dashed];
m18_270 -> m18_284  [color=darkseagreen4, key=1, label=dates, style=dashed];
m18_271 -> m18_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_278 -> m18_284  [color=darkseagreen4, key=1, label=result, style=dashed];
m18_278 -> m18_286  [color=darkseagreen4, key=1, label=result, style=dashed];
m18_279 -> m18_282  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_279 -> m18_284  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_285 -> m18_301  [color=green, key=1, label=job, style=dashed];
m18_285 -> m18_302  [color=green, key=1, label=job, style=dashed];
m18_307 -> m18_313  [color=darkseagreen4, key=1, label=result, style=dashed];
m18_307 -> m18_315  [color=darkseagreen4, key=1, label=result, style=dashed];
m18_192 -> m18_394  [color=green, key=1, label="lambda expression", style=dashed];
m18_222 -> m18_394  [color=green, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m18_222 -> m18_419  [color=green, key=1, label="System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m18_222 -> m18_384  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m18_222 -> m18_385  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m18_222 -> m18_387  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m18_222 -> m18_391  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m18_222 -> m18_409  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m18_394 -> m18_415  [color=green, key=1, label="lambda expression", style=dashed];
m18_394 -> m18_418  [color=green, key=1, label="lambda expression", style=dashed];
m18_384 -> m18_394  [color=green, key=1, label=jobs, style=dashed];
m18_384 -> m18_390  [color=green, key=1, label=jobs, style=dashed];
m18_384 -> m18_342  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m18_384 -> m18_343  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m18_385 -> m18_394  [color=green, key=1, label=states, style=dashed];
m18_385 -> m18_350  [color=darkseagreen4, key=1, label=states, style=dashed];
m18_385 -> m18_351  [color=darkseagreen4, key=1, label=states, style=dashed];
m18_390 -> m18_349  [color=green, key=1, label="lambda expression", style=dashed];
m18_390 -> m18_403  [color=green, key=1, label="lambda expression", style=dashed];
m18_387 -> m18_390  [color=green, key=1, label=pipeline, style=dashed];
m18_387 -> m18_393  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m18_389 -> m18_399  [color=green, key=1, label=id, style=dashed];
m18_389 -> m18_342  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_389 -> m18_343  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_389 -> m18_409  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_389 -> m18_350  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_389 -> m18_351  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_391 -> m18_171  [color=green, key=1, label=IRedisClient, style=dashed];
m18_9 -> m18_513  [color=green, key=1, label="System.Func<IRedisClient, T>", style=dashed];
m18_0 -> m18_3  [color=green, key=1, label=PooledRedisClientManager, style=dashed];
m18_411 -> m18_351  [color=darkseagreen4, key=1, label="?", style=dashed];
m18_65 -> m18_65  [color=green, key=1, label="System.Collections.Generic.KeyValuePair<string, HangFire.Storage.Monitoring.ProcessingJobDto>", style=dashed];
m18_77 -> m18_80  [color=green, key=1, label=pipeline, style=dashed];
m18_77 -> m18_81  [color=green, key=1, label=pipeline, style=dashed];
m18_77 -> m18_82  [color=green, key=1, label=pipeline, style=dashed];
m18_80 -> m18_126  [color=green, key=1, label="lambda expression", style=dashed];
m18_80 -> m18_129  [color=green, key=1, label="lambda expression", style=dashed];
m18_75 -> m18_80  [color=green, key=1, label=jobs, style=dashed];
m18_75 -> m18_100  [color=green, key=1, label=jobs, style=dashed];
m18_79 -> m18_100  [color=green, key=1, label=job, style=dashed];
m18_79 -> m18_81  [color=green, key=1, label=job, style=dashed];
m18_79 -> m18_95  [color=green, key=1, label=job, style=dashed];
m18_81 -> m18_141  [color=green, key=1, label="lambda expression", style=dashed];
m18_81 -> m18_151  [color=green, key=1, label="lambda expression", style=dashed];
m18_130 -> m18_194  [color=green, key=1, label="lambda expression", style=dashed];
m18_124 -> m18_188  [color=green, key=1, label="lambda expression", style=dashed];
m18_142 -> m18_353  [color=green, key=1, label="lambda expression", style=dashed];
m18_142 -> m18_356  [color=green, key=1, label="lambda expression", style=dashed];
m18_183 -> m18_185  [color=green, key=1, label="lambda expression", style=dashed];
m18_179 -> m18_318  [color=green, key=1, label="lambda expression", style=dashed];
m18_196 -> m18_397  [color=green, key=1, label="lambda expression", style=dashed];
m18_203 -> m18_400  [color=green, key=1, label="lambda expression", style=dashed];
m18_212 -> m18_215  [color=green, key=1, label=pipeline, style=dashed];
m18_212 -> m18_216  [color=green, key=1, label=pipeline, style=dashed];
m18_213 -> m18_217  [color=green, key=1, label=firstJobIds, style=dashed];
m18_213 -> m18_403  [color=green, key=1, label="lambda expression", style=dashed];
m18_213 -> m18_406  [color=green, key=1, label="lambda expression", style=dashed];
m18_349 -> m18_351  [color=darkseagreen4, key=1, label="?", style=dashed];
m18_400 -> m18_217  [color=green, key=1, label=IRedisClient, style=dashed];
m18_403 -> m18_343  [color=darkseagreen4, key=1, label="?", style=dashed];
m18_72 -> m18_78  [color=green, key=1, label=scheduledJobs, style=dashed];
m18_144 -> m18_387  [color=green, key=1, label="lambda expression", style=dashed];
m18_136 -> m18_144  [color=green, key=1, label=servers, style=dashed];
m18_136 -> m18_141  [color=green, key=1, label=servers, style=dashed];
m18_136 -> m18_151  [color=green, key=1, label=servers, style=dashed];
m18_140 -> m18_151  [color=green, key=1, label=name, style=dashed];
m18_140 -> m18_142  [color=green, key=1, label=name, style=dashed];
m18_140 -> m18_154  [color=green, key=1, label=name, style=dashed];
m18_171 -> m18_69  [color=green, key=1, label="lambda expression", style=dashed];
m18_215 -> m18_218  [color=green, key=1, label=fetched, style=dashed];
m18_215 -> m18_420  [color=green, key=1, label="lambda expression", style=dashed];
m18_217 -> m18_423  [color=green, key=1, label="lambda expression", style=dashed];
m18_252 -> m18_429  [color=green, key=1, label="lambda expression", style=dashed];
m18_252 -> m18_259  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_252 -> m18_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_252 -> m18_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_262 -> m18_263  [color=green, key=1, label="lambda expression", style=dashed];
m18_300 -> m18_313  [color=darkseagreen4, key=1, label=dates, style=dashed];
m18_304 -> m18_317  [color=green, key=1, label="lambda expression", style=dashed];
m18_304 -> m18_321  [color=green, key=1, label="lambda expression", style=dashed];
m18_304 -> m18_324  [color=green, key=1, label="lambda expression", style=dashed];
m18_304 -> m18_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_304 -> m18_309  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m18_288 -> m18_318  [color=green, key=1, label=hiddenProperties, style=dashed];
m18_290 -> m18_292  [color=green, key=1, label=history, style=dashed];
m18_299 -> m18_301  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m18_298 -> m18_301  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m18_298 -> m18_302  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m18_432 -> m18_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_432 -> m18_78  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_432 -> m18_100  [color=green, key=1, label=job, style=dashed];
m18_432 -> m18_95  [color=green, key=1, label=job, style=dashed];
m18_436 -> m18_438  [color=green, key=1, label=IRedisClient, style=dashed];
m18_436 -> m18_439  [color=green, key=1, label=IRedisClient, style=dashed];
m18_436 -> m18_151  [color=green, key=1, label=servers, style=dashed];
m18_437 -> m18_440  [color=green, key=1, label=stats, style=dashed];
m18_437 -> m18_441  [color=green, key=1, label=stats, style=dashed];
m18_437 -> m18_442  [color=green, key=1, label=stats, style=dashed];
m18_437 -> m18_443  [color=green, key=1, label=stats, style=dashed];
m18_437 -> m18_444  [color=green, key=1, label=stats, style=dashed];
m18_437 -> m18_445  [color=green, key=1, label=stats, style=dashed];
m18_437 -> m18_446  [color=green, key=1, label=stats, style=dashed];
m18_437 -> m18_447  [color=green, key=1, label=stats, style=dashed];
m18_437 -> m18_452  [color=green, key=1, label=stats, style=dashed];
m18_438 -> m18_448  [color=green, key=1, label=queues, style=dashed];
m18_438 -> m18_177  [color=darkseagreen4, key=1, label=queue, style=dashed];
m18_438 -> m18_232  [color=green, key=1, label=queue, style=dashed];
m18_438 -> m18_238  [color=green, key=1, label=queue, style=dashed];
m18_440 -> m18_455  [color=green, key=1, label="lambda expression", style=dashed];
m18_440 -> m18_459  [color=green, key=1, label="lambda expression", style=dashed];
m18_440 -> m18_18  [color=green, key=1, label=string, style=dashed];
m18_441 -> m18_462  [color=green, key=1, label="lambda expression", style=dashed];
m18_441 -> m18_465  [color=green, key=1, label="lambda expression", style=dashed];
m18_441 -> m18_322  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_441 -> m18_26  [color=green, key=1, label=string, style=dashed];
m18_442 -> m18_468  [color=green, key=1, label="lambda expression", style=dashed];
m18_442 -> m18_471  [color=green, key=1, label="lambda expression", style=dashed];
m18_442 -> m18_339  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m18_443 -> m18_474  [color=green, key=1, label="lambda expression", style=dashed];
m18_443 -> m18_477  [color=green, key=1, label="lambda expression", style=dashed];
m18_443 -> m18_339  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_443 -> m18_342  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_443 -> m18_343  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_443 -> m18_347  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_443 -> m18_350  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_443 -> m18_351  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_444 -> m18_480  [color=green, key=1, label="lambda expression", style=dashed];
m18_444 -> m18_484  [color=green, key=1, label="lambda expression", style=dashed];
m18_444 -> m18_342  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m18_444 -> m18_343  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m18_445 -> m18_488  [color=green, key=1, label="lambda expression", style=dashed];
m18_445 -> m18_491  [color=green, key=1, label="lambda expression", style=dashed];
m18_445 -> m18_347  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m18_445 -> m18_409  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m18_446 -> m18_494  [color=green, key=1, label="lambda expression", style=dashed];
m18_446 -> m18_497  [color=green, key=1, label="lambda expression", style=dashed];
m18_446 -> m18_350  [color=darkseagreen4, key=1, label=states, style=dashed];
m18_446 -> m18_351  [color=darkseagreen4, key=1, label=states, style=dashed];
m18_447 -> m18_500  [color=green, key=1, label="lambda expression", style=dashed];
m18_447 -> m18_503  [color=green, key=1, label="lambda expression", style=dashed];
m18_450 -> m18_506  [color=green, key=1, label="lambda expression", style=dashed];
m18_450 -> m18_509  [color=green, key=1, label="lambda expression", style=dashed];
m18_439 -> m18_441  [color=green, key=1, label=pipeline, style=dashed];
m18_439 -> m18_442  [color=green, key=1, label=pipeline, style=dashed];
m18_439 -> m18_443  [color=green, key=1, label=pipeline, style=dashed];
m18_439 -> m18_444  [color=green, key=1, label=pipeline, style=dashed];
m18_439 -> m18_445  [color=green, key=1, label=pipeline, style=dashed];
m18_439 -> m18_446  [color=green, key=1, label=pipeline, style=dashed];
m18_439 -> m18_447  [color=green, key=1, label=pipeline, style=dashed];
m18_439 -> m18_451  [color=green, key=1, label=pipeline, style=dashed];
m18_439 -> m18_260  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m18_439 -> m18_318  [color=green, key=1, label=hiddenProperties, style=dashed];
m18_449 -> m18_507  [color=green, key=1, label=queueName, style=dashed];
m18_67 -> m18_72  [color=green, key=1, label=int, style=dashed];
m18_35 -> m18_80  [color=green, key=1, label="lambda expression", style=dashed];
m18_167 -> m18_391  [color=green, key=1, label="lambda expression", style=dashed];
m18_99 -> m18_105  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m18_92 -> m18_322  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_305 -> m18_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_306 -> m18_311  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m18_308 -> m18_311  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_308 -> m18_313  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_308 -> m18_314  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_314 -> m18_314  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_15 -> m18_40  [color=green, key=1, label="lambda expression", style=dashed];
m18_5 -> m18_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_7 -> m18_32  [color=green, key=1, label="lambda expression", style=dashed];
m18_68 -> m18_122  [color=green, key=1, label="lambda expression", style=dashed];
m18_523 -> m18_3  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m18_523 -> m18_7  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m18_523 -> m18_15  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m18_523 -> m18_23  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m18_523 -> m18_29  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m18_523 -> m18_35  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m18_523 -> m18_41  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m18_523 -> m18_68  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m18_523 -> m18_117  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m18_523 -> m18_120  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m18_523 -> m18_124  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m18_523 -> m18_127  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m18_523 -> m18_167  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m18_523 -> m18_171  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m18_523 -> m18_217  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m18_523 -> m18_258  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m18_523 -> m18_262  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m18_523 -> m18_269  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m18_523 -> m18_272  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m18_523 -> m18_279  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m18_523 -> m18_282  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m18_523 -> m18_428  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m18_523 -> m18_434  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m18_528 -> m18_72  [color=green, key=1, label=int, style=dashed];
m18_529 -> m18_72  [color=green, key=1, label=int, style=dashed];
m18_536 -> m18_170  [color=green, key=1, label=int, style=dashed];
m18_537 -> m18_170  [color=green, key=1, label=int, style=dashed];
m18_549 -> m18_289  [color=green, key=1, label=string, style=dashed];
m18_558 -> m18_419  [color=green, key=1, label="System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m18_553 -> m18_399  [color=green, key=1, label="string[]", style=dashed];
m18_554 -> m18_399  [color=green, key=1, label=id, style=dashed];
m18_554 -> m18_342  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_554 -> m18_343  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_554 -> m18_409  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_554 -> m18_350  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_554 -> m18_351  [color=darkseagreen4, key=1, label=id, style=dashed];
m18_551 -> m18_352  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_52 -> m19_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_42 -> m19_44  [color=darkseagreen4, key=1, label=ILog, style=dashed];
m19_6 -> m19_9  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorageOptions", style=dashed];
m19_57 -> m19_25  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m19_57 -> m19_29  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m19_57 -> m19_44  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m19_57 -> m19_49  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m23_25 -> m23_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_35 -> m23_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_85 -> m23_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_19 -> m23_27  [color=darkseagreen4, key=1, label=long, style=dashed];
m23_42 -> m23_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_102 -> m23_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_111 -> m23_117  [color=green, key=1, label="lambda expression", style=dashed];
m23_110 -> m23_118  [color=green, key=1, label=server, style=dashed];
m23_112 -> m23_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_109 -> m23_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_71 -> m23_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_72 -> m23_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_50 -> m23_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_33 -> m23_9  [color=darkseagreen4, key=1, label="HangFire.AutomaticRetryAttribute", style=dashed];
m23_33 -> m23_13  [color=darkseagreen4, key=1, label="HangFire.AutomaticRetryAttribute", style=dashed];
m23_33 -> m23_14  [color=darkseagreen4, key=1, label="HangFire.AutomaticRetryAttribute", style=dashed];
m23_33 -> m23_15  [color=darkseagreen4, key=1, label="HangFire.AutomaticRetryAttribute", style=dashed];
m23_5 -> m23_14  [color=darkseagreen4, key=1, label=failedState, style=dashed];
m23_5 -> m23_16  [color=darkseagreen4, key=1, label=failedState, style=dashed];
m23_7 -> m23_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_4 -> m23_11  [color=darkseagreen4, key=1, label="HangFire.States.ElectStateContext", style=dashed];
m23_4 -> m23_14  [color=darkseagreen4, key=1, label="HangFire.States.ElectStateContext", style=dashed];
m23_4 -> m23_16  [color=darkseagreen4, key=1, label="HangFire.States.ElectStateContext", style=dashed];
m23_8 -> m23_10  [color=darkseagreen4, key=1, label=retryAttempt, style=dashed];
m23_8 -> m23_11  [color=darkseagreen4, key=1, label=retryAttempt, style=dashed];
m23_8 -> m23_14  [color=darkseagreen4, key=1, label=retryAttempt, style=dashed];
m23_10 -> m23_14  [color=darkseagreen4, key=1, label=delay, style=dashed];
m23_59 -> m23_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_94 -> m23_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_125 -> m23_6  [color=green, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_58  [color=green, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_70  [color=green, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_84  [color=green, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_93  [color=green, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_101  [color=green, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_111  [color=green, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_118  [color=green, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_18  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_7  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_31  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_39  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_46  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_54  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_59  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_65  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_71  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_72  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_85  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_94  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_102  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_109  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_112  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_125 -> m23_123  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m23_126 -> m23_118  [color=green, key=1, label=server, style=dashed];
m25_184 -> m25_186  [color=green, key=1, label=jobs, style=dashed];
m25_185 -> m25_188  [color=green, key=1, label=result, style=dashed];
m25_233 -> m25_247  [color=green, key=1, label=stats, style=dashed];
m25_246 -> m25_264  [color=green, key=1, label="lambda expression", style=dashed];
m25_236 -> m25_254  [color=green, key=1, label="lambda expression", style=dashed];
m25_236 -> m25_257  [color=green, key=1, label="lambda expression", style=dashed];
m25_236 -> m25_261  [color=green, key=1, label=countByStates, style=dashed];
m25_237 -> m25_261  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_198 -> m25_295  [color=green, key=1, label=string, style=dashed];
m25_268 -> m25_272  [color=green, key=1, label=endDate, style=dashed];
m25_269 -> m25_272  [color=darkseagreen4, key=1, label=dates, style=dashed];
m25_269 -> m25_283  [color=darkseagreen4, key=1, label=dates, style=dashed];
m25_269 -> m25_285  [color=darkseagreen4, key=1, label=dates, style=dashed];
m25_275 -> m25_294  [color=green, key=1, label="lambda expression", style=dashed];
m25_275 -> m25_278  [color=green, key=1, label=keys, style=dashed];
m25_277 -> m25_299  [color=green, key=1, label="lambda expression", style=dashed];
m25_277 -> m25_302  [color=green, key=1, label="lambda expression", style=dashed];
m25_277 -> m25_279  [color=green, key=1, label=valuesMap, style=dashed];
m25_277 -> m25_280  [color=green, key=1, label=valuesMap, style=dashed];
m25_278 -> m25_280  [color=green, key=1, label=key, style=dashed];
m25_274 -> m25_274  [color=green, key=1, label=i, style=dashed];
m25_270 -> m25_274  [color=green, key=1, label=i, style=dashed];
m25_281 -> m25_285  [color=green, key=1, label=result, style=dashed];
m25_281 -> m25_287  [color=green, key=1, label=result, style=dashed];
m25_282 -> m25_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_282 -> m25_286  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_286 -> m25_286  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_208 -> m25_216  [color=green, key=1, label="lambda expression", style=dashed];
m25_208 -> m25_219  [color=green, key=1, label="lambda expression", style=dashed];
m25_209 -> m25_222  [color=green, key=1, label="lambda expression", style=dashed];
m25_115 -> m25_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_107 -> m25_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_59 -> m25_61  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>", style=dashed];
m25_60 -> m25_64  [color=darkseagreen4, key=1, label=result, style=dashed];
m25_60 -> m25_65  [color=darkseagreen4, key=1, label=result, style=dashed];
m25_61 -> m25_64  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_46 -> m25_55  [color=darkseagreen4, key=1, label="System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m25_170 -> m25_172  [color=green, key=1, label="lambda expression", style=dashed];
m25_44 -> m25_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_83 -> m25_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_97 -> m25_99  [color=green, key=1, label=servers, style=dashed];
m25_98 -> m25_102  [color=darkseagreen4, key=1, label=result, style=dashed];
m25_75 -> m25_77  [color=darkseagreen4, key=1, label=data, style=dashed];
m25_92 -> m25_331  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_305 -> m25_308  [color=green, key=1, label=endDate, style=dashed];
m25_305 -> m25_309  [color=green, key=1, label=endDate, style=dashed];
m25_306 -> m25_308  [color=green, key=1, label=startDate, style=dashed];
m25_307 -> m25_309  [color=green, key=1, label=dates, style=dashed];
m25_307 -> m25_322  [color=green, key=1, label=dates, style=dashed];
m25_311 -> m25_327  [color=green, key=1, label="lambda expression", style=dashed];
m25_311 -> m25_320  [color=green, key=1, label=stringDates, style=dashed];
m25_312 -> m25_315  [color=green, key=1, label=keys, style=dashed];
m25_312 -> m25_330  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_314 -> m25_334  [color=green, key=1, label="lambda expression", style=dashed];
m25_314 -> m25_337  [color=green, key=1, label="lambda expression", style=dashed];
m25_314 -> m25_316  [color=green, key=1, label=valuesMap, style=dashed];
m25_314 -> m25_317  [color=green, key=1, label=valuesMap, style=dashed];
m25_315 -> m25_317  [color=green, key=1, label=key, style=dashed];
m25_318 -> m25_322  [color=green, key=1, label=result, style=dashed];
m25_318 -> m25_324  [color=green, key=1, label=result, style=dashed];
m25_319 -> m25_322  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_319 -> m25_323  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_323 -> m25_323  [color=darkseagreen4, key=1, label=i, style=dashed];
m25_123 -> m25_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_130 -> m25_147  [color=green, key=1, label="lambda expression", style=dashed];
m25_130 -> m25_151  [color=green, key=1, label="lambda expression", style=dashed];
m25_130 -> m25_155  [color=green, key=1, label="lambda expression", style=dashed];
m25_130 -> m25_158  [color=green, key=1, label="lambda expression", style=dashed];
m25_130 -> m25_132  [color=green, key=1, label=tuples, style=dashed];
m25_131 -> m25_136  [color=green, key=1, label=result, style=dashed];
m25_345 -> m25_33  [color=green, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m25_345 -> m25_94  [color=green, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m25_345 -> m25_148  [color=green, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m25_345 -> m25_196  [color=green, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m25_345 -> m25_227  [color=green, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m25_345 -> m25_230  [color=green, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m25_345 -> m25_265  [color=green, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m25_345 -> m25_4  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m25_345 -> m25_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m25_345 -> m25_11  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m25_345 -> m25_12  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m25_345 -> m25_17  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m25_345 -> m25_41  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m25_345 -> m25_55  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m25_345 -> m25_90  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m25_345 -> m25_164  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m25_345 -> m25_179  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m25_345 -> m25_200  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m25_347 -> m25_295  [color=green, key=1, label=string, style=dashed];
m25_346 -> m25_261  [color=darkseagreen4, key=1, label=countByStates, style=dashed];
m25_348 -> m25_331  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_0 -> m26_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_0 -> m26_8  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m26_0 -> m26_10  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m26_13 -> m26_7  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RequestDispatcherContext", style=dashed];
m26_13 -> m26_8  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RequestDispatcherContext", style=dashed];
m26_13 -> m26_10  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RequestDispatcherContext", style=dashed];
m26_57 -> m26_59  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m26_59 -> m26_59  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m26_59 -> m26_61  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m26_61 -> m26_61  [color=darkseagreen4, key=1, label=breadcrumb, style=dashed];
m26_101 -> m26_1  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_2  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_4  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_5  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_6  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_17  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_18  [color=green, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_53  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_55  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_56  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_57  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_58  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_59  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_60  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_61  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_62  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_63  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_64  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_65  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_66  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_67  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_68  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_69  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_70  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_71  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_72  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_73  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_74  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_75  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_76  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_77  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_78  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_79  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_80  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_81  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_82  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_84  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_86  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m26_101 -> m26_87  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.LayoutPage", style=dashed];
m27_20 -> m27_24  [color=darkseagreen4, key=1, label=string, style=dashed];
m27_20 -> m27_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m27_21 -> m27_25  [color=darkseagreen4, key=1, label=jobType, style=dashed];
m27_22 -> m27_24  [color=darkseagreen4, key=1, label=queue, style=dashed];
m27_47 -> m27_49  [color=darkseagreen4, key=1, label="System.Threading.Thread", style=dashed];
m27_5 -> m27_8  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m27_53 -> m27_8  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m27_53 -> m27_17  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m27_53 -> m27_24  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m27_53 -> m27_25  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m27_53 -> m27_38  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m27_53 -> m27_39  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m27_53 -> m27_43  [color=darkseagreen4, key=1, label="HangFire.Server.SchedulePoller", style=dashed];
m28_12 -> m28_15  [color=green, key=1, label="Hangfire.Logging.ILog", style=dashed];
m28_12 -> m28_16  [color=green, key=1, label="Hangfire.Logging.ILog", style=dashed];
m28_12 -> m28_17  [color=green, key=1, label="Hangfire.Logging.ILog", style=dashed];
m28_25 -> m28_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_25 -> m28_14  [color=green, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m28_25 -> m28_15  [color=green, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m28_25 -> m28_16  [color=green, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m28_25 -> m28_17  [color=green, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m28_34 -> m28_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_34 -> m28_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_37 -> m28_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_45 -> m28_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_45 -> m28_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_52 -> m28_52  [color=darkseagreen4, key=1, label=job, style=dashed];
}
