digraph  {
n0 [cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", label="Entry HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8"];
n1 [cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", label="Exit HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8"];
d6 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", color=green, community=0, label="1: throw new ArgumentNullException(''jobType'');", span="21-21"];
d5 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", label="jobType == null", span="19-19"];
d16 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", label="Exit HangFire.Client.JobClient.Async(System.Type, object)", span="17-17"];
d17 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
d13 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", color=green, community=0, label="0: var context = new CreateContext(\r\n                new ClientJobDescriptor(_redis, jobId, job, state))", span="37-38"];
d67 [label="HangFire.Client.JobClient", span=""];
d12 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", label="var job = CreateJob(jobType, args)", span="35-35"];
d10 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", label="var jobId = GenerateId()", span="32-32"];
d11 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", label="var state = new EnqueuedState(jobId, ''Enqueued by the Ð¡lient'', queue)", span="34-34"];
d14 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", label="_jobCreator.CreateJob(context)", span="40-40"];
d25 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12"];
d26 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.Dictionary<string, string>, HangFire.States.JobState)", label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.Dictionary<string, string>, HangFire.States.JobState)", span="13-13"];
d54 [cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", color=green, community=0, label="1: job[''Type''] = jobType.AssemblyQualifiedName", span="90-90"];
d24 [cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", label="Entry HangFire.Client.JobClient.CreateJob(System.Type, object)", span="86-86"];
d53 [cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", label="var job = new Dictionary<string, string>()", span="89-89"];
d55 [cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", color=green, community=0, label="0: job[''Args''] = JobHelper.ToJson(ClientJobDescriptor.SerializeProperties(jobArgs))", span="91-91"];
d56 [cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", label="job[''CreatedAt''] = JobHelper.ToStringTimestamp(DateTime.UtcNow)", span="92-92"];
d60 [cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", label="Entry HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", span="49-49"];
d61 [cluster="HangFire.JobHelper.ToJson(object)", label="Entry HangFire.JobHelper.ToJson(object)", span="32-32"];
d4 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", label="Entry HangFire.Client.JobClient.Async(System.Type, object)", span="17-17"];
d7 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", label="!typeof (BackgroundJob).IsAssignableFrom(jobType)", span="23-23"];
d8 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", label="throw new ArgumentException(\r\n                    String.Format(''The type '{0}' must inherit '{1}'.'', jobType, typeof(BackgroundJob)), \r\n                    ''jobType'');", span="25-27"];
d15 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", label="return jobId;", span="42-42"];
d30 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", label="throw new ArgumentNullException(''jobType'');", span="49-49"];
d1 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", label="_redis = redisManager.GetClient()", span="14-14"];
d36 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", label="return Async(jobType, args);", span="65-65"];
d40 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", label="var context = new CreateContext(\r\n                new ClientJobDescriptor(_redis, jobId, job, state))", span="73-74"];
d41 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", label="_jobCreator.CreateJob(context)", span="76-76"];
d50 [cluster="HangFire.Client.JobClient.Dispose()", label="_redis.Dispose()", span="83-83"];
d9 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", label="var queue = JobHelper.GetQueue(jobType)", span="30-30"];
d22 [cluster="HangFire.Client.JobClient.GenerateId()", label="Entry HangFire.Client.JobClient.GenerateId()", span="97-97"];
d23 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
d27 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="33-33"];
d39 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", label="var job = CreateJob(jobType, args)", span="71-71"];
d58 [cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", label="Exit HangFire.Client.JobClient.CreateJob(System.Type, object)", span="86-86"];
d59 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
d57 [cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", label="return job;", span="94-94"];
d62 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
d18 [cluster="System.Type.IsAssignableFrom(System.Type)", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
d19 [cluster="System.ArgumentException.ArgumentException(string, string)", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
d20 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
d29 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", label="jobType == null", span="47-47"];
d43 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", label="Exit HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", span="45-45"];
d0 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="12-12"];
d2 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", label="Exit HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="12-12"];
d3 [cluster="Unk.GetClient", label="Entry Unk.GetClient", span=""];
d28 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", label="Entry HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", span="45-45"];
d35 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", label="interval.Equals(TimeSpan.Zero)", span="63-63"];
d37 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", label="var jobId = GenerateId()", span="68-68"];
d38 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", label="var state = new ScheduledState(jobId, ''Scheduled by the Client'', DateTime.UtcNow.Add(interval))", span="70-70"];
d42 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", label="return jobId;", span="78-78"];
d49 [cluster="HangFire.Client.JobClient.Dispose()", label="Entry HangFire.Client.JobClient.Dispose()", span="81-81"];
d51 [cluster="HangFire.Client.JobClient.Dispose()", label="Exit HangFire.Client.JobClient.Dispose()", span="81-81"];
d52 [cluster="Unk.Dispose", label="Entry Unk.Dispose", span=""];
d21 [cluster="HangFire.JobHelper.GetQueue(System.Type)", label="Entry HangFire.JobHelper.GetQueue(System.Type)", span="20-20"];
d64 [cluster="HangFire.Client.JobClient.GenerateId()", label="Exit HangFire.Client.JobClient.GenerateId()", span="97-97"];
d63 [cluster="HangFire.Client.JobClient.GenerateId()", label="return Guid.NewGuid().ToString();", span="99-99"];
d31 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", label="!typeof(BackgroundJob).IsAssignableFrom(jobType)", span="51-51"];
d32 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", label="throw new ArgumentException(\r\n                    String.Format(''The type '{0}' must inherit '{1}'.'', jobType, typeof(BackgroundJob)),\r\n                    ''jobType'');", span="53-55"];
d34 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", label="throw new ArgumentOutOfRangeException(''interval'', ''Interval value can not be negative.'');", span="60-60"];
d33 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", label="interval != interval.Duration()", span="58-58"];
d46 [cluster="System.TimeSpan.Equals(System.TimeSpan)", label="Entry System.TimeSpan.Equals(System.TimeSpan)", span="0-0"];
d47 [cluster="HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", label="Entry HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", span="10-10"];
d48 [cluster="System.DateTime.Add(System.TimeSpan)", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
d65 [cluster="System.Guid.NewGuid()", label="Entry System.Guid.NewGuid()", span="0-0"];
d66 [cluster="System.Guid.ToString()", label="Entry System.Guid.ToString()", span="0-0"];
d45 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
d44 [cluster="System.TimeSpan.Duration()", label="Entry System.TimeSpan.Duration()", span="0-0"];
m0_0 [cluster="HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", file="BackgroundJobServerFacts.cs", label="Entry HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", span="26-26"];
m0_1 [cluster="HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", file="BackgroundJobServerFacts.cs", label="_command = command", span="28-28"];
m0_2 [cluster="HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", file="BackgroundJobServerFacts.cs", label="Exit HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", span="26-26"];
m0_3 [cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="BackgroundJobServerFacts.cs", label="Entry HangFire.Web.CommandHandler.ProcessRequest()", span="31-31"];
m0_4 [cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="BackgroundJobServerFacts.cs", label="Request.HttpMethod != WebRequestMethods.Http.Post", span="33-33"];
m0_5 [cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="BackgroundJobServerFacts.cs", label="throw new HttpException((int)HttpStatusCode.MethodNotAllowed, ''Wrong HTTP method.'');", span="35-35"];
m0_6 [cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="BackgroundJobServerFacts.cs", label="_command()", span="38-38"];
m0_7 [cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="BackgroundJobServerFacts.cs", label="Response.StatusCode = (int)HttpStatusCode.NoContent", span="40-40"];
m0_8 [cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="BackgroundJobServerFacts.cs", label="Response.StatusCode = 422", span="44-44"];
m0_9 [cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="BackgroundJobServerFacts.cs", label="Exit HangFire.Web.CommandHandler.ProcessRequest()", span="31-31"];
m0_11 [cluster="System.Func<TResult>.Invoke()", file="BackgroundJobServerFacts.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m0_10 [cluster="HttpException.cstr", file="BackgroundJobServerFacts.cs", label="Entry HttpException.cstr", span=""];
m0_12 [file="BackgroundJobServerFacts.cs", label="HangFire.Web.CommandHandler", span=""];
m1_18 [cluster="HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", file="InfiniteLoopComponent.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", span="10-10"];
m1_16 [cluster="Unk.SecondsToDelay", file="InfiniteLoopComponent.cs", label="Entry Unk.SecondsToDelay", span=""];
m1_0 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs", label="Entry HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="10-10"];
m1_1 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs", label="redis == null", span="12-12"];
m1_3 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs", label="state == null", span="13-13"];
m1_5 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs", label="state.StateName != FailedState.Name", span="15-15"];
m1_6 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs", label="return state;", span="18-18"];
m1_7 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs", label="var retryCount = redis.IncrementValueInHash(\r\n                String.Format(''hangfire:job:{0}'', state.JobId),\r\n                ''RetryCount'',\r\n                1)", span="21-24"];
m1_10 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs", label="return new ScheduledState(\r\n                    state.JobId, \r\n                    String.Format(''Retry attempt {0} of {1}.'', retryCount, MaxRetryAttempts), \r\n                    delay);", span="32-35"];
m1_11 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs", label="return state;", span="40-40"];
m1_2 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs", label="throw new ArgumentNullException(''redis'');", span="12-12"];
m1_4 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs", label="throw new ArgumentNullException(''state'');", span="13-13"];
m1_8 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs", label="retryCount <= MaxRetryAttempts", span="26-26"];
m1_9 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs", label="var delay = DateTime.UtcNow.AddSeconds(SecondsToDelay(retryCount))", span="28-28"];
m1_12 [cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs", label="Exit HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="10-10"];
m1_17 [cluster="System.DateTime.AddSeconds(double)", file="InfiniteLoopComponent.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m1_19 [cluster="Unk.Format", file="InfiniteLoopComponent.cs", label="Entry Unk.Format", span=""];
m1_20 [cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="InfiniteLoopComponent.cs", label="Entry HangFire.RetryJobsFilter.SecondsToDelay(long)", span="44-44"];
m1_21 [cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="InfiniteLoopComponent.cs", label="var random = new Random()", span="46-46"];
m1_22 [cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="InfiniteLoopComponent.cs", label="return (int)Math.Round(\r\n                Math.Pow(retryCount, 4) + 15 + (random.Next(30) * (retryCount + 1)));", span="47-48"];
m1_23 [cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="InfiniteLoopComponent.cs", label="Exit HangFire.RetryJobsFilter.SecondsToDelay(long)", span="44-44"];
m1_24 [cluster="System.Random.Random()", file="InfiniteLoopComponent.cs", label="Entry System.Random.Random()", span="0-0"];
m1_26 [cluster="System.Random.Next(int)", file="InfiniteLoopComponent.cs", label="Entry System.Random.Next(int)", span="0-0"];
m1_27 [cluster="System.Math.Round(double)", file="InfiniteLoopComponent.cs", label="Entry System.Math.Round(double)", span="0-0"];
m1_15 [cluster="Unk.IncrementValueInHash", file="InfiniteLoopComponent.cs", label="Entry Unk.IncrementValueInHash", span=""];
m1_14 [cluster="string.Format(string, object)", file="InfiniteLoopComponent.cs", label="Entry string.Format(string, object)", span="0-0"];
m1_25 [cluster="System.Math.Pow(double, double)", file="InfiniteLoopComponent.cs", label="Entry System.Math.Pow(double, double)", span="0-0"];
m1_28 [file="InfiniteLoopComponent.cs", label="HangFire.RetryJobsFilter", span=""];
m2_2 [cluster="Hangfire.Server.IServerSupervisor.Stop()", file="IServerSupervisor.cs", label="Entry Hangfire.Server.IServerSupervisor.Stop()", span="23-23"];
m2_3 [cluster="Hangfire.Server.IServerSupervisor.Stop()", file="IServerSupervisor.cs", label="Exit Hangfire.Server.IServerSupervisor.Stop()", span="23-23"];
m2_0 [cluster="Hangfire.Server.IServerSupervisor.Start()", file="IServerSupervisor.cs", label="Entry Hangfire.Server.IServerSupervisor.Start()", span="22-22"];
m2_1 [cluster="Hangfire.Server.IServerSupervisor.Start()", file="IServerSupervisor.cs", label="Exit Hangfire.Server.IServerSupervisor.Start()", span="22-22"];
m4_42 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="51-51"];
m4_43 [cluster="Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerComponent>)", color=red, community=0, file="ServerBootstrapperFacts.cs", label="1: Entry Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerComponent>)", span="36-36"];
m4_44 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", span="59-59"];
m4_37 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: Assert.Equal(''context'', exception.ParamName)", span="47-47"];
m4_45 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", file="ServerBootstrapperFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, _context, _storage.Object, null))", span="61-62"];
m4_12 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="ServerBootstrapperFacts.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m4_69 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="79-79"];
m4_70 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="var server = CreateServer()", span="81-81"];
m4_71 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="server.Execute(_cts.Token)", span="83-83"];
m4_72 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="_storage.Verify(x => x.GetConnection(), Times.Exactly(2))", span="85-85"];
m4_73 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="_connection.Verify(x => x.Dispose(), Times.Exactly(2))", span="86-86"];
m4_74 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="79-79"];
m4_25 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="33-33"];
m4_26 [cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: new ServerBootstrapper(null, _context, _storage.Object, _components)", span="35-35"];
m4_27 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''serverId'', exception.ParamName)", span="38-38"];
m4_20 [cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: Exit lambda expression", span="25-25"];
m4_28 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="33-33"];
m4_15 [cluster="System.TimeSpan.FromMilliseconds(double)", file="ServerBootstrapperFacts.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m4_30 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, null, _storage.Object, _components))", span="43-44"];
m4_109 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", span="119-119"];
m4_110 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", color=red, community=0, file="ServerBootstrapperFacts.cs", label="1: _supervisor.Setup(x => x.Dispose()).Throws<InvalidOperationException>()", span="121-121"];
m4_111 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: return new ServerBootstrapper(ServerId, _context, _storage.Object, _components);", span="118-118"];
m4_112 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", color=red, community=0, file="ServerBootstrapperFacts.cs", label="1: Assert.Throws<InvalidOperationException>(() => server.Execute(_cts.Token))", span="124-124"];
m4_113 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: var mock = new Mock<IServerComponent>()", span="123-123"];
m4_114 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: _components.Add(mock.Object)", span="124-124"];
m4_92 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", span="99-99"];
m4_93 [cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: Thread.Sleep(100)", span="93-93"];
m4_94 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="ServerBootstrapperFacts.cs", label="server.Execute(_cts.Token)", span="103-103"];
m4_95 [cluster="System.Threading.Thread.Sleep(int)", color=red, community=0, file="ServerBootstrapperFacts.cs", label="1: Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m4_96 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", span="99-99"];
m4_11 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="ServerBootstrapperFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m4_0 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", span="20-20"];
m4_1 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="_context = new ServerContext()", span="22-22"];
m4_2 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="_storage = new Mock<JobStorage>()", span="23-23"];
m4_3 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=red, community=0, file="ServerBootstrapperFacts.cs", label="0: _supervisor = new Mock<IServerSupervisor>()", span="24-24"];
m4_4 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: _cts = new CancellationTokenSource()", span="25-25"];
m4_5 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="0: _components = new List<IServerComponent>()", span="26-26"];
m4_6 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=red, community=0, file="ServerBootstrapperFacts.cs", label="1: _cts = new CancellationTokenSource(TimeSpan.FromMilliseconds(50))", span="27-27"];
m4_7 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="29-29"];
m4_8 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", span="20-20"];
m4_77 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.GetConnection()", span="85-85"];
m4_78 [cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: Exit lambda expression", span="85-85"];
m4_79 [cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: Entry lambda expression", span="86-86"];
m4_83 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", span="90-90"];
m4_80 [cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: x.Dispose()", span="86-86"];
m4_82 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="ServerBootstrapperFacts.cs", label="server.Execute(_cts.Token)", span="99-99"];
m4_84 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", color=red, community=0, file="ServerBootstrapperFacts.cs", label="1: var server = CreateServer()", span="92-92"];
m4_81 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="86-86"];
m4_85 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", color=red, community=0, file="ServerBootstrapperFacts.cs", label="1: server.Execute(_cts.Token)", span="93-93"];
m4_50 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", span="60-60"];
m4_51 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", file="ServerBootstrapperFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, _context, _storage.Object, null))", span="62-63"];
m4_52 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", color=red, community=0, file="ServerBootstrapperFacts.cs", label="1: Assert.Equal(''supervisorFactory'', exception.ParamName)", span="65-65"];
m4_53 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", span="60-60"];
m4_14 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", file="ServerBootstrapperFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", span="0-0"];
m4_29 [cluster="Unk.>", file="ServerBootstrapperFacts.cs", label="Entry Unk.>", span=""];
m4_63 [cluster="Hangfire.Server.ServerBootstrapper.Execute(System.Threading.CancellationToken)", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Server.ServerBootstrapper.Execute(System.Threading.CancellationToken)", span="56-56"];
m4_49 [cluster="Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Lazy<Hangfire.Server.IServerSupervisor>)", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Lazy<Hangfire.Server.IServerSupervisor>)", span="34-34"];
m4_62 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="129-129"];
m4_124 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", color=red, community=0, file="ServerBootstrapperFacts.cs", label="1: return new ServerBootstrapper(ServerId, _context, _storage.Object, _supervisorFactory);", span="131-131"];
m4_125 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="129-129"];
m4_24 [cluster="Unk.GetConnection", file="ServerBootstrapperFacts.cs", label="Entry Unk.GetConnection", span=""];
m4_86 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", color=red, community=0, file="ServerBootstrapperFacts.cs", label="1: _supervisor.Verify(x => x.Start())", span="95-95"];
m4_115 [cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: Entry lambda expression", span="121-121"];
m4_116 [cluster="lambda expression", color=red, community=0, file="ServerBootstrapperFacts.cs", label="1: x.Dispose()", span="121-121"];
m4_118 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="124-124"];
m4_9 [cluster="Hangfire.Server.ServerContext.ServerContext()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Server.ServerContext.ServerContext()", span="18-18"];
m4_100 [cluster="lambda expression", color=green, community=1, file="ServerBootstrapperFacts.cs", label="1: x.Execute(_cts.Token)", span="103-103"];
m4_101 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs", label="var server = CreateServer()", span="111-111"];
m4_102 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs", label="server.Execute(_cts.Token)", span="113-113"];
m4_103 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs", label="_connection.Verify(x => x.RemoveServer(ServerId))", span="115-115"];
m4_104 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="109-109"];
m4_35 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="42-42"];
m4_36 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", color=red, community=0, file="ServerBootstrapperFacts.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, null, _storage.Object, _supervisorFactory))", span="44-45"];
m4_38 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="42-42"];
m4_16 [cluster="Unk.Setup", file="ServerBootstrapperFacts.cs", label="Entry Unk.Setup", span=""];
m4_57 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="69-69"];
m4_58 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs", label="var server = CreateServer()", span="71-71"];
m4_59 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs", label="server.Execute(_cts.Token)", span="73-73"];
m4_60 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs", label="_connection.Verify(x => x.AnnounceServer(ServerId, _context))", span="75-75"];
m4_61 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="69-69"];
m4_34 [cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: new ServerBootstrapper(ServerId, null, _storage.Object, _components)", span="44-44"];
m4_117 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="121-121"];
m4_121 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="126-126"];
m4_21 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="29-29"];
m4_18 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="25-25"];
m4_19 [cluster="lambda expression", color=red, community=0, file="ServerBootstrapperFacts.cs", label="1: _supervisor.Object", span="25-25"];
m4_22 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.GetConnection()", span="29-29"];
m4_23 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="29-29"];
m4_31 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="36-36"];
m4_32 [cluster="lambda expression", color=red, community=0, file="ServerBootstrapperFacts.cs", label="1: new ServerBootstrapper(null, _context, _storage.Object, _supervisorFactory)", span="36-36"];
m4_33 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="36-36"];
m4_39 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="45-45"];
m4_40 [cluster="lambda expression", color=red, community=0, file="ServerBootstrapperFacts.cs", label="1: new ServerBootstrapper(ServerId, null, _storage.Object, _supervisorFactory)", span="45-45"];
m4_41 [cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: new ServerBootstrapper(ServerId, _context, null, _components)", span="53-53"];
m4_46 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: Assert.Equal(''components'', exception.ParamName)", span="64-64"];
m4_47 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", color=red, community=0, file="ServerBootstrapperFacts.cs", label="1: Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", span="59-59"];
m4_48 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="54-54"];
m4_54 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="63-63"];
m4_55 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="new ServerBootstrapper(ServerId, _context, _storage.Object, null)", span="63-63"];
m4_56 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="63-63"];
m4_65 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="75-75"];
m4_66 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.AnnounceServer(ServerId, _context)", span="75-75"];
m4_67 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="75-75"];
m4_76 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="85-85"];
m4_88 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="95-95"];
m4_89 [cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs", label="0: x.Execute(It.IsAny<CancellationToken>())", span="93-93"];
m4_90 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="95-95"];
m4_97 [cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: x.Execute(_cts.Token)", span="102-102"];
m4_98 [cluster="lambda expression", color=red, community=0, file="ServerBootstrapperFacts.cs", label="1: x.Dispose()", span="105-105"];
m4_99 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="105-105"];
m4_105 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="115-115"];
m4_106 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.RemoveServer(ServerId)", span="115-115"];
m4_107 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="115-115"];
m4_119 [cluster="lambda expression", color=red, community=0, file="ServerBootstrapperFacts.cs", label="1: server.Execute(_cts.Token)", span="124-124"];
m4_120 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="124-124"];
m4_122 [cluster="lambda expression", color=red, community=0, file="ServerBootstrapperFacts.cs", label="1: x.RemoveServer(It.IsAny<string>())", span="126-126"];
m4_123 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="126-126"];
m4_68 [cluster="Unk.AnnounceServer", file="ServerBootstrapperFacts.cs", label="Entry Unk.AnnounceServer", span=""];
m4_75 [cluster="Unk.Exactly", file="ServerBootstrapperFacts.cs", label="Entry Unk.Exactly", span=""];
m4_91 [cluster="Unk.Execute", file="ServerBootstrapperFacts.cs", label="Entry Unk.Execute", span=""];
m4_64 [cluster="Unk.Verify", file="ServerBootstrapperFacts.cs", label="Entry Unk.Verify", span=""];
m4_108 [cluster="Unk.RemoveServer", file="ServerBootstrapperFacts.cs", label="Entry Unk.RemoveServer", span=""];
m4_87 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", span="90-90"];
m4_17 [cluster="Unk.Returns", file="ServerBootstrapperFacts.cs", label="Entry Unk.Returns", span=""];
m4_13 [cluster="Mock<IStorageConnection>.cstr", file="ServerBootstrapperFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m4_10 [cluster="Mock<JobStorage>.cstr", file="ServerBootstrapperFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m4_126 [file="ServerBootstrapperFacts.cs", label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", span=""];
m4_127 [file="ServerBootstrapperFacts.cs", label=server, span=""];
m5_24 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="ServerComponentExtensions.cs", label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22"];
m5_25 [cluster="string.Format(string, object)", file="ServerComponentExtensions.cs", label="Entry string.Format(string, object)", span="0-0"];
m5_21 [cluster="Hangfire.Server.ServerComponentExtensions.TrySetThreadName(string)", file="ServerComponentExtensions.cs", label="Entry Hangfire.Server.ServerComponentExtensions.TrySetThreadName(string)", span="52-52"];
m5_27 [cluster="Hangfire.Server.ServerComponentExtensions.TrySetThreadName(string)", file="ServerComponentExtensions.cs", label="Thread.CurrentThread.Name = name", span="56-56"];
m5_28 [cluster="Hangfire.Server.ServerComponentExtensions.TrySetThreadName(string)", file="ServerComponentExtensions.cs", label=InvalidOperationException, span="58-58"];
m5_29 [cluster="Hangfire.Server.ServerComponentExtensions.TrySetThreadName(string)", file="ServerComponentExtensions.cs", label="Exit Hangfire.Server.ServerComponentExtensions.TrySetThreadName(string)", span="52-52"];
m5_23 [cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="ServerComponentExtensions.cs", label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122"];
m5_22 [cluster="Hangfire.Logging.LogProvider.GetLogger(string)", file="ServerComponentExtensions.cs", label="Entry Hangfire.Logging.LogProvider.GetLogger(string)", span="363-363"];
m5_0 [cluster="HangFire.Sample.FilterConfig.RegisterGlobalFilters(GlobalFilterCollection)", file="ServerComponentExtensions.cs", label="Entry HangFire.Sample.FilterConfig.RegisterGlobalFilters(GlobalFilterCollection)", span="7-7"];
m5_1 [cluster="HangFire.Sample.FilterConfig.RegisterGlobalFilters(GlobalFilterCollection)", color=green, community=0, file="ServerComponentExtensions.cs", label="0: filters.Add(new HandleErrorAttribute())", span="9-9"];
m5_3 [cluster="HandleErrorAttribute.cstr", color=red, community=0, file="ServerComponentExtensions.cs", label="0: Entry HandleErrorAttribute.cstr", span=""];
m5_2 [cluster="HangFire.Sample.FilterConfig.RegisterGlobalFilters(GlobalFilterCollection)", file="ServerComponentExtensions.cs", label="Exit HangFire.Sample.FilterConfig.RegisterGlobalFilters(GlobalFilterCollection)", span="7-7"];
m5_4 [cluster="Unk.Add", file="ServerComponentExtensions.cs", label="Entry Unk.Add", span=""];
m5_26 [cluster="Hangfire.Logging.ILog.FatalException(string, System.Exception)", file="ServerComponentExtensions.cs", label="Entry Hangfire.Logging.ILog.FatalException(string, System.Exception)", span="188-188"];
m5_6 [cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions, System.Threading.Tasks.TaskScheduler)", file="ServerComponentExtensions.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions, System.Threading.Tasks.TaskScheduler)", span="0-0"];
m5_7 [cluster="lambda expression", file="ServerComponentExtensions.cs", label="Entry lambda expression", span="15-15"];
m5_8 [cluster="lambda expression", file="ServerComponentExtensions.cs", label="RunComponent(component, cancellationToken)", span="15-15"];
m5_9 [cluster="lambda expression", file="ServerComponentExtensions.cs", label="Exit lambda expression", span="15-15"];
m5_20 [cluster="object.ToString()", file="ServerComponentExtensions.cs", label="Entry object.ToString()", span="0-0"];
m5_10 [cluster="Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", file="ServerComponentExtensions.cs", label="Entry Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", span="21-21"];
m5_11 [cluster="Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", file="ServerComponentExtensions.cs", label="TrySetThreadName(component.ToString())", span="26-26"];
m5_12 [cluster="Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", file="ServerComponentExtensions.cs", label="var logger = LogProvider.GetLogger(component.ToString())", span="30-30"];
m5_13 [cluster="Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", file="ServerComponentExtensions.cs", label="logger.DebugFormat(''Server component '{0}' started.'', component)", span="31-31"];
m5_14 [cluster="Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", file="ServerComponentExtensions.cs", label="component.Execute(cancellationToken)", span="35-35"];
m5_17 [cluster="Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", file="ServerComponentExtensions.cs", label="logger.FatalException(\r\n                    String.Format(\r\n                        ''Fatal error occurred during execution of '{0}' component. It will be stopped. See the exception for details.'',\r\n                        component),\r\n                    ex)", span="42-46"];
m5_18 [cluster="Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", file="ServerComponentExtensions.cs", label="logger.DebugFormat(''Server component '{0}' stopped.'', component)", span="49-49"];
m5_15 [cluster="Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", file="ServerComponentExtensions.cs", label=OperationCanceledException, span="37-37"];
m5_16 [cluster="Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", file="ServerComponentExtensions.cs", label=Exception, span="40-40"];
m5_19 [cluster="Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", file="ServerComponentExtensions.cs", label="Exit Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", span="21-21"];
m5_30 [file="ServerComponentExtensions.cs", label="Hangfire.Server.IServerComponent", span=""];
m5_31 [file="ServerComponentExtensions.cs", label="System.Threading.CancellationToken", span=""];
m6_21 [cluster="Unk.CreateTask", file="ServerComponentExtensionsFacts.cs", label="Entry Unk.CreateTask", span=""];
m6_10 [cluster="Unk.>", file="ServerComponentExtensionsFacts.cs", label="Entry Unk.>", span=""];
m6_6 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", file="ServerComponentExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", span="21-21"];
m6_7 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", file="ServerComponentExtensionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => ServerComponentExtensions.CreateTask(null, _cts.Token))", span="23-24"];
m6_8 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", file="ServerComponentExtensionsFacts.cs", label="Assert.Equal(''component'', exception.ParamName)", span="26-26"];
m6_9 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", file="ServerComponentExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", span="21-21"];
m6_29 [cluster="System.Threading.Tasks.Task.Wait()", file="ServerComponentExtensionsFacts.cs", label="Entry System.Threading.Tasks.Task.Wait()", span="0-0"];
m6_22 [cluster="System.Enum.HasFlag(System.Enum)", file="ServerComponentExtensionsFacts.cs", label="Entry System.Enum.HasFlag(System.Enum)", span="0-0"];
m6_23 [cluster="Unk.True", file="ServerComponentExtensionsFacts.cs", label="Entry Unk.True", span=""];
m6_34 [cluster="Unk.Execute", file="ServerComponentExtensionsFacts.cs", label="Entry Unk.Execute", span=""];
m6_40 [cluster="Unk.Setup", file="ServerComponentExtensionsFacts.cs", label="Entry Unk.Setup", span=""];
m6_0 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", file="ServerComponentExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", span="14-14"];
m6_1 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", file="ServerComponentExtensionsFacts.cs", label="_component = new Mock<IServerComponent>()", span="16-16"];
m6_2 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", file="ServerComponentExtensionsFacts.cs", label="_cts = new CancellationTokenSource()", span="17-17"];
m6_3 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", file="ServerComponentExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", span="14-14"];
m6_11 [cluster="Unk.Equal", file="ServerComponentExtensionsFacts.cs", label="Entry Unk.Equal", span=""];
m6_35 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", file="ServerComponentExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", span="49-49"];
m6_36 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", file="ServerComponentExtensionsFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="51-51"];
m6_37 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", file="ServerComponentExtensionsFacts.cs", label="var task = _component.Object.CreateTask(_cts.Token)", span="52-52"];
m6_38 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", file="ServerComponentExtensionsFacts.cs", label="Assert.DoesNotThrow(() => task.Wait())", span="54-54"];
m6_39 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", file="ServerComponentExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", span="49-49"];
m6_15 [cluster="Hangfire.Server.ServerComponentExtensions.CreateTask(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", file="ServerComponentExtensionsFacts.cs", label="Entry Hangfire.Server.ServerComponentExtensions.CreateTask(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", span="10-10"];
m6_5 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="ServerComponentExtensionsFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m6_4 [cluster="Mock<IServerComponent>.cstr", file="ServerComponentExtensionsFacts.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m6_30 [cluster="Unk.Verify", file="ServerComponentExtensionsFacts.cs", label="Entry Unk.Verify", span=""];
m6_45 [cluster="lambda expression", file="ServerComponentExtensionsFacts.cs", label="Entry lambda expression", span="54-54"];
m6_12 [cluster="lambda expression", file="ServerComponentExtensionsFacts.cs", label="Entry lambda expression", span="24-24"];
m6_13 [cluster="lambda expression", file="ServerComponentExtensionsFacts.cs", label="ServerComponentExtensions.CreateTask(null, _cts.Token)", span="24-24"];
m6_14 [cluster="lambda expression", file="ServerComponentExtensionsFacts.cs", label="Exit lambda expression", span="24-24"];
m6_31 [cluster="lambda expression", file="ServerComponentExtensionsFacts.cs", label="Entry lambda expression", span="45-45"];
m6_32 [cluster="lambda expression", file="ServerComponentExtensionsFacts.cs", label="x.Execute(_cts.Token)", span="45-45"];
m6_33 [cluster="lambda expression", file="ServerComponentExtensionsFacts.cs", label="Exit lambda expression", span="45-45"];
m6_42 [cluster="lambda expression", file="ServerComponentExtensionsFacts.cs", label="Entry lambda expression", span="51-51"];
m6_46 [cluster="lambda expression", file="ServerComponentExtensionsFacts.cs", label="task.Wait()", span="54-54"];
m6_43 [cluster="lambda expression", file="ServerComponentExtensionsFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="51-51"];
m6_44 [cluster="lambda expression", file="ServerComponentExtensionsFacts.cs", label="Exit lambda expression", span="51-51"];
m6_47 [cluster="lambda expression", file="ServerComponentExtensionsFacts.cs", label="Exit lambda expression", span="54-54"];
m6_41 [cluster="Unk.DoesNotThrow", file="ServerComponentExtensionsFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m6_24 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", file="ServerComponentExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", span="39-39"];
m6_25 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", file="ServerComponentExtensionsFacts.cs", label="var task = _component.Object.CreateTask(_cts.Token)", span="41-41"];
m6_26 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", file="ServerComponentExtensionsFacts.cs", label="task.Wait()", span="43-43"];
m6_27 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", file="ServerComponentExtensionsFacts.cs", label="_component.Verify(x => x.Execute(_cts.Token), Times.Once)", span="45-45"];
m6_28 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", file="ServerComponentExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", span="39-39"];
m6_16 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunning_AttachedToParent_Task()", file="ServerComponentExtensionsFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunning_AttachedToParent_Task()", span="30-30"];
m6_17 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunning_AttachedToParent_Task()", file="ServerComponentExtensionsFacts.cs", label="var task = _component.Object.CreateTask(_cts.Token)", span="32-32"];
m6_18 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunning_AttachedToParent_Task()", file="ServerComponentExtensionsFacts.cs", label="Assert.True(task.CreationOptions.HasFlag(TaskCreationOptions.LongRunning))", span="34-34"];
m6_19 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunning_AttachedToParent_Task()", color=red, community=0, file="ServerComponentExtensionsFacts.cs", label="0: Assert.True(task.CreationOptions.HasFlag(TaskCreationOptions.AttachedToParent))", span="35-35"];
m6_20 [cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunning_AttachedToParent_Task()", file="ServerComponentExtensionsFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunning_AttachedToParent_Task()", span="30-30"];
m6_48 [file="ServerComponentExtensionsFacts.cs", label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", span=""];
m6_49 [file="ServerComponentExtensionsFacts.cs", label=task, span=""];
m8_25 [cluster="Hangfire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="ServerSupervisorCollection.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="35-35"];
m8_26 [cluster="Hangfire.States.SucceededState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ServerSupervisorCollection.cs", label="Entry Hangfire.States.SucceededState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="196-196"];
m8_27 [cluster="Hangfire.States.SucceededState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ServerSupervisorCollection.cs", label="transaction.DecrementCounter(''stats:succeeded'')", span="198-198"];
m8_28 [cluster="Hangfire.States.SucceededState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ServerSupervisorCollection.cs", label="Exit Hangfire.States.SucceededState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="196-196"];
m8_21 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="ServerSupervisorCollection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m8_18 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="ServerSupervisorCollection.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m8_19 [cluster="long.ToString(System.IFormatProvider)", file="ServerSupervisorCollection.cs", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
m8_29 [cluster="Hangfire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="ServerSupervisorCollection.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="37-37"];
m8_22 [cluster="Hangfire.States.SucceededState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ServerSupervisorCollection.cs", label="Entry Hangfire.States.SucceededState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="191-191"];
m8_23 [cluster="Hangfire.States.SucceededState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ServerSupervisorCollection.cs", label="transaction.IncrementCounter(''stats:succeeded'')", span="193-193"];
m8_24 [cluster="Hangfire.States.SucceededState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ServerSupervisorCollection.cs", label="Exit Hangfire.States.SucceededState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="191-191"];
m8_0 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="ServerSupervisorCollection.cs", label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="51-51"];
m8_1 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", color=red, community=0, file="ServerSupervisorCollection.cs", label="1: SucceededAt = DateTime.UtcNow", span="53-53"];
m8_2 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", color=red, community=0, file="ServerSupervisorCollection.cs", label="1: Result = result", span="54-54"];
m8_3 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", color=red, community=0, file="ServerSupervisorCollection.cs", label="1: Latency = latency", span="55-55"];
m8_4 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", color=red, community=0, file="ServerSupervisorCollection.cs", label="0: PerformanceDuration = performanceDuration", span="56-56"];
m8_5 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="ServerSupervisorCollection.cs", label="Exit Hangfire.States.SucceededState.SucceededState(object, long, long)", span="51-51"];
m8_20 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ServerSupervisorCollection.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m8_6 [cluster="Hangfire.States.SucceededState.SerializeData()", file="ServerSupervisorCollection.cs", label="Entry Hangfire.States.SucceededState.SerializeData()", span="158-158"];
m8_7 [cluster="Hangfire.States.SucceededState.SerializeData()", file="ServerSupervisorCollection.cs", label="var data = new Dictionary<string, string>\r\n            {\r\n                { ''SucceededAt'',  JobHelper.SerializeDateTime(SucceededAt) },\r\n                { ''PerformanceDuration'', PerformanceDuration.ToString(CultureInfo.InvariantCulture) },\r\n                { ''Latency'', Latency.ToString(CultureInfo.InvariantCulture) }\r\n            }", span="160-165"];
m8_8 [cluster="Hangfire.States.SucceededState.SerializeData()", file="ServerSupervisorCollection.cs", label="Result != null", span="167-167"];
m8_14 [cluster="Hangfire.States.SucceededState.SerializeData()", file="ServerSupervisorCollection.cs", label="data.Add(''Result'', serializedResult)", span="182-182"];
m8_15 [cluster="Hangfire.States.SucceededState.SerializeData()", file="ServerSupervisorCollection.cs", label="return data;", span="186-186"];
m8_9 [cluster="Hangfire.States.SucceededState.SerializeData()", file="ServerSupervisorCollection.cs", label="string serializedResult", span="169-169"];
m8_10 [cluster="Hangfire.States.SucceededState.SerializeData()", file="ServerSupervisorCollection.cs", label="serializedResult = JobHelper.ToJson(Result)", span="173-173"];
m8_11 [cluster="Hangfire.States.SucceededState.SerializeData()", file="ServerSupervisorCollection.cs", label=Exception, span="175-175"];
m8_13 [cluster="Hangfire.States.SucceededState.SerializeData()", file="ServerSupervisorCollection.cs", label="serializedResult != null", span="180-180"];
m8_12 [cluster="Hangfire.States.SucceededState.SerializeData()", file="ServerSupervisorCollection.cs", label="serializedResult = ''Can not serialize the return value''", span="177-177"];
m8_16 [cluster="Hangfire.States.SucceededState.SerializeData()", file="ServerSupervisorCollection.cs", label="Exit Hangfire.States.SucceededState.SerializeData()", span="158-158"];
m8_30 [file="ServerSupervisorCollection.cs", label="Hangfire.States.SucceededState", span=""];
m9_16 [cluster="Mock<IStateMachineFactory>.cstr", file="ServerSupervisorCollectionFacts.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m9_18 [cluster="Mock<IState>.cstr", file="ServerSupervisorCollectionFacts.cs", label="Entry Mock<IState>.cstr", span=""];
m9_96 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="100-100"];
m9_97 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: var client = CreateClient()", span="102-102"];
m9_98 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(null, _state.Object))", span="104-105"];
m9_99 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: Assert.Equal(''job'', exception.ParamName)", span="107-107"];
m9_100 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="100-100"];
m9_56 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="64-64"];
m9_57 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: JobStorage.Current = new Mock<JobStorage>().Object", span="66-66"];
m9_58 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: Assert.DoesNotThrow(() => new BackgroundJobClient())", span="67-67"];
m9_59 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="64-64"];
m9_136 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="146-146"];
m9_137 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: var client = CreateClient()", span="148-148"];
m9_138 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(null, _state.Object, null))", span="150-151"];
m9_139 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: Assert.Equal(''jobId'', exception.ParamName)", span="153-153"];
m9_140 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="146-146"];
m9_37 [cluster="Unk.Equal", file="ServerSupervisorCollectionFacts.cs", label="Entry Unk.Equal", span=""];
m9_77 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", span="84-84"];
m9_78 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: CreateClient()", span="86-86"];
m9_79 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: _storage.Verify(x => x.GetConnection())", span="87-87"];
m9_80 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", span="84-84"];
m9_17 [cluster="Mock<IJobCreationProcess>.cstr", file="ServerSupervisorCollectionFacts.cs", label="Entry Mock<IJobCreationProcess>.cstr", span=""];
m9_60 [cluster="Unk.DoesNotThrow", file="ServerSupervisorCollectionFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m9_112 [cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="81-81"];
m9_121 [cluster="Unk.Run", file="ServerSupervisorCollectionFacts.cs", label="Entry Unk.Run", span=""];
m9_64 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.BackgroundJobClient.BackgroundJobClient()", span="39-39"];
m9_122 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="132-132"];
m9_123 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: var client = CreateClient()", span="134-134"];
m9_124 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: _process.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="135-136"];
m9_125 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: var exception = Assert.Throws<CreateJobFailedException>(\r\n                () => client.Create(_job, _state.Object))", span="138-139"];
m9_126 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: Assert.NotNull(exception.InnerException)", span="141-141"];
m9_127 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: Assert.IsType<InvalidOperationException>(exception.InnerException)", span="142-142"];
m9_128 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="132-132"];
m9_145 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="157-157"];
m9_146 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="ServerSupervisorCollectionFacts.cs", label="var client = CreateClient()", span="159-159"];
m9_147 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="ServerSupervisorCollectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(''jobId'', null, null))", span="161-162"];
m9_148 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="ServerSupervisorCollectionFacts.cs", label="Assert.Equal(''state'', exception.ParamName)", span="164-164"];
m9_149 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="157-157"];
m9_154 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="168-168"];
m9_155 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="ServerSupervisorCollectionFacts.cs", label="var client = CreateClient()", span="170-170"];
m9_156 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="ServerSupervisorCollectionFacts.cs", label="client.ChangeState(''job-id'', _state.Object, null)", span="172-172"];
m9_157 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="ServerSupervisorCollectionFacts.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null))", span="174-177"];
m9_158 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="168-168"];
m9_36 [cluster="Unk.>", file="ServerSupervisorCollectionFacts.cs", label="Entry Unk.>", span=""];
m9_104 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="111-111"];
m9_105 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: var client = CreateClient()", span="113-113"];
m9_106 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(_job, null))", span="115-116"];
m9_107 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: Assert.Equal(''state'', exception.ParamName)", span="118-118"];
m9_108 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="111-111"];
m9_163 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="181-181"];
m9_164 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="ServerSupervisorCollectionFacts.cs", label="var client = CreateClient()", span="183-183"];
m9_165 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="ServerSupervisorCollectionFacts.cs", label="client.ChangeState(''job-id'', _state.Object, ''State'')", span="185-185"];
m9_166 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="ServerSupervisorCollectionFacts.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' }))", span="187-190"];
m9_167 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="181-181"];
m9_91 [cluster="HangFire.BackgroundJobClient.Dispose()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.BackgroundJobClient.Dispose()", span="113-113"];
m9_171 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="194-194"];
m9_172 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerSupervisorCollectionFacts.cs", label="_stateMachine.Setup(x => x.TryToChangeState(''job-id'', _state.Object, null))\r\n                .Returns(true)", span="196-197"];
m9_173 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerSupervisorCollectionFacts.cs", label="var client = CreateClient()", span="198-198"];
m9_174 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerSupervisorCollectionFacts.cs", label="var result = client.ChangeState(''job-id'', _state.Object, null)", span="200-200"];
m9_175 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerSupervisorCollectionFacts.cs", label="Assert.True(result)", span="202-202"];
m9_176 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="194-194"];
m9_23 [cluster="Unk.GetConnection", file="ServerSupervisorCollectionFacts.cs", label="Entry Unk.GetConnection", span=""];
m9_144 [cluster="Unk.ChangeState", file="ServerSupervisorCollectionFacts.cs", label="Entry Unk.ChangeState", span=""];
m9_86 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", span="91-91"];
m9_87 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: var client = CreateClient()", span="93-93"];
m9_88 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: client.Dispose()", span="94-94"];
m9_89 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: _connection.Verify(x => x.Dispose())", span="96-96"];
m9_90 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", span="91-91"];
m9_129 [cluster="Unk.NotNull", file="ServerSupervisorCollectionFacts.cs", label="Entry Unk.NotNull", span=""];
m9_13 [cluster="Unk.Setup", file="ServerSupervisorCollectionFacts.cs", label="Entry Unk.Setup", span=""];
m9_65 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="71-71"];
m9_66 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: Assert.DoesNotThrow(() => new BackgroundJobClient(_storage.Object))", span="73-73"];
m9_67 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="71-71"];
m9_81 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="209-209"];
m9_182 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="ServerSupervisorCollectionFacts.cs", label="return new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, _process.Object);", span="211-211"];
m9_183 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="209-209"];
m9_71 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77"];
m9_72 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: Assert.DoesNotThrow(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object))", span="79-80"];
m9_73 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77"];
m9_153 [cluster="HangFire.BackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.BackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", span="100-100"];
m9_162 [cluster="Unk.TryToChangeState", file="ServerSupervisorCollectionFacts.cs", label="Entry Unk.TryToChangeState", span=""];
m9_178 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Entry lambda expression", span="196-196"];
m9_20 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Entry lambda expression", span="24-24"];
m9_24 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Entry lambda expression", span="29-29"];
m9_28 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Entry lambda expression", span="33-33"];
m9_21 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: x.GetConnection()", span="24-24"];
m9_22 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Exit lambda expression", span="24-24"];
m9_25 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: x.Create(_connection.Object)", span="29-29"];
m9_26 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Exit lambda expression", span="29-29"];
m9_29 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: Method()", span="33-33"];
m9_30 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Exit lambda expression", span="33-33"];
m9_38 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Entry lambda expression", span="40-40"];
m9_39 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object)", span="40-40"];
m9_40 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Exit lambda expression", span="40-40"];
m9_46 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Entry lambda expression", span="49-49"];
m9_47 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: new BackgroundJobClient(_storage.Object, null, _process.Object)", span="49-49"];
m9_48 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Exit lambda expression", span="49-49"];
m9_53 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Entry lambda expression", span="58-58"];
m9_54 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null)", span="58-58"];
m9_55 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Exit lambda expression", span="58-58"];
m9_61 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Entry lambda expression", span="67-67"];
m9_62 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: new BackgroundJobClient()", span="67-67"];
m9_63 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Exit lambda expression", span="67-67"];
m9_68 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Entry lambda expression", span="73-73"];
m9_69 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: new BackgroundJobClient(_storage.Object)", span="73-73"];
m9_70 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Exit lambda expression", span="73-73"];
m9_74 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Entry lambda expression", span="80-80"];
m9_75 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object)", span="80-80"];
m9_76 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Exit lambda expression", span="80-80"];
m9_83 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Entry lambda expression", span="87-87"];
m9_84 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: x.GetConnection()", span="87-87"];
m9_85 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Exit lambda expression", span="87-87"];
m9_92 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Entry lambda expression", span="96-96"];
m9_93 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: x.Dispose()", span="96-96"];
m9_94 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Exit lambda expression", span="96-96"];
m9_102 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: client.Create(null, _state.Object)", span="105-105"];
m9_101 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Entry lambda expression", span="105-105"];
m9_103 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Exit lambda expression", span="105-105"];
m9_110 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: client.Create(_job, null)", span="116-116"];
m9_109 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Entry lambda expression", span="116-116"];
m9_111 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Exit lambda expression", span="116-116"];
m9_118 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Entry lambda expression", span="128-128"];
m9_119 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: x.Run(It.IsNotNull<CreateContext>())", span="128-128"];
m9_120 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Exit lambda expression", span="128-128"];
m9_134 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: client.Create(_job, _state.Object)", span="139-139"];
m9_130 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Entry lambda expression", span="135-135"];
m9_133 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Entry lambda expression", span="139-139"];
m9_131 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: x.Run(It.IsAny<CreateContext>())", span="135-135"];
m9_132 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Exit lambda expression", span="135-135"];
m9_135 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Exit lambda expression", span="139-139"];
m9_142 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: client.ChangeState(null, _state.Object, null)", span="151-151"];
m9_141 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Entry lambda expression", span="151-151"];
m9_143 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Exit lambda expression", span="151-151"];
m9_151 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="client.ChangeState(''jobId'', null, null)", span="162-162"];
m9_150 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Entry lambda expression", span="162-162"];
m9_152 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Exit lambda expression", span="162-162"];
m9_159 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Entry lambda expression", span="174-177"];
m9_160 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null)", span="174-177"];
m9_161 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Exit lambda expression", span="174-177"];
m9_168 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Entry lambda expression", span="187-190"];
m9_169 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' })", span="187-190"];
m9_170 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Exit lambda expression", span="187-190"];
m9_179 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="x.TryToChangeState(''job-id'', _state.Object, null)", span="196-196"];
m9_180 [cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs", label="Exit lambda expression", span="196-196"];
m9_82 [cluster="Unk.Verify", file="ServerSupervisorCollectionFacts.cs", label="Entry Unk.Verify", span=""];
m9_49 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55"];
m9_50 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null))", span="57-58"];
m9_51 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: Assert.Equal(''process'', exception.ParamName)", span="60-60"];
m9_52 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55"];
m9_31 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Method()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Method()", span="205-205"];
m9_181 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Method()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Method()", span="205-205"];
m9_15 [cluster="Mock<IStateMachine>.cstr", file="ServerSupervisorCollectionFacts.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m9_32 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37"];
m9_33 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object))", span="39-40"];
m9_34 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: Assert.Equal(''storage'', exception.ParamName)", span="42-42"];
m9_35 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37"];
m9_42 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46"];
m9_43 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, null, _process.Object))", span="48-49"];
m9_44 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="51-51"];
m9_45 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46"];
m9_19 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="117-117"];
m9_27 [cluster="Unk.Create", file="ServerSupervisorCollectionFacts.cs", label="Entry Unk.Create", span=""];
m9_113 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="122-122"];
m9_114 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: var client = CreateClient()", span="124-124"];
m9_115 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: client.Create(_job, _state.Object)", span="126-126"];
m9_116 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: _process.Verify(x => x.Run(It.IsNotNull<CreateContext>()))", span="128-128"];
m9_117 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="122-122"];
m9_177 [cluster="Unk.True", file="ServerSupervisorCollectionFacts.cs", label="Entry Unk.True", span=""];
m9_14 [cluster="Unk.Returns", file="ServerSupervisorCollectionFacts.cs", label="Entry Unk.Returns", span=""];
m9_41 [cluster="BackgroundJobClient.cstr", file="ServerSupervisorCollectionFacts.cs", label="Entry BackgroundJobClient.cstr", span=""];
m9_11 [cluster="Mock<IStorageConnection>.cstr", file="ServerSupervisorCollectionFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m9_12 [cluster="Mock<JobStorage>.cstr", file="ServerSupervisorCollectionFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m9_0 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20"];
m9_1 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: _connection = new Mock<IStorageConnection>()", span="22-22"];
m9_2 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: _storage = new Mock<JobStorage>()", span="23-23"];
m9_3 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: _storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="24-24"];
m9_4 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: _stateMachine = new Mock<IStateMachine>()", span="26-26"];
m9_5 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: _stateMachineFactory = new Mock<IStateMachineFactory>()", span="28-28"];
m9_6 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: _stateMachineFactory.Setup(x => x.Create(_connection.Object)).Returns(_stateMachine.Object)", span="29-29"];
m9_7 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: _process = new Mock<IJobCreationProcess>()", span="31-31"];
m9_8 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="0: _state = new Mock<IState>()", span="32-32"];
m9_9 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: _job = Job.FromExpression(() => Method())", span="33-33"];
m9_10 [cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20"];
m9_184 [file="ServerSupervisorCollectionFacts.cs", label="HangFire.Core.Tests.BackgroundJobClientFacts", span=""];
m9_185 [file="ServerSupervisorCollectionFacts.cs", label=client, span=""];
m9_186 [file="ServerSupervisorCollectionFacts.cs", label=client, span=""];
m9_187 [file="ServerSupervisorCollectionFacts.cs", label=client, span=""];
m9_188 [file="ServerSupervisorCollectionFacts.cs", label=client, span=""];
m9_189 [file="ServerSupervisorCollectionFacts.cs", label=client, span=""];
m10_97 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="341-341"];
m10_252 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="ServerSupervisorFacts.cs", label="AcquireLock(String.Format(''Hangfire:Set:Lock''))", span="343-343"];
m10_253 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="341-341"];
m10_101 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="173-173"];
m10_102 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: string query = @''delete from HangFire.[Set] where [Key] = @key and Value = @value''", span="175-175"];
m10_104 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: QueueCommand(x => x.Execute(\r\n                query,\r\n                new { key, value }))", span="178-180"];
m10_103 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: AcquireSetLock()", span="177-177"];
m10_105 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="173-173"];
m10_45 [cluster="Hangfire.States.IState.SerializeData()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.States.IState.SerializeData()", span="202-202"];
m10_6 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="44-44"];
m10_7 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: _storage.UseTransaction(connection =>\r\n            {\r\n                connection.EnlistTransaction(Transaction.Current);\r\n\r\n                if (_lockedResources.Count > 0)\r\n                {\r\n                    connection.Execute(\r\n                        ''set nocount on;'' +\r\n                        ''exec sp_getapplock @Resource=@resource, @LockMode=N'Exclusive''',\r\n                        _lockedResources.Select(x => new { resource = x }));\r\n                }\r\n\r\n                foreach (var command in _commandQueue)\r\n                {\r\n                    command(connection);\r\n                }\r\n            })", span="46-62"];
m10_8 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="44-44"];
m10_60 [cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue()", span="20-20"];
m10_65 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125"];
m10_66 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="127-129"];
m10_67 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125"];
m10_59 [cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m10_225 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="309-309"];
m10_226 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ServerSupervisorFacts.cs", label="key == null", span="311-311"];
m10_230 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ServerSupervisorFacts.cs", label="QueueCommand(x => x.Execute(query, new { key = key }))", span="317-317"];
m10_227 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ServerSupervisorFacts.cs", label="throw new ArgumentNullException(''key'');", span="311-311"];
m10_228 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ServerSupervisorFacts.cs", label="string query = @''\r\nupdate HangFire.[Set] set ExpireAt = null where [Key] = @key''", span="313-314"];
m10_229 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ServerSupervisorFacts.cs", label="AcquireSetLock()", span="316-316"];
m10_231 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="309-309"];
m10_77 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139"];
m10_78 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="141-143"];
m10_79 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139"];
m10_235 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="320-320"];
m10_236 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ServerSupervisorFacts.cs", label="key == null", span="322-322"];
m10_240 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ServerSupervisorFacts.cs", label="QueueCommand(x => x.Execute(query, new { key = key }))", span="328-328"];
m10_237 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ServerSupervisorFacts.cs", label="throw new ArgumentNullException(''key'');", span="322-322"];
m10_238 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ServerSupervisorFacts.cs", label="string query = @''\r\nupdate HangFire.[List] set ExpireAt = null where [Key] = @key''", span="324-325"];
m10_239 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ServerSupervisorFacts.cs", label="AcquireListLock()", span="327-327"];
m10_241 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="320-320"];
m10_250 [cluster="string.Format(string, params object[])", file="ServerSupervisorFacts.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m10_195 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="276-276"];
m10_196 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="key == null", span="278-278"];
m10_200 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="284-284"];
m10_197 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="throw new ArgumentNullException(''key'');", span="278-278"];
m10_198 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="string query = @''\r\nupdate HangFire.[Set] set ExpireAt = @expireAt where [Key] = @key''", span="280-281"];
m10_199 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="AcquireSetLock()", span="283-283"];
m10_201 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="276-276"];
m10_251 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="351-351"];
m10_256 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="ServerSupervisorFacts.cs", label="_lockedResources.Add(resource)", span="353-353"];
m10_257 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="351-351"];
m10_141 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="346-346"];
m10_254 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="ServerSupervisorFacts.cs", label="AcquireLock(String.Format(''Hangfire:Hash:Lock''))", span="348-348"];
m10_255 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="346-346"];
m10_247 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="ServerSupervisorFacts.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m10_38 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="79-79"];
m10_39 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: string addAndSetStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate HangFire.Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="81-84"];
m10_40 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: QueueCommand(x => x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                }))", span="86-96"];
m10_41 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="79-79"];
m10_205 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="287-287"];
m10_206 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="key == null", span="289-289"];
m10_210 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="295-295"];
m10_207 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="throw new ArgumentNullException(''key'');", span="289-289"];
m10_208 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="string query = @''\r\nupdate HangFire.[List] set ExpireAt = @expireAt where [Key] = @key''", span="291-292"];
m10_209 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="AcquireListLock()", span="294-294"];
m10_211 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="287-287"];
m10_47 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="99-99"];
m10_48 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: string addStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="101-103"];
m10_49 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: QueueCommand(x => x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                }))", span="105-114"];
m10_50 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="99-99"];
m10_83 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146"];
m10_84 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="148-150"];
m10_85 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146"];
m10_175 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="255-255"];
m10_176 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ServerSupervisorFacts.cs", label="key == null", span="257-257"];
m10_180 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ServerSupervisorFacts.cs", label="QueueCommand(x => x.Execute(query, new { key = key }))", span="262-262"];
m10_177 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ServerSupervisorFacts.cs", label="throw new ArgumentNullException(''key'');", span="257-257"];
m10_178 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ServerSupervisorFacts.cs", label="string query = @''delete from HangFire.[Set] where [Key] = @key''", span="259-259"];
m10_179 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ServerSupervisorFacts.cs", label="AcquireSetLock()", span="261-261"];
m10_181 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="255-255"];
m10_89 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153"];
m10_90 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: AddToSet(key, value, 0.0)", span="155-155"];
m10_91 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153"];
m10_27 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="331-331"];
m10_245 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="ServerSupervisorFacts.cs", label="_commandQueue.Enqueue(action)", span="333-333"];
m10_246 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="331-331"];
m10_54 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="117-117"];
m10_55 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: var provider = _storage.QueueProviders.GetProvider(queue)", span="119-119"];
m10_57 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: QueueCommand(x => persistentQueue.Enqueue(x, queue, jobId))", span="122-122"];
m10_56 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: var persistentQueue = provider.GetJobQueue()", span="120-120"];
m10_58 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="117-117"];
m10_9 [cluster="Unk.UseTransaction", file="ServerSupervisorFacts.cs", label="Entry Unk.UseTransaction", span=""];
m10_17 [cluster="Unk.EnlistTransaction", file="ServerSupervisorFacts.cs", label="Entry Unk.EnlistTransaction", span=""];
m10_20 [cluster="System.Action<T>.Invoke(T)", file="ServerSupervisorFacts.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m10_64 [cluster="Unk.Enqueue", file="ServerSupervisorFacts.cs", label="Entry Unk.Enqueue", span=""];
m10_71 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132"];
m10_72 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="134-136"];
m10_73 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132"];
m10_92 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158"];
m10_93 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: string addSql = @''\r\n;merge HangFire.[Set] with (holdlock) as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="160-165"];
m10_95 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="168-170"];
m10_94 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: AcquireSetLock()", span="167-167"];
m10_96 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158"];
m10_132 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="214-214"];
m10_133 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: key == null", span="216-216"];
m10_135 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: keyValuePairs == null", span="217-217"];
m10_139 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerSupervisorFacts.cs", label="QueueCommand(x => x.Execute(\r\n                sql,\r\n                keyValuePairs.Select(y => new { key = key, field = y.Key, value = y.Value })))", span="227-229"];
m10_134 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: throw new ArgumentNullException(''key'');", span="216-216"];
m10_136 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: throw new ArgumentNullException(''keyValuePairs'');", span="217-217"];
m10_137 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: string sql = @''\r\n;merge HangFire.Hash with (holdlock) as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="219-224"];
m10_138 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerSupervisorFacts.cs", label="AcquireHashLock()", span="226-226"];
m10_140 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="214-214"];
m10_149 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="232-232"];
m10_150 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ServerSupervisorFacts.cs", label="key == null", span="234-234"];
m10_154 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ServerSupervisorFacts.cs", label="QueueCommand(x => x.Execute(query, new { key }))", span="239-239"];
m10_151 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ServerSupervisorFacts.cs", label="throw new ArgumentNullException(''key'');", span="234-234"];
m10_152 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ServerSupervisorFacts.cs", label="string query = @''delete from HangFire.Hash where [Key] = @key''", span="236-236"];
m10_153 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ServerSupervisorFacts.cs", label="AcquireHashLock()", span="238-238"];
m10_155 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="232-232"];
m10_31 [cluster="System.DateTime.Add(System.TimeSpan)", file="ServerSupervisorFacts.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m10_32 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="72-72"];
m10_33 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="74-76"];
m10_34 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="72-72"];
m10_0 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", span="37-37"];
m10_1 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: storage == null", span="39-39"];
m10_3 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: _storage = storage", span="41-41"];
m10_2 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: throw new ArgumentNullException(''storage'');", span="39-39"];
m10_4 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", span="37-37"];
m10_185 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="265-265"];
m10_186 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="key == null", span="267-267"];
m10_190 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="273-273"];
m10_187 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="throw new ArgumentNullException(''key'');", span="267-267"];
m10_188 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="string query = @''\r\nupdate HangFire.[Hash] set ExpireAt = @expireAt where [Key] = @key''", span="269-270"];
m10_189 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="AcquireHashLock()", span="272-272"];
m10_191 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="265-265"];
m10_46 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m10_24 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="65-65"];
m10_25 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="67-69"];
m10_26 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="65-65"];
m10_242 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="328-328"];
m10_10 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="46-62"];
m10_11 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: connection.EnlistTransaction(Transaction.Current)", span="48-48"];
m10_13 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: connection.Execute(\r\n                        ''set nocount on;'' +\r\n                        ''exec sp_getapplock @Resource=@resource, @LockMode=N'Exclusive''',\r\n                        _lockedResources.Select(x => new { resource = x }))", span="52-55"];
m10_15 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: command(connection)", span="60-60"];
m10_12 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: _lockedResources.Count > 0", span="50-50"];
m10_14 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: _commandQueue", span="58-58"];
m10_21 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="55-55"];
m10_16 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="46-62"];
m10_22 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: new { resource = x }", span="55-55"];
m10_23 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="55-55"];
m10_29 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="67-69"];
m10_28 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="67-69"];
m10_30 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="67-69"];
m10_36 [cluster="lambda expression", color=red, community=1, file="ServerSupervisorFacts.cs", label="0: x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="74-76"];
m10_35 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="74-76"];
m10_37 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="74-76"];
m10_43 [cluster="lambda expression", color=red, community=1, file="ServerSupervisorFacts.cs", label="0: x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                })", span="86-96"];
m10_42 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="86-96"];
m10_44 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="86-96"];
m10_52 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                })", span="105-114"];
m10_51 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="105-114"];
m10_53 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="105-114"];
m10_62 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: persistentQueue.Enqueue(x, queue, jobId)", span="122-122"];
m10_61 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="122-122"];
m10_63 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="122-122"];
m10_69 [cluster="lambda expression", color=red, community=1, file="ServerSupervisorFacts.cs", label="0: x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="127-129"];
m10_68 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="127-129"];
m10_70 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="127-129"];
m10_75 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="134-136"];
m10_74 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="134-136"];
m10_76 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="134-136"];
m10_81 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="141-143"];
m10_80 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="141-143"];
m10_82 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="141-143"];
m10_87 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="148-150"];
m10_86 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="148-150"];
m10_88 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="148-150"];
m10_99 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="168-170"];
m10_98 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="168-170"];
m10_100 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="168-170"];
m10_107 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: x.Execute(\r\n                query,\r\n                new { key, value })", span="178-180"];
m10_106 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="178-180"];
m10_108 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="178-180"];
m10_115 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value);'',\r\n                new { key, value })", span="186-188"];
m10_114 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="186-188"];
m10_116 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="186-188"];
m10_122 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="194-196"];
m10_121 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="194-196"];
m10_123 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="194-196"];
m10_130 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="209-211"];
m10_129 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="209-211"];
m10_131 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="209-211"];
m10_144 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="x.Execute(\r\n                sql,\r\n                keyValuePairs.Select(y => new { key = key, field = y.Key, value = y.Value }))", span="227-229"];
m10_147 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="new { key = key, field = y.Key, value = y.Value }", span="229-229"];
m10_143 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="227-229"];
m10_145 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="227-229"];
m10_146 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="229-229"];
m10_148 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="229-229"];
m10_157 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="x.Execute(query, new { key })", span="239-239"];
m10_156 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="239-239"];
m10_158 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="239-239"];
m10_169 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="x.Execute(query, items.Select(value => new { key = key, value = value }).ToList())", span="252-252"];
m10_173 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="new { key = key, value = value }", span="252-252"];
m10_168 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="252-252"];
m10_170 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="252-252"];
m10_172 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="252-252"];
m10_174 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="252-252"];
m10_183 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="x.Execute(query, new { key = key })", span="262-262"];
m10_182 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="262-262"];
m10_184 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="262-262"];
m10_193 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="273-273"];
m10_192 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="273-273"];
m10_194 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="273-273"];
m10_203 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="284-284"];
m10_202 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="284-284"];
m10_204 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="284-284"];
m10_213 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="295-295"];
m10_212 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="295-295"];
m10_214 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="295-295"];
m10_223 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="x.Execute(query, new { key = key })", span="306-306"];
m10_222 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="306-306"];
m10_224 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="306-306"];
m10_233 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="x.Execute(query, new { key = key })", span="317-317"];
m10_232 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="317-317"];
m10_234 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="317-317"];
m10_243 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="x.Execute(query, new { key = key })", span="328-328"];
m10_244 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="328-328"];
m10_159 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="242-242"];
m10_160 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerSupervisorFacts.cs", label="key == null", span="244-244"];
m10_162 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerSupervisorFacts.cs", label="items == null", span="245-245"];
m10_166 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerSupervisorFacts.cs", label="QueueCommand(x => x.Execute(query, items.Select(value => new { key = key, value = value }).ToList()))", span="252-252"];
m10_161 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerSupervisorFacts.cs", label="throw new ArgumentNullException(''key'');", span="244-244"];
m10_163 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerSupervisorFacts.cs", label="throw new ArgumentNullException(''items'');", span="245-245"];
m10_164 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerSupervisorFacts.cs", label="string query = @''\r\ninsert into HangFire.[Set] ([Key], Value, Score)\r\nvalues (@key, @value, 0.0)''", span="247-249"];
m10_165 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerSupervisorFacts.cs", label="AcquireSetLock()", span="251-251"];
m10_167 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="242-242"];
m10_18 [cluster="Unk.Select", file="ServerSupervisorFacts.cs", label="Entry Unk.Select", span=""];
m10_258 [cluster="System.Collections.Generic.SortedSet<T>.Add(T)", file="ServerSupervisorFacts.cs", label="Entry System.Collections.Generic.SortedSet<T>.Add(T)", span="0-0"];
m10_171 [cluster="Unk.ToList", file="ServerSupervisorFacts.cs", label="Entry Unk.ToList", span=""];
m10_19 [cluster="Unk.Execute", file="ServerSupervisorFacts.cs", label="Entry Unk.Execute", span=""];
m10_142 [cluster="Unk.QueueCommand", file="ServerSupervisorFacts.cs", label="Entry Unk.QueueCommand", span=""];
m10_117 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="191-191"];
m10_118 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: AcquireListLock()", span="193-193"];
m10_119 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="194-196"];
m10_120 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="191-191"];
m10_113 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="336-336"];
m10_248 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="ServerSupervisorFacts.cs", label="AcquireLock(String.Format(''Hangfire:List:Lock''))", span="338-338"];
m10_249 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="336-336"];
m10_215 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="298-298"];
m10_216 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ServerSupervisorFacts.cs", label="key == null", span="300-300"];
m10_220 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ServerSupervisorFacts.cs", label="QueueCommand(x => x.Execute(query, new { key = key }))", span="306-306"];
m10_217 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ServerSupervisorFacts.cs", label="throw new ArgumentNullException(''key'');", span="300-300"];
m10_218 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ServerSupervisorFacts.cs", label="string query = @''\r\nupdate HangFire.Hash set ExpireAt = null where [Key] = @key''", span="302-303"];
m10_219 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ServerSupervisorFacts.cs", label="AcquireHashLock()", span="305-305"];
m10_221 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="298-298"];
m10_109 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="183-183"];
m10_110 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: AcquireListLock()", span="185-185"];
m10_111 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value);'',\r\n                new { key, value }))", span="186-188"];
m10_112 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="183-183"];
m10_124 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="199-199"];
m10_125 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: string trimSql = @''\r\n;with cte as (\r\n    select row_number() over (order by Id desc) as row_num, [Key] \r\n    from HangFire.List\r\n    where [Key] = @key)\r\ndelete from cte where row_num not between @start and @end''", span="201-206"];
m10_127 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="209-211"];
m10_126 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: AcquireListLock()", span="208-208"];
m10_128 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="199-199"];
m10_259 [file="ServerSupervisorFacts.cs", label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", span=""];
m10_260 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_261 [file="ServerSupervisorFacts.cs", label="System.TimeSpan", span=""];
m10_262 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_263 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_264 [file="ServerSupervisorFacts.cs", label="Hangfire.States.IState", span=""];
m10_265 [file="ServerSupervisorFacts.cs", label=addAndSetStateSql, span=""];
m10_266 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_267 [file="ServerSupervisorFacts.cs", label="Hangfire.States.IState", span=""];
m10_268 [file="ServerSupervisorFacts.cs", label=addStateSql, span=""];
m10_269 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_270 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_271 [file="ServerSupervisorFacts.cs", label=persistentQueue, span=""];
m10_272 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_273 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_274 [file="ServerSupervisorFacts.cs", label="System.TimeSpan", span=""];
m10_275 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_276 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_277 [file="ServerSupervisorFacts.cs", label="System.TimeSpan", span=""];
m10_278 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_279 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_280 [file="ServerSupervisorFacts.cs", label=double, span=""];
m10_281 [file="ServerSupervisorFacts.cs", label=addSql, span=""];
m10_282 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_283 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_284 [file="ServerSupervisorFacts.cs", label=query, span=""];
m10_285 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_286 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_287 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_288 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_289 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_290 [file="ServerSupervisorFacts.cs", label=int, span=""];
m10_291 [file="ServerSupervisorFacts.cs", label=int, span=""];
m10_292 [file="ServerSupervisorFacts.cs", label=trimSql, span=""];
m10_293 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_294 [file="ServerSupervisorFacts.cs", label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", span=""];
m10_295 [file="ServerSupervisorFacts.cs", label=sql, span=""];
m10_296 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_297 [file="ServerSupervisorFacts.cs", label=query, span=""];
m10_298 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_299 [file="ServerSupervisorFacts.cs", label="System.Collections.Generic.IList<string>", span=""];
m10_300 [file="ServerSupervisorFacts.cs", label=query, span=""];
m10_301 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_302 [file="ServerSupervisorFacts.cs", label=query, span=""];
m10_303 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_304 [file="ServerSupervisorFacts.cs", label="System.TimeSpan", span=""];
m10_305 [file="ServerSupervisorFacts.cs", label=query, span=""];
m10_306 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_307 [file="ServerSupervisorFacts.cs", label="System.TimeSpan", span=""];
m10_308 [file="ServerSupervisorFacts.cs", label=query, span=""];
m10_309 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_310 [file="ServerSupervisorFacts.cs", label="System.TimeSpan", span=""];
m10_311 [file="ServerSupervisorFacts.cs", label=query, span=""];
m10_312 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_313 [file="ServerSupervisorFacts.cs", label=query, span=""];
m10_314 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_315 [file="ServerSupervisorFacts.cs", label=query, span=""];
m10_316 [file="ServerSupervisorFacts.cs", label=string, span=""];
m10_317 [file="ServerSupervisorFacts.cs", label=query, span=""];
m11_0 [cluster="Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", file="ServerSupervisorOptions.cs", label="Entry Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", span="23-23"];
m11_1 [cluster="Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", color=red, community=0, file="ServerSupervisorOptions.cs", label="1: ShutdownTimeout = TimeSpan.FromMilliseconds(Timeout.Infinite)", span="25-25"];
m11_2 [cluster="Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", file="ServerSupervisorOptions.cs", label="Exit Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", span="23-23"];
m11_3 [cluster="System.TimeSpan.FromMilliseconds(double)", file="ServerSupervisorOptions.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m11_4 [file="ServerSupervisorOptions.cs", label="Hangfire.Server.ServerSupervisorOptions", span=""];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
d6 -> d16  [color=green, key=0, style=solid];
d6 -> d17  [color=green, key=2, style=dotted];
d5 -> d6  [color=green, key=0, style=solid];
d5 -> d7  [key=0, style=solid];
d16 -> d4  [color=blue, key=0, style=bold];
d13 -> d14  [color=green, key=0, style=solid];
d13 -> d25  [color=green, key=2, style=dotted];
d13 -> d26  [color=green, key=2, style=dotted];
d67 -> d13  [color=green, key=1, label="HangFire.Client.JobClient", style=dashed];
d67 -> d1  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
d67 -> d14  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
d67 -> d36  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
d67 -> d40  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
d67 -> d41  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
d67 -> d50  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
d12 -> d13  [color=green, key=0, style=solid];
d12 -> d24  [key=2, style=dotted];
d10 -> d13  [color=green, key=1, label=jobId, style=dashed];
d10 -> d11  [key=0, style=solid];
d10 -> d22  [key=2, style=dotted];
d10 -> d15  [color=darkseagreen4, key=1, label=jobId, style=dashed];
d11 -> d13  [color=green, key=1, label=state, style=dashed];
d11 -> d12  [key=0, style=solid];
d11 -> d23  [key=2, style=dotted];
d14 -> d15  [key=0, style=solid];
d14 -> d27  [key=2, style=dotted];
d54 -> d55  [color=green, key=0, style=solid];
d24 -> d54  [color=green, key=1, label="System.Type", style=dashed];
d24 -> d55  [color=green, key=1, label=object, style=dashed];
d24 -> d53  [key=0, style=solid];
d53 -> d54  [color=green, key=0, style=solid];
d53 -> d55  [color=green, key=1, label=job, style=dashed];
d53 -> d59  [key=2, style=dotted];
d53 -> d56  [color=darkseagreen4, key=1, label=job, style=dashed];
d53 -> d57  [color=darkseagreen4, key=1, label=job, style=dashed];
d55 -> d56  [color=green, key=0, style=solid];
d55 -> d60  [color=green, key=2, style=dotted];
d55 -> d61  [color=green, key=2, style=dotted];
d56 -> d57  [key=0, style=solid];
d56 -> d62  [key=2, style=dotted];
d4 -> d5  [key=0, style=solid];
d4 -> d12  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d4 -> d7  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d4 -> d8  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d4 -> d9  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d7 -> d8  [key=0, style=solid];
d7 -> d9  [key=0, style=solid];
d7 -> d18  [key=2, style=dotted];
d8 -> d16  [key=0, style=solid];
d8 -> d19  [key=2, style=dotted];
d8 -> d20  [key=2, style=dotted];
d15 -> d16  [key=0, style=solid];
d30 -> d17  [key=2, style=dotted];
d30 -> d43  [key=0, style=solid];
d1 -> d2  [key=0, style=solid];
d1 -> d3  [key=2, style=dotted];
d36 -> d4  [key=2, style=dotted];
d36 -> d43  [key=0, style=solid];
d40 -> d25  [key=2, style=dotted];
d40 -> d26  [key=2, style=dotted];
d40 -> d41  [key=0, style=solid];
d41 -> d42  [key=0, style=solid];
d41 -> d27  [key=2, style=dotted];
d50 -> d51  [key=0, style=solid];
d50 -> d52  [key=2, style=dotted];
d9 -> d10  [key=0, style=solid];
d9 -> d11  [color=darkseagreen4, key=1, label=queue, style=dashed];
d9 -> d21  [key=2, style=dotted];
d22 -> d63  [key=0, style=solid];
d39 -> d24  [key=2, style=dotted];
d39 -> d40  [key=0, style=solid];
d58 -> d24  [color=blue, key=0, style=bold];
d57 -> d58  [key=0, style=solid];
d29 -> d30  [key=0, style=solid];
d29 -> d31  [key=0, style=solid];
d43 -> d28  [color=blue, key=0, style=bold];
d0 -> d1  [key=0, style=solid];
d2 -> d0  [color=blue, key=0, style=bold];
d28 -> d36  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d28 -> d39  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d28 -> d29  [key=0, style=solid];
d28 -> d31  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d28 -> d32  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
d28 -> d33  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
d35 -> d36  [key=0, style=solid];
d35 -> d35  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
d35 -> d37  [key=0, style=solid];
d35 -> d46  [key=2, style=dotted];
d35 -> d38  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
d37 -> d40  [color=darkseagreen4, key=1, label=jobId, style=dashed];
d37 -> d22  [key=2, style=dotted];
d37 -> d38  [key=0, style=solid];
d37 -> d42  [color=darkseagreen4, key=1, label=jobId, style=dashed];
d38 -> d40  [color=darkseagreen4, key=1, label=state, style=dashed];
d38 -> d39  [key=0, style=solid];
d38 -> d47  [key=2, style=dotted];
d38 -> d48  [key=2, style=dotted];
d42 -> d43  [key=0, style=solid];
d49 -> d50  [key=0, style=solid];
d51 -> d49  [color=blue, key=0, style=bold];
d64 -> d22  [color=blue, key=0, style=bold];
d63 -> d64  [key=0, style=solid];
d63 -> d65  [key=2, style=dotted];
d63 -> d66  [key=2, style=dotted];
d31 -> d18  [key=2, style=dotted];
d31 -> d32  [key=0, style=solid];
d31 -> d33  [key=0, style=solid];
d32 -> d19  [key=2, style=dotted];
d32 -> d20  [key=2, style=dotted];
d32 -> d43  [key=0, style=solid];
d34 -> d43  [key=0, style=solid];
d34 -> d45  [key=2, style=dotted];
d33 -> d35  [key=0, style=solid];
d33 -> d34  [key=0, style=solid];
d33 -> d33  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
d33 -> d44  [key=2, style=dotted];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_6  [key=0, style=solid];
m0_5 -> m0_9  [key=0, style=solid];
m0_5 -> m0_10  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_8  [key=0, style=solid];
m0_6 -> m0_11  [key=2, style=dotted];
m0_7 -> m0_9  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_3  [color=blue, key=0, style=bold];
m0_12 -> m0_1  [color=darkseagreen4, key=1, label="HangFire.Web.CommandHandler", style=dashed];
m0_12 -> m0_4  [color=darkseagreen4, key=1, label="HangFire.Web.CommandHandler", style=dashed];
m0_12 -> m0_6  [color=darkseagreen4, key=1, label="HangFire.Web.CommandHandler", style=dashed];
m0_12 -> m0_7  [color=darkseagreen4, key=1, label="HangFire.Web.CommandHandler", style=dashed];
m0_12 -> m0_8  [color=darkseagreen4, key=1, label="HangFire.Web.CommandHandler", style=dashed];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_0 -> m1_5  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_0 -> m1_6  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_0 -> m1_7  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m1_0 -> m1_10  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_0 -> m1_11  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_0 -> m1_0  [color=darkorchid, key=3, label="method methodReturn HangFire.States.JobState OnStateChanged", style=bold];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_7  [key=0, style=solid];
m1_6 -> m1_12  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_14  [key=2, style=dotted];
m1_7 -> m1_15  [key=2, style=dotted];
m1_7 -> m1_9  [color=darkseagreen4, key=1, label=retryCount, style=dashed];
m1_7 -> m1_10  [color=darkseagreen4, key=1, label=retryCount, style=dashed];
m1_10 -> m1_12  [key=0, style=solid];
m1_10 -> m1_18  [key=2, style=dotted];
m1_10 -> m1_19  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_2 -> m1_12  [key=0, style=solid];
m1_2 -> d17  [key=2, style=dotted];
m1_4 -> m1_12  [key=0, style=solid];
m1_4 -> d17  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_11  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_16  [key=2, style=dotted];
m1_9 -> m1_17  [key=2, style=dotted];
m1_12 -> m1_0  [color=blue, key=0, style=bold];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [color=darkseagreen4, key=1, label=long, style=dashed];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_24  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_25  [key=2, style=dotted];
m1_22 -> m1_26  [key=2, style=dotted];
m1_22 -> m1_27  [key=2, style=dotted];
m1_23 -> m1_20  [color=blue, key=0, style=bold];
m1_28 -> m1_9  [color=darkseagreen4, key=1, label="HangFire.RetryJobsFilter", style=dashed];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_2  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [color=blue, key=0, style=bold];
m4_42 -> m4_43  [color=red, key=0, style=solid];
m4_42 -> m4_37  [color=green, key=0, style=solid];
m4_43 -> m4_44  [color=red, key=0, style=solid];
m4_43 -> m4_29  [color=red, key=2, style=dotted];
m4_43 -> m4_46  [color=red, key=1, label="lambda expression", style=dashed];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_30  [key=2, style=dotted];
m4_37 -> m4_44  [color=green, key=0, style=solid];
m4_37 -> m4_29  [color=green, key=2, style=dotted];
m4_37 -> m4_39  [color=green, key=1, label="lambda expression", style=dashed];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_30  [key=2, style=dotted];
m4_45 -> m4_42  [color=blue, key=0, style=bold];
m4_45 -> m4_46  [color=green, key=0, style=solid];
m4_45 -> m4_29  [key=2, style=dotted];
m4_69 -> m4_70  [key=0, style=solid];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_62  [key=2, style=dotted];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_63  [key=2, style=dotted];
m4_72 -> m4_73  [key=0, style=solid];
m4_72 -> m4_75  [key=2, style=dotted];
m4_72 -> m4_64  [key=2, style=dotted];
m4_72 -> m4_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_75  [key=2, style=dotted];
m4_73 -> m4_64  [key=2, style=dotted];
m4_73 -> m4_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_74 -> m4_69  [color=blue, key=0, style=bold];
m4_25 -> m4_26  [color=red, key=0, style=solid];
m4_25 -> m4_20  [color=green, key=0, style=solid];
m4_26 -> m4_27  [color=red, key=0, style=solid];
m4_26 -> m4_29  [color=red, key=2, style=dotted];
m4_26 -> m4_31  [color=red, key=1, label="lambda expression", style=dashed];
m4_26 -> m4_33  [color=green, key=0, style=solid];
m4_26 -> m4_34  [color=green, key=2, style=dotted];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_30  [key=2, style=dotted];
m4_20 -> m4_27  [color=green, key=0, style=solid];
m4_20 -> m4_29  [color=green, key=2, style=dotted];
m4_20 -> m4_18  [color=green, key=1, label="lambda expression", style=dashed];
m4_20 -> m4_21  [color=green, key=0, style=bold];
m4_28 -> m4_25  [color=blue, key=0, style=bold];
m4_30 -> m4_37  [color=green, key=0, style=solid];
m4_30 -> m4_29  [color=green, key=2, style=dotted];
m4_30 -> m4_31  [color=green, key=1, label="lambda expression", style=dashed];
m4_109 -> m4_110  [color=red, key=0, style=solid];
m4_110 -> m4_111  [color=red, key=0, style=solid];
m4_110 -> m4_16  [color=red, key=2, style=dotted];
m4_110 -> m4_29  [color=red, key=2, style=dotted];
m4_110 -> m4_115  [color=red, key=1, label="lambda expression", style=dashed];
m4_111 -> m4_112  [color=red, key=0, style=solid];
m4_111 -> m4_62  [color=red, key=2, style=dotted];
m4_111 -> m4_119  [color=red, key=1, label=server, style=dashed];
m4_111 -> m4_125  [color=green, key=0, style=solid];
m4_111 -> m4_34  [color=green, key=2, style=dotted];
m4_112 -> m4_113  [color=red, key=0, style=solid];
m4_112 -> m4_29  [color=red, key=2, style=dotted];
m4_112 -> m4_118  [color=red, key=1, label="lambda expression", style=dashed];
m4_113 -> m4_114  [color=green, key=0, style=solid];
m4_113 -> m4_64  [color=red, key=2, style=dotted];
m4_113 -> m4_121  [color=red, key=1, label="lambda expression", style=dashed];
m4_113 -> m4_117  [color=green, key=2, style=dotted];
m4_113 -> m4_115  [color=green, key=1, label=mock, style=dashed];
m4_114 -> m4_109  [color=blue, key=0, style=bold];
m4_114 -> m4_115  [color=green, key=0, style=solid];
m4_114 -> m4_118  [color=green, key=2, style=dotted];
m4_92 -> m4_93  [key=0, style=solid];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_62  [key=2, style=dotted];
m4_93 -> m4_99  [color=green, key=0, style=solid];
m4_93 -> m4_95  [color=green, key=2, style=dotted];
m4_94 -> m4_95  [color=red, key=0, style=solid];
m4_94 -> m4_63  [key=2, style=dotted];
m4_95 -> m4_96  [color=red, key=0, style=solid];
m4_95 -> m4_64  [color=red, key=2, style=dotted];
m4_95 -> m4_97  [color=red, key=1, label="lambda expression", style=dashed];
m4_96 -> m4_92  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_9  [key=2, style=dotted];
m4_2 -> m4_3  [color=red, key=0, style=solid];
m4_2 -> m4_10  [key=2, style=dotted];
m4_2 -> m4_5  [color=green, key=0, style=solid];
m4_3 -> m4_4  [color=red, key=0, style=solid];
m4_3 -> m4_11  [color=red, key=2, style=dotted];
m4_4 -> m4_5  [color=green, key=0, style=solid];
m4_4 -> m4_12  [color=red, key=2, style=dotted];
m4_4 -> m4_11  [color=green, key=2, style=dotted];
m4_5 -> m4_6  [color=red, key=0, style=solid];
m4_5 -> m4_13  [key=2, style=dotted];
m4_5 -> m4_4  [color=green, key=0, style=solid];
m4_5 -> m4_7  [color=green, key=0, style=solid];
m4_5 -> m4_12  [color=green, key=2, style=dotted];
m4_6 -> m4_7  [color=red, key=0, style=solid];
m4_6 -> m4_14  [color=red, key=2, style=dotted];
m4_6 -> m4_15  [color=red, key=2, style=dotted];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_16  [key=2, style=dotted];
m4_7 -> m4_17  [key=2, style=dotted];
m4_7 -> m4_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_8 -> m4_0  [color=blue, key=0, style=bold];
m4_77 -> m4_78  [color=green, key=0, style=solid];
m4_77 -> m4_24  [key=2, style=dotted];
m4_77 -> m4_23  [color=green, key=0, style=solid];
m4_78 -> m4_79  [color=green, key=0, style=solid];
m4_78 -> m4_86  [color=green, key=2, style=dotted];
m4_78 -> m4_83  [color=green, key=1, label=component1, style=dashed];
m4_78 -> m4_76  [color=blue, key=0, style=bold];
m4_79 -> m4_80  [color=green, key=0, style=solid];
m4_79 -> m4_16  [color=green, key=2, style=dotted];
m4_79 -> m4_87  [color=green, key=2, style=dotted];
m4_79 -> m4_88  [color=green, key=1, label="lambda expression", style=dashed];
m4_79 -> m4_97  [color=green, key=1, label="lambda expression", style=dashed];
m4_83 -> m4_84  [color=red, key=0, style=solid];
m4_83 -> m4_64  [color=green, key=2, style=dotted];
m4_83 -> m4_115  [color=green, key=1, label="lambda expression", style=dashed];
m4_80 -> m4_81  [color=green, key=0, style=solid];
m4_80 -> m4_86  [color=green, key=2, style=dotted];
m4_80 -> m4_84  [color=green, key=1, label=component2, style=dashed];
m4_80 -> d52  [key=2, style=dotted];
m4_82 -> m4_83  [color=green, key=0, style=solid];
m4_82 -> m4_63  [key=2, style=dotted];
m4_84 -> m4_85  [color=red, key=0, style=solid];
m4_84 -> m4_64  [color=green, key=2, style=dotted];
m4_84 -> m4_105  [color=green, key=1, label="lambda expression", style=dashed];
m4_84 -> m4_62  [color=red, key=2, style=dotted];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_62  [key=2, style=dotted];
m4_81 -> m4_79  [color=blue, key=0, style=bold];
m4_85 -> m4_77  [color=blue, key=0, style=bold];
m4_85 -> m4_86  [color=red, key=0, style=solid];
m4_85 -> m4_63  [color=red, key=2, style=dotted];
m4_50 -> m4_51  [key=0, style=solid];
m4_51 -> m4_52  [color=red, key=0, style=solid];
m4_51 -> m4_29  [key=2, style=dotted];
m4_51 -> m4_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_52 -> m4_53  [color=red, key=0, style=solid];
m4_52 -> m4_30  [color=red, key=2, style=dotted];
m4_53 -> m4_50  [color=blue, key=0, style=bold];
m4_62 -> m4_124  [color=red, key=0, style=solid];
m4_62 -> m4_111  [color=green, key=0, style=solid];
m4_124 -> m4_125  [color=red, key=0, style=solid];
m4_124 -> m4_34  [color=red, key=2, style=dotted];
m4_125 -> m4_62  [color=blue, key=0, style=bold];
m4_86 -> m4_113  [color=green, key=0, style=solid];
m4_86 -> m4_87  [color=red, key=0, style=solid];
m4_86 -> m4_64  [color=red, key=2, style=dotted];
m4_86 -> m4_88  [color=red, key=1, label="lambda expression", style=dashed];
m4_115 -> m4_116  [color=red, key=0, style=solid];
m4_115 -> m4_97  [color=green, key=0, style=solid];
m4_116 -> m4_86  [color=blue, key=0, style=bold];
m4_116 -> m4_117  [color=red, key=0, style=solid];
m4_116 -> d52  [color=red, key=2, style=dotted];
m4_118 -> m4_119  [color=red, key=0, style=solid];
m4_118 -> m4_106  [color=green, key=0, style=solid];
m4_100 -> m4_101  [key=0, style=solid];
m4_100 -> m4_120  [color=green, key=0, style=solid];
m4_100 -> m4_91  [color=green, key=2, style=dotted];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_62  [key=2, style=dotted];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_63  [key=2, style=dotted];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_64  [key=2, style=dotted];
m4_103 -> m4_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_103 -> m4_118  [color=green, key=1, label="lambda expression", style=dashed];
m4_104 -> m4_100  [color=blue, key=0, style=bold];
m4_35 -> m4_36  [color=red, key=0, style=solid];
m4_35 -> m4_30  [color=green, key=0, style=solid];
m4_36 -> m4_37  [color=red, key=0, style=solid];
m4_36 -> m4_29  [color=red, key=2, style=dotted];
m4_36 -> m4_39  [color=red, key=1, label="lambda expression", style=dashed];
m4_38 -> m4_35  [color=blue, key=0, style=bold];
m4_57 -> m4_58  [key=0, style=solid];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_62  [key=2, style=dotted];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_63  [key=2, style=dotted];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_64  [key=2, style=dotted];
m4_60 -> m4_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_61 -> m4_57  [color=blue, key=0, style=bold];
m4_34 -> m4_41  [color=green, key=0, style=solid];
m4_34 -> m4_34  [color=green, key=2, style=dotted];
m4_117 -> m4_115  [color=blue, key=0, style=bold];
m4_121 -> m4_122  [color=red, key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_18 -> m4_19  [color=red, key=0, style=solid];
m4_18 -> m4_26  [color=green, key=0, style=solid];
m4_19 -> m4_20  [color=red, key=0, style=solid];
m4_22 -> m4_23  [color=red, key=0, style=solid];
m4_22 -> m4_24  [key=2, style=dotted];
m4_22 -> m4_20  [color=green, key=0, style=solid];
m4_23 -> m4_21  [color=blue, key=0, style=bold];
m4_23 -> m4_76  [color=green, key=0, style=bold];
m4_31 -> m4_32  [color=red, key=0, style=solid];
m4_31 -> m4_34  [color=green, key=0, style=solid];
m4_32 -> m4_33  [color=red, key=0, style=solid];
m4_32 -> m4_34  [color=red, key=2, style=dotted];
m4_33 -> m4_31  [color=blue, key=0, style=bold];
m4_33 -> m4_18  [color=green, key=0, style=bold];
m4_39 -> m4_40  [color=red, key=0, style=solid];
m4_39 -> m4_41  [color=green, key=0, style=solid];
m4_40 -> m4_41  [color=red, key=0, style=solid];
m4_40 -> m4_34  [color=red, key=2, style=dotted];
m4_41 -> m4_39  [color=blue, key=0, style=bold];
m4_41 -> m4_31  [color=green, key=0, style=bold];
m4_41 -> m4_48  [color=green, key=0, style=solid];
m4_41 -> m4_43  [color=green, key=2, style=dotted];
m4_46 -> m4_47  [color=green, key=0, style=solid];
m4_46 -> m4_55  [color=green, key=0, style=solid];
m4_46 -> m4_30  [color=green, key=2, style=dotted];
m4_47 -> m4_48  [color=red, key=0, style=solid];
m4_47 -> m4_49  [color=red, key=2, style=dotted];
m4_47 -> m4_44  [color=blue, key=0, style=bold];
m4_48 -> m4_46  [color=blue, key=0, style=bold];
m4_48 -> m4_39  [color=green, key=0, style=bold];
m4_54 -> m4_55  [key=0, style=solid];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_34  [key=2, style=dotted];
m4_56 -> m4_54  [color=blue, key=0, style=bold];
m4_56 -> m4_46  [color=green, key=0, style=bold];
m4_65 -> m4_66  [key=0, style=solid];
m4_66 -> m4_67  [key=0, style=solid];
m4_66 -> m4_68  [key=2, style=dotted];
m4_67 -> m4_65  [color=blue, key=0, style=bold];
m4_76 -> m4_77  [key=0, style=solid];
m4_88 -> m4_89  [color=green, key=0, style=solid];
m4_89 -> m4_90  [color=green, key=0, style=solid];
m4_89 -> m4_91  [color=green, key=2, style=dotted];
m4_89 -> m4_29  [color=green, key=2, style=dotted];
m4_90 -> m4_88  [color=blue, key=0, style=bold];
m4_97 -> m4_98  [color=red, key=0, style=solid];
m4_97 -> m4_93  [color=green, key=0, style=solid];
m4_97 -> m4_117  [color=green, key=0, style=solid];
m4_97 -> m4_91  [color=green, key=2, style=dotted];
m4_98 -> m4_99  [color=red, key=0, style=solid];
m4_98 -> d52  [color=red, key=2, style=dotted];
m4_99 -> m4_97  [color=blue, key=0, style=bold];
m4_105 -> m4_106  [color=red, key=0, style=solid];
m4_105 -> m4_100  [color=green, key=0, style=solid];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_108  [key=2, style=dotted];
m4_107 -> m4_105  [color=blue, key=0, style=bold];
m4_107 -> m4_118  [color=green, key=0, style=bold];
m4_119 -> m4_120  [color=red, key=0, style=solid];
m4_119 -> m4_63  [color=red, key=2, style=dotted];
m4_120 -> m4_118  [color=blue, key=0, style=bold];
m4_120 -> m4_105  [color=green, key=0, style=bold];
m4_122 -> m4_123  [color=red, key=0, style=solid];
m4_122 -> m4_29  [color=red, key=2, style=dotted];
m4_122 -> m4_108  [color=red, key=2, style=dotted];
m4_123 -> m4_121  [color=blue, key=0, style=bold];
m4_87 -> m4_83  [color=blue, key=0, style=bold];
m4_126 -> m4_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_3  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_4  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_19  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_5  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_6  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_26  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_32  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_36  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_40  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_43  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_47  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_51  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_55  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_58  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_59  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_60  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_66  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_70  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_71  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_72  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_84  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_85  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_86  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_93  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_94  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_95  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_101  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_102  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_103  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_110  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_111  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_112  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_119  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_113  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_124  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_20  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_30  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_34  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_37  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_41  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_78  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_83  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_80  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_97  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_100  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_114  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_45  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_82  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_126 -> m4_81  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m4_127 -> m4_119  [color=red, key=1, label=server, style=dashed];
m5_21 -> m5_27  [key=0, style=solid];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_29  [key=0, style=solid];
m5_28 -> m5_29  [key=0, style=solid];
m5_29 -> m5_21  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [color=green, key=0, style=solid];
m5_0 -> m5_3  [color=red, key=1, label="Hangfire.Server.IServerComponent", style=dashed];
m5_0 -> m5_8  [color=darkseagreen4, key=1, label="Hangfire.Server.IServerComponent", style=dashed];
m5_1 -> m5_2  [color=green, key=0, style=solid];
m5_1 -> m5_3  [color=red, key=0, style=solid];
m5_1 -> m5_4  [color=green, key=2, style=dotted];
m5_3 -> m5_4  [color=red, key=0, style=solid];
m5_3 -> m5_6  [color=red, key=2, style=dotted];
m5_3 -> m5_7  [color=red, key=1, label="lambda expression", style=dashed];
m5_2 -> m5_4  [key=0, style=solid];
m5_2 -> d17  [key=2, style=dotted];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_4 -> m5_0  [color=blue, key=0, style=bold];
m5_7 -> m5_8  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_10  [key=2, style=dotted];
m5_9 -> m5_7  [color=blue, key=0, style=bold];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_12  [color=darkseagreen4, key=1, label="Hangfire.Server.IServerComponent", style=dashed];
m5_10 -> m5_13  [color=darkseagreen4, key=1, label="Hangfire.Server.IServerComponent", style=dashed];
m5_10 -> m5_14  [color=darkseagreen4, key=1, label="Hangfire.Server.IServerComponent", style=dashed];
m5_10 -> m5_17  [color=darkseagreen4, key=1, label="Hangfire.Server.IServerComponent", style=dashed];
m5_10 -> m5_18  [color=darkseagreen4, key=1, label="Hangfire.Server.IServerComponent", style=dashed];
m5_10 -> m5_0  [color=darkorchid, key=3, label="Parameter variable System.Threading.CancellationToken cancellationToken", style=bold];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_20  [key=2, style=dotted];
m5_11 -> m5_21  [key=2, style=dotted];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_20  [key=2, style=dotted];
m5_12 -> m5_22  [key=2, style=dotted];
m5_12 -> m5_17  [color=darkseagreen4, key=1, label=logger, style=dashed];
m5_12 -> m5_18  [color=darkseagreen4, key=1, label=logger, style=dashed];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_23  [key=2, style=dotted];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_16  [key=0, style=solid];
m5_14 -> m5_18  [key=0, style=solid];
m5_14 -> m5_24  [key=2, style=dotted];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_25  [key=2, style=dotted];
m5_17 -> m5_26  [key=2, style=dotted];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_23  [key=2, style=dotted];
m5_15 -> m5_18  [key=0, style=solid];
m5_16 -> m5_17  [key=0, style=solid];
m5_19 -> m5_10  [color=blue, key=0, style=bold];
m5_30 -> m5_8  [color=darkseagreen4, key=1, label="Hangfire.Server.IServerComponent", style=dashed];
m5_31 -> m5_8  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m6_6 -> m6_7  [key=0, style=solid];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_10  [key=2, style=dotted];
m6_7 -> m6_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_11  [key=2, style=dotted];
m6_9 -> m6_6  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_4  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_5  [key=2, style=dotted];
m6_3 -> m6_0  [color=blue, key=0, style=bold];
m6_35 -> m6_36  [key=0, style=solid];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_40  [key=2, style=dotted];
m6_36 -> m6_10  [key=2, style=dotted];
m6_36 -> m6_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_21  [key=2, style=dotted];
m6_37 -> m6_46  [color=darkseagreen4, key=1, label=task, style=dashed];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_41  [key=2, style=dotted];
m6_38 -> m6_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_39 -> m6_35  [color=blue, key=0, style=bold];
m6_45 -> m6_46  [key=0, style=solid];
m6_12 -> m6_13  [key=0, style=solid];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_15  [key=2, style=dotted];
m6_14 -> m6_12  [color=blue, key=0, style=bold];
m6_31 -> m6_32  [key=0, style=solid];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_34  [key=2, style=dotted];
m6_33 -> m6_31  [color=blue, key=0, style=bold];
m6_42 -> m6_43  [key=0, style=solid];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_29  [key=2, style=dotted];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_10  [key=2, style=dotted];
m6_43 -> m6_34  [key=2, style=dotted];
m6_44 -> m6_42  [color=blue, key=0, style=bold];
m6_47 -> m6_45  [color=blue, key=0, style=bold];
m6_24 -> m6_25  [key=0, style=solid];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_21  [key=2, style=dotted];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_29  [key=2, style=dotted];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_30  [key=2, style=dotted];
m6_27 -> m6_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_28 -> m6_24  [color=blue, key=0, style=bold];
m6_16 -> m6_17  [key=0, style=solid];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_21  [key=2, style=dotted];
m6_17 -> m6_19  [color=red, key=1, label=task, style=dashed];
m6_18 -> m6_19  [color=red, key=0, style=solid];
m6_18 -> m6_22  [key=2, style=dotted];
m6_18 -> m6_23  [key=2, style=dotted];
m6_19 -> m6_20  [color=red, key=0, style=solid];
m6_19 -> m6_22  [color=red, key=2, style=dotted];
m6_19 -> m6_23  [color=red, key=2, style=dotted];
m6_20 -> m6_16  [color=blue, key=0, style=bold];
m6_48 -> m6_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", style=dashed];
m6_48 -> m6_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", style=dashed];
m6_48 -> m6_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", style=dashed];
m6_48 -> m6_13  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", style=dashed];
m6_48 -> m6_17  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", style=dashed];
m6_48 -> m6_25  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", style=dashed];
m6_48 -> m6_27  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", style=dashed];
m6_48 -> m6_32  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", style=dashed];
m6_48 -> m6_36  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", style=dashed];
m6_48 -> m6_37  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", style=dashed];
m6_49 -> m6_46  [color=darkseagreen4, key=1, label=task, style=dashed];
m8_26 -> m8_27  [key=0, style=solid];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_29  [key=2, style=dotted];
m8_28 -> m8_26  [color=blue, key=0, style=bold];
m8_22 -> m8_23  [key=0, style=solid];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_25  [key=2, style=dotted];
m8_24 -> m8_22  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [color=red, key=0, style=solid];
m8_0 -> m8_2  [color=red, key=1, label=object, style=dashed];
m8_0 -> m8_3  [color=red, key=1, label=long, style=dashed];
m8_0 -> m8_4  [color=red, key=1, label=long, style=dashed];
m8_1 -> m8_2  [color=red, key=0, style=solid];
m8_2 -> m8_3  [color=red, key=0, style=solid];
m8_3 -> m8_4  [color=red, key=0, style=solid];
m8_4 -> m8_5  [color=red, key=0, style=solid];
m8_5 -> m8_0  [color=blue, key=0, style=bold];
m8_6 -> m8_7  [key=0, style=solid];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> d59  [key=2, style=dotted];
m8_7 -> m8_18  [key=2, style=dotted];
m8_7 -> m8_19  [key=2, style=dotted];
m8_7 -> m8_14  [color=darkseagreen4, key=1, label=data, style=dashed];
m8_7 -> m8_15  [color=darkseagreen4, key=1, label=data, style=dashed];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_15  [key=0, style=solid];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_21  [key=2, style=dotted];
m8_15 -> m8_16  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_13  [key=0, style=solid];
m8_10 -> m8_20  [key=2, style=dotted];
m8_11 -> m8_12  [key=0, style=solid];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_15  [key=0, style=solid];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_14  [color=darkseagreen4, key=1, label=serializedResult, style=dashed];
m8_16 -> m8_6  [color=blue, key=0, style=bold];
m8_30 -> m8_1  [color=red, key=1, label="Hangfire.States.SucceededState", style=dashed];
m8_30 -> m8_2  [color=red, key=1, label="Hangfire.States.SucceededState", style=dashed];
m8_30 -> m8_3  [color=red, key=1, label="Hangfire.States.SucceededState", style=dashed];
m8_30 -> m8_4  [color=red, key=1, label="Hangfire.States.SucceededState", style=dashed];
m8_30 -> m8_7  [color=darkseagreen4, key=1, label="Hangfire.States.SucceededState", style=dashed];
m8_30 -> m8_8  [color=darkseagreen4, key=1, label="Hangfire.States.SucceededState", style=dashed];
m8_30 -> m8_10  [color=darkseagreen4, key=1, label="Hangfire.States.SucceededState", style=dashed];
m9_96 -> m9_97  [color=red, key=0, style=solid];
m9_97 -> m9_98  [color=red, key=0, style=solid];
m9_97 -> m9_81  [color=red, key=2, style=dotted];
m9_97 -> m9_102  [color=red, key=1, label=client, style=dashed];
m9_98 -> m9_99  [color=red, key=0, style=solid];
m9_98 -> m9_36  [color=red, key=2, style=dotted];
m9_98 -> m9_101  [color=red, key=1, label="lambda expression", style=dashed];
m9_99 -> m9_100  [color=red, key=0, style=solid];
m9_99 -> m9_37  [color=red, key=2, style=dotted];
m9_100 -> m9_96  [color=blue, key=0, style=bold];
m9_56 -> m9_57  [color=red, key=0, style=solid];
m9_57 -> m9_58  [color=red, key=0, style=solid];
m9_57 -> m9_12  [color=red, key=2, style=dotted];
m9_58 -> m9_59  [color=red, key=0, style=solid];
m9_58 -> m9_60  [color=red, key=2, style=dotted];
m9_58 -> m9_61  [color=red, key=1, label="lambda expression", style=dashed];
m9_59 -> m9_56  [color=blue, key=0, style=bold];
m9_136 -> m9_137  [color=red, key=0, style=solid];
m9_137 -> m9_138  [color=red, key=0, style=solid];
m9_137 -> m9_81  [color=red, key=2, style=dotted];
m9_137 -> m9_142  [color=red, key=1, label=client, style=dashed];
m9_138 -> m9_139  [color=red, key=0, style=solid];
m9_138 -> m9_36  [color=red, key=2, style=dotted];
m9_138 -> m9_141  [color=red, key=1, label="lambda expression", style=dashed];
m9_139 -> m9_140  [color=red, key=0, style=solid];
m9_139 -> m9_37  [color=red, key=2, style=dotted];
m9_140 -> m9_136  [color=blue, key=0, style=bold];
m9_77 -> m9_78  [color=red, key=0, style=solid];
m9_78 -> m9_79  [color=red, key=0, style=solid];
m9_78 -> m9_81  [color=red, key=2, style=dotted];
m9_79 -> m9_80  [color=red, key=0, style=solid];
m9_79 -> m9_82  [color=red, key=2, style=dotted];
m9_79 -> m9_83  [color=red, key=1, label="lambda expression", style=dashed];
m9_80 -> m9_77  [color=blue, key=0, style=bold];
m9_122 -> m9_123  [color=red, key=0, style=solid];
m9_123 -> m9_124  [color=red, key=0, style=solid];
m9_123 -> m9_81  [color=red, key=2, style=dotted];
m9_123 -> m9_125  [color=red, key=1, label=client, style=dashed];
m9_123 -> m9_134  [color=red, key=1, label=client, style=dashed];
m9_124 -> m9_125  [color=red, key=0, style=solid];
m9_124 -> m9_13  [color=red, key=2, style=dotted];
m9_124 -> m9_36  [color=red, key=2, style=dotted];
m9_124 -> m9_130  [color=red, key=1, label="lambda expression", style=dashed];
m9_125 -> m9_126  [color=red, key=0, style=solid];
m9_125 -> m9_36  [color=red, key=2, style=dotted];
m9_125 -> m9_133  [color=red, key=1, label="lambda expression", style=dashed];
m9_125 -> m9_127  [color=red, key=1, label=exception, style=dashed];
m9_126 -> m9_127  [color=red, key=0, style=solid];
m9_126 -> m9_129  [color=red, key=2, style=dotted];
m9_127 -> m9_128  [color=red, key=0, style=solid];
m9_127 -> m9_36  [color=red, key=2, style=dotted];
m9_128 -> m9_122  [color=blue, key=0, style=bold];
m9_145 -> m9_146  [key=0, style=solid];
m9_146 -> m9_147  [key=0, style=solid];
m9_146 -> m9_81  [key=2, style=dotted];
m9_146 -> m9_151  [color=darkseagreen4, key=1, label=client, style=dashed];
m9_147 -> m9_148  [key=0, style=solid];
m9_147 -> m9_36  [key=2, style=dotted];
m9_147 -> m9_150  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_148 -> m9_149  [key=0, style=solid];
m9_148 -> m9_37  [key=2, style=dotted];
m9_149 -> m9_145  [color=blue, key=0, style=bold];
m9_154 -> m9_155  [key=0, style=solid];
m9_155 -> m9_156  [key=0, style=solid];
m9_155 -> m9_81  [key=2, style=dotted];
m9_156 -> m9_157  [key=0, style=solid];
m9_156 -> m9_144  [key=2, style=dotted];
m9_157 -> m9_158  [key=0, style=solid];
m9_157 -> m9_82  [key=2, style=dotted];
m9_157 -> m9_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_158 -> m9_154  [color=blue, key=0, style=bold];
m9_104 -> m9_105  [color=red, key=0, style=solid];
m9_105 -> m9_106  [color=red, key=0, style=solid];
m9_105 -> m9_81  [color=red, key=2, style=dotted];
m9_105 -> m9_110  [color=red, key=1, label=client, style=dashed];
m9_106 -> m9_107  [color=red, key=0, style=solid];
m9_106 -> m9_36  [color=red, key=2, style=dotted];
m9_106 -> m9_109  [color=red, key=1, label="lambda expression", style=dashed];
m9_107 -> m9_108  [color=red, key=0, style=solid];
m9_107 -> m9_37  [color=red, key=2, style=dotted];
m9_108 -> m9_104  [color=blue, key=0, style=bold];
m9_163 -> m9_164  [key=0, style=solid];
m9_164 -> m9_165  [key=0, style=solid];
m9_164 -> m9_81  [key=2, style=dotted];
m9_165 -> m9_166  [key=0, style=solid];
m9_165 -> m9_144  [key=2, style=dotted];
m9_166 -> m9_167  [key=0, style=solid];
m9_166 -> m9_82  [key=2, style=dotted];
m9_166 -> m9_168  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_167 -> m9_163  [color=blue, key=0, style=bold];
m9_171 -> m9_172  [key=0, style=solid];
m9_172 -> m9_173  [key=0, style=solid];
m9_172 -> m9_13  [key=2, style=dotted];
m9_172 -> m9_14  [key=2, style=dotted];
m9_172 -> m9_178  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_173 -> m9_174  [key=0, style=solid];
m9_173 -> m9_81  [key=2, style=dotted];
m9_174 -> m9_175  [key=0, style=solid];
m9_174 -> m9_144  [key=2, style=dotted];
m9_175 -> m9_176  [key=0, style=solid];
m9_175 -> m9_177  [key=2, style=dotted];
m9_176 -> m9_171  [color=blue, key=0, style=bold];
m9_86 -> m9_87  [color=red, key=0, style=solid];
m9_87 -> m9_88  [color=red, key=0, style=solid];
m9_87 -> m9_81  [color=red, key=2, style=dotted];
m9_88 -> m9_89  [color=red, key=0, style=solid];
m9_88 -> m9_91  [color=red, key=2, style=dotted];
m9_89 -> m9_90  [color=red, key=0, style=solid];
m9_89 -> m9_82  [color=red, key=2, style=dotted];
m9_89 -> m9_92  [color=red, key=1, label="lambda expression", style=dashed];
m9_90 -> m9_86  [color=blue, key=0, style=bold];
m9_65 -> m9_66  [color=red, key=0, style=solid];
m9_65 -> m9_78  [color=red, key=3, label="Local variable System.Collections.Generic.Dictionary<string, string> job", style=bold];
m9_66 -> m9_67  [color=red, key=0, style=solid];
m9_66 -> m9_60  [color=red, key=2, style=dotted];
m9_66 -> m9_68  [color=red, key=1, label="lambda expression", style=dashed];
m9_67 -> m9_65  [color=blue, key=0, style=bold];
m9_81 -> m9_182  [key=0, style=solid];
m9_182 -> m9_183  [key=0, style=solid];
m9_182 -> m9_41  [key=2, style=dotted];
m9_183 -> m9_81  [color=blue, key=0, style=bold];
m9_71 -> m9_72  [color=red, key=0, style=solid];
m9_72 -> m9_73  [color=red, key=0, style=solid];
m9_72 -> m9_60  [color=red, key=2, style=dotted];
m9_72 -> m9_74  [color=red, key=1, label="lambda expression", style=dashed];
m9_73 -> m9_71  [color=blue, key=0, style=bold];
m9_178 -> m9_179  [key=0, style=solid];
m9_20 -> m9_21  [color=red, key=0, style=solid];
m9_24 -> m9_25  [color=red, key=0, style=solid];
m9_28 -> m9_29  [color=red, key=0, style=solid];
m9_21 -> m9_22  [color=red, key=0, style=solid];
m9_21 -> m9_23  [color=red, key=2, style=dotted];
m9_22 -> m9_20  [color=blue, key=0, style=bold];
m9_25 -> m9_26  [color=red, key=0, style=solid];
m9_25 -> m9_27  [color=red, key=2, style=dotted];
m9_26 -> m9_24  [color=blue, key=0, style=bold];
m9_29 -> m9_30  [color=red, key=0, style=solid];
m9_29 -> m9_31  [color=red, key=2, style=dotted];
m9_30 -> m9_28  [color=blue, key=0, style=bold];
m9_38 -> m9_39  [color=red, key=0, style=solid];
m9_39 -> m9_40  [color=red, key=0, style=solid];
m9_39 -> m9_41  [color=red, key=2, style=dotted];
m9_40 -> m9_38  [color=blue, key=0, style=bold];
m9_46 -> m9_47  [color=red, key=0, style=solid];
m9_47 -> m9_48  [color=red, key=0, style=solid];
m9_47 -> m9_41  [color=red, key=2, style=dotted];
m9_48 -> m9_46  [color=blue, key=0, style=bold];
m9_53 -> m9_54  [color=red, key=0, style=solid];
m9_54 -> m9_55  [color=red, key=0, style=solid];
m9_54 -> m9_41  [color=red, key=2, style=dotted];
m9_55 -> m9_53  [color=blue, key=0, style=bold];
m9_61 -> m9_62  [color=red, key=0, style=solid];
m9_62 -> m9_63  [color=red, key=0, style=solid];
m9_62 -> m9_64  [color=red, key=2, style=dotted];
m9_63 -> m9_61  [color=blue, key=0, style=bold];
m9_68 -> m9_69  [color=red, key=0, style=solid];
m9_69 -> m9_70  [color=red, key=0, style=solid];
m9_69 -> m9_41  [color=red, key=2, style=dotted];
m9_70 -> m9_68  [color=blue, key=0, style=bold];
m9_74 -> m9_75  [color=red, key=0, style=solid];
m9_75 -> m9_76  [color=red, key=0, style=solid];
m9_75 -> m9_41  [color=red, key=2, style=dotted];
m9_76 -> m9_74  [color=blue, key=0, style=bold];
m9_83 -> m9_84  [color=red, key=0, style=solid];
m9_84 -> m9_85  [color=red, key=0, style=solid];
m9_84 -> m9_23  [color=red, key=2, style=dotted];
m9_85 -> m9_83  [color=blue, key=0, style=bold];
m9_92 -> m9_93  [color=red, key=0, style=solid];
m9_93 -> m9_94  [color=red, key=0, style=solid];
m9_93 -> d52  [color=red, key=2, style=dotted];
m9_94 -> m9_92  [color=blue, key=0, style=bold];
m9_102 -> m9_103  [color=red, key=0, style=solid];
m9_102 -> m9_27  [color=red, key=2, style=dotted];
m9_101 -> m9_102  [color=red, key=0, style=solid];
m9_103 -> m9_101  [color=blue, key=0, style=bold];
m9_110 -> m9_111  [color=red, key=0, style=solid];
m9_110 -> m9_112  [color=red, key=2, style=dotted];
m9_109 -> m9_110  [color=red, key=0, style=solid];
m9_111 -> m9_109  [color=blue, key=0, style=bold];
m9_118 -> m9_119  [color=red, key=0, style=solid];
m9_119 -> m9_120  [color=red, key=0, style=solid];
m9_119 -> m9_36  [color=red, key=2, style=dotted];
m9_119 -> m9_121  [color=red, key=2, style=dotted];
m9_120 -> m9_118  [color=blue, key=0, style=bold];
m9_134 -> m9_135  [color=red, key=0, style=solid];
m9_134 -> m9_27  [color=red, key=2, style=dotted];
m9_130 -> m9_131  [color=red, key=0, style=solid];
m9_133 -> m9_134  [color=red, key=0, style=solid];
m9_131 -> m9_132  [color=red, key=0, style=solid];
m9_131 -> m9_36  [color=red, key=2, style=dotted];
m9_131 -> m9_121  [color=red, key=2, style=dotted];
m9_132 -> m9_130  [color=blue, key=0, style=bold];
m9_135 -> m9_133  [color=blue, key=0, style=bold];
m9_142 -> m9_143  [color=red, key=0, style=solid];
m9_142 -> m9_144  [color=red, key=2, style=dotted];
m9_141 -> m9_142  [color=red, key=0, style=solid];
m9_143 -> m9_141  [color=blue, key=0, style=bold];
m9_151 -> m9_152  [key=0, style=solid];
m9_151 -> m9_153  [key=2, style=dotted];
m9_150 -> m9_151  [key=0, style=solid];
m9_152 -> m9_150  [color=blue, key=0, style=bold];
m9_159 -> m9_160  [key=0, style=solid];
m9_160 -> m9_161  [key=0, style=solid];
m9_160 -> m9_162  [key=2, style=dotted];
m9_161 -> m9_159  [color=blue, key=0, style=bold];
m9_168 -> m9_169  [key=0, style=solid];
m9_169 -> m9_170  [key=0, style=solid];
m9_169 -> m9_162  [key=2, style=dotted];
m9_170 -> m9_168  [color=blue, key=0, style=bold];
m9_179 -> m9_180  [key=0, style=solid];
m9_179 -> m9_162  [key=2, style=dotted];
m9_180 -> m9_178  [color=blue, key=0, style=bold];
m9_49 -> m9_50  [color=red, key=0, style=solid];
m9_50 -> m9_51  [color=red, key=0, style=solid];
m9_50 -> m9_36  [color=red, key=2, style=dotted];
m9_50 -> m9_53  [color=red, key=1, label="lambda expression", style=dashed];
m9_51 -> m9_52  [color=red, key=0, style=solid];
m9_51 -> m9_37  [color=red, key=2, style=dotted];
m9_52 -> m9_49  [color=blue, key=0, style=bold];
m9_31 -> m9_181  [key=0, style=solid];
m9_181 -> m9_31  [color=blue, key=0, style=bold];
m9_32 -> m9_33  [color=red, key=0, style=solid];
m9_33 -> m9_34  [color=red, key=0, style=solid];
m9_33 -> m9_36  [color=red, key=2, style=dotted];
m9_33 -> m9_38  [color=red, key=1, label="lambda expression", style=dashed];
m9_34 -> m9_35  [color=red, key=0, style=solid];
m9_34 -> m9_37  [color=red, key=2, style=dotted];
m9_35 -> m9_32  [color=blue, key=0, style=bold];
m9_42 -> m9_43  [color=red, key=0, style=solid];
m9_43 -> m9_44  [color=red, key=0, style=solid];
m9_43 -> m9_36  [color=red, key=2, style=dotted];
m9_43 -> m9_46  [color=red, key=1, label="lambda expression", style=dashed];
m9_44 -> m9_45  [color=red, key=0, style=solid];
m9_44 -> m9_37  [color=red, key=2, style=dotted];
m9_45 -> m9_42  [color=blue, key=0, style=bold];
m9_113 -> m9_114  [color=red, key=0, style=solid];
m9_114 -> m9_115  [color=red, key=0, style=solid];
m9_114 -> m9_81  [color=red, key=2, style=dotted];
m9_115 -> m9_116  [color=red, key=0, style=solid];
m9_115 -> m9_27  [color=red, key=2, style=dotted];
m9_116 -> m9_117  [color=red, key=0, style=solid];
m9_116 -> m9_82  [color=red, key=2, style=dotted];
m9_116 -> m9_118  [color=red, key=1, label="lambda expression", style=dashed];
m9_117 -> m9_113  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [color=red, key=0, style=solid];
m9_1 -> m9_2  [color=red, key=0, style=solid];
m9_1 -> m9_11  [color=red, key=2, style=dotted];
m9_2 -> m9_3  [color=red, key=0, style=solid];
m9_2 -> m9_12  [color=red, key=2, style=dotted];
m9_3 -> m9_4  [color=red, key=0, style=solid];
m9_3 -> m9_13  [color=red, key=2, style=dotted];
m9_3 -> m9_14  [color=red, key=2, style=dotted];
m9_3 -> m9_20  [color=red, key=1, label="lambda expression", style=dashed];
m9_4 -> m9_5  [color=red, key=0, style=solid];
m9_4 -> m9_15  [color=red, key=2, style=dotted];
m9_5 -> m9_6  [color=red, key=0, style=solid];
m9_5 -> m9_16  [color=red, key=2, style=dotted];
m9_6 -> m9_7  [color=red, key=0, style=solid];
m9_6 -> m9_13  [color=red, key=2, style=dotted];
m9_6 -> m9_14  [color=red, key=2, style=dotted];
m9_6 -> m9_24  [color=red, key=1, label="lambda expression", style=dashed];
m9_7 -> m9_8  [color=red, key=0, style=solid];
m9_7 -> m9_17  [color=red, key=2, style=dotted];
m9_8 -> m9_9  [color=red, key=0, style=solid];
m9_8 -> m9_18  [color=red, key=2, style=dotted];
m9_9 -> m9_10  [color=red, key=0, style=solid];
m9_9 -> m9_19  [color=red, key=2, style=dotted];
m9_9 -> m9_28  [color=red, key=1, label="lambda expression", style=dashed];
m9_10 -> m9_0  [color=blue, key=0, style=bold];
m9_184 -> m9_1  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_2  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_3  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_4  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_5  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_6  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_25  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_7  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_8  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_9  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_33  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_39  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_43  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_47  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_50  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_54  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_66  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_69  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_72  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_75  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_78  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_79  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_87  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_89  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_97  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_98  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_102  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_105  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_106  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_110  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_114  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_115  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_116  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_123  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_124  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_125  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_134  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_137  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_138  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_142  [color=red, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_146  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_155  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_156  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_157  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_160  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_164  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_165  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_166  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_169  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_172  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_179  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_173  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_174  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_184 -> m9_182  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m9_185 -> m9_102  [color=red, key=1, label=client, style=dashed];
m9_186 -> m9_110  [color=red, key=1, label=client, style=dashed];
m9_187 -> m9_134  [color=red, key=1, label=client, style=dashed];
m9_188 -> m9_142  [color=red, key=1, label=client, style=dashed];
m9_189 -> m9_151  [color=darkseagreen4, key=1, label=client, style=dashed];
m10_97 -> m10_252  [key=0, style=solid];
m10_252 -> m10_253  [key=0, style=solid];
m10_252 -> m10_250  [key=2, style=dotted];
m10_252 -> m10_251  [key=2, style=dotted];
m10_253 -> m10_97  [color=blue, key=0, style=bold];
m10_101 -> m10_102  [color=red, key=0, style=solid];
m10_101 -> m10_104  [color=red, key=1, label=string, style=dashed];
m10_101 -> m10_107  [color=red, key=1, label=string, style=dashed];
m10_102 -> m10_103  [color=red, key=0, style=solid];
m10_102 -> m10_104  [color=red, key=1, label=query, style=dashed];
m10_102 -> m10_107  [color=red, key=1, label=query, style=dashed];
m10_104 -> m10_105  [color=red, key=0, style=solid];
m10_104 -> m10_27  [color=red, key=2, style=dotted];
m10_104 -> m10_106  [color=red, key=1, label="lambda expression", style=dashed];
m10_103 -> m10_104  [color=red, key=0, style=solid];
m10_103 -> m10_97  [color=red, key=2, style=dotted];
m10_105 -> m10_101  [color=blue, key=0, style=bold];
m10_6 -> m10_7  [color=red, key=0, style=solid];
m10_7 -> m10_8  [color=red, key=0, style=solid];
m10_7 -> m10_9  [color=red, key=2, style=dotted];
m10_7 -> m10_10  [color=red, key=1, label="lambda expression", style=dashed];
m10_7 -> m10_7  [color=red, key=3, label="method methodReturn System.Collections.Generic.IDictionary<string, string> SerializeProperties", style=bold];
m10_8 -> m10_6  [color=blue, key=0, style=bold];
m10_65 -> m10_66  [color=red, key=0, style=solid];
m10_65 -> m10_69  [color=red, key=1, label=string, style=dashed];
m10_66 -> m10_67  [color=red, key=0, style=solid];
m10_66 -> m10_27  [color=red, key=2, style=dotted];
m10_66 -> m10_68  [color=red, key=1, label="lambda expression", style=dashed];
m10_67 -> m10_65  [color=blue, key=0, style=bold];
m10_225 -> m10_226  [key=0, style=solid];
m10_225 -> m10_230  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_225 -> m10_233  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_226 -> m10_227  [key=0, style=solid];
m10_226 -> m10_228  [key=0, style=solid];
m10_230 -> m10_231  [key=0, style=solid];
m10_230 -> m10_27  [key=2, style=dotted];
m10_230 -> m10_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_227 -> m10_231  [key=0, style=solid];
m10_227 -> d17  [key=2, style=dotted];
m10_228 -> m10_229  [key=0, style=solid];
m10_228 -> m10_230  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_228 -> m10_233  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_229 -> m10_230  [key=0, style=solid];
m10_229 -> m10_97  [key=2, style=dotted];
m10_231 -> m10_225  [color=blue, key=0, style=bold];
m10_77 -> m10_78  [color=red, key=0, style=solid];
m10_77 -> m10_81  [color=red, key=1, label=string, style=dashed];
m10_78 -> m10_79  [color=red, key=0, style=solid];
m10_78 -> m10_27  [color=red, key=2, style=dotted];
m10_78 -> m10_80  [color=red, key=1, label="lambda expression", style=dashed];
m10_79 -> m10_77  [color=blue, key=0, style=bold];
m10_235 -> m10_236  [key=0, style=solid];
m10_235 -> m10_240  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_235 -> m10_243  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_236 -> m10_237  [key=0, style=solid];
m10_236 -> m10_238  [key=0, style=solid];
m10_240 -> m10_241  [key=0, style=solid];
m10_240 -> m10_27  [key=2, style=dotted];
m10_240 -> m10_242  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_237 -> m10_241  [key=0, style=solid];
m10_237 -> d17  [key=2, style=dotted];
m10_238 -> m10_239  [key=0, style=solid];
m10_238 -> m10_240  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_238 -> m10_243  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_239 -> m10_240  [key=0, style=solid];
m10_239 -> m10_113  [key=2, style=dotted];
m10_241 -> m10_235  [color=blue, key=0, style=bold];
m10_195 -> m10_196  [key=0, style=solid];
m10_195 -> m10_200  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_195 -> m10_203  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_196 -> m10_197  [key=0, style=solid];
m10_196 -> m10_198  [key=0, style=solid];
m10_200 -> m10_201  [key=0, style=solid];
m10_200 -> m10_27  [key=2, style=dotted];
m10_200 -> m10_202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_197 -> m10_201  [key=0, style=solid];
m10_197 -> d17  [key=2, style=dotted];
m10_198 -> m10_199  [key=0, style=solid];
m10_198 -> m10_200  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_198 -> m10_203  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_199 -> m10_200  [key=0, style=solid];
m10_199 -> m10_97  [key=2, style=dotted];
m10_201 -> m10_195  [color=blue, key=0, style=bold];
m10_251 -> m10_256  [key=0, style=solid];
m10_256 -> m10_257  [key=0, style=solid];
m10_256 -> m10_258  [key=2, style=dotted];
m10_257 -> m10_251  [color=blue, key=0, style=bold];
m10_141 -> m10_254  [key=0, style=solid];
m10_254 -> m10_255  [key=0, style=solid];
m10_254 -> m10_250  [key=2, style=dotted];
m10_254 -> m10_251  [key=2, style=dotted];
m10_255 -> m10_141  [color=blue, key=0, style=bold];
m10_38 -> m10_39  [color=red, key=0, style=solid];
m10_38 -> m10_40  [color=red, key=1, label=string, style=dashed];
m10_38 -> m10_43  [color=red, key=1, label=string, style=dashed];
m10_39 -> m10_40  [color=red, key=0, style=solid];
m10_39 -> m10_43  [color=red, key=1, label=addAndSetStateSql, style=dashed];
m10_40 -> m10_41  [color=red, key=0, style=solid];
m10_40 -> m10_27  [color=red, key=2, style=dotted];
m10_40 -> m10_42  [color=red, key=1, label="lambda expression", style=dashed];
m10_41 -> m10_38  [color=blue, key=0, style=bold];
m10_205 -> m10_206  [key=0, style=solid];
m10_205 -> m10_210  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_205 -> m10_213  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_206 -> m10_207  [key=0, style=solid];
m10_206 -> m10_208  [key=0, style=solid];
m10_210 -> m10_211  [key=0, style=solid];
m10_210 -> m10_27  [key=2, style=dotted];
m10_210 -> m10_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_207 -> m10_211  [key=0, style=solid];
m10_207 -> d17  [key=2, style=dotted];
m10_208 -> m10_209  [key=0, style=solid];
m10_208 -> m10_210  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_208 -> m10_213  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_209 -> m10_210  [key=0, style=solid];
m10_209 -> m10_113  [key=2, style=dotted];
m10_211 -> m10_205  [color=blue, key=0, style=bold];
m10_47 -> m10_48  [color=red, key=0, style=solid];
m10_47 -> m10_49  [color=red, key=1, label=string, style=dashed];
m10_47 -> m10_52  [color=red, key=1, label=string, style=dashed];
m10_48 -> m10_49  [color=red, key=0, style=solid];
m10_48 -> m10_52  [color=red, key=1, label=addStateSql, style=dashed];
m10_49 -> m10_50  [color=red, key=0, style=solid];
m10_49 -> m10_27  [color=red, key=2, style=dotted];
m10_49 -> m10_51  [color=red, key=1, label="lambda expression", style=dashed];
m10_50 -> m10_47  [color=blue, key=0, style=bold];
m10_83 -> m10_84  [color=red, key=0, style=solid];
m10_83 -> m10_87  [color=red, key=1, label=string, style=dashed];
m10_84 -> m10_85  [color=red, key=0, style=solid];
m10_84 -> m10_27  [color=red, key=2, style=dotted];
m10_84 -> m10_86  [color=red, key=1, label="lambda expression", style=dashed];
m10_85 -> m10_83  [color=blue, key=0, style=bold];
m10_175 -> m10_176  [key=0, style=solid];
m10_175 -> m10_180  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_175 -> m10_183  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_176 -> m10_177  [key=0, style=solid];
m10_176 -> m10_178  [key=0, style=solid];
m10_180 -> m10_181  [key=0, style=solid];
m10_180 -> m10_27  [key=2, style=dotted];
m10_180 -> m10_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_177 -> m10_181  [key=0, style=solid];
m10_177 -> d17  [key=2, style=dotted];
m10_178 -> m10_179  [key=0, style=solid];
m10_178 -> m10_180  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_178 -> m10_183  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_179 -> m10_180  [key=0, style=solid];
m10_179 -> m10_97  [key=2, style=dotted];
m10_181 -> m10_175  [color=blue, key=0, style=bold];
m10_89 -> m10_90  [color=red, key=0, style=solid];
m10_90 -> m10_91  [color=red, key=0, style=solid];
m10_90 -> m10_92  [color=red, key=2, style=dotted];
m10_91 -> m10_89  [color=blue, key=0, style=bold];
m10_27 -> m10_245  [key=0, style=solid];
m10_245 -> m10_246  [key=0, style=solid];
m10_245 -> m10_247  [key=2, style=dotted];
m10_246 -> m10_27  [color=blue, key=0, style=bold];
m10_54 -> m10_55  [color=red, key=0, style=solid];
m10_54 -> m10_57  [color=red, key=1, label=string, style=dashed];
m10_54 -> m10_62  [color=red, key=1, label=string, style=dashed];
m10_55 -> m10_56  [color=red, key=0, style=solid];
m10_55 -> m10_59  [color=red, key=2, style=dotted];
m10_57 -> m10_58  [color=red, key=0, style=solid];
m10_57 -> m10_27  [color=red, key=2, style=dotted];
m10_57 -> m10_61  [color=red, key=1, label="lambda expression", style=dashed];
m10_56 -> m10_57  [color=red, key=0, style=solid];
m10_56 -> m10_60  [color=red, key=2, style=dotted];
m10_56 -> m10_62  [color=red, key=1, label=persistentQueue, style=dashed];
m10_58 -> m10_54  [color=blue, key=0, style=bold];
m10_71 -> m10_72  [color=red, key=0, style=solid];
m10_71 -> m10_75  [color=red, key=1, label=string, style=dashed];
m10_72 -> m10_73  [color=red, key=0, style=solid];
m10_72 -> m10_27  [color=red, key=2, style=dotted];
m10_72 -> m10_74  [color=red, key=1, label="lambda expression", style=dashed];
m10_73 -> m10_71  [color=blue, key=0, style=bold];
m10_92 -> m10_93  [color=red, key=0, style=solid];
m10_92 -> m10_95  [color=red, key=1, label=string, style=dashed];
m10_92 -> m10_99  [color=red, key=1, label=string, style=dashed];
m10_93 -> m10_94  [color=red, key=0, style=solid];
m10_93 -> m10_95  [color=red, key=1, label=addSql, style=dashed];
m10_93 -> m10_99  [color=red, key=1, label=addSql, style=dashed];
m10_95 -> m10_96  [color=red, key=0, style=solid];
m10_95 -> m10_27  [color=red, key=2, style=dotted];
m10_95 -> m10_98  [color=red, key=1, label="lambda expression", style=dashed];
m10_94 -> m10_95  [color=red, key=0, style=solid];
m10_94 -> m10_97  [color=red, key=2, style=dotted];
m10_96 -> m10_92  [color=blue, key=0, style=bold];
m10_132 -> m10_133  [color=red, key=0, style=solid];
m10_132 -> m10_135  [color=red, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m10_132 -> m10_139  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_132 -> m10_144  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_132 -> m10_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_133 -> m10_134  [color=red, key=0, style=solid];
m10_133 -> m10_135  [color=red, key=0, style=solid];
m10_135 -> m10_136  [color=red, key=0, style=solid];
m10_135 -> m10_137  [color=red, key=0, style=solid];
m10_139 -> m10_140  [key=0, style=solid];
m10_139 -> m10_142  [key=2, style=dotted];
m10_139 -> m10_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_134 -> m10_140  [color=red, key=0, style=solid];
m10_134 -> d17  [color=red, key=2, style=dotted];
m10_136 -> m10_140  [color=red, key=0, style=solid];
m10_136 -> d17  [color=red, key=2, style=dotted];
m10_137 -> m10_138  [color=red, key=0, style=solid];
m10_137 -> m10_139  [color=red, key=1, label=sql, style=dashed];
m10_137 -> m10_144  [color=red, key=1, label=sql, style=dashed];
m10_138 -> m10_139  [key=0, style=solid];
m10_138 -> m10_141  [key=2, style=dotted];
m10_140 -> m10_132  [color=blue, key=0, style=bold];
m10_149 -> m10_150  [key=0, style=solid];
m10_149 -> m10_154  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_149 -> m10_157  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_150 -> m10_151  [key=0, style=solid];
m10_150 -> m10_152  [key=0, style=solid];
m10_154 -> m10_155  [key=0, style=solid];
m10_154 -> m10_27  [key=2, style=dotted];
m10_154 -> m10_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_151 -> m10_155  [key=0, style=solid];
m10_151 -> d17  [key=2, style=dotted];
m10_152 -> m10_153  [key=0, style=solid];
m10_152 -> m10_154  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_152 -> m10_157  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_153 -> m10_154  [key=0, style=solid];
m10_153 -> m10_141  [key=2, style=dotted];
m10_155 -> m10_149  [color=blue, key=0, style=bold];
m10_32 -> m10_33  [color=red, key=0, style=solid];
m10_32 -> m10_36  [color=red, key=1, label=string, style=dashed];
m10_33 -> m10_34  [color=red, key=0, style=solid];
m10_33 -> m10_27  [color=red, key=2, style=dotted];
m10_33 -> m10_35  [color=red, key=1, label="lambda expression", style=dashed];
m10_34 -> m10_32  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [color=red, key=0, style=solid];
m10_0 -> m10_3  [color=red, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m10_1 -> m10_2  [color=red, key=0, style=solid];
m10_1 -> m10_3  [color=red, key=0, style=solid];
m10_3 -> m10_4  [color=red, key=0, style=solid];
m10_2 -> m10_4  [color=red, key=0, style=solid];
m10_2 -> d17  [color=red, key=2, style=dotted];
m10_4 -> m10_0  [color=blue, key=0, style=bold];
m10_185 -> m10_186  [key=0, style=solid];
m10_185 -> m10_190  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_185 -> m10_193  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_186 -> m10_187  [key=0, style=solid];
m10_186 -> m10_188  [key=0, style=solid];
m10_190 -> m10_191  [key=0, style=solid];
m10_190 -> m10_27  [key=2, style=dotted];
m10_190 -> m10_192  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_187 -> m10_191  [key=0, style=solid];
m10_187 -> d17  [key=2, style=dotted];
m10_188 -> m10_189  [key=0, style=solid];
m10_188 -> m10_190  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_188 -> m10_193  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_189 -> m10_190  [key=0, style=solid];
m10_189 -> m10_141  [key=2, style=dotted];
m10_191 -> m10_185  [color=blue, key=0, style=bold];
m10_24 -> m10_25  [color=red, key=0, style=solid];
m10_24 -> m10_29  [color=red, key=1, label=string, style=dashed];
m10_25 -> m10_26  [color=red, key=0, style=solid];
m10_25 -> m10_27  [color=red, key=2, style=dotted];
m10_25 -> m10_28  [color=red, key=1, label="lambda expression", style=dashed];
m10_26 -> m10_24  [color=blue, key=0, style=bold];
m10_242 -> m10_243  [key=0, style=solid];
m10_10 -> m10_11  [color=red, key=0, style=solid];
m10_10 -> m10_13  [color=red, key=1, label=SqlConnection, style=dashed];
m10_10 -> m10_15  [color=red, key=1, label=SqlConnection, style=dashed];
m10_11 -> m10_12  [color=red, key=0, style=solid];
m10_11 -> m10_17  [color=red, key=2, style=dotted];
m10_13 -> m10_14  [color=red, key=0, style=solid];
m10_13 -> m10_18  [color=red, key=2, style=dotted];
m10_13 -> m10_19  [color=red, key=2, style=dotted];
m10_13 -> m10_21  [color=red, key=1, label="lambda expression", style=dashed];
m10_15 -> m10_14  [color=red, key=0, style=solid];
m10_15 -> m10_20  [color=red, key=2, style=dotted];
m10_12 -> m10_13  [color=red, key=0, style=solid];
m10_12 -> m10_14  [color=red, key=0, style=solid];
m10_14 -> m10_15  [color=red, key=0, style=solid];
m10_14 -> m10_16  [color=red, key=0, style=solid];
m10_21 -> m10_22  [color=red, key=0, style=solid];
m10_16 -> m10_10  [color=blue, key=0, style=bold];
m10_22 -> m10_23  [color=red, key=0, style=solid];
m10_23 -> m10_21  [color=blue, key=0, style=bold];
m10_29 -> m10_30  [color=red, key=0, style=solid];
m10_29 -> m10_31  [color=red, key=2, style=dotted];
m10_29 -> m10_19  [color=red, key=2, style=dotted];
m10_28 -> m10_29  [color=red, key=0, style=solid];
m10_30 -> m10_28  [color=blue, key=0, style=bold];
m10_36 -> m10_37  [color=red, key=0, style=solid];
m10_36 -> m10_19  [color=red, key=2, style=dotted];
m10_35 -> m10_36  [color=red, key=0, style=solid];
m10_37 -> m10_35  [color=blue, key=0, style=bold];
m10_43 -> m10_44  [color=red, key=0, style=solid];
m10_43 -> m10_45  [color=red, key=2, style=dotted];
m10_43 -> m10_46  [color=red, key=2, style=dotted];
m10_43 -> m10_19  [color=red, key=2, style=dotted];
m10_42 -> m10_43  [color=red, key=0, style=solid];
m10_44 -> m10_42  [color=blue, key=0, style=bold];
m10_52 -> m10_53  [color=red, key=0, style=solid];
m10_52 -> m10_45  [color=red, key=2, style=dotted];
m10_52 -> m10_46  [color=red, key=2, style=dotted];
m10_52 -> m10_19  [color=red, key=2, style=dotted];
m10_51 -> m10_52  [color=red, key=0, style=solid];
m10_53 -> m10_51  [color=blue, key=0, style=bold];
m10_62 -> m10_63  [color=red, key=0, style=solid];
m10_62 -> m10_64  [color=red, key=2, style=dotted];
m10_61 -> m10_62  [color=red, key=0, style=solid];
m10_63 -> m10_61  [color=blue, key=0, style=bold];
m10_69 -> m10_70  [color=red, key=0, style=solid];
m10_69 -> m10_19  [color=red, key=2, style=dotted];
m10_68 -> m10_69  [color=red, key=0, style=solid];
m10_70 -> m10_68  [color=blue, key=0, style=bold];
m10_75 -> m10_76  [color=red, key=0, style=solid];
m10_75 -> m10_31  [color=red, key=2, style=dotted];
m10_75 -> m10_19  [color=red, key=2, style=dotted];
m10_74 -> m10_75  [color=red, key=0, style=solid];
m10_76 -> m10_74  [color=blue, key=0, style=bold];
m10_81 -> m10_82  [color=red, key=0, style=solid];
m10_81 -> m10_19  [color=red, key=2, style=dotted];
m10_80 -> m10_81  [color=red, key=0, style=solid];
m10_82 -> m10_80  [color=blue, key=0, style=bold];
m10_87 -> m10_88  [color=red, key=0, style=solid];
m10_87 -> m10_31  [color=red, key=2, style=dotted];
m10_87 -> m10_19  [color=red, key=2, style=dotted];
m10_86 -> m10_87  [color=red, key=0, style=solid];
m10_88 -> m10_86  [color=blue, key=0, style=bold];
m10_99 -> m10_100  [color=red, key=0, style=solid];
m10_99 -> m10_19  [color=red, key=2, style=dotted];
m10_98 -> m10_99  [color=red, key=0, style=solid];
m10_100 -> m10_98  [color=blue, key=0, style=bold];
m10_107 -> m10_108  [color=red, key=0, style=solid];
m10_107 -> m10_19  [color=red, key=2, style=dotted];
m10_106 -> m10_107  [color=red, key=0, style=solid];
m10_108 -> m10_106  [color=blue, key=0, style=bold];
m10_115 -> m10_116  [color=red, key=0, style=solid];
m10_115 -> m10_19  [color=red, key=2, style=dotted];
m10_114 -> m10_115  [color=red, key=0, style=solid];
m10_116 -> m10_114  [color=blue, key=0, style=bold];
m10_122 -> m10_123  [color=red, key=0, style=solid];
m10_122 -> m10_19  [color=red, key=2, style=dotted];
m10_121 -> m10_122  [color=red, key=0, style=solid];
m10_123 -> m10_121  [color=blue, key=0, style=bold];
m10_130 -> m10_131  [color=red, key=0, style=solid];
m10_130 -> m10_19  [color=red, key=2, style=dotted];
m10_129 -> m10_130  [color=red, key=0, style=solid];
m10_131 -> m10_129  [color=blue, key=0, style=bold];
m10_144 -> m10_145  [key=0, style=solid];
m10_144 -> m10_18  [key=2, style=dotted];
m10_144 -> m10_19  [key=2, style=dotted];
m10_144 -> m10_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_147 -> m10_148  [key=0, style=solid];
m10_147 -> m10_147  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, string>", style=dashed];
m10_143 -> m10_144  [key=0, style=solid];
m10_145 -> m10_143  [color=blue, key=0, style=bold];
m10_146 -> m10_147  [key=0, style=solid];
m10_148 -> m10_146  [color=blue, key=0, style=bold];
m10_157 -> m10_158  [key=0, style=solid];
m10_157 -> m10_19  [key=2, style=dotted];
m10_156 -> m10_157  [key=0, style=solid];
m10_158 -> m10_156  [color=blue, key=0, style=bold];
m10_169 -> m10_170  [key=0, style=solid];
m10_169 -> m10_18  [key=2, style=dotted];
m10_169 -> m10_171  [key=2, style=dotted];
m10_169 -> m10_19  [key=2, style=dotted];
m10_169 -> m10_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_173 -> m10_174  [key=0, style=solid];
m10_168 -> m10_169  [key=0, style=solid];
m10_170 -> m10_168  [color=blue, key=0, style=bold];
m10_172 -> m10_173  [key=0, style=solid];
m10_174 -> m10_172  [color=blue, key=0, style=bold];
m10_183 -> m10_184  [key=0, style=solid];
m10_183 -> m10_19  [key=2, style=dotted];
m10_182 -> m10_183  [key=0, style=solid];
m10_184 -> m10_182  [color=blue, key=0, style=bold];
m10_193 -> m10_194  [key=0, style=solid];
m10_193 -> m10_31  [key=2, style=dotted];
m10_193 -> m10_19  [key=2, style=dotted];
m10_192 -> m10_193  [key=0, style=solid];
m10_194 -> m10_192  [color=blue, key=0, style=bold];
m10_203 -> m10_204  [key=0, style=solid];
m10_203 -> m10_31  [key=2, style=dotted];
m10_203 -> m10_19  [key=2, style=dotted];
m10_202 -> m10_203  [key=0, style=solid];
m10_204 -> m10_202  [color=blue, key=0, style=bold];
m10_213 -> m10_214  [key=0, style=solid];
m10_213 -> m10_31  [key=2, style=dotted];
m10_213 -> m10_19  [key=2, style=dotted];
m10_212 -> m10_213  [key=0, style=solid];
m10_214 -> m10_212  [color=blue, key=0, style=bold];
m10_223 -> m10_224  [key=0, style=solid];
m10_223 -> m10_19  [key=2, style=dotted];
m10_222 -> m10_223  [key=0, style=solid];
m10_224 -> m10_222  [color=blue, key=0, style=bold];
m10_233 -> m10_234  [key=0, style=solid];
m10_233 -> m10_19  [key=2, style=dotted];
m10_232 -> m10_233  [key=0, style=solid];
m10_234 -> m10_232  [color=blue, key=0, style=bold];
m10_243 -> m10_244  [key=0, style=solid];
m10_243 -> m10_19  [key=2, style=dotted];
m10_244 -> m10_242  [color=blue, key=0, style=bold];
m10_159 -> m10_160  [key=0, style=solid];
m10_159 -> m10_162  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m10_159 -> m10_166  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_159 -> m10_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_159 -> m10_173  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_160 -> m10_161  [key=0, style=solid];
m10_160 -> m10_162  [key=0, style=solid];
m10_162 -> m10_163  [key=0, style=solid];
m10_162 -> m10_164  [key=0, style=solid];
m10_166 -> m10_167  [key=0, style=solid];
m10_166 -> m10_142  [key=2, style=dotted];
m10_166 -> m10_168  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_161 -> m10_167  [key=0, style=solid];
m10_161 -> d17  [key=2, style=dotted];
m10_163 -> m10_167  [key=0, style=solid];
m10_163 -> d17  [key=2, style=dotted];
m10_164 -> m10_165  [key=0, style=solid];
m10_164 -> m10_166  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_164 -> m10_169  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_165 -> m10_166  [key=0, style=solid];
m10_165 -> m10_97  [key=2, style=dotted];
m10_167 -> m10_159  [color=blue, key=0, style=bold];
m10_117 -> m10_118  [color=red, key=0, style=solid];
m10_117 -> m10_119  [color=red, key=1, label=string, style=dashed];
m10_117 -> m10_122  [color=red, key=1, label=string, style=dashed];
m10_118 -> m10_119  [color=red, key=0, style=solid];
m10_118 -> m10_113  [color=red, key=2, style=dotted];
m10_119 -> m10_120  [color=red, key=0, style=solid];
m10_119 -> m10_27  [color=red, key=2, style=dotted];
m10_119 -> m10_121  [color=red, key=1, label="lambda expression", style=dashed];
m10_120 -> m10_117  [color=blue, key=0, style=bold];
m10_113 -> m10_248  [key=0, style=solid];
m10_248 -> m10_249  [key=0, style=solid];
m10_248 -> m10_250  [key=2, style=dotted];
m10_248 -> m10_251  [key=2, style=dotted];
m10_249 -> m10_113  [color=blue, key=0, style=bold];
m10_215 -> m10_216  [key=0, style=solid];
m10_215 -> m10_220  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_215 -> m10_223  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_216 -> m10_217  [key=0, style=solid];
m10_216 -> m10_218  [key=0, style=solid];
m10_220 -> m10_221  [key=0, style=solid];
m10_220 -> m10_27  [key=2, style=dotted];
m10_220 -> m10_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_217 -> m10_221  [key=0, style=solid];
m10_217 -> d17  [key=2, style=dotted];
m10_218 -> m10_219  [key=0, style=solid];
m10_218 -> m10_220  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_218 -> m10_223  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_219 -> m10_220  [key=0, style=solid];
m10_219 -> m10_141  [key=2, style=dotted];
m10_221 -> m10_215  [color=blue, key=0, style=bold];
m10_109 -> m10_110  [color=red, key=0, style=solid];
m10_109 -> m10_111  [color=red, key=1, label=string, style=dashed];
m10_109 -> m10_115  [color=red, key=1, label=string, style=dashed];
m10_110 -> m10_111  [color=red, key=0, style=solid];
m10_110 -> m10_113  [color=red, key=2, style=dotted];
m10_111 -> m10_112  [color=red, key=0, style=solid];
m10_111 -> m10_27  [color=red, key=2, style=dotted];
m10_111 -> m10_114  [color=red, key=1, label="lambda expression", style=dashed];
m10_112 -> m10_109  [color=blue, key=0, style=bold];
m10_124 -> m10_125  [color=red, key=0, style=solid];
m10_124 -> m10_127  [color=red, key=1, label=string, style=dashed];
m10_124 -> m10_130  [color=red, key=1, label=string, style=dashed];
m10_125 -> m10_126  [color=red, key=0, style=solid];
m10_125 -> m10_127  [color=red, key=1, label=trimSql, style=dashed];
m10_125 -> m10_130  [color=red, key=1, label=trimSql, style=dashed];
m10_127 -> m10_128  [color=red, key=0, style=solid];
m10_127 -> m10_27  [color=red, key=2, style=dotted];
m10_127 -> m10_129  [color=red, key=1, label="lambda expression", style=dashed];
m10_126 -> m10_127  [color=red, key=0, style=solid];
m10_126 -> m10_113  [color=red, key=2, style=dotted];
m10_128 -> m10_124  [color=blue, key=0, style=bold];
m10_259 -> m10_3  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_7  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_12  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_13  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_14  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_25  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_33  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_40  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_49  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_55  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_57  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_66  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_72  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_78  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_84  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_90  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_94  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_95  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_103  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_104  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_110  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_111  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_118  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_119  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_126  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_127  [color=red, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_138  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_139  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_153  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_154  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_165  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_166  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_179  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_180  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_189  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_190  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_199  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_200  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_209  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_210  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_219  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_220  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_229  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_230  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_239  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_240  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_245  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_248  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_252  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_254  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_259 -> m10_256  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m10_260 -> m10_29  [color=red, key=1, label=string, style=dashed];
m10_261 -> m10_29  [color=red, key=1, label="System.TimeSpan", style=dashed];
m10_262 -> m10_36  [color=red, key=1, label=string, style=dashed];
m10_263 -> m10_43  [color=red, key=1, label=string, style=dashed];
m10_264 -> m10_43  [color=red, key=1, label="Hangfire.States.IState", style=dashed];
m10_265 -> m10_43  [color=red, key=1, label=addAndSetStateSql, style=dashed];
m10_266 -> m10_52  [color=red, key=1, label=string, style=dashed];
m10_267 -> m10_52  [color=red, key=1, label="Hangfire.States.IState", style=dashed];
m10_268 -> m10_52  [color=red, key=1, label=addStateSql, style=dashed];
m10_269 -> m10_62  [color=red, key=1, label=string, style=dashed];
m10_270 -> m10_62  [color=red, key=1, label=string, style=dashed];
m10_271 -> m10_62  [color=red, key=1, label=persistentQueue, style=dashed];
m10_272 -> m10_69  [color=red, key=1, label=string, style=dashed];
m10_273 -> m10_75  [color=red, key=1, label=string, style=dashed];
m10_274 -> m10_75  [color=red, key=1, label="System.TimeSpan", style=dashed];
m10_275 -> m10_81  [color=red, key=1, label=string, style=dashed];
m10_276 -> m10_87  [color=red, key=1, label=string, style=dashed];
m10_277 -> m10_87  [color=red, key=1, label="System.TimeSpan", style=dashed];
m10_278 -> m10_99  [color=red, key=1, label=string, style=dashed];
m10_279 -> m10_99  [color=red, key=1, label=string, style=dashed];
m10_280 -> m10_99  [color=red, key=1, label=double, style=dashed];
m10_281 -> m10_99  [color=red, key=1, label=addSql, style=dashed];
m10_282 -> m10_107  [color=red, key=1, label=string, style=dashed];
m10_283 -> m10_107  [color=red, key=1, label=string, style=dashed];
m10_284 -> m10_107  [color=red, key=1, label=query, style=dashed];
m10_285 -> m10_115  [color=red, key=1, label=string, style=dashed];
m10_286 -> m10_115  [color=red, key=1, label=string, style=dashed];
m10_287 -> m10_122  [color=red, key=1, label=string, style=dashed];
m10_288 -> m10_122  [color=red, key=1, label=string, style=dashed];
m10_289 -> m10_130  [color=red, key=1, label=string, style=dashed];
m10_290 -> m10_130  [color=red, key=1, label=int, style=dashed];
m10_291 -> m10_130  [color=red, key=1, label=int, style=dashed];
m10_292 -> m10_130  [color=red, key=1, label=trimSql, style=dashed];
m10_293 -> m10_144  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_293 -> m10_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_294 -> m10_144  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m10_295 -> m10_144  [color=darkseagreen4, key=1, label=sql, style=dashed];
m10_296 -> m10_157  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_297 -> m10_157  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_298 -> m10_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_298 -> m10_173  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_299 -> m10_169  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m10_300 -> m10_169  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_301 -> m10_183  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_302 -> m10_183  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_303 -> m10_193  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_304 -> m10_193  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m10_305 -> m10_193  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_306 -> m10_203  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_307 -> m10_203  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m10_308 -> m10_203  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_309 -> m10_213  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_310 -> m10_213  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m10_311 -> m10_213  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_312 -> m10_223  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_313 -> m10_223  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_314 -> m10_233  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_315 -> m10_233  [color=darkseagreen4, key=1, label=query, style=dashed];
m10_316 -> m10_243  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_317 -> m10_243  [color=darkseagreen4, key=1, label=query, style=dashed];
m11_0 -> m11_1  [color=red, key=0, style=solid];
m11_1 -> m11_2  [color=red, key=0, style=solid];
m11_1 -> m11_3  [color=red, key=2, style=dotted];
m11_2 -> m11_0  [color=blue, key=0, style=bold];
m11_4 -> m11_1  [color=red, key=1, label="Hangfire.Server.ServerSupervisorOptions", style=dashed];
}
