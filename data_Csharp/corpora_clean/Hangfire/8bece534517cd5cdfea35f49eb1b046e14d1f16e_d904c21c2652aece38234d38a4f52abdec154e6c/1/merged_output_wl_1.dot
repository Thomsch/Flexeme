digraph  {
n63 [label="HangFire.Web.Pages.ScheduledJobsPage", span=""];
n0 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="Entry HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47"];
n1 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="WriteLiteral(''\r\n'')", span="51-51"];
n2 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="Layout = new LayoutPage { Title = ''Scheduled Jobs'' }", span="62-62"];
n45 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
n3 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="int from, perPage", span="64-64"];
n46 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
n4 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="int.TryParse(Request.QueryString[''from''], out from)", span="66-66"];
n5 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="int.TryParse(Request.QueryString[''count''], out perPage)", span="67-67"];
n47 [cluster="Unk.TryParse", label="Entry Unk.TryParse", span=""];
n9 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="pager = new Pager(from, perPage, monitor.ScheduledCount())\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/scheduled'')\r\n        }", span="74-77"];
n6 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="Pager pager", span="69-69"];
n7 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="JobList<ScheduleDto> scheduledJobs", span="70-70"];
n8 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="var monitor = JobStorage.Current.CreateMonitoring()", span="72-72"];
n48 [cluster="HangFire.JobStorage.CreateMonitoring()", label="Entry HangFire.JobStorage.CreateMonitoring()", span="43-43"];
n10 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="scheduledJobs = monitor.ScheduledJobs(pager.FromRecord, pager.RecordsPerPage)", span="79-79"];
n49 [cluster="HangFire.Web.Pager.Pager(int, int, long)", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
n50 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ScheduledCount()", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.ScheduledCount()", span="28-28"];
n51 [cluster="HttpRequestBase.LinkTo(string)", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
n12 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="pager.TotalPageCount == 0", span="91-91"];
n14 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="Write(RenderPartial(new PerPageSelector(pager)))", span="112-112"];
n43 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="Write(RenderPartial(new Paginator(pager)))", span="295-295"];
n11 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="WriteLiteral(''\r\n'')", span="86-86"];
n52 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ScheduledJobs(int, int)", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.ScheduledJobs(int, int)", span="24-24"];
n16 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label=scheduledJobs, span="132-132"];
n13 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        There are no scheduled jobs.\r\n    </d'' +\r\n''iv>\r\n'')", span="97-98"];
n15 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="WriteLiteral(''    <table class=\''table\''>\r\n        <thead>\r\n            <tr>\r\n                <th'' +\r\n''>Id</th>\r\n                <th>Enqueue</th>\r\n                <th>Job type</th>\r\n '' +\r\n''               <th></th>\r\n            </tr>\r\n        </thead>\r\n'')", span="125-127"];
n53 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
n54 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
n55 [cluster="Unk.Write", label="Entry Unk.Write", span=""];
n17 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="WriteLiteral(''            <tr class=\'''')", span="138-138"];
n42 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="WriteLiteral(''    </table>\r\n'')", span="283-283"];
n18 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="Write(!job.Value.InScheduledState ? ''obsolete-data'' : null)", span="143-143"];
n19 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="WriteLiteral(''\''>\r\n                <td>\r\n                    <a href=\'''')", span="148-148"];
n56 [cluster="HangFire.Web.RazorPage.Write(object)", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
n20 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="153-153"];
n21 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="WriteLiteral(''\''>\r\n                        '')", span="158-158"];
n22 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="Write(HtmlHelper.JobId(job.Key))", span="163-163"];
n23 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="WriteLiteral(''\r\n                    </a>\r\n'')", span="168-168"];
n57 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="55-55"];
n24 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="!job.Value.InScheduledState", span="173-173"];
n25 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="WriteLiteral(''                        <span title=\''Job\'s state has been changed while fetching '' +\r\n''data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="179-180"];
n26 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="WriteLiteral(''                </td>\r\n                <td data-moment=\'''')", span="190-190"];
n27 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="Write(JobHelper.ToStringTimestamp(job.Value.ScheduledAt))", span="195-195"];
n28 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="WriteLiteral(''\''>'')", span="200-200"];
n58 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
n29 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="Write(job.Value.ScheduledAt)", span="205-205"];
n30 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="WriteLiteral(''</td>\r\n                <td>\r\n                    '')", span="210-210"];
n31 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="Write(HtmlHelper.QueueLabel(job.Value.Method))", span="215-215"];
n32 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="WriteLiteral(''\r\n                    <span title=\'''')", span="220-220"];
n59 [cluster="HangFire.Web.HtmlHelper.QueueLabel(HangFire.Common.JobMethod)", label="Entry HangFire.Web.HtmlHelper.QueueLabel(HangFire.Common.JobMethod)", span="90-90"];
n33 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="Write(HtmlHelper.DisplayMethodHint(job.Value.Method))", span="225-225"];
n34 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="WriteLiteral(''\''>\r\n                        '')", span="230-230"];
n60 [cluster="HangFire.Web.HtmlHelper.DisplayMethodHint(HangFire.Common.JobMethod)", label="Entry HangFire.Web.HtmlHelper.DisplayMethodHint(HangFire.Common.JobMethod)", span="45-45"];
n35 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="Write(HtmlHelper.DisplayMethod(job.Value.Method))", span="235-235"];
n36 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="WriteLiteral(''\r\n                    </span>\r\n                </td>\r\n                <td>\r\n'')", span="240-240"];
n61 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", span="34-34"];
n37 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="job.Value.InScheduledState", span="245-245"];
n38 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="WriteLiteral(''                        <button class=\''btn btn-default btn-sm\'' data-ajax=\'''')", span="251-251"];
n41 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="WriteLiteral(''                </td>\r\n            </tr>\r\n'')", span="273-273"];
n39 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="Write(Request.LinkTo(''/schedule/enqueue/'' + job.Key))", span="256-256"];
n40 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="WriteLiteral(''\'' data-loading-text=\''Enqueueing...\''>\r\n                            <span class=\''gl'' +\r\n''yphicon glyphicon-play\''></span>\r\n                            Enqueue now\r\n      '' +\r\n''                  </button>\r\n'')", span="261-263"];
n44 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", label="Exit HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47"];
n62 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
d1 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", color=green, community=0, label="0: message == null", span="17-17"];
d0 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", label="Entry HangFire.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", span="15-15"];
d2 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", color=green, community=0, label="0: throw new ArgumentNullException(''message'');", span="17-17"];
d3 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", label="_message = message", span="19-19"];
d6 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", label="Exit HangFire.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", span="15-15"];
d7 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
d10 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", color=green, community=0, label="0: _completed", span="29-29"];
d31 [label="HangFire.RabbitMQ.RabbitMqFetchedJob", span=""];
d9 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", label="Entry HangFire.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", span="27-27"];
d11 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", color=green, community=0, label="0: throw new InvalidOperationException(''Job already completed'');", span="29-29"];
d12 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", color=green, community=0, label="0: _channel.BasicAck(_message.DeliveryTag, false)", span="30-30"];
d14 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", label="Exit HangFire.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", span="27-27"];
d15 [cluster="System.InvalidOperationException.InvalidOperationException(string)", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
d13 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", color=green, community=0, label="0: _completed = true", span="31-31"];
d16 [cluster="Unk.BasicAck", label="Entry Unk.BasicAck", span=""];
d20 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Requeue()", color=green, community=0, label="0: _channel.BasicNack(_message.DeliveryTag, false, true)", span="37-37"];
d18 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Requeue()", label=_completed, span="36-36"];
d21 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Requeue()", label="_channel.Close(global::RabbitMQ.Client.Framing.v0_9_1.Constants.ReplySuccess, ''Requeue'')", span="38-38"];
d24 [cluster="Unk.BasicNack", label="Entry Unk.BasicNack", span=""];
d27 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Dispose()", color=green, community=0, label="0: !_completed && !_disposed", span="45-45"];
d26 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Dispose()", label="Entry HangFire.RabbitMQ.RabbitMqFetchedJob.Dispose()", span="43-43"];
d28 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Dispose()", color=green, community=0, label="0: Requeue()", span="47-47"];
d29 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Dispose()", label="_disposed = true", span="50-50"];
d17 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Requeue()", label="Entry HangFire.RabbitMQ.RabbitMqFetchedJob.Requeue()", span="34-34"];
d4 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", label="_channel = channel", span="20-20"];
d5 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", label="JobId = Encoding.UTF8.GetString(_message.Body)", span="22-22"];
d22 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Requeue()", label="_completed = true", span="40-40"];
d19 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Requeue()", label="throw new InvalidOperationException(''Job already completed'');", span="36-36"];
d25 [cluster="Unk.Close", label="Entry Unk.Close", span=""];
d30 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Dispose()", label="Exit HangFire.RabbitMQ.RabbitMqFetchedJob.Dispose()", span="43-43"];
d23 [cluster="HangFire.RabbitMQ.RabbitMqFetchedJob.Requeue()", label="Exit HangFire.RabbitMQ.RabbitMqFetchedJob.Requeue()", span="34-34"];
d8 [cluster="Unk.GetString", label="Entry Unk.GetString", span=""];
m0_44 [cluster="HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", file="JobDispatcher.cs", label="Entry HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", span="79-79"];
m0_45 [cluster="HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", file="JobDispatcher.cs", label="_freeWorkers.Add(worker)", span="81-81"];
m0_46 [cluster="HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", file="JobDispatcher.cs", label="Exit HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", span="79-79"];
m0_12 [cluster="System.Collections.Generic.List<T>.List(int)", file="JobDispatcher.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m0_19 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JobDispatcher.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_16 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.WorkerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", file="JobDispatcher.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.WorkerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", span="36-36"];
m0_47 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Add(T)", file="JobDispatcher.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Add(T)", span="0-0"];
m0_41 [cluster="HangFire.Server.Worker.Stop()", file="JobDispatcher.cs", label="Entry HangFire.Server.Worker.Stop()", span="68-68"];
m0_28 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Take(System.Threading.CancellationToken)", file="JobDispatcher.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Take(System.Threading.CancellationToken)", span="0-0"];
m0_13 [cluster="System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection()", file="JobDispatcher.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection()", span="0-0"];
m0_43 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Dispose()", file="JobDispatcher.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Dispose()", span="0-0"];
m0_17 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", file="JobDispatcher.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", span="13-13"];
m0_0 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", file="JobDispatcher.cs", label="Entry HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", span="18-18"];
m0_1 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", color=green, community=0, file="JobDispatcher.cs", label="0: _workers = new List<Worker>(serverContext.WorkersCount)", span="23-23"];
m0_2 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", color=green, community=0, file="JobDispatcher.cs", label="0: _freeWorkers = new BlockingCollection<Worker>()", span="24-24"];
m0_3 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", color=green, community=0, file="JobDispatcher.cs", label="0: _logger.Info(String.Format(''Starting {0} workers...'', serverContext.WorkersCount))", span="26-26"];
m0_4 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", file="JobDispatcher.cs", label="var i = 0", span="28-28"];
m0_6 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", file="JobDispatcher.cs", label="var worker = new Worker(\r\n                    this,\r\n                    new WorkerContext(serverContext, i),\r\n                    jobPerformer,\r\n                    jobActivator)", span="30-34"];
m0_8 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", file="JobDispatcher.cs", label="_workers.Add(worker)", span="37-37"];
m0_10 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", file="JobDispatcher.cs", label="_logger.Info(''Workers were started.'')", span="40-40"];
m0_5 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", file="JobDispatcher.cs", label="i < serverContext.WorkersCount", span="28-28"];
m0_9 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", file="JobDispatcher.cs", label="i++", span="28-28"];
m0_7 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", file="JobDispatcher.cs", label="worker.Start()", span="36-36"];
m0_11 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", file="JobDispatcher.cs", label="Exit HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", span="18-18"];
m0_20 [cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="JobDispatcher.cs", label="Entry HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", span="43-43"];
m0_21 [cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="JobDispatcher.cs", label="Debug.Assert(!_disposed, ''!_disposed'')", span="45-45"];
m0_23 [cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="JobDispatcher.cs", label="worker = _freeWorkers.Take(cancellationToken)", span="50-50"];
m0_22 [cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="JobDispatcher.cs", label="Worker worker", span="47-47"];
m0_24 [cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="JobDispatcher.cs", label="worker.Crashed", span="52-52"];
m0_25 [cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="JobDispatcher.cs", label="return worker;", span="54-54"];
m0_26 [cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="JobDispatcher.cs", label="Exit HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", span="43-43"];
m0_27 [cluster="System.Diagnostics.Debug.Assert(bool, string)", file="JobDispatcher.cs", label="Entry System.Diagnostics.Debug.Assert(bool, string)", span="0-0"];
m0_42 [cluster="HangFire.Server.Worker.Dispose()", file="JobDispatcher.cs", label="Entry HangFire.Server.Worker.Dispose()", span="108-108"];
m0_14 [cluster="string.Format(string, object)", file="JobDispatcher.cs", label="Entry string.Format(string, object)", span="0-0"];
m0_29 [cluster="HangFire.Server.WorkerPool.Dispose()", file="JobDispatcher.cs", label="Entry HangFire.Server.WorkerPool.Dispose()", span="57-57"];
m0_30 [cluster="HangFire.Server.WorkerPool.Dispose()", file="JobDispatcher.cs", label=_disposed, span="59-59"];
m0_32 [cluster="HangFire.Server.WorkerPool.Dispose()", file="JobDispatcher.cs", label="_disposed = true", span="62-62"];
m0_33 [cluster="HangFire.Server.WorkerPool.Dispose()", file="JobDispatcher.cs", label="_logger.Info(''Stopping workers...'')", span="64-64"];
m0_34 [cluster="HangFire.Server.WorkerPool.Dispose()", file="JobDispatcher.cs", label=_workers, span="65-65"];
m0_36 [cluster="HangFire.Server.WorkerPool.Dispose()", file="JobDispatcher.cs", label=_workers, span="70-70"];
m0_38 [cluster="HangFire.Server.WorkerPool.Dispose()", file="JobDispatcher.cs", label="_logger.Info(''Workers were stopped.'')", span="74-74"];
m0_39 [cluster="HangFire.Server.WorkerPool.Dispose()", file="JobDispatcher.cs", label="_freeWorkers.Dispose()", span="76-76"];
m0_31 [cluster="HangFire.Server.WorkerPool.Dispose()", file="JobDispatcher.cs", label="return;", span="60-60"];
m0_35 [cluster="HangFire.Server.WorkerPool.Dispose()", file="JobDispatcher.cs", label="worker.Stop()", span="67-67"];
m0_37 [cluster="HangFire.Server.WorkerPool.Dispose()", file="JobDispatcher.cs", label="worker.Dispose()", span="72-72"];
m0_40 [cluster="HangFire.Server.WorkerPool.Dispose()", file="JobDispatcher.cs", label="Exit HangFire.Server.WorkerPool.Dispose()", span="57-57"];
m0_18 [cluster="HangFire.Server.Worker.Start()", file="JobDispatcher.cs", label="Entry HangFire.Server.Worker.Start()", span="55-55"];
m0_15 [cluster="Unk.Info", file="JobDispatcher.cs", label="Entry Unk.Info", span=""];
m0_48 [file="JobDispatcher.cs", label="HangFire.Server.WorkerPool", span=""];
m1_11 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", file="JobDispatcherPool.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", span="0-0"];
m1_20 [cluster="HangFire.JobDispatcherPool.NotifyReady(HangFire.JobDispatcher)", file="JobDispatcherPool.cs", label="Entry HangFire.JobDispatcherPool.NotifyReady(HangFire.JobDispatcher)", span="32-32"];
m1_21 [cluster="HangFire.JobDispatcherPool.NotifyReady(HangFire.JobDispatcher)", file="JobDispatcherPool.cs", label="_freeDispatchers.Add(dispatcher)", span="34-34"];
m1_22 [cluster="HangFire.JobDispatcherPool.NotifyReady(HangFire.JobDispatcher)", file="JobDispatcherPool.cs", label="Exit HangFire.JobDispatcherPool.NotifyReady(HangFire.JobDispatcher)", span="32-32"];
m1_12 [cluster="HangFire.JobDispatcher.JobDispatcher(HangFire.JobDispatcherPool)", file="JobDispatcherPool.cs", label="Entry HangFire.JobDispatcher.JobDispatcher(HangFire.JobDispatcherPool)", span="18-18"];
m1_24 [cluster="HangFire.JobDispatcherPool.NotifyCompleted(string, System.Exception)", file="JobDispatcherPool.cs", label="Entry HangFire.JobDispatcherPool.NotifyCompleted(string, System.Exception)", span="37-37"];
m1_25 [cluster="HangFire.JobDispatcherPool.NotifyCompleted(string, System.Exception)", file="JobDispatcherPool.cs", label="var onJobCompleted = JobCompleted", span="39-39"];
m1_27 [cluster="HangFire.JobDispatcherPool.NotifyCompleted(string, System.Exception)", file="JobDispatcherPool.cs", label="onJobCompleted(this, new Tuple<string, Exception>(job, ex))", span="42-42"];
m1_26 [cluster="HangFire.JobDispatcherPool.NotifyCompleted(string, System.Exception)", file="JobDispatcherPool.cs", label="onJobCompleted != null", span="40-40"];
m1_28 [cluster="HangFire.JobDispatcherPool.NotifyCompleted(string, System.Exception)", file="JobDispatcherPool.cs", label="Exit HangFire.JobDispatcherPool.NotifyCompleted(string, System.Exception)", span="37-37"];
m1_9 [cluster="System.Collections.Generic.List<T>.List(int)", file="JobDispatcherPool.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m1_29 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="JobDispatcherPool.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m1_13 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JobDispatcherPool.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_14 [cluster="HangFire.JobDispatcherPool.Process(string)", file="JobDispatcherPool.cs", label="Entry HangFire.JobDispatcherPool.Process(string)", span="26-26"];
m1_15 [cluster="HangFire.JobDispatcherPool.Process(string)", color=red, community=0, file="JobDispatcherPool.cs", label="0: var freeDispatcher = _freeDispatchers.Take()", span="28-28"];
m1_16 [cluster="HangFire.JobDispatcherPool.Process(string)", color=red, community=0, file="JobDispatcherPool.cs", label="0: freeDispatcher.Process(serializedJob)", span="29-29"];
m1_17 [cluster="HangFire.JobDispatcherPool.Process(string)", file="JobDispatcherPool.cs", label="Exit HangFire.JobDispatcherPool.Process(string)", span="26-26"];
m1_30 [cluster="System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", file="JobDispatcherPool.cs", label="Entry System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", span="0-0"];
m1_0 [cluster="HangFire.JobDispatcherPool.JobDispatcherPool(int)", file="JobDispatcherPool.cs", label="Entry HangFire.JobDispatcherPool.JobDispatcherPool(int)", span="11-11"];
m1_1 [cluster="HangFire.JobDispatcherPool.JobDispatcherPool(int)", file="JobDispatcherPool.cs", label="_dispatchers = new List<JobDispatcher>(count)", span="13-13"];
m1_4 [cluster="HangFire.JobDispatcherPool.JobDispatcherPool(int)", file="JobDispatcherPool.cs", label="i < count", span="17-17"];
m1_2 [cluster="HangFire.JobDispatcherPool.JobDispatcherPool(int)", file="JobDispatcherPool.cs", label="_freeDispatchers = new BlockingCollection<JobDispatcher>(\r\n                new ConcurrentQueue<JobDispatcher>())", span="14-15"];
m1_3 [cluster="HangFire.JobDispatcherPool.JobDispatcherPool(int)", file="JobDispatcherPool.cs", label="var i = 0", span="17-17"];
m1_7 [cluster="HangFire.JobDispatcherPool.JobDispatcherPool(int)", file="JobDispatcherPool.cs", label="i++", span="17-17"];
m1_5 [cluster="HangFire.JobDispatcherPool.JobDispatcherPool(int)", color=red, community=0, file="JobDispatcherPool.cs", label="0: var dispatcher = new JobDispatcher(this)", span="19-19"];
m1_6 [cluster="HangFire.JobDispatcherPool.JobDispatcherPool(int)", file="JobDispatcherPool.cs", label="_dispatchers.Add(dispatcher)", span="20-20"];
m1_8 [cluster="HangFire.JobDispatcherPool.JobDispatcherPool(int)", file="JobDispatcherPool.cs", label="Exit HangFire.JobDispatcherPool.JobDispatcherPool(int)", span="11-11"];
m1_23 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Add(T)", file="JobDispatcherPool.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Add(T)", span="0-0"];
m1_19 [cluster="HangFire.JobDispatcher.Process(string)", file="JobDispatcherPool.cs", label="Entry HangFire.JobDispatcher.Process(string)", span="26-26"];
m1_10 [cluster="System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection(System.Collections.Concurrent.IProducerConsumerCollection<T>)", file="JobDispatcherPool.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection(System.Collections.Concurrent.IProducerConsumerCollection<T>)", span="0-0"];
m1_18 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Take()", file="JobDispatcherPool.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Take()", span="0-0"];
m1_31 [file="JobDispatcherPool.cs", label="HangFire.JobDispatcherPool", span=""];
m2_53 [cluster="Hangfire.Storage.IStorageConnection.GetStateData(string)", file="JobFetcher.cs", label="Entry Hangfire.Storage.IStorageConnection.GetStateData(string)", span="45-45"];
m2_82 [cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="JobFetcher.cs", label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="75-75"];
m2_0 [cluster="HangFire.JobFetcher.TakeNext()", file="JobFetcher.cs", label="Entry HangFire.JobFetcher.TakeNext()", span="6-6"];
m2_1 [cluster="HangFire.JobFetcher.TakeNext()", file="JobFetcher.cs", label="var redis = Factory.CreateRedisClient()", span="9-9"];
m2_84 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JobFetcher.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m2_116 [cluster="System.Collections.Generic.List<T>.List()", file="JobFetcher.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_10 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", color=red, community=0, file="JobFetcher.cs", label="0: _stateChanger = stateChanger", span="57-57"];
m2_85 [cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", file="JobFetcher.cs", label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", span="35-35"];
m2_78 [cluster="string.IsNullOrWhiteSpace(string)", file="JobFetcher.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m2_4 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="JobFetcher.cs", label="Entry Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", span="49-49"];
m2_48 [cluster="Hangfire.ContinuationsSupportAttribute.Continuation.Continuation()", file="JobFetcher.cs", label="Entry Hangfire.ContinuationsSupportAttribute.Continuation.Continuation()", span="266-266"];
m2_80 [cluster="JsonSerializerSettings.cstr", file="JobFetcher.cs", label="Entry JsonSerializerSettings.cstr", span=""];
m2_45 [cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", file="JobFetcher.cs", label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", span="25-25"];
m2_107 [cluster="System.Threading.Thread.Sleep(int)", file="JobFetcher.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m2_50 [cluster="Hangfire.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.ContinuationsSupportAttribute.Continuation>)", file="JobFetcher.cs", label="Entry Hangfire.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.ContinuationsSupportAttribute.Continuation>)", span="250-250"];
m2_108 [cluster="Hangfire.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.ContinuationsSupportAttribute.Continuation>)", file="JobFetcher.cs", label="connection.SetJobParameter(jobId, ''Continuations'', JobHelper.ToJson(continuations))", span="253-253"];
m2_109 [cluster="Hangfire.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.ContinuationsSupportAttribute.Continuation>)", file="JobFetcher.cs", label="Exit Hangfire.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.ContinuationsSupportAttribute.Continuation>)", span="250-250"];
m2_83 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JobFetcher.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m2_111 [cluster="Hangfire.Storage.IStorageConnection.SetJobParameter(string, string, string)", file="JobFetcher.cs", label="Entry Hangfire.Storage.IStorageConnection.SetJobParameter(string, string, string)", span="38-38"];
m2_79 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="JobFetcher.cs", label="Entry Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", span="205-205"];
m2_87 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="JobFetcher.cs", label="StateData currentState = null", span="207-207"];
m2_91 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="JobFetcher.cs", label="var continuationData = context.Connection.GetJobData(continuationJobId)", span="214-214"];
m2_93 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="JobFetcher.cs", label="Logger.Warn(\r\n                        $''Can not start continuation '{continuationJobId}' for background job '{context.BackgroundJob.Id}': continuation does not exist.'')", span="217-218"];
m2_94 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="JobFetcher.cs", label="currentState = context.Connection.GetStateData(continuationJobId)", span="223-223"];
m2_97 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="JobFetcher.cs", label="Logger.Warn(\r\n                        $''Continuation '{continuationJobId}' has been ignored: it was deemed to be aborted, because its state is still non-initialized.'')", span="231-232"];
m2_98 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="JobFetcher.cs", label="DateTime.UtcNow >= started.Add(timeout)", span="237-237"];
m2_99 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="JobFetcher.cs", label="throw new TimeoutException(\r\n                        $''Can not start continuation '{continuationJobId}' for background job '{context.BackgroundJob.Id}': timeout expired while trying to fetch continuation state.'');", span="239-240"];
m2_88 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="JobFetcher.cs", label="var started = DateTime.UtcNow", span="209-209"];
m2_102 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="JobFetcher.cs", label="return currentState;", span="247-247"];
m2_89 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="JobFetcher.cs", label="var firstAttempt = true", span="210-210"];
m2_90 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="JobFetcher.cs", label=true, span="212-212"];
m2_100 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="JobFetcher.cs", label="Thread.Sleep(firstAttempt ? 0 : 1)", span="243-243"];
m2_92 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="JobFetcher.cs", label="continuationData == null", span="215-215"];
m2_96 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="JobFetcher.cs", label="DateTime.UtcNow - continuationData.CreatedAt > ContinuationInvalidTimeout", span="229-229"];
m2_95 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="JobFetcher.cs", label="currentState != null", span="224-224"];
m2_101 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="JobFetcher.cs", label="firstAttempt = false", span="244-244"];
m2_103 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="JobFetcher.cs", label="Exit Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", span="205-205"];
m2_81 [cluster="Unk.>", file="JobFetcher.cs", label="Entry Unk.>", span=""];
m2_6 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="JobFetcher.cs", label="throw new ArgumentNullException(nameof(knownFinalStates));", span="53-53"];
m2_8 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", color=green, community=0, file="JobFetcher.cs", label="0: throw new ArgumentNullException(nameof(stateChanger));", span="54-54"];
m2_7 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="JobFetcher.cs", label="stateChanger == null", span="54-54"];
m2_9 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", color=red, community=0, file="JobFetcher.cs", label="0: _knownFinalStates = knownFinalStates", span="56-56"];
m2_54 [cluster="System.Enum.HasFlag(System.Enum)", file="JobFetcher.cs", label="Entry System.Enum.HasFlag(System.Enum)", span="0-0"];
m2_46 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", file="JobFetcher.cs", label="Entry Hangfire.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", span="256-256"];
m2_112 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", file="JobFetcher.cs", label="return JobHelper.FromJson<List<Continuation>>(connection.GetJobParameter(\r\n                jobId, ''Continuations'')) ?? new List<Continuation>();", span="258-259"];
m2_113 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", file="JobFetcher.cs", label="Exit Hangfire.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", span="256-256"];
m2_47 [cluster="System.Collections.Generic.List<T>.Exists(System.Predicate<T>)", file="JobFetcher.cs", label="Entry System.Collections.Generic.List<T>.Exists(System.Predicate<T>)", span="0-0"];
m2_5 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="JobFetcher.cs", label="knownFinalStates == null", span="53-53"];
m2_15 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label="Entry Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="64-64"];
m2_16 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label="var awaitingState = context.CandidateState as AwaitingState", span="66-66"];
m2_18 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label="AddContinuation(context, awaitingState)", span="70-70"];
m2_19 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label="_knownFinalStates.Contains(context.CandidateState.Name)", span="72-72"];
m2_20 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label="ExecuteContinuationsIfExist(context)", span="75-75"];
m2_17 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label="awaitingState != null", span="67-67"];
m2_21 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label="Exit Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="64-64"];
m2_14 [cluster="Unk.nameof", file="JobFetcher.cs", label="Entry Unk.nameof", span=""];
m2_51 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="JobFetcher.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m2_52 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JobFetcher.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m2_55 [cluster="Hangfire.States.DeletedState.DeletedState()", file="JobFetcher.cs", label="Entry Hangfire.States.DeletedState.DeletedState()", span="65-65"];
m2_105 [cluster="System.DateTime.Add(System.TimeSpan)", file="JobFetcher.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m2_22 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="JobFetcher.cs", label="Entry Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", span="88-88"];
m2_30 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="JobFetcher.cs", label="var connection = context.Connection", span="90-90"];
m2_31 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="JobFetcher.cs", label="var parentId = awaitingState.ParentId", span="91-91"];
m2_34 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="JobFetcher.cs", label="!continuations.Exists(x => x.JobId == context.BackgroundJob.Id)", span="104-104"];
m2_35 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="JobFetcher.cs", label="continuations.Add(new Continuation { JobId = context.BackgroundJob.Id, Options = awaitingState.Options })", span="106-106"];
m2_42 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="JobFetcher.cs", label="var startImmediately = !awaitingState.Options.HasFlag(JobContinuationOptions.OnlyOnSucceededState) ||\r\n                        currentState.Name == SucceededState.StateName", span="128-129"];
m2_43 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="JobFetcher.cs", label="context.CandidateState = startImmediately\r\n                        ? awaitingState.NextState\r\n                        : new DeletedState { Reason = ''Continuation condition was not met'' }", span="131-133"];
m2_32 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="JobFetcher.cs", label="connection.AcquireDistributedJobLock(parentId, AddJobLockTimeout)", span="97-97"];
m2_33 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="JobFetcher.cs", label="var continuations = GetContinuations(connection, parentId)", span="99-99"];
m2_36 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="JobFetcher.cs", label="SetContinuations(connection, parentId, continuations)", span="111-111"];
m2_37 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="JobFetcher.cs", label="var jobData = connection.GetJobData(parentId)", span="114-114"];
m2_40 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="JobFetcher.cs", label="var currentState = connection.GetStateData(parentId)", span="124-124"];
m2_39 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="JobFetcher.cs", label="throw new InvalidOperationException(\r\n                        $''Can not add a continuation: parent background job '{parentId}' does not exist.'');", span="120-121"];
m2_38 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="JobFetcher.cs", label="jobData == null", span="115-115"];
m2_41 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="JobFetcher.cs", label="currentState != null && _knownFinalStates.Contains(currentState.Name)", span="126-126"];
m2_44 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="JobFetcher.cs", label="Exit Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", span="88-88"];
m2_77 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobFetcher.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_115 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="JobFetcher.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m2_11 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", color=red, community=0, file="JobFetcher.cs", label="0: Order = 1000", span="61-61"];
m2_12 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="JobFetcher.cs", label="Exit Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", span="49-49"];
m2_106 [cluster="System.TimeoutException.TimeoutException(string)", file="JobFetcher.cs", label="Entry System.TimeoutException.TimeoutException(string)", span="0-0"];
m2_25 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="JobFetcher.cs", label="Entry Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="79-79"];
m2_26 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="JobFetcher.cs", label="var awaitingState = context.NewState as AwaitingState", span="81-81"];
m2_28 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="JobFetcher.cs", label="context.JobExpirationTimeout = awaitingState.Expiration", span="84-84"];
m2_27 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="JobFetcher.cs", label="awaitingState != null", span="82-82"];
m2_29 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="JobFetcher.cs", label="Exit Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="79-79"];
m2_104 [cluster="Hangfire.Logging.ILog.Warn(string)", file="JobFetcher.cs", label="Entry Hangfire.Logging.ILog.Warn(string)", span="264-264"];
m2_24 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label="Entry Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", span="138-138"];
m2_59 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label="var continuations = GetContinuations(context.Connection, context.BackgroundJob.Id)", span="142-142"];
m2_63 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label="var currentState = GetContinuaionState(context, continuation.JobId, ContinuationStateFetchTimeout)", span="151-151"];
m2_67 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label="continuation.Options.HasFlag(JobContinuationOptions.OnlyOnSucceededState) &&\r\n                    context.CandidateState.Name != SucceededState.StateName", span="163-164"];
m2_75 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label="_stateChanger.ChangeState(new StateChangeContext(\r\n                    context.Storage,\r\n                    context.Connection,\r\n                    tuple.Key,\r\n                    tuple.Value,\r\n                    AwaitingState.StateName))", span="196-201"];
m2_60 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label="var nextStates = new Dictionary<string, IState>()", span="143-143"];
m2_61 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label=continuations, span="147-147"];
m2_72 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label="!nextStates.ContainsKey(continuation.JobId)", span="185-185"];
m2_73 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label="nextStates.Add(continuation.JobId, nextState)", span="190-190"];
m2_74 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label=nextStates, span="194-194"];
m2_62 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label="String.IsNullOrWhiteSpace(continuation.JobId)", span="149-149"];
m2_64 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label="currentState == null", span="152-152"];
m2_65 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label="currentState.Name != AwaitingState.StateName", span="159-159"];
m2_69 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label="nextState = JsonConvert.DeserializeObject<IState>(\r\n                            currentState.Data[''NextState''],\r\n                            new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.Objects })", span="172-174"];
m2_66 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label="IState nextState", span="161-161"];
m2_68 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label="nextState = new DeletedState { Reason = ''Continuation condition was not met'' }", span="166-166"];
m2_70 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label=Exception, span="176-176"];
m2_71 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label="nextState = new FailedState(ex)\r\n                        {\r\n                            Reason = ''An error occurred while deserializing the continuation''\r\n                        }", span="178-181"];
m2_76 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="JobFetcher.cs", label="Exit Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", span="138-138"];
m2_110 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="JobFetcher.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m2_56 [cluster="lambda expression", file="JobFetcher.cs", label="Entry lambda expression", span="104-104"];
m2_57 [cluster="lambda expression", file="JobFetcher.cs", label="x.JobId == context.BackgroundJob.Id", span="104-104"];
m2_58 [cluster="lambda expression", file="JobFetcher.cs", label="Exit lambda expression", span="104-104"];
m2_2 [cluster="HangFire.JobFetcher.TakeNext()", color=green, community=0, file="JobFetcher.cs", label="0: return redis.BlockingDequeueItemFromList(''queue:default'', null);", span="11-11"];
m2_3 [cluster="HangFire.JobFetcher.TakeNext()", file="JobFetcher.cs", label="Exit HangFire.JobFetcher.TakeNext()", span="6-6"];
m2_49 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JobFetcher.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_114 [cluster="Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", file="JobFetcher.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", span="39-39"];
m2_117 [cluster="Hangfire.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="JobFetcher.cs", label="Entry Hangfire.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="262-262"];
m2_118 [cluster="Hangfire.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="JobFetcher.cs", label="Exit Hangfire.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="262-262"];
m2_86 [cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="JobFetcher.cs", label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25"];
m2_23 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="JobFetcher.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m2_119 [file="JobFetcher.cs", label="Hangfire.ContinuationsSupportAttribute", span=""];
m2_120 [file="JobFetcher.cs", label="Hangfire.States.ElectStateContext", span=""];
n63 -> n1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n63 -> n43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n45  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n46  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n4 -> n47  [key=2, style=dotted];
n4 -> n9  [color=darkseagreen4, key=1, label=from, style=dashed];
n5 -> n6  [key=0, style=solid];
n5 -> n47  [key=2, style=dotted];
n5 -> n9  [color=darkseagreen4, key=1, label=perPage, style=dashed];
n9 -> n10  [key=0, style=solid];
n9 -> n49  [key=2, style=dotted];
n9 -> n50  [key=2, style=dotted];
n9 -> n51  [key=2, style=dotted];
n9 -> n12  [color=darkseagreen4, key=1, label=pager, style=dashed];
n9 -> n14  [color=darkseagreen4, key=1, label=pager, style=dashed];
n9 -> n43  [color=darkseagreen4, key=1, label=pager, style=dashed];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n8 -> n48  [key=2, style=dotted];
n8 -> n10  [color=darkseagreen4, key=1, label=monitor, style=dashed];
n48 -> n48  [color=darkorchid, key=3, label="Local variable int queueIndex", style=bold];
n10 -> n11  [key=0, style=solid];
n10 -> n52  [key=2, style=dotted];
n10 -> n16  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
n12 -> n13  [key=0, style=solid];
n12 -> n14  [key=0, style=solid];
n14 -> n15  [key=0, style=solid];
n14 -> n53  [key=2, style=dotted];
n14 -> n54  [key=2, style=dotted];
n14 -> n55  [key=2, style=dotted];
n43 -> n44  [key=0, style=solid];
n43 -> n62  [key=2, style=dotted];
n43 -> n54  [key=2, style=dotted];
n43 -> n55  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n11 -> n45  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n42  [key=0, style=solid];
n16 -> n18  [color=darkseagreen4, key=1, label=job, style=dashed];
n13 -> n44  [key=0, style=solid];
n13 -> n45  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n45  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n45  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n45  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid];
n18 -> n56  [key=2, style=dotted];
n18 -> n18  [color=darkseagreen4, key=1, label=job, style=dashed];
n18 -> n20  [color=darkseagreen4, key=1, label=job, style=dashed];
n19 -> n20  [key=0, style=solid];
n19 -> n45  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n51  [key=2, style=dotted];
n20 -> n56  [key=2, style=dotted];
n20 -> n20  [color=darkseagreen4, key=1, label=job, style=dashed];
n20 -> n22  [color=darkseagreen4, key=1, label=job, style=dashed];
n21 -> n22  [key=0, style=solid];
n21 -> n45  [key=2, style=dotted];
n22 -> n23  [key=0, style=solid];
n22 -> n57  [key=2, style=dotted];
n22 -> n55  [key=2, style=dotted];
n22 -> n22  [color=darkseagreen4, key=1, label=job, style=dashed];
n22 -> n24  [color=darkseagreen4, key=1, label=job, style=dashed];
n23 -> n24  [key=0, style=solid];
n23 -> n45  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n26  [key=0, style=solid];
n24 -> n24  [color=darkseagreen4, key=1, label=job, style=dashed];
n24 -> n27  [color=darkseagreen4, key=1, label=job, style=dashed];
n25 -> n26  [key=0, style=solid];
n25 -> n45  [key=2, style=dotted];
n26 -> n27  [key=0, style=solid];
n26 -> n45  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n58  [key=2, style=dotted];
n27 -> n56  [key=2, style=dotted];
n27 -> n27  [color=darkseagreen4, key=1, label=job, style=dashed];
n27 -> n29  [color=darkseagreen4, key=1, label=job, style=dashed];
n28 -> n29  [key=0, style=solid];
n28 -> n45  [key=2, style=dotted];
n29 -> n30  [key=0, style=solid];
n29 -> n56  [key=2, style=dotted];
n29 -> n29  [color=darkseagreen4, key=1, label=job, style=dashed];
n29 -> n31  [color=darkseagreen4, key=1, label=job, style=dashed];
n30 -> n31  [key=0, style=solid];
n30 -> n45  [key=2, style=dotted];
n31 -> n32  [key=0, style=solid];
n31 -> n59  [key=2, style=dotted];
n31 -> n55  [key=2, style=dotted];
n31 -> n31  [color=darkseagreen4, key=1, label=job, style=dashed];
n31 -> n33  [color=darkseagreen4, key=1, label=job, style=dashed];
n32 -> n33  [key=0, style=solid];
n32 -> n45  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n60  [key=2, style=dotted];
n33 -> n56  [key=2, style=dotted];
n33 -> n33  [color=darkseagreen4, key=1, label=job, style=dashed];
n33 -> n35  [color=darkseagreen4, key=1, label=job, style=dashed];
n34 -> n35  [key=0, style=solid];
n34 -> n45  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n61  [key=2, style=dotted];
n35 -> n56  [key=2, style=dotted];
n35 -> n35  [color=darkseagreen4, key=1, label=job, style=dashed];
n35 -> n37  [color=darkseagreen4, key=1, label=job, style=dashed];
n36 -> n37  [key=0, style=solid];
n36 -> n45  [key=2, style=dotted];
n37 -> n38  [key=0, style=solid];
n37 -> n41  [key=0, style=solid];
n37 -> n37  [color=darkseagreen4, key=1, label=job, style=dashed];
n37 -> n39  [color=darkseagreen4, key=1, label=job, style=dashed];
n38 -> n39  [key=0, style=solid];
n38 -> n45  [key=2, style=dotted];
n41 -> n16  [key=0, style=solid];
n41 -> n45  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n39 -> n51  [key=2, style=dotted];
n39 -> n56  [key=2, style=dotted];
n39 -> n39  [color=darkseagreen4, key=1, label=job, style=dashed];
n40 -> n41  [key=0, style=solid];
n40 -> n45  [key=2, style=dotted];
n44 -> n0  [color=blue, key=0, style=bold];
d1 -> d2  [color=green, key=0, style=solid];
d1 -> d3  [color=green, key=0, style=solid];
d0 -> d1  [color=green, key=0, style=solid];
d0 -> d3  [color=darkseagreen4, key=1, label=BasicDeliverEventArgs, style=dashed];
d0 -> d4  [color=darkseagreen4, key=1, label="ref IModel", style=dashed];
d2 -> d6  [color=green, key=0, style=solid];
d2 -> d7  [color=green, key=2, style=dotted];
d3 -> d4  [key=0, style=solid];
d6 -> d0  [color=blue, key=0, style=bold];
d10 -> d11  [color=green, key=0, style=solid];
d10 -> d12  [color=green, key=0, style=solid];
d31 -> d10  [color=green, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
d31 -> d12  [color=green, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
d31 -> d13  [color=green, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
d31 -> d20  [color=green, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
d31 -> d27  [color=green, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
d31 -> d28  [color=green, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
d31 -> d3  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
d31 -> d4  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
d31 -> d5  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
d31 -> d18  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
d31 -> d21  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
d31 -> d22  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
d31 -> d29  [color=darkseagreen4, key=1, label="HangFire.RabbitMQ.RabbitMqFetchedJob", style=dashed];
d9 -> d10  [color=green, key=0, style=solid];
d11 -> d14  [color=green, key=0, style=solid];
d11 -> d15  [color=green, key=2, style=dotted];
d12 -> d13  [color=green, key=0, style=solid];
d12 -> d16  [color=green, key=2, style=dotted];
d14 -> d9  [color=blue, key=0, style=bold];
d13 -> d14  [color=green, key=0, style=solid];
d20 -> d21  [color=green, key=0, style=solid];
d20 -> d24  [color=green, key=2, style=dotted];
d18 -> d20  [color=green, key=0, style=solid];
d18 -> d19  [key=0, style=solid];
d21 -> d22  [key=0, style=solid];
d21 -> d25  [key=2, style=dotted];
d27 -> d28  [color=green, key=0, style=solid];
d27 -> d29  [color=green, key=0, style=solid];
d26 -> d27  [color=green, key=0, style=solid];
d28 -> d29  [color=green, key=0, style=solid];
d28 -> d17  [color=green, key=2, style=dotted];
d29 -> d30  [key=0, style=solid];
d17 -> d18  [key=0, style=solid];
d4 -> d5  [key=0, style=solid];
d5 -> d6  [key=0, style=solid];
d5 -> d8  [key=2, style=dotted];
d22 -> d23  [key=0, style=solid];
d19 -> d15  [key=2, style=dotted];
d19 -> d23  [key=0, style=solid];
d30 -> d26  [color=blue, key=0, style=bold];
d23 -> d17  [color=blue, key=0, style=bold];
m0_44 -> m0_45  [key=0, style=solid];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_47  [key=2, style=dotted];
m0_46 -> m0_44  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_0 -> m0_3  [color=green, key=1, label="HangFire.Server.ServerContext", style=dashed];
m0_0 -> m0_5  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m0_0 -> m0_6  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> m0_12  [color=green, key=2, style=dotted];
m0_2 -> m0_3  [color=green, key=0, style=solid];
m0_2 -> m0_13  [color=green, key=2, style=dotted];
m0_3 -> m0_4  [color=green, key=0, style=solid];
m0_3 -> m0_14  [color=green, key=2, style=dotted];
m0_3 -> m0_15  [color=green, key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_6  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_4 -> m0_9  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_16  [key=2, style=dotted];
m0_6 -> m0_17  [key=2, style=dotted];
m0_6 -> m0_8  [color=darkseagreen4, key=1, label=worker, style=dashed];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_19  [key=2, style=dotted];
m0_10 -> m0_15  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_10  [key=0, style=solid];
m0_5 -> m0_5  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m0_9 -> m0_5  [key=0, style=solid];
m0_9 -> m0_9  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_18  [key=2, style=dotted];
m0_11 -> m0_0  [color=blue, key=0, style=bold];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_23  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_20 -> m0_22  [color=darkorchid, key=3, label="method methodReturn HangFire.Server.Worker TakeFree", style=bold];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_27  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_28  [key=2, style=dotted];
m0_23 -> m0_25  [color=darkseagreen4, key=1, label=worker, style=dashed];
m0_22 -> m0_23  [key=0, style=solid];
m0_24 -> m0_22  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_25 -> m0_26  [key=0, style=solid];
m0_26 -> m0_20  [color=blue, key=0, style=bold];
m0_29 -> m0_30  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_32  [key=0, style=solid];
m0_32 -> m0_33  [key=0, style=solid];
m0_33 -> m0_15  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_36  [key=0, style=solid];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_38  [key=0, style=solid];
m0_38 -> m0_15  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_43  [key=2, style=dotted];
m0_31 -> m0_40  [key=0, style=solid];
m0_35 -> m0_34  [key=0, style=solid];
m0_35 -> m0_41  [key=2, style=dotted];
m0_37 -> m0_36  [key=0, style=solid];
m0_37 -> m0_42  [key=2, style=dotted];
m0_40 -> m0_29  [color=blue, key=0, style=bold];
m0_48 -> m0_1  [color=green, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m0_48 -> m0_3  [color=green, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m0_48 -> m0_2  [color=green, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m0_48 -> m0_6  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m0_48 -> m0_8  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m0_48 -> m0_10  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m0_48 -> m0_21  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m0_48 -> m0_23  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m0_48 -> m0_30  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m0_48 -> m0_32  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m0_48 -> m0_33  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m0_48 -> m0_34  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m0_48 -> m0_36  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m0_48 -> m0_38  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m0_48 -> m0_39  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m0_48 -> m0_45  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerPool", style=dashed];
m1_20 -> m1_21  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=2, style=dotted];
m1_22 -> m1_20  [color=blue, key=0, style=bold];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_27  [color=darkseagreen4, key=1, label=onJobCompleted, style=dashed];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_29  [key=2, style=dotted];
m1_27 -> m1_30  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_28  [key=0, style=solid];
m1_28 -> m1_24  [color=blue, key=0, style=bold];
m1_14 -> m1_15  [color=red, key=0, style=solid];
m1_14 -> m1_16  [color=red, key=1, label=string, style=dashed];
m1_15 -> m1_16  [color=red, key=0, style=solid];
m1_15 -> m1_18  [color=red, key=2, style=dotted];
m1_16 -> m1_17  [color=red, key=0, style=solid];
m1_16 -> m1_19  [color=red, key=2, style=dotted];
m1_17 -> m1_14  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_9  [key=2, style=dotted];
m1_4 -> m1_5  [color=red, key=0, style=solid];
m1_4 -> m1_8  [key=0, style=solid];
m1_4 -> m1_4  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_10  [key=2, style=dotted];
m1_2 -> m1_11  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_7  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_7 -> m1_4  [key=0, style=solid];
m1_7 -> m1_7  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_5 -> m1_6  [color=red, key=0, style=solid];
m1_5 -> m1_12  [color=red, key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_13  [key=2, style=dotted];
m1_8 -> m1_0  [color=blue, key=0, style=bold];
m1_31 -> m1_1  [color=darkseagreen4, key=1, label="HangFire.JobDispatcherPool", style=dashed];
m1_31 -> m1_2  [color=darkseagreen4, key=1, label="HangFire.JobDispatcherPool", style=dashed];
m1_31 -> m1_5  [color=red, key=1, label="HangFire.JobDispatcherPool", style=dashed];
m1_31 -> m1_6  [color=darkseagreen4, key=1, label="HangFire.JobDispatcherPool", style=dashed];
m1_31 -> m1_15  [color=red, key=1, label="HangFire.JobDispatcherPool", style=dashed];
m1_31 -> m1_21  [color=darkseagreen4, key=1, label="HangFire.JobDispatcherPool", style=dashed];
m1_31 -> m1_25  [color=darkseagreen4, key=1, label="HangFire.JobDispatcherPool", style=dashed];
m1_31 -> m1_27  [color=darkseagreen4, key=1, label="HangFire.JobDispatcherPool", style=dashed];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [color=blue, key=0, style=bold];
m2_1 -> m2_2  [color=green, key=0, style=solid];
m2_1 -> m2_4  [key=2, style=dotted];
m2_10 -> m2_11  [color=red, key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.HashSet<string>", style=dashed];
m2_4 -> m2_7  [color=darkseagreen4, key=1, label="Hangfire.States.IBackgroundJobStateChanger", style=dashed];
m2_4 -> m2_8  [color=darkseagreen4, key=1, label="Hangfire.States.IBackgroundJobStateChanger", style=dashed];
m2_4 -> m2_9  [color=red, key=1, label="System.Collections.Generic.HashSet<string>", style=dashed];
m2_4 -> m2_10  [color=red, key=1, label="Hangfire.States.IBackgroundJobStateChanger", style=dashed];
m2_50 -> m2_108  [key=0, style=solid];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_110  [key=2, style=dotted];
m2_108 -> m2_111  [key=2, style=dotted];
m2_109 -> m2_50  [color=blue, key=0, style=bold];
m2_79 -> m2_87  [key=0, style=solid];
m2_79 -> m2_91  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m2_79 -> m2_93  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m2_79 -> m2_94  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m2_79 -> m2_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_79 -> m2_98  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m2_79 -> m2_99  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_102  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_51  [key=2, style=dotted];
m2_91 -> m2_96  [color=darkseagreen4, key=1, label=continuationData, style=dashed];
m2_93 -> m2_102  [key=0, style=solid];
m2_93 -> m2_104  [key=2, style=dotted];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_53  [key=2, style=dotted];
m2_94 -> m2_102  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m2_97 -> m2_102  [key=0, style=solid];
m2_97 -> m2_104  [key=2, style=dotted];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_100  [key=0, style=solid];
m2_98 -> m2_105  [key=2, style=dotted];
m2_99 -> m2_103  [key=0, style=solid];
m2_99 -> m2_106  [key=2, style=dotted];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_98  [color=darkseagreen4, key=1, label=started, style=dashed];
m2_102 -> m2_103  [key=0, style=solid];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_100  [color=darkseagreen4, key=1, label=firstAttempt, style=dashed];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_102  [key=0, style=solid];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_107  [key=2, style=dotted];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_94  [key=0, style=solid];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_98  [key=0, style=solid];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_102  [key=0, style=solid];
m2_101 -> m2_90  [key=0, style=solid];
m2_103 -> m2_79  [color=blue, key=0, style=bold];
m2_6 -> m2_8  [color=green, key=1, label=string, style=dashed];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_12  [key=0, style=solid];
m2_6 -> d7  [key=2, style=dotted];
m2_6 -> m2_14  [key=2, style=dotted];
m2_8 -> m2_9  [color=green, key=0, style=solid];
m2_8 -> m2_10  [color=green, key=2, style=dotted];
m2_8 -> m2_12  [key=0, style=solid];
m2_8 -> d7  [key=2, style=dotted];
m2_8 -> m2_14  [key=2, style=dotted];
m2_7 -> m2_8  [color=green, key=0, style=solid];
m2_7 -> m2_4  [key=2, style=dotted];
m2_7 -> m2_9  [color=red, key=0, style=solid];
m2_9 -> m2_6  [color=blue, key=0, style=bold];
m2_9 -> m2_10  [color=red, key=0, style=solid];
m2_46 -> m2_112  [key=0, style=solid];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_114  [key=2, style=dotted];
m2_112 -> m2_115  [key=2, style=dotted];
m2_112 -> m2_116  [key=2, style=dotted];
m2_113 -> m2_46  [color=blue, key=0, style=bold];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_18  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m2_15 -> m2_19  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m2_15 -> m2_20  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_18  [color=darkseagreen4, key=1, label=awaitingState, style=dashed];
m2_18 -> m2_21  [key=0, style=solid];
m2_18 -> m2_22  [key=2, style=dotted];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_21  [key=0, style=solid];
m2_19 -> m2_23  [key=2, style=dotted];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_24  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_19  [key=0, style=solid];
m2_21 -> m2_15  [color=blue, key=0, style=bold];
m2_22 -> m2_30  [key=0, style=solid];
m2_22 -> m2_31  [color=darkseagreen4, key=1, label="Hangfire.States.AwaitingState", style=dashed];
m2_22 -> m2_34  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m2_22 -> m2_57  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m2_22 -> m2_35  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m2_22 -> m2_42  [color=darkseagreen4, key=1, label="Hangfire.States.AwaitingState", style=dashed];
m2_22 -> m2_43  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_32  [color=darkseagreen4, key=1, label=connection, style=dashed];
m2_30 -> m2_33  [color=darkseagreen4, key=1, label=connection, style=dashed];
m2_30 -> m2_36  [color=darkseagreen4, key=1, label=connection, style=dashed];
m2_30 -> m2_37  [color=darkseagreen4, key=1, label=connection, style=dashed];
m2_30 -> m2_40  [color=darkseagreen4, key=1, label=connection, style=dashed];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_33  [color=darkseagreen4, key=1, label=parentId, style=dashed];
m2_31 -> m2_36  [color=darkseagreen4, key=1, label=parentId, style=dashed];
m2_31 -> m2_37  [color=darkseagreen4, key=1, label=parentId, style=dashed];
m2_31 -> m2_39  [color=darkseagreen4, key=1, label=parentId, style=dashed];
m2_31 -> m2_40  [color=darkseagreen4, key=1, label=parentId, style=dashed];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_37  [key=0, style=solid];
m2_34 -> m2_47  [key=2, style=dotted];
m2_34 -> m2_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_48  [key=2, style=dotted];
m2_35 -> m2_49  [key=2, style=dotted];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_54  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_55  [key=2, style=dotted];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_45  [key=2, style=dotted];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_46  [key=2, style=dotted];
m2_33 -> m2_35  [color=darkseagreen4, key=1, label=continuations, style=dashed];
m2_33 -> m2_36  [color=darkseagreen4, key=1, label=continuations, style=dashed];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_50  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_51  [key=2, style=dotted];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_53  [key=2, style=dotted];
m2_40 -> m2_42  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m2_39 -> m2_44  [key=0, style=solid];
m2_39 -> m2_52  [key=2, style=dotted];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_40  [key=0, style=solid];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_44  [key=0, style=solid];
m2_41 -> m2_23  [key=2, style=dotted];
m2_44 -> m2_22  [color=blue, key=0, style=bold];
m2_11 -> m2_12  [color=red, key=0, style=solid];
m2_12 -> m2_4  [color=blue, key=0, style=bold];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_28  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_28  [color=darkseagreen4, key=1, label=awaitingState, style=dashed];
m2_28 -> m2_29  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_29  [key=0, style=solid];
m2_29 -> m2_25  [color=blue, key=0, style=bold];
m2_24 -> m2_59  [key=0, style=solid];
m2_24 -> m2_63  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m2_24 -> m2_67  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m2_24 -> m2_75  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_46  [key=2, style=dotted];
m2_59 -> m2_61  [color=darkseagreen4, key=1, label=continuations, style=dashed];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_79  [key=2, style=dotted];
m2_63 -> m2_63  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m2_63 -> m2_65  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m2_63 -> m2_67  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m2_63 -> m2_69  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_69  [key=0, style=solid];
m2_67 -> m2_54  [key=2, style=dotted];
m2_67 -> m2_67  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m2_67 -> m2_72  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m2_75 -> m2_74  [key=0, style=solid];
m2_75 -> m2_85  [key=2, style=dotted];
m2_75 -> m2_86  [key=2, style=dotted];
m2_75 -> m2_75  [color=darkseagreen4, key=1, label=tuple, style=dashed];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_77  [key=2, style=dotted];
m2_60 -> m2_72  [color=darkseagreen4, key=1, label=nextStates, style=dashed];
m2_60 -> m2_73  [color=darkseagreen4, key=1, label=nextStates, style=dashed];
m2_60 -> m2_74  [color=darkseagreen4, key=1, label=nextStates, style=dashed];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_74  [key=0, style=solid];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_61  [key=0, style=solid];
m2_72 -> m2_83  [key=2, style=dotted];
m2_72 -> m2_72  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m2_73 -> m2_61  [key=0, style=solid];
m2_73 -> m2_84  [key=2, style=dotted];
m2_73 -> m2_73  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_76  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_61  [key=0, style=solid];
m2_62 -> m2_78  [key=2, style=dotted];
m2_62 -> m2_62  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_61  [key=0, style=solid];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_61  [key=0, style=solid];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_72  [key=0, style=solid];
m2_69 -> m2_80  [key=2, style=dotted];
m2_69 -> m2_81  [key=2, style=dotted];
m2_66 -> m2_67  [key=0, style=solid];
m2_68 -> m2_72  [key=0, style=solid];
m2_68 -> m2_55  [key=2, style=dotted];
m2_68 -> m2_73  [color=darkseagreen4, key=1, label=nextState, style=dashed];
m2_70 -> m2_71  [key=0, style=solid];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_82  [key=2, style=dotted];
m2_71 -> m2_73  [color=darkseagreen4, key=1, label=nextState, style=dashed];
m2_76 -> m2_24  [color=blue, key=0, style=bold];
m2_56 -> m2_57  [key=0, style=solid];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_57  [color=darkseagreen4, key=1, label="Hangfire.ContinuationsSupportAttribute.Continuation", style=dashed];
m2_58 -> m2_56  [color=blue, key=0, style=bold];
m2_2 -> m2_3  [color=green, key=0, style=solid];
m2_2 -> m2_5  [color=green, key=2, style=dotted];
m2_3 -> m2_2  [color=blue, key=0, style=bold];
m2_3 -> m2_0  [color=blue, key=0, style=bold];
m2_117 -> m2_118  [key=0, style=solid];
m2_118 -> m2_117  [color=blue, key=0, style=bold];
m2_119 -> m2_9  [color=red, key=1, label="Hangfire.ContinuationsSupportAttribute", style=dashed];
m2_119 -> m2_10  [color=red, key=1, label="Hangfire.ContinuationsSupportAttribute", style=dashed];
m2_119 -> m2_11  [color=red, key=1, label="Hangfire.ContinuationsSupportAttribute", style=dashed];
m2_119 -> m2_18  [color=darkseagreen4, key=1, label="Hangfire.ContinuationsSupportAttribute", style=dashed];
m2_119 -> m2_19  [color=darkseagreen4, key=1, label="Hangfire.ContinuationsSupportAttribute", style=dashed];
m2_119 -> m2_20  [color=darkseagreen4, key=1, label="Hangfire.ContinuationsSupportAttribute", style=dashed];
m2_119 -> m2_41  [color=darkseagreen4, key=1, label="Hangfire.ContinuationsSupportAttribute", style=dashed];
m2_119 -> m2_75  [color=darkseagreen4, key=1, label="Hangfire.ContinuationsSupportAttribute", style=dashed];
m2_120 -> m2_57  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
}
