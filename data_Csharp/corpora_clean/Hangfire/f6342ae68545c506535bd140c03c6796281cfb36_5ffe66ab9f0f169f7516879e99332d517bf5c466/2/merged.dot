digraph  {
m0_5 [label="storage == null", span="70-70", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="BackgroundJobClient.cs"];
m0_15 [label="return new SqlServerDistributedLock(\r\n                String.Format(''HangFire:Job:{0}'', jobId), \r\n                _connection);", span="54-56", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="BackgroundJobClient.cs", color=green, community=0];
m0_117 [label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="236-236", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="BackgroundJobClient.cs"];
m0_123 [label="_connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data)) as Source (Id, Data) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = null ''\r\n                + @''when not matched then insert (Id, Data) values (Source.Id, Source.Data);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data) })", span="250-256", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="BackgroundJobClient.cs"];
m0_119 [label="throw new ArgumentNullException(''serverId'');", span="238-238", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="BackgroundJobClient.cs"];
m0_121 [label="throw new ArgumentNullException(''context'');", span="239-239", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="BackgroundJobClient.cs"];
m0_122 [label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="241-246", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="BackgroundJobClient.cs"];
m0_118 [label="serverId == null", span="238-238", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="BackgroundJobClient.cs"];
m0_120 [label="context == null", span="239-239", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="BackgroundJobClient.cs"];
m0_124 [label="Exit HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="236-236", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="BackgroundJobClient.cs"];
m0_28 [label="cancellationToken.ThrowIfCancellationRequested()", span="80-80", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="BackgroundJobClient.cs"];
m0_41 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="BackgroundJobClient.cs"];
m0_95 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="205-205", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="BackgroundJobClient.cs"];
m0_100 [label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="210-213", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="BackgroundJobClient.cs"];
m0_97 [label="throw new ArgumentNullException(''id'');", span="207-207", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="BackgroundJobClient.cs"];
m0_99 [label="throw new ArgumentNullException(''name'');", span="208-208", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="BackgroundJobClient.cs"];
m0_98 [label="name == null", span="208-208", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="BackgroundJobClient.cs"];
m0_96 [label="id == null", span="207-207", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="BackgroundJobClient.cs"];
m0_101 [label="Exit HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="205-205", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="BackgroundJobClient.cs"];
m0_125 [label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="20-20", cluster="HangFire.SqlServer.Entities.ServerData.ServerData()", file="BackgroundJobClient.cs"];
m0_47 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="106-106", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClient.cs"];
m0_54 [label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = invocationData.Arguments,\r\n                    createdAt = DateTime.UtcNow,\r\n                    expireAt = DateTime.UtcNow.Add(expireIn)\r\n                }).Single().ToString()", span="121-129", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=green, community=0, file="BackgroundJobClient.cs"];
m0_53 [label="var invocationData = InvocationData.Serialize(job)", span="119-119", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClient.cs"];
m0_52 [label="string createJobSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="114-117", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClient.cs"];
m0_55 [label="parameters.Count > 0", span="131-131", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClient.cs"];
m0_59 [label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="137-142", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=green, community=0, file="BackgroundJobClient.cs"];
m0_62 [label="return jobId;", span="152-152", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClient.cs"];
m0_56 [label="var parameterArray = new object[parameters.Count]", span="133-133", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=green, community=0, file="BackgroundJobClient.cs"];
m0_57 [label="int parameterIndex = 0", span="134-134", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClient.cs"];
m0_61 [label="_connection.Execute(insertParameterSql, parameterArray)", span="149-149", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=green, community=0, file="BackgroundJobClient.cs"];
m0_58 [label=parameters, span="135-135", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=green, community=0, file="BackgroundJobClient.cs"];
m0_60 [label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="145-147", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=green, community=0, file="BackgroundJobClient.cs"];
m0_49 [label="throw new ArgumentNullException(''job'');", span="111-111", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClient.cs"];
m0_51 [label="throw new ArgumentNullException(''parameters'');", span="112-112", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClient.cs"];
m0_48 [label="job == null", span="111-111", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClient.cs"];
m0_50 [label="parameters == null", span="112-112", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClient.cs"];
m0_63 [label="Exit HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="106-106", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClient.cs"];
m0_31 [label="currentQueryIndex == fetchConditions.Length - 1", span="89-89", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="BackgroundJobClient.cs", color=green, community=0];
m0_18 [label="throw new ArgumentNullException(''job'');", span="82-82", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="BackgroundJobClient.cs"];
m0_16 [label="Exit HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="52-52", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="BackgroundJobClient.cs"];
m0_17 [label="Entry HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", span="44-44", cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", file="BackgroundJobClient.cs"];
m0_19 [label="Entry HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="59-59", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="BackgroundJobClient.cs"];
m0_22 [label="queues.Length == 0", span="62-62", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="BackgroundJobClient.cs"];
m0_20 [label="queues == null", span="61-61", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="BackgroundJobClient.cs"];
m0_21 [label="throw new ArgumentNullException(''queues'');", span="61-61", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="BackgroundJobClient.cs"];
m0_23 [label="throw new ArgumentException(''Queue array must be non-empty.'', ''queues'');", span="62-62", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="BackgroundJobClient.cs"];
m0_24 [label="dynamic idAndQueue", span="64-64", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="BackgroundJobClient.cs"];
m0_25 [label="string fetchJobSqlTemplate = @''\r\nset transaction isolation level read committed\r\nupdate top (1) HangFire.JobQueue set FetchedAt = GETUTCDATE()\r\noutput INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt {0}\r\nand Queue in @queues''", span="66-71", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="BackgroundJobClient.cs", color=green, community=0];
m0_26 [label="var fetchConditions = new[] { ''is null'', ''< DATEADD(second, @timeout, GETUTCDATE())'' }", span="75-75", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=red, community=0, file="BackgroundJobClient.cs"];
m0_27 [label="var currentQueryIndex = 0", span="76-76", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="BackgroundJobClient.cs"];
m0_2 [label="throw new ArgumentNullException(''connection'');", span="37-37", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", file="BackgroundJobClient.cs", color=green, community=0];
m0_3 [label="_connection = connection", span="39-39", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", file="BackgroundJobClient.cs", color=green, community=0];
m0_40 [label="Exit Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="102-102", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="BackgroundJobClient.cs"];
m0_67 [label="Entry Unk.>", span="", cluster="Unk.>", file="BackgroundJobClient.cs"];
m0_45 [label="Entry HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", span="22-22", cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="BackgroundJobClient.cs"];
m0_70 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="155-155", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="BackgroundJobClient.cs"];
m0_74 [label="var jobData = _connection.Query<SqlJob>(sql, new { id = id })\r\n                .SingleOrDefault()", span="162-163", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="BackgroundJobClient.cs"];
m0_72 [label="throw new ArgumentNullException(''id'');", span="157-157", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="BackgroundJobClient.cs"];
m0_81 [label="job = invocationData.Deserialize()", span="176-176", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="BackgroundJobClient.cs"];
m0_77 [label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="168-168", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="BackgroundJobClient.cs"];
m0_73 [label="string sql = \r\n                @''select InvocationData, StateName, Arguments from HangFire.Job where id = @id''", span="159-160", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="BackgroundJobClient.cs"];
m0_75 [label="jobData == null", span="165-165", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="BackgroundJobClient.cs"];
m0_78 [label="invocationData.Arguments = jobData.Arguments", span="169-169", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="BackgroundJobClient.cs"];
m0_84 [label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = jobData.StateName,\r\n                LoadException = loadException\r\n            };", span="183-188", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="BackgroundJobClient.cs"];
m0_71 [label="id == null", span="157-157", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="BackgroundJobClient.cs"];
m0_80 [label="JobLoadException loadException = null", span="172-172", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="BackgroundJobClient.cs"];
m0_82 [label=JobLoadException, span="178-178", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="BackgroundJobClient.cs"];
m0_76 [label="return null;", span="165-165", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="BackgroundJobClient.cs"];
m0_79 [label="Job job = null", span="171-171", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="BackgroundJobClient.cs"];
m0_83 [label="loadException = ex", span="180-180", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="BackgroundJobClient.cs"];
m0_85 [label="Exit HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="155-155", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="BackgroundJobClient.cs"];
m0_10 [label="throw new ArgumentNullException(''stateChanger'');", span="72-72", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="BackgroundJobClient.cs"];
m0_11 [label="_storage = storage", span="74-74", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="BackgroundJobClient.cs"];
m0_12 [label="_stateChanger = stateChanger", span="75-75", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="BackgroundJobClient.cs"];
m0_116 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="BackgroundJobClient.cs"];
m0_43 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="BackgroundJobClient.cs"];
m0_29 [label="idAndQueue = _connection.Query(\r\n                    String.Format(fetchJobSqlTemplate, fetchConditions[currentQueryIndex]),\r\n                    new { queues = queues, timeout = JobInvisibilityTimeOut.Negate().TotalSeconds })\r\n                    .SingleOrDefault()", span="82-85", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="BackgroundJobClient.cs", color=green, community=0];
m0_46 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="BackgroundJobClient.cs"];
m0_39 [label="return appliedState != null && appliedState.Name.Equals(state.Name, StringComparison.OrdinalIgnoreCase);", span="116-116", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="BackgroundJobClient.cs", color=red, community=0];
m0_66 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="BackgroundJobClient.cs"];
m0_30 [label="Entry Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", span="31-31", cluster="Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", color=green, community=0, file="BackgroundJobClient.cs"];
m0_35 [label="state == null", span="105-105", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="BackgroundJobClient.cs"];
m0_36 [label="throw new ArgumentNullException(''state'');", span="105-105", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="BackgroundJobClient.cs"];
m0_32 [label="Entry Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="102-102", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="BackgroundJobClient.cs"];
m0_34 [label="throw new ArgumentNullException(''jobId'');", span="104-104", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="BackgroundJobClient.cs"];
m0_33 [label="jobId == null", span="104-104", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", color=green, community=0, file="BackgroundJobClient.cs"];
m0_37 [label="var connection = _storage.GetConnection()", span="107-107", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="BackgroundJobClient.cs", color=red, community=0];
m0_38 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", color=red, community=1, file="BackgroundJobClient.cs"];
m0_0 [label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", span="35-35", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", file="BackgroundJobClient.cs"];
m0_1 [label="connection == null", span="37-37", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", file="BackgroundJobClient.cs", color=green, community=0];
m0_4 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", span="65-65", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="BackgroundJobClient.cs"];
m0_9 [label="stateChanger == null", span="72-72", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="BackgroundJobClient.cs"];
m0_136 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="277-277", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobClient.cs"];
m0_139 [label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="284-286", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobClient.cs"];
m0_137 [label="timeOut.Duration() != timeOut", span="279-279", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobClient.cs"];
m0_138 [label="throw new ArgumentException(''The `timeOut` value must be positive.'', ''timeOut'');", span="281-281", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobClient.cs"];
m0_140 [label="Exit HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="277-277", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobClient.cs"];
m0_141 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()", file="BackgroundJobClient.cs"];
m0_6 [label="throw new ArgumentNullException(''storage'');", span="70-70", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="BackgroundJobClient.cs"];
m0_7 [label="factory == null", span="71-71", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", color=green, community=0, file="BackgroundJobClient.cs"];
m0_8 [label="throw new ArgumentNullException(''factory'');", span="71-71", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="BackgroundJobClient.cs"];
m0_102 [label="Entry HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="216-216", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="BackgroundJobClient.cs"];
m0_107 [label="_connection.Execute(''delete from HangFire.JobQueue where JobId = @id and Queue = @queueName'',\r\n                new { id = id, queueName = queue })", span="221-222", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="BackgroundJobClient.cs"];
m0_104 [label="throw new ArgumentNullException(''id'');", span="218-218", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="BackgroundJobClient.cs"];
m0_106 [label="throw new ArgumentNullException(''queue'');", span="219-219", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="BackgroundJobClient.cs"];
m0_105 [label="queue == null", span="219-219", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="BackgroundJobClient.cs"];
m0_103 [label="id == null", span="218-218", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="BackgroundJobClient.cs"];
m0_108 [label="Exit HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="216-216", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="BackgroundJobClient.cs"];
m0_88 [label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="191-191", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="BackgroundJobClient.cs"];
m0_93 [label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="196-202", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="BackgroundJobClient.cs"];
m0_90 [label="throw new ArgumentNullException(''id'');", span="193-193", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="BackgroundJobClient.cs"];
m0_92 [label="throw new ArgumentNullException(''name'');", span="194-194", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="BackgroundJobClient.cs"];
m0_91 [label="name == null", span="194-194", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="BackgroundJobClient.cs"];
m0_89 [label="id == null", span="193-193", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="BackgroundJobClient.cs"];
m0_94 [label="Exit HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="191-191", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="BackgroundJobClient.cs"];
m0_109 [label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="225-225", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="BackgroundJobClient.cs"];
m0_114 [label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="230-233", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="BackgroundJobClient.cs"];
m0_111 [label="throw new ArgumentNullException(''key'');", span="227-227", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="BackgroundJobClient.cs"];
m0_112 [label="toScore < fromScore", span="228-228", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="BackgroundJobClient.cs"];
m0_110 [label="key == null", span="227-227", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="BackgroundJobClient.cs"];
m0_113 [label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="228-228", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="BackgroundJobClient.cs"];
m0_115 [label="Exit HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="225-225", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="BackgroundJobClient.cs"];
m0_13 [label="_factory = factory", span="76-76", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="BackgroundJobClient.cs"];
m0_65 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="BackgroundJobClient.cs"];
m0_14 [label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", span="65-65", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="BackgroundJobClient.cs"];
m0_68 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="BackgroundJobClient.cs"];
m0_44 [label="Hangfire.BackgroundJobClient", span="", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="BackgroundJobClient.cs"];
m0_126 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="259-259", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="BackgroundJobClient.cs"];
m0_129 [label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="263-265", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="BackgroundJobClient.cs"];
m0_128 [label="throw new ArgumentNullException(''serverId'');", span="261-261", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="BackgroundJobClient.cs"];
m0_127 [label="serverId == null", span="261-261", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="BackgroundJobClient.cs"];
m0_130 [label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="259-259", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="BackgroundJobClient.cs"];
m0_69 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="BackgroundJobClient.cs"];
m0_86 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()", file="BackgroundJobClient.cs"];
m0_87 [label="Entry HangFire.Storage.JobData.JobData()", span="20-20", cluster="HangFire.Storage.JobData.JobData()", file="BackgroundJobClient.cs"];
m0_42 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="BackgroundJobClient.cs"];
m0_131 [label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="268-268", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="BackgroundJobClient.cs"];
m0_134 [label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="272-274", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="BackgroundJobClient.cs"];
m0_133 [label="throw new ArgumentNullException(''serverId'');", span="270-270", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="BackgroundJobClient.cs"];
m0_132 [label="serverId == null", span="270-270", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="BackgroundJobClient.cs"];
m0_135 [label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="268-268", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="BackgroundJobClient.cs"];
m0_64 [label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65", cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="BackgroundJobClient.cs"];
m0_142 [label="HangFire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m3_8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BackgroundJobClientFacts.cs"];
m3_0 [label="Entry Hangfire.Dashboard.DashboardContext.DashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions)", span="24-24", cluster="Hangfire.Dashboard.DashboardContext.DashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions)", file="BackgroundJobClientFacts.cs"];
m3_1 [label="storage == null", span="26-26", cluster="Hangfire.Dashboard.DashboardContext.DashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions)", file="BackgroundJobClientFacts.cs"];
m3_2 [label="throw new ArgumentNullException(nameof(storage));", span="26-26", cluster="Hangfire.Dashboard.DashboardContext.DashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions)", file="BackgroundJobClientFacts.cs"];
m3_3 [label="options == null", span="27-27", cluster="Hangfire.Dashboard.DashboardContext.DashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions)", file="BackgroundJobClientFacts.cs"];
m3_4 [label="throw new ArgumentNullException(nameof(options));", span="27-27", cluster="Hangfire.Dashboard.DashboardContext.DashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions)", file="BackgroundJobClientFacts.cs"];
m3_5 [label="Storage = storage", span="29-29", cluster="Hangfire.Dashboard.DashboardContext.DashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions)", file="BackgroundJobClientFacts.cs"];
m3_6 [label="Options = options", span="30-30", cluster="Hangfire.Dashboard.DashboardContext.DashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions)", file="BackgroundJobClientFacts.cs"];
m3_7 [label="Exit Hangfire.Dashboard.DashboardContext.DashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions)", span="24-24", cluster="Hangfire.Dashboard.DashboardContext.DashboardContext(Hangfire.JobStorage, Hangfire.DashboardOptions)", file="BackgroundJobClientFacts.cs"];
m3_17 [label="Entry Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", span="41-41", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", file="BackgroundJobClientFacts.cs"];
m3_9 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="BackgroundJobClientFacts.cs"];
m3_10 [label="Entry Hangfire.Dashboard.DashboardContext.GetBackgroundJobClient()", span="41-41", cluster="Hangfire.Dashboard.DashboardContext.GetBackgroundJobClient()", file="BackgroundJobClientFacts.cs"];
m3_11 [label="return new BackgroundJobClient(Storage);", span="43-43", cluster="Hangfire.Dashboard.DashboardContext.GetBackgroundJobClient()", file="BackgroundJobClientFacts.cs"];
m3_12 [label="Exit Hangfire.Dashboard.DashboardContext.GetBackgroundJobClient()", span="41-41", cluster="Hangfire.Dashboard.DashboardContext.GetBackgroundJobClient()", file="BackgroundJobClientFacts.cs"];
m3_14 [label="Entry Hangfire.Dashboard.DashboardContext.GetRecurringJobManager()", span="46-46", cluster="Hangfire.Dashboard.DashboardContext.GetRecurringJobManager()", file="BackgroundJobClientFacts.cs"];
m3_15 [label="return new RecurringJobManager(Storage);", span="48-48", cluster="Hangfire.Dashboard.DashboardContext.GetRecurringJobManager()", file="BackgroundJobClientFacts.cs"];
m3_16 [label="Exit Hangfire.Dashboard.DashboardContext.GetRecurringJobManager()", span="46-46", cluster="Hangfire.Dashboard.DashboardContext.GetRecurringJobManager()", file="BackgroundJobClientFacts.cs"];
m3_13 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", span="74-74", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", file="BackgroundJobClientFacts.cs"];
m3_18 [label="Hangfire.Dashboard.DashboardContext", span="", file="BackgroundJobClientFacts.cs"];
m4_6 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BootstrapperConfigurationExtensions.cs"];
m4_0 [label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="40-40", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs"];
m4_1 [label="storage == null", span="42-42", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs"];
m4_2 [label="throw new ArgumentNullException(nameof(storage));", span="42-42", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs"];
m4_3 [label="_storage = storage", span="44-44", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs"];
m4_4 [label="_interval = interval", span="45-45", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs"];
m4_5 [label="Exit Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="40-40", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs"];
m4_27 [label="Entry Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", span="82-82", cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", file="BootstrapperConfigurationExtensions.cs"];
m4_34 [label="return \r\n$@''DECLARE @RecordsToAggregate TABLE\r\n(\r\n	[Key] NVARCHAR(100) NOT NULL,\r\n	[Value] SMALLINT NOT NULL,\r\n	[ExpireAt] DATETIME NULL\r\n)\r\n\r\nSET XACT_ABORT ON\r\nSET TRANSACTION ISOLATION LEVEL READ COMMITTED\r\nBEGIN TRAN\r\n\r\nDELETE TOP (@count) C\r\nOUTPUT DELETED.[Key], DELETED.[Value], DELETED.[ExpireAt] INTO @RecordsToAggregate\r\nFROM [{storage.SchemaName}].[Counter] C WITH (READPAST, XLOCK, INDEX(0))\r\n\r\nSET NOCOUNT ON\r\n\r\n;MERGE [{storage.SchemaName}].[AggregatedCounter] WITH (HOLDLOCK) AS [Target]\r\nUSING (\r\n	SELECT [Key], SUM([Value]) as [Value], MAX([ExpireAt]) AS [ExpireAt] FROM @RecordsToAggregate\r\n	GROUP BY [Key]) AS [Source] ([Key], [Value], [ExpireAt])\r\nON [Target].[Key] = [Source].[Key]\r\nWHEN MATCHED THEN UPDATE SET \r\n	[Target].[Value] = [Target].[Value] + [Source].[Value],\r\n	[Target].[ExpireAt] = (SELECT MAX([ExpireAt]) FROM (VALUES ([Source].ExpireAt), ([Target].[ExpireAt])) AS MaxExpireAt([ExpireAt]))\r\nWHEN NOT MATCHED THEN INSERT ([Key], [Value], [ExpireAt]) VALUES ([Source].[Key], [Source].[Value], [Source].[ExpireAt]);\r\n\r\nCOMMIT TRAN'';", span="84-112", cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", file="BootstrapperConfigurationExtensions.cs"];
m4_35 [label="Exit Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", span="82-82", cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", file="BootstrapperConfigurationExtensions.cs"];
m4_33 [label="Entry System.Type.ToString()", span="0-0", cluster="System.Type.ToString()", file="BootstrapperConfigurationExtensions.cs"];
m4_28 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="BootstrapperConfigurationExtensions.cs"];
m4_23 [label="Entry Hangfire.Logging.ILog.Trace(string)", span="235-235", cluster="Hangfire.Logging.ILog.Trace(string)", file="BootstrapperConfigurationExtensions.cs"];
m4_8 [label="Entry Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="48-48", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="BootstrapperConfigurationExtensions.cs"];
m4_9 [label="Logger.Debug(''Aggregating records in 'Counter' table...'')", span="50-50", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="BootstrapperConfigurationExtensions.cs"];
m4_13 [label="cancellationToken.Wait(DelayBetweenPasses)", span="66-66", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="BootstrapperConfigurationExtensions.cs"];
m4_14 [label="cancellationToken.ThrowIfCancellationRequested()", span="67-67", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="BootstrapperConfigurationExtensions.cs"];
m4_17 [label="cancellationToken.Wait(_interval)", span="74-74", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="BootstrapperConfigurationExtensions.cs"];
m4_10 [label="int removedCount = 0", span="52-52", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="BootstrapperConfigurationExtensions.cs"];
m4_11 [label="_storage.UseConnection(null, connection =>\r\n                {\r\n                    removedCount = connection.Execute(\r\n                        GetAggregationQuery(_storage),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass },\r\n                        commandTimeout: 0);\r\n                })", span="56-62", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="BootstrapperConfigurationExtensions.cs"];
m4_12 [label="removedCount >= NumberOfRecordsInSinglePass", span="64-64", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="BootstrapperConfigurationExtensions.cs"];
m4_15 [label="removedCount >= NumberOfRecordsInSinglePass", span="70-70", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="BootstrapperConfigurationExtensions.cs"];
m4_16 [label="Logger.Trace(''Records from the 'Counter' table aggregated.'')", span="72-72", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="BootstrapperConfigurationExtensions.cs"];
m4_18 [label="Exit Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="48-48", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="BootstrapperConfigurationExtensions.cs"];
m4_21 [label="Entry System.Threading.CancellationToken.Wait(System.TimeSpan)", span="40-40", cluster="System.Threading.CancellationToken.Wait(System.TimeSpan)", file="BootstrapperConfigurationExtensions.cs"];
m4_20 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection, System.Action<DbConnection>)", span="171-171", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection, System.Action<DbConnection>)", file="BootstrapperConfigurationExtensions.cs"];
m4_29 [label="Entry Hangfire.SqlServer.CountersAggregator.ToString()", span="77-77", cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="BootstrapperConfigurationExtensions.cs"];
m4_30 [label="return GetType().ToString();", span="79-79", cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="BootstrapperConfigurationExtensions.cs"];
m4_31 [label="Exit Hangfire.SqlServer.CountersAggregator.ToString()", span="77-77", cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="BootstrapperConfigurationExtensions.cs"];
m4_7 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="BootstrapperConfigurationExtensions.cs"];
m4_32 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="BootstrapperConfigurationExtensions.cs"];
m4_24 [label="Entry lambda expression", span="56-62", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_25 [label="removedCount = connection.Execute(\r\n                        GetAggregationQuery(_storage),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass },\r\n                        commandTimeout: 0)", span="58-61", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_26 [label="Exit lambda expression", span="56-62", cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs"];
m4_22 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="BootstrapperConfigurationExtensions.cs"];
m4_19 [label="Entry Hangfire.Logging.ILog.Debug(string)", span="117-117", cluster="Hangfire.Logging.ILog.Debug(string)", file="BootstrapperConfigurationExtensions.cs"];
m4_36 [label="Hangfire.SqlServer.CountersAggregator", span="", file="BootstrapperConfigurationExtensions.cs"];
m5_0 [label="Entry Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="33-33", cluster="Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="CreateJobFailedException.cs"];
m5_1 [label="Exit Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="33-33", cluster="Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="CreateJobFailedException.cs"];
m8_49 [label="Entry HangFire.Web.RazorPage.Write(object)", span="40-40", cluster="HangFire.Web.RazorPage.Write(object)", file="DisableConcurrentExecutionAttribute.cs"];
m8_45 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="33-33", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="DisableConcurrentExecutionAttribute.cs"];
m8_14 [label="Write(queue.Length)", span="132-132", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_6 [label="WriteLiteral(''    <div class=\''alert alert-warning\''>\r\n        You have no queues yet. Try to enq'' +\r\n''ueue your first job.\r\n    </div>\r\n'')", span="71-72", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_7 [label="WriteLiteral(@''    <table class=''''table table-striped''''>\r\n        <thead>\r\n            <tr>\r\n                <th>Queue</th>\r\n                <th>Length</th>\r\n                <th>Dequeued</th>\r\n                <th>Next jobs</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="84-94", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=0, file="DisableConcurrentExecutionAttribute.cs"];
m8_9 [label="WriteLiteral(''                <tr>\r\n                    <td>\r\n                        <a href=\'''' +\r\n'''')", span="105-106", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_10 [label="Write(Request.LinkTo(''/queues/'' + queue.Name))", span="111-111", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_8 [label=queues, span="99-99", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_11 [label="WriteLiteral(''\''>\r\n                            '')", span="116-116", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_0 [label="Entry Hangfire.DisableConcurrentExecutionAttribute.DisableConcurrentExecutionAttribute(int)", span="26-26", cluster="Hangfire.DisableConcurrentExecutionAttribute.DisableConcurrentExecutionAttribute(int)", file="DisableConcurrentExecutionAttribute.cs"];
m8_2 [label="throw new ArgumentException(''Timeout argument value should be greater that zero.'');", span="28-28", cluster="Hangfire.DisableConcurrentExecutionAttribute.DisableConcurrentExecutionAttribute(int)", color=green, community=0, file="DisableConcurrentExecutionAttribute.cs"];
m8_1 [label="timeoutInSeconds < 0", span="28-28", cluster="Hangfire.DisableConcurrentExecutionAttribute.DisableConcurrentExecutionAttribute(int)", file="DisableConcurrentExecutionAttribute.cs"];
m8_3 [label="_timeoutInSeconds = timeoutInSeconds", span="30-30", cluster="Hangfire.DisableConcurrentExecutionAttribute.DisableConcurrentExecutionAttribute(int)", color=green, community=0, file="DisableConcurrentExecutionAttribute.cs"];
m8_4 [label="Exit Hangfire.DisableConcurrentExecutionAttribute.DisableConcurrentExecutionAttribute(int)", span="26-26", cluster="Hangfire.DisableConcurrentExecutionAttribute.DisableConcurrentExecutionAttribute(int)", file="DisableConcurrentExecutionAttribute.cs"];
m8_5 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="DisableConcurrentExecutionAttribute.cs"];
m8_12 [label="Entry Hangfire.Common.Job.ToString()", span="155-155", cluster="Hangfire.Common.Job.ToString()", file="DisableConcurrentExecutionAttribute.cs"];
m8_13 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="DisableConcurrentExecutionAttribute.cs"];
m8_15 [label="Entry Hangfire.DisableConcurrentExecutionAttribute.OnPerformed(Hangfire.Server.PerformedContext)", span="43-43", cluster="Hangfire.DisableConcurrentExecutionAttribute.OnPerformed(Hangfire.Server.PerformedContext)", file="DisableConcurrentExecutionAttribute.cs"];
m8_16 [label="!filterContext.Items.ContainsKey(''DistributedLock'')", span="45-45", cluster="Hangfire.DisableConcurrentExecutionAttribute.OnPerformed(Hangfire.Server.PerformedContext)", file="DisableConcurrentExecutionAttribute.cs"];
m8_17 [label="throw new InvalidOperationException(''Can not release a distributed lock: it was not acquired.'');", span="47-47", cluster="Hangfire.DisableConcurrentExecutionAttribute.OnPerformed(Hangfire.Server.PerformedContext)", file="DisableConcurrentExecutionAttribute.cs"];
m8_19 [label="distributedLock.Dispose()", span="51-51", cluster="Hangfire.DisableConcurrentExecutionAttribute.OnPerformed(Hangfire.Server.PerformedContext)", file="DisableConcurrentExecutionAttribute.cs"];
m8_20 [label="Exit Hangfire.DisableConcurrentExecutionAttribute.OnPerformed(Hangfire.Server.PerformedContext)", span="43-43", cluster="Hangfire.DisableConcurrentExecutionAttribute.OnPerformed(Hangfire.Server.PerformedContext)", file="DisableConcurrentExecutionAttribute.cs"];
m8_22 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="DisableConcurrentExecutionAttribute.cs"];
m8_23 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="DisableConcurrentExecutionAttribute.cs"];
m8_24 [label="Hangfire.DisableConcurrentExecutionAttribute", span="", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_25 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="211-211", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_26 [label="WriteLiteral(''\''>'')", span="216-216", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_27 [label="Write(HtmlHelper.JobId(job.Key))", span="221-221", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_28 [label="WriteLiteral(''</a>\r\n'')", span="226-226", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_30 [label="WriteLiteral(''                                                <span title=\''Job\'s state has been'' +\r\n'' changed while fetching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>'' +\r\n''\r\n'')", span="237-239", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_31 [label="WriteLiteral(''                                        </td>\r\n                                  '' +\r\n''      <td>'')", span="249-250", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_32 [label="Write(HtmlHelper.JobType(job.Value.Type))", span="255-255", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_33 [label="WriteLiteral(''</td>\r\n                                        <td>\r\n'')", span="260-260", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_35 [label="WriteLiteral(''                                                <span data-moment=\'''')", span="271-271", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_36 [label="Write(JobHelper.ToStringTimestamp(job.Value.EnqueuedAt.Value))", span="276-276", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_37 [label="WriteLiteral(''\''>\r\n                                                    '')", span="281-281", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_38 [label="Write(job.Value.EnqueuedAt)", span="286-286", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_39 [label="WriteLiteral(''\r\n                                                </span>\r\n'')", span="291-291", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_40 [label="WriteLiteral(''                                        </td>\r\n                                  '' +\r\n''  </tr>\r\n'')", span="301-302", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_41 [label="WriteLiteral(''                            </tbody>\r\n                        </table>\r\n'')", span="312-312", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_42 [label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", span="322-322", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_43 [label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="332-332", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_18 [label="var distributedLock = (IDisposable)filterContext.Items[''DistributedLock'']", span="50-50", cluster="Hangfire.DisableConcurrentExecutionAttribute.OnPerformed(Hangfire.Server.PerformedContext)", file="DisableConcurrentExecutionAttribute.cs"];
m8_21 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="DisableConcurrentExecutionAttribute.cs"];
m8_29 [label="!job.Value.InEnqueuedState", span="231-231", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_34 [label="job.Value.EnqueuedAt.HasValue", span="265-265", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_44 [label="Exit HangFire.Web.Pages.QueuesPage.Execute()", span="39-39", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="DisableConcurrentExecutionAttribute.cs"];
m8_46 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="DisableConcurrentExecutionAttribute.cs"];
m8_47 [label="Entry HangFire.Web.JobStorage.Queues()", span="207-207", cluster="HangFire.Web.JobStorage.Queues()", file="DisableConcurrentExecutionAttribute.cs"];
m8_48 [label="Entry HttpRequestBase.LinkTo(string)", span="8-8", cluster="HttpRequestBase.LinkTo(string)", file="DisableConcurrentExecutionAttribute.cs"];
m8_50 [label="Entry HangFire.Web.HtmlHelper.JobId(string)", span="17-17", cluster="HangFire.Web.HtmlHelper.JobId(string)", file="DisableConcurrentExecutionAttribute.cs"];
m8_52 [label="Entry HangFire.Web.HtmlHelper.JobType(string)", span="22-22", cluster="HangFire.Web.HtmlHelper.JobType(string)", file="DisableConcurrentExecutionAttribute.cs"];
m8_53 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="DisableConcurrentExecutionAttribute.cs"];
m8_51 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="DisableConcurrentExecutionAttribute.cs"];
m8_54 [label="HangFire.Web.Pages.QueuesPage", span="", file="DisableConcurrentExecutionAttribute.cs"];
m9_4 [label="Entry Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.LocalRequestsOnlyAuthorizationFilter()", span="22-22", cluster="Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.LocalRequestsOnlyAuthorizationFilter()", file="IBackgroundJobClient.cs"];
m9_0 [label="Entry Hangfire.DashboardOptions.DashboardOptions()", span="23-23", cluster="Hangfire.DashboardOptions.DashboardOptions()", file="IBackgroundJobClient.cs"];
m9_1 [label="AppPath = ''/''", span="25-25", cluster="Hangfire.DashboardOptions.DashboardOptions()", file="IBackgroundJobClient.cs"];
m9_2 [label="AuthorizationFilters = new[] { new LocalRequestsOnlyAuthorizationFilter() }", span="26-26", cluster="Hangfire.DashboardOptions.DashboardOptions()", file="IBackgroundJobClient.cs"];
m9_3 [label="Exit Hangfire.DashboardOptions.DashboardOptions()", span="23-23", cluster="Hangfire.DashboardOptions.DashboardOptions()", file="IBackgroundJobClient.cs"];
m9_5 [label="Hangfire.DashboardOptions", span="", file="IBackgroundJobClient.cs"];
m10_89 [label="Exit HangFire.SqlServer.Tests.ExpirationManagerFacts.IsEntryExpired(IDbConnection, int)", span="165-165", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.IsEntryExpired(IDbConnection, int)", file="IBootstrapperConfiguration.cs"];
m10_86 [label="Entry HangFire.SqlServer.Tests.ExpirationManagerFacts.IsEntryExpired(IDbConnection, int)", span="165-165", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.IsEntryExpired(IDbConnection, int)", file="IBootstrapperConfiguration.cs"];
m10_87 [label="var count = connection.Query<int>(\r\n                    ''select count(*) from HangFire.Counter where Id = @id'', new { id = entryId }).Single()", span="167-168", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.IsEntryExpired(IDbConnection, int)", file="IBootstrapperConfiguration.cs"];
m10_88 [label="return count == 0;", span="169-169", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.IsEntryExpired(IDbConnection, int)", file="IBootstrapperConfiguration.cs"];
m10_54 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="IBootstrapperConfiguration.cs"];
m10_55 [label="Entry HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_JobTable()", span="91-91", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_JobTable()", file="IBootstrapperConfiguration.cs"];
m10_56 [label="var connection = ConnectionUtils.CreateConnection()", span="93-93", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_JobTable()", file="IBootstrapperConfiguration.cs"];
m10_57 [label="string createSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt) \r\nvalues ('', '', getutcdate(), @expireAt)''", span="96-98", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_JobTable()", file="IBootstrapperConfiguration.cs"];
m10_58 [label="connection.Execute(createSql, new { expireAt = DateTime.UtcNow.AddMonths(-1) })", span="99-99", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_JobTable()", file="IBootstrapperConfiguration.cs"];
m10_61 [label="Assert.Equal(0, connection.Query<int>(@''select count(*) from HangFire.Job'').Single())", span="107-107", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_JobTable()", file="IBootstrapperConfiguration.cs"];
m10_59 [label="var manager = CreateManager()", span="101-101", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_JobTable()", file="IBootstrapperConfiguration.cs"];
m10_60 [label="manager.Execute(_token)", span="104-104", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_JobTable()", file="IBootstrapperConfiguration.cs"];
m10_62 [label="Exit HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_JobTable()", span="91-91", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_JobTable()", file="IBootstrapperConfiguration.cs"];
m10_7 [label="Entry HangFire.SqlServer.Tests.ExpirationManagerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="22-22", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="IBootstrapperConfiguration.cs"];
m10_8 [label="Assert.Throws<ArgumentNullException>(() => new ExpirationManager(null))", span="24-24", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="IBootstrapperConfiguration.cs"];
m10_9 [label="Exit HangFire.SqlServer.Tests.ExpirationManagerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="22-22", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="IBootstrapperConfiguration.cs"];
m10_84 [label="Exit HangFire.SqlServer.Tests.ExpirationManagerFacts.CreateExpirationEntry(IDbConnection, System.DateTime?)", span="153-153", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.CreateExpirationEntry(IDbConnection, System.DateTime?)", file="IBootstrapperConfiguration.cs"];
m10_79 [label="Entry HangFire.SqlServer.Tests.ExpirationManagerFacts.CreateExpirationEntry(IDbConnection, System.DateTime?)", span="153-153", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.CreateExpirationEntry(IDbConnection, System.DateTime?)", file="IBootstrapperConfiguration.cs"];
m10_80 [label="string insertSql = @''\r\ninsert into HangFire.Counter ([Key], [Value], [ExpireAt])\r\nvalues ('key', 1, @expireAt)\r\nselect scope_identity() as Id''", span="155-158", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.CreateExpirationEntry(IDbConnection, System.DateTime?)", file="IBootstrapperConfiguration.cs"];
m10_81 [label="var id = connection.Query(insertSql, new { @expireAt = expireAt }).Single()", span="160-160", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.CreateExpirationEntry(IDbConnection, System.DateTime?)", file="IBootstrapperConfiguration.cs"];
m10_82 [label="var recordId = (int) id.Id", span="161-161", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.CreateExpirationEntry(IDbConnection, System.DateTime?)", file="IBootstrapperConfiguration.cs"];
m10_83 [label="return recordId;", span="162-162", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.CreateExpirationEntry(IDbConnection, System.DateTime?)", file="IBootstrapperConfiguration.cs"];
m10_10 [label="Entry Unk.>", span="", cluster="Unk.>", file="IBootstrapperConfiguration.cs"];
m10_34 [label="Assert.False(IsEntryExpired(connection, entryId))", span="51-51", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_DoesNotRemoveEntries_WithNoExpirationTimeSet()", file="IBootstrapperConfiguration.cs"];
m10_29 [label="Entry HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_DoesNotRemoveEntries_WithNoExpirationTimeSet()", span="42-42", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_DoesNotRemoveEntries_WithNoExpirationTimeSet()", file="IBootstrapperConfiguration.cs"];
m10_30 [label="var connection = ConnectionUtils.CreateConnection()", span="44-44", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_DoesNotRemoveEntries_WithNoExpirationTimeSet()", file="IBootstrapperConfiguration.cs"];
m10_31 [label="var entryId = CreateExpirationEntry(connection, null)", span="46-46", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_DoesNotRemoveEntries_WithNoExpirationTimeSet()", file="IBootstrapperConfiguration.cs"];
m10_32 [label="var manager = CreateManager()", span="47-47", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_DoesNotRemoveEntries_WithNoExpirationTimeSet()", file="IBootstrapperConfiguration.cs"];
m10_33 [label="manager.Execute(_token)", span="49-49", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_DoesNotRemoveEntries_WithNoExpirationTimeSet()", file="IBootstrapperConfiguration.cs"];
m10_35 [label="Exit HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_DoesNotRemoveEntries_WithNoExpirationTimeSet()", span="42-42", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_DoesNotRemoveEntries_WithNoExpirationTimeSet()", file="IBootstrapperConfiguration.cs"];
m10_36 [label="Entry Unk.False", span="", cluster="Unk.False", file="IBootstrapperConfiguration.cs"];
m10_0 [label="Entry HangFire.SqlServer.Tests.ExpirationManagerFacts.ExpirationManagerFacts()", span="15-15", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.ExpirationManagerFacts()", file="IBootstrapperConfiguration.cs"];
m10_1 [label="_storage = new SqlServerStorage(ConnectionUtils.GetConnectionString())", span="17-17", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.ExpirationManagerFacts()", file="IBootstrapperConfiguration.cs"];
m10_2 [label="_token = new CancellationToken(true)", span="18-18", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.ExpirationManagerFacts()", file="IBootstrapperConfiguration.cs"];
m10_3 [label="Exit HangFire.SqlServer.Tests.ExpirationManagerFacts.ExpirationManagerFacts()", span="15-15", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.ExpirationManagerFacts()", file="IBootstrapperConfiguration.cs"];
m10_85 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="IBootstrapperConfiguration.cs"];
m10_25 [label="Entry HangFire.SqlServer.Tests.ExpirationManagerFacts.CreateManager()", span="172-172", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.CreateManager()", file="IBootstrapperConfiguration.cs"];
m10_90 [label="return new ExpirationManager(_storage);", span="174-174", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.CreateManager()", file="IBootstrapperConfiguration.cs"];
m10_91 [label="Exit HangFire.SqlServer.Tests.ExpirationManagerFacts.CreateManager()", span="172-172", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.CreateManager()", file="IBootstrapperConfiguration.cs"];
m10_20 [label="Assert.True(IsEntryExpired(connection, entryId))", span="37-37", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_RemovesOutdatedRecords()", file="IBootstrapperConfiguration.cs"];
m10_15 [label="Entry HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_RemovesOutdatedRecords()", span="28-28", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_RemovesOutdatedRecords()", file="IBootstrapperConfiguration.cs"];
m10_16 [label="var connection = ConnectionUtils.CreateConnection()", span="30-30", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_RemovesOutdatedRecords()", file="IBootstrapperConfiguration.cs"];
m10_17 [label="var entryId = CreateExpirationEntry(connection, DateTime.UtcNow.AddMonths(-1))", span="32-32", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_RemovesOutdatedRecords()", file="IBootstrapperConfiguration.cs"];
m10_18 [label="var manager = CreateManager()", span="33-33", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_RemovesOutdatedRecords()", file="IBootstrapperConfiguration.cs"];
m10_19 [label="manager.Execute(_token)", span="35-35", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_RemovesOutdatedRecords()", file="IBootstrapperConfiguration.cs"];
m10_21 [label="Exit HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_RemovesOutdatedRecords()", span="28-28", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_RemovesOutdatedRecords()", file="IBootstrapperConfiguration.cs"];
m10_23 [label="Entry System.DateTime.AddMonths(int)", span="0-0", cluster="System.DateTime.AddMonths(int)", file="IBootstrapperConfiguration.cs"];
m10_14 [label="Entry HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="38-38", cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="IBootstrapperConfiguration.cs"];
m10_24 [label="Entry Unk.CreateExpirationEntry", span="", cluster="Unk.CreateExpirationEntry", file="IBootstrapperConfiguration.cs"];
m10_11 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m10_12 [label="new ExpirationManager(null)", span="24-24", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m10_13 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="IBootstrapperConfiguration.cs"];
m10_6 [label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="IBootstrapperConfiguration.cs"];
m10_27 [label="Entry Unk.IsEntryExpired", span="", cluster="Unk.IsEntryExpired", file="IBootstrapperConfiguration.cs"];
m10_26 [label="Entry HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="51-51", cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="IBootstrapperConfiguration.cs"];
m10_5 [label="Entry HangFire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", span="26-26", cluster="HangFire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", file="IBootstrapperConfiguration.cs"];
m10_4 [label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="30-30", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="IBootstrapperConfiguration.cs"];
m10_53 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="IBootstrapperConfiguration.cs"];
m10_28 [label="Entry Unk.True", span="", cluster="Unk.True", file="IBootstrapperConfiguration.cs"];
m10_52 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="IBootstrapperConfiguration.cs"];
m10_22 [label="Entry HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37", cluster="HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="IBootstrapperConfiguration.cs"];
m10_42 [label="Assert.False(IsEntryExpired(connection, entryId))", span="65-65", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_DoesNotRemoveEntries_WithFreshExpirationTime()", file="IBootstrapperConfiguration.cs"];
m10_37 [label="Entry HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_DoesNotRemoveEntries_WithFreshExpirationTime()", span="56-56", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_DoesNotRemoveEntries_WithFreshExpirationTime()", file="IBootstrapperConfiguration.cs"];
m10_38 [label="var connection = ConnectionUtils.CreateConnection()", span="58-58", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_DoesNotRemoveEntries_WithFreshExpirationTime()", file="IBootstrapperConfiguration.cs"];
m10_39 [label="var entryId = CreateExpirationEntry(connection, DateTime.Now.AddMonths(1))", span="60-60", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_DoesNotRemoveEntries_WithFreshExpirationTime()", file="IBootstrapperConfiguration.cs"];
m10_40 [label="var manager = CreateManager()", span="61-61", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_DoesNotRemoveEntries_WithFreshExpirationTime()", file="IBootstrapperConfiguration.cs"];
m10_41 [label="manager.Execute(_token)", span="63-63", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_DoesNotRemoveEntries_WithFreshExpirationTime()", file="IBootstrapperConfiguration.cs"];
m10_43 [label="Exit HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_DoesNotRemoveEntries_WithFreshExpirationTime()", span="56-56", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_DoesNotRemoveEntries_WithFreshExpirationTime()", file="IBootstrapperConfiguration.cs"];
m10_44 [label="Entry HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_CounterTable()", span="70-70", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_CounterTable()", file="IBootstrapperConfiguration.cs"];
m10_45 [label="var connection = ConnectionUtils.CreateConnection()", span="72-72", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_CounterTable()", file="IBootstrapperConfiguration.cs"];
m10_46 [label="string createSql = @''\r\ninsert into HangFire.Counter ([Key], [Value], ExpireAt) \r\nvalues ('key', 1, @expireAt)''", span="75-77", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_CounterTable()", file="IBootstrapperConfiguration.cs"];
m10_47 [label="connection.Execute(createSql, new { expireAt = DateTime.UtcNow.AddMonths(-1) })", span="78-78", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_CounterTable()", file="IBootstrapperConfiguration.cs"];
m10_50 [label="Assert.Equal(0, connection.Query<int>(@''select count(*) from HangFire.Counter'').Single())", span="86-86", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_CounterTable()", file="IBootstrapperConfiguration.cs"];
m10_48 [label="var manager = CreateManager()", span="80-80", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_CounterTable()", file="IBootstrapperConfiguration.cs"];
m10_49 [label="manager.Execute(_token)", span="83-83", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_CounterTable()", file="IBootstrapperConfiguration.cs"];
m10_51 [label="Exit HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_CounterTable()", span="70-70", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_CounterTable()", file="IBootstrapperConfiguration.cs"];
m10_71 [label="Entry HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_SetTable()", span="133-133", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_SetTable()", file="IBootstrapperConfiguration.cs"];
m10_72 [label="var connection = ConnectionUtils.CreateConnection()", span="135-135", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_SetTable()", file="IBootstrapperConfiguration.cs"];
m10_73 [label="string createSql = @''\r\ninsert into HangFire.[Set] ([Key], [Score], [Value], ExpireAt) \r\nvalues ('key', 0, '', @expireAt)''", span="138-140", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_SetTable()", file="IBootstrapperConfiguration.cs"];
m10_74 [label="connection.Execute(createSql, new { expireAt = DateTime.UtcNow.AddMonths(-1) })", span="141-141", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_SetTable()", file="IBootstrapperConfiguration.cs"];
m10_77 [label="Assert.Equal(0, connection.Query<int>(@''select count(*) from HangFire.[Set]'').Single())", span="149-149", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_SetTable()", file="IBootstrapperConfiguration.cs"];
m10_75 [label="var manager = CreateManager()", span="143-143", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_SetTable()", file="IBootstrapperConfiguration.cs"];
m10_76 [label="manager.Execute(_token)", span="146-146", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_SetTable()", file="IBootstrapperConfiguration.cs"];
m10_78 [label="Exit HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_SetTable()", span="133-133", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_SetTable()", file="IBootstrapperConfiguration.cs"];
m10_63 [label="Entry HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_ListTable()", span="112-112", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_ListTable()", file="IBootstrapperConfiguration.cs"];
m10_64 [label="var connection = ConnectionUtils.CreateConnection()", span="114-114", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_ListTable()", file="IBootstrapperConfiguration.cs"];
m10_65 [label="string createSql = @''\r\ninsert into HangFire.List ([Key], ExpireAt) \r\nvalues ('key', @expireAt)''", span="117-119", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_ListTable()", file="IBootstrapperConfiguration.cs"];
m10_66 [label="connection.Execute(createSql, new { expireAt = DateTime.UtcNow.AddMonths(-1) })", span="120-120", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_ListTable()", file="IBootstrapperConfiguration.cs"];
m10_69 [label="Assert.Equal(0, connection.Query<int>(@''select count(*) from HangFire.List'').Single())", span="128-128", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_ListTable()", file="IBootstrapperConfiguration.cs"];
m10_67 [label="var manager = CreateManager()", span="122-122", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_ListTable()", file="IBootstrapperConfiguration.cs"];
m10_68 [label="manager.Execute(_token)", span="125-125", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_ListTable()", file="IBootstrapperConfiguration.cs"];
m10_70 [label="Exit HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_ListTable()", span="112-112", cluster="HangFire.SqlServer.Tests.ExpirationManagerFacts.Execute_Processes_ListTable()", file="IBootstrapperConfiguration.cs"];
m10_92 [label="HangFire.SqlServer.Tests.ExpirationManagerFacts", span="", file="IBootstrapperConfiguration.cs"];
m11_0 [label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="24-24", cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="IServerComponent.cs"];
m11_1 [label="Exit Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="24-24", cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="IServerComponent.cs"];
m13_0 [label="Entry Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", span="35-35", cluster="Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", file="Job.cs"];
m13_1 [label="Exit Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", span="35-35", cluster="Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", file="Job.cs"];
m15_45 [label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57", cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="JobFacts.cs"];
m15_10 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobFacts.cs"];
m15_63 [label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28", cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="JobFacts.cs"];
m15_62 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()", file="JobFacts.cs"];
m15_47 [label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", span="35-35", cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", file="JobFacts.cs"];
m15_48 [label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87", cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="JobFacts.cs"];
m15_65 [label="Entry Hangfire.Logging.ILog.DebugException(string, System.Exception)", span="133-133", cluster="Hangfire.Logging.ILog.DebugException(string, System.Exception)", file="JobFacts.cs"];
m15_23 [label="Entry Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="144-144", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobFacts.cs"];
m15_30 [label="return UseConnectionDistributedLock(context.Storage, connection =>\r\n            {\r\n                var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow);\r\n\r\n                // TODO: it is very slow. Add batching.\r\n                var jobId = connection.GetFirstByLowestScoreFromSet(''schedule'', 0, timestamp);\r\n\r\n                if (jobId == null)\r\n                {\r\n                    // No more scheduled jobs pending.\r\n                    return false;\r\n                }\r\n                \r\n                var appliedState = _stateChanger.ChangeState(new StateChangeContext(\r\n                    context.Storage,\r\n                    connection,\r\n                    jobId,\r\n                    new EnqueuedState { Reason = $''Triggered by {ToString()}'' }, \r\n                    ScheduledState.StateName));\r\n\r\n                if (appliedState == null)\r\n                {\r\n                    // When a background job with the given id does not exist, we should\r\n                    // remove its id from a schedule manually. This may happen when someone\r\n                    // modifies a storage bypassing Hangfire API.\r\n                    using (var transaction = connection.CreateWriteTransaction())\r\n                    {\r\n                        transaction.RemoveFromSet(''schedule'', jobId);\r\n                        transaction.Commit();\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            });", span="146-179", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobFacts.cs"];
m15_31 [label="Exit Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="144-144", cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobFacts.cs"];
m15_29 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JobFacts.cs"];
m15_51 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="43-43", cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="JobFacts.cs"];
m15_64 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="JobFacts.cs"];
m15_50 [label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27", cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", file="JobFacts.cs"];
m15_11 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="JobFacts.cs"];
m15_26 [label="Entry Hangfire.Server.DelayedJobScheduler.ToString()", span="139-139", cluster="Hangfire.Server.DelayedJobScheduler.ToString()", file="JobFacts.cs"];
m15_27 [label="return GetType().Name;", span="141-141", cluster="Hangfire.Server.DelayedJobScheduler.ToString()", file="JobFacts.cs"];
m15_28 [label="Exit Hangfire.Server.DelayedJobScheduler.ToString()", span="139-139", cluster="Hangfire.Server.DelayedJobScheduler.ToString()", file="JobFacts.cs"];
m15_46 [label="Entry Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="57-57", cluster="Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="JobFacts.cs"];
m15_52 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54", cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="JobFacts.cs"];
m15_33 [label="Entry lambda expression", span="146-179", cluster="lambda expression", file="JobFacts.cs"];
m15_38 [label="var appliedState = _stateChanger.ChangeState(new StateChangeContext(\r\n                    context.Storage,\r\n                    connection,\r\n                    jobId,\r\n                    new EnqueuedState { Reason = $''Triggered by {ToString()}'' }, \r\n                    ScheduledState.StateName))", span="159-164", cluster="lambda expression", file="JobFacts.cs"];
m15_35 [label="var jobId = connection.GetFirstByLowestScoreFromSet(''schedule'', 0, timestamp)", span="151-151", cluster="lambda expression", file="JobFacts.cs"];
m15_36 [label="jobId == null", span="153-153", cluster="lambda expression", file="JobFacts.cs"];
m15_39 [label="appliedState == null", span="166-166", cluster="lambda expression", file="JobFacts.cs"];
m15_34 [label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="148-148", cluster="lambda expression", file="JobFacts.cs"];
m15_40 [label="var transaction = connection.CreateWriteTransaction()", span="171-171", cluster="lambda expression", file="JobFacts.cs"];
m15_41 [label="transaction.RemoveFromSet(''schedule'', jobId)", span="173-173", cluster="lambda expression", file="JobFacts.cs"];
m15_37 [label="return false;", span="156-156", cluster="lambda expression", file="JobFacts.cs"];
m15_43 [label="return true;", span="178-178", cluster="lambda expression", file="JobFacts.cs"];
m15_42 [label="transaction.Commit()", span="174-174", cluster="lambda expression", file="JobFacts.cs"];
m15_44 [label="Exit lambda expression", span="146-179", cluster="lambda expression", file="JobFacts.cs"];
m15_24 [label="Entry Hangfire.Logging.ILog.Info(string)", span="205-205", cluster="Hangfire.Logging.ILog.Info(string)", file="JobFacts.cs"];
m15_25 [label="Entry Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", span="55-55", cluster="Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", file="JobFacts.cs"];
m15_49 [label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25", cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="JobFacts.cs"];
m15_32 [label="Entry Hangfire.Server.DelayedJobScheduler.UseConnectionDistributedLock<T>(Hangfire.JobStorage, System.Func<Hangfire.Storage.IStorageConnection, T>)", span="182-182", cluster="Hangfire.Server.DelayedJobScheduler.UseConnectionDistributedLock<T>(Hangfire.JobStorage, System.Func<Hangfire.Storage.IStorageConnection, T>)", file="JobFacts.cs"];
m15_59 [label="Logger.DebugException(\r\n                    $@''An exception was thrown during acquiring distributed lock on the {resource} resource within {DefaultLockTimeout.TotalSeconds} seconds. The scheduled jobs have not been handled this time.\r\nIt will be retried in {_pollingDelay.TotalSeconds} seconds'', \r\n                    e)", span="197-200", cluster="Hangfire.Server.DelayedJobScheduler.UseConnectionDistributedLock<T>(Hangfire.JobStorage, System.Func<Hangfire.Storage.IStorageConnection, T>)", file="JobFacts.cs"];
m15_53 [label="var resource = ''locks:schedulepoller''", span="184-184", cluster="Hangfire.Server.DelayedJobScheduler.UseConnectionDistributedLock<T>(Hangfire.JobStorage, System.Func<Hangfire.Storage.IStorageConnection, T>)", file="JobFacts.cs"];
m15_58 [label="e.Resource == resource", span="193-193", cluster="Hangfire.Server.DelayedJobScheduler.UseConnectionDistributedLock<T>(Hangfire.JobStorage, System.Func<Hangfire.Storage.IStorageConnection, T>)", file="JobFacts.cs"];
m15_60 [label="return default(T);", span="201-201", cluster="Hangfire.Server.DelayedJobScheduler.UseConnectionDistributedLock<T>(Hangfire.JobStorage, System.Func<Hangfire.Storage.IStorageConnection, T>)", file="JobFacts.cs"];
m15_54 [label="var connection = storage.GetConnection()", span="187-187", cluster="Hangfire.Server.DelayedJobScheduler.UseConnectionDistributedLock<T>(Hangfire.JobStorage, System.Func<Hangfire.Storage.IStorageConnection, T>)", file="JobFacts.cs"];
m15_56 [label="return action(connection);", span="190-190", cluster="Hangfire.Server.DelayedJobScheduler.UseConnectionDistributedLock<T>(Hangfire.JobStorage, System.Func<Hangfire.Storage.IStorageConnection, T>)", file="JobFacts.cs"];
m15_55 [label="connection.AcquireDistributedLock(resource, DefaultLockTimeout)", span="188-188", cluster="Hangfire.Server.DelayedJobScheduler.UseConnectionDistributedLock<T>(Hangfire.JobStorage, System.Func<Hangfire.Storage.IStorageConnection, T>)", file="JobFacts.cs"];
m15_57 [label=DistributedLockTimeoutException, span="193-193", cluster="Hangfire.Server.DelayedJobScheduler.UseConnectionDistributedLock<T>(Hangfire.JobStorage, System.Func<Hangfire.Storage.IStorageConnection, T>)", file="JobFacts.cs"];
m15_61 [label="Exit Hangfire.Server.DelayedJobScheduler.UseConnectionDistributedLock<T>(Hangfire.JobStorage, System.Func<Hangfire.Storage.IStorageConnection, T>)", span="182-182", cluster="Hangfire.Server.DelayedJobScheduler.UseConnectionDistributedLock<T>(Hangfire.JobStorage, System.Func<Hangfire.Storage.IStorageConnection, T>)", file="JobFacts.cs"];
m15_12 [label="Entry Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="114-114", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobFacts.cs"];
m15_17 [label="jobsEnqueued++", span="122-122", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="JobFacts.cs"];
m15_16 [label="EnqueueNextScheduledJob(context)", span="120-120", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobFacts.cs"];
m15_15 [label="var jobsEnqueued = 0", span="118-118", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobFacts.cs"];
m15_18 [label="context.IsShutdownRequested", span="124-124", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobFacts.cs"];
m15_19 [label="jobsEnqueued != 0", span="130-130", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobFacts.cs"];
m15_20 [label="Logger.Info($''{jobsEnqueued} scheduled job(s) enqueued.'')", span="132-132", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobFacts.cs"];
m15_13 [label="context == null", span="116-116", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobFacts.cs"];
m15_21 [label="context.Wait(_pollingDelay)", span="135-135", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobFacts.cs"];
m15_14 [label="throw new ArgumentNullException(nameof(context));", span="116-116", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobFacts.cs"];
m15_22 [label="Exit Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="114-114", cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobFacts.cs"];
m15_4 [label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="105-105", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="JobFacts.cs"];
m15_7 [label="_stateChanger = stateChanger", span="109-109", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="JobFacts.cs"];
m15_8 [label="_pollingDelay = pollingDelay", span="110-110", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="JobFacts.cs"];
m15_5 [label="stateChanger == null", span="107-107", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="JobFacts.cs"];
m15_6 [label="throw new ArgumentNullException(nameof(stateChanger));", span="107-107", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="JobFacts.cs"];
m15_9 [label="Exit Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="105-105", cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="JobFacts.cs"];
m15_66 [label="Hangfire.Server.DelayedJobScheduler", span="", file="JobFacts.cs"];
m15_67 [label="Hangfire.Server.BackgroundProcessContext", span="", file="JobFacts.cs"];
m16_13 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="OwinBootstrapper.cs"];
m16_19 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="OwinBootstrapper.cs"];
m16_16 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="OwinBootstrapper.cs"];
m16_42 [label="Entry System.TimeSpan.Equals(System.TimeSpan)", span="0-0", cluster="System.TimeSpan.Equals(System.TimeSpan)", file="OwinBootstrapper.cs"];
m16_18 [label="Entry HangFire.Client.JobClient.GenerateId()", span="92-92", cluster="HangFire.Client.JobClient.GenerateId()", file="OwinBootstrapper.cs"];
m16_59 [label="return Guid.NewGuid().ToString();", span="94-94", cluster="HangFire.Client.JobClient.GenerateId()", file="OwinBootstrapper.cs"];
m16_60 [label="Exit HangFire.Client.JobClient.GenerateId()", span="92-92", cluster="HangFire.Client.JobClient.GenerateId()", file="OwinBootstrapper.cs"];
m16_45 [label="Entry HangFire.Client.JobClient.Dispose()", span="76-76", cluster="HangFire.Client.JobClient.Dispose()", file="OwinBootstrapper.cs"];
m16_46 [label="_redis.Dispose()", span="78-78", cluster="HangFire.Client.JobClient.Dispose()", file="OwinBootstrapper.cs"];
m16_47 [label="Exit HangFire.Client.JobClient.Dispose()", span="76-76", cluster="HangFire.Client.JobClient.Dispose()", file="OwinBootstrapper.cs"];
m16_14 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="OwinBootstrapper.cs"];
m16_57 [label="Entry HangFire.JobHelper.ToJson(object)", span="32-32", cluster="HangFire.JobHelper.ToJson(object)", file="OwinBootstrapper.cs"];
m16_56 [label="Entry HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", span="49-49", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="OwinBootstrapper.cs"];
m16_58 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="OwinBootstrapper.cs"];
m16_22 [label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.Dictionary<string, string>, HangFire.States.JobState)", span="13-13", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.Dictionary<string, string>, HangFire.States.JobState)", file="OwinBootstrapper.cs"];
m16_17 [label="Entry HangFire.JobHelper.GetQueue(System.Type)", span="20-20", cluster="HangFire.JobHelper.GetQueue(System.Type)", file="OwinBootstrapper.cs"];
m16_41 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="OwinBootstrapper.cs"];
m16_0 [label="Entry HangFire.Client.JobClient.Async(System.Type, object)", span="12-12", cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="OwinBootstrapper.cs"];
m16_1 [label="jobType == null", span="14-14", cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="OwinBootstrapper.cs"];
m16_3 [label="!typeof (BackgroundJob).IsAssignableFrom(jobType)", span="18-18", cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="OwinBootstrapper.cs"];
m16_4 [label="throw new ArgumentException(\r\n                    String.Format(''The type '{0}' must inherit '{1}'.'', jobType, typeof(BackgroundJob)), \r\n                    ''jobType'');", span="20-22", cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="OwinBootstrapper.cs"];
m16_5 [label="var queue = JobHelper.GetQueue(jobType)", span="25-25", cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="OwinBootstrapper.cs"];
m16_8 [label="var job = CreateJob(jobType, args)", span="30-30", cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="OwinBootstrapper.cs"];
m16_2 [label="throw new ArgumentNullException(''jobType'');", span="16-16", cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="OwinBootstrapper.cs"];
m16_6 [label="var jobId = GenerateId()", span="27-27", cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="OwinBootstrapper.cs"];
m16_7 [label="var state = new EnqueuedState(jobId, ''Enqueued by the Сlient'', queue)", span="29-29", cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="OwinBootstrapper.cs"];
m16_9 [label="var context = new CreateContext(\r\n                new ClientJobDescriptor(_redis, jobId, job, state))", span="32-33", cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="OwinBootstrapper.cs"];
m16_11 [label="return jobId;", span="37-37", cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="OwinBootstrapper.cs"];
m16_10 [label="_jobCreator.CreateJob(context)", span="35-35", cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="OwinBootstrapper.cs"];
m16_12 [label="Exit HangFire.Client.JobClient.Async(System.Type, object)", span="12-12", cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="OwinBootstrapper.cs"];
m16_62 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="OwinBootstrapper.cs"];
m16_44 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="OwinBootstrapper.cs"];
m16_55 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="OwinBootstrapper.cs"];
m16_24 [label="Entry HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", span="40-40", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="OwinBootstrapper.cs"];
m16_25 [label="jobType == null", span="42-42", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="OwinBootstrapper.cs"];
m16_27 [label="!typeof(BackgroundJob).IsAssignableFrom(jobType)", span="46-46", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="OwinBootstrapper.cs"];
m16_28 [label="throw new ArgumentException(\r\n                    String.Format(''The type '{0}' must inherit '{1}'.'', jobType, typeof(BackgroundJob)),\r\n                    ''jobType'');", span="48-50", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="OwinBootstrapper.cs"];
m16_29 [label="interval != interval.Duration()", span="53-53", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="OwinBootstrapper.cs"];
m16_32 [label="return Async(jobType, args);", span="60-60", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="OwinBootstrapper.cs"];
m16_35 [label="var job = CreateJob(jobType, args)", span="66-66", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="OwinBootstrapper.cs"];
m16_26 [label="throw new ArgumentNullException(''jobType'');", span="44-44", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="OwinBootstrapper.cs"];
m16_30 [label="throw new ArgumentOutOfRangeException(''interval'', ''Interval value can not be negative.'');", span="55-55", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="OwinBootstrapper.cs"];
m16_31 [label="interval.Equals(TimeSpan.Zero)", span="58-58", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="OwinBootstrapper.cs"];
m16_33 [label="var jobId = GenerateId()", span="63-63", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="OwinBootstrapper.cs"];
m16_34 [label="var state = new ScheduledState(jobId, ''Scheduled by the Client'', DateTime.UtcNow.Add(interval))", span="65-65", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="OwinBootstrapper.cs"];
m16_36 [label="var context = new CreateContext(\r\n                new ClientJobDescriptor(_redis, jobId, job, state))", span="68-69", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="OwinBootstrapper.cs"];
m16_38 [label="return jobId;", span="73-73", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="OwinBootstrapper.cs"];
m16_37 [label="_jobCreator.CreateJob(context)", span="71-71", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="OwinBootstrapper.cs"];
m16_39 [label="Exit HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", span="40-40", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="OwinBootstrapper.cs"];
m16_48 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="OwinBootstrapper.cs"];
m16_23 [label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="33-33", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="OwinBootstrapper.cs"];
m16_20 [label="Entry HangFire.Client.JobClient.CreateJob(System.Type, object)", span="81-81", cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", file="OwinBootstrapper.cs"];
m16_49 [label="var job = new Dictionary<string, string>()", span="84-84", cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", file="OwinBootstrapper.cs"];
m16_50 [label="job[''Type''] = jobType.AssemblyQualifiedName", span="85-85", cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", file="OwinBootstrapper.cs"];
m16_51 [label="job[''Args''] = JobHelper.ToJson(ClientJobDescriptor.SerializeProperties(jobArgs))", span="86-86", cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", file="OwinBootstrapper.cs"];
m16_52 [label="job[''CreatedAt''] = JobHelper.ToStringTimestamp(DateTime.UtcNow)", span="87-87", cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", file="OwinBootstrapper.cs"];
m16_53 [label="return job;", span="89-89", cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", file="OwinBootstrapper.cs"];
m16_54 [label="Exit HangFire.Client.JobClient.CreateJob(System.Type, object)", span="81-81", cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", file="OwinBootstrapper.cs"];
m16_40 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()", file="OwinBootstrapper.cs"];
m16_61 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="OwinBootstrapper.cs"];
m16_43 [label="Entry HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", span="10-10", cluster="HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", file="OwinBootstrapper.cs"];
m16_15 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="OwinBootstrapper.cs"];
m16_21 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", file="OwinBootstrapper.cs"];
m16_63 [label="HangFire.Client.JobClient", span="", file="OwinBootstrapper.cs"];
m17_8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ProcessingState.cs"];
m17_12 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ProcessingState.cs"];
m17_13 [label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68", cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="ProcessingState.cs"];
m17_9 [label="Entry Hangfire.States.ProcessingState.SerializeData()", span="125-125", cluster="Hangfire.States.ProcessingState.SerializeData()", file="ProcessingState.cs"];
m17_10 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''StartedAt'', JobHelper.SerializeDateTime(StartedAt) },\r\n                { ''ServerId'', ServerId },\r\n                { ''WorkerId'', WorkerId }\r\n            };", span="127-132", cluster="Hangfire.States.ProcessingState.SerializeData()", file="ProcessingState.cs"];
m17_11 [label="Exit Hangfire.States.ProcessingState.SerializeData()", span="125-125", cluster="Hangfire.States.ProcessingState.SerializeData()", file="ProcessingState.cs"];
m17_7 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="ProcessingState.cs"];
m17_0 [label="Entry Hangfire.States.ProcessingState.ProcessingState(string, string)", span="37-37", cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="ProcessingState.cs"];
m17_1 [label="String.IsNullOrWhiteSpace(serverId)", span="39-39", cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="ProcessingState.cs"];
m17_3 [label="ServerId = serverId", span="41-41", cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="ProcessingState.cs"];
m17_5 [label="WorkerId = workerId", span="43-43", cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="ProcessingState.cs"];
m17_2 [label="throw new ArgumentNullException(''serverId'');", span="39-39", cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="ProcessingState.cs"];
m17_4 [label="StartedAt = DateTime.UtcNow", span="42-42", cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="ProcessingState.cs"];
m17_6 [label="Exit Hangfire.States.ProcessingState.ProcessingState(string, string)", span="37-37", cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="ProcessingState.cs"];
m17_14 [label="Hangfire.States.ProcessingState", span="", file="ProcessingState.cs"];
m18_60 [label="Entry Hangfire.Server.Worker.ToString()", span="161-161", cluster="Hangfire.Server.Worker.ToString()", file="RecurringJob.cs"];
m18_61 [label="return $''{GetType().Name} #{_workerId.Substring(0, 8)}'';", span="163-163", cluster="Hangfire.Server.Worker.ToString()", file="RecurringJob.cs"];
m18_62 [label="Exit Hangfire.Server.Worker.ToString()", span="161-161", cluster="Hangfire.Server.Worker.ToString()", file="RecurringJob.cs"];
m18_16 [label="Exit Hangfire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, string, System.TimeZoneInfo, string)", span="46-46", cluster="Hangfire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, string, System.TimeZoneInfo, string)", file="RecurringJob.cs"];
m18_83 [label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="75-75", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="RecurringJob.cs"];
m18_116 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()", file="RecurringJob.cs"];
m18_19 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="RecurringJob.cs"];
m18_59 [label="Entry Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", span="210-210", cluster="Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", file="RecurringJob.cs"];
m18_84 [label="fetchedJob.Requeue()", span="214-214", cluster="Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", file="RecurringJob.cs"];
m18_86 [label="Logger.WarnException($''Failed to immediately re-queue the background job '{fetchedJob.JobId}'. Next invocation may be delayed, if invisibility timeout is used'', ex)", span="218-218", cluster="Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", file="RecurringJob.cs"];
m18_85 [label=Exception, span="216-216", cluster="Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", file="RecurringJob.cs"];
m18_87 [label="Exit Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", span="210-210", cluster="Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", file="RecurringJob.cs"];
m18_46 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()", file="RecurringJob.cs"];
m18_4 [label="Entry Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", span="62-62", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="RecurringJob.cs"];
m18_5 [label="queues == null", span="67-67", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="RecurringJob.cs"];
m18_6 [label="throw new ArgumentNullException(nameof(queues));", span="67-67", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="RecurringJob.cs"];
m18_79 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="RecurringJob.cs"];
m18_80 [label="Entry Hangfire.Logging.ILog.DebugException(string, System.Exception)", span="132-132", cluster="Hangfire.Logging.ILog.DebugException(string, System.Exception)", file="RecurringJob.cs"];
m18_63 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="RecurringJob.cs"];
m18_28 [label="var linkedCts = CancellationTokenSource.CreateLinkedTokenSource(\r\n                        context.CancellationToken,\r\n                        timeoutCts.Token)", span="90-92", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_33 [label="fetchedJob.RemoveFromQueue()", span="113-113", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_34 [label="return;", span="114-114", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_35 [label="var state = PerformJob(context, connection, fetchedJob.JobId)", span="123-123", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_56 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RecurringJob.cs"];
m18_77 [label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, System.Collections.Generic.IEnumerable<string>, System.Threading.CancellationToken)", span="45-45", cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, System.Collections.Generic.IEnumerable<string>, System.Threading.CancellationToken)", file="RecurringJob.cs"];
m18_49 [label="Entry Hangfire.Common.Job.ToString()", span="155-155", cluster="Hangfire.Common.Job.ToString()", file="RecurringJob.cs"];
m18_89 [label="Entry Hangfire.Logging.ILog.WarnException(string, System.Exception)", span="280-280", cluster="Hangfire.Logging.ILog.WarnException(string, System.Exception)", file="RecurringJob.cs"];
m18_9 [label="stateChanger == null", span="69-69", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="RecurringJob.cs"];
m18_10 [label="throw new ArgumentNullException(nameof(stateChanger));", span="69-69", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="RecurringJob.cs"];
m18_11 [label="_queues = queues.ToArray()", span="71-71", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="RecurringJob.cs"];
m18_55 [label="Entry Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", span="222-222", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="RecurringJob.cs"];
m18_90 [label="var jobData = connection.GetJobData(jobId)", span="226-226", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="RecurringJob.cs"];
m18_94 [label="var backgroundJob = new BackgroundJob(jobId, jobData.Job, jobData.CreatedAt)", span="238-238", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="RecurringJob.cs"];
m18_95 [label="var jobToken = new ServerJobCancellationToken(connection, jobId, context.ServerId, _workerId, context.CancellationToken)", span="240-240", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="RecurringJob.cs"];
m18_96 [label="var performContext = new PerformContext(connection, backgroundJob, jobToken)", span="241-241", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="RecurringJob.cs"];
m18_107 [label="ex is OperationCanceledException && context.IsShutdownRequested", span="267-267", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="RecurringJob.cs"];
m18_91 [label="jobData == null", span="227-227", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="RecurringJob.cs"];
m18_93 [label="jobData.EnsureLoaded()", span="236-236", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="RecurringJob.cs"];
m18_97 [label="var latency = (DateTime.UtcNow - jobData.CreatedAt).TotalMilliseconds", span="243-243", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="RecurringJob.cs"];
m18_92 [label="return null;", span="233-233", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="RecurringJob.cs"];
m18_99 [label="var result = _performer.Perform(performContext)", span="246-246", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="RecurringJob.cs"];
m18_98 [label="var duration = Stopwatch.StartNew()", span="244-244", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="RecurringJob.cs"];
m18_101 [label="return new SucceededState(result, (long) latency, duration.ElapsedMilliseconds);", span="249-249", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="RecurringJob.cs"];
m18_100 [label="duration.Stop()", span="247-247", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="RecurringJob.cs"];
m18_102 [label=JobAbortedException, span="251-251", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="RecurringJob.cs"];
m18_103 [label="return null;", span="256-256", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="RecurringJob.cs"];
m18_104 [label=JobPerformanceException, span="258-258", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="RecurringJob.cs"];
m18_105 [label="return new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                };", span="260-263", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="RecurringJob.cs"];
m18_106 [label=Exception, span="265-265", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="RecurringJob.cs"];
m18_108 [label="throw;", span="269-269", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="RecurringJob.cs"];
m18_109 [label="return new FailedState(ex)\r\n                {\r\n                    Reason = ''An exception occurred during processing of a background job.''\r\n                };", span="272-275", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="RecurringJob.cs"];
m18_110 [label="Exit Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", span="222-222", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="RecurringJob.cs"];
m18_81 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="RecurringJob.cs"];
m18_118 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="RecurringJob.cs"];
m18_119 [label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="51-51", cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="RecurringJob.cs"];
m18_17 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="188-188", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="RecurringJob.cs"];
m18_111 [label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42", cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="RecurringJob.cs"];
m18_20 [label="var job = Job.FromExpression(methodCall)", span="64-64", cluster="Hangfire.RecurringJob.AddOrUpdate<T>(System.Linq.Expressions.Expression<System.Action<T>>, string, System.TimeZoneInfo, string)", file="RecurringJob.cs"];
m18_64 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="RecurringJob.cs"];
m18_48 [label="Exit Hangfire.RecurringJob.GetRecurringJobId(Hangfire.Common.Job)", span="122-122", cluster="Hangfire.RecurringJob.GetRecurringJobId(Hangfire.Common.Job)", file="RecurringJob.cs"];
m18_32 [label="context.CancellationToken.ThrowIfCancellationRequested()", span="110-110", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_36 [label="state != null", span="125-125", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_37 [label="TryChangeState(context, connection, fetchedJob, state, new[] { ProcessingState.StateName }, CancellationToken.None)", span="128-128", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_38 [label="fetchedJob.RemoveFromQueue()", span="136-136", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_54 [label="Entry Hangfire.Storage.IFetchedJob.RemoveFromQueue()", span="24-24", cluster="Hangfire.Storage.IFetchedJob.RemoveFromQueue()", file="RecurringJob.cs"];
m18_88 [label="Entry Hangfire.Storage.IFetchedJob.Requeue()", span="25-25", cluster="Hangfire.Storage.IFetchedJob.Requeue()", file="RecurringJob.cs"];
m18_112 [label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29", cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="RecurringJob.cs"];
m18_12 [label="_performer = performer", span="72-72", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="RecurringJob.cs"];
m18_21 [label="Entry Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="78-78", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_22 [label="context == null", span="80-80", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_23 [label="throw new ArgumentNullException(nameof(context));", span="80-80", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_0 [label="Entry Hangfire.Server.Worker.Worker()", span="53-53", cluster="Hangfire.Server.Worker.Worker()", file="RecurringJob.cs"];
m18_1 [label="Exit Hangfire.Server.Worker.Worker()", span="53-53", cluster="Hangfire.Server.Worker.Worker()", file="RecurringJob.cs"];
m18_2 [label="Entry Hangfire.Server.Worker.Worker(params string[])", span="57-57", cluster="Hangfire.Server.Worker.Worker(params string[])", file="RecurringJob.cs"];
m18_3 [label="Exit Hangfire.Server.Worker.Worker(params string[])", span="57-57", cluster="Hangfire.Server.Worker.Worker(params string[])", file="RecurringJob.cs"];
m18_24 [label="var connection = context.Storage.GetConnection()", span="82-82", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_51 [label="Entry Hangfire.States.ProcessingState.ProcessingState(string, string)", span="39-39", cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="RecurringJob.cs"];
m18_8 [label="throw new ArgumentNullException(nameof(performer));", span="68-68", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="RecurringJob.cs"];
m18_14 [label="_workerId = Guid.NewGuid().ToString()", span="74-74", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="RecurringJob.cs"];
m18_13 [label="_stateChanger = stateChanger", span="73-73", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="RecurringJob.cs"];
m18_15 [label="Exit Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", span="62-62", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="RecurringJob.cs"];
m18_25 [label="var fetchedJob = connection.FetchNextJob(_queues, context.CancellationToken)", span="83-83", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_26 [label="context.CancellationToken.ThrowIfCancellationRequested()", span="85-85", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_27 [label="var timeoutCts = new CancellationTokenSource(JobInitializationWaitTimeout)", span="89-89", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_53 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="RecurringJob.cs"];
m18_57 [label="Entry Hangfire.Logging.ILog.Info(string)", span="204-204", cluster="Hangfire.Logging.ILog.Info(string)", file="RecurringJob.cs"];
m18_7 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="RecurringJob.cs"];
m18_82 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="RecurringJob.cs"];
m18_47 [label="return job.ToString();", span="124-124", cluster="Hangfire.RecurringJob.GetRecurringJobId(Hangfire.Common.Job)", file="RecurringJob.cs", color=green, community=0];
m18_29 [label="var processingState = new ProcessingState(context.ServerId, _workerId)", span="94-94", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_30 [label="var appliedState = TryChangeState(\r\n                            context, \r\n                            connection, \r\n                            fetchedJob, \r\n                            processingState, \r\n                            new[] { EnqueuedState.StateName, ProcessingState.StateName },\r\n                            linkedCts.Token)", span="96-102", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_31 [label="appliedState == null || !appliedState.Name.Equals(ProcessingState.StateName, StringComparison.OrdinalIgnoreCase)", span="106-106", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_18 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="RecurringJob.cs"];
m18_78 [label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25", cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="RecurringJob.cs"];
m18_58 [label="Entry Hangfire.Logging.ILog.ErrorException(string, System.Exception)", span="161-161", cluster="Hangfire.Logging.ILog.ErrorException(string, System.Exception)", file="RecurringJob.cs"];
m18_117 [label="Entry Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", span="20-20", cluster="Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", file="RecurringJob.cs"];
m18_40 [label="context.IsShutdownRequested", span="143-143", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_41 [label="Logger.Info(String.Format(\r\n                            ''Shutdown request requested while processing background job '{0}'. It will be re-queued.'',\r\n                            fetchedJob.JobId))", span="145-147", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_43 [label="Requeue(fetchedJob)", span="154-154", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_39 [label=Exception, span="141-141", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_42 [label="Logger.ErrorException(''An exception occurred while processing a job. It will be re-queued.'', ex)", span="151-151", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_44 [label="throw;", span="155-155", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_45 [label="Exit Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="78-78", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJob.cs"];
m18_114 [label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, string, System.Threading.CancellationToken)", span="32-32", cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, string, System.Threading.CancellationToken)", file="RecurringJob.cs"];
m18_115 [label="Entry Hangfire.Server.PerformContext.PerformContext(Hangfire.Storage.IStorageConnection, Hangfire.BackgroundJob, Hangfire.IJobCancellationToken)", span="36-36", cluster="Hangfire.Server.PerformContext.PerformContext(Hangfire.Storage.IStorageConnection, Hangfire.BackgroundJob, Hangfire.IJobCancellationToken)", file="RecurringJob.cs"];
m18_52 [label="Entry Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", span="166-166", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="RecurringJob.cs"];
m18_65 [label="Exception exception = null", span="174-174", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="RecurringJob.cs"];
m18_68 [label="return _stateChanger.ChangeState(new StateChangeContext(\r\n                        context.Storage,\r\n                        connection,\r\n                        fetchedJob.JobId,\r\n                        state,\r\n                        expectedStates,\r\n                        cancellationToken));", span="180-186", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="RecurringJob.cs"];
m18_72 [label="context.CancellationToken.WaitHandle.WaitOne(TimeSpan.FromSeconds(retryAttempt))", span="197-197", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="RecurringJob.cs"];
m18_73 [label="context.CancellationToken.ThrowIfCancellationRequested()", span="198-198", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="RecurringJob.cs"];
m18_75 [label="return _stateChanger.ChangeState(new StateChangeContext(\r\n                context.Storage,\r\n                connection,\r\n                fetchedJob.JobId,\r\n                new FailedState(exception) { Reason = $''Failed to change state to a '{state.Name}' one due to an exception after {MaxStateChangeAttempts} retry attempts'' },\r\n                expectedStates,\r\n                cancellationToken));", span="201-207", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="RecurringJob.cs"];
m18_66 [label="var retryAttempt = 0", span="176-176", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="RecurringJob.cs"];
m18_67 [label="retryAttempt < MaxStateChangeAttempts", span="176-176", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="RecurringJob.cs"];
m18_70 [label="Logger.DebugException(\r\n                        String.Format(''State change attempt {0} of {1} failed due to an error, see inner exception for details'', retryAttempt+1, MaxStateChangeAttempts), \r\n                        ex)", span="190-192", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="RecurringJob.cs"];
m18_74 [label="retryAttempt++", span="176-176", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="RecurringJob.cs"];
m18_69 [label=Exception, span="188-188", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="RecurringJob.cs"];
m18_71 [label="exception = ex", span="194-194", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="RecurringJob.cs"];
m18_76 [label="Exit Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", span="166-166", cluster="Hangfire.Server.Worker.TryChangeState(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IFetchedJob, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="RecurringJob.cs"];
m18_113 [label="Entry Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", span="25-25", cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="RecurringJob.cs"];
m18_50 [label="Entry System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", span="0-0", cluster="System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", file="RecurringJob.cs"];
m18_120 [label="Hangfire.Server.Worker", span="", file="RecurringJob.cs"];
m19_15 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ServerOwinExtensions.cs"];
m19_18 [label="Entry System.Threading.Timer.Timer(System.Threading.TimerCallback, object, System.TimeSpan, System.TimeSpan)", span="0-0", cluster="System.Threading.Timer.Timer(System.Threading.TimerCallback, object, System.TimeSpan, System.TimeSpan)", file="ServerOwinExtensions.cs"];
m19_19 [label="Entry Hangfire.SqlServer.SqlServerTimeoutJob.RemoveFromQueue()", span="47-47", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.RemoveFromQueue()", file="ServerOwinExtensions.cs"];
m19_20 [label=_syncRoot, span="49-49", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.RemoveFromQueue()", file="ServerOwinExtensions.cs"];
m19_21 [label="_storage.UseConnection(null, connection =>\r\n                {\r\n                    connection.Execute(\r\n                        $''delete from {_storage.SchemaName}.JobQueue where Id = @id'',\r\n                        new { id = Id },\r\n                        commandTimeout: _storage.CommandTimeout);\r\n                })", span="51-57", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.RemoveFromQueue()", file="ServerOwinExtensions.cs"];
m19_22 [label="_removedFromQueue = true", span="59-59", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.RemoveFromQueue()", file="ServerOwinExtensions.cs"];
m19_23 [label="Exit Hangfire.SqlServer.SqlServerTimeoutJob.RemoveFromQueue()", span="47-47", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.RemoveFromQueue()", file="ServerOwinExtensions.cs"];
m19_46 [label="Entry System.Threading.Timer.Dispose()", span="0-0", cluster="System.Threading.Timer.Dispose()", file="ServerOwinExtensions.cs"];
m19_29 [label="Entry Hangfire.SqlServer.SqlServerTimeoutJob.Requeue()", span="63-63", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Requeue()", file="ServerOwinExtensions.cs"];
m19_30 [label=_syncRoot, span="65-65", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Requeue()", file="ServerOwinExtensions.cs"];
m19_31 [label="_storage.UseConnection(null, connection =>\r\n                {\r\n                    connection.Execute(\r\n                        $''update {_storage.SchemaName}.JobQueue set FetchedAt = null where Id = @id'',\r\n                        new { id = Id },\r\n                        commandTimeout: _storage.CommandTimeout);\r\n                })", span="67-73", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Requeue()", file="ServerOwinExtensions.cs"];
m19_32 [label="_requeued = true", span="75-75", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Requeue()", file="ServerOwinExtensions.cs"];
m19_33 [label="Exit Hangfire.SqlServer.SqlServerTimeoutJob.Requeue()", span="63-63", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Requeue()", file="ServerOwinExtensions.cs"];
m19_28 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="ServerOwinExtensions.cs"];
m19_56 [label="Entry Hangfire.Logging.ILog.Trace(string)", span="235-235", cluster="Hangfire.Logging.ILog.Trace(string)", file="ServerOwinExtensions.cs"];
m19_17 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="ServerOwinExtensions.cs"];
m19_24 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection, System.Action<DbConnection>)", span="171-171", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection, System.Action<DbConnection>)", file="ServerOwinExtensions.cs"];
m19_57 [label="Entry Hangfire.Logging.ILog.DebugException(string, System.Exception)", span="133-133", cluster="Hangfire.Logging.ILog.DebugException(string, System.Exception)", file="ServerOwinExtensions.cs"];
m19_0 [label="Entry Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", span="20-20", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="ServerOwinExtensions.cs"];
m19_1 [label="storage == null", span="26-26", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="ServerOwinExtensions.cs"];
m19_2 [label="throw new ArgumentNullException(nameof(storage));", span="26-26", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="ServerOwinExtensions.cs"];
m19_3 [label="jobId == null", span="27-27", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="ServerOwinExtensions.cs"];
m19_4 [label="throw new ArgumentNullException(nameof(jobId));", span="27-27", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="ServerOwinExtensions.cs"];
m19_5 [label="queue == null", span="28-28", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="ServerOwinExtensions.cs"];
m19_6 [label="throw new ArgumentNullException(nameof(queue));", span="28-28", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="ServerOwinExtensions.cs"];
m19_7 [label="_storage = storage", span="29-29", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="ServerOwinExtensions.cs"];
m19_8 [label="Id = id", span="31-31", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="ServerOwinExtensions.cs"];
m19_9 [label="JobId = jobId", span="32-32", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="ServerOwinExtensions.cs"];
m19_10 [label="Queue = queue", span="33-33", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="ServerOwinExtensions.cs"];
m19_11 [label="storage.SlidingInvisibilityTimeout.HasValue", span="35-35", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="ServerOwinExtensions.cs"];
m19_12 [label="var keepAliveInterval =\r\n                    TimeSpan.FromSeconds(storage.SlidingInvisibilityTimeout.Value.TotalSeconds / 5)", span="37-38", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="ServerOwinExtensions.cs"];
m19_13 [label="_timer = new Timer(ExecuteKeepAliveQuery, null, keepAliveInterval, keepAliveInterval)", span="39-39", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="ServerOwinExtensions.cs"];
m19_14 [label="Exit Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", span="20-20", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.SqlServerTimeoutJob(Hangfire.SqlServer.SqlServerStorage, long, string, string)", file="ServerOwinExtensions.cs"];
m19_16 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="ServerOwinExtensions.cs"];
m19_37 [label="Entry Hangfire.SqlServer.SqlServerTimeoutJob.Dispose()", span="79-79", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Dispose()", file="ServerOwinExtensions.cs"];
m19_38 [label=_disposed, span="81-81", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Dispose()", file="ServerOwinExtensions.cs"];
m19_39 [label="return;", span="81-81", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Dispose()", file="ServerOwinExtensions.cs"];
m19_40 [label="_disposed = true", span="82-82", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Dispose()", file="ServerOwinExtensions.cs"];
m19_41 [label="_timer?.Dispose()", span="84-84", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Dispose()", file="ServerOwinExtensions.cs"];
m19_42 [label=_syncRoot, span="86-86", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Dispose()", file="ServerOwinExtensions.cs"];
m19_43 [label="!_removedFromQueue && !_requeued", span="88-88", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Dispose()", file="ServerOwinExtensions.cs"];
m19_44 [label="Requeue()", span="90-90", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Dispose()", file="ServerOwinExtensions.cs"];
m19_45 [label="Exit Hangfire.SqlServer.SqlServerTimeoutJob.Dispose()", span="79-79", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.Dispose()", file="ServerOwinExtensions.cs"];
m19_58 [label="Entry lambda expression", span="103-109", cluster="lambda expression", file="ServerOwinExtensions.cs"];
m19_25 [label="Entry lambda expression", span="51-57", cluster="lambda expression", file="ServerOwinExtensions.cs"];
m19_26 [label="connection.Execute(\r\n                        $''delete from {_storage.SchemaName}.JobQueue where Id = @id'',\r\n                        new { id = Id },\r\n                        commandTimeout: _storage.CommandTimeout)", span="53-56", cluster="lambda expression", file="ServerOwinExtensions.cs"];
m19_27 [label="Exit lambda expression", span="51-57", cluster="lambda expression", file="ServerOwinExtensions.cs"];
m19_34 [label="Entry lambda expression", span="67-73", cluster="lambda expression", file="ServerOwinExtensions.cs"];
m19_35 [label="connection.Execute(\r\n                        $''update {_storage.SchemaName}.JobQueue set FetchedAt = null where Id = @id'',\r\n                        new { id = Id },\r\n                        commandTimeout: _storage.CommandTimeout)", span="69-72", cluster="lambda expression", file="ServerOwinExtensions.cs"];
m19_36 [label="Exit lambda expression", span="67-73", cluster="lambda expression", file="ServerOwinExtensions.cs"];
m19_59 [label="connection.Execute(\r\n                            $''update {_storage.SchemaName}.JobQueue set FetchedAt = getutcdate() where Id = @id'',\r\n                            new { id = Id },\r\n                            commandTimeout: _storage.CommandTimeout)", span="105-108", cluster="lambda expression", file="ServerOwinExtensions.cs"];
m19_60 [label="Exit lambda expression", span="103-109", cluster="lambda expression", file="ServerOwinExtensions.cs"];
m19_47 [label="Entry Hangfire.SqlServer.SqlServerTimeoutJob.ExecuteKeepAliveQuery(object)", span="95-95", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.ExecuteKeepAliveQuery(object)", file="ServerOwinExtensions.cs"];
m19_48 [label=_syncRoot, span="97-97", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.ExecuteKeepAliveQuery(object)", file="ServerOwinExtensions.cs"];
m19_49 [label="_requeued || _removedFromQueue", span="99-99", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.ExecuteKeepAliveQuery(object)", file="ServerOwinExtensions.cs"];
m19_50 [label="return;", span="99-99", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.ExecuteKeepAliveQuery(object)", file="ServerOwinExtensions.cs"];
m19_51 [label="_storage.UseConnection(null, connection =>\r\n                    {\r\n                        connection.Execute(\r\n                            $''update {_storage.SchemaName}.JobQueue set FetchedAt = getutcdate() where Id = @id'',\r\n                            new { id = Id },\r\n                            commandTimeout: _storage.CommandTimeout);\r\n                    })", span="103-109", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.ExecuteKeepAliveQuery(object)", file="ServerOwinExtensions.cs"];
m19_52 [label="Logger.Trace($''Keep-alive query for message {Id} sent'')", span="111-111", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.ExecuteKeepAliveQuery(object)", file="ServerOwinExtensions.cs"];
m19_53 [label=Exception, span="113-113", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.ExecuteKeepAliveQuery(object)", file="ServerOwinExtensions.cs"];
m19_54 [label="Logger.DebugException($''Unable to execute keep-alive query for message {Id}'', ex)", span="115-115", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.ExecuteKeepAliveQuery(object)", file="ServerOwinExtensions.cs"];
m19_55 [label="Exit Hangfire.SqlServer.SqlServerTimeoutJob.ExecuteKeepAliveQuery(object)", span="95-95", cluster="Hangfire.SqlServer.SqlServerTimeoutJob.ExecuteKeepAliveQuery(object)", file="ServerOwinExtensions.cs"];
m19_61 [label="Hangfire.SqlServer.SqlServerTimeoutJob", span="", file="ServerOwinExtensions.cs"];
m20_0 [label="Entry Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="23-23", cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="ServerWatchdogOptions.cs"];
m20_1 [label="ServerTimeout = ServerWatchdog.DefaultServerTimeout", span="25-25", cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="ServerWatchdogOptions.cs"];
m20_2 [label="CheckInterval = ServerWatchdog.DefaultCheckInterval", span="26-26", cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="ServerWatchdogOptions.cs"];
m20_3 [label="Exit Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="23-23", cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="ServerWatchdogOptions.cs"];
m20_4 [label="Hangfire.Server.ServerWatchdogOptions", span="", file="ServerWatchdogOptions.cs"];
m21_158 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="197-197", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="StartupConfiguration.cs"];
m21_159 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="199-202", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="StartupConfiguration.cs"];
m21_160 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n                connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''AnotherValue'', parameter.Value);\r\n            })", span="204-217", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="StartupConfiguration.cs"];
m21_161 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="197-197", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="StartupConfiguration.cs"];
m21_309 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="432-432", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="StartupConfiguration.cs"];
m21_310 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null));\r\n\r\n                Assert.Equal(''context'', exception.ParamName);\r\n            })", span="434-440", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="StartupConfiguration.cs"];
m21_311 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="432-432", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="StartupConfiguration.cs"];
m21_308 [label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="236-236", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StartupConfiguration.cs"];
m21_107 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="120-120", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="StartupConfiguration.cs"];
m21_108 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="122-125", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="StartupConfiguration.cs"];
m21_109 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = Job.FromExpression(() => SampleMethod(''wrong''));\r\n\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result);\r\n                Assert.NotNull(result.Job);\r\n                Assert.Equal(''Succeeded'', result.State);\r\n                Assert.Equal(''Arguments'', result.Job.Arguments[0]);\r\n            })", span="127-146", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="StartupConfiguration.cs"];
m21_110 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="120-120", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="StartupConfiguration.cs"];
m21_191 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="205-205", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="StartupConfiguration.cs"];
m21_406 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="StartupConfiguration.cs"];
m21_75 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="StartupConfiguration.cs"];
m21_3 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="StartupConfiguration.cs"];
m21_335 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="StartupConfiguration.cs"];
m21_368 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="509-509", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="StartupConfiguration.cs"];
m21_369 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data)\r\nvalues\r\n('server1', ''),\r\n('server2', '')''", span="511-515", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="StartupConfiguration.cs"];
m21_370 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.Heartbeat(''server1'');\r\n\r\n                var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime?)x.LastHeartbeat);\r\n\r\n                Assert.NotNull(servers[''server1'']);\r\n                Assert.Null(servers[''server2'']);\r\n            })", span="517-528", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="StartupConfiguration.cs"];
m21_371 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="509-509", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="StartupConfiguration.cs"];
m21_394 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="StartupConfiguration.cs"];
m21_0 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="15-15", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="StartupConfiguration.cs"];
m21_1 [label="UseConnection(connection =>\r\n            {\r\n                var transaction = connection.CreateWriteTransaction();\r\n                Assert.NotNull(transaction);\r\n            })", span="17-21", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="StartupConfiguration.cs"];
m21_2 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="15-15", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="StartupConfiguration.cs"];
m21_26 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="StartupConfiguration.cs"];
m21_10 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", span="25-25", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", file="StartupConfiguration.cs"];
m21_11 [label="UseConnection(connection =>\r\n            {\r\n                var @lock = connection.AcquireJobLock(''1'');\r\n                Assert.NotNull(@lock);\r\n            })", span="27-31", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", file="StartupConfiguration.cs"];
m21_12 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", span="25-25", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", file="StartupConfiguration.cs"];
m21_31 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="106-106", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StartupConfiguration.cs"];
m21_79 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="StartupConfiguration.cs"];
m21_219 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", span="302-302", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", file="StartupConfiguration.cs"];
m21_220 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.DeleteJobFromQueue(null, ''default''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="304-310", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", file="StartupConfiguration.cs"];
m21_221 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", span="302-302", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", file="StartupConfiguration.cs"];
m21_297 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="420-420", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="StartupConfiguration.cs"];
m21_298 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()));\r\n\r\n                Assert.Equal(''serverId'', exception.ParamName);\r\n            })", span="422-428", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="StartupConfiguration.cs"];
m21_299 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="420-420", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="StartupConfiguration.cs"];
m21_202 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="268-268", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="StartupConfiguration.cs"];
m21_203 [label="UseConnection(connection =>\r\n            {\r\n                var value = connection.GetJobParameter(''1'', ''hello'');\r\n                Assert.Null(value);\r\n            })", span="270-274", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="StartupConfiguration.cs"];
m21_204 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="268-268", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="StartupConfiguration.cs"];
m21_407 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="StartupConfiguration.cs"];
m21_416 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", span="571-571", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="StartupConfiguration.cs"];
m21_417 [label="var connection = new SqlServerConnection(ConnectionUtils.CreateConnection())", span="573-573", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="StartupConfiguration.cs"];
m21_418 [label="action(connection)", span="575-575", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="StartupConfiguration.cs"];
m21_419 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", span="571-571", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="StartupConfiguration.cs"];
m21_181 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="244-244", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="StartupConfiguration.cs"];
m21_182 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="246-252", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="StartupConfiguration.cs"];
m21_183 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="244-244", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="StartupConfiguration.cs"];
m21_272 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="380-380", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="StartupConfiguration.cs"];
m21_273 [label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)))", span="382-383", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="StartupConfiguration.cs"];
m21_274 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="380-380", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="StartupConfiguration.cs"];
m21_408 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", span="562-562", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="StartupConfiguration.cs"];
m21_409 [label="var sqlConnection = ConnectionUtils.CreateConnection()", span="564-564", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="StartupConfiguration.cs"];
m21_411 [label="action(sqlConnection, connection)", span="567-567", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="StartupConfiguration.cs"];
m21_410 [label="var connection = new SqlServerConnection(sqlConnection)", span="565-565", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="StartupConfiguration.cs"];
m21_412 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", span="562-562", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="StartupConfiguration.cs"];
m21_25 [label="Entry Unk.>", span="", cluster="Unk.>", file="StartupConfiguration.cs"];
m21_98 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="155-155", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StartupConfiguration.cs"];
m21_126 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="150-150", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="StartupConfiguration.cs"];
m21_127 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="152-158", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="StartupConfiguration.cs"];
m21_128 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="150-150", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="StartupConfiguration.cs"];
m21_230 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", span="314-314", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", file="StartupConfiguration.cs"];
m21_231 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.DeleteJobFromQueue(''1'', null));\r\n\r\n                Assert.Equal(''queue'', exception.ParamName);\r\n            })", span="316-322", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", file="StartupConfiguration.cs"];
m21_232 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", span="314-314", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", file="StartupConfiguration.cs"];
m21_8 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="47-47", cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="StartupConfiguration.cs"];
m21_122 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="StartupConfiguration.cs"];
m21_415 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="StartupConfiguration.cs"];
m21_32 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsANException_WhenParametersCollectionIsNull()", span="50-50", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsANException_WhenParametersCollectionIsNull()", file="StartupConfiguration.cs"];
m21_33 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''parameters'', exception.ParamName);\r\n            })", span="52-61", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsANException_WhenParametersCollectionIsNull()", file="StartupConfiguration.cs"];
m21_34 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsANException_WhenParametersCollectionIsNull()", span="50-50", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsANException_WhenParametersCollectionIsNull()", file="StartupConfiguration.cs"];
m21_209 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="278-278", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="StartupConfiguration.cs"];
m21_210 [label="string arrangeSql = @''\r\ndeclare @id int\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nset @id = scope_identity()\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@id, @name, @value)\r\nselect @id''", span="280-287", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="StartupConfiguration.cs"];
m21_211 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single();\r\n\r\n                var value = connection.GetJobParameter(id.ToString(), ''name'');\r\n\r\n                Assert.Equal(''value'', value);\r\n            })", span="289-298", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="StartupConfiguration.cs"];
m21_212 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="278-278", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="StartupConfiguration.cs"];
m21_261 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="368-368", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="StartupConfiguration.cs"];
m21_262 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="370-376", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="StartupConfiguration.cs"];
m21_263 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="368-368", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="StartupConfiguration.cs"];
m21_72 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="StartupConfiguration.cs"];
m21_319 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="444-444", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="StartupConfiguration.cs"];
m21_320 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                };\r\n                connection.AnnounceServer(''server'', context1);\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', server.Id);\r\n                Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data);\r\n                Assert.Null(server.HeartBeat);\r\n\r\n                var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                };\r\n                connection.AnnounceServer(''server'', context2);\r\n                var sameServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', sameServer.Id);\r\n                Assert.Contains(''1000'', sameServer.Data);\r\n            })", span="446-471", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="StartupConfiguration.cs"];
m21_321 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="444-444", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="StartupConfiguration.cs"];
m21_70 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="StartupConfiguration.cs"];
m21_420 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="StartupConfiguration.cs"];
m21_74 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="StartupConfiguration.cs"];
m21_77 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="StartupConfiguration.cs"];
m21_9 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="StartupConfiguration.cs"];
m21_30 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StartupConfiguration.cs"];
m21_47 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="65-65", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="StartupConfiguration.cs"];
m21_48 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    TimeSpan.FromDays(1));\r\n\r\n                Assert.NotNull(jobId);\r\n                Assert.NotEmpty(jobId);\r\n\r\n                var sqlJob = sql.Query(''select * from HangFire.Job'').Single();\r\n                Assert.Equal(jobId, sqlJob.Id.ToString());\r\n                Assert.Equal(null, (int?) sqlJob.StateId);\r\n                Assert.Equal(null, (string) sqlJob.StateName);\r\n\r\n                var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData);\r\n                invocationData.Arguments = sqlJob.Arguments;\r\n\r\n                var job = invocationData.Deserialize();\r\n                Assert.Equal(typeof(ConnectionFacts), job.Type);\r\n                Assert.Equal(''SampleMethod'', job.Method.Name);\r\n                Assert.Equal(''Hello'', job.Arguments[0]);\r\n\r\n                Assert.True(DateTime.UtcNow < sqlJob.ExpireAt && sqlJob.ExpireAt < DateTime.UtcNow.AddDays(1));\r\n\r\n                var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value);\r\n\r\n                Assert.Equal(''Value1'', parameters[''Key1'']);\r\n                Assert.Equal(''Value2'', parameters[''Key2'']);\r\n            })", span="67-99", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="StartupConfiguration.cs"];
m21_49 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="65-65", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="StartupConfiguration.cs"];
m21_218 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="StartupConfiguration.cs"];
m21_396 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="539-539", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="StartupConfiguration.cs"];
m21_397 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues (@id, '', @heartbeat)''", span="541-543", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="StartupConfiguration.cs"];
m21_398 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    });\r\n\r\n                connection.RemoveTimedOutServers(TimeSpan.FromHours(15));\r\n\r\n                var liveServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server2'', liveServer.Id);\r\n            })", span="545-559", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="StartupConfiguration.cs"];
m21_399 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="539-539", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="StartupConfiguration.cs"];
m21_358 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="502-502", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="StartupConfiguration.cs"];
m21_359 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null)))", span="504-505", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="StartupConfiguration.cs"];
m21_360 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="502-502", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="StartupConfiguration.cs"];
m21_137 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="162-162", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="StartupConfiguration.cs"];
m21_138 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="164-170", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="StartupConfiguration.cs"];
m21_139 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="162-162", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="StartupConfiguration.cs"];
m21_357 [label="Entry Unk.NotEqual", span="", cluster="Unk.NotEqual", file="StartupConfiguration.cs"];
m21_385 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="532-532", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="StartupConfiguration.cs"];
m21_386 [label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))))", span="534-535", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="StartupConfiguration.cs"];
m21_387 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="532-532", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="StartupConfiguration.cs"];
m21_106 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="StartupConfiguration.cs"];
m21_147 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="174-174", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="StartupConfiguration.cs"];
m21_148 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="176-179", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="StartupConfiguration.cs"];
m21_149 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''Value'', parameter.Value);\r\n            })", span="181-193", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="StartupConfiguration.cs"];
m21_150 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="174-174", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="StartupConfiguration.cs"];
m21_395 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="277-277", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="StartupConfiguration.cs"];
m21_414 [label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", span="35-35", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", file="StartupConfiguration.cs"];
m21_307 [label="Entry HangFire.Server.ServerContext.ServerContext()", span="18-18", cluster="HangFire.Server.ServerContext.ServerContext()", file="StartupConfiguration.cs"];
m21_99 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="110-110", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="StartupConfiguration.cs"];
m21_100 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetJobData(''1'');\r\n                Assert.Null(result);\r\n            })", span="112-116", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="StartupConfiguration.cs"];
m21_101 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="110-110", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="StartupConfiguration.cs"];
m21_50 [label="Entry Unk.UseConnections", span="", cluster="Unk.UseConnections", file="StartupConfiguration.cs"];
m21_400 [label="Entry lambda expression", span="545-559", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_4 [label="Entry lambda expression", span="17-21", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_5 [label="var transaction = connection.CreateWriteTransaction()", span="19-19", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_6 [label="Assert.NotNull(transaction)", span="20-20", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_7 [label="Exit lambda expression", span="17-21", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_13 [label="Entry lambda expression", span="27-31", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_14 [label="var @lock = connection.AcquireJobLock(''1'')", span="29-29", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_15 [label="Assert.NotNull(@lock)", span="30-30", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_16 [label="Exit lambda expression", span="27-31", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_21 [label="Entry lambda expression", span="37-46", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_22 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        TimeSpan.Zero))", span="39-43", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_28 [label="connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        TimeSpan.Zero)", span="40-43", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_23 [label="Assert.Equal(''job'', exception.ParamName)", span="45-45", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_27 [label="Entry lambda expression", span="40-43", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_24 [label="Exit lambda expression", span="37-46", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_29 [label="Exit lambda expression", span="40-43", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_35 [label="Entry lambda expression", span="52-61", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_36 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        TimeSpan.Zero))", span="54-58", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_40 [label="connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        TimeSpan.Zero)", span="55-58", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_37 [label="Assert.Equal(''parameters'', exception.ParamName)", span="60-60", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_39 [label="Entry lambda expression", span="55-58", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_38 [label="Exit lambda expression", span="52-61", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_41 [label="Exit lambda expression", span="55-58", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_43 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_44 [label="SampleMethod(''hello'')", span="56-56", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_45 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_51 [label="Entry lambda expression", span="67-99", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_52 [label="var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    TimeSpan.FromDays(1))", span="69-72", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_55 [label="var sqlJob = sql.Query(''select * from HangFire.Job'').Single()", span="77-77", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_66 [label="var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value)", span="92-95", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_53 [label="Assert.NotNull(jobId)", span="74-74", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_80 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_54 [label="Assert.NotEmpty(jobId)", span="75-75", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_56 [label="Assert.Equal(jobId, sqlJob.Id.ToString())", span="78-78", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_57 [label="Assert.Equal(null, (int?) sqlJob.StateId)", span="79-79", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_58 [label="Assert.Equal(null, (string) sqlJob.StateName)", span="80-80", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_59 [label="var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData)", span="82-82", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_60 [label="invocationData.Arguments = sqlJob.Arguments", span="83-83", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_65 [label="Assert.True(DateTime.UtcNow < sqlJob.ExpireAt && sqlJob.ExpireAt < DateTime.UtcNow.AddDays(1))", span="90-90", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_61 [label="var job = invocationData.Deserialize()", span="85-85", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_62 [label="Assert.Equal(typeof(ConnectionFacts), job.Type)", span="86-86", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_63 [label="Assert.Equal(''SampleMethod'', job.Method.Name)", span="87-87", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_64 [label="Assert.Equal(''Hello'', job.Arguments[0])", span="88-88", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_67 [label="Assert.Equal(''Value1'', parameters[''Key1''])", span="97-97", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_83 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_86 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_68 [label="Assert.Equal(''Value2'', parameters[''Key2''])", span="98-98", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_69 [label="Exit lambda expression", span="67-99", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_81 [label="SampleMethod(''Hello'')", span="70-70", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_82 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_84 [label="(string) x.Name", span="95-95", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_85 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_87 [label="(string) x.Value", span="95-95", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_88 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_92 [label="Entry lambda expression", span="105-106", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_93 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null))", span="105-106", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_96 [label="connection.GetJobData(null)", span="106-106", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_94 [label="Exit lambda expression", span="105-106", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_95 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_97 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_102 [label="Entry lambda expression", span="112-116", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_103 [label="var result = connection.GetJobData(''1'')", span="114-114", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_104 [label="Assert.Null(result)", span="115-115", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_105 [label="Exit lambda expression", span="112-116", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_113 [label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="131-138", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_111 [label="Entry lambda expression", span="127-146", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_112 [label="var job = Job.FromExpression(() => SampleMethod(''wrong''))", span="129-129", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_114 [label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="140-140", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_123 [label="Entry lambda expression", span="129-129", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_115 [label="Assert.NotNull(result)", span="142-142", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_116 [label="Assert.NotNull(result.Job)", span="143-143", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_117 [label="Assert.Equal(''Succeeded'', result.State)", span="144-144", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_118 [label="Assert.Equal(''Arguments'', result.Job.Arguments[0])", span="145-145", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_119 [label="Exit lambda expression", span="127-146", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_124 [label="SampleMethod(''wrong'')", span="129-129", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_125 [label="Exit lambda expression", span="129-129", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_129 [label="Entry lambda expression", span="152-158", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_130 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''))", span="154-155", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_134 [label="connection.SetJobParameter(null, ''name'', ''value'')", span="155-155", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_131 [label="Assert.Equal(''id'', exception.ParamName)", span="157-157", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_133 [label="Entry lambda expression", span="155-155", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_132 [label="Exit lambda expression", span="152-158", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_135 [label="Exit lambda expression", span="155-155", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_140 [label="Entry lambda expression", span="164-170", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_141 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''))", span="166-167", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_145 [label="connection.SetJobParameter(''1'', null, ''value'')", span="167-167", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_142 [label="Assert.Equal(''name'', exception.ParamName)", span="169-169", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_144 [label="Entry lambda expression", span="167-167", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_143 [label="Exit lambda expression", span="164-170", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_146 [label="Exit lambda expression", span="167-167", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_152 [label="var job = sql.Query(arrangeSql).Single()", span="183-183", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_151 [label="Entry lambda expression", span="181-193", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_154 [label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="186-186", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_155 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="188-190", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_153 [label="string jobId = job.Id.ToString()", span="184-184", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_156 [label="Assert.Equal(''Value'', parameter.Value)", span="192-192", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_157 [label="Exit lambda expression", span="181-193", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_163 [label="var job = sql.Query(arrangeSql).Single()", span="206-206", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_162 [label="Entry lambda expression", span="204-217", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_165 [label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="209-209", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_166 [label="connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'')", span="210-210", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_167 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="212-214", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_164 [label="string jobId = job.Id.ToString()", span="207-207", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_168 [label="Assert.Equal(''AnotherValue'', parameter.Value)", span="216-216", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_169 [label="Exit lambda expression", span="204-217", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_175 [label="var job = sql.Query(arrangeSql).Single()", span="230-230", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_174 [label="Entry lambda expression", span="228-240", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_177 [label="connection.SetJobParameter(jobId, ''Name'', null)", span="233-233", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_178 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="235-237", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_176 [label="string jobId = job.Id.ToString()", span="231-231", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_179 [label="Assert.Equal((string) null, parameter.Value)", span="239-239", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_180 [label="Exit lambda expression", span="228-240", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_184 [label="Entry lambda expression", span="246-252", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_185 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''))", span="248-249", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_189 [label="connection.GetJobParameter(null, ''hello'')", span="249-249", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_186 [label="Assert.Equal(''id'', exception.ParamName)", span="251-251", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_188 [label="Entry lambda expression", span="249-249", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_187 [label="Exit lambda expression", span="246-252", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_190 [label="Exit lambda expression", span="249-249", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_195 [label="Entry lambda expression", span="258-264", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_196 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null))", span="260-261", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_200 [label="connection.GetJobParameter(''1'', null)", span="261-261", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_197 [label="Assert.Equal(''name'', exception.ParamName)", span="263-263", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_199 [label="Entry lambda expression", span="261-261", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_198 [label="Exit lambda expression", span="258-264", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_201 [label="Exit lambda expression", span="261-261", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_205 [label="Entry lambda expression", span="270-274", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_206 [label="var value = connection.GetJobParameter(''1'', ''hello'')", span="272-272", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_207 [label="Assert.Null(value)", span="273-273", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_208 [label="Exit lambda expression", span="270-274", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_214 [label="var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single()", span="291-293", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_213 [label="Entry lambda expression", span="289-298", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_215 [label="var value = connection.GetJobParameter(id.ToString(), ''name'')", span="295-295", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_216 [label="Assert.Equal(''value'', value)", span="297-297", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_217 [label="Exit lambda expression", span="289-298", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_222 [label="Entry lambda expression", span="304-310", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_223 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.DeleteJobFromQueue(null, ''default''))", span="306-307", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_227 [label="connection.DeleteJobFromQueue(null, ''default'')", span="307-307", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_224 [label="Assert.Equal(''id'', exception.ParamName)", span="309-309", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_226 [label="Entry lambda expression", span="307-307", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_225 [label="Exit lambda expression", span="304-310", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_228 [label="Exit lambda expression", span="307-307", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_233 [label="Entry lambda expression", span="316-322", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_234 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.DeleteJobFromQueue(''1'', null))", span="318-319", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_238 [label="connection.DeleteJobFromQueue(''1'', null)", span="319-319", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_235 [label="Assert.Equal(''queue'', exception.ParamName)", span="321-321", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_237 [label="Entry lambda expression", span="319-319", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_236 [label="Exit lambda expression", span="316-322", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_239 [label="Exit lambda expression", span="319-319", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_245 [label="sql.Execute(arrangeSql, new { id = ''1'', queue = ''default'' })", span="334-334", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_244 [label="Entry lambda expression", span="332-340", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_246 [label="connection.DeleteJobFromQueue(''1'', ''default'')", span="336-336", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_247 [label="var count = sql.Query<int>(''select count(*) from HangFire.JobQueue'').Single()", span="338-338", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_248 [label="Assert.Equal(0, count)", span="339-339", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_249 [label="Exit lambda expression", span="332-340", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_256 [label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    { \r\n                        new { id = ''1'', queue = ''critical'' },\r\n                        new { id = ''2'', queue = ''default'' } \r\n                    })", span="352-358", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_255 [label="Entry lambda expression", span="350-364", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_257 [label="connection.DeleteJobFromQueue(''1'', ''default'')", span="360-360", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_258 [label="var count = sql.Query<int>(''select count(*) from HangFire.JobQueue'').Single()", span="362-362", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_259 [label="Assert.Equal(2, count)", span="363-363", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_260 [label="Exit lambda expression", span="350-364", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_264 [label="Entry lambda expression", span="370-376", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_265 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1))", span="372-373", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_269 [label="connection.GetFirstByLowestScoreFromSet(null, 0, 1)", span="373-373", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_266 [label="Assert.Equal(''key'', exception.ParamName)", span="375-375", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_268 [label="Entry lambda expression", span="373-373", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_267 [label="Exit lambda expression", span="370-376", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_270 [label="Exit lambda expression", span="373-373", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_275 [label="Entry lambda expression", span="382-383", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_276 [label="Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1))", span="382-383", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_279 [label="connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)", span="383-383", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_277 [label="Exit lambda expression", span="382-383", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_278 [label="Entry lambda expression", span="383-383", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_280 [label="Exit lambda expression", span="383-383", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_284 [label="Entry lambda expression", span="389-395", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_285 [label="var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1)", span="391-392", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_286 [label="Assert.Null(result)", span="394-394", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_287 [label="Exit lambda expression", span="389-395", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_293 [label="sql.Execute(arrangeSql)", span="411-411", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_292 [label="Entry lambda expression", span="409-416", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_294 [label="var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0)", span="413-413", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_295 [label="Assert.Equal(''-1.0'', result)", span="415-415", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_296 [label="Exit lambda expression", span="409-416", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_300 [label="Entry lambda expression", span="422-428", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_301 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()))", span="424-425", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_305 [label="connection.AnnounceServer(null, new ServerContext())", span="425-425", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_302 [label="Assert.Equal(''serverId'', exception.ParamName)", span="427-427", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_304 [label="Entry lambda expression", span="425-425", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_303 [label="Exit lambda expression", span="422-428", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_306 [label="Exit lambda expression", span="425-425", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_312 [label="Entry lambda expression", span="434-440", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_313 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null))", span="436-437", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_317 [label="connection.AnnounceServer(''server'', null)", span="437-437", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_314 [label="Assert.Equal(''context'', exception.ParamName)", span="439-439", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_316 [label="Entry lambda expression", span="437-437", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_315 [label="Exit lambda expression", span="434-440", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_318 [label="Exit lambda expression", span="437-437", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_322 [label="Entry lambda expression", span="446-471", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_323 [label="var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                }", span="448-452", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_324 [label="connection.AnnounceServer(''server'', context1)", span="453-453", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_325 [label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="455-455", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_330 [label="connection.AnnounceServer(''server'', context2)", span="467-467", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_331 [label="var sameServer = sql.Query(''select * from HangFire.Server'').Single()", span="468-468", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_326 [label="Assert.Equal(''server'', server.Id)", span="456-456", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_327 [label="Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data)", span="457-459", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_328 [label="Assert.Null(server.HeartBeat)", span="460-460", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_329 [label="var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                }", span="462-466", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_332 [label="Assert.Equal(''server'', sameServer.Id)", span="469-469", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_333 [label="Assert.Contains(''1000'', sameServer.Data)", span="470-470", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_334 [label="Exit lambda expression", span="446-471", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_340 [label="Entry lambda expression", span="477-478", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_341 [label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null))", span="477-478", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_344 [label="connection.RemoveServer(null)", span="478-478", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_342 [label="Exit lambda expression", span="477-478", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_343 [label="Entry lambda expression", span="478-478", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_345 [label="Exit lambda expression", span="478-478", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_352 [label="sql.Execute(arrangeSql)", span="492-492", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_351 [label="Entry lambda expression", span="490-498", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_353 [label="connection.RemoveServer(''Server1'')", span="494-494", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_354 [label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="496-496", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_355 [label="Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase)", span="497-497", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_356 [label="Exit lambda expression", span="490-498", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_361 [label="Entry lambda expression", span="504-505", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_362 [label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null))", span="504-505", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_365 [label="connection.Heartbeat(null)", span="505-505", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_363 [label="Exit lambda expression", span="504-505", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_364 [label="Entry lambda expression", span="505-505", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_366 [label="Exit lambda expression", span="505-505", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_373 [label="sql.Execute(arrangeSql)", span="519-519", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_372 [label="Entry lambda expression", span="517-528", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_374 [label="connection.Heartbeat(''server1'')", span="521-521", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_375 [label="var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime?)x.LastHeartbeat)", span="523-524", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_376 [label="Assert.NotNull(servers[''server1''])", span="526-526", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_379 [label="Entry lambda expression", span="524-524", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_382 [label="Entry lambda expression", span="524-524", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_377 [label="Assert.Null(servers[''server2''])", span="527-527", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_378 [label="Exit lambda expression", span="517-528", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_380 [label="(string)x.Id", span="524-524", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_381 [label="Exit lambda expression", span="524-524", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_383 [label="(DateTime?)x.LastHeartbeat", span="524-524", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_384 [label="Exit lambda expression", span="524-524", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_388 [label="Entry lambda expression", span="534-535", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_389 [label="Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5)))", span="534-535", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_392 [label="connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))", span="535-535", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_390 [label="Exit lambda expression", span="534-535", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_391 [label="Entry lambda expression", span="535-535", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_393 [label="Exit lambda expression", span="535-535", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_401 [label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    })", span="547-553", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_402 [label="connection.RemoveTimedOutServers(TimeSpan.FromHours(15))", span="555-555", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_403 [label="var liveServer = sql.Query(''select * from HangFire.Server'').Single()", span="557-557", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_404 [label="Assert.Equal(''server2'', liveServer.Id)", span="558-558", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_405 [label="Exit lambda expression", span="545-559", cluster="lambda expression", file="StartupConfiguration.cs"];
m21_229 [label="Entry HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="216-216", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StartupConfiguration.cs"];
m21_46 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SampleMethod(string)", span="579-579", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SampleMethod(string)", file="StartupConfiguration.cs"];
m21_421 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SampleMethod(string)", span="579-579", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SampleMethod(string)", file="StartupConfiguration.cs"];
m21_170 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="221-221", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="StartupConfiguration.cs"];
m21_171 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="223-226", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="StartupConfiguration.cs"];
m21_172 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', null);\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal((string) null, parameter.Value);\r\n            })", span="228-240", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="StartupConfiguration.cs"];
m21_173 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="221-221", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="StartupConfiguration.cs"];
m21_136 [label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="191-191", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StartupConfiguration.cs"];
m21_192 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="256-256", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="StartupConfiguration.cs"];
m21_193 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="258-264", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="StartupConfiguration.cs"];
m21_194 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="256-256", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="StartupConfiguration.cs"];
m21_281 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="387-387", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="StartupConfiguration.cs"];
m21_282 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1);\r\n\r\n                Assert.Null(result);\r\n            })", span="389-395", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="StartupConfiguration.cs"];
m21_283 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="387-387", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="StartupConfiguration.cs"];
m21_271 [label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="225-225", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StartupConfiguration.cs"];
m21_336 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="StartupConfiguration.cs"];
m21_121 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="StartupConfiguration.cs"];
m21_17 [label="Entry HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="52-52", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="StartupConfiguration.cs"];
m21_18 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="35-35", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="StartupConfiguration.cs"];
m21_19 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''job'', exception.ParamName);\r\n            })", span="37-46", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="StartupConfiguration.cs"];
m21_20 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="35-35", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="StartupConfiguration.cs"];
m21_71 [label="Entry Unk.NotEmpty", span="", cluster="Unk.NotEmpty", file="StartupConfiguration.cs"];
m21_73 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="StartupConfiguration.cs"];
m21_251 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", span="344-344", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="StartupConfiguration.cs"];
m21_252 [label="string arrangeSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@id, @queue)''", span="346-348", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="StartupConfiguration.cs"];
m21_253 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    { \r\n                        new { id = ''1'', queue = ''critical'' },\r\n                        new { id = ''2'', queue = ''default'' } \r\n                    }); \r\n\r\n                connection.DeleteJobFromQueue(''1'', ''default'');\r\n\r\n                var count = sql.Query<int>(''select count(*) from HangFire.JobQueue'').Single();\r\n                Assert.Equal(2, count);\r\n            })", span="350-364", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="StartupConfiguration.cs"];
m21_254 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", span="344-344", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="StartupConfiguration.cs"];
m21_347 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", span="482-482", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="StartupConfiguration.cs"];
m21_348 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data)\r\nvalues \r\n('Server1', ''),\r\n('Server2', '')''", span="484-488", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="StartupConfiguration.cs"];
m21_349 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.RemoveServer(''Server1'');\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase);\r\n            })", span="490-498", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="StartupConfiguration.cs"];
m21_350 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", span="482-482", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="StartupConfiguration.cs"];
m21_78 [label="Entry Unk.True", span="", cluster="Unk.True", file="StartupConfiguration.cs"];
m21_250 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="StartupConfiguration.cs"];
m21_76 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()", file="StartupConfiguration.cs"];
m21_346 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="259-259", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="StartupConfiguration.cs"];
m21_42 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StartupConfiguration.cs"];
m21_413 [label="Entry HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37", cluster="HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="StartupConfiguration.cs"];
m21_367 [label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="268-268", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="StartupConfiguration.cs"];
m21_288 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="399-399", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="StartupConfiguration.cs"];
m21_289 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues \r\n('key', 1.0, '1.0'),\r\n('key', -1.0, '-1.0'),\r\n('key', -5.0, '-5.0'),\r\n('another-key', -2.0, '-2.0')''", span="401-407", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="StartupConfiguration.cs"];
m21_290 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0);\r\n                \r\n                Assert.Equal(''-1.0'', result);\r\n            })", span="409-416", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="StartupConfiguration.cs"];
m21_291 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="399-399", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="StartupConfiguration.cs"];
m21_89 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="103-103", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="StartupConfiguration.cs"];
m21_90 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null)))", span="105-106", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="StartupConfiguration.cs"];
m21_91 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="103-103", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="StartupConfiguration.cs"];
m21_120 [label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65", cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="StartupConfiguration.cs"];
m21_240 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", span="326-326", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", file="StartupConfiguration.cs"];
m21_241 [label="string arrangeSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@id, @queue)''", span="328-330", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", file="StartupConfiguration.cs"];
m21_242 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new { id = ''1'', queue = ''default'' });\r\n\r\n                connection.DeleteJobFromQueue(''1'', ''default'');\r\n\r\n                var count = sql.Query<int>(''select count(*) from HangFire.JobQueue'').Single();\r\n                Assert.Equal(0, count);\r\n            })", span="332-340", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", file="StartupConfiguration.cs"];
m21_243 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", span="326-326", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", file="StartupConfiguration.cs"];
m21_337 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="475-475", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="StartupConfiguration.cs"];
m21_338 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null)))", span="477-478", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="StartupConfiguration.cs"];
m21_339 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="475-475", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="StartupConfiguration.cs"];
m21_422 [label="HangFire.SqlServer.Tests.ConnectionFacts", span="", file="StartupConfiguration.cs"];
m21_423 [label="HangFire.SqlServer.SqlServerConnection", span="", file="StartupConfiguration.cs"];
m21_424 [label="HangFire.SqlServer.SqlServerConnection", span="", file="StartupConfiguration.cs"];
m21_425 [label="HangFire.SqlServer.SqlServerConnection", span="", file="StartupConfiguration.cs"];
m21_426 [label=arrangeSql, span="", file="StartupConfiguration.cs"];
m21_427 [label="HangFire.SqlServer.SqlServerConnection", span="", file="StartupConfiguration.cs"];
m21_428 [label="HangFire.SqlServer.SqlServerConnection", span="", file="StartupConfiguration.cs"];
m21_429 [label=arrangeSql, span="", file="StartupConfiguration.cs"];
m21_430 [label=arrangeSql, span="", file="StartupConfiguration.cs"];
m21_431 [label=arrangeSql, span="", file="StartupConfiguration.cs"];
m21_432 [label="HangFire.SqlServer.SqlServerConnection", span="", file="StartupConfiguration.cs"];
m21_433 [label="HangFire.SqlServer.SqlServerConnection", span="", file="StartupConfiguration.cs"];
m21_434 [label=arrangeSql, span="", file="StartupConfiguration.cs"];
m21_435 [label="HangFire.SqlServer.SqlServerConnection", span="", file="StartupConfiguration.cs"];
m21_436 [label="HangFire.SqlServer.SqlServerConnection", span="", file="StartupConfiguration.cs"];
m21_437 [label=arrangeSql, span="", file="StartupConfiguration.cs"];
m21_438 [label=arrangeSql, span="", file="StartupConfiguration.cs"];
m21_439 [label="HangFire.SqlServer.SqlServerConnection", span="", file="StartupConfiguration.cs"];
m21_440 [label="HangFire.SqlServer.SqlServerConnection", span="", file="StartupConfiguration.cs"];
m21_441 [label=arrangeSql, span="", file="StartupConfiguration.cs"];
m21_442 [label="HangFire.SqlServer.SqlServerConnection", span="", file="StartupConfiguration.cs"];
m21_443 [label="HangFire.SqlServer.SqlServerConnection", span="", file="StartupConfiguration.cs"];
m21_444 [label="HangFire.SqlServer.SqlServerConnection", span="", file="StartupConfiguration.cs"];
m21_445 [label=arrangeSql, span="", file="StartupConfiguration.cs"];
m21_446 [label="HangFire.SqlServer.SqlServerConnection", span="", file="StartupConfiguration.cs"];
m21_447 [label=arrangeSql, span="", file="StartupConfiguration.cs"];
m21_448 [label="HangFire.SqlServer.SqlServerConnection", span="", file="StartupConfiguration.cs"];
m21_449 [label=arrangeSql, span="", file="StartupConfiguration.cs"];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=0, style=solid];
m0_15 -> m0_16  [key=0, style=solid, color=green];
m0_15 -> m0_17  [key=2, style=dotted, color=green];
m0_15 -> m0_18  [key=2, style=dotted, color=green];
m0_117 -> m0_123  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m0_117 -> m0_122  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m0_123 -> m0_65  [key=2, style=dotted];
m0_123 -> m0_69  [key=2, style=dotted];
m0_123 -> m0_124  [key=0, style=solid];
m0_119 -> m0_5  [key=2, style=dotted];
m0_119 -> m0_124  [key=0, style=solid];
m0_121 -> m0_5  [key=2, style=dotted];
m0_121 -> m0_124  [key=0, style=solid];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_125  [key=2, style=dotted];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_120  [key=0, style=solid];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_122  [key=0, style=solid];
m0_124 -> m0_117  [key=0, style=bold, color=blue];
m0_28 -> m0_29  [key=0, style=solid, color=green];
m0_28 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_28 -> m0_39  [key=2, style=dotted];
m0_28 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_95 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_100 -> m0_42  [key=2, style=dotted];
m0_100 -> m0_67  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_97 -> m0_5  [key=2, style=dotted];
m0_97 -> m0_101  [key=0, style=solid];
m0_99 -> m0_5  [key=2, style=dotted];
m0_99 -> m0_101  [key=0, style=solid];
m0_98 -> m0_100  [key=0, style=solid];
m0_98 -> m0_99  [key=0, style=solid];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_98  [key=0, style=solid];
m0_101 -> m0_95  [key=0, style=bold, color=blue];
m0_47 -> m0_54  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m0_47 -> m0_56  [key=1, style=dashed, color=green, label="System.Collections.Generic.IDictionary<string, string>"];
m0_47 -> m0_58  [key=1, style=dashed, color=green, label="System.Collections.Generic.IDictionary<string, string>"];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m0_47 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m0_47 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m0_54 -> m0_55  [key=0, style=solid, color=green];
m0_54 -> m0_65  [key=2, style=dotted, color=green];
m0_54 -> m0_66  [key=2, style=dotted, color=green];
m0_54 -> m0_67  [key=2, style=dotted, color=green];
m0_54 -> m0_68  [key=2, style=dotted, color=green];
m0_54 -> m0_46  [key=2, style=dotted, color=green];
m0_54 -> m0_59  [key=1, style=dashed, color=green, label=jobId];
m0_54 -> m0_62  [key=1, style=dashed, color=green, label=jobId];
m0_53 -> m0_54  [key=0, style=solid, color=green];
m0_53 -> m0_64  [key=2, style=dotted];
m0_52 -> m0_54  [key=1, style=dashed, color=green, label=createJobSql];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_52  [key=3, color=darkorchid, style=bold, label="Field variable int SqlManagedInstance"];
m0_55 -> m0_56  [key=0, style=solid, color=green];
m0_55 -> m0_62  [key=0, style=solid];
m0_59 -> m0_58  [key=0, style=solid, color=green];
m0_59 -> m0_59  [key=1, style=dashed, color=green, label=parameterIndex];
m0_62 -> m0_63  [key=0, style=solid];
m0_56 -> m0_57  [key=0, style=solid, color=green];
m0_56 -> m0_59  [key=1, style=dashed, color=green, label=parameterArray];
m0_56 -> m0_61  [key=1, style=dashed, color=green, label=parameterArray];
m0_57 -> m0_58  [key=0, style=solid, color=green];
m0_57 -> m0_59  [key=1, style=dashed, color=green, label=parameterIndex];
m0_61 -> m0_62  [key=0, style=solid, color=green];
m0_61 -> m0_69  [key=2, style=dotted, color=green];
m0_58 -> m0_59  [key=0, style=solid, color=green];
m0_58 -> m0_60  [key=0, style=solid, color=green];
m0_60 -> m0_61  [key=0, style=solid, color=green];
m0_49 -> m0_5  [key=2, style=dotted];
m0_49 -> m0_63  [key=0, style=solid];
m0_51 -> m0_5  [key=2, style=dotted];
m0_51 -> m0_63  [key=0, style=solid];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_48  [key=3, color=darkorchid, style=bold, label="Field variable int Personal"];
m0_48 -> m0_50  [key=0, style=solid];
m0_50 -> m0_52  [key=0, style=solid];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_50  [key=3, color=darkorchid, style=bold, label="Field variable int Standard"];
m0_63 -> m0_47  [key=0, style=bold, color=blue];
m0_31 -> m0_32  [key=0, style=solid, color=green];
m0_31 -> m0_34  [key=0, style=solid, color=green];
m0_18 -> m0_27  [key=0, style=solid];
m0_18 -> m0_15  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m0_16 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m0_16 -> m0_14  [key=0, style=bold, color=blue];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_19  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=0, style=solid];
m0_19 -> m0_29  [key=1, style=dashed, color=green, label="string[]"];
m0_19 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_19 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_29  [key=2, style=dotted];
m0_22 -> m0_24  [key=0, style=solid];
m0_20 -> m0_27  [key=0, style=solid];
m0_20 -> m0_15  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_22  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_28  [key=2, style=dotted];
m0_21 -> m0_5  [key=2, style=dotted];
m0_21 -> m0_37  [key=0, style=solid];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_30  [key=2, style=dotted];
m0_23 -> m0_37  [key=0, style=solid];
m0_23 -> m0_38  [key=2, style=dotted];
m0_24 -> m0_27  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid, color=green];
m0_25 -> m0_26  [key=0, style=solid, color=green];
m0_25 -> m0_29  [key=1, style=dashed, color=green, label=fetchJobSqlTemplate];
m0_26 -> m0_27  [key=0, style=solid, color=red];
m0_26 -> m0_31  [key=2, style=dotted, color=red];
m0_26 -> m0_29  [key=1, style=dashed, color=green, label=fetchConditions];
m0_26 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=fetchConditions];
m0_27 -> m0_16  [key=0, style=bold, color=blue];
m0_27 -> m0_29  [key=1, style=dashed, color=green, label=currentQueryIndex];
m0_27 -> m0_31  [key=1, style=dashed, color=green, label=currentQueryIndex];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_4  [key=0, style=solid, color=green];
m0_2 -> m0_5  [key=2, style=dotted, color=green];
m0_3 -> m0_2  [key=0, style=bold, color=blue];
m0_3 -> m0_4  [key=0, style=solid, color=green];
m0_40 -> m0_32  [key=0, style=bold, color=blue];
m0_70 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_70 -> m0_71  [key=0, style=solid];
m0_74 -> m0_42  [key=2, style=dotted];
m0_74 -> m0_67  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m0_74 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m0_74 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m0_72 -> m0_5  [key=2, style=dotted];
m0_72 -> m0_85  [key=0, style=solid];
m0_81 -> m0_86  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_84  [key=0, style=solid];
m0_77 -> m0_67  [key=2, style=dotted];
m0_77 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m0_77 -> m0_78  [key=0, style=solid];
m0_73 -> m0_74  [key=0, style=solid];
m0_75 -> m0_77  [key=0, style=solid];
m0_75 -> m0_76  [key=0, style=solid];
m0_78 -> m0_79  [key=0, style=solid];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_87  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_73  [key=0, style=solid];
m0_80 -> m0_81  [key=0, style=solid];
m0_82 -> m0_83  [key=0, style=solid];
m0_76 -> m0_85  [key=0, style=solid];
m0_79 -> m0_80  [key=0, style=solid];
m0_83 -> m0_84  [key=0, style=solid];
m0_85 -> m0_70  [key=0, style=bold, color=blue];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_14  [key=0, style=solid];
m0_10 -> m0_15  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_13  [key=2, style=dotted];
m0_12 -> m0_10  [key=0, style=bold, color=blue];
m0_12 -> m0_13  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid, color=green];
m0_29 -> m0_18  [key=2, style=dotted, color=green];
m0_29 -> m0_40  [key=2, style=dotted, color=green];
m0_29 -> m0_41  [key=2, style=dotted, color=green];
m0_29 -> m0_42  [key=2, style=dotted, color=green];
m0_29 -> m0_35  [key=1, style=dashed, color=green, label=idAndQueue];
m0_29 -> m0_36  [key=1, style=dashed, color=green, label=idAndQueue];
m0_29 -> m0_86  [key=3, color=green, style=bold, label="Parameter variable DbConnection connection"];
m0_39 -> m0_40  [key=0, style=solid, color=red];
m0_39 -> m0_43  [key=2, style=dotted, color=red];
m0_30 -> m0_31  [key=0, style=solid, color=green];
m0_30 -> m0_34  [key=0, style=solid, color=green];
m0_35 -> m0_27  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_37  [key=0, style=solid, color=red];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_45  [key=2, style=dotted];
m0_36 -> m0_46  [key=2, style=dotted];
m0_36 -> m0_40  [key=0, style=solid];
m0_36 -> m0_15  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid, color=green];
m0_32 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_32 -> m0_34  [key=0, style=solid];
m0_32 -> m0_43  [key=2, style=dotted];
m0_32 -> m0_44  [key=2, style=dotted];
m0_32 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m0_32 -> m0_38  [key=1, style=dashed, color=red, label=string];
m0_32 -> m0_39  [key=1, style=dashed, color=red, label="Hangfire.States.IState"];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m0_34 -> m0_40  [key=0, style=solid];
m0_34 -> m0_15  [key=2, style=dotted];
m0_33 -> m0_33  [key=1, style=dashed, color=green, label="System.Threading.CancellationToken"];
m0_33 -> m0_34  [key=0, style=solid, color=green];
m0_33 -> m0_39  [key=2, style=dotted, color=green];
m0_33 -> m0_35  [key=0, style=solid];
m0_37 -> m0_19  [key=0, style=bold, color=blue];
m0_37 -> m0_38  [key=0, style=solid, color=red];
m0_37 -> m0_28  [key=2, style=dotted, color=red];
m0_38 -> m0_39  [key=0, style=solid, color=red];
m0_38 -> m0_41  [key=2, style=dotted, color=red];
m0_38 -> m0_42  [key=2, style=dotted, color=red];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_0 -> m0_3  [key=1, style=dashed, color=green, label=SqlConnection];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_3  [key=0, style=solid, color=green];
m0_4 -> m0_0  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IBackgroundJobFactory"];
m0_4 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IBackgroundJobStateChanger"];
m0_4 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m0_4 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IBackgroundJobStateChanger"];
m0_4 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IBackgroundJobFactory"];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=0, style=solid];
m0_136 -> m0_137  [key=0, style=solid];
m0_139 -> m0_40  [key=2, style=dotted];
m0_139 -> m0_66  [key=2, style=dotted];
m0_139 -> m0_69  [key=2, style=dotted];
m0_139 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_139 -> m0_140  [key=0, style=solid];
m0_137 -> m0_139  [key=0, style=solid];
m0_137 -> m0_137  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_141  [key=2, style=dotted];
m0_138 -> m0_140  [key=0, style=solid];
m0_138 -> m0_38  [key=2, style=dotted];
m0_140 -> m0_136  [key=0, style=bold, color=blue];
m0_6 -> m0_7  [key=0, style=solid, color=green];
m0_6 -> m0_14  [key=0, style=solid];
m0_6 -> m0_15  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid, color=green];
m0_7 -> m0_9  [key=2, style=dotted, color=green];
m0_8 -> m0_6  [key=0, style=bold, color=blue];
m0_8 -> m0_14  [key=0, style=solid];
m0_8 -> m0_15  [key=2, style=dotted];
m0_102 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_107 -> m0_69  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_104 -> m0_5  [key=2, style=dotted];
m0_104 -> m0_108  [key=0, style=solid];
m0_106 -> m0_5  [key=2, style=dotted];
m0_106 -> m0_108  [key=0, style=solid];
m0_105 -> m0_107  [key=0, style=solid];
m0_105 -> m0_106  [key=0, style=solid];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_105  [key=0, style=solid];
m0_108 -> m0_102  [key=0, style=bold, color=blue];
m0_88 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_93 -> m0_69  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_90 -> m0_5  [key=2, style=dotted];
m0_90 -> m0_94  [key=0, style=solid];
m0_92 -> m0_5  [key=2, style=dotted];
m0_92 -> m0_94  [key=0, style=solid];
m0_91 -> m0_93  [key=0, style=solid];
m0_91 -> m0_92  [key=0, style=solid];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_91  [key=0, style=solid];
m0_94 -> m0_88  [key=0, style=bold, color=blue];
m0_109 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_112  [key=1, style=dashed, color=darkseagreen4, label=double];
m0_114 -> m0_42  [key=2, style=dotted];
m0_114 -> m0_67  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_111 -> m0_5  [key=2, style=dotted];
m0_111 -> m0_115  [key=0, style=solid];
m0_112 -> m0_114  [key=0, style=solid];
m0_112 -> m0_113  [key=0, style=solid];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_112  [key=0, style=solid];
m0_113 -> m0_115  [key=0, style=solid];
m0_113 -> m0_116  [key=2, style=dotted];
m0_115 -> m0_109  [key=0, style=bold, color=blue];
m0_13 -> m0_14  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid, color=green];
m0_14 -> m0_4  [key=0, style=bold, color=blue];
m0_44 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
m0_44 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
m0_44 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
m0_44 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
m0_44 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
m0_44 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.BackgroundJobClient"];
m0_44 -> m0_37  [key=1, style=dashed, color=red, label="Hangfire.BackgroundJobClient"];
m0_44 -> m0_38  [key=1, style=dashed, color=red, label="Hangfire.BackgroundJobClient"];
m0_126 -> m0_129  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_126 -> m0_127  [key=0, style=solid];
m0_129 -> m0_69  [key=2, style=dotted];
m0_129 -> m0_130  [key=0, style=solid];
m0_128 -> m0_5  [key=2, style=dotted];
m0_128 -> m0_130  [key=0, style=solid];
m0_127 -> m0_129  [key=0, style=solid];
m0_127 -> m0_128  [key=0, style=solid];
m0_130 -> m0_126  [key=0, style=bold, color=blue];
m0_86 -> m0_0  [key=3, color=darkorchid, style=bold, label="Parameter variable string schema"];
m0_131 -> m0_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_131 -> m0_132  [key=0, style=solid];
m0_134 -> m0_69  [key=2, style=dotted];
m0_134 -> m0_135  [key=0, style=solid];
m0_133 -> m0_5  [key=2, style=dotted];
m0_133 -> m0_135  [key=0, style=solid];
m0_132 -> m0_134  [key=0, style=solid];
m0_132 -> m0_133  [key=0, style=solid];
m0_135 -> m0_131  [key=0, style=bold, color=blue];
m0_142 -> m0_3  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerConnection"];
m0_142 -> m0_7  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerConnection"];
m0_142 -> m0_15  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerConnection"];
m0_142 -> m0_29  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerConnection"];
m0_142 -> m0_54  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerConnection"];
m0_142 -> m0_61  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerConnection"];
m0_142 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m0_142 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m0_142 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m0_142 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m0_142 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m0_142 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m0_142 -> m0_123  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m0_142 -> m0_129  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m0_142 -> m0_134  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m0_142 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m3_0 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.DashboardOptions"];
m3_0 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.DashboardOptions"];
m3_0 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m3_0 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.DashboardOptions"];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=0, style=solid];
m3_2 -> m3_7  [key=0, style=solid];
m3_2 -> m3_8  [key=2, style=dotted];
m3_2 -> m3_9  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_5  [key=0, style=solid];
m3_4 -> m3_7  [key=0, style=solid];
m3_4 -> m3_8  [key=2, style=dotted];
m3_4 -> m3_9  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_6 -> m3_7  [key=0, style=solid];
m3_7 -> m3_0  [key=0, style=bold, color=blue];
m3_10 -> m3_11  [key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_13  [key=2, style=dotted];
m3_12 -> m3_10  [key=0, style=bold, color=blue];
m3_14 -> m3_15  [key=0, style=solid];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_17  [key=2, style=dotted];
m3_16 -> m3_14  [key=0, style=bold, color=blue];
m3_18 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardContext"];
m3_18 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardContext"];
m3_18 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardContext"];
m3_18 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.DashboardContext"];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m4_0 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m4_0 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=0, style=solid];
m4_2 -> m4_5  [key=0, style=solid];
m4_2 -> m4_6  [key=2, style=dotted];
m4_2 -> m4_7  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_0  [key=0, style=bold, color=blue];
m4_27 -> m4_34  [key=0, style=solid];
m4_34 -> m4_35  [key=0, style=solid];
m4_35 -> m4_27  [key=0, style=bold, color=blue];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m4_8 -> m4_14  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m4_8 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_19  [key=2, style=dotted];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_21  [key=2, style=dotted];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_22  [key=2, style=dotted];
m4_14 -> m4_14  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m4_14 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_21  [key=2, style=dotted];
m4_10 -> m4_11  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_20  [key=2, style=dotted];
m4_11 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_11 -> m4_15  [key=1, style=dashed, color=darkseagreen4, label=removedCount];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_15  [key=0, style=solid];
m4_15 -> m4_10  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_23  [key=2, style=dotted];
m4_18 -> m4_8  [key=0, style=bold, color=blue];
m4_29 -> m4_30  [key=0, style=solid];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_32  [key=2, style=dotted];
m4_30 -> m4_33  [key=2, style=dotted];
m4_31 -> m4_29  [key=0, style=bold, color=blue];
m4_24 -> m4_25  [key=0, style=solid];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_27  [key=2, style=dotted];
m4_25 -> m4_28  [key=2, style=dotted];
m4_26 -> m4_24  [key=0, style=bold, color=blue];
m4_36 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m4_36 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m4_36 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m4_36 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m4_36 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m4_36 -> m4_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [key=0, style=bold, color=blue];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_49  [key=2, style=dotted];
m8_6 -> m8_7  [key=0, style=solid, color=red];
m8_6 -> m8_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformingContext"];
m8_6 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformingContext"];
m8_6 -> m8_44  [key=0, style=solid];
m8_6 -> m8_45  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid, color=red];
m8_7 -> m8_12  [key=2, style=dotted, color=red];
m8_7 -> m8_9  [key=1, style=dashed, color=red, label=resource];
m8_7 -> m8_45  [key=2, style=dotted];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_14  [key=2, style=dotted];
m8_9 -> m8_45  [key=2, style=dotted];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_48  [key=2, style=dotted];
m8_10 -> m8_49  [key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_13  [key=2, style=dotted];
m8_8 -> m8_43  [key=0, style=solid];
m8_8 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label=queue];
m8_8 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label=queue];
m8_8 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label=queue];
m8_8 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label=queue];
m8_8 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label=queue];
m8_8 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label=queue];
m8_11 -> m8_6  [key=0, style=bold, color=blue];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_45  [key=2, style=dotted];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_2 -> m8_3  [key=0, style=solid, color=green];
m8_2 -> m8_46  [key=2, style=dotted, color=green];
m8_2 -> m8_4  [key=0, style=solid];
m8_2 -> m8_5  [key=2, style=dotted];
m8_1 -> m8_2  [key=0, style=solid, color=green];
m8_1 -> m8_45  [key=2, style=dotted];
m8_1 -> m8_3  [key=0, style=solid];
m8_3 -> m8_4  [key=0, style=solid, color=green];
m8_3 -> m8_47  [key=2, style=dotted, color=green];
m8_3 -> m8_5  [key=1, style=dashed, color=green, label=queues];
m8_3 -> m8_8  [key=1, style=dashed, color=green, label=queues];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_45  [key=2, style=dotted];
m8_4 -> m8_0  [key=0, style=bold, color=blue];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_7  [key=0, style=solid];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_49  [key=2, style=dotted];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_45  [key=2, style=dotted];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_45  [key=2, style=dotted];
m8_15 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.PerformedContext"];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_49  [key=2, style=dotted];
m8_16 -> m8_18  [key=0, style=solid];
m8_16 -> m8_21  [key=2, style=dotted];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_45  [key=2, style=dotted];
m8_17 -> m8_20  [key=0, style=solid];
m8_17 -> m8_22  [key=2, style=dotted];
m8_19 -> m8_42  [key=0, style=solid];
m8_19 -> m8_45  [key=2, style=dotted];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_23  [key=2, style=dotted];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_45  [key=2, style=dotted];
m8_20 -> m8_15  [key=0, style=bold, color=blue];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_45  [key=2, style=dotted];
m8_23 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_49  [key=2, style=dotted];
m8_23 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_45  [key=2, style=dotted];
m8_24 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.DisableConcurrentExecutionAttribute"];
m8_24 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.DisableConcurrentExecutionAttribute"];
m8_25 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_48  [key=2, style=dotted];
m8_25 -> m8_49  [key=2, style=dotted];
m8_25 -> m8_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_45  [key=2, style=dotted];
m8_27 -> m8_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_50  [key=2, style=dotted];
m8_27 -> m8_51  [key=2, style=dotted];
m8_27 -> m8_29  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_45  [key=2, style=dotted];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_45  [key=2, style=dotted];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_45  [key=2, style=dotted];
m8_32 -> m8_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_52  [key=2, style=dotted];
m8_32 -> m8_49  [key=2, style=dotted];
m8_32 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_45  [key=2, style=dotted];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_45  [key=2, style=dotted];
m8_36 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_53  [key=2, style=dotted];
m8_36 -> m8_49  [key=2, style=dotted];
m8_36 -> m8_38  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_37 -> m8_38  [key=0, style=solid];
m8_37 -> m8_45  [key=2, style=dotted];
m8_38 -> m8_38  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_49  [key=2, style=dotted];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_45  [key=2, style=dotted];
m8_40 -> m8_21  [key=0, style=solid];
m8_40 -> m8_45  [key=2, style=dotted];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_45  [key=2, style=dotted];
m8_42 -> m8_8  [key=0, style=solid];
m8_42 -> m8_45  [key=2, style=dotted];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_45  [key=2, style=dotted];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_20  [key=0, style=solid];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_21 -> m8_41  [key=0, style=solid];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_31  [key=0, style=solid];
m8_29 -> m8_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_29 -> m8_29  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_34 -> m8_40  [key=0, style=solid];
m8_34 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label=job];
m8_44 -> m8_0  [key=0, style=bold, color=blue];
m8_54 -> m8_2  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m8_54 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_4  [key=2, style=dotted];
m9_3 -> m9_0  [key=0, style=bold, color=blue];
m9_5 -> m9_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.DashboardOptions"];
m9_5 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.DashboardOptions"];
m10_89 -> m10_86  [key=0, style=bold, color=blue];
m10_86 -> m10_87  [key=0, style=solid];
m10_87 -> m10_88  [key=0, style=solid];
m10_87 -> m10_10  [key=2, style=dotted];
m10_87 -> m10_53  [key=2, style=dotted];
m10_88 -> m10_89  [key=0, style=solid];
m10_55 -> m10_56  [key=0, style=solid];
m10_56 -> m10_57  [key=0, style=solid];
m10_56 -> m10_22  [key=2, style=dotted];
m10_56 -> m10_58  [key=1, style=dashed, color=darkseagreen4, label=connection];
m10_56 -> m10_61  [key=1, style=dashed, color=darkseagreen4, label=connection];
m10_57 -> m10_58  [key=0, style=solid];
m10_58 -> m10_59  [key=0, style=solid];
m10_58 -> m10_23  [key=2, style=dotted];
m10_58 -> m10_52  [key=2, style=dotted];
m10_61 -> m10_62  [key=0, style=solid];
m10_61 -> m10_10  [key=2, style=dotted];
m10_61 -> m10_53  [key=2, style=dotted];
m10_61 -> m10_54  [key=2, style=dotted];
m10_59 -> m10_60  [key=0, style=solid];
m10_59 -> m10_25  [key=2, style=dotted];
m10_60 -> m10_61  [key=0, style=solid];
m10_60 -> m10_26  [key=2, style=dotted];
m10_62 -> m10_55  [key=0, style=bold, color=blue];
m10_7 -> m10_8  [key=0, style=solid];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_10  [key=2, style=dotted];
m10_8 -> m10_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_9 -> m10_7  [key=0, style=bold, color=blue];
m10_84 -> m10_79  [key=0, style=bold, color=blue];
m10_79 -> m10_80  [key=0, style=solid];
m10_79 -> m10_81  [key=1, style=dashed, color=darkseagreen4, label=IDbConnection];
m10_80 -> m10_81  [key=0, style=solid];
m10_81 -> m10_82  [key=0, style=solid];
m10_81 -> m10_85  [key=2, style=dotted];
m10_81 -> m10_53  [key=2, style=dotted];
m10_82 -> m10_83  [key=0, style=solid];
m10_83 -> m10_84  [key=0, style=solid];
m10_34 -> m10_35  [key=0, style=solid];
m10_34 -> m10_27  [key=2, style=dotted];
m10_34 -> m10_36  [key=2, style=dotted];
m10_29 -> m10_30  [key=0, style=solid];
m10_30 -> m10_31  [key=0, style=solid];
m10_30 -> m10_22  [key=2, style=dotted];
m10_30 -> m10_34  [key=1, style=dashed, color=darkseagreen4, label=connection];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_24  [key=2, style=dotted];
m10_31 -> m10_34  [key=1, style=dashed, color=darkseagreen4, label=entryId];
m10_32 -> m10_33  [key=0, style=solid];
m10_32 -> m10_25  [key=2, style=dotted];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_26  [key=2, style=dotted];
m10_35 -> m10_29  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_4  [key=2, style=dotted];
m10_1 -> m10_5  [key=2, style=dotted];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_6  [key=2, style=dotted];
m10_3 -> m10_0  [key=0, style=bold, color=blue];
m10_25 -> m10_90  [key=0, style=solid];
m10_90 -> m10_91  [key=0, style=solid];
m10_90 -> m10_14  [key=2, style=dotted];
m10_91 -> m10_25  [key=0, style=bold, color=blue];
m10_20 -> m10_21  [key=0, style=solid];
m10_20 -> m10_27  [key=2, style=dotted];
m10_20 -> m10_28  [key=2, style=dotted];
m10_15 -> m10_16  [key=0, style=solid];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_22  [key=2, style=dotted];
m10_16 -> m10_20  [key=1, style=dashed, color=darkseagreen4, label=connection];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_23  [key=2, style=dotted];
m10_17 -> m10_24  [key=2, style=dotted];
m10_17 -> m10_20  [key=1, style=dashed, color=darkseagreen4, label=entryId];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_25  [key=2, style=dotted];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_26  [key=2, style=dotted];
m10_21 -> m10_15  [key=0, style=bold, color=blue];
m10_11 -> m10_12  [key=0, style=solid];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_14  [key=2, style=dotted];
m10_13 -> m10_11  [key=0, style=bold, color=blue];
m10_42 -> m10_43  [key=0, style=solid];
m10_42 -> m10_27  [key=2, style=dotted];
m10_42 -> m10_36  [key=2, style=dotted];
m10_37 -> m10_38  [key=0, style=solid];
m10_38 -> m10_39  [key=0, style=solid];
m10_38 -> m10_22  [key=2, style=dotted];
m10_38 -> m10_42  [key=1, style=dashed, color=darkseagreen4, label=connection];
m10_39 -> m10_40  [key=0, style=solid];
m10_39 -> m10_23  [key=2, style=dotted];
m10_39 -> m10_24  [key=2, style=dotted];
m10_39 -> m10_42  [key=1, style=dashed, color=darkseagreen4, label=entryId];
m10_40 -> m10_41  [key=0, style=solid];
m10_40 -> m10_25  [key=2, style=dotted];
m10_41 -> m10_42  [key=0, style=solid];
m10_41 -> m10_26  [key=2, style=dotted];
m10_43 -> m10_37  [key=0, style=bold, color=blue];
m10_44 -> m10_45  [key=0, style=solid];
m10_45 -> m10_46  [key=0, style=solid];
m10_45 -> m10_22  [key=2, style=dotted];
m10_45 -> m10_47  [key=1, style=dashed, color=darkseagreen4, label=connection];
m10_45 -> m10_50  [key=1, style=dashed, color=darkseagreen4, label=connection];
m10_46 -> m10_47  [key=0, style=solid];
m10_47 -> m10_48  [key=0, style=solid];
m10_47 -> m10_23  [key=2, style=dotted];
m10_47 -> m10_52  [key=2, style=dotted];
m10_50 -> m10_51  [key=0, style=solid];
m10_50 -> m10_10  [key=2, style=dotted];
m10_50 -> m10_53  [key=2, style=dotted];
m10_50 -> m10_54  [key=2, style=dotted];
m10_48 -> m10_49  [key=0, style=solid];
m10_48 -> m10_25  [key=2, style=dotted];
m10_49 -> m10_50  [key=0, style=solid];
m10_49 -> m10_26  [key=2, style=dotted];
m10_51 -> m10_44  [key=0, style=bold, color=blue];
m10_71 -> m10_72  [key=0, style=solid];
m10_72 -> m10_73  [key=0, style=solid];
m10_72 -> m10_22  [key=2, style=dotted];
m10_72 -> m10_74  [key=1, style=dashed, color=darkseagreen4, label=connection];
m10_72 -> m10_77  [key=1, style=dashed, color=darkseagreen4, label=connection];
m10_73 -> m10_74  [key=0, style=solid];
m10_74 -> m10_75  [key=0, style=solid];
m10_74 -> m10_23  [key=2, style=dotted];
m10_74 -> m10_52  [key=2, style=dotted];
m10_77 -> m10_78  [key=0, style=solid];
m10_77 -> m10_10  [key=2, style=dotted];
m10_77 -> m10_53  [key=2, style=dotted];
m10_77 -> m10_54  [key=2, style=dotted];
m10_75 -> m10_76  [key=0, style=solid];
m10_75 -> m10_25  [key=2, style=dotted];
m10_76 -> m10_77  [key=0, style=solid];
m10_76 -> m10_26  [key=2, style=dotted];
m10_78 -> m10_71  [key=0, style=bold, color=blue];
m10_63 -> m10_64  [key=0, style=solid];
m10_64 -> m10_65  [key=0, style=solid];
m10_64 -> m10_22  [key=2, style=dotted];
m10_64 -> m10_66  [key=1, style=dashed, color=darkseagreen4, label=connection];
m10_64 -> m10_69  [key=1, style=dashed, color=darkseagreen4, label=connection];
m10_65 -> m10_66  [key=0, style=solid];
m10_66 -> m10_67  [key=0, style=solid];
m10_66 -> m10_23  [key=2, style=dotted];
m10_66 -> m10_52  [key=2, style=dotted];
m10_69 -> m10_70  [key=0, style=solid];
m10_69 -> m10_10  [key=2, style=dotted];
m10_69 -> m10_53  [key=2, style=dotted];
m10_69 -> m10_54  [key=2, style=dotted];
m10_67 -> m10_68  [key=0, style=solid];
m10_67 -> m10_25  [key=2, style=dotted];
m10_68 -> m10_69  [key=0, style=solid];
m10_68 -> m10_26  [key=2, style=dotted];
m10_70 -> m10_63  [key=0, style=bold, color=blue];
m10_92 -> m10_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ExpirationManagerFacts"];
m10_92 -> m10_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ExpirationManagerFacts"];
m10_92 -> m10_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ExpirationManagerFacts"];
m10_92 -> m10_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ExpirationManagerFacts"];
m10_92 -> m10_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ExpirationManagerFacts"];
m10_92 -> m10_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ExpirationManagerFacts"];
m10_92 -> m10_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ExpirationManagerFacts"];
m10_92 -> m10_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ExpirationManagerFacts"];
m10_92 -> m10_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ExpirationManagerFacts"];
m10_92 -> m10_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ExpirationManagerFacts"];
m10_92 -> m10_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ExpirationManagerFacts"];
m10_92 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ExpirationManagerFacts"];
m10_92 -> m10_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ExpirationManagerFacts"];
m10_92 -> m10_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ExpirationManagerFacts"];
m10_92 -> m10_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ExpirationManagerFacts"];
m10_92 -> m10_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ExpirationManagerFacts"];
m10_92 -> m10_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ExpirationManagerFacts"];
m10_92 -> m10_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ExpirationManagerFacts"];
m10_92 -> m10_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ExpirationManagerFacts"];
m10_92 -> m10_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ExpirationManagerFacts"];
m10_92 -> m10_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ExpirationManagerFacts"];
m10_92 -> m10_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ExpirationManagerFacts"];
m10_92 -> m10_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ExpirationManagerFacts"];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_0  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_0  [key=0, style=bold, color=blue];
m15_23 -> m15_30  [key=0, style=solid];
m15_23 -> m15_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m15_30 -> m15_31  [key=0, style=solid];
m15_30 -> m15_32  [key=2, style=dotted];
m15_30 -> m15_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_31 -> m15_23  [key=0, style=bold, color=blue];
m15_26 -> m15_27  [key=0, style=solid];
m15_27 -> m15_28  [key=0, style=solid];
m15_27 -> m15_29  [key=2, style=dotted];
m15_28 -> m15_26  [key=0, style=bold, color=blue];
m15_33 -> m15_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m15_33 -> m15_34  [key=0, style=solid];
m15_33 -> m15_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m15_33 -> m15_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m15_38 -> m15_39  [key=0, style=solid];
m15_38 -> m15_47  [key=2, style=dotted];
m15_38 -> m15_48  [key=2, style=dotted];
m15_38 -> m15_26  [key=2, style=dotted];
m15_38 -> m15_49  [key=2, style=dotted];
m15_35 -> m15_38  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m15_35 -> m15_36  [key=0, style=solid];
m15_35 -> m15_46  [key=2, style=dotted];
m15_35 -> m15_41  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m15_36 -> m15_38  [key=0, style=solid];
m15_36 -> m15_37  [key=0, style=solid];
m15_39 -> m15_40  [key=0, style=solid];
m15_39 -> m15_43  [key=0, style=solid];
m15_34 -> m15_35  [key=0, style=solid];
m15_34 -> m15_45  [key=2, style=dotted];
m15_40 -> m15_41  [key=0, style=solid];
m15_40 -> m15_50  [key=2, style=dotted];
m15_40 -> m15_42  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m15_41 -> m15_42  [key=0, style=solid];
m15_41 -> m15_51  [key=2, style=dotted];
m15_37 -> m15_44  [key=0, style=solid];
m15_43 -> m15_44  [key=0, style=solid];
m15_42 -> m15_43  [key=0, style=solid];
m15_42 -> m15_52  [key=2, style=dotted];
m15_44 -> m15_33  [key=0, style=bold, color=blue];
m15_32 -> m15_53  [key=0, style=solid];
m15_32 -> m15_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m15_32 -> m15_56  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.Storage.IStorageConnection, T>"];
m15_59 -> m15_60  [key=0, style=solid];
m15_59 -> m15_65  [key=2, style=dotted];
m15_53 -> m15_59  [key=1, style=dashed, color=darkseagreen4, label=resource];
m15_53 -> m15_54  [key=0, style=solid];
m15_53 -> m15_55  [key=1, style=dashed, color=darkseagreen4, label=resource];
m15_53 -> m15_58  [key=1, style=dashed, color=darkseagreen4, label=resource];
m15_58 -> m15_59  [key=0, style=solid];
m15_60 -> m15_61  [key=0, style=solid];
m15_54 -> m15_55  [key=0, style=solid];
m15_54 -> m15_62  [key=2, style=dotted];
m15_54 -> m15_56  [key=1, style=dashed, color=darkseagreen4, label=connection];
m15_56 -> m15_61  [key=0, style=solid];
m15_56 -> m15_64  [key=2, style=dotted];
m15_55 -> m15_56  [key=0, style=solid];
m15_55 -> m15_63  [key=2, style=dotted];
m15_57 -> m15_58  [key=0, style=solid];
m15_61 -> m15_32  [key=0, style=bold, color=blue];
m15_12 -> m15_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m15_12 -> m15_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m15_12 -> m15_13  [key=0, style=solid];
m15_12 -> m15_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m15_12 -> m15_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m15_17 -> m15_17  [key=1, style=dashed, color=green, label=jobsEnqueued];
m15_17 -> m15_18  [key=0, style=solid, color=green];
m15_17 -> m15_19  [key=1, style=dashed, color=green, label=jobsEnqueued];
m15_17 -> m15_20  [key=1, style=dashed, color=green, label=jobsEnqueued];
m15_16 -> m15_17  [key=0, style=solid, color=green];
m15_16 -> m15_19  [key=0, style=solid];
m15_16 -> m15_23  [key=2, style=dotted];
m15_15 -> m15_17  [key=1, style=dashed, color=green, label=jobsEnqueued];
m15_15 -> m15_16  [key=0, style=solid];
m15_15 -> m15_19  [key=1, style=dashed, color=darkseagreen4, label=jobsEnqueued];
m15_15 -> m15_20  [key=1, style=dashed, color=darkseagreen4, label=jobsEnqueued];
m15_18 -> m15_16  [key=0, style=solid];
m15_18 -> m15_19  [key=0, style=solid];
m15_19 -> m15_20  [key=0, style=solid];
m15_19 -> m15_21  [key=0, style=solid];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_24  [key=2, style=dotted];
m15_13 -> m15_15  [key=0, style=solid];
m15_13 -> m15_14  [key=0, style=solid];
m15_21 -> m15_22  [key=0, style=solid];
m15_21 -> m15_25  [key=2, style=dotted];
m15_14 -> m15_22  [key=0, style=solid];
m15_14 -> m15_10  [key=2, style=dotted];
m15_14 -> m15_11  [key=2, style=dotted];
m15_22 -> m15_12  [key=0, style=bold, color=blue];
m15_4 -> m15_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IBackgroundJobStateChanger"];
m15_4 -> m15_8  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IBackgroundJobStateChanger"];
m15_7 -> m15_8  [key=0, style=solid];
m15_8 -> m15_9  [key=0, style=solid];
m15_5 -> m15_7  [key=0, style=solid];
m15_5 -> m15_6  [key=0, style=solid];
m15_6 -> m15_9  [key=0, style=solid];
m15_6 -> m15_10  [key=2, style=dotted];
m15_6 -> m15_11  [key=2, style=dotted];
m15_9 -> m15_4  [key=0, style=bold, color=blue];
m15_66 -> m15_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DelayedJobScheduler"];
m15_66 -> m15_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DelayedJobScheduler"];
m15_66 -> m15_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DelayedJobScheduler"];
m15_66 -> m15_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DelayedJobScheduler"];
m15_66 -> m15_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DelayedJobScheduler"];
m15_66 -> m15_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DelayedJobScheduler"];
m15_66 -> m15_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DelayedJobScheduler"];
m15_66 -> m15_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.DelayedJobScheduler"];
m15_67 -> m15_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m16_18 -> m16_59  [key=0, style=solid];
m16_59 -> m16_60  [key=0, style=solid];
m16_59 -> m16_61  [key=2, style=dotted];
m16_59 -> m16_62  [key=2, style=dotted];
m16_60 -> m16_18  [key=0, style=bold, color=blue];
m16_45 -> m16_46  [key=0, style=solid];
m16_46 -> m16_47  [key=0, style=solid];
m16_46 -> m16_48  [key=2, style=dotted];
m16_47 -> m16_45  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_0 -> m16_3  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m16_0 -> m16_4  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m16_0 -> m16_5  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m16_0 -> m16_8  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_3  [key=0, style=solid];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_5  [key=0, style=solid];
m16_3 -> m16_14  [key=2, style=dotted];
m16_4 -> m16_12  [key=0, style=solid];
m16_4 -> m16_15  [key=2, style=dotted];
m16_4 -> m16_16  [key=2, style=dotted];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_17  [key=2, style=dotted];
m16_5 -> m16_7  [key=1, style=dashed, color=darkseagreen4, label=queue];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_20  [key=2, style=dotted];
m16_2 -> m16_12  [key=0, style=solid];
m16_2 -> m16_13  [key=2, style=dotted];
m16_6 -> m16_7  [key=0, style=solid];
m16_6 -> m16_18  [key=2, style=dotted];
m16_6 -> m16_9  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m16_6 -> m16_11  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m16_7 -> m16_8  [key=0, style=solid];
m16_7 -> m16_19  [key=2, style=dotted];
m16_7 -> m16_9  [key=1, style=dashed, color=darkseagreen4, label=state];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_21  [key=2, style=dotted];
m16_9 -> m16_22  [key=2, style=dotted];
m16_11 -> m16_12  [key=0, style=solid];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_23  [key=2, style=dotted];
m16_12 -> m16_0  [key=0, style=bold, color=blue];
m16_24 -> m16_25  [key=0, style=solid];
m16_24 -> m16_27  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m16_24 -> m16_28  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m16_24 -> m16_29  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m16_24 -> m16_32  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m16_24 -> m16_35  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m16_25 -> m16_26  [key=0, style=solid];
m16_25 -> m16_27  [key=0, style=solid];
m16_27 -> m16_28  [key=0, style=solid];
m16_27 -> m16_29  [key=0, style=solid];
m16_27 -> m16_14  [key=2, style=dotted];
m16_28 -> m16_39  [key=0, style=solid];
m16_28 -> m16_15  [key=2, style=dotted];
m16_28 -> m16_16  [key=2, style=dotted];
m16_29 -> m16_30  [key=0, style=solid];
m16_29 -> m16_31  [key=0, style=solid];
m16_29 -> m16_40  [key=2, style=dotted];
m16_29 -> m16_29  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m16_32 -> m16_39  [key=0, style=solid];
m16_32 -> m16_0  [key=2, style=dotted];
m16_35 -> m16_36  [key=0, style=solid];
m16_35 -> m16_20  [key=2, style=dotted];
m16_26 -> m16_39  [key=0, style=solid];
m16_26 -> m16_13  [key=2, style=dotted];
m16_30 -> m16_39  [key=0, style=solid];
m16_30 -> m16_41  [key=2, style=dotted];
m16_31 -> m16_32  [key=0, style=solid];
m16_31 -> m16_33  [key=0, style=solid];
m16_31 -> m16_42  [key=2, style=dotted];
m16_31 -> m16_31  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m16_31 -> m16_34  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m16_33 -> m16_34  [key=0, style=solid];
m16_33 -> m16_18  [key=2, style=dotted];
m16_33 -> m16_36  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m16_33 -> m16_38  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m16_34 -> m16_35  [key=0, style=solid];
m16_34 -> m16_43  [key=2, style=dotted];
m16_34 -> m16_44  [key=2, style=dotted];
m16_34 -> m16_36  [key=1, style=dashed, color=darkseagreen4, label=state];
m16_36 -> m16_37  [key=0, style=solid];
m16_36 -> m16_21  [key=2, style=dotted];
m16_36 -> m16_22  [key=2, style=dotted];
m16_38 -> m16_39  [key=0, style=solid];
m16_37 -> m16_38  [key=0, style=solid];
m16_37 -> m16_23  [key=2, style=dotted];
m16_39 -> m16_24  [key=0, style=bold, color=blue];
m16_20 -> m16_49  [key=0, style=solid];
m16_20 -> m16_50  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m16_20 -> m16_51  [key=1, style=dashed, color=darkseagreen4, label=object];
m16_49 -> m16_50  [key=0, style=solid];
m16_49 -> m16_55  [key=2, style=dotted];
m16_49 -> m16_51  [key=1, style=dashed, color=darkseagreen4, label=job];
m16_49 -> m16_52  [key=1, style=dashed, color=darkseagreen4, label=job];
m16_49 -> m16_53  [key=1, style=dashed, color=darkseagreen4, label=job];
m16_50 -> m16_51  [key=0, style=solid];
m16_51 -> m16_52  [key=0, style=solid];
m16_51 -> m16_56  [key=2, style=dotted];
m16_51 -> m16_57  [key=2, style=dotted];
m16_52 -> m16_53  [key=0, style=solid];
m16_52 -> m16_58  [key=2, style=dotted];
m16_53 -> m16_54  [key=0, style=solid];
m16_54 -> m16_20  [key=0, style=bold, color=blue];
m16_63 -> m16_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m16_63 -> m16_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m16_63 -> m16_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m16_63 -> m16_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m16_63 -> m16_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m16_63 -> m16_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m17_9 -> m17_10  [key=0, style=solid];
m17_10 -> m17_11  [key=0, style=solid];
m17_10 -> m17_12  [key=2, style=dotted];
m17_10 -> m17_13  [key=2, style=dotted];
m17_11 -> m17_9  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid];
m17_0 -> m17_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_0 -> m17_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_3  [key=0, style=solid];
m17_1 -> m17_7  [key=2, style=dotted];
m17_3 -> m17_4  [key=0, style=solid];
m17_5 -> m17_6  [key=0, style=solid];
m17_2 -> m17_6  [key=0, style=solid];
m17_2 -> m17_8  [key=2, style=dotted];
m17_4 -> m17_5  [key=0, style=solid];
m17_6 -> m17_0  [key=0, style=bold, color=blue];
m17_14 -> m17_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ProcessingState"];
m17_14 -> m17_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ProcessingState"];
m17_14 -> m17_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ProcessingState"];
m17_14 -> m17_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ProcessingState"];
m18_60 -> m18_61  [key=0, style=solid];
m18_61 -> m18_62  [key=0, style=solid];
m18_61 -> m18_63  [key=2, style=dotted];
m18_61 -> m18_64  [key=2, style=dotted];
m18_62 -> m18_60  [key=0, style=bold, color=blue];
m18_16 -> m18_8  [key=0, style=bold, color=blue];
m18_59 -> m18_84  [key=0, style=solid];
m18_59 -> m18_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IFetchedJob"];
m18_84 -> m18_85  [key=0, style=solid];
m18_84 -> m18_87  [key=0, style=solid];
m18_84 -> m18_88  [key=2, style=dotted];
m18_86 -> m18_87  [key=0, style=solid];
m18_86 -> m18_89  [key=2, style=dotted];
m18_85 -> m18_86  [key=0, style=solid];
m18_87 -> m18_59  [key=0, style=bold, color=blue];
m18_4 -> m18_5  [key=0, style=solid];
m18_4 -> m18_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m18_4 -> m18_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IBackgroundJobPerformer"];
m18_4 -> m18_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IBackgroundJobPerformer"];
m18_4 -> m18_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IBackgroundJobStateChanger"];
m18_4 -> m18_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IBackgroundJobStateChanger"];
m18_4 -> m18_11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m18_4 -> m18_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IBackgroundJobPerformer"];
m18_4 -> m18_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IBackgroundJobStateChanger"];
m18_5 -> m18_8  [key=2, style=dotted];
m18_5 -> m18_6  [key=0, style=solid];
m18_5 -> m18_7  [key=2, style=dotted];
m18_6 -> m18_4  [key=0, style=bold, color=blue];
m18_6 -> m18_15  [key=0, style=solid];
m18_6 -> m18_16  [key=2, style=dotted];
m18_6 -> m18_17  [key=2, style=dotted];
m18_28 -> m18_33  [key=0, style=solid];
m18_28 -> m18_34  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_28 -> m18_29  [key=0, style=solid];
m18_28 -> m18_50  [key=2, style=dotted];
m18_28 -> m18_30  [key=1, style=dashed, color=darkseagreen4, label=linkedCts];
m18_28 -> m18_11  [key=3, color=darkorchid, style=bold, label="Parameter variable string recurringJobId"];
m18_28 -> m18_12  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Linq.Expressions.Expression<System.Action> methodCall"];
m18_33 -> m18_17  [key=2, style=dotted];
m18_33 -> m18_34  [key=0, style=solid];
m18_33 -> m18_54  [key=2, style=dotted];
m18_34 -> m18_19  [key=2, style=dotted];
m18_34 -> m18_35  [key=0, style=solid];
m18_34 -> m18_45  [key=0, style=solid];
m18_35 -> m18_28  [key=0, style=bold, color=blue];
m18_35 -> m18_36  [key=0, style=solid];
m18_35 -> m18_55  [key=2, style=dotted];
m18_35 -> m18_37  [key=1, style=dashed, color=darkseagreen4, label=state];
m18_9 -> m18_10  [key=0, style=solid];
m18_9 -> m18_11  [key=0, style=solid];
m18_10 -> m18_12  [key=2, style=dotted];
m18_10 -> m18_11  [key=0, style=solid];
m18_10 -> m18_7  [key=2, style=dotted];
m18_10 -> m18_15  [key=0, style=solid];
m18_10 -> m18_16  [key=2, style=dotted];
m18_10 -> m18_17  [key=2, style=dotted];
m18_11 -> m18_9  [key=0, style=bold, color=blue];
m18_11 -> m18_12  [key=0, style=solid];
m18_11 -> m18_18  [key=2, style=dotted];
m18_55 -> m18_90  [key=0, style=solid];
m18_55 -> m18_94  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_55 -> m18_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m18_55 -> m18_96  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m18_55 -> m18_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m18_90 -> m18_91  [key=0, style=solid];
m18_90 -> m18_111  [key=2, style=dotted];
m18_90 -> m18_93  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m18_90 -> m18_94  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m18_90 -> m18_97  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m18_94 -> m18_95  [key=0, style=solid];
m18_94 -> m18_113  [key=2, style=dotted];
m18_94 -> m18_96  [key=1, style=dashed, color=darkseagreen4, label=backgroundJob];
m18_95 -> m18_96  [key=0, style=solid];
m18_95 -> m18_114  [key=2, style=dotted];
m18_96 -> m18_97  [key=0, style=solid];
m18_96 -> m18_115  [key=2, style=dotted];
m18_96 -> m18_99  [key=1, style=dashed, color=darkseagreen4, label=performContext];
m18_107 -> m18_108  [key=0, style=solid];
m18_107 -> m18_109  [key=0, style=solid];
m18_91 -> m18_92  [key=0, style=solid];
m18_91 -> m18_93  [key=0, style=solid];
m18_93 -> m18_94  [key=0, style=solid];
m18_93 -> m18_112  [key=2, style=dotted];
m18_97 -> m18_98  [key=0, style=solid];
m18_97 -> m18_101  [key=1, style=dashed, color=darkseagreen4, label=latency];
m18_92 -> m18_110  [key=0, style=solid];
m18_99 -> m18_100  [key=0, style=solid];
m18_99 -> m18_117  [key=2, style=dotted];
m18_99 -> m18_101  [key=1, style=dashed, color=darkseagreen4, label=result];
m18_98 -> m18_99  [key=0, style=solid];
m18_98 -> m18_116  [key=2, style=dotted];
m18_98 -> m18_100  [key=1, style=dashed, color=darkseagreen4, label=duration];
m18_98 -> m18_101  [key=1, style=dashed, color=darkseagreen4, label=duration];
m18_101 -> m18_110  [key=0, style=solid];
m18_101 -> m18_119  [key=2, style=dotted];
m18_100 -> m18_101  [key=0, style=solid];
m18_100 -> m18_118  [key=2, style=dotted];
m18_102 -> m18_103  [key=0, style=solid];
m18_103 -> m18_110  [key=0, style=solid];
m18_104 -> m18_105  [key=0, style=solid];
m18_105 -> m18_110  [key=0, style=solid];
m18_105 -> m18_83  [key=2, style=dotted];
m18_106 -> m18_107  [key=0, style=solid];
m18_108 -> m18_110  [key=0, style=solid];
m18_109 -> m18_110  [key=0, style=solid];
m18_109 -> m18_83  [key=2, style=dotted];
m18_110 -> m18_55  [key=0, style=bold, color=blue];
m18_20 -> m18_21  [key=0, style=solid];
m18_20 -> m18_24  [key=2, style=dotted];
m18_20 -> m18_22  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_48 -> m18_18  [key=0, style=bold, color=blue];
m18_32 -> m18_36  [key=0, style=solid];
m18_32 -> m18_37  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_32 -> m18_33  [key=0, style=solid];
m18_32 -> m18_48  [key=2, style=dotted];
m18_36 -> m18_24  [key=2, style=dotted];
m18_36 -> m18_37  [key=0, style=solid];
m18_36 -> m18_38  [key=0, style=solid];
m18_37 -> m18_19  [key=2, style=dotted];
m18_37 -> m18_38  [key=0, style=solid];
m18_37 -> m18_52  [key=2, style=dotted];
m18_38 -> m18_32  [key=0, style=bold, color=blue];
m18_38 -> m18_39  [key=0, style=solid];
m18_38 -> m18_45  [key=0, style=solid];
m18_38 -> m18_54  [key=2, style=dotted];
m18_12 -> m18_20  [key=0, style=solid];
m18_12 -> m18_22  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_12 -> m18_13  [key=0, style=solid];
m18_21 -> m18_18  [key=2, style=dotted];
m18_21 -> m18_22  [key=0, style=solid];
m18_21 -> m18_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m18_21 -> m18_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m18_21 -> m18_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m18_21 -> m18_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m18_21 -> m18_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m18_21 -> m18_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m18_21 -> m18_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m18_21 -> m18_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m18_21 -> m18_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m18_21 -> m18_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m18_21 -> m18_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m18_22 -> m18_23  [key=0, style=solid];
m18_22 -> m18_19  [key=2, style=dotted];
m18_22 -> m18_24  [key=0, style=solid];
m18_23 -> m18_12  [key=0, style=bold, color=blue];
m18_23 -> m18_45  [key=0, style=solid];
m18_23 -> m18_16  [key=2, style=dotted];
m18_23 -> m18_17  [key=2, style=dotted];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_0  [key=0, style=bold, color=blue];
m18_2 -> m18_3  [key=0, style=solid];
m18_3 -> m18_2  [key=0, style=bold, color=blue];
m18_24 -> m18_25  [key=0, style=solid];
m18_24 -> m18_46  [key=2, style=dotted];
m18_24 -> m18_30  [key=1, style=dashed, color=darkseagreen4, label=connection];
m18_24 -> m18_35  [key=1, style=dashed, color=darkseagreen4, label=connection];
m18_24 -> m18_37  [key=1, style=dashed, color=darkseagreen4, label=connection];
m18_8 -> m18_13  [key=0, style=solid];
m18_8 -> m18_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_8 -> m18_16  [key=2, style=dotted];
m18_8 -> m18_17  [key=2, style=dotted];
m18_14 -> m18_18  [key=2, style=dotted];
m18_14 -> m18_15  [key=0, style=solid];
m18_14 -> m18_19  [key=2, style=dotted];
m18_14 -> m18_20  [key=2, style=dotted];
m18_13 -> m18_14  [key=0, style=solid];
m18_13 -> m18_17  [key=2, style=dotted];
m18_13 -> m18_15  [key=1, style=dashed, color=darkseagreen4, label=job];
m18_15 -> m18_16  [key=0, style=solid];
m18_15 -> m18_19  [key=2, style=dotted];
m18_15 -> m18_4  [key=0, style=bold, color=blue];
m18_25 -> m18_26  [key=0, style=solid];
m18_25 -> m18_47  [key=2, style=dotted];
m18_25 -> m18_30  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m18_25 -> m18_33  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m18_25 -> m18_35  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m18_25 -> m18_37  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m18_25 -> m18_38  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m18_25 -> m18_41  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m18_25 -> m18_43  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m18_26 -> m18_7  [key=2, style=dotted];
m18_26 -> m18_28  [key=2, style=dotted];
m18_26 -> m18_27  [key=0, style=solid];
m18_26 -> m18_48  [key=2, style=dotted];
m18_27 -> m18_25  [key=0, style=bold, color=blue];
m18_27 -> m18_28  [key=0, style=solid];
m18_27 -> m18_49  [key=2, style=dotted];
m18_7 -> m18_8  [key=0, style=solid];
m18_7 -> m18_9  [key=0, style=solid];
m18_47 -> m18_48  [key=0, style=solid, color=green];
m18_47 -> m18_49  [key=2, style=dotted, color=green];
m18_29 -> m18_30  [key=0, style=solid];
m18_29 -> m18_51  [key=2, style=dotted];
m18_29 -> m18_14  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeZoneInfo timeZone"];
m18_30 -> m18_7  [key=2, style=dotted];
m18_30 -> m18_32  [key=2, style=dotted];
m18_30 -> m18_31  [key=0, style=solid];
m18_30 -> m18_52  [key=2, style=dotted];
m18_31 -> m18_29  [key=0, style=bold, color=blue];
m18_31 -> m18_32  [key=0, style=solid];
m18_31 -> m18_35  [key=0, style=solid];
m18_31 -> m18_53  [key=2, style=dotted];
m18_31 -> m18_26  [key=3, color=darkorchid, style=bold, label="Parameter variable string queue"];
m18_18 -> m18_47  [key=0, style=solid, color=green];
m18_18 -> m18_13  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.Common.Job job"];
m18_18 -> m18_20  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.Common.Job job"];
m18_40 -> m18_41  [key=0, style=solid];
m18_40 -> m18_42  [key=0, style=solid];
m18_41 -> m18_43  [key=0, style=solid];
m18_41 -> m18_56  [key=2, style=dotted];
m18_41 -> m18_57  [key=2, style=dotted];
m18_43 -> m18_44  [key=0, style=solid];
m18_43 -> m18_59  [key=2, style=dotted];
m18_39 -> m18_40  [key=0, style=solid];
m18_42 -> m18_43  [key=0, style=solid];
m18_42 -> m18_58  [key=2, style=dotted];
m18_44 -> m18_45  [key=0, style=solid];
m18_45 -> m18_21  [key=0, style=bold, color=blue];
m18_52 -> m18_65  [key=0, style=solid];
m18_52 -> m18_68  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m18_52 -> m18_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m18_52 -> m18_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m18_52 -> m18_75  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m18_65 -> m18_66  [key=0, style=solid];
m18_65 -> m18_75  [key=1, style=dashed, color=darkseagreen4, label=exception];
m18_68 -> m18_76  [key=0, style=solid];
m18_68 -> m18_77  [key=2, style=dotted];
m18_68 -> m18_78  [key=2, style=dotted];
m18_72 -> m18_73  [key=0, style=solid];
m18_72 -> m18_81  [key=2, style=dotted];
m18_72 -> m18_82  [key=2, style=dotted];
m18_73 -> m18_74  [key=0, style=solid];
m18_73 -> m18_48  [key=2, style=dotted];
m18_75 -> m18_76  [key=0, style=solid];
m18_75 -> m18_77  [key=2, style=dotted];
m18_75 -> m18_83  [key=2, style=dotted];
m18_75 -> m18_78  [key=2, style=dotted];
m18_66 -> m18_67  [key=0, style=solid];
m18_66 -> m18_70  [key=1, style=dashed, color=darkseagreen4, label=retryAttempt];
m18_66 -> m18_72  [key=1, style=dashed, color=darkseagreen4, label=retryAttempt];
m18_66 -> m18_74  [key=1, style=dashed, color=darkseagreen4, label=retryAttempt];
m18_67 -> m18_68  [key=0, style=solid];
m18_67 -> m18_75  [key=0, style=solid];
m18_70 -> m18_71  [key=0, style=solid];
m18_70 -> m18_79  [key=2, style=dotted];
m18_70 -> m18_80  [key=2, style=dotted];
m18_74 -> m18_67  [key=0, style=solid];
m18_74 -> m18_74  [key=1, style=dashed, color=darkseagreen4, label=retryAttempt];
m18_69 -> m18_70  [key=0, style=solid];
m18_71 -> m18_72  [key=0, style=solid];
m18_71 -> m18_75  [key=1, style=dashed, color=darkseagreen4, label=exception];
m18_76 -> m18_52  [key=0, style=bold, color=blue];
m18_120 -> m18_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m18_120 -> m18_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m18_120 -> m18_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m18_120 -> m18_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m18_120 -> m18_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m18_120 -> m18_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m18_120 -> m18_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m18_120 -> m18_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m18_120 -> m18_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m18_120 -> m18_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m18_120 -> m18_68  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m18_120 -> m18_75  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m18_120 -> m18_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m18_120 -> m18_99  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m19_19 -> m19_20  [key=0, style=solid];
m19_20 -> m19_21  [key=0, style=solid];
m19_21 -> m19_22  [key=0, style=solid];
m19_21 -> m19_24  [key=2, style=dotted];
m19_21 -> m19_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_22 -> m19_23  [key=0, style=solid];
m19_23 -> m19_19  [key=0, style=bold, color=blue];
m19_29 -> m19_30  [key=0, style=solid];
m19_30 -> m19_31  [key=0, style=solid];
m19_31 -> m19_32  [key=0, style=solid];
m19_31 -> m19_24  [key=2, style=dotted];
m19_31 -> m19_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_32 -> m19_33  [key=0, style=solid];
m19_33 -> m19_29  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid];
m19_0 -> m19_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m19_0 -> m19_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_0 -> m19_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_0 -> m19_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_0 -> m19_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_0 -> m19_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m19_0 -> m19_8  [key=1, style=dashed, color=darkseagreen4, label=long];
m19_0 -> m19_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_0 -> m19_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_0 -> m19_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m19_0 -> m19_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_3  [key=0, style=solid];
m19_2 -> m19_14  [key=0, style=solid];
m19_2 -> m19_15  [key=2, style=dotted];
m19_2 -> m19_16  [key=2, style=dotted];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_5  [key=0, style=solid];
m19_4 -> m19_14  [key=0, style=solid];
m19_4 -> m19_15  [key=2, style=dotted];
m19_4 -> m19_16  [key=2, style=dotted];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_7  [key=0, style=solid];
m19_6 -> m19_14  [key=0, style=solid];
m19_6 -> m19_15  [key=2, style=dotted];
m19_6 -> m19_16  [key=2, style=dotted];
m19_7 -> m19_8  [key=0, style=solid];
m19_8 -> m19_9  [key=0, style=solid];
m19_9 -> m19_10  [key=0, style=solid];
m19_10 -> m19_11  [key=0, style=solid];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_14  [key=0, style=solid];
m19_12 -> m19_13  [key=0, style=solid];
m19_12 -> m19_17  [key=2, style=dotted];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_18  [key=2, style=dotted];
m19_14 -> m19_0  [key=0, style=bold, color=blue];
m19_37 -> m19_38  [key=0, style=solid];
m19_38 -> m19_39  [key=0, style=solid];
m19_38 -> m19_40  [key=0, style=solid];
m19_39 -> m19_45  [key=0, style=solid];
m19_40 -> m19_41  [key=0, style=solid];
m19_41 -> m19_42  [key=0, style=solid];
m19_41 -> m19_46  [key=2, style=dotted];
m19_42 -> m19_43  [key=0, style=solid];
m19_43 -> m19_44  [key=0, style=solid];
m19_43 -> m19_45  [key=0, style=solid];
m19_44 -> m19_45  [key=0, style=solid];
m19_44 -> m19_29  [key=2, style=dotted];
m19_45 -> m19_37  [key=0, style=bold, color=blue];
m19_58 -> m19_59  [key=0, style=solid];
m19_25 -> m19_26  [key=0, style=solid];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_28  [key=2, style=dotted];
m19_27 -> m19_25  [key=0, style=bold, color=blue];
m19_34 -> m19_35  [key=0, style=solid];
m19_35 -> m19_36  [key=0, style=solid];
m19_35 -> m19_28  [key=2, style=dotted];
m19_36 -> m19_34  [key=0, style=bold, color=blue];
m19_59 -> m19_60  [key=0, style=solid];
m19_59 -> m19_28  [key=2, style=dotted];
m19_60 -> m19_58  [key=0, style=bold, color=blue];
m19_47 -> m19_48  [key=0, style=solid];
m19_48 -> m19_49  [key=0, style=solid];
m19_49 -> m19_50  [key=0, style=solid];
m19_49 -> m19_51  [key=0, style=solid];
m19_50 -> m19_55  [key=0, style=solid];
m19_51 -> m19_52  [key=0, style=solid];
m19_51 -> m19_24  [key=2, style=dotted];
m19_51 -> m19_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_52 -> m19_53  [key=0, style=solid];
m19_52 -> m19_55  [key=0, style=solid];
m19_52 -> m19_56  [key=2, style=dotted];
m19_53 -> m19_54  [key=0, style=solid];
m19_54 -> m19_55  [key=0, style=solid];
m19_54 -> m19_57  [key=2, style=dotted];
m19_55 -> m19_47  [key=0, style=bold, color=blue];
m19_61 -> m19_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m19_61 -> m19_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerTimeoutJob"];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_2  [key=0, style=solid];
m20_2 -> m20_3  [key=0, style=solid];
m20_3 -> m20_0  [key=0, style=bold, color=blue];
m20_4 -> m20_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerWatchdogOptions"];
m20_4 -> m20_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerWatchdogOptions"];
m21_158 -> m21_159  [key=0, style=solid];
m21_159 -> m21_160  [key=0, style=solid];
m21_159 -> m21_163  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m21_160 -> m21_161  [key=0, style=solid];
m21_160 -> m21_50  [key=2, style=dotted];
m21_160 -> m21_162  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_161 -> m21_158  [key=0, style=bold, color=blue];
m21_309 -> m21_310  [key=0, style=solid];
m21_310 -> m21_311  [key=0, style=solid];
m21_310 -> m21_3  [key=2, style=dotted];
m21_310 -> m21_312  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_311 -> m21_309  [key=0, style=bold, color=blue];
m21_107 -> m21_108  [key=0, style=solid];
m21_108 -> m21_109  [key=0, style=solid];
m21_108 -> m21_113  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m21_109 -> m21_110  [key=0, style=solid];
m21_109 -> m21_50  [key=2, style=dotted];
m21_109 -> m21_111  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_110 -> m21_107  [key=0, style=bold, color=blue];
m21_368 -> m21_369  [key=0, style=solid];
m21_369 -> m21_370  [key=0, style=solid];
m21_369 -> m21_373  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m21_370 -> m21_371  [key=0, style=solid];
m21_370 -> m21_50  [key=2, style=dotted];
m21_370 -> m21_372  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_371 -> m21_368  [key=0, style=bold, color=blue];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_2  [key=0, style=solid];
m21_1 -> m21_3  [key=2, style=dotted];
m21_1 -> m21_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_2 -> m21_0  [key=0, style=bold, color=blue];
m21_10 -> m21_11  [key=0, style=solid];
m21_11 -> m21_12  [key=0, style=solid];
m21_11 -> m21_3  [key=2, style=dotted];
m21_11 -> m21_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_12 -> m21_10  [key=0, style=bold, color=blue];
m21_219 -> m21_220  [key=0, style=solid];
m21_220 -> m21_221  [key=0, style=solid];
m21_220 -> m21_3  [key=2, style=dotted];
m21_220 -> m21_222  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_221 -> m21_219  [key=0, style=bold, color=blue];
m21_297 -> m21_298  [key=0, style=solid];
m21_298 -> m21_299  [key=0, style=solid];
m21_298 -> m21_3  [key=2, style=dotted];
m21_298 -> m21_300  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_299 -> m21_297  [key=0, style=bold, color=blue];
m21_202 -> m21_203  [key=0, style=solid];
m21_203 -> m21_204  [key=0, style=solid];
m21_203 -> m21_3  [key=2, style=dotted];
m21_203 -> m21_205  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_204 -> m21_202  [key=0, style=bold, color=blue];
m21_416 -> m21_417  [key=0, style=solid];
m21_416 -> m21_418  [key=1, style=dashed, color=darkseagreen4, label="System.Action<HangFire.SqlServer.SqlServerConnection>"];
m21_417 -> m21_418  [key=0, style=solid];
m21_417 -> m21_414  [key=2, style=dotted];
m21_417 -> m21_413  [key=2, style=dotted];
m21_418 -> m21_419  [key=0, style=solid];
m21_418 -> m21_420  [key=2, style=dotted];
m21_419 -> m21_416  [key=0, style=bold, color=blue];
m21_181 -> m21_182  [key=0, style=solid];
m21_182 -> m21_183  [key=0, style=solid];
m21_182 -> m21_3  [key=2, style=dotted];
m21_182 -> m21_184  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_183 -> m21_181  [key=0, style=bold, color=blue];
m21_272 -> m21_273  [key=0, style=solid];
m21_273 -> m21_274  [key=0, style=solid];
m21_273 -> m21_3  [key=2, style=dotted];
m21_273 -> m21_275  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_274 -> m21_272  [key=0, style=bold, color=blue];
m21_408 -> m21_409  [key=0, style=solid];
m21_408 -> m21_411  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>"];
m21_409 -> m21_410  [key=0, style=solid];
m21_409 -> m21_413  [key=2, style=dotted];
m21_409 -> m21_411  [key=1, style=dashed, color=darkseagreen4, label=sqlConnection];
m21_411 -> m21_412  [key=0, style=solid];
m21_411 -> m21_415  [key=2, style=dotted];
m21_410 -> m21_411  [key=0, style=solid];
m21_410 -> m21_414  [key=2, style=dotted];
m21_412 -> m21_408  [key=0, style=bold, color=blue];
m21_126 -> m21_127  [key=0, style=solid];
m21_127 -> m21_128  [key=0, style=solid];
m21_127 -> m21_3  [key=2, style=dotted];
m21_127 -> m21_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_128 -> m21_126  [key=0, style=bold, color=blue];
m21_230 -> m21_231  [key=0, style=solid];
m21_231 -> m21_232  [key=0, style=solid];
m21_231 -> m21_3  [key=2, style=dotted];
m21_231 -> m21_233  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_232 -> m21_230  [key=0, style=bold, color=blue];
m21_32 -> m21_33  [key=0, style=solid];
m21_33 -> m21_34  [key=0, style=solid];
m21_33 -> m21_3  [key=2, style=dotted];
m21_33 -> m21_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_34 -> m21_32  [key=0, style=bold, color=blue];
m21_209 -> m21_210  [key=0, style=solid];
m21_210 -> m21_211  [key=0, style=solid];
m21_210 -> m21_214  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m21_211 -> m21_212  [key=0, style=solid];
m21_211 -> m21_50  [key=2, style=dotted];
m21_211 -> m21_213  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_212 -> m21_209  [key=0, style=bold, color=blue];
m21_261 -> m21_262  [key=0, style=solid];
m21_262 -> m21_263  [key=0, style=solid];
m21_262 -> m21_3  [key=2, style=dotted];
m21_262 -> m21_264  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_263 -> m21_261  [key=0, style=bold, color=blue];
m21_319 -> m21_320  [key=0, style=solid];
m21_320 -> m21_321  [key=0, style=solid];
m21_320 -> m21_50  [key=2, style=dotted];
m21_320 -> m21_322  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_321 -> m21_319  [key=0, style=bold, color=blue];
m21_47 -> m21_48  [key=0, style=solid];
m21_48 -> m21_49  [key=0, style=solid];
m21_48 -> m21_50  [key=2, style=dotted];
m21_48 -> m21_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_49 -> m21_47  [key=0, style=bold, color=blue];
m21_396 -> m21_397  [key=0, style=solid];
m21_397 -> m21_398  [key=0, style=solid];
m21_397 -> m21_401  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m21_398 -> m21_399  [key=0, style=solid];
m21_398 -> m21_50  [key=2, style=dotted];
m21_398 -> m21_400  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_399 -> m21_396  [key=0, style=bold, color=blue];
m21_358 -> m21_359  [key=0, style=solid];
m21_359 -> m21_360  [key=0, style=solid];
m21_359 -> m21_3  [key=2, style=dotted];
m21_359 -> m21_361  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_360 -> m21_358  [key=0, style=bold, color=blue];
m21_137 -> m21_138  [key=0, style=solid];
m21_138 -> m21_139  [key=0, style=solid];
m21_138 -> m21_3  [key=2, style=dotted];
m21_138 -> m21_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_139 -> m21_137  [key=0, style=bold, color=blue];
m21_385 -> m21_386  [key=0, style=solid];
m21_386 -> m21_387  [key=0, style=solid];
m21_386 -> m21_3  [key=2, style=dotted];
m21_386 -> m21_388  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_387 -> m21_385  [key=0, style=bold, color=blue];
m21_147 -> m21_148  [key=0, style=solid];
m21_148 -> m21_149  [key=0, style=solid];
m21_148 -> m21_152  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m21_149 -> m21_150  [key=0, style=solid];
m21_149 -> m21_50  [key=2, style=dotted];
m21_149 -> m21_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_150 -> m21_147  [key=0, style=bold, color=blue];
m21_99 -> m21_100  [key=0, style=solid];
m21_100 -> m21_101  [key=0, style=solid];
m21_100 -> m21_3  [key=2, style=dotted];
m21_100 -> m21_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_101 -> m21_99  [key=0, style=bold, color=blue];
m21_400 -> m21_401  [key=0, style=solid];
m21_400 -> m21_402  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_400 -> m21_403  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m21_4 -> m21_5  [key=0, style=solid];
m21_5 -> m21_6  [key=0, style=solid];
m21_5 -> m21_8  [key=2, style=dotted];
m21_6 -> m21_7  [key=0, style=solid];
m21_6 -> m21_9  [key=2, style=dotted];
m21_7 -> m21_4  [key=0, style=bold, color=blue];
m21_13 -> m21_14  [key=0, style=solid];
m21_14 -> m21_15  [key=0, style=solid];
m21_14 -> m21_17  [key=2, style=dotted];
m21_15 -> m21_16  [key=0, style=solid];
m21_15 -> m21_9  [key=2, style=dotted];
m21_16 -> m21_13  [key=0, style=bold, color=blue];
m21_21 -> m21_22  [key=0, style=solid];
m21_21 -> m21_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_22 -> m21_23  [key=0, style=solid];
m21_22 -> m21_25  [key=2, style=dotted];
m21_22 -> m21_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_28 -> m21_29  [key=0, style=solid];
m21_28 -> m21_30  [key=2, style=dotted];
m21_28 -> m21_31  [key=2, style=dotted];
m21_23 -> m21_24  [key=0, style=solid];
m21_23 -> m21_26  [key=2, style=dotted];
m21_27 -> m21_28  [key=0, style=solid];
m21_24 -> m21_21  [key=0, style=bold, color=blue];
m21_29 -> m21_27  [key=0, style=bold, color=blue];
m21_35 -> m21_36  [key=0, style=solid];
m21_35 -> m21_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_36 -> m21_37  [key=0, style=solid];
m21_36 -> m21_25  [key=2, style=dotted];
m21_36 -> m21_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_40 -> m21_41  [key=0, style=solid];
m21_40 -> m21_42  [key=2, style=dotted];
m21_40 -> m21_31  [key=2, style=dotted];
m21_40 -> m21_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_37 -> m21_38  [key=0, style=solid];
m21_37 -> m21_26  [key=2, style=dotted];
m21_39 -> m21_40  [key=0, style=solid];
m21_38 -> m21_35  [key=0, style=bold, color=blue];
m21_41 -> m21_39  [key=0, style=bold, color=blue];
m21_43 -> m21_44  [key=0, style=solid];
m21_44 -> m21_45  [key=0, style=solid];
m21_44 -> m21_46  [key=2, style=dotted];
m21_45 -> m21_43  [key=0, style=bold, color=blue];
m21_51 -> m21_52  [key=0, style=solid];
m21_51 -> m21_55  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m21_51 -> m21_66  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m21_52 -> m21_53  [key=0, style=solid];
m21_52 -> m21_42  [key=2, style=dotted];
m21_52 -> m21_30  [key=2, style=dotted];
m21_52 -> m21_70  [key=2, style=dotted];
m21_52 -> m21_31  [key=2, style=dotted];
m21_52 -> m21_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_52 -> m21_54  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m21_52 -> m21_56  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m21_52 -> m21_66  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m21_55 -> m21_56  [key=0, style=solid];
m21_55 -> m21_72  [key=2, style=dotted];
m21_55 -> m21_73  [key=2, style=dotted];
m21_55 -> m21_57  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m21_55 -> m21_58  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m21_55 -> m21_59  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m21_55 -> m21_60  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m21_55 -> m21_65  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m21_66 -> m21_67  [key=0, style=solid];
m21_66 -> m21_72  [key=2, style=dotted];
m21_66 -> m21_79  [key=2, style=dotted];
m21_66 -> m21_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_66 -> m21_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_66 -> m21_68  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m21_53 -> m21_54  [key=0, style=solid];
m21_53 -> m21_9  [key=2, style=dotted];
m21_80 -> m21_81  [key=0, style=solid];
m21_54 -> m21_55  [key=0, style=solid];
m21_54 -> m21_71  [key=2, style=dotted];
m21_56 -> m21_57  [key=0, style=solid];
m21_56 -> m21_74  [key=2, style=dotted];
m21_56 -> m21_26  [key=2, style=dotted];
m21_57 -> m21_58  [key=0, style=solid];
m21_57 -> m21_26  [key=2, style=dotted];
m21_58 -> m21_59  [key=0, style=solid];
m21_58 -> m21_26  [key=2, style=dotted];
m21_59 -> m21_60  [key=0, style=solid];
m21_59 -> m21_75  [key=2, style=dotted];
m21_59 -> m21_61  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m21_60 -> m21_61  [key=0, style=solid];
m21_65 -> m21_66  [key=0, style=solid];
m21_65 -> m21_77  [key=2, style=dotted];
m21_65 -> m21_78  [key=2, style=dotted];
m21_61 -> m21_62  [key=0, style=solid];
m21_61 -> m21_76  [key=2, style=dotted];
m21_61 -> m21_63  [key=1, style=dashed, color=darkseagreen4, label=job];
m21_61 -> m21_64  [key=1, style=dashed, color=darkseagreen4, label=job];
m21_62 -> m21_63  [key=0, style=solid];
m21_62 -> m21_26  [key=2, style=dotted];
m21_63 -> m21_64  [key=0, style=solid];
m21_63 -> m21_26  [key=2, style=dotted];
m21_64 -> m21_65  [key=0, style=solid];
m21_64 -> m21_26  [key=2, style=dotted];
m21_67 -> m21_68  [key=0, style=solid];
m21_67 -> m21_26  [key=2, style=dotted];
m21_83 -> m21_84  [key=0, style=solid];
m21_86 -> m21_87  [key=0, style=solid];
m21_68 -> m21_69  [key=0, style=solid];
m21_68 -> m21_26  [key=2, style=dotted];
m21_69 -> m21_51  [key=0, style=bold, color=blue];
m21_81 -> m21_82  [key=0, style=solid];
m21_81 -> m21_46  [key=2, style=dotted];
m21_82 -> m21_80  [key=0, style=bold, color=blue];
m21_84 -> m21_85  [key=0, style=solid];
m21_85 -> m21_83  [key=0, style=bold, color=blue];
m21_87 -> m21_88  [key=0, style=solid];
m21_88 -> m21_86  [key=0, style=bold, color=blue];
m21_92 -> m21_93  [key=0, style=solid];
m21_92 -> m21_96  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_93 -> m21_94  [key=0, style=solid];
m21_93 -> m21_25  [key=2, style=dotted];
m21_93 -> m21_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_96 -> m21_97  [key=0, style=solid];
m21_96 -> m21_98  [key=2, style=dotted];
m21_94 -> m21_92  [key=0, style=bold, color=blue];
m21_95 -> m21_96  [key=0, style=solid];
m21_97 -> m21_95  [key=0, style=bold, color=blue];
m21_102 -> m21_103  [key=0, style=solid];
m21_103 -> m21_104  [key=0, style=solid];
m21_103 -> m21_98  [key=2, style=dotted];
m21_104 -> m21_105  [key=0, style=solid];
m21_104 -> m21_106  [key=2, style=dotted];
m21_105 -> m21_102  [key=0, style=bold, color=blue];
m21_113 -> m21_114  [key=0, style=solid];
m21_113 -> m21_120  [key=2, style=dotted];
m21_113 -> m21_121  [key=2, style=dotted];
m21_113 -> m21_72  [key=2, style=dotted];
m21_113 -> m21_73  [key=2, style=dotted];
m21_111 -> m21_112  [key=0, style=solid];
m21_111 -> m21_113  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m21_111 -> m21_114  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_112 -> m21_113  [key=0, style=solid];
m21_112 -> m21_42  [key=2, style=dotted];
m21_112 -> m21_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_114 -> m21_115  [key=0, style=solid];
m21_114 -> m21_122  [key=2, style=dotted];
m21_114 -> m21_98  [key=2, style=dotted];
m21_114 -> m21_116  [key=1, style=dashed, color=darkseagreen4, label=result];
m21_114 -> m21_117  [key=1, style=dashed, color=darkseagreen4, label=result];
m21_114 -> m21_118  [key=1, style=dashed, color=darkseagreen4, label=result];
m21_123 -> m21_124  [key=0, style=solid];
m21_115 -> m21_116  [key=0, style=solid];
m21_115 -> m21_9  [key=2, style=dotted];
m21_116 -> m21_117  [key=0, style=solid];
m21_116 -> m21_9  [key=2, style=dotted];
m21_117 -> m21_118  [key=0, style=solid];
m21_117 -> m21_26  [key=2, style=dotted];
m21_118 -> m21_119  [key=0, style=solid];
m21_118 -> m21_26  [key=2, style=dotted];
m21_119 -> m21_111  [key=0, style=bold, color=blue];
m21_124 -> m21_125  [key=0, style=solid];
m21_124 -> m21_46  [key=2, style=dotted];
m21_125 -> m21_123  [key=0, style=bold, color=blue];
m21_129 -> m21_130  [key=0, style=solid];
m21_129 -> m21_134  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_130 -> m21_131  [key=0, style=solid];
m21_130 -> m21_25  [key=2, style=dotted];
m21_130 -> m21_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_134 -> m21_135  [key=0, style=solid];
m21_134 -> m21_136  [key=2, style=dotted];
m21_131 -> m21_132  [key=0, style=solid];
m21_131 -> m21_26  [key=2, style=dotted];
m21_133 -> m21_134  [key=0, style=solid];
m21_132 -> m21_129  [key=0, style=bold, color=blue];
m21_135 -> m21_133  [key=0, style=bold, color=blue];
m21_140 -> m21_141  [key=0, style=solid];
m21_140 -> m21_145  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_141 -> m21_142  [key=0, style=solid];
m21_141 -> m21_25  [key=2, style=dotted];
m21_141 -> m21_144  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_145 -> m21_146  [key=0, style=solid];
m21_145 -> m21_136  [key=2, style=dotted];
m21_142 -> m21_143  [key=0, style=solid];
m21_142 -> m21_26  [key=2, style=dotted];
m21_144 -> m21_145  [key=0, style=solid];
m21_143 -> m21_140  [key=0, style=bold, color=blue];
m21_146 -> m21_144  [key=0, style=bold, color=blue];
m21_152 -> m21_153  [key=0, style=solid];
m21_152 -> m21_72  [key=2, style=dotted];
m21_152 -> m21_73  [key=2, style=dotted];
m21_151 -> m21_152  [key=0, style=solid];
m21_151 -> m21_154  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_151 -> m21_155  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m21_154 -> m21_155  [key=0, style=solid];
m21_154 -> m21_136  [key=2, style=dotted];
m21_155 -> m21_156  [key=0, style=solid];
m21_155 -> m21_72  [key=2, style=dotted];
m21_155 -> m21_73  [key=2, style=dotted];
m21_153 -> m21_154  [key=0, style=solid];
m21_153 -> m21_74  [key=2, style=dotted];
m21_153 -> m21_155  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m21_156 -> m21_157  [key=0, style=solid];
m21_156 -> m21_26  [key=2, style=dotted];
m21_157 -> m21_151  [key=0, style=bold, color=blue];
m21_163 -> m21_164  [key=0, style=solid];
m21_163 -> m21_72  [key=2, style=dotted];
m21_163 -> m21_73  [key=2, style=dotted];
m21_162 -> m21_163  [key=0, style=solid];
m21_162 -> m21_165  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_162 -> m21_166  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_162 -> m21_167  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m21_165 -> m21_166  [key=0, style=solid];
m21_165 -> m21_136  [key=2, style=dotted];
m21_166 -> m21_167  [key=0, style=solid];
m21_166 -> m21_136  [key=2, style=dotted];
m21_167 -> m21_168  [key=0, style=solid];
m21_167 -> m21_72  [key=2, style=dotted];
m21_167 -> m21_73  [key=2, style=dotted];
m21_164 -> m21_165  [key=0, style=solid];
m21_164 -> m21_74  [key=2, style=dotted];
m21_164 -> m21_166  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m21_164 -> m21_167  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m21_168 -> m21_169  [key=0, style=solid];
m21_168 -> m21_26  [key=2, style=dotted];
m21_169 -> m21_162  [key=0, style=bold, color=blue];
m21_175 -> m21_176  [key=0, style=solid];
m21_175 -> m21_72  [key=2, style=dotted];
m21_175 -> m21_73  [key=2, style=dotted];
m21_174 -> m21_175  [key=0, style=solid];
m21_174 -> m21_177  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_174 -> m21_178  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m21_177 -> m21_178  [key=0, style=solid];
m21_177 -> m21_136  [key=2, style=dotted];
m21_178 -> m21_179  [key=0, style=solid];
m21_178 -> m21_72  [key=2, style=dotted];
m21_178 -> m21_73  [key=2, style=dotted];
m21_176 -> m21_177  [key=0, style=solid];
m21_176 -> m21_74  [key=2, style=dotted];
m21_176 -> m21_178  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m21_179 -> m21_180  [key=0, style=solid];
m21_179 -> m21_26  [key=2, style=dotted];
m21_180 -> m21_174  [key=0, style=bold, color=blue];
m21_184 -> m21_185  [key=0, style=solid];
m21_184 -> m21_189  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_185 -> m21_186  [key=0, style=solid];
m21_185 -> m21_25  [key=2, style=dotted];
m21_185 -> m21_188  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_189 -> m21_190  [key=0, style=solid];
m21_189 -> m21_191  [key=2, style=dotted];
m21_186 -> m21_187  [key=0, style=solid];
m21_186 -> m21_26  [key=2, style=dotted];
m21_188 -> m21_189  [key=0, style=solid];
m21_187 -> m21_184  [key=0, style=bold, color=blue];
m21_190 -> m21_188  [key=0, style=bold, color=blue];
m21_195 -> m21_196  [key=0, style=solid];
m21_195 -> m21_200  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_196 -> m21_197  [key=0, style=solid];
m21_196 -> m21_25  [key=2, style=dotted];
m21_196 -> m21_199  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_200 -> m21_201  [key=0, style=solid];
m21_200 -> m21_191  [key=2, style=dotted];
m21_197 -> m21_198  [key=0, style=solid];
m21_197 -> m21_26  [key=2, style=dotted];
m21_199 -> m21_200  [key=0, style=solid];
m21_198 -> m21_195  [key=0, style=bold, color=blue];
m21_201 -> m21_199  [key=0, style=bold, color=blue];
m21_205 -> m21_206  [key=0, style=solid];
m21_206 -> m21_207  [key=0, style=solid];
m21_206 -> m21_191  [key=2, style=dotted];
m21_207 -> m21_208  [key=0, style=solid];
m21_207 -> m21_106  [key=2, style=dotted];
m21_208 -> m21_205  [key=0, style=bold, color=blue];
m21_214 -> m21_215  [key=0, style=solid];
m21_214 -> m21_25  [key=2, style=dotted];
m21_214 -> m21_73  [key=2, style=dotted];
m21_213 -> m21_214  [key=0, style=solid];
m21_213 -> m21_215  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_215 -> m21_216  [key=0, style=solid];
m21_215 -> m21_74  [key=2, style=dotted];
m21_215 -> m21_218  [key=2, style=dotted];
m21_216 -> m21_217  [key=0, style=solid];
m21_216 -> m21_26  [key=2, style=dotted];
m21_217 -> m21_213  [key=0, style=bold, color=blue];
m21_222 -> m21_223  [key=0, style=solid];
m21_222 -> m21_227  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_223 -> m21_224  [key=0, style=solid];
m21_223 -> m21_25  [key=2, style=dotted];
m21_223 -> m21_226  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_227 -> m21_228  [key=0, style=solid];
m21_227 -> m21_229  [key=2, style=dotted];
m21_224 -> m21_225  [key=0, style=solid];
m21_224 -> m21_26  [key=2, style=dotted];
m21_226 -> m21_227  [key=0, style=solid];
m21_225 -> m21_222  [key=0, style=bold, color=blue];
m21_228 -> m21_226  [key=0, style=bold, color=blue];
m21_233 -> m21_234  [key=0, style=solid];
m21_233 -> m21_238  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_234 -> m21_235  [key=0, style=solid];
m21_234 -> m21_25  [key=2, style=dotted];
m21_234 -> m21_237  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_238 -> m21_239  [key=0, style=solid];
m21_238 -> m21_229  [key=2, style=dotted];
m21_235 -> m21_236  [key=0, style=solid];
m21_235 -> m21_26  [key=2, style=dotted];
m21_237 -> m21_238  [key=0, style=solid];
m21_236 -> m21_233  [key=0, style=bold, color=blue];
m21_239 -> m21_237  [key=0, style=bold, color=blue];
m21_245 -> m21_246  [key=0, style=solid];
m21_245 -> m21_250  [key=2, style=dotted];
m21_244 -> m21_245  [key=0, style=solid];
m21_244 -> m21_246  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_244 -> m21_247  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m21_246 -> m21_247  [key=0, style=solid];
m21_246 -> m21_229  [key=2, style=dotted];
m21_247 -> m21_248  [key=0, style=solid];
m21_247 -> m21_25  [key=2, style=dotted];
m21_247 -> m21_73  [key=2, style=dotted];
m21_248 -> m21_249  [key=0, style=solid];
m21_248 -> m21_26  [key=2, style=dotted];
m21_249 -> m21_244  [key=0, style=bold, color=blue];
m21_256 -> m21_257  [key=0, style=solid];
m21_256 -> m21_250  [key=2, style=dotted];
m21_255 -> m21_256  [key=0, style=solid];
m21_255 -> m21_257  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_255 -> m21_258  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m21_257 -> m21_258  [key=0, style=solid];
m21_257 -> m21_229  [key=2, style=dotted];
m21_258 -> m21_259  [key=0, style=solid];
m21_258 -> m21_25  [key=2, style=dotted];
m21_258 -> m21_73  [key=2, style=dotted];
m21_259 -> m21_260  [key=0, style=solid];
m21_259 -> m21_26  [key=2, style=dotted];
m21_260 -> m21_255  [key=0, style=bold, color=blue];
m21_264 -> m21_265  [key=0, style=solid];
m21_264 -> m21_269  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_265 -> m21_266  [key=0, style=solid];
m21_265 -> m21_25  [key=2, style=dotted];
m21_265 -> m21_268  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_269 -> m21_270  [key=0, style=solid];
m21_269 -> m21_271  [key=2, style=dotted];
m21_266 -> m21_267  [key=0, style=solid];
m21_266 -> m21_26  [key=2, style=dotted];
m21_268 -> m21_269  [key=0, style=solid];
m21_267 -> m21_264  [key=0, style=bold, color=blue];
m21_270 -> m21_268  [key=0, style=bold, color=blue];
m21_275 -> m21_276  [key=0, style=solid];
m21_275 -> m21_279  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_276 -> m21_277  [key=0, style=solid];
m21_276 -> m21_25  [key=2, style=dotted];
m21_276 -> m21_278  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_279 -> m21_280  [key=0, style=solid];
m21_279 -> m21_271  [key=2, style=dotted];
m21_277 -> m21_275  [key=0, style=bold, color=blue];
m21_278 -> m21_279  [key=0, style=solid];
m21_280 -> m21_278  [key=0, style=bold, color=blue];
m21_284 -> m21_285  [key=0, style=solid];
m21_285 -> m21_286  [key=0, style=solid];
m21_285 -> m21_271  [key=2, style=dotted];
m21_286 -> m21_287  [key=0, style=solid];
m21_286 -> m21_106  [key=2, style=dotted];
m21_287 -> m21_284  [key=0, style=bold, color=blue];
m21_293 -> m21_294  [key=0, style=solid];
m21_293 -> m21_250  [key=2, style=dotted];
m21_292 -> m21_293  [key=0, style=solid];
m21_292 -> m21_294  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_294 -> m21_295  [key=0, style=solid];
m21_294 -> m21_271  [key=2, style=dotted];
m21_295 -> m21_296  [key=0, style=solid];
m21_295 -> m21_26  [key=2, style=dotted];
m21_296 -> m21_292  [key=0, style=bold, color=blue];
m21_300 -> m21_301  [key=0, style=solid];
m21_300 -> m21_305  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_301 -> m21_302  [key=0, style=solid];
m21_301 -> m21_25  [key=2, style=dotted];
m21_301 -> m21_304  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_305 -> m21_306  [key=0, style=solid];
m21_305 -> m21_307  [key=2, style=dotted];
m21_305 -> m21_308  [key=2, style=dotted];
m21_302 -> m21_303  [key=0, style=solid];
m21_302 -> m21_26  [key=2, style=dotted];
m21_304 -> m21_305  [key=0, style=solid];
m21_303 -> m21_300  [key=0, style=bold, color=blue];
m21_306 -> m21_304  [key=0, style=bold, color=blue];
m21_312 -> m21_313  [key=0, style=solid];
m21_312 -> m21_317  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_313 -> m21_314  [key=0, style=solid];
m21_313 -> m21_25  [key=2, style=dotted];
m21_313 -> m21_316  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_317 -> m21_318  [key=0, style=solid];
m21_317 -> m21_308  [key=2, style=dotted];
m21_314 -> m21_315  [key=0, style=solid];
m21_314 -> m21_26  [key=2, style=dotted];
m21_316 -> m21_317  [key=0, style=solid];
m21_315 -> m21_312  [key=0, style=bold, color=blue];
m21_318 -> m21_316  [key=0, style=bold, color=blue];
m21_322 -> m21_323  [key=0, style=solid];
m21_322 -> m21_324  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_322 -> m21_325  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m21_322 -> m21_330  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_322 -> m21_331  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m21_323 -> m21_324  [key=0, style=solid];
m21_323 -> m21_307  [key=2, style=dotted];
m21_324 -> m21_325  [key=0, style=solid];
m21_324 -> m21_308  [key=2, style=dotted];
m21_325 -> m21_326  [key=0, style=solid];
m21_325 -> m21_72  [key=2, style=dotted];
m21_325 -> m21_73  [key=2, style=dotted];
m21_325 -> m21_327  [key=1, style=dashed, color=darkseagreen4, label=server];
m21_325 -> m21_328  [key=1, style=dashed, color=darkseagreen4, label=server];
m21_330 -> m21_331  [key=0, style=solid];
m21_330 -> m21_308  [key=2, style=dotted];
m21_331 -> m21_332  [key=0, style=solid];
m21_331 -> m21_72  [key=2, style=dotted];
m21_331 -> m21_73  [key=2, style=dotted];
m21_331 -> m21_333  [key=1, style=dashed, color=darkseagreen4, label=sameServer];
m21_326 -> m21_327  [key=0, style=solid];
m21_326 -> m21_26  [key=2, style=dotted];
m21_327 -> m21_328  [key=0, style=solid];
m21_327 -> m21_335  [key=2, style=dotted];
m21_327 -> m21_78  [key=2, style=dotted];
m21_328 -> m21_329  [key=0, style=solid];
m21_328 -> m21_106  [key=2, style=dotted];
m21_329 -> m21_330  [key=0, style=solid];
m21_329 -> m21_307  [key=2, style=dotted];
m21_332 -> m21_333  [key=0, style=solid];
m21_332 -> m21_26  [key=2, style=dotted];
m21_333 -> m21_334  [key=0, style=solid];
m21_333 -> m21_336  [key=2, style=dotted];
m21_334 -> m21_322  [key=0, style=bold, color=blue];
m21_340 -> m21_341  [key=0, style=solid];
m21_340 -> m21_344  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_341 -> m21_342  [key=0, style=solid];
m21_341 -> m21_25  [key=2, style=dotted];
m21_341 -> m21_343  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_344 -> m21_345  [key=0, style=solid];
m21_344 -> m21_346  [key=2, style=dotted];
m21_342 -> m21_340  [key=0, style=bold, color=blue];
m21_343 -> m21_344  [key=0, style=solid];
m21_345 -> m21_343  [key=0, style=bold, color=blue];
m21_352 -> m21_353  [key=0, style=solid];
m21_352 -> m21_250  [key=2, style=dotted];
m21_351 -> m21_352  [key=0, style=solid];
m21_351 -> m21_353  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_351 -> m21_354  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m21_353 -> m21_354  [key=0, style=solid];
m21_353 -> m21_346  [key=2, style=dotted];
m21_354 -> m21_355  [key=0, style=solid];
m21_354 -> m21_72  [key=2, style=dotted];
m21_354 -> m21_73  [key=2, style=dotted];
m21_355 -> m21_356  [key=0, style=solid];
m21_355 -> m21_357  [key=2, style=dotted];
m21_356 -> m21_351  [key=0, style=bold, color=blue];
m21_361 -> m21_362  [key=0, style=solid];
m21_361 -> m21_365  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_362 -> m21_363  [key=0, style=solid];
m21_362 -> m21_25  [key=2, style=dotted];
m21_362 -> m21_364  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_365 -> m21_366  [key=0, style=solid];
m21_365 -> m21_367  [key=2, style=dotted];
m21_363 -> m21_361  [key=0, style=bold, color=blue];
m21_364 -> m21_365  [key=0, style=solid];
m21_366 -> m21_364  [key=0, style=bold, color=blue];
m21_373 -> m21_374  [key=0, style=solid];
m21_373 -> m21_250  [key=2, style=dotted];
m21_372 -> m21_373  [key=0, style=solid];
m21_372 -> m21_374  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_372 -> m21_375  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m21_374 -> m21_375  [key=0, style=solid];
m21_374 -> m21_367  [key=2, style=dotted];
m21_375 -> m21_376  [key=0, style=solid];
m21_375 -> m21_72  [key=2, style=dotted];
m21_375 -> m21_79  [key=2, style=dotted];
m21_375 -> m21_379  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_375 -> m21_382  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_375 -> m21_377  [key=1, style=dashed, color=darkseagreen4, label=servers];
m21_376 -> m21_377  [key=0, style=solid];
m21_376 -> m21_9  [key=2, style=dotted];
m21_379 -> m21_380  [key=0, style=solid];
m21_382 -> m21_383  [key=0, style=solid];
m21_377 -> m21_378  [key=0, style=solid];
m21_377 -> m21_106  [key=2, style=dotted];
m21_378 -> m21_372  [key=0, style=bold, color=blue];
m21_380 -> m21_381  [key=0, style=solid];
m21_381 -> m21_379  [key=0, style=bold, color=blue];
m21_383 -> m21_384  [key=0, style=solid];
m21_384 -> m21_382  [key=0, style=bold, color=blue];
m21_388 -> m21_389  [key=0, style=solid];
m21_388 -> m21_392  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_389 -> m21_390  [key=0, style=solid];
m21_389 -> m21_25  [key=2, style=dotted];
m21_389 -> m21_391  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_392 -> m21_393  [key=0, style=solid];
m21_392 -> m21_394  [key=2, style=dotted];
m21_392 -> m21_395  [key=2, style=dotted];
m21_390 -> m21_388  [key=0, style=bold, color=blue];
m21_391 -> m21_392  [key=0, style=solid];
m21_393 -> m21_391  [key=0, style=bold, color=blue];
m21_401 -> m21_402  [key=0, style=solid];
m21_401 -> m21_77  [key=2, style=dotted];
m21_401 -> m21_406  [key=2, style=dotted];
m21_401 -> m21_250  [key=2, style=dotted];
m21_402 -> m21_403  [key=0, style=solid];
m21_402 -> m21_407  [key=2, style=dotted];
m21_402 -> m21_395  [key=2, style=dotted];
m21_403 -> m21_404  [key=0, style=solid];
m21_403 -> m21_72  [key=2, style=dotted];
m21_403 -> m21_73  [key=2, style=dotted];
m21_404 -> m21_405  [key=0, style=solid];
m21_404 -> m21_26  [key=2, style=dotted];
m21_405 -> m21_400  [key=0, style=bold, color=blue];
m21_46 -> m21_421  [key=0, style=solid];
m21_421 -> m21_46  [key=0, style=bold, color=blue];
m21_170 -> m21_171  [key=0, style=solid];
m21_171 -> m21_172  [key=0, style=solid];
m21_171 -> m21_175  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m21_172 -> m21_173  [key=0, style=solid];
m21_172 -> m21_50  [key=2, style=dotted];
m21_172 -> m21_174  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_173 -> m21_170  [key=0, style=bold, color=blue];
m21_192 -> m21_193  [key=0, style=solid];
m21_193 -> m21_194  [key=0, style=solid];
m21_193 -> m21_3  [key=2, style=dotted];
m21_193 -> m21_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_194 -> m21_192  [key=0, style=bold, color=blue];
m21_281 -> m21_282  [key=0, style=solid];
m21_282 -> m21_283  [key=0, style=solid];
m21_282 -> m21_3  [key=2, style=dotted];
m21_282 -> m21_284  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_283 -> m21_281  [key=0, style=bold, color=blue];
m21_18 -> m21_19  [key=0, style=solid];
m21_19 -> m21_20  [key=0, style=solid];
m21_19 -> m21_3  [key=2, style=dotted];
m21_19 -> m21_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_19 -> m21_33  [key=3, color=darkorchid, style=bold, label="Property variable string AppPath"];
m21_19 -> m21_19  [key=3, color=darkorchid, style=bold, label="Property variable Hangfire.Dashboard.IAuthorizationFilter[] AuthorizationFilters"];
m21_19 -> m21_48  [key=3, color=darkorchid, style=bold, label="Property variable Hangfire.JobActivator Activator"];
m21_20 -> m21_18  [key=0, style=bold, color=blue];
m21_251 -> m21_252  [key=0, style=solid];
m21_252 -> m21_253  [key=0, style=solid];
m21_252 -> m21_256  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m21_253 -> m21_254  [key=0, style=solid];
m21_253 -> m21_50  [key=2, style=dotted];
m21_253 -> m21_255  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_254 -> m21_251  [key=0, style=bold, color=blue];
m21_347 -> m21_348  [key=0, style=solid];
m21_348 -> m21_349  [key=0, style=solid];
m21_348 -> m21_352  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m21_349 -> m21_350  [key=0, style=solid];
m21_349 -> m21_50  [key=2, style=dotted];
m21_349 -> m21_351  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_350 -> m21_347  [key=0, style=bold, color=blue];
m21_288 -> m21_289  [key=0, style=solid];
m21_289 -> m21_290  [key=0, style=solid];
m21_289 -> m21_293  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m21_290 -> m21_291  [key=0, style=solid];
m21_290 -> m21_50  [key=2, style=dotted];
m21_290 -> m21_292  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_291 -> m21_288  [key=0, style=bold, color=blue];
m21_89 -> m21_90  [key=0, style=solid];
m21_90 -> m21_91  [key=0, style=solid];
m21_90 -> m21_3  [key=2, style=dotted];
m21_90 -> m21_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_91 -> m21_89  [key=0, style=bold, color=blue];
m21_240 -> m21_241  [key=0, style=solid];
m21_241 -> m21_242  [key=0, style=solid];
m21_241 -> m21_245  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m21_242 -> m21_243  [key=0, style=solid];
m21_242 -> m21_50  [key=2, style=dotted];
m21_242 -> m21_244  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_243 -> m21_240  [key=0, style=bold, color=blue];
m21_337 -> m21_338  [key=0, style=solid];
m21_338 -> m21_339  [key=0, style=solid];
m21_338 -> m21_3  [key=2, style=dotted];
m21_338 -> m21_340  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_339 -> m21_337  [key=0, style=bold, color=blue];
m21_422 -> m21_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_127  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_138  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_160  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_172  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_182  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_193  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_203  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_211  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_220  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_231  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_242  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_253  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_262  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_273  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_282  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_290  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_298  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_310  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_320  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_338  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_349  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_359  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_370  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_386  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_422 -> m21_398  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m21_423 -> m21_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_424 -> m21_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_425 -> m21_96  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_426 -> m21_113  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m21_427 -> m21_134  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_428 -> m21_145  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_429 -> m21_152  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m21_430 -> m21_163  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m21_431 -> m21_175  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m21_432 -> m21_189  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_433 -> m21_200  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_434 -> m21_214  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m21_435 -> m21_227  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_436 -> m21_238  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_437 -> m21_245  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m21_438 -> m21_256  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m21_439 -> m21_269  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_440 -> m21_279  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_441 -> m21_293  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m21_442 -> m21_305  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_443 -> m21_317  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_444 -> m21_344  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_445 -> m21_352  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m21_446 -> m21_365  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_447 -> m21_373  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m21_448 -> m21_392  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m21_449 -> m21_401  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
}
