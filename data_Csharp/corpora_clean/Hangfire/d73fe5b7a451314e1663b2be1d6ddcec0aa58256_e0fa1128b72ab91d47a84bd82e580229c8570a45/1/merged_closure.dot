digraph  {
n7 [label="HangFire.Client.ClientContext", span=""];
n0 [cluster="HangFire.Client.ClientContext.ClientContext()", label="Entry HangFire.Client.ClientContext.ClientContext()", span="6-6"];
n1 [cluster="HangFire.Client.ClientContext.ClientContext()", label="Items = new Dictionary<string, object>()", span="8-8"];
n2 [cluster="HangFire.Client.ClientContext.ClientContext()", label="Exit HangFire.Client.ClientContext.ClientContext()", span="6-6"];
n3 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n4 [cluster="HangFire.Client.ClientContext.ClientContext(HangFire.Client.ClientContext)", label="Entry HangFire.Client.ClientContext.ClientContext(HangFire.Client.ClientContext)", span="11-11"];
n5 [cluster="HangFire.Client.ClientContext.ClientContext(HangFire.Client.ClientContext)", label="Items = clientContext.Items", span="13-13"];
n6 [cluster="HangFire.Client.ClientContext.ClientContext(HangFire.Client.ClientContext)", label="Exit HangFire.Client.ClientContext.ClientContext(HangFire.Client.ClientContext)", span="11-11"];
m0_8 [cluster="Mock<IWriteOnlyTransaction>.cstr", file="EnqueuedStateHandlerFacts.cs", label="Entry Mock<IWriteOnlyTransaction>.cstr", span=""];
m0_28 [cluster="Unk.Apply", file="EnqueuedStateHandlerFacts.cs", label="Entry Unk.Apply", span=""];
m0_22 [cluster="Unk.Equal", file="EnqueuedStateHandlerFacts.cs", label="Entry Unk.Equal", span=""];
m0_48 [cluster="Unk.DoesNotThrow", file="EnqueuedStateHandlerFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m0_40 [cluster="Unk.>", file="EnqueuedStateHandlerFacts.cs", label="Entry Unk.>", span=""];
m0_10 [cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23"];
m0_12 [cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="31-31"];
m0_11 [cluster="ApplyStateContext.cstr", file="EnqueuedStateHandlerFacts.cs", label="Entry ApplyStateContext.cstr", span=""];
m0_39 [cluster="Mock<State>.cstr", file="EnqueuedStateHandlerFacts.cs", label="Entry Mock<State>.cstr", span=""];
m0_52 [cluster="HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="92-92"];
m0_33 [cluster="Unk.AddToQueue", file="EnqueuedStateHandlerFacts.cs", label="Entry Unk.AddToQueue", span=""];
m0_13 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="Entry lambda expression", span="21-21"];
m0_50 [cluster="lambda expression", color=green, community=0, file="EnqueuedStateHandlerFacts.cs", label="handler.Unapply(null, null)", prediction=0, span="67-67"];
m0_49 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="Entry lambda expression", span="67-67"];
m0_51 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="Exit lambda expression", span="67-67"];
m0_42 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="handler.Apply(context, _transaction.Object)", span="59-59"];
m0_41 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="Entry lambda expression", span="59-59"];
m0_43 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="Exit lambda expression", span="59-59"];
m0_30 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="Entry lambda expression", span="48-48"];
m0_32 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="Exit lambda expression", span="48-48"];
m0_31 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="x.AddToQueue(Queue, JobId)", span="48-48"];
m0_14 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="Console.WriteLine()", span="21-21"];
m0_15 [cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs", label="Exit lambda expression", span="21-21"];
m0_29 [cluster="Unk.Verify", file="EnqueuedStateHandlerFacts.cs", label="Entry Unk.Verify", span=""];
m0_21 [cluster="HangFire.States.EnqueuedState.Handler.Handler()", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.States.EnqueuedState.Handler.Handler()", span="77-77"];
m0_17 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", span="35-35"];
m0_18 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", file="EnqueuedStateHandlerFacts.cs", label="var handler = new EnqueuedState.Handler()", span="37-37"];
m0_19 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", file="EnqueuedStateHandlerFacts.cs", label="Assert.Equal(EnqueuedState.StateName, handler.StateName)", span="38-38"];
m0_20 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", file="EnqueuedStateHandlerFacts.cs", label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", span="35-35"];
m0_34 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", span="52-52"];
m0_35 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs", label="var handler = new EnqueuedState.Handler()", span="54-54"];
m0_36 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs", label="var context = new ApplyStateContext(\r\n                _connection.Object, _stateContext, new Mock<State>().Object, null)", span="55-56"];
m0_37 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => handler.Apply(context, _transaction.Object))", span="58-59"];
m0_38 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs", label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", span="52-52"];
m0_7 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="125-125"];
m0_0 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", span="19-19"];
m0_2 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs", label="_transaction = new Mock<IWriteOnlyTransaction>()", span="23-23"];
m0_3 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="24-24"];
m0_4 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs", label="_stateContext = new StateContext(JobId, job)", span="25-25"];
m0_5 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs", label="_context = new ApplyStateContext(\r\n                _connection.Object,\r\n                _stateContext, \r\n                new EnqueuedState { Queue = Queue }, \r\n                null)", span="27-31"];
m0_1 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs", label="var job = Job.FromExpression(() => Console.WriteLine())", span="21-21"];
m0_6 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs", label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", span="19-19"];
m0_23 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", span="42-42"];
m0_24 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs", label="var handler = new EnqueuedState.Handler()", span="44-44"];
m0_25 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs", label="handler.Apply(_context, _transaction.Object)", span="46-46"];
m0_26 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs", label="_transaction.Verify(x => x.AddToQueue(Queue, JobId))", span="48-48"];
m0_27 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs", label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", span="42-42"];
m0_9 [cluster="Mock<IStorageConnection>.cstr", file="EnqueuedStateHandlerFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m0_16 [cluster="System.Console.WriteLine()", file="EnqueuedStateHandlerFacts.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m0_44 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Unapply_DoesNotDoAnything()", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Unapply_DoesNotDoAnything()", span="63-63"];
m0_45 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Unapply_DoesNotDoAnything()", color=green, community=0, file="EnqueuedStateHandlerFacts.cs", label="var handler = new EnqueuedState.Handler()", prediction=0, span="65-65"];
m0_46 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Unapply_DoesNotDoAnything()", color=green, community=0, file="EnqueuedStateHandlerFacts.cs", label="Assert.DoesNotThrow(() => handler.Unapply(null, null))", prediction=2, span="67-67"];
m0_47 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Unapply_DoesNotDoAnything()", file="EnqueuedStateHandlerFacts.cs", label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Unapply_DoesNotDoAnything()", span="63-63"];
m0_56 [file="EnqueuedStateHandlerFacts.cs", label=handler, span=""];
m0_53 [file="EnqueuedStateHandlerFacts.cs", label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts", span=""];
m0_54 [file="EnqueuedStateHandlerFacts.cs", label=handler, span=""];
m0_55 [file="EnqueuedStateHandlerFacts.cs", label=context, span=""];
m1_2 [cluster="HangFire.IJobStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", file="FailedStateHandler.cs", label="Entry HangFire.IJobStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", span="9-9"];
m1_3 [cluster="HangFire.IJobStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", file="FailedStateHandler.cs", label="Exit HangFire.IJobStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", span="9-9"];
m1_0 [cluster="HangFire.IJobStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", file="FailedStateHandler.cs", label="Entry HangFire.IJobStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", span="8-8"];
m1_1 [cluster="HangFire.IJobStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", file="FailedStateHandler.cs", label="Exit HangFire.IJobStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", span="8-8"];
m2_10 [cluster="HangFire.States.EnqueuedState.Handler.Handler()", file="GlobalStateHandlers.cs", label="Entry HangFire.States.EnqueuedState.Handler.Handler()", span="77-77"];
m2_6 [cluster="System.Collections.Generic.List<T>.List()", file="GlobalStateHandlers.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_8 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="GlobalStateHandlers.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m2_0 [cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="GlobalStateHandlers.cs", label="Entry HangFire.GlobalStateHandlers.GlobalStateHandlers()", span="23-23"];
m2_1 [cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", color=green, community=0, file="GlobalStateHandlers.cs", label="Handlers = new List<IStateHandler>()", prediction=3, span="25-25"];
m2_2 [cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="GlobalStateHandlers.cs", label="Handlers.Add(new SucceededState.Handler())", span="26-26"];
m2_3 [cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="GlobalStateHandlers.cs", label="Handlers.Add(new ScheduledState.Handler())", span="27-27"];
m2_4 [cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="GlobalStateHandlers.cs", label="Handlers.Add(new EnqueuedState.Handler())", span="28-28"];
m2_5 [cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="GlobalStateHandlers.cs", label="Exit HangFire.GlobalStateHandlers.GlobalStateHandlers()", span="23-23"];
m2_7 [cluster="HangFire.States.SucceededState.Handler.Handler()", file="GlobalStateHandlers.cs", label="Entry HangFire.States.SucceededState.Handler.Handler()", span="52-52"];
m2_9 [cluster="HangFire.States.ScheduledState.Handler.Handler()", file="GlobalStateHandlers.cs", label="Entry HangFire.States.ScheduledState.Handler.Handler()", span="52-52"];
m3_23 [cluster="Unk.Then", file="JobHelperFacts.cs", label="Entry Unk.Then", span=""];
m3_6 [cluster="Unk.Given", file="JobHelperFacts.cs", label="Entry Unk.Given", span=""];
m3_11 [cluster="Unk.EnqueueItemOnList", file="JobHelperFacts.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m3_37 [cluster="Unk.DoesNotContain", file="JobHelperFacts.cs", label="Entry Unk.DoesNotContain", span=""];
m3_28 [cluster="Unk.GetAllItemsFromList", file="JobHelperFacts.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m3_15 [cluster="string.Format(string, object, object)", file="JobHelperFacts.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m3_7 [cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="JobHelperFacts.cs", label="Entry HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", span="25-25"];
m3_8 [cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", color=green, community=0, file="JobHelperFacts.cs", label="Given(''a job'')", prediction=4, span="27-27"];
m3_9 [cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", color=green, community=0, file="JobHelperFacts.cs", label="Redis.Client.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', queue),\r\n                JobSteps.DefaultJobId)", prediction=5, span="29-31"];
m3_10 [cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="JobHelperFacts.cs", label="Exit HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", span="25-25"];
m3_12 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", file="JobHelperFacts.cs", label="Entry HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", span="35-35"];
m3_13 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", color=green, community=0, file="JobHelperFacts.cs", label="Given(String.Format(''the '{0}' job in the '{1}' queue'', jobId, DefaultQueue))", prediction=6, span="37-37"];
m3_14 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", file="JobHelperFacts.cs", label="Exit HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", span="35-35"];
m3_16 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", file="JobHelperFacts.cs", label="Entry HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", span="41-41"];
m3_17 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", color=green, community=0, file="JobHelperFacts.cs", label="Given(String.Format(''the '{0}' job'', jobId))", prediction=7, span="43-43"];
m3_18 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", color=green, community=0, file="JobHelperFacts.cs", label="Redis.Client.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', queue),\r\n                jobId)", prediction=8, span="45-47"];
m3_19 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", file="JobHelperFacts.cs", label="Exit HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", span="41-41"];
m3_30 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", file="JobHelperFacts.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", span="67-67"];
m3_31 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", color=green, community=0, file="JobHelperFacts.cs", label="Then(String.Format(''the '{0}' queue does not contain the job'', DefaultQueue))", prediction=9, span="69-69"];
m3_32 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", file="JobHelperFacts.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", span="67-67"];
m3_43 [cluster="Unk.AreEqual", file="JobHelperFacts.cs", label="Entry Unk.AreEqual", span=""];
m3_42 [cluster="Unk.GetListCount", file="JobHelperFacts.cs", label="Entry Unk.GetListCount", span=""];
m3_44 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="JobHelperFacts.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", span="90-90"];
m3_45 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="JobHelperFacts.cs", label="var actualLength = Redis.Client.GetListCount(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="92-93"];
m3_46 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="JobHelperFacts.cs", label="Assert.AreEqual(length, actualLength)", span="94-94"];
m3_47 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="JobHelperFacts.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", span="90-90"];
m3_24 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", file="JobHelperFacts.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", span="57-57"];
m3_25 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", color=green, community=0, file="JobHelperFacts.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}'', queue))", prediction=10, span="59-60"];
m3_26 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", color=green, community=0, file="JobHelperFacts.cs", label="CollectionAssert.Contains(jobIds, JobSteps.DefaultJobId)", prediction=11, span="62-62"];
m3_27 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", file="JobHelperFacts.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", span="57-57"];
m3_2 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", file="JobHelperFacts.cs", label="Entry HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", span="19-19"];
m3_3 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", color=green, community=0, file="JobHelperFacts.cs", label="Given(String.Format(''a job in the '{0}' queue'', DefaultQueue))", prediction=12, span="21-21"];
m3_4 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", file="JobHelperFacts.cs", label="Exit HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", span="19-19"];
m3_5 [cluster="string.Format(string, object)", file="JobHelperFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m3_20 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="JobHelperFacts.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", span="51-51"];
m3_21 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", color=green, community=0, file="JobHelperFacts.cs", label="Then(String.Format(''the '{0}' queue contains the job'', DefaultQueue))", prediction=13, span="53-53"];
m3_22 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="JobHelperFacts.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", span="51-51"];
m3_38 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="JobHelperFacts.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", span="82-82"];
m3_39 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", color=green, community=0, file="JobHelperFacts.cs", label="var length = Redis.Client.GetListCount(\r\n                String.Format(''hangfire:queue:{0}'', queue))", prediction=14, span="84-85"];
m3_40 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", color=green, community=0, file="JobHelperFacts.cs", label="Assert.AreEqual(0, length)", prediction=15, span="86-86"];
m3_41 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="JobHelperFacts.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", span="82-82"];
m3_29 [cluster="Unk.Contains", file="JobHelperFacts.cs", label="Entry Unk.Contains", span=""];
m3_33 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="JobHelperFacts.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", span="73-73"];
m3_34 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", color=green, community=0, file="JobHelperFacts.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}'', queue))", prediction=16, span="75-76"];
m3_35 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", color=green, community=0, file="JobHelperFacts.cs", label="CollectionAssert.DoesNotContain(jobIds, JobSteps.DefaultJobId)", prediction=17, span="78-78"];
m3_36 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="JobHelperFacts.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", span="73-73"];
m4_6 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobStorage.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44"];
m4_7 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobStorage.cs", label="var type = System.Type.GetType(Type, throwOnError: true, ignoreCase: true)", span="48-48"];
m4_8 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobStorage.cs", label="var parameterTypes = JobHelper.FromJson<Type[]>(ParameterTypes)", span="49-49"];
m4_9 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobStorage.cs", label="var method = GetNonOpenMatchingMethod(type, Method, parameterTypes)", span="50-50"];
m4_11 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobStorage.cs", label="throw new InvalidOperationException(String.Format(\r\n                        ''The type `{0}` does not contain a method with signature `{1}({2})`'',\r\n                        type.FullName,\r\n                        Method,\r\n                        String.Join('', '', parameterTypes.Select(x => x.Name))));", span="54-58"];
m4_10 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobStorage.cs", label="method == null", span="52-52"];
m4_12 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobStorage.cs", label="var serializedArguments = JobHelper.FromJson<string[]>(Arguments)", span="61-61"];
m4_15 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobStorage.cs", label=Exception, span="66-66"];
m4_16 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobStorage.cs", label="throw new JobLoadException(''Could not load the job. See inner exception for the details.'', ex);", span="68-68"];
m4_17 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobStorage.cs", label="Exit Hangfire.Storage.InvocationData.Deserialize()", span="44-44"];
m4_110 [cluster="System.Collections.Generic.List<T>.List()", file="JobStorage.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_20 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobStorage.cs", label="Entry Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", span="172-172"];
m4_87 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobStorage.cs", label="var methodCandidates = type.GetMethods()", span="174-174"];
m4_89 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobStorage.cs", label="!methodCandidate.Name.Equals(name, StringComparison.Ordinal)", span="178-178"];
m4_91 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobStorage.cs", label="parameters.Length != parameterTypes.Length", span="184-184"];
m4_98 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobStorage.cs", label="var actualType = parameterTypes[i]", span="198-198"];
m4_88 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobStorage.cs", label=methodCandidates, span="176-176"];
m4_106 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobStorage.cs", label="return null;", span="222-222"];
m4_90 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobStorage.cs", label="var parameters = methodCandidate.GetParameters()", span="183-183"];
m4_105 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobStorage.cs", label="return methodCandidate.ContainsGenericParameters \r\n                    ? methodCandidate.MakeGenericMethod(genericArguments.ToArray()) \r\n                    : methodCandidate;", span="217-219"];
m4_95 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobStorage.cs", label="i < parameters.Length", span="194-194"];
m4_96 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobStorage.cs", label="var parameter = parameters[i]", span="196-196"];
m4_92 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobStorage.cs", label="var parameterTypesMatched = true", span="189-189"];
m4_93 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobStorage.cs", label="var genericArguments = new List<Type>()", span="190-190"];
m4_104 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobStorage.cs", label="!parameterTypesMatched", span="214-214"];
m4_94 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobStorage.cs", label="var i = 0", span="194-194"];
m4_100 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobStorage.cs", label="genericArguments.Add(actualType)", span="203-203"];
m4_103 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobStorage.cs", label="i++", span="194-194"];
m4_97 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobStorage.cs", label="var parameterType = parameter.ParameterType", span="197-197"];
m4_99 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobStorage.cs", label="parameterType.IsGenericParameter", span="201-201"];
m4_101 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobStorage.cs", label="parameterType.IsAssignableFrom(actualType)", span="208-208"];
m4_102 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobStorage.cs", label="parameterTypesMatched = false", span="210-210"];
m4_107 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="JobStorage.cs", label="Exit Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", span="172-172"];
m4_112 [cluster="System.Reflection.MethodInfo.MakeGenericMethod(params System.Type[])", file="JobStorage.cs", label="Entry System.Reflection.MethodInfo.MakeGenericMethod(params System.Type[])", span="0-0"];
m4_53 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="JobStorage.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m4_26 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="JobStorage.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", span="120-120"];
m4_23 [cluster="Unk.Join", file="JobStorage.cs", label="Entry Unk.Join", span=""];
m4_111 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JobStorage.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m4_25 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobStorage.cs", label="Entry Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", span="110-110"];
m4_56 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobStorage.cs", label="var parameters = methodInfo.GetParameters()", span="112-112"];
m4_57 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobStorage.cs", label="var result = new List<object>(arguments.Length)", span="113-113"];
m4_61 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobStorage.cs", label="var argument = arguments[i]", span="118-118"];
m4_59 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobStorage.cs", label="i < parameters.Length", span="115-115"];
m4_60 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobStorage.cs", label="var parameter = parameters[i]", span="117-117"];
m4_58 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobStorage.cs", label="var i = 0", span="115-115"];
m4_66 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobStorage.cs", label="result.Add(value)", span="133-133"];
m4_68 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobStorage.cs", label="return result.ToArray();", span="136-136"];
m4_67 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobStorage.cs", label="i++", span="115-115"];
m4_63 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobStorage.cs", label="CoreJobPerformanceProcess.Substitutions.ContainsKey(parameter.ParameterType)", span="122-122"];
m4_64 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobStorage.cs", label="value = parameter.ParameterType.IsValueType\r\n                        ? Activator.CreateInstance(parameter.ParameterType)\r\n                        : null", span="124-126"];
m4_65 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobStorage.cs", label="value = DeserializeArgument(argument, parameter.ParameterType)", span="130-130"];
m4_62 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobStorage.cs", label="object value", span="120-120"];
m4_69 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="JobStorage.cs", label="Exit Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", span="110-110"];
m4_71 [cluster="System.Activator.CreateInstance(System.Type)", file="JobStorage.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m4_70 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JobStorage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m4_18 [cluster="System.Type.GetType(string, bool, bool)", file="JobStorage.cs", label="Entry System.Type.GetType(string, bool, bool)", span="0-0"];
m4_72 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobStorage.cs", label="Entry Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", span="139-139"];
m4_73 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobStorage.cs", label="object value", span="141-141"];
m4_74 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobStorage.cs", label="value = argument != null\r\n                    ? JobHelper.FromJson(argument, type)\r\n                    : null", span="144-146"];
m4_76 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobStorage.cs", label="type == typeof (object)", span="150-150"];
m4_77 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobStorage.cs", label="value = argument", span="154-154"];
m4_78 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobStorage.cs", label="var converter = TypeDescriptor.GetConverter(type)", span="160-160"];
m4_79 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobStorage.cs", label="value = converter.ConvertFromInvariantString(argument)", span="161-161"];
m4_75 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobStorage.cs", label=Exception, span="148-148"];
m4_82 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobStorage.cs", label="return value;", span="169-169"];
m4_80 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobStorage.cs", label=Exception, span="163-163"];
m4_81 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobStorage.cs", label="throw jsonException;", span="165-165"];
m4_83 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="JobStorage.cs", label="Exit Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", span="139-139"];
m4_31 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="JobStorage.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="72-72"];
m4_32 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="JobStorage.cs", label="return new InvocationData(\r\n                job.Type.AssemblyQualifiedName,\r\n                job.Method.Name,\r\n                JobHelper.ToJson(job.Method.GetParameters().Select(x => x.ParameterType).ToArray()),\r\n                JobHelper.ToJson(SerializeArguments(job.Args)));", span="74-78"];
m4_33 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="JobStorage.cs", label="Exit Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="72-72"];
m4_35 [cluster="Unk.ToArray", file="JobStorage.cs", label="Entry Unk.ToArray", span=""];
m4_21 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JobStorage.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m4_85 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="JobStorage.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m4_24 [cluster="string.Format(string, object, object, object)", file="JobStorage.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m4_55 [cluster="System.Collections.Generic.List<T>.ToArray()", file="JobStorage.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m4_19 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="JobStorage.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m4_38 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="JobStorage.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m4_36 [cluster="Unk.ToJson", file="JobStorage.cs", label="Entry Unk.ToJson", span=""];
m4_39 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="77-77"];
m4_28 [cluster="lambda expression", file="JobStorage.cs", label="Entry lambda expression", span="58-58"];
m4_29 [cluster="lambda expression", file="JobStorage.cs", label="x.Name", span="58-58"];
m4_30 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="58-58"];
m4_40 [cluster="lambda expression", file="JobStorage.cs", label="x.ParameterType", span="77-77"];
m4_41 [cluster="lambda expression", file="JobStorage.cs", label="Exit lambda expression", span="77-77"];
m4_109 [cluster="string.Equals(string, System.StringComparison)", file="JobStorage.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m4_22 [cluster="Unk.Select", file="JobStorage.cs", label="Entry Unk.Select", span=""];
m4_108 [cluster="System.Type.GetMethods()", file="JobStorage.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m4_52 [cluster="System.Collections.Generic.List<T>.List(int)", file="JobStorage.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m4_84 [cluster="Hangfire.Common.JobHelper.FromJson(string, System.Type)", file="JobStorage.cs", label="Entry Hangfire.Common.JobHelper.FromJson(string, System.Type)", span="46-46"];
m4_27 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="JobStorage.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="32-32"];
m4_54 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JobStorage.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_0 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="JobStorage.cs", label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="30-30"];
m4_1 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="JobStorage.cs", label="Type = type", span="33-33"];
m4_2 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="JobStorage.cs", label="Method = method", span="34-34"];
m4_3 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="JobStorage.cs", label="ParameterTypes = parameterTypes", span="35-35"];
m4_4 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="JobStorage.cs", label="Arguments = arguments", span="36-36"];
m4_5 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="JobStorage.cs", label="Exit Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="30-30"];
m4_86 [cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="JobStorage.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0"];
m4_34 [cluster="System.Reflection.MethodBase.GetParameters()", file="JobStorage.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m4_37 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="JobStorage.cs", label="Entry Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", span="81-81"];
m4_42 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="JobStorage.cs", label="var serializedArguments = new List<string>(arguments.Count)", span="83-83"];
m4_43 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="JobStorage.cs", label=arguments, span="84-84"];
m4_49 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="JobStorage.cs", label="serializedArguments.Add(value)", span="104-104"];
m4_50 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="JobStorage.cs", label="return serializedArguments.ToArray();", span="107-107"];
m4_44 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="JobStorage.cs", label="string value = null", span="86-86"];
m4_45 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="JobStorage.cs", label="argument != null", span="88-88"];
m4_46 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="JobStorage.cs", label="argument is DateTime", span="90-90"];
m4_47 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="JobStorage.cs", label="value = ((DateTime)argument).ToString(''o'', CultureInfo.InvariantCulture)", span="92-92"];
m4_48 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="JobStorage.cs", label="value = JobHelper.ToJson(argument)", span="96-96"];
m4_51 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="JobStorage.cs", label="Exit Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", span="81-81"];
m4_113 [file="JobStorage.cs", label="Hangfire.Storage.InvocationData", span=""];
m5_8 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="ProcessingStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41"];
m5_0 [cluster="HangFire.Redis.ProcessingStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ProcessingStateHandler.cs", label="Entry HangFire.Redis.ProcessingStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="25-25"];
m5_1 [cluster="HangFire.Redis.ProcessingStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ProcessingStateHandler.cs", label="transaction.AddToSet(\r\n                ''processing'',\r\n                context.JobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow))", span="28-31"];
m5_2 [cluster="HangFire.Redis.ProcessingStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ProcessingStateHandler.cs", label="Exit HangFire.Redis.ProcessingStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="25-25"];
m5_3 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ProcessingStateHandler.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39"];
m5_5 [cluster="HangFire.Redis.ProcessingStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ProcessingStateHandler.cs", label="Entry HangFire.Redis.ProcessingStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="34-34"];
m5_6 [cluster="HangFire.Redis.ProcessingStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ProcessingStateHandler.cs", label="transaction.RemoveFromSet(''processing'', context.JobId)", span="37-37"];
m5_7 [cluster="HangFire.Redis.ProcessingStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ProcessingStateHandler.cs", label="Exit HangFire.Redis.ProcessingStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="34-34"];
m5_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="ProcessingStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="40-40"];
m6_45 [cluster="HangFire.Web.RazorPage.Write(object)", file="RedisStorage.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m6_43 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="RedisStorage.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m6_46 [cluster="Unk.GetDescription", file="RedisStorage.cs", label="Entry Unk.GetDescription", span=""];
m6_0 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="Entry HangFire.Web.Pages.RecurringJobsPage.Execute()", span="74-74"];
m6_1 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''\r\n'')", span="78-78"];
m6_2 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="Layout = new LayoutPage { Title = ''Recurring jobs'' }", span="94-94"];
m6_3 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''\r\n'')", span="100-100"];
m6_4 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="RecurringJobs.Count == 0", span="105-105"];
m6_5 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        No recurring jobs found.\r\n    </div>\r'' +\r\n''\n'')", span="111-112"];
m6_6 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(@''    <table class=''''table''''>\r\n        <thead>\r\n            <tr>\r\n                <th class=''''min-width''''>Id</th>\r\n                <th class=''''min-width''''>Cron</th>\r\n                <th>Job</th>\r\n                <th class=''''align-right min-width''''>Next execution</th>\r\n                <th class=''''align-right min-width''''>Last execution</th>\r\n                <th class=''''align-right min-width''''>Last job</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="124-136"];
m6_7 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label=RecurringJobs, span="141-141"];
m6_8 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''                <tr>\r\n                    <td>'')", span="147-147"];
m6_41 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="358-358"];
m6_9 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="Write(job.Id)", span="152-152"];
m6_11 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="Write(CronExpressionDescriptor.ExpressionDescriptor.GetDescription(job.Cron))", span="162-162"];
m6_13 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="Write(HtmlHelper.DisplayMethod(job.Job))", span="172-172"];
m6_15 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="job.NextExecution != null", span="182-182"];
m6_17 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="Write(JobHelper.ToStringTimestamp(job.NextExecution.Value))", span="193-193"];
m6_19 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="Write(job.NextExecution.Value)", span="203-203"];
m6_23 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="job.LastExecution != null", span="236-236"];
m6_25 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="Write(JobHelper.ToStringTimestamp(job.LastExecution.Value))", span="247-247"];
m6_27 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="Write(job.LastExecution.Value)", span="257-257"];
m6_31 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="job.LastJobId != null", span="290-290"];
m6_33 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="Write(Request.LinkTo(''/job/'' + job.LastJobId))", span="301-301"];
m6_35 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="Write(JobHistoryRenderer.ForegroundStateColors.ContainsKey(job.LastJobState) ? String.Format(''background-color: {0};'', JobHistoryRenderer.ForegroundStateColors[job.LastJobState]) : null)", span="311-311"];
m6_37 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="Write(job.LastJobState)", span="321-321"];
m6_10 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''</td>\r\n                    <td class=\''min-width\''>'')", span="157-157"];
m6_12 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''</td>\r\n                    <td>'')", span="167-167"];
m6_14 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''</td>\r\n                    <td class=\''align-right min-width\''>\r\n'')", span="177-177"];
m6_16 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''                            <span data-moment=\'''')", span="188-188"];
m6_21 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''                            <em>N/A</em>\r\n'')", span="220-220"];
m6_18 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''\''>\r\n                                '')", span="198-198"];
m6_20 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''\r\n                            </span>\r\n'')", span="208-208"];
m6_22 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''                    </td>\r\n                    <td class=\''align-right min-width\''>'' +\r\n''\r\n'')", span="230-231"];
m6_24 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''                            <span data-moment=\'''')", span="242-242"];
m6_29 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''                            <em>N/A</em>\r\n'')", span="274-274"];
m6_26 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''\''>\r\n                                '')", span="252-252"];
m6_28 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''\r\n                            </span>\r\n'')", span="262-262"];
m6_30 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''                    </td>\r\n                    <td class=\''align-right min-width\''>'' +\r\n''\r\n'')", span="284-285"];
m6_32 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''                            <a href=\'''')", span="296-296"];
m6_39 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''                            <em>N/A</em>\r\n'')", span="338-338"];
m6_34 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''\''>\r\n                                <span class=\''label label-default\'' style=\'''')", span="306-306"];
m6_36 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''\''>\r\n                                    '')", span="316-316"];
m6_38 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''\r\n                                </span>\r\n                            </a>\r\n'')", span="326-326"];
m6_40 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", span="348-348"];
m6_42 [cluster="HangFire.Web.Pages.RecurringJobsPage.Execute()", file="RedisStorage.cs", label="Exit HangFire.Web.Pages.RecurringJobsPage.Execute()", span="74-74"];
m6_44 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="RedisStorage.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m6_48 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="RedisStorage.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m6_50 [cluster="HttpRequestBase.LinkTo(string)", file="RedisStorage.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m6_51 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="RedisStorage.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m6_52 [cluster="string.Format(string, object)", file="RedisStorage.cs", label="Entry string.Format(string, object)", span="0-0"];
m6_49 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RedisStorage.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m6_47 [cluster="Unk.Write", file="RedisStorage.cs", label="Entry Unk.Write", span=""];
m6_53 [file="RedisStorage.cs", label="HangFire.Web.Pages.RecurringJobsPage", span=""];
m7_13 [cluster="Unk.Commit", file="ScheduledState.cs", label="Entry Unk.Commit", span=""];
m7_17 [cluster="Unk.Dispose", file="ScheduledState.cs", label="Entry Unk.Dispose", span=""];
m7_0 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ScheduledState.cs", label="Entry HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", span="9-9"];
m7_1 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ScheduledState.cs", label="_transaction = transaction", span="11-11"];
m7_2 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ScheduledState.cs", label="var storage = new RedisStoredValues(_transaction)", span="13-13"];
m7_3 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ScheduledState.cs", label="Values = storage", span="15-15"];
m7_4 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ScheduledState.cs", label="Sets = storage", span="16-16"];
m7_5 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ScheduledState.cs", label="Lists = storage", span="17-17"];
m7_6 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ScheduledState.cs", label="Queues = storage", span="18-18"];
m7_7 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ScheduledState.cs", label="Jobs = storage", span="19-19"];
m7_8 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="ScheduledState.cs", label="Exit HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", span="9-9"];
m7_14 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", file="ScheduledState.cs", label="Entry HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", span="33-33"];
m7_15 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", file="ScheduledState.cs", label="_transaction.Dispose()", span="35-35"];
m7_16 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", file="ScheduledState.cs", label="Exit HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", span="33-33"];
m7_10 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Commit()", file="ScheduledState.cs", label="Entry HangFire.Redis.RedisAtomicWriteTransaction.Commit()", span="28-28"];
m7_11 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Commit()", file="ScheduledState.cs", label="return _transaction.Commit();", span="30-30"];
m7_12 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Commit()", file="ScheduledState.cs", label="Exit HangFire.Redis.RedisAtomicWriteTransaction.Commit()", span="28-28"];
m7_9 [cluster="HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", file="ScheduledState.cs", label="Entry HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", span="15-15"];
m7_18 [file="ScheduledState.cs", label="HangFire.Redis.RedisAtomicWriteTransaction", span=""];
m8_0 [cluster="HangFire.States.StateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateHandler.cs", label="Entry HangFire.States.StateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="22-22"];
m8_1 [cluster="HangFire.States.StateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateHandler.cs", label="Exit HangFire.States.StateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="22-22"];
m8_2 [cluster="HangFire.States.StateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateHandler.cs", label="Entry HangFire.States.StateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="27-27"];
m8_3 [cluster="HangFire.States.StateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateHandler.cs", label="Exit HangFire.States.StateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="27-27"];
m10_57 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsOnlyHandlersOfASpecifiedState()", file="StateHandlerCollectionFacts.cs", label="Entry HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsOnlyHandlersOfASpecifiedState()", span="69-69"];
m10_59 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsOnlyHandlersOfASpecifiedState()", file="StateHandlerCollectionFacts.cs", label="anotherStateHandlerMock.Setup(x => x.StateName).Returns(''AnotherState'')", span="72-72"];
m10_60 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsOnlyHandlersOfASpecifiedState()", file="StateHandlerCollectionFacts.cs", label="_collection.AddHandler(anotherStateHandlerMock.Object)", span="74-74"];
m10_61 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsOnlyHandlersOfASpecifiedState()", file="StateHandlerCollectionFacts.cs", label="var handlers = _collection.GetHandlers(''State'')", span="75-75"];
m10_62 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsOnlyHandlersOfASpecifiedState()", file="StateHandlerCollectionFacts.cs", label="Assert.Empty(handlers)", span="77-77"];
m10_63 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsOnlyHandlersOfASpecifiedState()", file="StateHandlerCollectionFacts.cs", label="Exit HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsOnlyHandlersOfASpecifiedState()", span="69-69"];
m10_44 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsAllRegisteredHandlersForTheState()", file="StateHandlerCollectionFacts.cs", label="_collection.AddHandler(handler1Mock.Object)", span="59-59"];
m10_39 [cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="StateHandlerCollectionFacts.cs", label="command.CommandTimeout = CommandTimeout.Value", span="105-105"];
m10_41 [cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="StateHandlerCollectionFacts.cs", label="Exit Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", span="75-75"];
m10_47 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsAllRegisteredHandlersForTheState()", file="StateHandlerCollectionFacts.cs", label="Assert.Contains(handler1Mock.Object, handlers)", span="64-64"];
m10_43 [cluster="Hangfire.SqlServer.SqlCommandSet.ExecuteNonQuery()", file="StateHandlerCollectionFacts.cs", label="Entry Hangfire.SqlServer.SqlCommandSet.ExecuteNonQuery()", span="97-97"];
m10_45 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsAllRegisteredHandlersForTheState()", file="StateHandlerCollectionFacts.cs", label="Hangfire.SqlServer.SqlCommandBatch", span=""];
m10_48 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsAllRegisteredHandlersForTheState()", file="StateHandlerCollectionFacts.cs", label="Assert.Contains(handler2Mock.Object, handlers)", span="65-65"];
m10_46 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsAllRegisteredHandlersForTheState()", file="StateHandlerCollectionFacts.cs", label="var handlers = _collection.GetHandlers(''State'').ToArray()", span="62-62"];
m10_49 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsAllRegisteredHandlersForTheState()", file="StateHandlerCollectionFacts.cs", label="Exit HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsAllRegisteredHandlersForTheState()", span="51-51"];
m10_22 [cluster="lambda expression", file="StateHandlerCollectionFacts.cs", label="Entry lambda expression", span="28-28"];
m10_12 [cluster="Hangfire.SqlServer.SqlCommandBatch.Append(string, params SqlParameter[])", file="StateHandlerCollectionFacts.cs", label="Append(command)", span="60-60"];
m10_14 [cluster="SqlCommand.cstr", file="StateHandlerCollectionFacts.cs", label="Entry SqlCommand.cstr", span=""];
m10_15 [cluster="Unk.Add", file="StateHandlerCollectionFacts.cs", label="Entry Unk.Add", span=""];
m10_16 [cluster="Unk.Append", file="StateHandlerCollectionFacts.cs", label="Entry Unk.Append", span=""];
m10_17 [cluster="Hangfire.SqlServer.SqlCommandBatch.Append(DbCommand)", file="StateHandlerCollectionFacts.cs", label="Entry Hangfire.SqlServer.SqlCommandBatch.Append(DbCommand)", span="63-63"];
m10_7 [cluster="Hangfire.SqlServer.SqlCommandSet.SqlCommandSet()", file="StateHandlerCollectionFacts.cs", label="Entry Hangfire.SqlServer.SqlCommandSet.SqlCommandSet()", span="68-68"];
m10_11 [cluster="Hangfire.SqlServer.SqlCommandBatch.Append(string, params SqlParameter[])", file="StateHandlerCollectionFacts.cs", label="command.Parameters.Add(parameter)", span="57-57"];
m10_33 [cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="StateHandlerCollectionFacts.cs", label="_commandSet.BatchCommand.CommandTimeout = batchTimeout", span="94-94"];
m10_0 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.StateHandlerCollectionFacts()", file="StateHandlerCollectionFacts.cs", label="Entry HangFire.Core.Tests.States.StateHandlerCollectionFacts.StateHandlerCollectionFacts()", span="12-12"];
m10_2 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.StateHandlerCollectionFacts()", file="StateHandlerCollectionFacts.cs", label="Exit HangFire.Core.Tests.States.StateHandlerCollectionFacts.StateHandlerCollectionFacts()", span="12-12"];
m10_3 [cluster="HangFire.States.StateHandlerCollection.StateHandlerCollection()", file="StateHandlerCollectionFacts.cs", label="Entry HangFire.States.StateHandlerCollection.StateHandlerCollection()", span="22-22"];
m10_5 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.AddHandler_ThrowsAnException_WhenHandlerIsNull()", file="StateHandlerCollectionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => _collection.AddHandler(null))", span="20-21"];
m10_1 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.StateHandlerCollectionFacts()", file="StateHandlerCollectionFacts.cs", label="_collection = new StateHandlerCollection()", span="14-14"];
m10_4 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.AddHandler_ThrowsAnException_WhenHandlerIsNull()", file="StateHandlerCollectionFacts.cs", label="Entry HangFire.Core.Tests.States.StateHandlerCollectionFacts.AddHandler_ThrowsAnException_WhenHandlerIsNull()", span="18-18"];
m10_6 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.AddHandler_ThrowsAnException_WhenHandlerIsNull()", file="StateHandlerCollectionFacts.cs", label="Exit HangFire.Core.Tests.States.StateHandlerCollectionFacts.AddHandler_ThrowsAnException_WhenHandlerIsNull()", span="18-18"];
m10_8 [cluster="lambda expression", file="StateHandlerCollectionFacts.cs", label="Entry lambda expression", span="21-21"];
m10_9 [cluster="lambda expression", color=green, community=0, file="StateHandlerCollectionFacts.cs", label="_collection.AddHandler(null)", prediction=18, span="21-21"];
m10_10 [cluster="lambda expression", file="StateHandlerCollectionFacts.cs", label="Exit lambda expression", span="21-21"];
m10_24 [cluster="lambda expression", file="StateHandlerCollectionFacts.cs", label="Exit lambda expression", span="28-28"];
m10_25 [cluster="lambda expression", file="StateHandlerCollectionFacts.cs", label="Entry lambda expression", span="31-31"];
m10_26 [cluster="lambda expression", file="StateHandlerCollectionFacts.cs", label="_collection.AddHandler(handler.Object)", span="31-31"];
m10_27 [cluster="lambda expression", file="StateHandlerCollectionFacts.cs", label="Exit lambda expression", span="31-31"];
m10_28 [cluster="Unk.AddHandler", file="StateHandlerCollectionFacts.cs", label="Entry Unk.AddHandler", span=""];
m10_30 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsEmptyCollection_WhenHandlersWereNotAddedForTheState()", file="StateHandlerCollectionFacts.cs", label="var handlers = _collection.GetHandlers(''State'')", span="39-39"];
m10_31 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsEmptyCollection_WhenHandlersWereNotAddedForTheState()", file="StateHandlerCollectionFacts.cs", label="Assert.Empty(handlers)", span="40-40"];
m10_32 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsEmptyCollection_WhenHandlersWereNotAddedForTheState()", file="StateHandlerCollectionFacts.cs", label="Exit HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsEmptyCollection_WhenHandlersWereNotAddedForTheState()", span="37-37"];
m10_34 [cluster="Unk.Empty", file="StateHandlerCollectionFacts.cs", label="Entry Unk.Empty", span=""];
m10_35 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsEmptyCollection_WhenStateNameIsNull()", file="StateHandlerCollectionFacts.cs", label="Entry HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsEmptyCollection_WhenStateNameIsNull()", span="44-44"];
m10_36 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsEmptyCollection_WhenStateNameIsNull()", file="StateHandlerCollectionFacts.cs", label="var handlers = _collection.GetHandlers(null)", span="46-46"];
m10_37 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsEmptyCollection_WhenStateNameIsNull()", file="StateHandlerCollectionFacts.cs", label="Assert.Empty(handlers)", span="47-47"];
m10_38 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsEmptyCollection_WhenStateNameIsNull()", file="StateHandlerCollectionFacts.cs", label="Exit HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsEmptyCollection_WhenStateNameIsNull()", span="44-44"];
m10_29 [cluster="HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsEmptyCollection_WhenHandlersWereNotAddedForTheState()", file="StateHandlerCollectionFacts.cs", label="Entry HangFire.Core.Tests.States.StateHandlerCollectionFacts.GetHandlers_ReturnsEmptyCollection_WhenHandlersWereNotAddedForTheState()", span="37-37"];
m10_18 [cluster="Hangfire.SqlServer.SqlCommandBatch.Append(DbCommand)", file="StateHandlerCollectionFacts.cs", label="_commandSet != null && command is SqlCommand", span="65-65"];
m10_19 [cluster="Hangfire.SqlServer.SqlCommandBatch.Append(DbCommand)", file="StateHandlerCollectionFacts.cs", label="_commandSet.Append((SqlCommand)command)", span="67-67"];
m10_64 [cluster="lambda expression", file="StateHandlerCollectionFacts.cs", label="Entry lambda expression", span="72-72"];
m10_23 [cluster="System.Collections.Generic.List<T>.Add(T)", file="StateHandlerCollectionFacts.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m10_51 [cluster="lambda expression", file="StateHandlerCollectionFacts.cs", label="Entry lambda expression", span="54-54"];
m10_54 [cluster="lambda expression", file="StateHandlerCollectionFacts.cs", label="Entry lambda expression", span="57-57"];
m10_52 [cluster="lambda expression", file="StateHandlerCollectionFacts.cs", label="x.StateName", span="54-54"];
m10_53 [cluster="lambda expression", file="StateHandlerCollectionFacts.cs", label="Exit lambda expression", span="54-54"];
m10_55 [cluster="lambda expression", file="StateHandlerCollectionFacts.cs", label="x.StateName", span="57-57"];
m10_56 [cluster="lambda expression", file="StateHandlerCollectionFacts.cs", label="Exit lambda expression", span="57-57"];
m10_65 [cluster="lambda expression", file="StateHandlerCollectionFacts.cs", label="x.StateName", span="72-72"];
m10_66 [cluster="lambda expression", file="StateHandlerCollectionFacts.cs", label="Exit lambda expression", span="72-72"];
m10_21 [cluster="Hangfire.SqlServer.SqlCommandBatch.Append(DbCommand)", file="StateHandlerCollectionFacts.cs", label="Exit Hangfire.SqlServer.SqlCommandBatch.Append(DbCommand)", span="63-63"];
m10_20 [cluster="Unk.Returns", color=green, community=0, file="StateHandlerCollectionFacts.cs", label="Entry Unk.Returns", prediction=19, span=""];
m10_50 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="StateHandlerCollectionFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m10_67 [file="StateHandlerCollectionFacts.cs", label="HangFire.Core.Tests.States.StateHandlerCollectionFacts", span=""];
m10_68 [file="StateHandlerCollectionFacts.cs", label=handler, span=""];
m11_0 [cluster="HangFire.States.StateHandlerProviderCollection.GetHandlers()", file="StateHandlerProviders.cs", label="Entry HangFire.States.StateHandlerProviderCollection.GetHandlers()", span="22-22"];
m11_1 [cluster="HangFire.States.StateHandlerProviderCollection.GetHandlers()", color=green, community=0, file="StateHandlerProviders.cs", label="return null;", prediction=20, span="24-24"];
m11_2 [cluster="HangFire.States.StateHandlerProviderCollection.GetHandlers()", file="StateHandlerProviders.cs", label="Exit HangFire.States.StateHandlerProviderCollection.GetHandlers()", span="22-22"];
m14_8 [cluster="Hangfire.JobStorage.GetConnection()", file="SucceededState.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m14_0 [cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", file="SucceededState.cs", label="Entry Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", span="26-26"];
m14_1 [cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", file="SucceededState.cs", label="_heartbeatInterval = heartbeatInterval", span="28-28"];
m14_2 [cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", file="SucceededState.cs", label="Exit Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", span="26-26"];
m14_3 [cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", file="SucceededState.cs", label="Entry Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", span="31-31"];
m14_4 [cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", file="SucceededState.cs", label="var connection = context.Storage.GetConnection()", span="33-33"];
m14_5 [cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", file="SucceededState.cs", label="connection.Heartbeat(context.ServerId)", span="35-35"];
m14_6 [cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", file="SucceededState.cs", label="context.Sleep(_heartbeatInterval)", span="38-38"];
m14_7 [cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", file="SucceededState.cs", label="Exit Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", span="31-31"];
m14_10 [cluster="Hangfire.Server.BackgroundProcessContext.Sleep(System.TimeSpan)", file="SucceededState.cs", label="Entry Hangfire.Server.BackgroundProcessContext.Sleep(System.TimeSpan)", span="23-23"];
m14_11 [cluster="Hangfire.Server.ServerHeartbeat.ToString()", file="SucceededState.cs", label="Entry Hangfire.Server.ServerHeartbeat.ToString()", span="41-41"];
m14_12 [cluster="Hangfire.Server.ServerHeartbeat.ToString()", file="SucceededState.cs", label="return GetType().Name;", span="43-43"];
m14_13 [cluster="Hangfire.Server.ServerHeartbeat.ToString()", file="SucceededState.cs", label="Exit Hangfire.Server.ServerHeartbeat.ToString()", span="41-41"];
m14_14 [cluster="object.GetType()", file="SucceededState.cs", label="Entry object.GetType()", span="0-0"];
m14_9 [cluster="Hangfire.Storage.IStorageConnection.Heartbeat(string)", file="SucceededState.cs", label="Entry Hangfire.Storage.IStorageConnection.Heartbeat(string)", span="49-49"];
m14_15 [file="SucceededState.cs", label="Hangfire.Server.ServerHeartbeat", span=""];
m15_2 [cluster="HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="9-9"];
m15_3 [cluster="HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="SucceededStateHandler.cs", label="Exit HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="9-9"];
m15_6 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17"];
m15_7 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SucceededStateHandler.cs", label="Exit HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17"];
m15_0 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
m15_1 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="SucceededStateHandler.cs", label="Exit HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
m15_12 [cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IStorageConnection.Heartbeat(string)", span="25-25"];
m15_13 [cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="SucceededStateHandler.cs", label="Exit HangFire.Storage.IStorageConnection.Heartbeat(string)", span="25-25"];
m15_8 [cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="23-23"];
m15_9 [cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SucceededStateHandler.cs", label="Exit HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="23-23"];
m15_4 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11"];
m15_5 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="SucceededStateHandler.cs", label="Exit HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11"];
m15_10 [cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IStorageConnection.RemoveServer(string)", span="24-24"];
m15_11 [cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="SucceededStateHandler.cs", label="Exit HangFire.Storage.IStorageConnection.RemoveServer(string)", span="24-24"];
m15_14 [cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="SucceededStateHandler.cs", label="Entry HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="26-26"];
m15_15 [cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="SucceededStateHandler.cs", label="Exit HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="26-26"];
m0_35 -> m0_37  [color=darkseagreen4, key=1, label=handler, style=dashed];
m0_35 -> m0_42  [color=darkseagreen4, key=1, label=handler, style=dashed];
m0_36 -> m0_42  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_37 -> m0_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1 -> m0_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_26 -> m0_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_45 -> m0_50  [color=green, key=1, label=handler, style=dashed];
m0_46 -> m0_49  [color=green, key=1, label="lambda expression", style=dashed];
m0_56 -> m0_50  [color=green, key=1, label=handler, style=dashed];
m0_53 -> m0_25  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts", style=dashed];
m0_53 -> m0_37  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts", style=dashed];
m0_53 -> m0_42  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts", style=dashed];
m0_53 -> m0_26  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts", style=dashed];
m0_54 -> m0_42  [color=darkseagreen4, key=1, label=handler, style=dashed];
m0_55 -> m0_42  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_7 -> m3_9  [color=green, key=1, label=string, style=dashed];
m3_16 -> m3_18  [color=green, key=1, label=string, style=dashed];
m3_44 -> m3_46  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_7 -> m4_11  [color=darkseagreen4, key=1, label=type, style=dashed];
m4_8 -> m4_11  [color=darkseagreen4, key=1, label=parameterTypes, style=dashed];
m4_11 -> m4_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_20 -> m4_89  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_20 -> m4_91  [color=darkseagreen4, key=1, label="System.Type[]", style=dashed];
m4_98 -> m4_100  [color=darkseagreen4, key=1, label=actualType, style=dashed];
m4_98 -> m4_101  [color=darkseagreen4, key=1, label=actualType, style=dashed];
m4_88 -> m4_105  [color=darkseagreen4, key=1, label=methodCandidate, style=dashed];
m4_90 -> m4_95  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m4_92 -> m4_104  [color=darkseagreen4, key=1, label=parameterTypesMatched, style=dashed];
m4_93 -> m4_100  [color=darkseagreen4, key=1, label=genericArguments, style=dashed];
m4_93 -> m4_105  [color=darkseagreen4, key=1, label=genericArguments, style=dashed];
m4_94 -> m4_103  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_103 -> m4_103  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_97 -> m4_99  [color=darkseagreen4, key=1, label=parameterType, style=dashed];
m4_97 -> m4_101  [color=darkseagreen4, key=1, label=parameterType, style=dashed];
m4_56 -> m4_59  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m4_57 -> m4_66  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_57 -> m4_68  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_60 -> m4_63  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m4_58 -> m4_67  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_67 -> m4_67  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_72 -> m4_76  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_32 -> m4_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_37 -> m4_43  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyCollection<object>", style=dashed];
m4_42 -> m4_49  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m4_42 -> m4_50  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m4_43 -> m4_45  [color=darkseagreen4, key=1, label=argument, style=dashed];
m4_43 -> m4_46  [color=darkseagreen4, key=1, label=argument, style=dashed];
m4_44 -> m4_49  [color=darkseagreen4, key=1, label=value, style=dashed];
m4_113 -> m4_11  [color=darkseagreen4, key=1, label="Hangfire.Storage.InvocationData", style=dashed];
m6_7 -> m6_9  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_7 -> m6_11  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_7 -> m6_13  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_7 -> m6_15  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_7 -> m6_17  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_7 -> m6_19  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_7 -> m6_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_7 -> m6_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_7 -> m6_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_7 -> m6_31  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_7 -> m6_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_7 -> m6_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_7 -> m6_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_53 -> m6_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_3  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_6  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m6_53 -> m6_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m7_18 -> m7_11  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisAtomicWriteTransaction", style=dashed];
m7_18 -> m7_15  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisAtomicWriteTransaction", style=dashed];
m10_59 -> m10_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_41 -> m10_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_43 -> m10_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_45 -> m10_20  [color=green, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m10_45 -> m10_12  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m10_45 -> m10_2  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m10_45 -> m10_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m10_45 -> m10_5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m10_45 -> m10_18  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m10_45 -> m10_19  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m10_45 -> m10_25  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m10_45 -> m10_26  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m10_45 -> m10_27  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m10_45 -> m10_31  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m10_45 -> m10_32  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m10_45 -> m10_34  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m10_45 -> m10_35  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m10_45 -> m10_37  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m10_45 -> m10_38  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlCommandBatch", style=dashed];
m10_46 -> m10_48  [color=darkseagreen4, key=1, label=handlers, style=dashed];
m10_14 -> m10_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_15 -> m10_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_17 -> m10_20  [color=green, key=1, label=DbCommand, style=dashed];
m10_17 -> m10_19  [color=darkseagreen4, key=1, label=DbCommand, style=dashed];
m10_5 -> m10_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_8 -> m10_10  [color=darkseagreen4, key=1, label="params SqlParameter[]", style=dashed];
m10_9 -> m10_11  [color=green, key=1, label=command, style=dashed];
m10_9 -> m10_12  [color=green, key=1, label=command, style=dashed];
m10_30 -> m10_32  [color=darkseagreen4, key=1, label=batchTimeout, style=dashed];
m10_32 -> m10_32  [color=darkseagreen4, key=1, label=batchTimeout, style=dashed];
m10_37 -> m10_37  [color=darkseagreen4, key=1, label=command, style=dashed];
m10_67 -> m10_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateHandlerCollectionFacts", style=dashed];
m10_67 -> m10_9  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateHandlerCollectionFacts", style=dashed];
m10_67 -> m10_15  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateHandlerCollectionFacts", style=dashed];
m10_67 -> m10_26  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateHandlerCollectionFacts", style=dashed];
m10_67 -> m10_44  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateHandlerCollectionFacts", style=dashed];
m10_67 -> m10_45  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateHandlerCollectionFacts", style=dashed];
m10_67 -> m10_60  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateHandlerCollectionFacts", style=dashed];
m10_68 -> m10_26  [color=darkseagreen4, key=1, label=handler, style=dashed];
m14_3 -> m14_5  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m14_3 -> m14_6  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m14_15 -> m14_6  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerHeartbeat", style=dashed];
m14_15 -> m14_12  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerHeartbeat", style=dashed];
}
