digraph  {
n0 [label="Entry Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", span="35-35", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)"];
n1 [label="app == null", span="39-39", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)"];
n3 [label="configurationAction == null", span="40-40", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)"];
n6 [label="configurationAction(configuration)", span="43-43", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)"];
n14 [label="app.RunHangfireServer(server())", span="62-62", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)"];
n15 [label="app.MapHangfireDashboard(configuration.DashboardPath, configuration.AppPath, configuration.AuthorizationFilters)", span="65-65", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)"];
n2 [label="throw new ArgumentNullException(''app'');", span="39-39", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)"];
n4 [label="throw new ArgumentNullException(''configurationAction'');", span="40-40", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)"];
n5 [label="var configuration = new BootstrapperConfiguration()", span="42-42", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)"];
n18 [label="Entry Hangfire.BootstrapperConfiguration.BootstrapperConfiguration()", span="25-25", cluster="Hangfire.BootstrapperConfiguration.BootstrapperConfiguration()"];
n7 [label="configuration.Activator != null", span="45-45", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)"];
n8 [label="JobActivator.Current = configuration.Activator", span="47-47", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)"];
n9 [label="configuration.Storage != null", span="50-50", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)"];
n10 [label="JobStorage.Current = configuration.Storage", span="52-52", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)"];
n11 [label="configuration.Filters", span="55-55", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)"];
n13 [label="configuration.Servers", span="60-60", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)"];
n19 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)"];
n12 [label="GlobalJobFilters.Filters.Add(filter)", span="57-57", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)"];
n20 [label="Entry Hangfire.Common.JobFilterCollection.Add(object)", span="56-56", cluster="Hangfire.Common.JobFilterCollection.Add(object)"];
n21 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()"];
n22 [label="Entry IAppBuilder.RunHangfireServer(Hangfire.BackgroundJobServer)", span="39-39", cluster="IAppBuilder.RunHangfireServer(Hangfire.BackgroundJobServer)"];
n16 [label="Exit Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", span="35-35", cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)"];
n17 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n23 [label="Entry IAppBuilder.MapHangfireDashboard(string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="89-89", cluster="IAppBuilder.MapHangfireDashboard(string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)"];
m0_40 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="HtmlHelper.cs"];
m0_20 [label="Entry string.Replace(char, char)", span="0-0", cluster="string.Replace(char, char)", file="HtmlHelper.cs"];
m0_21 [label="Entry Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", span="40-40", cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", file="HtmlHelper.cs"];
m0_22 [label="var genericArguments = type .GetTypeInfo().GetAllGenericArguments()", span="42-42", cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", file="HtmlHelper.cs"];
m0_25 [label="typeName = rgx.Replace(typeName, match =>\r\n            {\r\n                var currentGenericArgumentNumbers = int.Parse(match.Value.Substring(1));\r\n                var currentArguments = string.Join('','', genericArguments.Take(currentGenericArgumentNumbers).Select(ToGenericTypeString));\r\n                genericArguments = genericArguments.Skip(currentGenericArgumentNumbers).ToArray();\r\n                return string.Concat(''<'', currentArguments, ''>'');\r\n            })", span="48-54", cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", file="HtmlHelper.cs"];
m0_23 [label="string regexForGenericArguments = @''`[1-9]\d*''", span="44-44", cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", file="HtmlHelper.cs"];
m0_24 [label="var rgx = new Regex(regexForGenericArguments)", span="46-46", cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", file="HtmlHelper.cs"];
m0_26 [label="return typeName;", span="56-56", cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", file="HtmlHelper.cs"];
m0_27 [label="Exit Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", span="40-40", cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", file="HtmlHelper.cs"];
m0_6 [label="Entry System.Type.GetFullNameWithoutNamespace()", span="23-23", cluster="System.Type.GetFullNameWithoutNamespace()", file="HtmlHelper.cs"];
m0_17 [label="Entry Hangfire.Common.TypeExtensions.ReplacePlusWithDotInNestedTypeName(string)", span="35-35", cluster="Hangfire.Common.TypeExtensions.ReplacePlusWithDotInNestedTypeName(string)", file="HtmlHelper.cs"];
m0_18 [label="return typeName.Replace('+', '.');", span="37-37", cluster="Hangfire.Common.TypeExtensions.ReplacePlusWithDotInNestedTypeName(string)", file="HtmlHelper.cs"];
m0_19 [label="Exit Hangfire.Common.TypeExtensions.ReplacePlusWithDotInNestedTypeName(string)", span="35-35", cluster="Hangfire.Common.TypeExtensions.ReplacePlusWithDotInNestedTypeName(string)", file="HtmlHelper.cs"];
m0_37 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="HtmlHelper.cs"];
m0_28 [label="Entry System.Reflection.TypeInfo.GetAllGenericArguments()", span="59-59", cluster="System.Reflection.TypeInfo.GetAllGenericArguments()", file="HtmlHelper.cs"];
m0_16 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="HtmlHelper.cs"];
m0_9 [label="Entry string.ReplaceGenericParametersInGenericTypeName(System.Type)", span="40-40", cluster="string.ReplaceGenericParametersInGenericTypeName(System.Type)", file="HtmlHelper.cs"];
m0_38 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="HtmlHelper.cs"];
m0_0 [label="Entry Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", span="9-9", cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="HtmlHelper.cs"];
m0_1 [label="!type.GetTypeInfo().IsGenericType", span="11-11", cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="HtmlHelper.cs"];
m0_2 [label="return type.GetFullNameWithoutNamespace()\r\n                        .ReplacePlusWithDotInNestedTypeName();", span="13-14", cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="HtmlHelper.cs"];
m0_3 [label="return type.GetGenericTypeDefinition()\r\n                    .GetFullNameWithoutNamespace()\r\n                    .ReplacePlusWithDotInNestedTypeName()\r\n                    .ReplaceGenericParametersInGenericTypeName(type);", span="17-20", cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="HtmlHelper.cs"];
m0_4 [label="Exit Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", span="9-9", cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="HtmlHelper.cs"];
m0_31 [label="Entry lambda expression", span="48-54", cluster="lambda expression", file="HtmlHelper.cs"];
m0_33 [label="var currentArguments = string.Join('','', genericArguments.Take(currentGenericArgumentNumbers).Select(ToGenericTypeString))", span="51-51", cluster="lambda expression", file="HtmlHelper.cs"];
m0_34 [label="genericArguments = genericArguments.Skip(currentGenericArgumentNumbers).ToArray()", span="52-52", cluster="lambda expression", file="HtmlHelper.cs"];
m0_32 [label="var currentGenericArgumentNumbers = int.Parse(match.Value.Substring(1))", span="50-50", cluster="lambda expression", file="HtmlHelper.cs"];
m0_35 [label="return string.Concat(''<'', currentArguments, ''>'');", span="53-53", cluster="lambda expression", file="HtmlHelper.cs"];
m0_36 [label="Exit lambda expression", span="48-54", cluster="lambda expression", file="HtmlHelper.cs"];
m0_5 [label="Entry System.Type.GetTypeInfo()", span="0-0", cluster="System.Type.GetTypeInfo()", file="HtmlHelper.cs"];
m0_39 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="HtmlHelper.cs"];
m0_30 [label="Entry Unk.Replace", span="", cluster="Unk.Replace", file="HtmlHelper.cs"];
m0_7 [label="Entry string.ReplacePlusWithDotInNestedTypeName()", span="35-35", cluster="string.ReplacePlusWithDotInNestedTypeName()", file="HtmlHelper.cs"];
m0_43 [label="Entry string.Concat(string, string, string)", span="0-0", cluster="string.Concat(string, string, string)", file="HtmlHelper.cs"];
m0_8 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="HtmlHelper.cs"];
m0_10 [label="Entry Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", span="23-23", cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", file="HtmlHelper.cs"];
m0_11 [label="type.IsGenericParameter", span="25-25", cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", file="HtmlHelper.cs"];
m0_12 [label="return type.Name;", span="27-27", cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", file="HtmlHelper.cs"];
m0_14 [label="return type.FullName.Substring(type.Namespace.Length + dotLength);", span="32-32", cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", file="HtmlHelper.cs"];
m0_13 [label="int dotLength = 1", span="30-30", cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", file="HtmlHelper.cs"];
m0_15 [label="Exit Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", span="23-23", cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", file="HtmlHelper.cs"];
m0_29 [label="Entry System.Text.RegularExpressions.Regex.Regex(string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Regex(string)", file="HtmlHelper.cs"];
m0_44 [label="Entry Hangfire.Common.TypeExtensions.GetAllGenericArguments(System.Reflection.TypeInfo)", span="59-59", cluster="Hangfire.Common.TypeExtensions.GetAllGenericArguments(System.Reflection.TypeInfo)", file="HtmlHelper.cs"];
m0_45 [label="return type.GenericTypeArguments.Length > 0 ? type.GenericTypeArguments : type.GenericTypeParameters;", span="61-61", cluster="Hangfire.Common.TypeExtensions.GetAllGenericArguments(System.Reflection.TypeInfo)", file="HtmlHelper.cs"];
m0_46 [label="Exit Hangfire.Common.TypeExtensions.GetAllGenericArguments(System.Reflection.TypeInfo)", span="59-59", cluster="Hangfire.Common.TypeExtensions.GetAllGenericArguments(System.Reflection.TypeInfo)", file="HtmlHelper.cs"];
m0_42 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="HtmlHelper.cs"];
m0_41 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="HtmlHelper.cs"];
m0_47 [label=genericArguments, span="", file="HtmlHelper.cs"];
m2_13 [label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0", cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="Metric.cs"];
m2_8 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="Metric.cs"];
m2_14 [label="Entry HangFire.Common.ExpressionUtil.CachedExpressionCompiler.Process<TModel, TValue>(System.Linq.Expressions.Expression<System.Func<TModel, TValue>>)", span="19-19", cluster="HangFire.Common.ExpressionUtil.CachedExpressionCompiler.Process<TModel, TValue>(System.Linq.Expressions.Expression<System.Func<TModel, TValue>>)", file="Metric.cs"];
m2_0 [label="Entry HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", span="25-25", cluster="HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="Metric.cs"];
m2_1 [label="arg == null", span="27-27", cluster="HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="Metric.cs", color=green, community=0];
m2_3 [label="Func<object, object> func = Wrap(arg)", span="32-32", cluster="HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="Metric.cs"];
m2_2 [label="throw new ArgumentNullException(''arg'');", span="29-29", cluster="HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="Metric.cs", color=green, community=0];
m2_4 [label="return func(null);", span="33-33", cluster="HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="Metric.cs"];
m2_5 [label="Exit HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", span="25-25", cluster="HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="Metric.cs"];
m2_7 [label="Entry HangFire.Common.CachedExpressionCompiler.Wrap(System.Linq.Expressions.Expression)", span="36-36", cluster="HangFire.Common.CachedExpressionCompiler.Wrap(System.Linq.Expressions.Expression)", file="Metric.cs"];
m2_9 [label="var lambdaExpr = Expression.Lambda<Func<object, object>>(Expression.Convert(arg, typeof(object)), UnusedParameterExpr)", span="38-38", cluster="HangFire.Common.CachedExpressionCompiler.Wrap(System.Linq.Expressions.Expression)", file="Metric.cs"];
m2_10 [label="return ExpressionUtil.CachedExpressionCompiler.Process(lambdaExpr);", span="39-39", cluster="HangFire.Common.CachedExpressionCompiler.Wrap(System.Linq.Expressions.Expression)", file="Metric.cs"];
m2_11 [label="Exit HangFire.Common.CachedExpressionCompiler.Wrap(System.Linq.Expressions.Expression)", span="36-36", cluster="HangFire.Common.CachedExpressionCompiler.Wrap(System.Linq.Expressions.Expression)", file="Metric.cs"];
m2_12 [label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0", cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="Metric.cs"];
m4_34 [label="Entry Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="120-120", cluster="Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="SqlServerConnection.cs"];
m4_20 [label="Entry Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="105-105", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="SqlServerConnection.cs"];
m4_21 [label="var client = ClientFactory()", span="107-107", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="SqlServerConnection.cs"];
m4_22 [label="return client.Schedule(methodCall, enqueueAt);", span="108-108", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="SqlServerConnection.cs"];
m4_23 [label="Exit Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="105-105", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="SqlServerConnection.cs"];
m4_64 [label="Entry Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="288-288", cluster="Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="SqlServerConnection.cs"];
m4_45 [label="Entry Hangfire.BackgroundJob.Requeue(string)", span="178-178", cluster="Hangfire.BackgroundJob.Requeue(string)", file="SqlServerConnection.cs"];
m4_46 [label="var client = ClientFactory()", span="180-180", cluster="Hangfire.BackgroundJob.Requeue(string)", file="SqlServerConnection.cs"];
m4_47 [label="return client.Requeue(jobId);", span="181-181", cluster="Hangfire.BackgroundJob.Requeue(string)", file="SqlServerConnection.cs"];
m4_48 [label="Exit Hangfire.BackgroundJob.Requeue(string)", span="178-178", cluster="Hangfire.BackgroundJob.Requeue(string)", file="SqlServerConnection.cs"];
m4_59 [label="Entry Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", span="273-273", cluster="Hangfire.IBackgroundJobClient.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="SqlServerConnection.cs"];
m4_24 [label="Entry Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", span="84-84", cluster="Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.DateTimeOffset)", file="SqlServerConnection.cs"];
m4_3 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", span="48-48", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", file="SqlServerConnection.cs"];
m4_35 [label="Entry Hangfire.BackgroundJob.Delete(string)", span="149-149", cluster="Hangfire.BackgroundJob.Delete(string)", file="SqlServerConnection.cs"];
m4_36 [label="var client = ClientFactory()", span="151-151", cluster="Hangfire.BackgroundJob.Delete(string)", file="SqlServerConnection.cs"];
m4_37 [label="return client.Delete(jobId);", span="152-152", cluster="Hangfire.BackgroundJob.Delete(string)", file="SqlServerConnection.cs"];
m4_38 [label="Exit Hangfire.BackgroundJob.Delete(string)", span="149-149", cluster="Hangfire.BackgroundJob.Delete(string)", file="SqlServerConnection.cs"];
m4_9 [label="Entry Hangfire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="36-36", cluster="Hangfire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="SqlServerConnection.cs"];
m4_60 [label="Entry Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="206-206", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="SqlServerConnection.cs"];
m4_61 [label="var client = ClientFactory()", span="208-208", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="SqlServerConnection.cs"];
m4_62 [label="return client.ContinueWith(parentId, methodCall, options);", span="209-209", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="SqlServerConnection.cs"];
m4_63 [label="Exit Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="206-206", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="SqlServerConnection.cs"];
m4_49 [label="Entry Hangfire.IBackgroundJobClient.Requeue(string)", span="249-249", cluster="Hangfire.IBackgroundJobClient.Requeue(string)", file="SqlServerConnection.cs"];
m4_54 [label="Entry Hangfire.IBackgroundJobClient.Requeue(string, string)", span="265-265", cluster="Hangfire.IBackgroundJobClient.Requeue(string, string)", file="SqlServerConnection.cs"];
m4_39 [label="Entry Hangfire.IBackgroundJobClient.Delete(string)", span="204-204", cluster="Hangfire.IBackgroundJobClient.Delete(string)", file="SqlServerConnection.cs"];
m4_55 [label="Entry Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", span="200-200", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="SqlServerConnection.cs"];
m4_56 [label="var client = ClientFactory()", span="202-202", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="SqlServerConnection.cs"];
m4_57 [label="return client.ContinueWith(parentId, methodCall);", span="203-203", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="SqlServerConnection.cs"];
m4_58 [label="Exit Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", span="200-200", cluster="Hangfire.BackgroundJob.ContinueWith(string, System.Linq.Expressions.Expression<System.Action>)", file="SqlServerConnection.cs"];
m4_30 [label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="135-135", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="SqlServerConnection.cs"];
m4_31 [label="var client = ClientFactory()", span="137-137", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="SqlServerConnection.cs"];
m4_32 [label="return client.Schedule(methodCall, enqueueAt);", span="138-138", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="SqlServerConnection.cs"];
m4_33 [label="Exit Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="135-135", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="SqlServerConnection.cs"];
m4_0 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_1 [label="new BackgroundJobClient(JobStorage.Current)", span="29-29", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_2 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="SqlServerConnection.cs"];
m4_29 [label="Entry Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="104-104", cluster="Hangfire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="SqlServerConnection.cs"];
m4_50 [label="Entry Hangfire.BackgroundJob.Requeue(string, string)", span="194-194", cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="SqlServerConnection.cs"];
m4_51 [label="var client = ClientFactory()", span="196-196", cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="SqlServerConnection.cs"];
m4_52 [label="return client.Requeue(jobId, fromState);", span="197-197", cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="SqlServerConnection.cs"];
m4_53 [label="Exit Hangfire.BackgroundJob.Requeue(string, string)", span="194-194", cluster="Hangfire.BackgroundJob.Requeue(string, string)", file="SqlServerConnection.cs"];
m4_40 [label="Entry Hangfire.BackgroundJob.Delete(string, string)", span="165-165", cluster="Hangfire.BackgroundJob.Delete(string, string)", file="SqlServerConnection.cs"];
m4_41 [label="var client = ClientFactory()", span="167-167", cluster="Hangfire.BackgroundJob.Delete(string, string)", file="SqlServerConnection.cs"];
m4_42 [label="return client.Delete(jobId, fromState);", span="168-168", cluster="Hangfire.BackgroundJob.Delete(string, string)", file="SqlServerConnection.cs"];
m4_43 [label="Exit Hangfire.BackgroundJob.Delete(string, string)", span="165-165", cluster="Hangfire.BackgroundJob.Delete(string, string)", file="SqlServerConnection.cs"];
m4_15 [label="Entry Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="91-91", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="SqlServerConnection.cs"];
m4_16 [label="var client = ClientFactory()", span="93-93", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="SqlServerConnection.cs"];
m4_17 [label="return client.Schedule(methodCall, delay);", span="94-94", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="SqlServerConnection.cs"];
m4_18 [label="Exit Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="91-91", cluster="Hangfire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="SqlServerConnection.cs"];
m4_4 [label="Entry Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="61-61", cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="SqlServerConnection.cs"];
m4_5 [label="var client = ClientFactory()", span="63-63", cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="SqlServerConnection.cs"];
m4_6 [label="return client.Enqueue(methodCall);", span="64-64", cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="SqlServerConnection.cs"];
m4_7 [label="Exit Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="61-61", cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="SqlServerConnection.cs"];
m4_19 [label="Entry Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="69-69", cluster="Hangfire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="SqlServerConnection.cs"];
m4_10 [label="Entry Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="77-77", cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="SqlServerConnection.cs"];
m4_11 [label="var client = ClientFactory()", span="79-79", cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="SqlServerConnection.cs"];
m4_12 [label="return client.Enqueue(methodCall);", span="80-80", cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="SqlServerConnection.cs"];
m4_13 [label="Exit Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="77-77", cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="SqlServerConnection.cs"];
m4_25 [label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="120-120", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="SqlServerConnection.cs"];
m4_26 [label="var client = ClientFactory()", span="122-122", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="SqlServerConnection.cs"];
m4_27 [label="return client.Schedule(methodCall, delay);", span="123-123", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="SqlServerConnection.cs"];
m4_28 [label="Exit Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="120-120", cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="SqlServerConnection.cs"];
m4_14 [label="Entry Hangfire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="54-54", cluster="Hangfire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="SqlServerConnection.cs"];
m4_44 [label="Entry Hangfire.IBackgroundJobClient.Delete(string, string)", span="233-233", cluster="Hangfire.IBackgroundJobClient.Delete(string, string)", file="SqlServerConnection.cs"];
m5_629 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_CanCreateFieldsWithNullValues(bool)", span="886-886", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_CanCreateFieldsWithNullValues(bool)", file="SqlServerConnectionFacts.cs"];
m5_630 [label="UseConnections((sql, connection) =>\r\n            {\r\n                connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', null }\r\n                });\r\n\r\n                var result = sql.Query(\r\n                        ''select * from HangFire.Hash where [Key] = @key'',\r\n                        new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value);\r\n\r\n                Assert.Equal(null, result[''Key1'']);\r\n            }, useBatching)", span="888-901", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_CanCreateFieldsWithNullValues(bool)", file="SqlServerConnectionFacts.cs"];
m5_631 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_CanCreateFieldsWithNullValues(bool)", span="886-886", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_CanCreateFieldsWithNullValues(bool)", file="SqlServerConnectionFacts.cs"];
m5_427 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="255-255", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnectionFacts.cs"];
m5_699 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="992-992", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_700 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1));\r\n            })", span="994-997", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_701 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="992-992", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_698 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="SqlServerConnectionFacts.cs"];
m5_202 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="45-45", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="SqlServerConnectionFacts.cs"];
m5_95 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", span="118-118", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerConnectionFacts.cs"];
m5_98 [label="var thread = new Thread(\r\n                () => UseConnection(connection1 =>\r\n                {\r\n                    using (connection1.AcquireDistributedLock(''exclusive'', TimeSpan.FromSeconds(5)))\r\n                    {\r\n                        lockAcquired.Set();\r\n                        releaseLock.Wait();\r\n                    }\r\n                }))", span="123-131", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerConnectionFacts.cs"];
m5_101 [label="UseConnection(connection2 =>\r\n            {\r\n                Assert.Throws<DistributedLockTimeoutException>(\r\n                    () =>\r\n                    {\r\n                        using (connection2.AcquireDistributedLock(''exclusive'', TimeSpan.FromSeconds(5)))\r\n                        {\r\n                        }\r\n                    });\r\n            })", span="136-145", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerConnectionFacts.cs"];
m5_96 [label="var releaseLock = new ManualResetEventSlim(false)", span="120-120", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerConnectionFacts.cs"];
m5_97 [label="var lockAcquired = new ManualResetEventSlim(false)", span="121-121", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerConnectionFacts.cs"];
m5_99 [label="thread.Start()", span="132-132", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerConnectionFacts.cs"];
m5_103 [label="thread.Join()", span="148-148", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerConnectionFacts.cs"];
m5_100 [label="lockAcquired.Wait()", span="134-134", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerConnectionFacts.cs"];
m5_102 [label="releaseLock.Set()", span="147-147", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerConnectionFacts.cs"];
m5_104 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", span="118-118", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerConnectionFacts.cs"];
m5_465 [label="Entry Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="315-315", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnectionFacts.cs"];
m5_36 [label="Entry Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="65-65", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnectionFacts.cs"];
m5_4 [label="_providers = new PersistentJobQueueProviderCollection(provider.Object)", span="30-30", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="SqlServerConnectionFacts.cs"];
m5_5 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", span="22-22", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="SqlServerConnectionFacts.cs"];
m5_6 [label="Entry Mock<IPersistentJobQueue>.cstr", span="", cluster="Mock<IPersistentJobQueue>.cstr", file="SqlServerConnectionFacts.cs"];
m5_7 [label="Entry Mock<IPersistentJobQueueProvider>.cstr", span="", cluster="Mock<IPersistentJobQueueProvider>.cstr", file="SqlServerConnectionFacts.cs"];
m5_542 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="760-760", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="SqlServerConnectionFacts.cs"];
m5_543 [label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))))", span="762-763", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="SqlServerConnectionFacts.cs"];
m5_544 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="760-760", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="SqlServerConnectionFacts.cs"];
m5_887 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1307-1307", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="SqlServerConnectionFacts.cs"];
m5_889 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetValueFromHash(''hash-1'', ''field-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(''1'', result);\r\n            })", span="1313-1328", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="SqlServerConnectionFacts.cs"];
m5_888 [label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="1309-1311", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="SqlServerConnectionFacts.cs"];
m5_890 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1307-1307", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="SqlServerConnectionFacts.cs"];
m5_107 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()", file="SqlServerConnectionFacts.cs"];
m5_524 [label="Entry Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="353-353", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnectionFacts.cs"];
m5_428 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="608-608", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="SqlServerConnectionFacts.cs"];
m5_429 [label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)))", span="610-611", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="SqlServerConnectionFacts.cs"];
m5_430 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="608-608", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="SqlServerConnectionFacts.cs"];
m5_816 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1193-1193", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_817 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListCount(''my-list'');\r\n                Assert.Equal(0, result);\r\n            })", span="1195-1199", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_818 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1193-1193", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_744 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="1071-1071", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="SqlServerConnectionFacts.cs"];
m5_746 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                Assert.Equal(12, result);\r\n            })", span="1077-1090", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="SqlServerConnectionFacts.cs"];
m5_745 [label="string arrangeSql = @''\r\ninsert into HangFire.AggregatedCounter ([Key], [Value])\r\nvalues (@key, @value)''", span="1073-1075", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="SqlServerConnectionFacts.cs"];
m5_747 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="1071-1071", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="SqlServerConnectionFacts.cs"];
m5_109 [label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Set()", file="SqlServerConnectionFacts.cs"];
m5_941 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1401-1401", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="SqlServerConnectionFacts.cs"];
m5_943 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromList(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(new [] { ''3'', ''1'' }, result);\r\n            })", span="1407-1422", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="SqlServerConnectionFacts.cs"];
m5_942 [label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], Value)\r\nvalues (@key, @value)''", span="1403-1405", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="SqlServerConnectionFacts.cs"];
m5_944 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1401-1401", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="SqlServerConnectionFacts.cs"];
m5_652 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="299-299", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnectionFacts.cs"];
m5_335 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="456-456", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs"];
m5_336 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="458-464", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs"];
m5_337 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="456-456", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs"];
m5_407 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="572-572", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="SqlServerConnectionFacts.cs"];
m5_409 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single();\r\n\r\n                var value = connection.GetJobParameter(id.ToString(), ''name'');\r\n\r\n                Assert.Equal(''value'', value);\r\n            })", span="583-592", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="SqlServerConnectionFacts.cs"];
m5_408 [label="string arrangeSql = @''\r\ndeclare @id int\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nset @id = scope_identity()\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@id, @name, @value)\r\nselect @id''", span="574-581", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="SqlServerConnectionFacts.cs"];
m5_410 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="572-572", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="SqlServerConnectionFacts.cs"];
m5_986 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="SqlServerConnectionFacts.cs"];
m5_368 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="515-515", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="SqlServerConnectionFacts.cs"];
m5_370 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', null);\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal((string) null, parameter.Value);\r\n            })", span="522-534", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="SqlServerConnectionFacts.cs"];
m5_369 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="517-520", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="SqlServerConnectionFacts.cs"];
m5_371 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="515-515", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="SqlServerConnectionFacts.cs"];
m5_200 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="SqlServerConnectionFacts.cs"];
m5_125 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_Dispose_ReleasesExclusiveApplicationLock()", span="152-152", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_Dispose_ReleasesExclusiveApplicationLock()", file="SqlServerConnectionFacts.cs"];
m5_126 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var distributedLock = connection.AcquireDistributedLock(''hello'', TimeSpan.FromMinutes(5));\r\n                distributedLock.Dispose();\r\n\r\n                var lockMode = sql.Query<string>(\r\n                    ''select applock_mode('public', 'hello', 'session')'').Single();\r\n\r\n                Assert.Equal(''NoLock'', lockMode);\r\n            })", span="154-163", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_Dispose_ReleasesExclusiveApplicationLock()", file="SqlServerConnectionFacts.cs"];
m5_127 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_Dispose_ReleasesExclusiveApplicationLock()", span="152-152", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_Dispose_ReleasesExclusiveApplicationLock()", file="SqlServerConnectionFacts.cs"];
m5_934 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1391-1391", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_935 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromList(''my-list'');\r\n                Assert.Empty(result);\r\n            })", span="1393-1397", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_936 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1391-1391", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_994 [label="Entry SqlServerConnection.cstr", span="", cluster="SqlServerConnection.cstr", file="SqlServerConnectionFacts.cs"];
m5_273 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="329-329", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs"];
m5_274 [label="UseConnection(\r\n                connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null)))", span="331-333", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs"];
m5_275 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="329-329", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs"];
m5_960 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1435-1435", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_961 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetTtl(''my-set'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1437-1441", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_962 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1435-1435", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_906 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="502-502", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnectionFacts.cs"];
m5_514 [label="Entry Unk.NotEqual", span="", cluster="Unk.NotEqual", file="SqlServerConnectionFacts.cs"];
m5_85 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_AcquiresExclusiveApplicationLock_OnSession()", span="103-103", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_AcquiresExclusiveApplicationLock_OnSession()", file="SqlServerConnectionFacts.cs"];
m5_86 [label="UseConnections((sql, connection) =>\r\n            {\r\n                using (connection.AcquireDistributedLock(''hello'', TimeSpan.FromMinutes(5)))\r\n                {\r\n                    var lockMode = sql.Query<string>(\r\n                        ''select applock_mode('public', 'HangFire:hello', 'session')'').Single();\r\n\r\n                    Assert.Equal(''Exclusive'', lockMode);\r\n                }\r\n            })", span="105-114", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_AcquiresExclusiveApplicationLock_OnSession()", file="SqlServerConnectionFacts.cs"];
m5_87 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_AcquiresExclusiveApplicationLock_OnSession()", span="103-103", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_AcquiresExclusiveApplicationLock_OnSession()", file="SqlServerConnectionFacts.cs"];
m5_796 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1158-1158", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="SqlServerConnectionFacts.cs"];
m5_798 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashTtl(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1164-1179", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="SqlServerConnectionFacts.cs"];
m5_797 [label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [ExpireAt])\r\nvalues (@key, @field, @expireAt)''", span="1160-1162", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="SqlServerConnectionFacts.cs"];
m5_799 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1158-1158", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="SqlServerConnectionFacts.cs"];
m5_345 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="468-468", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="SqlServerConnectionFacts.cs"];
m5_347 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''Value'', parameter.Value);\r\n            })", span="475-487", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="SqlServerConnectionFacts.cs"];
m5_346 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="470-473", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="SqlServerConnectionFacts.cs"];
m5_348 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="468-468", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="SqlServerConnectionFacts.cs"];
m5_417 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="596-596", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_418 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="598-604", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_419 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="596-596", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_869 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="460-460", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnectionFacts.cs"];
m5_494 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="703-703", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs"];
m5_495 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null)))", span="705-706", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs"];
m5_496 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="703-703", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs"];
m5_849 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1248-1248", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="SqlServerConnectionFacts.cs"];
m5_851 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListTtl(''list-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1254-1269", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="SqlServerConnectionFacts.cs"];
m5_850 [label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [ExpireAt])\r\nvalues (@key, @expireAt)''", span="1250-1252", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="SqlServerConnectionFacts.cs"];
m5_852 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1248-1248", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="SqlServerConnectionFacts.cs"];
m5_453 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerConnectionFacts.cs"];
m5_303 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="384-384", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="SqlServerConnectionFacts.cs"];
m5_305 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="400-415", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="SqlServerConnectionFacts.cs"];
m5_304 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="386-398", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="SqlServerConnectionFacts.cs"];
m5_306 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="384-384", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="SqlServerConnectionFacts.cs"];
m5_735 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="1046-1046", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="SqlServerConnectionFacts.cs"];
m5_737 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="1052-1067", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="SqlServerConnectionFacts.cs"];
m5_736 [label="string arrangeSql = @''\r\ninsert into HangFire.Counter ([Key], [Value])\r\nvalues (@key, @value)''", span="1048-1050", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="SqlServerConnectionFacts.cs"];
m5_738 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="1046-1046", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="SqlServerConnectionFacts.cs"];
m5_323 [label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="31-31", cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="SqlServerConnectionFacts.cs"];
m5_215 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CanCreateParametersWithNullValues(bool)", span="258-258", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CanCreateParametersWithNullValues(bool)", file="SqlServerConnectionFacts.cs"];
m5_216 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var createdAt = new DateTime(2012, 12, 12);\r\n                var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', null } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1));\r\n\r\n                var parameters = sql.Query(\r\n                        ''select * from HangFire.JobParameter where JobId = @id'',\r\n                        new { id = jobId })\r\n                    .ToDictionary(x => (string)x.Name, x => (string)x.Value);\r\n\r\n                Assert.Equal(null, parameters[''Key1'']);\r\n            }, useBatching)", span="260-275", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CanCreateParametersWithNullValues(bool)", file="SqlServerConnectionFacts.cs"];
m5_217 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CanCreateParametersWithNullValues(bool)", span="258-258", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CanCreateParametersWithNullValues(bool)", file="SqlServerConnectionFacts.cs"];
m5_134 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="SqlServerConnectionFacts.cs"];
m5_924 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1381-1381", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_925 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null));\r\n            })", span="1383-1387", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_926 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1381-1381", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_551 [label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="366-366", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnectionFacts.cs"];
m5_106 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="SqlServerConnectionFacts.cs"];
m5_466 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="660-660", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="SqlServerConnectionFacts.cs"];
m5_467 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null));\r\n\r\n                Assert.Equal(''context'', exception.ParamName);\r\n            })", span="662-668", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="SqlServerConnectionFacts.cs"];
m5_468 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="660-660", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="SqlServerConnectionFacts.cs"];
m5_841 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="485-485", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnectionFacts.cs"];
m5_762 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="435-435", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnectionFacts.cs"];
m5_269 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="SqlServerConnectionFacts.cs"];
m5_390 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="550-550", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs"];
m5_391 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="552-558", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs"];
m5_392 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="550-550", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs"];
m5_267 [label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="70-70", cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="SqlServerConnectionFacts.cs"];
m5_314 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="419-419", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="SqlServerConnectionFacts.cs"];
m5_316 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result.LoadException);\r\n            })", span="426-440", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="SqlServerConnectionFacts.cs"];
m5_315 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="421-424", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="SqlServerConnectionFacts.cs"];
m5_317 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="419-419", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="SqlServerConnectionFacts.cs"];
m5_967 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1445-1445", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="SqlServerConnectionFacts.cs"];
m5_969 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetSetTtl(''set-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1451-1466", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="SqlServerConnectionFacts.cs"];
m5_968 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [ExpireAt], [Score])\r\nvalues (@key, @value, @expireAt, 0.0)''", span="1447-1449", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="SqlServerConnectionFacts.cs"];
m5_970 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1445-1445", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="SqlServerConnectionFacts.cs"];
m5_727 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="420-420", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnectionFacts.cs"];
m5_203 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="SqlServerConnectionFacts.cs"];
m5_503 [label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="340-340", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnectionFacts.cs"];
m5_201 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="SqlServerConnectionFacts.cs"];
m5_643 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="905-905", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_644 [label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null)))", span="907-908", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", color=green, community=0, file="SqlServerConnectionFacts.cs"];
m5_645 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="905-905", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_653 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="912-912", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_654 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n                Assert.Null(result);\r\n            })", span="914-918", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", color=green, community=0, file="SqlServerConnectionFacts.cs"];
m5_655 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="912-912", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_283 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="337-337", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="SqlServerConnectionFacts.cs"];
m5_284 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetStateData(''1'');\r\n                Assert.Null(result);\r\n            })", span="339-343", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="SqlServerConnectionFacts.cs"];
m5_285 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="337-337", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="SqlServerConnectionFacts.cs"];
m5_574 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="798-798", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_575 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                Assert.NotNull(result);\r\n                Assert.Equal(0, result.Count);\r\n            })", span="800-806", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_576 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="798-798", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_504 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="710-710", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="SqlServerConnectionFacts.cs"];
m5_506 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.RemoveServer(''Server1'');\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase);\r\n            })", span="718-726", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="SqlServerConnectionFacts.cs"];
m5_505 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues \r\n('Server1', '', getutcdate()),\r\n('Server2', '', getutcdate())''", span="712-716", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="SqlServerConnectionFacts.cs"];
m5_507 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="710-710", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="SqlServerConnectionFacts.cs"];
m5_660 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="922-922", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="SqlServerConnectionFacts.cs"];
m5_662 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n\r\n                // Assert\r\n                Assert.NotNull(result);\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="928-946", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="SqlServerConnectionFacts.cs"];
m5_661 [label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="924-926", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="SqlServerConnectionFacts.cs"];
m5_663 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="922-922", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="SqlServerConnectionFacts.cs"];
m5_859 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1273-1273", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_860 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1275-1281", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_861 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1273-1273", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_15 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="34-34", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerConnectionFacts.cs"];
m5_16 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerConnection(null))", span="36-37", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerConnectionFacts.cs"];
m5_17 [label="Assert.Equal(''storage'', exception.ParamName)", span="39-39", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerConnectionFacts.cs"];
m5_18 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="34-34", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerConnectionFacts.cs"];
m5_105 [label="Entry System.Threading.ManualResetEventSlim.ManualResetEventSlim(bool)", span="0-0", cluster="System.Threading.ManualResetEventSlim.ManualResetEventSlim(bool)", file="SqlServerConnectionFacts.cs"];
m5_870 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1285-1285", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs"];
m5_871 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="1287-1293", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs"];
m5_872 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1285-1285", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs"];
m5_789 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1148-1148", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_790 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashTtl(''my-hash'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1150-1154", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_791 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1148-1148", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_984 [label="Entry SqlServerStorage.cstr", span="", cluster="SqlServerStorage.cstr", file="SqlServerConnectionFacts.cs"];
m5_476 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="672-672", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="SqlServerConnectionFacts.cs"];
m5_477 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                };\r\n                connection.AnnounceServer(''server'', context1);\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', server.Id);\r\n                Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data);\r\n                Assert.NotNull(server.LastHeartbeat);\r\n\r\n                var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                };\r\n                connection.AnnounceServer(''server'', context2);\r\n                var sameServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', sameServer.Id);\r\n                Assert.Contains(''1000'', sameServer.Data);\r\n            })", span="674-699", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="SqlServerConnectionFacts.cs"];
m5_478 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="672-672", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="SqlServerConnectionFacts.cs"];
m5_640 [label="Entry lambda expression", span="898-898", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_646 [label="Entry lambda expression", span="907-908", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_647 [label="Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null))", span="908-908", cluster="lambda expression", color=green, community=0, file="SqlServerConnectionFacts.cs"];
m5_648 [label="Exit lambda expression", span="907-908", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_649 [label="Entry lambda expression", span="908-908", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_650 [label="connection.GetAllEntriesFromHash(null)", span="908-908", cluster="lambda expression", color=green, community=0, file="SqlServerConnectionFacts.cs"];
m5_651 [label="Exit lambda expression", span="908-908", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_656 [label="Entry lambda expression", span="914-918", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_657 [label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="916-916", cluster="lambda expression", color=green, community=0, file="SqlServerConnectionFacts.cs"];
m5_658 [label="Assert.Null(result)", span="917-917", cluster="lambda expression", color=green, community=0, file="SqlServerConnectionFacts.cs"];
m5_659 [label="Exit lambda expression", span="914-918", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_33 [label="_queue.Verify(x => x.Dequeue(queues, token))", span="52-52", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_49 [label="_providers.Add(anotherProvider.Object, new [] { ''critical'' })", span="63-63", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_112 [label="UseConnection(connection1 =>\r\n                {\r\n                    using (connection1.AcquireDistributedLock(''exclusive'', TimeSpan.FromSeconds(5)))\r\n                    {\r\n                        lockAcquired.Set();\r\n                        releaseLock.Wait();\r\n                    }\r\n                })", span="124-131", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_50 [label="Assert.Throws<InvalidOperationException>(\r\n                    () => connection.FetchNextJob(new[] { ''critical'', ''default'' }, token))", span="65-66", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_78 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => connection.AcquireDistributedLock('''', TimeSpan.FromMinutes(5)))", span="95-96", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_91 [label="var lockMode = sql.Query<string>(\r\n                        ''select applock_mode('public', 'HangFire:hello', 'session')'').Single()", span="109-110", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_120 [label="Assert.Throws<DistributedLockTimeoutException>(\r\n                    () =>\r\n                    {\r\n                        using (connection2.AcquireDistributedLock(''exclusive'', TimeSpan.FromSeconds(5)))\r\n                        {\r\n                        }\r\n                    })", span="138-144", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_131 [label="var lockMode = sql.Query<string>(\r\n                    ''select applock_mode('public', 'hello', 'session')'').Single()", span="159-160", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_148 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero))", span="184-189", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_160 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero))", span="200-205", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_237 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null))", span="281-282", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_277 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null))", span="332-333", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_328 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''))", span="448-449", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_339 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''))", span="460-461", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_383 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''))", span="542-543", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_394 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null))", span="554-555", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_412 [label="var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single()", span="585-587", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_421 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1))", span="600-601", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_432 [label="Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1))", span="610-611", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_458 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()))", span="652-653", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_470 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null))", span="664-665", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_498 [label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null))", span="705-706", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_519 [label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null))", span="732-733", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_546 [label="Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5)))", span="762-763", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_568 [label="Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null))", span="794-794", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_597 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()))", span="841-842", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_608 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null))", span="853-854", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_676 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null))", span="954-955", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_703 [label="Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1))", span="996-996", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_722 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null))", span="1030-1031", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_757 [label="Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null))", span="1098-1098", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_783 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null))", span="1142-1143", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_810 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null))", span="1187-1188", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_836 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null))", span="1232-1233", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_863 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''))", span="1277-1278", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_874 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null))", span="1289-1290", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_900 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1))", span="1336-1337", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_928 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null))", span="1385-1386", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_954 [label="Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null))", span="1430-1430", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_666 [label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="939-939", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_248 [label="Assert.Null(result)", span="291-291", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_263 [label="Assert.Null(result.LoadException)", span="322-322", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_288 [label="Assert.Null(result)", span="342-342", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_405 [label="Assert.Null(value)", span="567-567", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_442 [label="Assert.Null(result)", span="622-622", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_885 [label="Assert.Null(result)", span="1302-1302", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_11 [label="Entry lambda expression", span="27-27", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_29 [label="Entry lambda expression", span="45-53", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_30 [label="var token = new CancellationToken()", span="47-47", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_32 [label="connection.FetchNextJob(queues, token)", span="50-50", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_31 [label="var queues = new[] { ''default'' }", span="48-48", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_34 [label="Exit lambda expression", span="45-53", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_38 [label="Entry lambda expression", span="52-52", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_46 [label="Entry lambda expression", span="59-67", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_48 [label="var anotherProvider = new Mock<IPersistentJobQueueProvider>()", span="62-62", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_59 [label="Entry lambda expression", span="73-77", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_68 [label="Entry lambda expression", span="83-87", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_77 [label="Entry lambda expression", span="93-99", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_89 [label="Entry lambda expression", span="105-114", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_111 [label="Entry lambda expression", span="124-131", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_113 [label="Exit lambda expression", span="124-131", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_114 [label="Entry lambda expression", span="124-131", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_119 [label="Entry lambda expression", span="136-145", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_128 [label="Entry lambda expression", span="154-163", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_138 [label="Entry lambda expression", span="169-176", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_147 [label="Entry lambda expression", span="182-192", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_159 [label="Entry lambda expression", span="198-208", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_174 [label="Entry lambda expression", span="216-252", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_218 [label="Entry lambda expression", span="260-275", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_236 [label="Entry lambda expression", span="281-282", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_246 [label="Entry lambda expression", span="288-292", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_255 [label="Entry lambda expression", span="303-325", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_276 [label="Entry lambda expression", span="332-333", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_286 [label="Entry lambda expression", span="339-343", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_294 [label="Entry lambda expression", span="363-380", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_307 [label="Entry lambda expression", span="400-415", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_318 [label="Entry lambda expression", span="426-440", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_327 [label="Entry lambda expression", span="446-452", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_338 [label="Entry lambda expression", span="458-464", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_349 [label="Entry lambda expression", span="475-487", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_360 [label="Entry lambda expression", span="498-511", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_372 [label="Entry lambda expression", span="522-534", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_382 [label="Entry lambda expression", span="540-546", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_393 [label="Entry lambda expression", span="552-558", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_403 [label="Entry lambda expression", span="564-568", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_411 [label="Entry lambda expression", span="583-592", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_420 [label="Entry lambda expression", span="598-604", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_431 [label="Entry lambda expression", span="610-611", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_440 [label="Entry lambda expression", span="617-623", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_448 [label="Entry lambda expression", span="637-644", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_457 [label="Entry lambda expression", span="650-656", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_469 [label="Entry lambda expression", span="662-668", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_479 [label="Entry lambda expression", span="674-699", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_497 [label="Entry lambda expression", span="705-706", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_508 [label="Entry lambda expression", span="718-726", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_518 [label="Entry lambda expression", span="732-733", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_529 [label="Entry lambda expression", span="745-756", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_545 [label="Entry lambda expression", span="762-763", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_556 [label="Entry lambda expression", span="773-787", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_567 [label="Entry lambda expression", span="793-794", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_577 [label="Entry lambda expression", span="800-806", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_586 [label="Entry lambda expression", span="816-833", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_596 [label="Entry lambda expression", span="839-845", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_607 [label="Entry lambda expression", span="851-857", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_617 [label="Entry lambda expression", span="865-880", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_632 [label="Entry lambda expression", span="888-901", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_664 [label="Entry lambda expression", span="928-946", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_675 [label="Entry lambda expression", span="952-956", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_685 [label="Entry lambda expression", span="962-966", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_693 [label="Entry lambda expression", span="976-988", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_702 [label="Entry lambda expression", span="994-997", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_713 [label="Entry lambda expression", span="1007-1022", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_721 [label="Entry lambda expression", span="1028-1032", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_731 [label="Entry lambda expression", span="1038-1042", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_739 [label="Entry lambda expression", span="1052-1067", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_748 [label="Entry lambda expression", span="1077-1090", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_756 [label="Entry lambda expression", span="1096-1099", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_766 [label="Entry lambda expression", span="1105-1109", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_774 [label="Entry lambda expression", span="1119-1134", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_782 [label="Entry lambda expression", span="1140-1144", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_792 [label="Entry lambda expression", span="1150-1154", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_800 [label="Entry lambda expression", span="1164-1179", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_809 [label="Entry lambda expression", span="1185-1189", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_819 [label="Entry lambda expression", span="1195-1199", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_827 [label="Entry lambda expression", span="1209-1224", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_835 [label="Entry lambda expression", span="1230-1234", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_845 [label="Entry lambda expression", span="1240-1244", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_853 [label="Entry lambda expression", span="1254-1269", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_862 [label="Entry lambda expression", span="1275-1281", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_873 [label="Entry lambda expression", span="1287-1293", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_883 [label="Entry lambda expression", span="1299-1303", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_891 [label="Entry lambda expression", span="1313-1328", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_899 [label="Entry lambda expression", span="1334-1340", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_910 [label="Entry lambda expression", span="1346-1350", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_919 [label="Entry lambda expression", span="1360-1377", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_927 [label="Entry lambda expression", span="1383-1387", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_937 [label="Entry lambda expression", span="1393-1397", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_945 [label="Entry lambda expression", span="1407-1422", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_953 [label="Entry lambda expression", span="1428-1431", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_963 [label="Entry lambda expression", span="1437-1441", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_971 [label="Entry lambda expression", span="1451-1466", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_996 [label="Entry lambda expression", span="1486-1486", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_21 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_47 [label="var token = new CancellationToken()", span="61-61", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_51 [label="Exit lambda expression", span="59-67", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_53 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_79 [label="Assert.Equal(''resource'', exception.ParamName)", span="98-98", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_81 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_90 [label="connection.AcquireDistributedLock(''hello'', TimeSpan.FromMinutes(5))", span="107-107", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_92 [label="Assert.Equal(''Exclusive'', lockMode)", span="112-112", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_121 [label="Exit lambda expression", span="136-145", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_122 [label="Entry lambda expression", span="139-144", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_130 [label="distributedLock.Dispose()", span="157-157", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_132 [label="Assert.Equal(''NoLock'', lockMode)", span="162-162", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_149 [label="Assert.Equal(''job'', exception.ParamName)", span="191-191", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_151 [label="Entry lambda expression", span="185-189", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_161 [label="Assert.Equal(''parameters'', exception.ParamName)", span="207-207", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_163 [label="Entry lambda expression", span="201-205", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_238 [label="Exit lambda expression", span="281-282", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_239 [label="Entry lambda expression", span="282-282", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_278 [label="Exit lambda expression", span="332-333", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_279 [label="Entry lambda expression", span="333-333", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_329 [label="Assert.Equal(''id'', exception.ParamName)", span="451-451", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_331 [label="Entry lambda expression", span="449-449", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_340 [label="Assert.Equal(''name'', exception.ParamName)", span="463-463", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_342 [label="Entry lambda expression", span="461-461", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_384 [label="Assert.Equal(''id'', exception.ParamName)", span="545-545", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_386 [label="Entry lambda expression", span="543-543", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_395 [label="Assert.Equal(''name'', exception.ParamName)", span="557-557", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_397 [label="Entry lambda expression", span="555-555", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_413 [label="var value = connection.GetJobParameter(id.ToString(), ''name'')", span="589-589", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_422 [label="Assert.Equal(''key'', exception.ParamName)", span="603-603", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_424 [label="Entry lambda expression", span="601-601", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_433 [label="Exit lambda expression", span="610-611", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_434 [label="Entry lambda expression", span="611-611", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_459 [label="Assert.Equal(''serverId'', exception.ParamName)", span="655-655", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_461 [label="Entry lambda expression", span="653-653", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_471 [label="Assert.Equal(''context'', exception.ParamName)", span="667-667", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_473 [label="Entry lambda expression", span="665-665", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_499 [label="Exit lambda expression", span="705-706", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_500 [label="Entry lambda expression", span="706-706", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_520 [label="Exit lambda expression", span="732-733", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_521 [label="Entry lambda expression", span="733-733", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_547 [label="Exit lambda expression", span="762-763", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_548 [label="Entry lambda expression", span="763-763", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_569 [label="Exit lambda expression", span="793-794", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_570 [label="Entry lambda expression", span="794-794", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_598 [label="Assert.Equal(''key'', exception.ParamName)", span="844-844", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_600 [label="Entry lambda expression", span="842-842", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_609 [label="Assert.Equal(''keyValuePairs'', exception.ParamName)", span="856-856", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_611 [label="Entry lambda expression", span="854-854", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_677 [label="Exit lambda expression", span="952-956", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_678 [label="Entry lambda expression", span="955-955", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_704 [label="Exit lambda expression", span="994-997", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_705 [label="Entry lambda expression", span="996-996", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_723 [label="Exit lambda expression", span="1028-1032", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_724 [label="Entry lambda expression", span="1031-1031", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_758 [label="Exit lambda expression", span="1096-1099", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_759 [label="Entry lambda expression", span="1098-1098", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_784 [label="Exit lambda expression", span="1140-1144", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_785 [label="Entry lambda expression", span="1143-1143", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_811 [label="Exit lambda expression", span="1185-1189", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_812 [label="Entry lambda expression", span="1188-1188", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_837 [label="Exit lambda expression", span="1230-1234", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_838 [label="Entry lambda expression", span="1233-1233", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_864 [label="Assert.Equal(''key'', exception.ParamName)", span="1280-1280", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_866 [label="Entry lambda expression", span="1278-1278", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_875 [label="Assert.Equal(''name'', exception.ParamName)", span="1292-1292", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_877 [label="Entry lambda expression", span="1290-1290", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_901 [label="Assert.Equal(''key'', exception.ParamName)", span="1339-1339", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_903 [label="Entry lambda expression", span="1337-1337", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_929 [label="Exit lambda expression", span="1383-1387", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_930 [label="Entry lambda expression", span="1386-1386", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_955 [label="Exit lambda expression", span="1428-1431", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_956 [label="Entry lambda expression", span="1430-1430", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_665 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                })", span="931-936", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_667 [label="Assert.NotNull(result)", span="942-942", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_668 [label="Assert.Equal(2, result.Count)", span="943-943", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_669 [label="Assert.Equal(''Value1'', result[''Key1''])", span="944-944", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_670 [label="Assert.Equal(''Value2'', result[''Key2''])", span="945-945", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_247 [label="var result = connection.GetJobData(''1'')", span="290-290", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_249 [label="Exit lambda expression", span="288-292", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_258 [label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="316-316", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_262 [label="Assert.Equal(''Arguments'', result.Job.Args[0])", span="321-321", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_264 [label="Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt)", span="323-323", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_287 [label="var result = connection.GetStateData(''1'')", span="341-341", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_289 [label="Exit lambda expression", span="339-343", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_404 [label="var value = connection.GetJobParameter(''1'', ''hello'')", span="566-566", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_406 [label="Exit lambda expression", span="564-568", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_441 [label="var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1)", span="619-620", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_443 [label="Exit lambda expression", span="617-623", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_884 [label="var result = connection.GetValueFromHash(''my-hash'', ''name'')", span="1301-1301", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_886 [label="Exit lambda expression", span="1299-1303", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_13 [label="Exit lambda expression", span="27-27", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_12 [label="x.GetJobQueue()", span="27-27", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_39 [label="x.Dequeue(queues, token)", span="52-52", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_40 [label="Exit lambda expression", span="52-52", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_54 [label="connection.FetchNextJob(new[] { ''critical'', ''default'' }, token)", span="66-66", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_62 [label="Exit lambda expression", span="73-77", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_60 [label="var transaction = connection.CreateWriteTransaction()", span="75-75", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_71 [label="Exit lambda expression", span="83-87", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_69 [label="var @lock = connection.AcquireDistributedLock(''1'', TimeSpan.FromSeconds(1))", span="85-85", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_80 [label="Exit lambda expression", span="93-99", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_82 [label="connection.AcquireDistributedLock('''', TimeSpan.FromMinutes(5))", span="96-96", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_168 [label="SampleMethod(''hello'')", span="202-202", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_207 [label="SampleMethod(''Hello'')", span="220-220", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_225 [label="SampleMethod(''Hello'')", span="264-264", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_271 [label="SampleMethod(''wrong'')", span="305-305", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_93 [label="Exit lambda expression", span="105-114", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_117 [label="releaseLock.Wait()", span="129-129", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_116 [label="lockAcquired.Set()", span="128-128", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_118 [label="Exit lambda expression", span="124-131", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_115 [label="connection1.AcquireDistributedLock(''exclusive'', TimeSpan.FromSeconds(5))", span="126-126", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_123 [label="connection2.AcquireDistributedLock(''exclusive'', TimeSpan.FromSeconds(5))", span="141-141", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_133 [label="Exit lambda expression", span="154-163", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_129 [label="var distributedLock = connection.AcquireDistributedLock(''hello'', TimeSpan.FromMinutes(5))", span="156-156", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_142 [label="Exit lambda expression", span="169-176", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_139 [label="connection.AcquireDistributedLock(''hello'', TimeSpan.FromMinutes(5))", span="171-171", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_140 [label="connection.AcquireDistributedLock(''hello'', TimeSpan.FromMinutes(5))", span="172-172", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_150 [label="Exit lambda expression", span="182-192", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_152 [label="connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero)", span="185-189", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_162 [label="Exit lambda expression", span="198-208", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_164 [label="connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero)", span="201-205", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_195 [label="Exit lambda expression", span="216-252", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_175 [label="var createdAt = new DateTime(2012, 12, 12)", span="218-218", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_176 [label="var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1))", span="219-223", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_179 [label="var sqlJob = sql.Query(''select * from HangFire.Job'').Single()", span="228-228", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_192 [label="var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value)", span="245-248", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_223 [label="Exit lambda expression", span="260-275", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_219 [label="var createdAt = new DateTime(2012, 12, 12)", span="262-262", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_220 [label="var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', null } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1))", span="263-267", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_221 [label="var parameters = sql.Query(\r\n                        ''select * from HangFire.JobParameter where JobId = @id'',\r\n                        new { id = jobId })\r\n                    .ToDictionary(x => (string)x.Name, x => (string)x.Value)", span="269-272", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_240 [label="connection.GetJobData(null)", span="282-282", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_257 [label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="307-314", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_266 [label="Exit lambda expression", span="303-325", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_256 [label="var job = Job.FromExpression(() => SampleMethod(''wrong''))", span="305-305", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_280 [label="connection.GetStateData(null)", span="333-333", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_296 [label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="370-372", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_302 [label="Exit lambda expression", span="363-380", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_295 [label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                }", span="365-368", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_297 [label="var result = connection.GetStateData(jobId.ToString())", span="374-374", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_309 [label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="407-409", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_313 [label="Exit lambda expression", span="400-415", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_308 [label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                }", span="402-405", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_310 [label="var result = connection.GetStateData(jobId.ToString())", span="411-411", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_319 [label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="428-435", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_322 [label="Exit lambda expression", span="426-440", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_320 [label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="437-437", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_330 [label="Exit lambda expression", span="446-452", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_332 [label="connection.SetJobParameter(null, ''name'', ''value'')", span="449-449", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_341 [label="Exit lambda expression", span="458-464", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_343 [label="connection.SetJobParameter(''1'', null, ''value'')", span="461-461", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_350 [label="var job = sql.Query(arrangeSql).Single()", span="477-477", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_355 [label="Exit lambda expression", span="475-487", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_352 [label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="480-480", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_353 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="482-484", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_361 [label="var job = sql.Query(arrangeSql).Single()", span="500-500", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_367 [label="Exit lambda expression", span="498-511", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_363 [label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="503-503", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_364 [label="connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'')", span="504-504", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_365 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="506-508", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_373 [label="var job = sql.Query(arrangeSql).Single()", span="524-524", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_378 [label="Exit lambda expression", span="522-534", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_375 [label="connection.SetJobParameter(jobId, ''Name'', null)", span="527-527", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_376 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="529-531", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_385 [label="Exit lambda expression", span="540-546", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_387 [label="connection.GetJobParameter(null, ''hello'')", span="543-543", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_396 [label="Exit lambda expression", span="552-558", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_398 [label="connection.GetJobParameter(''1'', null)", span="555-555", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_415 [label="Exit lambda expression", span="583-592", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_423 [label="Exit lambda expression", span="598-604", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_425 [label="connection.GetFirstByLowestScoreFromSet(null, 0, 1)", span="601-601", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_435 [label="connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)", span="611-611", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_449 [label="sql.Execute(arrangeSql)", span="639-639", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_452 [label="Exit lambda expression", span="637-644", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_450 [label="var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0)", span="641-641", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_460 [label="Exit lambda expression", span="650-656", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_462 [label="connection.AnnounceServer(null, new ServerContext())", span="653-653", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_472 [label="Exit lambda expression", span="662-668", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_474 [label="connection.AnnounceServer(''server'', null)", span="665-665", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_491 [label="Exit lambda expression", span="674-699", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_480 [label="var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                }", span="676-680", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_481 [label="connection.AnnounceServer(''server'', context1)", span="681-681", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_482 [label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="683-683", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_487 [label="connection.AnnounceServer(''server'', context2)", span="695-695", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_488 [label="var sameServer = sql.Query(''select * from HangFire.Server'').Single()", span="696-696", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_501 [label="connection.RemoveServer(null)", span="706-706", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_509 [label="sql.Execute(arrangeSql)", span="720-720", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_513 [label="Exit lambda expression", span="718-726", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_510 [label="connection.RemoveServer(''Server1'')", span="722-722", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_511 [label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="724-724", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_522 [label="connection.Heartbeat(null)", span="733-733", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_530 [label="sql.Execute(arrangeSql)", span="747-747", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_535 [label="Exit lambda expression", span="745-756", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_531 [label="connection.Heartbeat(''server1'')", span="749-749", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_532 [label="var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat)", span="751-752", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_549 [label="connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))", span="763-763", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_557 [label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    })", span="775-781", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_561 [label="Exit lambda expression", span="773-787", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_558 [label="connection.RemoveTimedOutServers(TimeSpan.FromHours(15))", span="783-783", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_559 [label="var liveServer = sql.Query(''select * from HangFire.Server'').Single()", span="785-785", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_571 [label="connection.GetAllItemsFromSet(null)", span="794-794", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_581 [label="Exit lambda expression", span="800-806", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_578 [label="var result = connection.GetAllItemsFromSet(''some-set'')", span="802-802", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_587 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                })", span="819-824", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_592 [label="Exit lambda expression", span="816-833", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_588 [label="var result = connection.GetAllItemsFromSet(''some-set'')", span="827-827", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_599 [label="Exit lambda expression", span="839-845", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_601 [label="connection.SetRangeInHash(null, new Dictionary<string, string>())", span="842-842", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_610 [label="Exit lambda expression", span="851-857", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_612 [label="connection.SetRangeInHash(''some-hash'', null)", span="854-854", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_622 [label="Exit lambda expression", span="865-880", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_618 [label="connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="867-871", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_619 [label="var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value)", span="873-876", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_636 [label="Exit lambda expression", span="888-901", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_633 [label="connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', null }\r\n                })", span="890-893", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_634 [label="var result = sql.Query(\r\n                        ''select * from HangFire.Hash where [Key] = @key'',\r\n                        new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value)", span="895-898", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_671 [label="Exit lambda expression", span="928-946", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_679 [label="connection.GetSetCount(null)", span="955-955", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_688 [label="Exit lambda expression", span="962-966", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_686 [label="var result = connection.GetSetCount(''my-set'')", span="964-964", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_694 [label="sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { key = ''set-1'', value = ''value-1'' },\r\n                    new { key = ''set-2'', value = ''value-1'' },\r\n                    new { key = ''set-1'', value = ''value-2'' }\r\n                })", span="978-983", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_697 [label="Exit lambda expression", span="976-988", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_695 [label="var result = connection.GetSetCount(''set-1'')", span="985-985", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_706 [label="connection.GetRangeFromSet(null, 0, 1)", span="996-996", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_714 [label="sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                })", span="1009-1017", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_717 [label="Exit lambda expression", span="1007-1022", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_715 [label="var result = connection.GetRangeFromSet(''set-1'', 2, 3)", span="1019-1019", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_725 [label="connection.GetCounter(null)", span="1031-1031", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_734 [label="Exit lambda expression", span="1038-1042", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_732 [label="var result = connection.GetCounter(''my-counter'')", span="1040-1040", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_740 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                })", span="1055-1060", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_743 [label="Exit lambda expression", span="1052-1067", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_741 [label="var result = connection.GetCounter(''counter-1'')", span="1063-1063", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_749 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                })", span="1080-1084", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_752 [label="Exit lambda expression", span="1077-1090", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_750 [label="var result = connection.GetCounter(''counter-1'')", span="1087-1087", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_760 [label="connection.GetHashCount(null)", span="1098-1098", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_769 [label="Exit lambda expression", span="1105-1109", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_767 [label="var result = connection.GetHashCount(''my-hash'')", span="1107-1107", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_775 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                })", span="1122-1127", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_778 [label="Exit lambda expression", span="1119-1134", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_776 [label="var result = connection.GetHashCount(''hash-1'')", span="1130-1130", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_786 [label="connection.GetHashTtl(null)", span="1143-1143", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_795 [label="Exit lambda expression", span="1150-1154", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_793 [label="var result = connection.GetHashTtl(''my-hash'')", span="1152-1152", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_801 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                })", span="1167-1171", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_805 [label="Exit lambda expression", span="1164-1179", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_802 [label="var result = connection.GetHashTtl(''hash-1'')", span="1174-1174", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_813 [label="connection.GetListCount(null)", span="1188-1188", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_822 [label="Exit lambda expression", span="1195-1199", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_820 [label="var result = connection.GetListCount(''my-list'')", span="1197-1197", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_828 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                })", span="1212-1217", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_831 [label="Exit lambda expression", span="1209-1224", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_829 [label="var result = connection.GetListCount(''list-1'')", span="1220-1220", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_839 [label="connection.GetListTtl(null)", span="1233-1233", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_848 [label="Exit lambda expression", span="1240-1244", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_846 [label="var result = connection.GetListTtl(''my-list'')", span="1242-1242", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_854 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                })", span="1257-1261", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_858 [label="Exit lambda expression", span="1254-1269", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_855 [label="var result = connection.GetListTtl(''list-1'')", span="1264-1264", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_865 [label="Exit lambda expression", span="1275-1281", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_867 [label="connection.GetValueFromHash(null, ''name'')", span="1278-1278", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_876 [label="Exit lambda expression", span="1287-1293", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_878 [label="connection.GetValueFromHash(''key'', null)", span="1290-1290", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_892 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                })", span="1316-1321", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_895 [label="Exit lambda expression", span="1313-1328", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_893 [label="var result = connection.GetValueFromHash(''hash-1'', ''field-1'')", span="1324-1324", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_902 [label="Exit lambda expression", span="1334-1340", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_904 [label="connection.GetRangeFromList(null, 0, 1)", span="1337-1337", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_913 [label="Exit lambda expression", span="1346-1350", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_911 [label="var result = connection.GetRangeFromList(''my-list'', 0, 1)", span="1348-1348", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_920 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                })", span="1363-1370", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_923 [label="Exit lambda expression", span="1360-1377", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_921 [label="var result = connection.GetRangeFromList(''list-1'', 1, 2)", span="1373-1373", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_931 [label="connection.GetAllItemsFromList(null)", span="1386-1386", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_940 [label="Exit lambda expression", span="1393-1397", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_938 [label="var result = connection.GetAllItemsFromList(''my-list'')", span="1395-1395", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_946 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                })", span="1410-1415", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_949 [label="Exit lambda expression", span="1407-1422", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_947 [label="var result = connection.GetAllItemsFromList(''list-1'')", span="1418-1418", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_957 [label="connection.GetSetTtl(null)", span="1430-1430", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_966 [label="Exit lambda expression", span="1437-1441", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_964 [label="var result = connection.GetSetTtl(''my-set'')", span="1439-1439", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_972 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                })", span="1454-1458", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_976 [label="Exit lambda expression", span="1451-1466", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_973 [label="var result = connection.GetSetTtl(''set-1'')", span="1461-1461", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_998 [label="Exit lambda expression", span="1486-1486", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_997 [label="x.QueueProviders", span="1486-1486", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_23 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_22 [label="new SqlServerConnection(null)", span="37-37", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_55 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_83 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_124 [label="Exit lambda expression", span="139-144", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_153 [label="Exit lambda expression", span="185-189", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_165 [label="Exit lambda expression", span="201-205", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_241 [label="Exit lambda expression", span="282-282", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_281 [label="Exit lambda expression", span="333-333", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_333 [label="Exit lambda expression", span="449-449", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_344 [label="Exit lambda expression", span="461-461", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_388 [label="Exit lambda expression", span="543-543", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_399 [label="Exit lambda expression", span="555-555", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_414 [label="Assert.Equal(''value'', value)", span="591-591", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_426 [label="Exit lambda expression", span="601-601", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_436 [label="Exit lambda expression", span="611-611", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_463 [label="Exit lambda expression", span="653-653", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_475 [label="Exit lambda expression", span="665-665", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_502 [label="Exit lambda expression", span="706-706", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_523 [label="Exit lambda expression", span="733-733", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_550 [label="Exit lambda expression", span="763-763", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_572 [label="Exit lambda expression", span="794-794", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_602 [label="Exit lambda expression", span="842-842", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_613 [label="Exit lambda expression", span="854-854", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_680 [label="Exit lambda expression", span="955-955", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_707 [label="Exit lambda expression", span="996-996", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_726 [label="Exit lambda expression", span="1031-1031", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_761 [label="Exit lambda expression", span="1098-1098", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_787 [label="Exit lambda expression", span="1143-1143", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_814 [label="Exit lambda expression", span="1188-1188", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_840 [label="Exit lambda expression", span="1233-1233", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_868 [label="Exit lambda expression", span="1278-1278", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_879 [label="Exit lambda expression", span="1290-1290", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_905 [label="Exit lambda expression", span="1337-1337", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_932 [label="Exit lambda expression", span="1386-1386", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_958 [label="Exit lambda expression", span="1430-1430", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_259 [label="Assert.NotNull(result)", span="318-318", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_260 [label="Assert.NotNull(result.Job)", span="319-319", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_261 [label="Assert.Equal(''Succeeded'', result.State)", span="320-320", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_265 [label="Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1))", span="324-324", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_61 [label="Assert.NotNull(transaction)", span="76-76", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_70 [label="Assert.NotNull(@lock)", span="86-86", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_167 [label="Entry lambda expression", span="202-202", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_169 [label="Exit lambda expression", span="202-202", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_206 [label="Entry lambda expression", span="220-220", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_208 [label="Exit lambda expression", span="220-220", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_224 [label="Entry lambda expression", span="264-264", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_226 [label="Exit lambda expression", span="264-264", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_270 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_272 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_141 [label="Assert.True(true)", span="174-174", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_194 [label="Assert.Equal(''Value2'', parameters[''Key2''])", span="251-251", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_181 [label="Assert.Equal(createdAt, sqlJob.CreatedAt)", span="230-230", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_190 [label="Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt)", span="242-242", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_191 [label="Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1))", span="243-243", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_177 [label="Assert.NotNull(jobId)", span="225-225", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_178 [label="Assert.NotEmpty(jobId)", span="226-226", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_180 [label="Assert.Equal(jobId, sqlJob.Id.ToString())", span="229-229", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_182 [label="Assert.Equal(null, (int?) sqlJob.StateId)", span="231-231", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_183 [label="Assert.Equal(null, (string) sqlJob.StateName)", span="232-232", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_184 [label="var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData)", span="234-234", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_185 [label="invocationData.Arguments = sqlJob.Arguments", span="235-235", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_193 [label="Assert.Equal(''Value1'', parameters[''Key1''])", span="250-250", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_209 [label="Entry lambda expression", span="248-248", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_212 [label="Entry lambda expression", span="248-248", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_222 [label="Assert.Equal(null, parameters[''Key1''])", span="274-274", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_227 [label="Entry lambda expression", span="272-272", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_230 [label="Entry lambda expression", span="272-272", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_301 [label="Assert.Equal(''Value'', result.Data[''Key''])", span="379-379", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_298 [label="Assert.NotNull(result)", span="375-375", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_299 [label="Assert.Equal(''Name'', result.Name)", span="377-377", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_300 [label="Assert.Equal(''Reason'', result.Reason)", span="378-378", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_312 [label="Assert.Equal(''Value'', result.Data[''Key''])", span="414-414", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_311 [label="Assert.NotNull(result)", span="412-412", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_321 [label="Assert.NotNull(result.LoadException)", span="439-439", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_351 [label="string jobId = job.Id.ToString()", span="478-478", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_354 [label="Assert.Equal(''Value'', parameter.Value)", span="486-486", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_362 [label="string jobId = job.Id.ToString()", span="501-501", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_366 [label="Assert.Equal(''AnotherValue'', parameter.Value)", span="510-510", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_374 [label="string jobId = job.Id.ToString()", span="525-525", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_377 [label="Assert.Equal((string) null, parameter.Value)", span="533-533", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_451 [label="Assert.Equal(''-1.0'', result)", span="643-643", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_490 [label="Assert.Contains(''1000'', sameServer.Data)", span="698-698", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_483 [label="Assert.Equal(''server'', server.Id)", span="684-684", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_484 [label="Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data)", span="685-687", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_485 [label="Assert.NotNull(server.LastHeartbeat)", span="688-688", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_486 [label="var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                }", span="690-694", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_489 [label="Assert.Equal(''server'', sameServer.Id)", span="697-697", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_512 [label="Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase)", span="725-725", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_534 [label="Assert.Equal(2012, servers[''server2''].Year)", span="755-755", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_533 [label="Assert.NotEqual(2012, servers[''server1''].Year)", span="754-754", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_536 [label="Entry lambda expression", span="752-752", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_539 [label="Entry lambda expression", span="752-752", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_560 [label="Assert.Equal(''server2'', liveServer.Id)", span="786-786", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_580 [label="Assert.Equal(0, result.Count)", span="805-805", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_579 [label="Assert.NotNull(result)", span="804-804", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_591 [label="Assert.Contains(''2'', result)", span="832-832", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_589 [label="Assert.Equal(2, result.Count)", span="830-830", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_590 [label="Assert.Contains(''1'', result)", span="831-831", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_621 [label="Assert.Equal(''Value2'', result[''Key2''])", span="879-879", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_620 [label="Assert.Equal(''Value1'', result[''Key1''])", span="878-878", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_623 [label="Entry lambda expression", span="876-876", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_626 [label="Entry lambda expression", span="876-876", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_635 [label="Assert.Equal(null, result[''Key1''])", span="900-900", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_637 [label="Entry lambda expression", span="898-898", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_687 [label="Assert.Equal(0, result)", span="965-965", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_696 [label="Assert.Equal(2, result)", span="987-987", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_716 [label="Assert.Equal(new [] { ''3'', ''4'' }, result)", span="1021-1021", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_733 [label="Assert.Equal(0, result)", span="1041-1041", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_742 [label="Assert.Equal(2, result)", span="1066-1066", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_751 [label="Assert.Equal(12, result)", span="1089-1089", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_768 [label="Assert.Equal(0, result)", span="1108-1108", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_777 [label="Assert.Equal(2, result)", span="1133-1133", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_794 [label="Assert.True(result < TimeSpan.Zero)", span="1153-1153", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_804 [label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1178-1178", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_803 [label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1177-1177", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_821 [label="Assert.Equal(0, result)", span="1198-1198", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_830 [label="Assert.Equal(2, result)", span="1223-1223", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_847 [label="Assert.True(result < TimeSpan.Zero)", span="1243-1243", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_857 [label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1268-1268", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_856 [label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1267-1267", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_894 [label="Assert.Equal(''1'', result)", span="1327-1327", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_912 [label="Assert.Empty(result)", span="1349-1349", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_922 [label="Assert.Equal(new [] { ''4'', ''3'' }, result)", span="1376-1376", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_939 [label="Assert.Empty(result)", span="1396-1396", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_948 [label="Assert.Equal(new [] { ''3'', ''1'' }, result)", span="1421-1421", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_965 [label="Assert.True(result < TimeSpan.Zero)", span="1440-1440", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_975 [label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1465-1465", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_974 [label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1464-1464", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_187 [label="Assert.Equal(typeof(SqlServerConnectionFacts), job.Type)", span="238-238", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_188 [label="Assert.Equal(''SampleMethod'', job.Method.Name)", span="239-239", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_189 [label="Assert.Equal(''Hello'', job.Args[0])", span="240-240", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_186 [label="var job = invocationData.Deserialize()", span="237-237", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_211 [label="Exit lambda expression", span="248-248", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_210 [label="(string) x.Name", span="248-248", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_214 [label="Exit lambda expression", span="248-248", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_213 [label="(string) x.Value", span="248-248", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_229 [label="Exit lambda expression", span="272-272", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_228 [label="(string)x.Name", span="272-272", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_232 [label="Exit lambda expression", span="272-272", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_231 [label="(string)x.Value", span="272-272", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_538 [label="Exit lambda expression", span="752-752", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_537 [label="(string)x.Id", span="752-752", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_541 [label="Exit lambda expression", span="752-752", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_540 [label="(DateTime)x.LastHeartbeat", span="752-752", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_625 [label="Exit lambda expression", span="876-876", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_624 [label="(string)x.Field", span="876-876", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_628 [label="Exit lambda expression", span="876-876", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_627 [label="(string)x.Value", span="876-876", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_639 [label="Exit lambda expression", span="898-898", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_638 [label="(string)x.Field", span="898-898", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_641 [label="(string)x.Value", span="898-898", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_642 [label="Exit lambda expression", span="898-898", cluster="lambda expression", file="SqlServerConnectionFacts.cs"];
m5_770 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="1113-1113", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="SqlServerConnectionFacts.cs"];
m5_772 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashCount(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="1119-1134", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="SqlServerConnectionFacts.cs"];
m5_771 [label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field])\r\nvalues (@key, @field)''", span="1115-1117", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="SqlServerConnectionFacts.cs"];
m5_773 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="1113-1113", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="SqlServerConnectionFacts.cs"];
m5_88 [label="Entry Unk.UseConnections", span="", cluster="Unk.UseConnections", file="SqlServerConnectionFacts.cs"];
m5_41 [label="Entry Unk.Dequeue", span="", cluster="Unk.Dequeue", file="SqlServerConnectionFacts.cs"];
m5_63 [label="Entry Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="54-54", cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnectionFacts.cs"];
m5_603 [label="Entry Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="266-266", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnectionFacts.cs"];
m5_24 [label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="39-39", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerConnectionFacts.cs"];
m5_9 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="SqlServerConnectionFacts.cs"];
m5_454 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="648-648", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs"];
m5_455 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()));\r\n\r\n                Assert.Equal(''serverId'', exception.ParamName);\r\n            })", span="650-656", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs"];
m5_456 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="648-648", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs"];
m5_564 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="791-791", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_565 [label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null)))", span="793-794", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_566 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="791-791", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_166 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="233-233", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SqlServerConnectionFacts.cs"];
m5_788 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="445-445", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnectionFacts.cs"];
m5_324 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="444-444", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs"];
m5_325 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="446-452", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs"];
m5_326 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="444-444", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs"];
m5_110 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="SqlServerConnectionFacts.cs"];
m5_243 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="286-286", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="SqlServerConnectionFacts.cs"];
m5_244 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetJobData(''1'');\r\n                Assert.Null(result);\r\n            })", span="288-292", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="SqlServerConnectionFacts.cs"];
m5_245 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="286-286", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="SqlServerConnectionFacts.cs"];
m5_56 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="71-71", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="SqlServerConnectionFacts.cs"];
m5_57 [label="UseConnection(connection =>\r\n            {\r\n                var transaction = connection.CreateWriteTransaction();\r\n                Assert.NotNull(transaction);\r\n            })", span="73-77", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="SqlServerConnectionFacts.cs"];
m5_58 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="71-71", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="SqlServerConnectionFacts.cs"];
m5_204 [label="Entry System.DateTime.AddMinutes(double)", span="0-0", cluster="System.DateTime.AddMinutes(double)", file="SqlServerConnectionFacts.cs"];
m5_400 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="562-562", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="SqlServerConnectionFacts.cs"];
m5_401 [label="UseConnection(connection =>\r\n            {\r\n                var value = connection.GetJobParameter(''1'', ''hello'');\r\n                Assert.Null(value);\r\n            })", span="564-568", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="SqlServerConnectionFacts.cs"];
m5_402 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="562-562", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="SqlServerConnectionFacts.cs"];
m5_977 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>, bool)", span="1469-1469", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>, bool)", file="SqlServerConnectionFacts.cs"];
m5_979 [label="var storage = new SqlServerStorage(sqlConnection, new SqlServerStorageOptions { CommandBatchMaxTimeout = useBatching ? TimeSpan.FromMinutes(1) : (TimeSpan?)null })", span="1473-1473", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>, bool)", file="SqlServerConnectionFacts.cs"];
m5_978 [label="var sqlConnection = ConnectionUtils.CreateConnection()", span="1471-1471", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>, bool)", file="SqlServerConnectionFacts.cs"];
m5_980 [label="var connection = new SqlServerConnection(storage)", span="1474-1474", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>, bool)", file="SqlServerConnectionFacts.cs"];
m5_981 [label="action(sqlConnection, connection)", span="1476-1476", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>, bool)", file="SqlServerConnectionFacts.cs"];
m5_982 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>, bool)", span="1469-1469", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>, bool)", file="SqlServerConnectionFacts.cs"];
m5_45 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="SqlServerConnectionFacts.cs"];
m5_20 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="SqlServerConnectionFacts.cs"];
m5_806 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1183-1183", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_807 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null));\r\n            })", span="1185-1189", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_808 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1183-1183", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_614 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords(bool)", span="863-863", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords(bool)", file="SqlServerConnectionFacts.cs"];
m5_615 [label="UseConnections((sql, connection) =>\r\n            {\r\n                connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                });\r\n\r\n                var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value);\r\n\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            }, useBatching)", span="865-880", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords(bool)", file="SqlServerConnectionFacts.cs"];
m5_616 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords(bool)", span="863-863", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords(bool)", file="SqlServerConnectionFacts.cs"];
m5_170 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", span="1495-1495", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", file="SqlServerConnectionFacts.cs"];
m5_999 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", span="1495-1495", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", file="SqlServerConnectionFacts.cs"];
m5_35 [label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken()", file="SqlServerConnectionFacts.cs"];
m5_708 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="389-389", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnectionFacts.cs"];
m5_985 [label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="31-31", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerConnectionFacts.cs"];
m5_593 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="837-837", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_594 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="839-845", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_595 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="837-837", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_0 [label="Entry HangFire.Server.WorkerPool.WorkerPool()", span="6-6", cluster="HangFire.Server.WorkerPool.WorkerPool()", file="SqlServerConnectionFacts.cs"];
m5_1 [label="Exit HangFire.Server.WorkerPool.WorkerPool()", span="6-6", cluster="HangFire.Server.WorkerPool.WorkerPool()", file="SqlServerConnectionFacts.cs"];
m5_3 [label="Exit HangFire.Server.WorkerPool.WorkerPool(int)", span="11-11", cluster="HangFire.Server.WorkerPool.WorkerPool(int)", file="SqlServerConnectionFacts.cs"];
m5_2 [label="Entry HangFire.Server.WorkerPool.WorkerPool(int)", span="11-11", cluster="HangFire.Server.WorkerPool.WorkerPool(int)", file="SqlServerConnectionFacts.cs"];
m5_983 [label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37", cluster="Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="SqlServerConnectionFacts.cs"];
m5_242 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="140-140", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnectionFacts.cs"];
m5_993 [label="Entry Mock<SqlServerStorage>.cstr", span="", cluster="Mock<SqlServerStorage>.cstr", file="SqlServerConnectionFacts.cs"];
m5_73 [label="Entry Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="59-59", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnectionFacts.cs"];
m5_156 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="196-196", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="SqlServerConnectionFacts.cs"];
m5_157 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''parameters'', exception.ParamName);\r\n            })", span="198-208", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="SqlServerConnectionFacts.cs"];
m5_158 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="196-196", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="SqlServerConnectionFacts.cs"];
m5_689 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="970-970", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="SqlServerConnectionFacts.cs"];
m5_691 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { key = ''set-1'', value = ''value-1'' },\r\n                    new { key = ''set-2'', value = ''value-1'' },\r\n                    new { key = ''set-1'', value = ''value-2'' }\r\n                });\r\n\r\n                var result = connection.GetSetCount(''set-1'');\r\n\r\n                Assert.Equal(2, result);\r\n            })", span="976-988", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="SqlServerConnectionFacts.cs"];
m5_690 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score])\r\nvalues (@key, @value, 0.0)''", span="972-974", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="SqlServerConnectionFacts.cs"];
m5_692 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="970-970", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="SqlServerConnectionFacts.cs"];
m5_842 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1238-1238", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_843 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListTtl(''my-list'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1240-1244", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_844 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1238-1238", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_552 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="767-767", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="SqlServerConnectionFacts.cs"];
m5_554 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    });\r\n\r\n                connection.RemoveTimedOutServers(TimeSpan.FromHours(15));\r\n\r\n                var liveServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server2'', liveServer.Id);\r\n            })", span="773-787", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="SqlServerConnectionFacts.cs"];
m5_553 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues (@id, '', @heartbeat)''", span="769-771", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="SqlServerConnectionFacts.cs"];
m5_555 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="767-767", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="SqlServerConnectionFacts.cs"];
m5_832 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1228-1228", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_833 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null));\r\n            })", span="1230-1234", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_834 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1228-1228", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_199 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="SqlServerConnectionFacts.cs"];
m5_290 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="347-347", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="SqlServerConnectionFacts.cs"];
m5_292 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Name'', result.Name);\r\n                Assert.Equal(''Reason'', result.Reason);\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="363-380", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="SqlServerConnectionFacts.cs"];
m5_291 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="349-361", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="SqlServerConnectionFacts.cs"];
m5_293 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="347-347", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="SqlServerConnectionFacts.cs"];
m5_880 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1297-1297", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_881 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetValueFromHash(''my-hash'', ''name'');\r\n                Assert.Null(result);\r\n            })", span="1299-1303", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_882 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1297-1297", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_52 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="SqlServerConnectionFacts.cs"];
m5_64 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="SqlServerConnectionFacts.cs"];
m5_42 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", span="57-57", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="SqlServerConnectionFacts.cs"];
m5_43 [label="UseConnection(connection =>\r\n            {\r\n                var token = new CancellationToken();\r\n                var anotherProvider = new Mock<IPersistentJobQueueProvider>();\r\n                _providers.Add(anotherProvider.Object, new [] { ''critical'' });\r\n\r\n                Assert.Throws<InvalidOperationException>(\r\n                    () => connection.FetchNextJob(new[] { ''critical'', ''default'' }, token));\r\n            })", span="59-67", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="SqlServerConnectionFacts.cs"];
m5_44 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", span="57-57", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="SqlServerConnectionFacts.cs"];
m5_171 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters(bool)", span="214-214", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters(bool)", file="SqlServerConnectionFacts.cs"];
m5_172 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var createdAt = new DateTime(2012, 12, 12);\r\n                var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1));\r\n\r\n                Assert.NotNull(jobId);\r\n                Assert.NotEmpty(jobId);\r\n\r\n                var sqlJob = sql.Query(''select * from HangFire.Job'').Single();\r\n                Assert.Equal(jobId, sqlJob.Id.ToString());\r\n                Assert.Equal(createdAt, sqlJob.CreatedAt);\r\n                Assert.Equal(null, (int?) sqlJob.StateId);\r\n                Assert.Equal(null, (string) sqlJob.StateName);\r\n\r\n                var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData);\r\n                invocationData.Arguments = sqlJob.Arguments;\r\n\r\n                var job = invocationData.Deserialize();\r\n                Assert.Equal(typeof(SqlServerConnectionFacts), job.Type);\r\n                Assert.Equal(''SampleMethod'', job.Method.Name);\r\n                Assert.Equal(''Hello'', job.Args[0]);\r\n\r\n                Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt);\r\n                Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1));\r\n\r\n                var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value);\r\n\r\n                Assert.Equal(''Value1'', parameters[''Key1'']);\r\n                Assert.Equal(''Value2'', parameters[''Key2'']);\r\n            }, useBatching)", span="216-252", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters(bool)", file="SqlServerConnectionFacts.cs"];
m5_173 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters(bool)", span="214-214", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters(bool)", file="SqlServerConnectionFacts.cs"];
m5_8 [label="HangFire.Server.WorkerPool", span="", cluster="Unk.Setup", file="SqlServerConnectionFacts.cs"];
m5_753 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="1094-1094", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_754 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null));\r\n            })", span="1096-1099", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_755 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="1094-1094", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_250 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="SqlServerConnectionFacts.cs"];
m5_25 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", span="43-43", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="SqlServerConnectionFacts.cs"];
m5_26 [label="UseConnection(connection =>\r\n            {\r\n                var token = new CancellationToken();\r\n                var queues = new[] { ''default'' };\r\n\r\n                connection.FetchNextJob(queues, token);\r\n\r\n                _queue.Verify(x => x.Dequeue(queues, token));\r\n            })", span="45-53", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="SqlServerConnectionFacts.cs"];
m5_27 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", span="43-43", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="SqlServerConnectionFacts.cs"];
m5_582 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="810-810", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="SqlServerConnectionFacts.cs"];
m5_584 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Contains(''1'', result);\r\n                Assert.Contains(''2'', result);\r\n            })", span="816-833", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="SqlServerConnectionFacts.cs"];
m5_583 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues (@key, 0.0, @value)''", span="812-814", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="SqlServerConnectionFacts.cs"];
m5_585 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="810-810", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="SqlServerConnectionFacts.cs"];
m5_10 [label="Entry PersistentJobQueueProviderCollection.cstr", span="", cluster="PersistentJobQueueProviderCollection.cstr", file="SqlServerConnectionFacts.cs"];
m5_155 [label="Entry Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="84-84", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnectionFacts.cs"];
m5_268 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="SqlServerConnectionFacts.cs"];
m5_562 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="SqlServerConnectionFacts.cs"];
m5_198 [label="Entry Unk.NotEmpty", span="", cluster="Unk.NotEmpty", file="SqlServerConnectionFacts.cs"];
m5_14 [label="Entry Unk.GetJobQueue", span="", cluster="Unk.GetJobQueue", file="SqlServerConnectionFacts.cs"];
m5_135 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_IsReentrant_FromTheSameConnection_OnTheSameResource()", span="167-167", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_IsReentrant_FromTheSameConnection_OnTheSameResource()", file="SqlServerConnectionFacts.cs"];
m5_136 [label="UseConnection(connection =>\r\n            {\r\n                using (connection.AcquireDistributedLock(''hello'', TimeSpan.FromMinutes(5)))\r\n                using (connection.AcquireDistributedLock(''hello'', TimeSpan.FromMinutes(5)))\r\n                {\r\n                    Assert.True(true);\r\n                }\r\n            })", span="169-176", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_IsReentrant_FromTheSameConnection_OnTheSameResource()", file="SqlServerConnectionFacts.cs"];
m5_137 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_IsReentrant_FromTheSameConnection_OnTheSameResource()", span="167-167", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_IsReentrant_FromTheSameConnection_OnTheSameResource()", file="SqlServerConnectionFacts.cs"];
m5_914 [label="Entry Unk.Empty", span="", cluster="Unk.Empty", file="SqlServerConnectionFacts.cs"];
m5_604 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="849-849", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="SqlServerConnectionFacts.cs"];
m5_605 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null));\r\n\r\n                Assert.Equal(''keyValuePairs'', exception.ParamName);\r\n            })", span="851-857", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="SqlServerConnectionFacts.cs"];
m5_606 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="849-849", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="SqlServerConnectionFacts.cs"];
m5_763 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="1103-1103", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_764 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashCount(''my-hash'');\r\n                Assert.Equal(0, result);\r\n            })", span="1105-1109", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_765 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="1103-1103", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_779 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="1138-1138", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_780 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null));\r\n            })", span="1140-1144", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_781 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="1138-1138", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_718 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="1026-1026", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_719 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null));\r\n            })", span="1028-1032", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_720 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="1026-1026", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_28 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1481-1481", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnectionFacts.cs"];
m5_989 [label="storage.Setup(x => x.QueueProviders).Returns(_providers)", span="1486-1486", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnectionFacts.cs"];
m5_988 [label="var storage = new Mock<SqlServerStorage>(sql)", span="1485-1485", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnectionFacts.cs"];
m5_990 [label="var connection = new SqlServerConnection(storage.Object)", span="1488-1488", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnectionFacts.cs"];
m5_987 [label="var sql = ConnectionUtils.CreateConnection()", span="1483-1483", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnectionFacts.cs"];
m5_991 [label="action(connection)", span="1490-1490", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnectionFacts.cs"];
m5_992 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1481-1481", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnectionFacts.cs"];
m5_37 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="SqlServerConnectionFacts.cs"];
m5_573 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="240-240", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnectionFacts.cs"];
m5_896 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1332-1332", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_897 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1334-1340", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_898 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1332-1332", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_379 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="538-538", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs"];
m5_380 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="540-546", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs"];
m5_381 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="538-538", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs"];
m5_492 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="SqlServerConnectionFacts.cs"];
m5_915 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1354-1354", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="SqlServerConnectionFacts.cs"];
m5_917 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetRangeFromList(''list-1'', 1, 2);\r\n                \r\n                // Assert\r\n                Assert.Equal(new [] { ''4'', ''3'' }, result);\r\n            })", span="1360-1377", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="SqlServerConnectionFacts.cs"];
m5_916 [label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [Value])\r\nvalues (@key, @value)''", span="1356-1358", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="SqlServerConnectionFacts.cs"];
m5_918 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1354-1354", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="SqlServerConnectionFacts.cs"];
m5_84 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="SqlServerConnectionFacts.cs"];
m5_205 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="SqlServerConnectionFacts.cs"];
m5_563 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="SqlServerConnectionFacts.cs"];
m5_144 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="180-180", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="SqlServerConnectionFacts.cs"];
m5_145 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''job'', exception.ParamName);\r\n            })", span="182-192", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="SqlServerConnectionFacts.cs"];
m5_146 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="180-180", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="SqlServerConnectionFacts.cs"];
m5_728 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="1036-1036", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_729 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetCounter(''my-counter'');\r\n                Assert.Equal(0, result);\r\n            })", span="1038-1042", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_730 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="1036-1036", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_933 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="518-518", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnectionFacts.cs"];
m5_950 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1426-1426", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_951 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null));\r\n            })", span="1428-1431", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_952 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1426-1426", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_65 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", span="81-81", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="SqlServerConnectionFacts.cs"];
m5_66 [label="UseConnection(connection =>\r\n            {\r\n                var @lock = connection.AcquireDistributedLock(''1'', TimeSpan.FromSeconds(1));\r\n                Assert.NotNull(@lock);\r\n            })", span="83-87", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="SqlServerConnectionFacts.cs"];
m5_67 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", span="81-81", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="SqlServerConnectionFacts.cs"];
m5_196 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="SqlServerConnectionFacts.cs"];
m5_19 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerConnectionFacts.cs"];
m5_334 [label="Entry Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="211-211", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnectionFacts.cs"];
m5_672 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="950-950", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_673 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null));\r\n            })", span="952-956", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_674 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="950-950", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs"];
m5_444 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="627-627", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="SqlServerConnectionFacts.cs"];
m5_446 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0);\r\n                \r\n                Assert.Equal(''-1.0'', result);\r\n            })", span="637-644", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="SqlServerConnectionFacts.cs"];
m5_445 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues \r\n('key', 1.0, '1.0'),\r\n('key', -1.0, '-1.0'),\r\n('key', -5.0, '-5.0'),\r\n('another-key', -2.0, '-2.0')''", span="629-635", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="SqlServerConnectionFacts.cs"];
m5_447 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="627-627", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="SqlServerConnectionFacts.cs"];
m5_72 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerConnectionFacts.cs"];
m5_709 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="1001-1001", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="SqlServerConnectionFacts.cs"];
m5_711 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                });\r\n\r\n                var result = connection.GetRangeFromSet(''set-1'', 2, 3);\r\n\r\n                Assert.Equal(new [] { ''3'', ''4'' }, result);\r\n            })", span="1007-1022", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="SqlServerConnectionFacts.cs"];
m5_710 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score])\r\nvalues (@Key, @Value, 0.0)''", span="1003-1005", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="SqlServerConnectionFacts.cs"];
m5_712 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="1001-1001", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="SqlServerConnectionFacts.cs"];
m5_356 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="491-491", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="SqlServerConnectionFacts.cs"];
m5_358 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n                connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''AnotherValue'', parameter.Value);\r\n            })", span="498-511", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="SqlServerConnectionFacts.cs"];
m5_357 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="493-496", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="SqlServerConnectionFacts.cs"];
m5_359 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="491-491", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="SqlServerConnectionFacts.cs"];
m5_197 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="SqlServerConnectionFacts.cs"];
m5_959 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="405-405", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnectionFacts.cs"];
m5_389 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="229-229", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnectionFacts.cs"];
m5_464 [label="Entry Hangfire.Server.ServerContext.ServerContext()", span="20-20", cluster="Hangfire.Server.ServerContext.ServerContext()", file="SqlServerConnectionFacts.cs"];
m5_154 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerConnectionFacts.cs"];
m5_416 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="SqlServerConnectionFacts.cs"];
m5_282 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="180-180", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnectionFacts.cs"];
m5_108 [label="Entry System.Threading.ManualResetEventSlim.Wait()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Wait()", file="SqlServerConnectionFacts.cs"];
m5_525 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="737-737", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="SqlServerConnectionFacts.cs"];
m5_527 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.Heartbeat(''server1'');\r\n\r\n                var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat);\r\n\r\n                Assert.NotEqual(2012, servers[''server1''].Year);\r\n                Assert.Equal(2012, servers[''server2''].Year);\r\n            })", span="745-756", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="SqlServerConnectionFacts.cs"];
m5_526 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues\r\n('server1', '', '2012-12-12 12:12:12'),\r\n('server2', '', '2012-12-12 12:12:12')''", span="739-743", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="SqlServerConnectionFacts.cs"];
m5_528 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="737-737", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="SqlServerConnectionFacts.cs"];
m5_907 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1344-1344", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_908 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetRangeFromList(''my-list'', 0, 1);\r\n                Assert.Empty(result);\r\n            })", span="1346-1350", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_909 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1344-1344", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_74 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_WhenResourceIsNullOrEmpty()", span="91-91", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_WhenResourceIsNullOrEmpty()", file="SqlServerConnectionFacts.cs"];
m5_75 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                () => connection.AcquireDistributedLock('''', TimeSpan.FromMinutes(5)));\r\n\r\n                Assert.Equal(''resource'', exception.ParamName);\r\n            })", span="93-99", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_WhenResourceIsNullOrEmpty()", file="SqlServerConnectionFacts.cs"];
m5_76 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_WhenResourceIsNullOrEmpty()", span="91-91", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireDistributedLock_ThrowsAnException_WhenResourceIsNullOrEmpty()", file="SqlServerConnectionFacts.cs"];
m5_251 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="296-296", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="SqlServerConnectionFacts.cs"];
m5_253 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = Job.FromExpression(() => SampleMethod(''wrong''));\r\n\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result);\r\n                Assert.NotNull(result.Job);\r\n                Assert.Equal(''Succeeded'', result.State);\r\n                Assert.Equal(''Arguments'', result.Job.Args[0]);\r\n                Assert.Null(result.LoadException);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt);\r\n                Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1));\r\n            })", span="303-325", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="SqlServerConnectionFacts.cs"];
m5_252 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="298-301", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="SqlServerConnectionFacts.cs"];
m5_254 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="296-296", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="SqlServerConnectionFacts.cs"];
m5_493 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="SqlServerConnectionFacts.cs"];
m5_515 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="730-730", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs"];
m5_516 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null)))", span="732-733", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs"];
m5_517 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="730-730", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs"];
m5_823 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1203-1203", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="SqlServerConnectionFacts.cs"];
m5_825 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListCount(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="1209-1224", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="SqlServerConnectionFacts.cs"];
m5_824 [label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key])\r\nvalues (@key)''", span="1205-1207", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="SqlServerConnectionFacts.cs"];
m5_826 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1203-1203", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="SqlServerConnectionFacts.cs"];
m5_681 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="379-379", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerConnectionFacts.cs"];
m5_233 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="279-279", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs"];
m5_234 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null)))", span="281-282", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs"];
m5_235 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="279-279", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs"];
m5_94 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="SqlServerConnectionFacts.cs"];
m5_143 [label="Entry Unk.True", span="", cluster="Unk.True", file="SqlServerConnectionFacts.cs"];
m5_437 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="615-615", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_438 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1);\r\n\r\n                Assert.Null(result);\r\n            })", span="617-623", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_439 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="615-615", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_815 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="473-473", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnectionFacts.cs"];
m5_682 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="960-960", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_683 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetCount(''my-set'');\r\n                Assert.Equal(0, result);\r\n            })", span="962-966", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_684 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="960-960", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="SqlServerConnectionFacts.cs"];
m5_1000 [label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", span="", file="SqlServerConnectionFacts.cs"];
m5_1040 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1006 [label=releaseLock, span="", file="SqlServerConnectionFacts.cs"];
m5_1007 [label=lockAcquired, span="", file="SqlServerConnectionFacts.cs"];
m5_1024 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1041 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1001 [label=token, span="", file="SqlServerConnectionFacts.cs"];
m5_1002 [label=queues, span="", file="SqlServerConnectionFacts.cs"];
m5_1003 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1004 [label=token, span="", file="SqlServerConnectionFacts.cs"];
m5_1005 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1008 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1009 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1010 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1011 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1012 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1013 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1014 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1015 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1016 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1017 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1018 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1019 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1020 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1021 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1022 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1023 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1025 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1026 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1027 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1028 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1029 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1030 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1031 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1032 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1033 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1034 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1035 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1036 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1037 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1038 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1039 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1042 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1043 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1044 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1045 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1046 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1047 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1048 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1049 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1050 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1051 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1052 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1053 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1054 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1055 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1056 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1057 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1058 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1059 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1060 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1061 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1062 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1063 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m5_1064 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnectionFacts.cs"];
m5_1065 [label=arrangeSql, span="", file="SqlServerConnectionFacts.cs"];
m6_92 [label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="193-193", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SqlServerStorage.cs"];
m6_104 [label="var transaction = _connection.CreateWriteTransaction()", span="197-197", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SqlServerStorage.cs"];
m6_105 [label="var changedContext = new StateApplyingContext(\r\n                    context,\r\n                    transaction)", span="199-201", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SqlServerStorage.cs"];
m6_106 [label="ApplyState(changedContext, context.CurrentState, context.CandidateState, stateChangedFilters)", span="203-203", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SqlServerStorage.cs"];
m6_107 [label="return transaction.Commit();", span="205-205", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SqlServerStorage.cs"];
m6_108 [label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="193-193", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SqlServerStorage.cs"];
m6_90 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="SqlServerStorage.cs"];
m6_145 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="SqlServerStorage.cs"];
m6_161 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="SqlServerStorage.cs"];
m6_93 [label="Entry HangFire.States.FailedState.FailedState(string, System.Exception)", span="27-27", cluster="HangFire.States.FailedState.FailedState(string, System.Exception)", file="SqlServerStorage.cs"];
m6_50 [label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17", cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerStorage.cs"];
m6_94 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="SqlServerStorage.cs"];
m6_87 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="SqlServerStorage.cs"];
m6_89 [label="Entry HangFire.Storage.IStoredJobs.GetStateAndInvocationData(string)", span="6-6", cluster="HangFire.Storage.IStoredJobs.GetStateAndInvocationData(string)", file="SqlServerStorage.cs"];
m6_91 [label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="89-89", cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="SqlServerStorage.cs"];
m6_49 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="SqlServerStorage.cs"];
m6_127 [label="Entry HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", span="31-31", cluster="HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", file="SqlServerStorage.cs"];
m6_128 [label="Entry HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="22-22", cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SqlServerStorage.cs"];
m6_146 [label="Entry HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="10-10", cluster="HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerStorage.cs"];
m6_17 [label="Entry HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="286-286", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="SqlServerStorage.cs"];
m6_153 [label="handler == null", span="288-288", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="SqlServerStorage.cs"];
m6_155 [label="String.IsNullOrEmpty(handler.StateName)", span="289-289", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="SqlServerStorage.cs"];
m6_157 [label="!_handlers.ContainsKey(handler.StateName)", span="291-291", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="SqlServerStorage.cs"];
m6_158 [label="_handlers.Add(handler.StateName, new List<JobStateHandler>())", span="293-293", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="SqlServerStorage.cs"];
m6_159 [label="_handlers[handler.StateName].Add(handler)", span="296-296", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="SqlServerStorage.cs"];
m6_154 [label="throw new ArgumentNullException(''handler'');", span="288-288", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="SqlServerStorage.cs"];
m6_156 [label="throw new ArgumentNullException(''stateName'');", span="289-289", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="SqlServerStorage.cs"];
m6_160 [label="Exit HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", span="286-286", cluster="HangFire.States.StateMachine.RegisterHandler(HangFire.Common.States.JobStateHandler)", file="SqlServerStorage.cs"];
m6_0 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="SqlServerStorage.cs"];
m6_1 [label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="SqlServerStorage.cs"];
m6_53 [label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="SqlServerStorage.cs"];
m6_152 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="SqlServerStorage.cs"];
m6_125 [label="Entry HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="27-27", cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SqlServerStorage.cs"];
m6_55 [label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8", cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="SqlServerStorage.cs"];
m6_25 [label="Entry HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", span="38-38", cluster="HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", file="SqlServerStorage.cs"];
m6_26 [label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="SqlServerStorage.cs"];
m6_27 [label="method == null", span="69-69", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="SqlServerStorage.cs"];
m6_29 [label="parameters == null", span="70-70", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="SqlServerStorage.cs"];
m6_31 [label="state == null", span="71-71", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="SqlServerStorage.cs"];
m6_33 [label="var invocationData = new InvocationData\r\n            {\r\n                Type = method.Type.AssemblyQualifiedName,\r\n                Method = method.Method.Name,\r\n                ParameterTypes = JobHelper.ToJson(method.Method.GetParameters().Select(x => x.ParameterType)),\r\n            }", span="73-78", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="SqlServerStorage.cs"];
m6_34 [label="var jobId = _connection.CreateExpiredJob(\r\n                invocationData, \r\n                arguments,\r\n                parameters,\r\n                TimeSpan.FromHours(1))", span="80-84", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="SqlServerStorage.cs"];
m6_35 [label="var filterInfo = GetFilters(method)", span="86-86", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="SqlServerStorage.cs"];
m6_36 [label="var context = new StateContext(jobId, method)", span="87-87", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="SqlServerStorage.cs"];
m6_37 [label="var changingContext = new StateChangingContext(context, state, null, _connection)", span="88-88", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="SqlServerStorage.cs"];
m6_28 [label="throw new ArgumentNullException(''method'');", span="69-69", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="SqlServerStorage.cs"];
m6_30 [label="throw new ArgumentNullException(''parameters'');", span="70-70", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="SqlServerStorage.cs"];
m6_32 [label="throw new ArgumentNullException(''state'');", span="71-71", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="SqlServerStorage.cs"];
m6_42 [label="transaction.Jobs.Persist(jobId)", span="104-104", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="SqlServerStorage.cs"];
m6_44 [label="return jobId;", span="110-110", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="SqlServerStorage.cs"];
m6_38 [label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="90-90", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="SqlServerStorage.cs"];
m6_41 [label="ApplyState(\r\n                    changedContext, \r\n                    null,\r\n                    changingContext.CandidateState,\r\n                    filterInfo.StateChangedFilters)", span="98-102", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="SqlServerStorage.cs"];
m6_40 [label="var changedContext = new StateApplyingContext(\r\n                    context,\r\n                    transaction)", span="94-96", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="SqlServerStorage.cs"];
m6_39 [label="var transaction = _connection.CreateWriteTransaction()", span="92-92", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="SqlServerStorage.cs"];
m6_43 [label="transaction.Commit()", span="107-107", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="SqlServerStorage.cs"];
m6_45 [label="Exit HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", span="63-63", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="SqlServerStorage.cs"];
m6_56 [label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", span="23-23", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", file="SqlServerStorage.cs"];
m6_15 [label="Entry HangFire.JobStorage.GetStateHandlers()", span="52-52", cluster="HangFire.JobStorage.GetStateHandlers()", file="SqlServerStorage.cs"];
m6_58 [label="Entry HangFire.Storage.IWriteableStoredJobs.Persist(string)", span="8-8", cluster="HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="SqlServerStorage.cs"];
m6_148 [label="Entry HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="12-12", cluster="HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerStorage.cs"];
m6_151 [label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="119-119", cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="SqlServerStorage.cs"];
m6_59 [label="Entry HangFire.Storage.IAtomicWriteTransaction.Commit()", span="13-13", cluster="HangFire.Storage.IAtomicWriteTransaction.Commit()", file="SqlServerStorage.cs"];
m6_144 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="SqlServerStorage.cs"];
m6_123 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="SqlServerStorage.cs"];
m6_88 [label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11", cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="SqlServerStorage.cs"];
m6_124 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="SqlServerStorage.cs"];
m6_48 [label="Entry Unk.ToJson", span="", cluster="Unk.ToJson", file="SqlServerStorage.cs"];
m6_60 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="SqlServerStorage.cs"];
m6_19 [label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59", cluster="lambda expression", file="SqlServerStorage.cs"];
m6_18 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="SqlServerStorage.cs"];
m6_20 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="SqlServerStorage.cs"];
m6_22 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="SqlServerStorage.cs"];
m6_23 [label="new JobFilter(f, JobFilterScope.Type, null)", span="59-59", cluster="lambda expression", file="SqlServerStorage.cs"];
m6_24 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="SqlServerStorage.cs"];
m6_61 [label="x.ParameterType", span="77-77", cluster="lambda expression", file="SqlServerStorage.cs"];
m6_62 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="SqlServerStorage.cs"];
m6_147 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerStorage.cs"];
m6_21 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SqlServerStorage.cs"];
m6_54 [label="Entry HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="178-178", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="SqlServerStorage.cs"];
m6_96 [label=filters, span="181-181", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="SqlServerStorage.cs"];
m6_97 [label="var oldState = context.CandidateState", span="183-183", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="SqlServerStorage.cs"];
m6_98 [label="filter.OnStateChanging(context)", span="184-184", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="SqlServerStorage.cs"];
m6_99 [label="oldState != context.CandidateState", span="186-186", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="SqlServerStorage.cs"];
m6_100 [label="AppendHistory(context, oldState, false)", span="188-188", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="SqlServerStorage.cs"];
m6_101 [label="Exit HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", span="178-178", cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="SqlServerStorage.cs"];
m6_57 [label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="209-209", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SqlServerStorage.cs"];
m6_109 [label="!String.IsNullOrEmpty(oldState)", span="215-215", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SqlServerStorage.cs"];
m6_110 [label="_handlers.ContainsKey(oldState)", span="217-217", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SqlServerStorage.cs"];
m6_111 [label="_handlers[oldState]", span="219-219", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SqlServerStorage.cs"];
m6_112 [label="handler.Unapply(context)", span="221-221", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SqlServerStorage.cs"];
m6_113 [label=stateChangedFilters, span="225-225", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SqlServerStorage.cs"];
m6_114 [label="filter.OnStateUnapplied(context)", span="227-227", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SqlServerStorage.cs"];
m6_115 [label="_handlers.ContainsKey(chosenState.StateName)", span="231-231", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SqlServerStorage.cs"];
m6_116 [label="var stateData = chosenState.GetProperties(context.JobMethod)", span="233-233", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SqlServerStorage.cs"];
m6_117 [label="_handlers[chosenState.StateName]", span="234-234", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SqlServerStorage.cs"];
m6_118 [label="handler.Apply(context, stateData)", span="236-236", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SqlServerStorage.cs"];
m6_119 [label="AppendHistory(context.Transaction, context, chosenState, true)", span="240-240", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SqlServerStorage.cs"];
m6_120 [label=stateChangedFilters, span="242-242", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SqlServerStorage.cs"];
m6_121 [label="filter.OnStateApplied(context)", span="244-244", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SqlServerStorage.cs"];
m6_122 [label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="209-209", cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="SqlServerStorage.cs"];
m6_63 [label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_64 [label="String.IsNullOrWhiteSpace(jobId)", span="116-116", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_66 [label="state == null", span="117-117", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_68 [label="_connection.AcquireJobLock(jobId)", span="119-119", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_69 [label="var jobData = _connection.Jobs.GetStateAndInvocationData(jobId)", span="123-123", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_73 [label="allowedCurrentStates.Length > 0 && !allowedCurrentStates.Contains(currentState)", span="132-132", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_77 [label="var context = new StateContext(jobId, jobMethod)", span="142-142", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_78 [label="var changingContext = new StateChangingContext(context, state, currentState, _connection)", span="143-143", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_82 [label="var changingContext = new StateChangingContext(\r\n                            new StateContext(jobId, null),\r\n                            new FailedState(\r\n                                String.Format(\r\n                                    ''Could not change the state of the job '{0}' to the '{1}'. See the inner exception for details.'',\r\n                                    state.StateName, jobId),\r\n                                ex),\r\n                            currentState,\r\n                            _connection)", span="156-164", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_65 [label="throw new ArgumentNullException(''jobId'');", span="116-116", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_67 [label="throw new ArgumentNullException(''state'');", span="117-117", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_70 [label="jobData == null", span="125-125", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_72 [label="var currentState = jobData.State", span="131-131", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_75 [label="var jobMethod = JobMethod.Deserialize(jobData.InvocationData)", span="139-139", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_71 [label="return false;", span="128-128", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_74 [label="return false;", span="134-134", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_76 [label="var filterInfo = GetFilters(jobMethod)", span="140-140", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_79 [label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="145-145", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_80 [label="return ApplyState(changingContext, filterInfo.StateChangedFilters);", span="147-147", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_81 [label=JobLoadException, span="149-149", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_83 [label="return ApplyState(\r\n                            changingContext,\r\n                            Enumerable.Empty<IStateChangedFilter>());", span="166-168", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_84 [label=Exception, span="171-171", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_85 [label="throw;", span="173-173", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_86 [label="Exit HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SqlServerStorage.cs"];
m6_102 [label="Entry HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30", cluster="HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="SqlServerStorage.cs"];
m6_129 [label="Entry HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="258-258", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="SqlServerStorage.cs"];
m6_135 [label="var properties = new Dictionary<string, string>(\r\n                state.GetProperties(context.JobMethod))", span="264-265", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="SqlServerStorage.cs"];
m6_137 [label="properties.Add(''State'', state.StateName)", span="268-268", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="SqlServerStorage.cs"];
m6_138 [label=appendToJob, span="270-270", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="SqlServerStorage.cs"];
m6_139 [label="transaction.Jobs.SetState(context.JobId, state.StateName, properties)", span="272-272", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="SqlServerStorage.cs"];
m6_140 [label="properties.Add(''Reason'', state.Reason)", span="275-275", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="SqlServerStorage.cs"];
m6_142 [label="transaction.Jobs.AppendHistory(context.JobId, properties)", span="278-278", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="SqlServerStorage.cs"];
m6_136 [label="var now = DateTime.UtcNow", span="266-266", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="SqlServerStorage.cs"];
m6_141 [label="properties.Add(''CreatedAt'', JobHelper.ToStringTimestamp(now))", span="276-276", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="SqlServerStorage.cs"];
m6_143 [label="Exit HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="258-258", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Storage.IAtomicWriteTransaction, HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="SqlServerStorage.cs"];
m6_130 [label="Entry HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="27-27", cluster="HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="SqlServerStorage.cs"];
m6_163 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="SqlServerStorage.cs"];
m6_51 [label="Entry HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="281-281", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="SqlServerStorage.cs"];
m6_149 [label="return new JobFilterInfo(_getFiltersThunk(method));", span="283-283", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="SqlServerStorage.cs"];
m6_150 [label="Exit HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="281-281", cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="SqlServerStorage.cs"];
m6_126 [label="Entry HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="33-33", cluster="HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="SqlServerStorage.cs"];
m6_16 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="SqlServerStorage.cs"];
m6_47 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="SqlServerStorage.cs"];
m6_103 [label="Entry HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="248-248", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="SqlServerStorage.cs"];
m6_131 [label="var transaction = _connection.CreateWriteTransaction()", span="251-251", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="SqlServerStorage.cs"];
m6_132 [label="AppendHistory(transaction, context, state, appendToJob)", span="253-253", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="SqlServerStorage.cs"];
m6_133 [label="transaction.Commit()", span="254-254", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="SqlServerStorage.cs"];
m6_134 [label="Exit HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="248-248", cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="SqlServerStorage.cs"];
m6_162 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="SqlServerStorage.cs"];
m6_52 [label="Entry HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", span="27-27", cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="SqlServerStorage.cs"];
m6_46 [label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2", cluster="HangFire.Storage.InvocationData.InvocationData()", file="SqlServerStorage.cs"];
m6_95 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="SqlServerStorage.cs"];
m6_2 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="SqlServerStorage.cs"];
m6_3 [label="connection == null", span="46-46", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="SqlServerStorage.cs"];
m6_5 [label="stateHandlers == null", span="47-47", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="SqlServerStorage.cs"];
m6_7 [label="_connection = connection", span="49-49", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="SqlServerStorage.cs"];
m6_8 [label="var handlers = stateHandlers.Union(connection.Storage.GetStateHandlers())", span="51-51", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="SqlServerStorage.cs"];
m6_11 [label="filters != null", span="57-57", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="SqlServerStorage.cs"];
m6_12 [label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="59-59", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="SqlServerStorage.cs"];
m6_4 [label="throw new ArgumentNullException(''connection'');", span="46-46", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="SqlServerStorage.cs"];
m6_6 [label="throw new ArgumentNullException(''stateHandlers'');", span="47-47", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="SqlServerStorage.cs"];
m6_9 [label=handlers, span="52-52", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="SqlServerStorage.cs"];
m6_10 [label="RegisterHandler(handler)", span="54-54", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="SqlServerStorage.cs"];
m6_13 [label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="SqlServerStorage.cs"];
m6_164 [label="HangFire.States.StateMachine", span="", file="SqlServerStorage.cs"];
m6_165 [label="System.Collections.Generic.IEnumerable<object>", span="", file="SqlServerStorage.cs"];
m7_84 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="SqlServerWriteOnlyTransaction.cs"];
m7_78 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="SqlServerWriteOnlyTransaction.cs"];
m7_76 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="SqlServerWriteOnlyTransaction.cs"];
m7_92 [label="Entry HangFire.Web.HtmlHelper.MarkupStackTrace(string)", span="115-115", cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="SqlServerWriteOnlyTransaction.cs"];
m7_79 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="SqlServerWriteOnlyTransaction.cs"];
m7_91 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="SqlServerWriteOnlyTransaction.cs"];
m7_77 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="SqlServerWriteOnlyTransaction.cs"];
m7_81 [label="Entry HangFire.Storage.IMonitoringApi.FailedCount()", span="41-41", cluster="HangFire.Storage.IMonitoringApi.FailedCount()", file="SqlServerWriteOnlyTransaction.cs"];
m7_85 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="SqlServerWriteOnlyTransaction.cs"];
m7_87 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="SqlServerWriteOnlyTransaction.cs"];
m7_82 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="SqlServerWriteOnlyTransaction.cs"];
m7_90 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="SqlServerWriteOnlyTransaction.cs"];
m7_0 [label="Entry HangFire.Web.Pages.FailedJobsPage.Execute()", span="52-52", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_16 [label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Enqueueing...''''>\r\n                <span class=''''glyphicon glyphicon-repeat''''></span>\r\n                Requeue jobs\r\n            </button>\r\n\r\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\r\n                    data-url='''''')", span="129-136", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m7_15 [label="Write(Request.LinkTo(''/failed/requeue''))", span="124-124", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_17 [label="Write(Request.LinkTo(''/failed/delete''))", span="141-141", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_1 [label="WriteLiteral(''\r\n'')", span="56-56", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_2 [label="Layout = new LayoutPage { Title = ''Failed Jobs'' }", span="68-68", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_4 [label="int.TryParse(Request.QueryString[''from''], out from)", span="72-72", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_5 [label="int.TryParse(Request.QueryString[''count''], out perPage)", span="73-73", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_9 [label="pager = new Pager(from, perPage, monitor.FailedCount())\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/failed'')\r\n        }", span="80-83", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_11 [label="WriteLiteral(''\r\n'')", span="93-93", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_13 [label="WriteLiteral(''    <div class=\''alert alert-success\''>\r\n        You have no failed jobs at the mom'' +\r\n''ent.\r\n    </div>\r\n'')", span="104-105", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_14 [label="WriteLiteral(''    <div class=\''js-jobs-list\''>\r\n        <div class=\''btn-toolbar btn-toolbar-top\''>'' +\r\n''\r\n            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\r\n     '' +\r\n''               data-url=\'''')", span="117-119", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_18 [label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Deleting...''''\r\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\r\n                <span class=''''glyphicon glyphicon-remove''''></span>\r\n                Delete selected\r\n            </button>\r\n\r\n            '')", span="146-153", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_19 [label="Write(RenderPartial(new PerPageSelector(pager)))", span="158-158", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_20 [label="WriteLiteral(@''\r\n        </div>\r\n\r\n        <table class=''''table failed-table''''>\r\n            <thead>\r\n                <tr>\r\n                    <th class=''''min-width''''>\r\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                    </th>\r\n                    <th class=''''min-width''''>Id</th>\r\n                    <th>Failed</th>\r\n                    <th>Job</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n'')", span="163-178", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_23 [label="WriteLiteral(''                    <tr class=\''js-jobs-list-row '')", span="197-197", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_24 [label="Write(!job.Value.InFailedState ? ''obsolete-data'' : null)", span="202-202", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_25 [label="WriteLiteral('' '')", span="207-207", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_26 [label="Write(job.Value.InFailedState ? ''hover'' : null)", span="212-212", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_27 [label="WriteLiteral(''\''>\r\n                        <td rowspan=\'''')", span="217-217", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_28 [label="Write(job.Value.InFailedState ? ''2'' : ''1'')", span="222-222", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_29 [label="WriteLiteral(''\''>\r\n'')", span="227-227", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_31 [label="WriteLiteral(''                                <input type=\''checkbox\'' class=\''js-jobs-list-checkb'' +\r\n''ox\'' name=\''jobs[]\'' value=\'''')", span="238-239", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_32 [label="Write(job.Key)", span="244-244", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_33 [label="WriteLiteral(''\'' />\r\n'')", span="249-249", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_34 [label="WriteLiteral(''                        </td>\r\n                        <td class=\''min-width\'' rows'' +\r\n''pan=\'''')", span="259-260", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_35 [label="Write(job.Value.InFailedState ? ''2'' : ''1'')", span="265-265", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_36 [label="WriteLiteral(''\''>\r\n                            <a href=\'''')", span="270-270", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_37 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="275-275", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_38 [label="WriteLiteral(''\''>\r\n                                '')", span="280-280", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_39 [label="Write(HtmlHelper.JobId(job.Key))", span="285-285", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_40 [label="WriteLiteral(''\r\n                            </a>\r\n'')", span="290-290", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_42 [label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="301-302", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_43 [label="WriteLiteral(''                        </td>\r\n                        <td class=\''min-width\''>\r\n'')", span="312-312", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_45 [label="WriteLiteral(''                                <span data-moment=\'''')", span="323-323", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_46 [label="Write(JobHelper.ToStringTimestamp(job.Value.FailedAt.Value))", span="328-328", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_47 [label="WriteLiteral(''\''>\r\n                                    '')", span="333-333", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_48 [label="Write(job.Value.FailedAt)", span="338-338", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_49 [label="WriteLiteral(''\r\n                                </span>\r\n'')", span="343-343", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_50 [label="WriteLiteral(''                        </td>\r\n                        <td>\r\n                    '' +\r\n''        <div>\r\n                                <a class=\''job-method\'' href=\'''')", span="353-354", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_51 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="359-359", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_52 [label="WriteLiteral(''\''>\r\n                                    '')", span="364-364", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_53 [label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="369-369", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_54 [label="WriteLiteral(''\r\n                                </a>\r\n                            </div>\r\n'')", span="374-374", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_56 [label="WriteLiteral(''                                <div style=\''color: #888;\''>\r\n                     '' +\r\n''               '')", span="385-386", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_57 [label="Write(job.Value.Reason)", span="391-391", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_58 [label="WriteLiteral('' <a class=\''expander\'' href=\''#\''>More&nbsp;details...</a>\r\n                         '' +\r\n''       </div>\r\n'')", span="396-397", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_59 [label="WriteLiteral(''                        </td>\r\n                    </tr>\r\n'')", span="407-407", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_61 [label="WriteLiteral(''                        <tr>\r\n                            <td colspan=\''2\'' class=\'''' +\r\n''failed-job-details\''>\r\n                                <div class=\''expandable\'' st'' +\r\n''yle=\'''')", span="418-420", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_62 [label="Write(index++ == 0 ? ''display: block;'' : null)", span="425-425", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_63 [label="WriteLiteral(''\''>\r\n                                    <h4>'')", span="430-430", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_64 [label="Write(job.Value.ExceptionType)", span="435-435", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_65 [label="WriteLiteral(''</h4>\r\n                                    <p>\r\n                                 '' +\r\n''       '')", span="440-441", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_66 [label="Write(job.Value.ExceptionMessage)", span="446-446", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_67 [label="WriteLiteral(''\r\n                                    </p>\r\n\r\n'')", span="451-451", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_69 [label="WriteLiteral(''                                        <pre class=\''stack-trace\''>'')", span="462-462", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_70 [label="Write(HtmlHelper.MarkupStackTrace(job.Value.ExceptionDetails))", span="467-467", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_71 [label="WriteLiteral(''</pre>\r\n'')", span="472-472", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_72 [label="WriteLiteral(''                                </div>\r\n                            </td>\r\n      '' +\r\n''                  </tr>\r\n'')", span="482-483", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_73 [label="WriteLiteral(''            </tbody>\r\n        </table>\r\n    </div>\r\n'')", span="494-494", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_74 [label="Write(RenderPartial(new Paginator(pager)))", span="506-506", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_3 [label="int from, perPage", span="70-70", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_6 [label="Pager pager", span="75-75", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_8 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="78-78", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_10 [label="failedJobs = monitor\r\n            .FailedJobs(pager.FromRecord, pager.RecordsPerPage)", span="85-86", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_12 [label="pager.TotalPageCount == 0", span="98-98", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_21 [label="var index = 0", span="183-183", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_22 [label=failedJobs, span="191-191", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_30 [label="job.Value.InFailedState", span="232-232", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_41 [label="!job.Value.InFailedState", span="295-295", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_44 [label="job.Value.FailedAt.HasValue", span="317-317", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_55 [label="!String.IsNullOrEmpty(job.Value.ExceptionMessage)", span="379-379", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_60 [label="job.Value.InFailedState", span="412-412", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_68 [label="!String.IsNullOrEmpty(job.Value.ExceptionDetails)", span="456-456", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_7 [label="JobList<FailedJobDto> failedJobs", span="76-76", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_75 [label="Exit HangFire.Web.Pages.FailedJobsPage.Execute()", span="52-52", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="SqlServerWriteOnlyTransaction.cs"];
m7_93 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="SqlServerWriteOnlyTransaction.cs"];
m7_83 [label="Entry HangFire.Storage.IMonitoringApi.FailedJobs(int, int)", span="35-35", cluster="HangFire.Storage.IMonitoringApi.FailedJobs(int, int)", file="SqlServerWriteOnlyTransaction.cs"];
m7_86 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="SqlServerWriteOnlyTransaction.cs"];
m7_89 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerWriteOnlyTransaction.cs"];
m7_80 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="SqlServerWriteOnlyTransaction.cs"];
m7_88 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="SqlServerWriteOnlyTransaction.cs"];
m7_94 [label="HangFire.Web.Pages.FailedJobsPage", span="", file="SqlServerWriteOnlyTransaction.cs"];
m8_68 [label="Entry Hangfire.Server.Worker.ToString()", span="178-178", cluster="Hangfire.Server.Worker.ToString()", file="Worker.cs"];
m8_69 [label="return $''{GetType().Name} #{_workerId.Substring(0, 8)}'';", span="180-180", cluster="Hangfire.Server.Worker.ToString()", file="Worker.cs"];
m8_70 [label="Exit Hangfire.Server.Worker.ToString()", span="178-178", cluster="Hangfire.Server.Worker.ToString()", file="Worker.cs"];
m8_99 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()", file="Worker.cs"];
m8_103 [label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="75-75", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="Worker.cs"];
m8_61 [label="Entry Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", span="165-165", cluster="Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", file="Worker.cs"];
m8_62 [label="fetchedJob.Requeue()", span="169-169", cluster="Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", file="Worker.cs"];
m8_64 [label="Logger.WarnException($''Failed to immediately re-queue the background job '{fetchedJob.JobId}'. Next invocation may be delayed, if invisibility timeout is used'', ex)", span="173-173", cluster="Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", file="Worker.cs"];
m8_63 [label=Exception, span="171-171", cluster="Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", file="Worker.cs"];
m8_65 [label="Exit Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", span="165-165", cluster="Hangfire.Server.Worker.Requeue(Hangfire.Storage.IFetchedJob)", file="Worker.cs"];
m8_46 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()", file="Worker.cs"];
m8_57 [label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", span="35-35", cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", file="Worker.cs"];
m8_60 [label="Entry Hangfire.Logging.ILog.DebugException(string, System.Exception)", span="132-132", cluster="Hangfire.Logging.ILog.DebugException(string, System.Exception)", file="Worker.cs"];
m8_71 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="Worker.cs"];
m8_58 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="Worker.cs"];
m8_52 [label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, System.Collections.Generic.IEnumerable<string>, System.Threading.CancellationToken)", span="45-45", cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, System.Collections.Generic.IEnumerable<string>, System.Threading.CancellationToken)", file="Worker.cs"];
m8_49 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", file="Worker.cs"];
m8_67 [label="Entry Hangfire.Logging.ILog.WarnException(string, System.Exception)", span="280-280", cluster="Hangfire.Logging.ILog.WarnException(string, System.Exception)", file="Worker.cs"];
m8_56 [label="Entry Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", span="183-183", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m8_73 [label="var jobData = connection.GetJobData(jobId)", span="187-187", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m8_77 [label="var backgroundJob = new BackgroundJob(jobId, jobData.Job, jobData.CreatedAt)", span="199-199", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m8_78 [label="var jobToken = new ServerJobCancellationToken(connection, jobId, context.ServerId, _workerId, context.CancellationToken)", span="201-201", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m8_79 [label="var performContext = new PerformContext(connection, backgroundJob, jobToken)", span="202-202", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m8_90 [label="ex is OperationCanceledException && context.IsShutdownRequested", span="228-228", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m8_74 [label="jobData == null", span="188-188", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m8_76 [label="jobData.EnsureLoaded()", span="197-197", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m8_80 [label="var latency = (DateTime.UtcNow - jobData.CreatedAt).TotalMilliseconds", span="204-204", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m8_75 [label="return null;", span="194-194", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m8_82 [label="var result = _performer.Perform(performContext)", span="207-207", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m8_81 [label="var duration = Stopwatch.StartNew()", span="205-205", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m8_84 [label="return new SucceededState(result, (long) latency, duration.ElapsedMilliseconds);", span="210-210", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m8_83 [label="duration.Stop()", span="208-208", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m8_85 [label=JobAbortedException, span="212-212", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m8_86 [label="return null;", span="217-217", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m8_87 [label=JobPerformanceException, span="219-219", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m8_88 [label="return new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                };", span="221-224", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m8_89 [label=Exception, span="226-226", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m8_91 [label="throw;", span="230-230", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m8_92 [label="return new FailedState(ex)\r\n                {\r\n                    Reason = ''An exception occurred during processing of a background job.''\r\n                };", span="233-236", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m8_93 [label="Exit Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", span="183-183", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs"];
m8_101 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="Worker.cs"];
m8_102 [label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="51-51", cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="Worker.cs"];
m8_17 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="Worker.cs"];
m8_94 [label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42", cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="Worker.cs"];
m8_20 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="Worker.cs"];
m8_72 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="Worker.cs"];
m8_48 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="Worker.cs"];
m8_55 [label="Entry Hangfire.Storage.IFetchedJob.RemoveFromQueue()", span="24-24", cluster="Hangfire.Storage.IFetchedJob.RemoveFromQueue()", file="Worker.cs"];
m8_66 [label="Entry Hangfire.Storage.IFetchedJob.Requeue()", span="25-25", cluster="Hangfire.Storage.IFetchedJob.Requeue()", file="Worker.cs"];
m8_95 [label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29", cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="Worker.cs"];
m8_0 [label="Entry Hangfire.Server.Worker.Worker()", span="51-51", cluster="Hangfire.Server.Worker.Worker()", file="Worker.cs"];
m8_1 [label="Exit Hangfire.Server.Worker.Worker()", span="51-51", cluster="Hangfire.Server.Worker.Worker()", file="Worker.cs"];
m8_2 [label="Entry Hangfire.Server.Worker.Worker(params string[])", span="55-55", cluster="Hangfire.Server.Worker.Worker(params string[])", file="Worker.cs"];
m8_3 [label="Exit Hangfire.Server.Worker.Worker(params string[])", span="55-55", cluster="Hangfire.Server.Worker.Worker(params string[])", file="Worker.cs"];
m8_51 [label="Entry Hangfire.States.ProcessingState.ProcessingState(string, string)", span="39-39", cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="Worker.cs"];
m8_54 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="Worker.cs"];
m8_59 [label="Entry Hangfire.Logging.ILog.Info(string)", span="204-204", cluster="Hangfire.Logging.ILog.Info(string)", file="Worker.cs"];
m8_19 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="Worker.cs"];
m8_4 [label="Entry Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", span="60-60", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs"];
m8_5 [label="queues == null", span="65-65", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs"];
m8_6 [label="throw new ArgumentNullException(nameof(queues));", span="65-65", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs"];
m8_7 [label="performer == null", span="66-66", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs"];
m8_8 [label="throw new ArgumentNullException(nameof(performer));", span="66-66", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs"];
m8_9 [label="stateChanger == null", span="67-67", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs"];
m8_10 [label="throw new ArgumentNullException(nameof(stateChanger));", span="67-67", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs"];
m8_11 [label="_queues = queues.ToArray()", span="69-69", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs"];
m8_12 [label="_performer = performer", span="70-70", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs"];
m8_13 [label="_stateChanger = stateChanger", span="71-71", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs"];
m8_14 [label="_workerId = Guid.NewGuid().ToString()", span="72-72", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs"];
m8_15 [label="Exit Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", span="60-60", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs"];
m8_47 [label="Entry Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="36-36", cluster="Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="Worker.cs"];
m8_53 [label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25", cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="Worker.cs"];
m8_100 [label="Entry Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", span="20-20", cluster="Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", file="Worker.cs"];
m8_21 [label="Entry Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="76-76", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m8_22 [label="context == null", span="78-78", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m8_23 [label="throw new ArgumentNullException(nameof(context));", span="78-78", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m8_24 [label="var connection = context.Storage.GetConnection()", span="80-80", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m8_25 [label="var fetchedJob = connection.FetchNextJob(_queues, context.CancellationToken)", span="81-81", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m8_26 [label="context.CancellationToken.ThrowIfCancellationRequested()", span="83-83", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m8_28 [label="var linkedCts = CancellationTokenSource.CreateLinkedTokenSource(\r\n                        context.CancellationToken,\r\n                        timeoutCts.Token)", span="88-90", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m8_29 [label=Exception, span="96-96", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", color=green, community=0];
m8_30 [label="Console.WriteLine(e)", span="98-98", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", color=green, community=0];
m8_32 [label="context.CancellationToken.ThrowIfCancellationRequested()", span="108-108", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m8_35 [label="var state = PerformJob(context, connection, fetchedJob.JobId)", span="121-121", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m8_37 [label="_stateChanger.ChangeState(new StateChangeContext(\r\n                            context.Storage,\r\n                            connection,\r\n                            fetchedJob.JobId, \r\n                            state, \r\n                            ProcessingState.StateName))", span="126-131", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m8_40 [label="context.IsShutdownRequested", span="148-148", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m8_33 [label="fetchedJob.RemoveFromQueue()", span="111-111", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m8_38 [label="fetchedJob.RemoveFromQueue()", span="141-141", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m8_41 [label="Logger.Info(String.Format(\r\n                            ''Shutdown request requested while processing background job '{0}'. It will be re-queued.'',\r\n                            fetchedJob.JobId))", span="150-152", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m8_43 [label="Requeue(fetchedJob)", span="159-159", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m8_27 [label="var timeoutCts = new CancellationTokenSource(JobInitializationWaitTimeout)", span="87-87", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m8_31 [label="throw;", span="99-99", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", color=green, community=0];
m8_34 [label="return;", span="112-112", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m8_36 [label="state != null", span="123-123", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m8_39 [label=Exception, span="146-146", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m8_42 [label="Logger.DebugException(''An exception occurred while processing a job. It will be re-queued.'', ex)", span="156-156", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m8_44 [label="throw;", span="160-160", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m8_45 [label="Exit Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="76-76", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m8_18 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="Worker.cs"];
m8_97 [label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, string, System.Threading.CancellationToken)", span="32-32", cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, string, System.Threading.CancellationToken)", file="Worker.cs"];
m8_98 [label="Entry Hangfire.Server.PerformContext.PerformContext(Hangfire.Storage.IStorageConnection, Hangfire.BackgroundJob, Hangfire.IJobCancellationToken)", span="36-36", cluster="Hangfire.Server.PerformContext.PerformContext(Hangfire.Storage.IStorageConnection, Hangfire.BackgroundJob, Hangfire.IJobCancellationToken)", file="Worker.cs"];
m8_96 [label="Entry Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", span="25-25", cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="Worker.cs"];
m8_50 [label="Entry System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", span="0-0", cluster="System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", file="Worker.cs"];
m8_104 [label="Hangfire.Server.Worker", span="", file="Worker.cs"];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label="System.Action<Hangfire.IBootstrapperConfiguration>"];
n0 -> n6  [key=1, style=dashed, color=darkseagreen4, label="System.Action<Hangfire.IBootstrapperConfiguration>"];
n0 -> n14  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
n0 -> n15  [key=1, style=dashed, color=darkseagreen4, label=IAppBuilder];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n19  [key=2, style=dotted];
n14 -> n13  [key=0, style=solid];
n14 -> n21  [key=2, style=dotted];
n14 -> n22  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n23  [key=2, style=dotted];
n2 -> n16  [key=0, style=solid];
n2 -> n17  [key=2, style=dotted];
n4 -> n16  [key=0, style=solid];
n4 -> n17  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n18  [key=2, style=dotted];
n5 -> n7  [key=1, style=dashed, color=darkseagreen4, label=configuration];
n5 -> n8  [key=1, style=dashed, color=darkseagreen4, label=configuration];
n5 -> n9  [key=1, style=dashed, color=darkseagreen4, label=configuration];
n5 -> n10  [key=1, style=dashed, color=darkseagreen4, label=configuration];
n5 -> n11  [key=1, style=dashed, color=darkseagreen4, label=configuration];
n5 -> n13  [key=1, style=dashed, color=darkseagreen4, label=configuration];
n5 -> n15  [key=1, style=dashed, color=darkseagreen4, label=configuration];
n7 -> n8  [key=0, style=solid];
n7 -> n9  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n11 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=0, style=solid];
n12 -> n11  [key=0, style=solid];
n12 -> n20  [key=2, style=dotted];
n16 -> n0  [key=0, style=bold, color=blue];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_5  [key=2, style=dotted];
m0_22 -> m0_28  [key=2, style=dotted];
m0_22 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=genericArguments];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_30  [key=2, style=dotted];
m0_25 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_25 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_25 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label=genericArguments];
m0_25 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=genericArguments];
m0_23 -> m0_24  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_29  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_27 -> m0_21  [key=0, style=bold, color=blue];
m0_17 -> m0_18  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_20  [key=2, style=dotted];
m0_19 -> m0_17  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=0, style=solid];
m0_1 -> m0_5  [key=2, style=dotted];
m0_2 -> m0_4  [key=0, style=solid];
m0_2 -> m0_6  [key=2, style=dotted];
m0_2 -> m0_7  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_8  [key=2, style=dotted];
m0_3 -> m0_6  [key=2, style=dotted];
m0_3 -> m0_7  [key=2, style=dotted];
m0_3 -> m0_9  [key=2, style=dotted];
m0_4 -> m0_0  [key=0, style=bold, color=blue];
m0_31 -> m0_32  [key=0, style=solid];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_38  [key=2, style=dotted];
m0_33 -> m0_39  [key=2, style=dotted];
m0_33 -> m0_40  [key=2, style=dotted];
m0_33 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=currentArguments];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_41  [key=2, style=dotted];
m0_34 -> m0_42  [key=2, style=dotted];
m0_34 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=genericArguments];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_16  [key=2, style=dotted];
m0_32 -> m0_37  [key=2, style=dotted];
m0_32 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=currentGenericArgumentNumbers];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_43  [key=2, style=dotted];
m0_36 -> m0_31  [key=0, style=bold, color=blue];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_10 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_13  [key=0, style=solid];
m0_12 -> m0_15  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_16  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_15 -> m0_10  [key=0, style=bold, color=blue];
m0_44 -> m0_45  [key=0, style=solid];
m0_45 -> m0_46  [key=0, style=solid];
m0_46 -> m0_44  [key=0, style=bold, color=blue];
m0_47 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label=genericArguments];
m0_47 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=genericArguments];
m2_0 -> m2_1  [key=0, style=solid, color=green];
m2_0 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression"];
m2_1 -> m2_2  [key=0, style=solid, color=green];
m2_1 -> m2_3  [key=0, style=solid, color=green];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_7  [key=2, style=dotted];
m2_2 -> m2_5  [key=0, style=solid, color=green];
m2_2 -> n17  [key=2, style=dotted, color=green];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_8  [key=2, style=dotted];
m2_5 -> m2_0  [key=0, style=bold, color=blue];
m2_7 -> m2_9  [key=0, style=solid];
m2_7 -> m2_0  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Linq.Expressions.Expression arg"];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_12  [key=2, style=dotted];
m2_9 -> m2_13  [key=2, style=dotted];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_14  [key=2, style=dotted];
m2_11 -> m2_7  [key=0, style=bold, color=blue];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action>"];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> n21  [key=2, style=dotted];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_24  [key=2, style=dotted];
m4_23 -> m4_20  [key=0, style=bold, color=blue];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_47  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> n21  [key=2, style=dotted];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_49  [key=2, style=dotted];
m4_48 -> m4_45  [key=0, style=bold, color=blue];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_37  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> n21  [key=2, style=dotted];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_39  [key=2, style=dotted];
m4_38 -> m4_35  [key=0, style=bold, color=blue];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_61 -> m4_62  [key=0, style=solid];
m4_61 -> n21  [key=2, style=dotted];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_64  [key=2, style=dotted];
m4_63 -> m4_60  [key=0, style=bold, color=blue];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_57  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> n21  [key=2, style=dotted];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_59  [key=2, style=dotted];
m4_58 -> m4_55  [key=0, style=bold, color=blue];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action<T>>"];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> n21  [key=2, style=dotted];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_34  [key=2, style=dotted];
m4_33 -> m4_30  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=2, style=dotted];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_52  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> n21  [key=2, style=dotted];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_54  [key=2, style=dotted];
m4_53 -> m4_50  [key=0, style=bold, color=blue];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_42  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> n21  [key=2, style=dotted];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_44  [key=2, style=dotted];
m4_43 -> m4_40  [key=0, style=bold, color=blue];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action>"];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> n21  [key=2, style=dotted];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_19  [key=2, style=dotted];
m4_18 -> m4_15  [key=0, style=bold, color=blue];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action>"];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> n21  [key=2, style=dotted];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_9  [key=2, style=dotted];
m4_7 -> m4_4  [key=0, style=bold, color=blue];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action<T>>"];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> n21  [key=2, style=dotted];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_14  [key=2, style=dotted];
m4_13 -> m4_10  [key=0, style=bold, color=blue];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_27  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Action<T>>"];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> n21  [key=2, style=dotted];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_29  [key=2, style=dotted];
m4_28 -> m4_25  [key=0, style=bold, color=blue];
m5_629 -> m5_630  [key=0, style=solid];
m5_630 -> m5_631  [key=0, style=solid];
m5_630 -> m5_88  [key=2, style=dotted];
m5_630 -> m5_632  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_631 -> m5_629  [key=0, style=bold, color=blue];
m5_699 -> m5_700  [key=0, style=solid];
m5_700 -> m5_45  [key=2, style=dotted];
m5_700 -> m5_701  [key=0, style=solid];
m5_700 -> m5_702  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_701 -> m5_699  [key=0, style=bold, color=blue];
m5_95 -> m5_96  [key=0, style=solid];
m5_98 -> m5_99  [key=0, style=solid];
m5_98 -> m5_106  [key=2, style=dotted];
m5_98 -> m5_103  [key=1, style=dashed, color=darkseagreen4, label=thread];
m5_101 -> m5_45  [key=2, style=dotted];
m5_101 -> m5_102  [key=0, style=solid];
m5_101 -> m5_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_96 -> m5_98  [key=1, style=dashed, color=darkseagreen4, label=releaseLock];
m5_96 -> m5_112  [key=1, style=dashed, color=darkseagreen4, label=releaseLock];
m5_96 -> m5_97  [key=0, style=solid];
m5_96 -> m5_105  [key=2, style=dotted];
m5_96 -> m5_117  [key=1, style=dashed, color=darkseagreen4, label=releaseLock];
m5_96 -> m5_102  [key=1, style=dashed, color=darkseagreen4, label=releaseLock];
m5_97 -> m5_98  [key=0, style=solid];
m5_97 -> m5_112  [key=1, style=dashed, color=darkseagreen4, label=lockAcquired];
m5_97 -> m5_105  [key=2, style=dotted];
m5_97 -> m5_116  [key=1, style=dashed, color=darkseagreen4, label=lockAcquired];
m5_97 -> m5_100  [key=1, style=dashed, color=darkseagreen4, label=lockAcquired];
m5_99 -> m5_100  [key=0, style=solid];
m5_99 -> m5_107  [key=2, style=dotted];
m5_103 -> m5_104  [key=0, style=solid];
m5_103 -> m5_110  [key=2, style=dotted];
m5_100 -> m5_101  [key=0, style=solid];
m5_100 -> m5_108  [key=2, style=dotted];
m5_102 -> m5_103  [key=0, style=solid];
m5_102 -> m5_109  [key=2, style=dotted];
m5_104 -> m5_95  [key=0, style=bold, color=blue];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_4 -> m5_10  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_0  [key=0, style=bold, color=blue];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_4  [key=0, style=bold, color=blue];
m5_542 -> m5_543  [key=0, style=solid];
m5_543 -> m5_45  [key=2, style=dotted];
m5_543 -> m5_544  [key=0, style=solid];
m5_543 -> m5_545  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_544 -> m5_542  [key=0, style=bold, color=blue];
m5_887 -> m5_888  [key=0, style=solid];
m5_889 -> m5_890  [key=0, style=solid];
m5_889 -> m5_88  [key=2, style=dotted];
m5_889 -> m5_891  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_888 -> m5_889  [key=0, style=solid];
m5_888 -> m5_661  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_888 -> m5_892  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_890 -> m5_887  [key=0, style=bold, color=blue];
m5_428 -> m5_429  [key=0, style=solid];
m5_429 -> m5_45  [key=2, style=dotted];
m5_429 -> m5_430  [key=0, style=solid];
m5_429 -> m5_431  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_430 -> m5_428  [key=0, style=bold, color=blue];
m5_816 -> m5_817  [key=0, style=solid];
m5_817 -> m5_45  [key=2, style=dotted];
m5_817 -> m5_818  [key=0, style=solid];
m5_817 -> m5_819  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_818 -> m5_816  [key=0, style=bold, color=blue];
m5_744 -> m5_745  [key=0, style=solid];
m5_746 -> m5_747  [key=0, style=solid];
m5_746 -> m5_88  [key=2, style=dotted];
m5_746 -> m5_748  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_745 -> m5_746  [key=0, style=solid];
m5_745 -> m5_745  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_745 -> m5_749  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_747 -> m5_744  [key=0, style=bold, color=blue];
m5_941 -> m5_942  [key=0, style=solid];
m5_943 -> m5_944  [key=0, style=solid];
m5_943 -> m5_88  [key=2, style=dotted];
m5_943 -> m5_945  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_942 -> m5_943  [key=0, style=solid];
m5_942 -> m5_942  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_942 -> m5_946  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_944 -> m5_941  [key=0, style=bold, color=blue];
m5_335 -> m5_336  [key=0, style=solid];
m5_336 -> m5_45  [key=2, style=dotted];
m5_336 -> m5_337  [key=0, style=solid];
m5_336 -> m5_338  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_337 -> m5_335  [key=0, style=bold, color=blue];
m5_407 -> m5_408  [key=0, style=solid];
m5_409 -> m5_410  [key=0, style=solid];
m5_409 -> m5_88  [key=2, style=dotted];
m5_409 -> m5_411  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_408 -> m5_409  [key=0, style=solid];
m5_408 -> m5_412  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_408 -> m5_408  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_410 -> m5_407  [key=0, style=bold, color=blue];
m5_368 -> m5_369  [key=0, style=solid];
m5_370 -> m5_371  [key=0, style=solid];
m5_370 -> m5_88  [key=2, style=dotted];
m5_370 -> m5_372  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_369 -> m5_370  [key=0, style=solid];
m5_369 -> m5_346  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_369 -> m5_373  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_371 -> m5_368  [key=0, style=bold, color=blue];
m5_125 -> m5_126  [key=0, style=solid];
m5_126 -> m5_127  [key=0, style=solid];
m5_126 -> m5_88  [key=2, style=dotted];
m5_126 -> m5_128  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_127 -> m5_125  [key=0, style=bold, color=blue];
m5_934 -> m5_935  [key=0, style=solid];
m5_935 -> m5_45  [key=2, style=dotted];
m5_935 -> m5_936  [key=0, style=solid];
m5_935 -> m5_937  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_936 -> m5_934  [key=0, style=bold, color=blue];
m5_273 -> m5_274  [key=0, style=solid];
m5_274 -> m5_45  [key=2, style=dotted];
m5_274 -> m5_275  [key=0, style=solid];
m5_274 -> m5_276  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_275 -> m5_273  [key=0, style=bold, color=blue];
m5_960 -> m5_961  [key=0, style=solid];
m5_961 -> m5_45  [key=2, style=dotted];
m5_961 -> m5_962  [key=0, style=solid];
m5_961 -> m5_963  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_962 -> m5_960  [key=0, style=bold, color=blue];
m5_85 -> m5_86  [key=0, style=solid];
m5_86 -> m5_87  [key=0, style=solid];
m5_86 -> m5_88  [key=2, style=dotted];
m5_86 -> m5_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_87 -> m5_85  [key=0, style=bold, color=blue];
m5_796 -> m5_797  [key=0, style=solid];
m5_798 -> m5_799  [key=0, style=solid];
m5_798 -> m5_88  [key=2, style=dotted];
m5_798 -> m5_800  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_797 -> m5_798  [key=0, style=solid];
m5_797 -> m5_797  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_797 -> m5_801  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_799 -> m5_796  [key=0, style=bold, color=blue];
m5_345 -> m5_346  [key=0, style=solid];
m5_347 -> m5_348  [key=0, style=solid];
m5_347 -> m5_88  [key=2, style=dotted];
m5_347 -> m5_349  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_346 -> m5_347  [key=0, style=solid];
m5_346 -> m5_346  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_346 -> m5_350  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_348 -> m5_345  [key=0, style=bold, color=blue];
m5_417 -> m5_418  [key=0, style=solid];
m5_418 -> m5_45  [key=2, style=dotted];
m5_418 -> m5_419  [key=0, style=solid];
m5_418 -> m5_420  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_419 -> m5_417  [key=0, style=bold, color=blue];
m5_494 -> m5_495  [key=0, style=solid];
m5_495 -> m5_45  [key=2, style=dotted];
m5_495 -> m5_496  [key=0, style=solid];
m5_495 -> m5_497  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_496 -> m5_494  [key=0, style=bold, color=blue];
m5_849 -> m5_850  [key=0, style=solid];
m5_851 -> m5_852  [key=0, style=solid];
m5_851 -> m5_88  [key=2, style=dotted];
m5_851 -> m5_853  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_850 -> m5_851  [key=0, style=solid];
m5_850 -> m5_850  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_850 -> m5_854  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_852 -> m5_849  [key=0, style=bold, color=blue];
m5_303 -> m5_304  [key=0, style=solid];
m5_305 -> m5_306  [key=0, style=solid];
m5_305 -> m5_88  [key=2, style=dotted];
m5_305 -> m5_307  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_304 -> m5_305  [key=0, style=solid];
m5_304 -> m5_291  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_304 -> m5_309  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_306 -> m5_303  [key=0, style=bold, color=blue];
m5_735 -> m5_736  [key=0, style=solid];
m5_737 -> m5_738  [key=0, style=solid];
m5_737 -> m5_88  [key=2, style=dotted];
m5_737 -> m5_739  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_736 -> m5_737  [key=0, style=solid];
m5_736 -> m5_736  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_736 -> m5_740  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_738 -> m5_735  [key=0, style=bold, color=blue];
m5_215 -> m5_216  [key=0, style=solid];
m5_216 -> m5_217  [key=0, style=solid];
m5_216 -> m5_88  [key=2, style=dotted];
m5_216 -> m5_218  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_217 -> m5_215  [key=0, style=bold, color=blue];
m5_924 -> m5_925  [key=0, style=solid];
m5_925 -> m5_45  [key=2, style=dotted];
m5_925 -> m5_926  [key=0, style=solid];
m5_925 -> m5_927  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_926 -> m5_924  [key=0, style=bold, color=blue];
m5_466 -> m5_467  [key=0, style=solid];
m5_467 -> m5_45  [key=2, style=dotted];
m5_467 -> m5_468  [key=0, style=solid];
m5_467 -> m5_469  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_468 -> m5_466  [key=0, style=bold, color=blue];
m5_390 -> m5_391  [key=0, style=solid];
m5_391 -> m5_45  [key=2, style=dotted];
m5_391 -> m5_392  [key=0, style=solid];
m5_391 -> m5_393  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_392 -> m5_390  [key=0, style=bold, color=blue];
m5_314 -> m5_315  [key=0, style=solid];
m5_316 -> m5_317  [key=0, style=solid];
m5_316 -> m5_88  [key=2, style=dotted];
m5_316 -> m5_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_315 -> m5_316  [key=0, style=solid];
m5_315 -> m5_252  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_315 -> m5_319  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_317 -> m5_314  [key=0, style=bold, color=blue];
m5_967 -> m5_968  [key=0, style=solid];
m5_969 -> m5_970  [key=0, style=solid];
m5_969 -> m5_88  [key=2, style=dotted];
m5_969 -> m5_971  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_968 -> m5_969  [key=0, style=solid];
m5_968 -> m5_968  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_968 -> m5_972  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_970 -> m5_967  [key=0, style=bold, color=blue];
m5_643 -> m5_644  [key=0, style=solid, color=green];
m5_644 -> m5_645  [key=0, style=solid, color=green];
m5_644 -> m5_45  [key=2, style=dotted, color=green];
m5_644 -> m5_646  [key=1, style=dashed, color=green, label="lambda expression"];
m5_645 -> m5_643  [key=0, style=bold, color=blue];
m5_653 -> m5_654  [key=0, style=solid, color=green];
m5_654 -> m5_655  [key=0, style=solid, color=green];
m5_654 -> m5_45  [key=2, style=dotted, color=green];
m5_654 -> m5_656  [key=1, style=dashed, color=green, label="lambda expression"];
m5_655 -> m5_653  [key=0, style=bold, color=blue];
m5_283 -> m5_284  [key=0, style=solid];
m5_284 -> m5_45  [key=2, style=dotted];
m5_284 -> m5_285  [key=0, style=solid];
m5_284 -> m5_286  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_285 -> m5_283  [key=0, style=bold, color=blue];
m5_574 -> m5_575  [key=0, style=solid];
m5_575 -> m5_45  [key=2, style=dotted];
m5_575 -> m5_576  [key=0, style=solid];
m5_575 -> m5_577  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_576 -> m5_574  [key=0, style=bold, color=blue];
m5_504 -> m5_505  [key=0, style=solid];
m5_506 -> m5_507  [key=0, style=solid];
m5_506 -> m5_88  [key=2, style=dotted];
m5_506 -> m5_508  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_505 -> m5_506  [key=0, style=solid];
m5_505 -> m5_505  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_505 -> m5_509  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_507 -> m5_504  [key=0, style=bold, color=blue];
m5_660 -> m5_661  [key=0, style=solid];
m5_662 -> m5_663  [key=0, style=solid];
m5_662 -> m5_88  [key=2, style=dotted];
m5_662 -> m5_664  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_661 -> m5_662  [key=0, style=solid];
m5_661 -> m5_661  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_661 -> m5_665  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_663 -> m5_660  [key=0, style=bold, color=blue];
m5_859 -> m5_860  [key=0, style=solid];
m5_860 -> m5_45  [key=2, style=dotted];
m5_860 -> m5_861  [key=0, style=solid];
m5_860 -> m5_862  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_861 -> m5_859  [key=0, style=bold, color=blue];
m5_15 -> m5_16  [key=0, style=solid];
m5_16 -> m5_19  [key=2, style=dotted];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_20  [key=2, style=dotted];
m5_18 -> m5_15  [key=0, style=bold, color=blue];
m5_870 -> m5_871  [key=0, style=solid];
m5_871 -> m5_45  [key=2, style=dotted];
m5_871 -> m5_872  [key=0, style=solid];
m5_871 -> m5_873  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_872 -> m5_870  [key=0, style=bold, color=blue];
m5_789 -> m5_790  [key=0, style=solid];
m5_790 -> m5_45  [key=2, style=dotted];
m5_790 -> m5_791  [key=0, style=solid];
m5_790 -> m5_792  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_791 -> m5_789  [key=0, style=bold, color=blue];
m5_476 -> m5_477  [key=0, style=solid];
m5_477 -> m5_478  [key=0, style=solid];
m5_477 -> m5_88  [key=2, style=dotted];
m5_477 -> m5_479  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_478 -> m5_476  [key=0, style=bold, color=blue];
m5_640 -> m5_641  [key=0, style=solid];
m5_646 -> m5_647  [key=0, style=solid, color=green];
m5_646 -> m5_650  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m5_647 -> m5_648  [key=0, style=solid, color=green];
m5_647 -> m5_19  [key=2, style=dotted, color=green];
m5_647 -> m5_649  [key=1, style=dashed, color=green, label="lambda expression"];
m5_648 -> m5_646  [key=0, style=bold, color=blue];
m5_649 -> m5_650  [key=0, style=solid, color=green];
m5_650 -> m5_651  [key=0, style=solid, color=green];
m5_650 -> m5_652  [key=2, style=dotted, color=green];
m5_651 -> m5_649  [key=0, style=bold, color=blue];
m5_656 -> m5_657  [key=0, style=solid, color=green];
m5_657 -> m5_658  [key=0, style=solid, color=green];
m5_657 -> m5_652  [key=2, style=dotted, color=green];
m5_658 -> m5_659  [key=0, style=solid, color=green];
m5_658 -> m5_250  [key=2, style=dotted, color=green];
m5_659 -> m5_656  [key=0, style=bold, color=blue];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_37  [key=2, style=dotted];
m5_33 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_52  [key=2, style=dotted];
m5_112 -> m5_113  [key=0, style=solid];
m5_112 -> m5_28  [key=2, style=dotted];
m5_112 -> m5_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_50 -> m5_19  [key=2, style=dotted];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_78 -> m5_19  [key=2, style=dotted];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_91 -> m5_19  [key=2, style=dotted];
m5_91 -> m5_92  [key=0, style=solid];
m5_91 -> m5_94  [key=2, style=dotted];
m5_120 -> m5_19  [key=2, style=dotted];
m5_120 -> m5_121  [key=0, style=solid];
m5_120 -> m5_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_131 -> m5_19  [key=2, style=dotted];
m5_131 -> m5_132  [key=0, style=solid];
m5_131 -> m5_94  [key=2, style=dotted];
m5_148 -> m5_19  [key=2, style=dotted];
m5_148 -> m5_149  [key=0, style=solid];
m5_148 -> m5_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_160 -> m5_19  [key=2, style=dotted];
m5_160 -> m5_161  [key=0, style=solid];
m5_160 -> m5_163  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_237 -> m5_19  [key=2, style=dotted];
m5_237 -> m5_238  [key=0, style=solid];
m5_237 -> m5_239  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_277 -> m5_19  [key=2, style=dotted];
m5_277 -> m5_278  [key=0, style=solid];
m5_277 -> m5_279  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_328 -> m5_19  [key=2, style=dotted];
m5_328 -> m5_329  [key=0, style=solid];
m5_328 -> m5_331  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_339 -> m5_19  [key=2, style=dotted];
m5_339 -> m5_340  [key=0, style=solid];
m5_339 -> m5_342  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_383 -> m5_19  [key=2, style=dotted];
m5_383 -> m5_384  [key=0, style=solid];
m5_383 -> m5_386  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_394 -> m5_19  [key=2, style=dotted];
m5_394 -> m5_395  [key=0, style=solid];
m5_394 -> m5_397  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_412 -> m5_19  [key=2, style=dotted];
m5_412 -> m5_413  [key=0, style=solid];
m5_412 -> m5_94  [key=2, style=dotted];
m5_421 -> m5_19  [key=2, style=dotted];
m5_421 -> m5_422  [key=0, style=solid];
m5_421 -> m5_424  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_432 -> m5_19  [key=2, style=dotted];
m5_432 -> m5_433  [key=0, style=solid];
m5_432 -> m5_434  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_458 -> m5_19  [key=2, style=dotted];
m5_458 -> m5_459  [key=0, style=solid];
m5_458 -> m5_461  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_470 -> m5_19  [key=2, style=dotted];
m5_470 -> m5_471  [key=0, style=solid];
m5_470 -> m5_473  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_498 -> m5_19  [key=2, style=dotted];
m5_498 -> m5_499  [key=0, style=solid];
m5_498 -> m5_500  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_519 -> m5_19  [key=2, style=dotted];
m5_519 -> m5_520  [key=0, style=solid];
m5_519 -> m5_521  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_546 -> m5_19  [key=2, style=dotted];
m5_546 -> m5_547  [key=0, style=solid];
m5_546 -> m5_548  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_568 -> m5_19  [key=2, style=dotted];
m5_568 -> m5_569  [key=0, style=solid];
m5_568 -> m5_570  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_597 -> m5_19  [key=2, style=dotted];
m5_597 -> m5_598  [key=0, style=solid];
m5_597 -> m5_600  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_608 -> m5_19  [key=2, style=dotted];
m5_608 -> m5_609  [key=0, style=solid];
m5_608 -> m5_611  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_676 -> m5_19  [key=2, style=dotted];
m5_676 -> m5_677  [key=0, style=solid];
m5_676 -> m5_678  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_703 -> m5_19  [key=2, style=dotted];
m5_703 -> m5_704  [key=0, style=solid];
m5_703 -> m5_705  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_722 -> m5_19  [key=2, style=dotted];
m5_722 -> m5_723  [key=0, style=solid];
m5_722 -> m5_724  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_757 -> m5_19  [key=2, style=dotted];
m5_757 -> m5_758  [key=0, style=solid];
m5_757 -> m5_759  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_783 -> m5_19  [key=2, style=dotted];
m5_783 -> m5_784  [key=0, style=solid];
m5_783 -> m5_785  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_810 -> m5_19  [key=2, style=dotted];
m5_810 -> m5_811  [key=0, style=solid];
m5_810 -> m5_812  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_836 -> m5_19  [key=2, style=dotted];
m5_836 -> m5_837  [key=0, style=solid];
m5_836 -> m5_838  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_863 -> m5_19  [key=2, style=dotted];
m5_863 -> m5_864  [key=0, style=solid];
m5_863 -> m5_866  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_874 -> m5_19  [key=2, style=dotted];
m5_874 -> m5_875  [key=0, style=solid];
m5_874 -> m5_877  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_900 -> m5_19  [key=2, style=dotted];
m5_900 -> m5_901  [key=0, style=solid];
m5_900 -> m5_903  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_928 -> m5_19  [key=2, style=dotted];
m5_928 -> m5_929  [key=0, style=solid];
m5_928 -> m5_930  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_954 -> m5_19  [key=2, style=dotted];
m5_954 -> m5_955  [key=0, style=solid];
m5_954 -> m5_956  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_666 -> m5_652  [key=2, style=dotted];
m5_666 -> m5_667  [key=0, style=solid];
m5_666 -> m5_668  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_666 -> m5_669  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_666 -> m5_670  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_248 -> m5_250  [key=2, style=dotted];
m5_248 -> m5_249  [key=0, style=solid];
m5_263 -> m5_250  [key=2, style=dotted];
m5_263 -> m5_264  [key=0, style=solid];
m5_288 -> m5_250  [key=2, style=dotted];
m5_288 -> m5_289  [key=0, style=solid];
m5_405 -> m5_250  [key=2, style=dotted];
m5_405 -> m5_406  [key=0, style=solid];
m5_442 -> m5_250  [key=2, style=dotted];
m5_442 -> m5_443  [key=0, style=solid];
m5_885 -> m5_250  [key=2, style=dotted];
m5_885 -> m5_886  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_30 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label=token];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_35  [key=2, style=dotted];
m5_30 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label=token];
m5_30 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label=token];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_36  [key=2, style=dotted];
m5_31 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label=queues];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label=queues];
m5_34 -> m5_29  [key=0, style=bold, color=blue];
m5_38 -> m5_39  [key=0, style=solid];
m5_46 -> m5_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_7  [key=2, style=dotted];
m5_59 -> m5_60  [key=0, style=solid];
m5_68 -> m5_69  [key=0, style=solid];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_89 -> m5_91  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m5_89 -> m5_90  [key=0, style=solid];
m5_111 -> m5_112  [key=0, style=solid];
m5_113 -> m5_111  [key=0, style=bold, color=blue];
m5_114 -> m5_115  [key=0, style=solid];
m5_119 -> m5_120  [key=0, style=solid];
m5_119 -> m5_123  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_128 -> m5_131  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m5_128 -> m5_129  [key=0, style=solid];
m5_138 -> m5_139  [key=0, style=solid];
m5_138 -> m5_140  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_147 -> m5_148  [key=0, style=solid];
m5_147 -> m5_152  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_159 -> m5_160  [key=0, style=solid];
m5_159 -> m5_164  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_174 -> m5_175  [key=0, style=solid];
m5_174 -> m5_176  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_174 -> m5_179  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m5_174 -> m5_192  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m5_218 -> m5_219  [key=0, style=solid];
m5_218 -> m5_220  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_218 -> m5_221  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m5_236 -> m5_237  [key=0, style=solid];
m5_236 -> m5_240  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_246 -> m5_247  [key=0, style=solid];
m5_255 -> m5_256  [key=0, style=solid];
m5_255 -> m5_257  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m5_255 -> m5_258  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_276 -> m5_277  [key=0, style=solid];
m5_276 -> m5_280  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_286 -> m5_287  [key=0, style=solid];
m5_294 -> m5_295  [key=0, style=solid];
m5_294 -> m5_296  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m5_294 -> m5_297  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_307 -> m5_308  [key=0, style=solid];
m5_307 -> m5_309  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m5_307 -> m5_310  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_318 -> m5_319  [key=0, style=solid];
m5_318 -> m5_320  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_327 -> m5_328  [key=0, style=solid];
m5_327 -> m5_332  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_338 -> m5_339  [key=0, style=solid];
m5_338 -> m5_343  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_349 -> m5_350  [key=0, style=solid];
m5_349 -> m5_352  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_349 -> m5_353  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m5_360 -> m5_361  [key=0, style=solid];
m5_360 -> m5_363  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_360 -> m5_364  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_360 -> m5_365  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m5_372 -> m5_373  [key=0, style=solid];
m5_372 -> m5_375  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_372 -> m5_376  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m5_382 -> m5_383  [key=0, style=solid];
m5_382 -> m5_387  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_393 -> m5_394  [key=0, style=solid];
m5_393 -> m5_398  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_403 -> m5_404  [key=0, style=solid];
m5_411 -> m5_412  [key=0, style=solid];
m5_411 -> m5_413  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_420 -> m5_421  [key=0, style=solid];
m5_420 -> m5_425  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_431 -> m5_432  [key=0, style=solid];
m5_431 -> m5_435  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_440 -> m5_441  [key=0, style=solid];
m5_448 -> m5_449  [key=0, style=solid];
m5_448 -> m5_450  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_457 -> m5_458  [key=0, style=solid];
m5_457 -> m5_462  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_469 -> m5_470  [key=0, style=solid];
m5_469 -> m5_474  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_479 -> m5_480  [key=0, style=solid];
m5_479 -> m5_481  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_479 -> m5_482  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m5_479 -> m5_487  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_479 -> m5_488  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m5_497 -> m5_498  [key=0, style=solid];
m5_497 -> m5_501  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_508 -> m5_509  [key=0, style=solid];
m5_508 -> m5_510  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_508 -> m5_511  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m5_518 -> m5_519  [key=0, style=solid];
m5_518 -> m5_522  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_529 -> m5_530  [key=0, style=solid];
m5_529 -> m5_531  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_529 -> m5_532  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m5_545 -> m5_546  [key=0, style=solid];
m5_545 -> m5_549  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_556 -> m5_557  [key=0, style=solid];
m5_556 -> m5_558  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_556 -> m5_559  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m5_567 -> m5_568  [key=0, style=solid];
m5_567 -> m5_571  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_577 -> m5_578  [key=0, style=solid];
m5_586 -> m5_587  [key=0, style=solid];
m5_586 -> m5_588  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_596 -> m5_597  [key=0, style=solid];
m5_596 -> m5_601  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_607 -> m5_608  [key=0, style=solid];
m5_607 -> m5_612  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_617 -> m5_618  [key=0, style=solid];
m5_617 -> m5_619  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m5_632 -> m5_633  [key=0, style=solid];
m5_632 -> m5_634  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m5_664 -> m5_666  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_664 -> m5_665  [key=0, style=solid];
m5_675 -> m5_676  [key=0, style=solid];
m5_675 -> m5_679  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_685 -> m5_686  [key=0, style=solid];
m5_693 -> m5_694  [key=0, style=solid];
m5_693 -> m5_695  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_702 -> m5_703  [key=0, style=solid];
m5_702 -> m5_706  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_713 -> m5_714  [key=0, style=solid];
m5_713 -> m5_715  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_721 -> m5_722  [key=0, style=solid];
m5_721 -> m5_725  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_731 -> m5_732  [key=0, style=solid];
m5_739 -> m5_740  [key=0, style=solid];
m5_739 -> m5_741  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_748 -> m5_749  [key=0, style=solid];
m5_748 -> m5_750  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_756 -> m5_757  [key=0, style=solid];
m5_756 -> m5_760  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_766 -> m5_767  [key=0, style=solid];
m5_774 -> m5_775  [key=0, style=solid];
m5_774 -> m5_776  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_782 -> m5_783  [key=0, style=solid];
m5_782 -> m5_786  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_792 -> m5_793  [key=0, style=solid];
m5_800 -> m5_801  [key=0, style=solid];
m5_800 -> m5_802  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_809 -> m5_810  [key=0, style=solid];
m5_809 -> m5_813  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_819 -> m5_820  [key=0, style=solid];
m5_827 -> m5_828  [key=0, style=solid];
m5_827 -> m5_829  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_835 -> m5_836  [key=0, style=solid];
m5_835 -> m5_839  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_845 -> m5_846  [key=0, style=solid];
m5_853 -> m5_854  [key=0, style=solid];
m5_853 -> m5_855  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_862 -> m5_863  [key=0, style=solid];
m5_862 -> m5_867  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_873 -> m5_874  [key=0, style=solid];
m5_873 -> m5_878  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_883 -> m5_884  [key=0, style=solid];
m5_891 -> m5_892  [key=0, style=solid];
m5_891 -> m5_893  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_899 -> m5_900  [key=0, style=solid];
m5_899 -> m5_904  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_910 -> m5_911  [key=0, style=solid];
m5_919 -> m5_920  [key=0, style=solid];
m5_919 -> m5_921  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_927 -> m5_928  [key=0, style=solid];
m5_927 -> m5_931  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_937 -> m5_938  [key=0, style=solid];
m5_945 -> m5_946  [key=0, style=solid];
m5_945 -> m5_947  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_953 -> m5_954  [key=0, style=solid];
m5_953 -> m5_957  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_963 -> m5_964  [key=0, style=solid];
m5_971 -> m5_972  [key=0, style=solid];
m5_971 -> m5_973  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_996 -> m5_997  [key=0, style=solid];
m5_21 -> m5_22  [key=0, style=solid];
m5_47 -> m5_50  [key=1, style=dashed, color=darkseagreen4, label=token];
m5_47 -> m5_48  [key=0, style=solid];
m5_47 -> m5_35  [key=2, style=dotted];
m5_47 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label=token];
m5_51 -> m5_46  [key=0, style=bold, color=blue];
m5_53 -> m5_54  [key=0, style=solid];
m5_79 -> m5_80  [key=0, style=solid];
m5_79 -> m5_20  [key=2, style=dotted];
m5_81 -> m5_82  [key=0, style=solid];
m5_90 -> m5_91  [key=0, style=solid];
m5_90 -> m5_84  [key=2, style=dotted];
m5_90 -> m5_73  [key=2, style=dotted];
m5_92 -> m5_93  [key=0, style=solid];
m5_92 -> m5_20  [key=2, style=dotted];
m5_121 -> m5_119  [key=0, style=bold, color=blue];
m5_122 -> m5_123  [key=0, style=solid];
m5_130 -> m5_131  [key=0, style=solid];
m5_130 -> m5_134  [key=2, style=dotted];
m5_132 -> m5_133  [key=0, style=solid];
m5_132 -> m5_20  [key=2, style=dotted];
m5_149 -> m5_150  [key=0, style=solid];
m5_149 -> m5_20  [key=2, style=dotted];
m5_151 -> m5_152  [key=0, style=solid];
m5_161 -> m5_162  [key=0, style=solid];
m5_161 -> m5_20  [key=2, style=dotted];
m5_163 -> m5_164  [key=0, style=solid];
m5_238 -> m5_236  [key=0, style=bold, color=blue];
m5_239 -> m5_240  [key=0, style=solid];
m5_278 -> m5_276  [key=0, style=bold, color=blue];
m5_279 -> m5_280  [key=0, style=solid];
m5_329 -> m5_330  [key=0, style=solid];
m5_329 -> m5_20  [key=2, style=dotted];
m5_331 -> m5_332  [key=0, style=solid];
m5_340 -> m5_341  [key=0, style=solid];
m5_340 -> m5_20  [key=2, style=dotted];
m5_342 -> m5_343  [key=0, style=solid];
m5_384 -> m5_385  [key=0, style=solid];
m5_384 -> m5_20  [key=2, style=dotted];
m5_386 -> m5_387  [key=0, style=solid];
m5_395 -> m5_396  [key=0, style=solid];
m5_395 -> m5_20  [key=2, style=dotted];
m5_397 -> m5_398  [key=0, style=solid];
m5_413 -> m5_414  [key=0, style=solid];
m5_413 -> m5_200  [key=2, style=dotted];
m5_413 -> m5_416  [key=2, style=dotted];
m5_422 -> m5_423  [key=0, style=solid];
m5_422 -> m5_20  [key=2, style=dotted];
m5_424 -> m5_425  [key=0, style=solid];
m5_433 -> m5_431  [key=0, style=bold, color=blue];
m5_434 -> m5_435  [key=0, style=solid];
m5_459 -> m5_460  [key=0, style=solid];
m5_459 -> m5_20  [key=2, style=dotted];
m5_461 -> m5_462  [key=0, style=solid];
m5_471 -> m5_472  [key=0, style=solid];
m5_471 -> m5_20  [key=2, style=dotted];
m5_473 -> m5_474  [key=0, style=solid];
m5_499 -> m5_497  [key=0, style=bold, color=blue];
m5_500 -> m5_501  [key=0, style=solid];
m5_520 -> m5_518  [key=0, style=bold, color=blue];
m5_521 -> m5_522  [key=0, style=solid];
m5_547 -> m5_545  [key=0, style=bold, color=blue];
m5_548 -> m5_549  [key=0, style=solid];
m5_569 -> m5_567  [key=0, style=bold, color=blue];
m5_570 -> m5_571  [key=0, style=solid];
m5_598 -> m5_599  [key=0, style=solid];
m5_598 -> m5_20  [key=2, style=dotted];
m5_600 -> m5_601  [key=0, style=solid];
m5_609 -> m5_610  [key=0, style=solid];
m5_609 -> m5_20  [key=2, style=dotted];
m5_611 -> m5_612  [key=0, style=solid];
m5_677 -> m5_675  [key=0, style=bold, color=blue];
m5_678 -> m5_679  [key=0, style=solid];
m5_704 -> m5_702  [key=0, style=bold, color=blue];
m5_705 -> m5_706  [key=0, style=solid];
m5_723 -> m5_721  [key=0, style=bold, color=blue];
m5_724 -> m5_725  [key=0, style=solid];
m5_758 -> m5_756  [key=0, style=bold, color=blue];
m5_759 -> m5_760  [key=0, style=solid];
m5_784 -> m5_782  [key=0, style=bold, color=blue];
m5_785 -> m5_786  [key=0, style=solid];
m5_811 -> m5_809  [key=0, style=bold, color=blue];
m5_812 -> m5_813  [key=0, style=solid];
m5_837 -> m5_835  [key=0, style=bold, color=blue];
m5_838 -> m5_839  [key=0, style=solid];
m5_864 -> m5_865  [key=0, style=solid];
m5_864 -> m5_20  [key=2, style=dotted];
m5_866 -> m5_867  [key=0, style=solid];
m5_875 -> m5_876  [key=0, style=solid];
m5_875 -> m5_20  [key=2, style=dotted];
m5_877 -> m5_878  [key=0, style=solid];
m5_901 -> m5_902  [key=0, style=solid];
m5_901 -> m5_20  [key=2, style=dotted];
m5_903 -> m5_904  [key=0, style=solid];
m5_929 -> m5_927  [key=0, style=bold, color=blue];
m5_930 -> m5_931  [key=0, style=solid];
m5_955 -> m5_953  [key=0, style=bold, color=blue];
m5_956 -> m5_957  [key=0, style=solid];
m5_665 -> m5_666  [key=0, style=solid];
m5_665 -> m5_453  [key=2, style=dotted];
m5_667 -> m5_668  [key=0, style=solid];
m5_667 -> m5_64  [key=2, style=dotted];
m5_668 -> m5_669  [key=0, style=solid];
m5_668 -> m5_20  [key=2, style=dotted];
m5_669 -> m5_670  [key=0, style=solid];
m5_669 -> m5_20  [key=2, style=dotted];
m5_670 -> m5_671  [key=0, style=solid];
m5_670 -> m5_20  [key=2, style=dotted];
m5_247 -> m5_248  [key=0, style=solid];
m5_247 -> m5_242  [key=2, style=dotted];
m5_249 -> m5_246  [key=0, style=bold, color=blue];
m5_258 -> m5_263  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_258 -> m5_259  [key=0, style=solid];
m5_258 -> m5_269  [key=2, style=dotted];
m5_258 -> m5_242  [key=2, style=dotted];
m5_258 -> m5_260  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_258 -> m5_261  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_258 -> m5_262  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_258 -> m5_264  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_258 -> m5_265  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_262 -> m5_263  [key=0, style=solid];
m5_262 -> m5_20  [key=2, style=dotted];
m5_264 -> m5_265  [key=0, style=solid];
m5_264 -> m5_204  [key=2, style=dotted];
m5_264 -> m5_143  [key=2, style=dotted];
m5_287 -> m5_288  [key=0, style=solid];
m5_287 -> m5_282  [key=2, style=dotted];
m5_289 -> m5_286  [key=0, style=bold, color=blue];
m5_404 -> m5_405  [key=0, style=solid];
m5_404 -> m5_389  [key=2, style=dotted];
m5_406 -> m5_403  [key=0, style=bold, color=blue];
m5_441 -> m5_442  [key=0, style=solid];
m5_441 -> m5_427  [key=2, style=dotted];
m5_443 -> m5_440  [key=0, style=bold, color=blue];
m5_884 -> m5_885  [key=0, style=solid];
m5_884 -> m5_869  [key=2, style=dotted];
m5_886 -> m5_883  [key=0, style=bold, color=blue];
m5_13 -> m5_11  [key=0, style=bold, color=blue];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_14  [key=2, style=dotted];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_41  [key=2, style=dotted];
m5_40 -> m5_38  [key=0, style=bold, color=blue];
m5_54 -> m5_36  [key=2, style=dotted];
m5_54 -> m5_55  [key=0, style=solid];
m5_62 -> m5_59  [key=0, style=bold, color=blue];
m5_60 -> m5_61  [key=0, style=solid];
m5_60 -> m5_63  [key=2, style=dotted];
m5_71 -> m5_68  [key=0, style=bold, color=blue];
m5_69 -> m5_70  [key=0, style=solid];
m5_69 -> m5_72  [key=2, style=dotted];
m5_69 -> m5_73  [key=2, style=dotted];
m5_80 -> m5_77  [key=0, style=bold, color=blue];
m5_82 -> m5_83  [key=0, style=solid];
m5_82 -> m5_84  [key=2, style=dotted];
m5_82 -> m5_73  [key=2, style=dotted];
m5_168 -> m5_170  [key=2, style=dotted];
m5_168 -> m5_169  [key=0, style=solid];
m5_207 -> m5_170  [key=2, style=dotted];
m5_207 -> m5_208  [key=0, style=solid];
m5_225 -> m5_170  [key=2, style=dotted];
m5_225 -> m5_226  [key=0, style=solid];
m5_271 -> m5_170  [key=2, style=dotted];
m5_271 -> m5_272  [key=0, style=solid];
m5_93 -> m5_89  [key=0, style=bold, color=blue];
m5_117 -> m5_118  [key=0, style=solid];
m5_117 -> m5_108  [key=2, style=dotted];
m5_116 -> m5_117  [key=0, style=solid];
m5_116 -> m5_109  [key=2, style=dotted];
m5_118 -> m5_114  [key=0, style=bold, color=blue];
m5_115 -> m5_116  [key=0, style=solid];
m5_115 -> m5_72  [key=2, style=dotted];
m5_115 -> m5_73  [key=2, style=dotted];
m5_123 -> m5_124  [key=0, style=solid];
m5_123 -> m5_72  [key=2, style=dotted];
m5_123 -> m5_73  [key=2, style=dotted];
m5_133 -> m5_128  [key=0, style=bold, color=blue];
m5_129 -> m5_130  [key=0, style=solid];
m5_129 -> m5_84  [key=2, style=dotted];
m5_129 -> m5_73  [key=2, style=dotted];
m5_142 -> m5_138  [key=0, style=bold, color=blue];
m5_139 -> m5_140  [key=0, style=solid];
m5_139 -> m5_84  [key=2, style=dotted];
m5_139 -> m5_73  [key=2, style=dotted];
m5_140 -> m5_141  [key=0, style=solid];
m5_140 -> m5_84  [key=2, style=dotted];
m5_140 -> m5_73  [key=2, style=dotted];
m5_150 -> m5_147  [key=0, style=bold, color=blue];
m5_152 -> m5_153  [key=0, style=solid];
m5_152 -> m5_154  [key=2, style=dotted];
m5_152 -> m5_155  [key=2, style=dotted];
m5_162 -> m5_159  [key=0, style=bold, color=blue];
m5_164 -> m5_165  [key=0, style=solid];
m5_164 -> m5_166  [key=2, style=dotted];
m5_164 -> m5_155  [key=2, style=dotted];
m5_164 -> m5_167  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_195 -> m5_174  [key=0, style=bold, color=blue];
m5_175 -> m5_176  [key=0, style=solid];
m5_175 -> m5_196  [key=2, style=dotted];
m5_175 -> m5_181  [key=1, style=dashed, color=darkseagreen4, label=createdAt];
m5_175 -> m5_190  [key=1, style=dashed, color=darkseagreen4, label=createdAt];
m5_175 -> m5_191  [key=1, style=dashed, color=darkseagreen4, label=createdAt];
m5_176 -> m5_177  [key=0, style=solid];
m5_176 -> m5_166  [key=2, style=dotted];
m5_176 -> m5_154  [key=2, style=dotted];
m5_176 -> m5_197  [key=2, style=dotted];
m5_176 -> m5_155  [key=2, style=dotted];
m5_176 -> m5_206  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_176 -> m5_178  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_176 -> m5_180  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_176 -> m5_192  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_179 -> m5_94  [key=2, style=dotted];
m5_179 -> m5_180  [key=0, style=solid];
m5_179 -> m5_199  [key=2, style=dotted];
m5_179 -> m5_181  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m5_179 -> m5_182  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m5_179 -> m5_183  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m5_179 -> m5_184  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m5_179 -> m5_185  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m5_179 -> m5_190  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m5_179 -> m5_191  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m5_192 -> m5_193  [key=0, style=solid];
m5_192 -> m5_199  [key=2, style=dotted];
m5_192 -> m5_205  [key=2, style=dotted];
m5_192 -> m5_209  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_192 -> m5_212  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_192 -> m5_194  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m5_223 -> m5_218  [key=0, style=bold, color=blue];
m5_219 -> m5_220  [key=0, style=solid];
m5_219 -> m5_196  [key=2, style=dotted];
m5_220 -> m5_221  [key=0, style=solid];
m5_220 -> m5_166  [key=2, style=dotted];
m5_220 -> m5_154  [key=2, style=dotted];
m5_220 -> m5_197  [key=2, style=dotted];
m5_220 -> m5_155  [key=2, style=dotted];
m5_220 -> m5_224  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_221 -> m5_222  [key=0, style=solid];
m5_221 -> m5_199  [key=2, style=dotted];
m5_221 -> m5_205  [key=2, style=dotted];
m5_221 -> m5_227  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_221 -> m5_230  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_240 -> m5_241  [key=0, style=solid];
m5_240 -> m5_242  [key=2, style=dotted];
m5_257 -> m5_94  [key=2, style=dotted];
m5_257 -> m5_258  [key=0, style=solid];
m5_257 -> m5_267  [key=2, style=dotted];
m5_257 -> m5_268  [key=2, style=dotted];
m5_257 -> m5_199  [key=2, style=dotted];
m5_266 -> m5_255  [key=0, style=bold, color=blue];
m5_256 -> m5_257  [key=0, style=solid];
m5_256 -> m5_166  [key=2, style=dotted];
m5_256 -> m5_270  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_280 -> m5_281  [key=0, style=solid];
m5_280 -> m5_282  [key=2, style=dotted];
m5_296 -> m5_94  [key=2, style=dotted];
m5_296 -> m5_297  [key=0, style=solid];
m5_296 -> m5_268  [key=2, style=dotted];
m5_296 -> m5_199  [key=2, style=dotted];
m5_302 -> m5_294  [key=0, style=bold, color=blue];
m5_295 -> m5_296  [key=0, style=solid];
m5_295 -> m5_154  [key=2, style=dotted];
m5_297 -> m5_298  [key=0, style=solid];
m5_297 -> m5_269  [key=2, style=dotted];
m5_297 -> m5_282  [key=2, style=dotted];
m5_297 -> m5_299  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_297 -> m5_300  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_297 -> m5_301  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_309 -> m5_94  [key=2, style=dotted];
m5_309 -> m5_310  [key=0, style=solid];
m5_309 -> m5_268  [key=2, style=dotted];
m5_309 -> m5_199  [key=2, style=dotted];
m5_313 -> m5_307  [key=0, style=bold, color=blue];
m5_308 -> m5_309  [key=0, style=solid];
m5_308 -> m5_154  [key=2, style=dotted];
m5_310 -> m5_311  [key=0, style=solid];
m5_310 -> m5_269  [key=2, style=dotted];
m5_310 -> m5_282  [key=2, style=dotted];
m5_310 -> m5_312  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_319 -> m5_94  [key=2, style=dotted];
m5_319 -> m5_320  [key=0, style=solid];
m5_319 -> m5_323  [key=2, style=dotted];
m5_319 -> m5_268  [key=2, style=dotted];
m5_319 -> m5_199  [key=2, style=dotted];
m5_322 -> m5_318  [key=0, style=bold, color=blue];
m5_320 -> m5_321  [key=0, style=solid];
m5_320 -> m5_269  [key=2, style=dotted];
m5_320 -> m5_242  [key=2, style=dotted];
m5_330 -> m5_327  [key=0, style=bold, color=blue];
m5_332 -> m5_333  [key=0, style=solid];
m5_332 -> m5_334  [key=2, style=dotted];
m5_341 -> m5_338  [key=0, style=bold, color=blue];
m5_343 -> m5_344  [key=0, style=solid];
m5_343 -> m5_334  [key=2, style=dotted];
m5_350 -> m5_94  [key=2, style=dotted];
m5_350 -> m5_351  [key=0, style=solid];
m5_350 -> m5_199  [key=2, style=dotted];
m5_355 -> m5_349  [key=0, style=bold, color=blue];
m5_352 -> m5_353  [key=0, style=solid];
m5_352 -> m5_334  [key=2, style=dotted];
m5_353 -> m5_94  [key=2, style=dotted];
m5_353 -> m5_354  [key=0, style=solid];
m5_353 -> m5_199  [key=2, style=dotted];
m5_361 -> m5_94  [key=2, style=dotted];
m5_361 -> m5_362  [key=0, style=solid];
m5_361 -> m5_199  [key=2, style=dotted];
m5_367 -> m5_360  [key=0, style=bold, color=blue];
m5_363 -> m5_364  [key=0, style=solid];
m5_363 -> m5_334  [key=2, style=dotted];
m5_364 -> m5_365  [key=0, style=solid];
m5_364 -> m5_334  [key=2, style=dotted];
m5_365 -> m5_94  [key=2, style=dotted];
m5_365 -> m5_366  [key=0, style=solid];
m5_365 -> m5_199  [key=2, style=dotted];
m5_373 -> m5_94  [key=2, style=dotted];
m5_373 -> m5_374  [key=0, style=solid];
m5_373 -> m5_199  [key=2, style=dotted];
m5_378 -> m5_372  [key=0, style=bold, color=blue];
m5_375 -> m5_376  [key=0, style=solid];
m5_375 -> m5_334  [key=2, style=dotted];
m5_376 -> m5_94  [key=2, style=dotted];
m5_376 -> m5_377  [key=0, style=solid];
m5_376 -> m5_199  [key=2, style=dotted];
m5_385 -> m5_382  [key=0, style=bold, color=blue];
m5_387 -> m5_388  [key=0, style=solid];
m5_387 -> m5_389  [key=2, style=dotted];
m5_396 -> m5_393  [key=0, style=bold, color=blue];
m5_398 -> m5_399  [key=0, style=solid];
m5_398 -> m5_389  [key=2, style=dotted];
m5_415 -> m5_411  [key=0, style=bold, color=blue];
m5_423 -> m5_420  [key=0, style=bold, color=blue];
m5_425 -> m5_426  [key=0, style=solid];
m5_425 -> m5_427  [key=2, style=dotted];
m5_435 -> m5_436  [key=0, style=solid];
m5_435 -> m5_427  [key=2, style=dotted];
m5_449 -> m5_450  [key=0, style=solid];
m5_449 -> m5_453  [key=2, style=dotted];
m5_452 -> m5_448  [key=0, style=bold, color=blue];
m5_450 -> m5_451  [key=0, style=solid];
m5_450 -> m5_427  [key=2, style=dotted];
m5_460 -> m5_457  [key=0, style=bold, color=blue];
m5_462 -> m5_463  [key=0, style=solid];
m5_462 -> m5_464  [key=2, style=dotted];
m5_462 -> m5_465  [key=2, style=dotted];
m5_472 -> m5_469  [key=0, style=bold, color=blue];
m5_474 -> m5_475  [key=0, style=solid];
m5_474 -> m5_465  [key=2, style=dotted];
m5_491 -> m5_479  [key=0, style=bold, color=blue];
m5_480 -> m5_481  [key=0, style=solid];
m5_480 -> m5_464  [key=2, style=dotted];
m5_481 -> m5_482  [key=0, style=solid];
m5_481 -> m5_465  [key=2, style=dotted];
m5_482 -> m5_94  [key=2, style=dotted];
m5_482 -> m5_483  [key=0, style=solid];
m5_482 -> m5_199  [key=2, style=dotted];
m5_482 -> m5_484  [key=1, style=dashed, color=darkseagreen4, label=server];
m5_482 -> m5_485  [key=1, style=dashed, color=darkseagreen4, label=server];
m5_487 -> m5_488  [key=0, style=solid];
m5_487 -> m5_465  [key=2, style=dotted];
m5_488 -> m5_94  [key=2, style=dotted];
m5_488 -> m5_489  [key=0, style=solid];
m5_488 -> m5_199  [key=2, style=dotted];
m5_488 -> m5_490  [key=1, style=dashed, color=darkseagreen4, label=sameServer];
m5_501 -> m5_502  [key=0, style=solid];
m5_501 -> m5_503  [key=2, style=dotted];
m5_509 -> m5_510  [key=0, style=solid];
m5_509 -> m5_453  [key=2, style=dotted];
m5_513 -> m5_508  [key=0, style=bold, color=blue];
m5_510 -> m5_511  [key=0, style=solid];
m5_510 -> m5_503  [key=2, style=dotted];
m5_511 -> m5_94  [key=2, style=dotted];
m5_511 -> m5_512  [key=0, style=solid];
m5_511 -> m5_199  [key=2, style=dotted];
m5_522 -> m5_523  [key=0, style=solid];
m5_522 -> m5_524  [key=2, style=dotted];
m5_530 -> m5_531  [key=0, style=solid];
m5_530 -> m5_453  [key=2, style=dotted];
m5_535 -> m5_529  [key=0, style=bold, color=blue];
m5_531 -> m5_532  [key=0, style=solid];
m5_531 -> m5_524  [key=2, style=dotted];
m5_532 -> m5_533  [key=0, style=solid];
m5_532 -> m5_199  [key=2, style=dotted];
m5_532 -> m5_205  [key=2, style=dotted];
m5_532 -> m5_536  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_532 -> m5_539  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_532 -> m5_534  [key=1, style=dashed, color=darkseagreen4, label=servers];
m5_549 -> m5_550  [key=0, style=solid];
m5_549 -> m5_84  [key=2, style=dotted];
m5_549 -> m5_551  [key=2, style=dotted];
m5_557 -> m5_558  [key=0, style=solid];
m5_557 -> m5_203  [key=2, style=dotted];
m5_557 -> m5_562  [key=2, style=dotted];
m5_557 -> m5_453  [key=2, style=dotted];
m5_561 -> m5_556  [key=0, style=bold, color=blue];
m5_558 -> m5_559  [key=0, style=solid];
m5_558 -> m5_563  [key=2, style=dotted];
m5_558 -> m5_551  [key=2, style=dotted];
m5_559 -> m5_94  [key=2, style=dotted];
m5_559 -> m5_560  [key=0, style=solid];
m5_559 -> m5_199  [key=2, style=dotted];
m5_571 -> m5_572  [key=0, style=solid];
m5_571 -> m5_573  [key=2, style=dotted];
m5_581 -> m5_577  [key=0, style=bold, color=blue];
m5_578 -> m5_579  [key=0, style=solid];
m5_578 -> m5_573  [key=2, style=dotted];
m5_578 -> m5_580  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_587 -> m5_588  [key=0, style=solid];
m5_587 -> m5_453  [key=2, style=dotted];
m5_592 -> m5_586  [key=0, style=bold, color=blue];
m5_588 -> m5_589  [key=0, style=solid];
m5_588 -> m5_573  [key=2, style=dotted];
m5_588 -> m5_590  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_588 -> m5_591  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_599 -> m5_596  [key=0, style=bold, color=blue];
m5_601 -> m5_602  [key=0, style=solid];
m5_601 -> m5_154  [key=2, style=dotted];
m5_601 -> m5_603  [key=2, style=dotted];
m5_610 -> m5_607  [key=0, style=bold, color=blue];
m5_612 -> m5_613  [key=0, style=solid];
m5_612 -> m5_603  [key=2, style=dotted];
m5_622 -> m5_617  [key=0, style=bold, color=blue];
m5_618 -> m5_619  [key=0, style=solid];
m5_618 -> m5_154  [key=2, style=dotted];
m5_618 -> m5_603  [key=2, style=dotted];
m5_619 -> m5_620  [key=0, style=solid];
m5_619 -> m5_199  [key=2, style=dotted];
m5_619 -> m5_205  [key=2, style=dotted];
m5_619 -> m5_623  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_619 -> m5_626  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_619 -> m5_621  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_636 -> m5_632  [key=0, style=bold, color=blue];
m5_633 -> m5_634  [key=0, style=solid];
m5_633 -> m5_154  [key=2, style=dotted];
m5_633 -> m5_603  [key=2, style=dotted];
m5_634 -> m5_635  [key=0, style=solid];
m5_634 -> m5_199  [key=2, style=dotted];
m5_634 -> m5_205  [key=2, style=dotted];
m5_634 -> m5_637  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_634 -> m5_640  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_671 -> m5_664  [key=0, style=bold, color=blue];
m5_679 -> m5_680  [key=0, style=solid];
m5_679 -> m5_681  [key=2, style=dotted];
m5_688 -> m5_685  [key=0, style=bold, color=blue];
m5_686 -> m5_687  [key=0, style=solid];
m5_686 -> m5_681  [key=2, style=dotted];
m5_694 -> m5_695  [key=0, style=solid];
m5_694 -> m5_698  [key=2, style=dotted];
m5_694 -> m5_453  [key=2, style=dotted];
m5_697 -> m5_693  [key=0, style=bold, color=blue];
m5_695 -> m5_696  [key=0, style=solid];
m5_695 -> m5_681  [key=2, style=dotted];
m5_706 -> m5_707  [key=0, style=solid];
m5_706 -> m5_708  [key=2, style=dotted];
m5_714 -> m5_715  [key=0, style=solid];
m5_714 -> m5_698  [key=2, style=dotted];
m5_714 -> m5_453  [key=2, style=dotted];
m5_717 -> m5_713  [key=0, style=bold, color=blue];
m5_715 -> m5_716  [key=0, style=solid];
m5_715 -> m5_708  [key=2, style=dotted];
m5_725 -> m5_726  [key=0, style=solid];
m5_725 -> m5_727  [key=2, style=dotted];
m5_734 -> m5_731  [key=0, style=bold, color=blue];
m5_732 -> m5_733  [key=0, style=solid];
m5_732 -> m5_727  [key=2, style=dotted];
m5_740 -> m5_741  [key=0, style=solid];
m5_740 -> m5_453  [key=2, style=dotted];
m5_743 -> m5_739  [key=0, style=bold, color=blue];
m5_741 -> m5_742  [key=0, style=solid];
m5_741 -> m5_727  [key=2, style=dotted];
m5_749 -> m5_750  [key=0, style=solid];
m5_749 -> m5_453  [key=2, style=dotted];
m5_752 -> m5_748  [key=0, style=bold, color=blue];
m5_750 -> m5_751  [key=0, style=solid];
m5_750 -> m5_727  [key=2, style=dotted];
m5_760 -> m5_761  [key=0, style=solid];
m5_760 -> m5_762  [key=2, style=dotted];
m5_769 -> m5_766  [key=0, style=bold, color=blue];
m5_767 -> m5_768  [key=0, style=solid];
m5_767 -> m5_762  [key=2, style=dotted];
m5_775 -> m5_776  [key=0, style=solid];
m5_775 -> m5_453  [key=2, style=dotted];
m5_778 -> m5_774  [key=0, style=bold, color=blue];
m5_776 -> m5_777  [key=0, style=solid];
m5_776 -> m5_762  [key=2, style=dotted];
m5_786 -> m5_787  [key=0, style=solid];
m5_786 -> m5_788  [key=2, style=dotted];
m5_795 -> m5_792  [key=0, style=bold, color=blue];
m5_793 -> m5_794  [key=0, style=solid];
m5_793 -> m5_788  [key=2, style=dotted];
m5_801 -> m5_802  [key=0, style=solid];
m5_801 -> m5_562  [key=2, style=dotted];
m5_801 -> m5_453  [key=2, style=dotted];
m5_805 -> m5_800  [key=0, style=bold, color=blue];
m5_802 -> m5_803  [key=0, style=solid];
m5_802 -> m5_788  [key=2, style=dotted];
m5_802 -> m5_804  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_813 -> m5_814  [key=0, style=solid];
m5_813 -> m5_815  [key=2, style=dotted];
m5_822 -> m5_819  [key=0, style=bold, color=blue];
m5_820 -> m5_821  [key=0, style=solid];
m5_820 -> m5_815  [key=2, style=dotted];
m5_828 -> m5_829  [key=0, style=solid];
m5_828 -> m5_453  [key=2, style=dotted];
m5_831 -> m5_827  [key=0, style=bold, color=blue];
m5_829 -> m5_830  [key=0, style=solid];
m5_829 -> m5_815  [key=2, style=dotted];
m5_839 -> m5_840  [key=0, style=solid];
m5_839 -> m5_841  [key=2, style=dotted];
m5_848 -> m5_845  [key=0, style=bold, color=blue];
m5_846 -> m5_847  [key=0, style=solid];
m5_846 -> m5_841  [key=2, style=dotted];
m5_854 -> m5_855  [key=0, style=solid];
m5_854 -> m5_562  [key=2, style=dotted];
m5_854 -> m5_453  [key=2, style=dotted];
m5_858 -> m5_853  [key=0, style=bold, color=blue];
m5_855 -> m5_856  [key=0, style=solid];
m5_855 -> m5_841  [key=2, style=dotted];
m5_855 -> m5_857  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_865 -> m5_862  [key=0, style=bold, color=blue];
m5_867 -> m5_868  [key=0, style=solid];
m5_867 -> m5_869  [key=2, style=dotted];
m5_876 -> m5_873  [key=0, style=bold, color=blue];
m5_878 -> m5_879  [key=0, style=solid];
m5_878 -> m5_869  [key=2, style=dotted];
m5_892 -> m5_893  [key=0, style=solid];
m5_892 -> m5_453  [key=2, style=dotted];
m5_895 -> m5_891  [key=0, style=bold, color=blue];
m5_893 -> m5_894  [key=0, style=solid];
m5_893 -> m5_869  [key=2, style=dotted];
m5_902 -> m5_899  [key=0, style=bold, color=blue];
m5_904 -> m5_905  [key=0, style=solid];
m5_904 -> m5_906  [key=2, style=dotted];
m5_913 -> m5_910  [key=0, style=bold, color=blue];
m5_911 -> m5_912  [key=0, style=solid];
m5_911 -> m5_906  [key=2, style=dotted];
m5_920 -> m5_921  [key=0, style=solid];
m5_920 -> m5_453  [key=2, style=dotted];
m5_923 -> m5_919  [key=0, style=bold, color=blue];
m5_921 -> m5_922  [key=0, style=solid];
m5_921 -> m5_906  [key=2, style=dotted];
m5_931 -> m5_932  [key=0, style=solid];
m5_931 -> m5_933  [key=2, style=dotted];
m5_940 -> m5_937  [key=0, style=bold, color=blue];
m5_938 -> m5_939  [key=0, style=solid];
m5_938 -> m5_933  [key=2, style=dotted];
m5_946 -> m5_947  [key=0, style=solid];
m5_946 -> m5_453  [key=2, style=dotted];
m5_949 -> m5_945  [key=0, style=bold, color=blue];
m5_947 -> m5_948  [key=0, style=solid];
m5_947 -> m5_933  [key=2, style=dotted];
m5_957 -> m5_958  [key=0, style=solid];
m5_957 -> m5_959  [key=2, style=dotted];
m5_966 -> m5_963  [key=0, style=bold, color=blue];
m5_964 -> m5_965  [key=0, style=solid];
m5_964 -> m5_959  [key=2, style=dotted];
m5_972 -> m5_973  [key=0, style=solid];
m5_972 -> m5_204  [key=2, style=dotted];
m5_972 -> m5_453  [key=2, style=dotted];
m5_976 -> m5_971  [key=0, style=bold, color=blue];
m5_973 -> m5_974  [key=0, style=solid];
m5_973 -> m5_959  [key=2, style=dotted];
m5_973 -> m5_975  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_998 -> m5_996  [key=0, style=bold, color=blue];
m5_997 -> m5_998  [key=0, style=solid];
m5_23 -> m5_21  [key=0, style=bold, color=blue];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_24  [key=2, style=dotted];
m5_55 -> m5_53  [key=0, style=bold, color=blue];
m5_83 -> m5_81  [key=0, style=bold, color=blue];
m5_124 -> m5_122  [key=0, style=bold, color=blue];
m5_153 -> m5_151  [key=0, style=bold, color=blue];
m5_165 -> m5_163  [key=0, style=bold, color=blue];
m5_241 -> m5_239  [key=0, style=bold, color=blue];
m5_281 -> m5_279  [key=0, style=bold, color=blue];
m5_333 -> m5_331  [key=0, style=bold, color=blue];
m5_344 -> m5_342  [key=0, style=bold, color=blue];
m5_388 -> m5_386  [key=0, style=bold, color=blue];
m5_399 -> m5_397  [key=0, style=bold, color=blue];
m5_414 -> m5_415  [key=0, style=solid];
m5_414 -> m5_20  [key=2, style=dotted];
m5_426 -> m5_424  [key=0, style=bold, color=blue];
m5_436 -> m5_434  [key=0, style=bold, color=blue];
m5_463 -> m5_461  [key=0, style=bold, color=blue];
m5_475 -> m5_473  [key=0, style=bold, color=blue];
m5_502 -> m5_500  [key=0, style=bold, color=blue];
m5_523 -> m5_521  [key=0, style=bold, color=blue];
m5_550 -> m5_548  [key=0, style=bold, color=blue];
m5_572 -> m5_570  [key=0, style=bold, color=blue];
m5_602 -> m5_600  [key=0, style=bold, color=blue];
m5_613 -> m5_611  [key=0, style=bold, color=blue];
m5_680 -> m5_678  [key=0, style=bold, color=blue];
m5_707 -> m5_705  [key=0, style=bold, color=blue];
m5_726 -> m5_724  [key=0, style=bold, color=blue];
m5_761 -> m5_759  [key=0, style=bold, color=blue];
m5_787 -> m5_785  [key=0, style=bold, color=blue];
m5_814 -> m5_812  [key=0, style=bold, color=blue];
m5_840 -> m5_838  [key=0, style=bold, color=blue];
m5_868 -> m5_866  [key=0, style=bold, color=blue];
m5_879 -> m5_877  [key=0, style=bold, color=blue];
m5_905 -> m5_903  [key=0, style=bold, color=blue];
m5_932 -> m5_930  [key=0, style=bold, color=blue];
m5_958 -> m5_956  [key=0, style=bold, color=blue];
m5_259 -> m5_64  [key=2, style=dotted];
m5_259 -> m5_260  [key=0, style=solid];
m5_260 -> m5_64  [key=2, style=dotted];
m5_260 -> m5_261  [key=0, style=solid];
m5_261 -> m5_262  [key=0, style=solid];
m5_261 -> m5_20  [key=2, style=dotted];
m5_265 -> m5_266  [key=0, style=solid];
m5_265 -> m5_204  [key=2, style=dotted];
m5_265 -> m5_143  [key=2, style=dotted];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_64  [key=2, style=dotted];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_64  [key=2, style=dotted];
m5_167 -> m5_168  [key=0, style=solid];
m5_169 -> m5_167  [key=0, style=bold, color=blue];
m5_206 -> m5_207  [key=0, style=solid];
m5_208 -> m5_206  [key=0, style=bold, color=blue];
m5_224 -> m5_225  [key=0, style=solid];
m5_226 -> m5_224  [key=0, style=bold, color=blue];
m5_270 -> m5_271  [key=0, style=solid];
m5_272 -> m5_270  [key=0, style=bold, color=blue];
m5_141 -> m5_142  [key=0, style=solid];
m5_141 -> m5_143  [key=2, style=dotted];
m5_194 -> m5_195  [key=0, style=solid];
m5_194 -> m5_20  [key=2, style=dotted];
m5_181 -> m5_20  [key=2, style=dotted];
m5_181 -> m5_182  [key=0, style=solid];
m5_190 -> m5_204  [key=2, style=dotted];
m5_190 -> m5_143  [key=2, style=dotted];
m5_190 -> m5_191  [key=0, style=solid];
m5_190 -> m5_203  [key=2, style=dotted];
m5_191 -> m5_192  [key=0, style=solid];
m5_191 -> m5_204  [key=2, style=dotted];
m5_191 -> m5_143  [key=2, style=dotted];
m5_191 -> m5_203  [key=2, style=dotted];
m5_177 -> m5_64  [key=2, style=dotted];
m5_177 -> m5_178  [key=0, style=solid];
m5_178 -> m5_179  [key=0, style=solid];
m5_178 -> m5_198  [key=2, style=dotted];
m5_180 -> m5_20  [key=2, style=dotted];
m5_180 -> m5_200  [key=2, style=dotted];
m5_180 -> m5_181  [key=0, style=solid];
m5_182 -> m5_20  [key=2, style=dotted];
m5_182 -> m5_183  [key=0, style=solid];
m5_183 -> m5_20  [key=2, style=dotted];
m5_183 -> m5_184  [key=0, style=solid];
m5_184 -> m5_185  [key=0, style=solid];
m5_184 -> m5_201  [key=2, style=dotted];
m5_184 -> m5_186  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m5_185 -> m5_186  [key=0, style=solid];
m5_193 -> m5_20  [key=2, style=dotted];
m5_193 -> m5_194  [key=0, style=solid];
m5_209 -> m5_210  [key=0, style=solid];
m5_212 -> m5_213  [key=0, style=solid];
m5_222 -> m5_223  [key=0, style=solid];
m5_222 -> m5_20  [key=2, style=dotted];
m5_227 -> m5_228  [key=0, style=solid];
m5_230 -> m5_231  [key=0, style=solid];
m5_301 -> m5_302  [key=0, style=solid];
m5_301 -> m5_20  [key=2, style=dotted];
m5_298 -> m5_64  [key=2, style=dotted];
m5_298 -> m5_299  [key=0, style=solid];
m5_299 -> m5_20  [key=2, style=dotted];
m5_299 -> m5_300  [key=0, style=solid];
m5_300 -> m5_20  [key=2, style=dotted];
m5_300 -> m5_301  [key=0, style=solid];
m5_312 -> m5_313  [key=0, style=solid];
m5_312 -> m5_20  [key=2, style=dotted];
m5_311 -> m5_64  [key=2, style=dotted];
m5_311 -> m5_312  [key=0, style=solid];
m5_321 -> m5_322  [key=0, style=solid];
m5_321 -> m5_64  [key=2, style=dotted];
m5_351 -> m5_352  [key=0, style=solid];
m5_351 -> m5_353  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_351 -> m5_200  [key=2, style=dotted];
m5_354 -> m5_355  [key=0, style=solid];
m5_354 -> m5_20  [key=2, style=dotted];
m5_362 -> m5_363  [key=0, style=solid];
m5_362 -> m5_364  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_362 -> m5_365  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_362 -> m5_200  [key=2, style=dotted];
m5_366 -> m5_367  [key=0, style=solid];
m5_366 -> m5_20  [key=2, style=dotted];
m5_374 -> m5_375  [key=0, style=solid];
m5_374 -> m5_376  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m5_374 -> m5_200  [key=2, style=dotted];
m5_377 -> m5_378  [key=0, style=solid];
m5_377 -> m5_20  [key=2, style=dotted];
m5_451 -> m5_452  [key=0, style=solid];
m5_451 -> m5_20  [key=2, style=dotted];
m5_490 -> m5_491  [key=0, style=solid];
m5_490 -> m5_493  [key=2, style=dotted];
m5_483 -> m5_20  [key=2, style=dotted];
m5_483 -> m5_484  [key=0, style=solid];
m5_484 -> m5_143  [key=2, style=dotted];
m5_484 -> m5_485  [key=0, style=solid];
m5_484 -> m5_492  [key=2, style=dotted];
m5_485 -> m5_64  [key=2, style=dotted];
m5_485 -> m5_486  [key=0, style=solid];
m5_486 -> m5_487  [key=0, style=solid];
m5_486 -> m5_464  [key=2, style=dotted];
m5_489 -> m5_20  [key=2, style=dotted];
m5_489 -> m5_490  [key=0, style=solid];
m5_512 -> m5_513  [key=0, style=solid];
m5_512 -> m5_514  [key=2, style=dotted];
m5_534 -> m5_535  [key=0, style=solid];
m5_534 -> m5_20  [key=2, style=dotted];
m5_533 -> m5_534  [key=0, style=solid];
m5_533 -> m5_514  [key=2, style=dotted];
m5_536 -> m5_537  [key=0, style=solid];
m5_539 -> m5_540  [key=0, style=solid];
m5_560 -> m5_561  [key=0, style=solid];
m5_560 -> m5_20  [key=2, style=dotted];
m5_580 -> m5_581  [key=0, style=solid];
m5_580 -> m5_20  [key=2, style=dotted];
m5_579 -> m5_64  [key=2, style=dotted];
m5_579 -> m5_580  [key=0, style=solid];
m5_591 -> m5_592  [key=0, style=solid];
m5_591 -> m5_493  [key=2, style=dotted];
m5_589 -> m5_20  [key=2, style=dotted];
m5_589 -> m5_590  [key=0, style=solid];
m5_590 -> m5_591  [key=0, style=solid];
m5_590 -> m5_493  [key=2, style=dotted];
m5_621 -> m5_622  [key=0, style=solid];
m5_621 -> m5_20  [key=2, style=dotted];
m5_620 -> m5_20  [key=2, style=dotted];
m5_620 -> m5_621  [key=0, style=solid];
m5_623 -> m5_624  [key=0, style=solid];
m5_626 -> m5_627  [key=0, style=solid];
m5_635 -> m5_636  [key=0, style=solid];
m5_635 -> m5_20  [key=2, style=dotted];
m5_637 -> m5_638  [key=0, style=solid];
m5_687 -> m5_688  [key=0, style=solid];
m5_687 -> m5_20  [key=2, style=dotted];
m5_696 -> m5_697  [key=0, style=solid];
m5_696 -> m5_20  [key=2, style=dotted];
m5_716 -> m5_717  [key=0, style=solid];
m5_716 -> m5_20  [key=2, style=dotted];
m5_733 -> m5_734  [key=0, style=solid];
m5_733 -> m5_20  [key=2, style=dotted];
m5_742 -> m5_743  [key=0, style=solid];
m5_742 -> m5_20  [key=2, style=dotted];
m5_751 -> m5_752  [key=0, style=solid];
m5_751 -> m5_20  [key=2, style=dotted];
m5_768 -> m5_769  [key=0, style=solid];
m5_768 -> m5_20  [key=2, style=dotted];
m5_777 -> m5_778  [key=0, style=solid];
m5_777 -> m5_20  [key=2, style=dotted];
m5_794 -> m5_795  [key=0, style=solid];
m5_794 -> m5_143  [key=2, style=dotted];
m5_804 -> m5_805  [key=0, style=solid];
m5_804 -> m5_84  [key=2, style=dotted];
m5_804 -> m5_143  [key=2, style=dotted];
m5_803 -> m5_84  [key=2, style=dotted];
m5_803 -> m5_143  [key=2, style=dotted];
m5_803 -> m5_804  [key=0, style=solid];
m5_821 -> m5_822  [key=0, style=solid];
m5_821 -> m5_20  [key=2, style=dotted];
m5_830 -> m5_831  [key=0, style=solid];
m5_830 -> m5_20  [key=2, style=dotted];
m5_847 -> m5_848  [key=0, style=solid];
m5_847 -> m5_143  [key=2, style=dotted];
m5_857 -> m5_858  [key=0, style=solid];
m5_857 -> m5_84  [key=2, style=dotted];
m5_857 -> m5_143  [key=2, style=dotted];
m5_856 -> m5_84  [key=2, style=dotted];
m5_856 -> m5_143  [key=2, style=dotted];
m5_856 -> m5_857  [key=0, style=solid];
m5_894 -> m5_895  [key=0, style=solid];
m5_894 -> m5_20  [key=2, style=dotted];
m5_912 -> m5_913  [key=0, style=solid];
m5_912 -> m5_914  [key=2, style=dotted];
m5_922 -> m5_923  [key=0, style=solid];
m5_922 -> m5_20  [key=2, style=dotted];
m5_939 -> m5_940  [key=0, style=solid];
m5_939 -> m5_914  [key=2, style=dotted];
m5_948 -> m5_949  [key=0, style=solid];
m5_948 -> m5_20  [key=2, style=dotted];
m5_965 -> m5_966  [key=0, style=solid];
m5_965 -> m5_143  [key=2, style=dotted];
m5_975 -> m5_976  [key=0, style=solid];
m5_975 -> m5_84  [key=2, style=dotted];
m5_975 -> m5_143  [key=2, style=dotted];
m5_974 -> m5_84  [key=2, style=dotted];
m5_974 -> m5_143  [key=2, style=dotted];
m5_974 -> m5_975  [key=0, style=solid];
m5_187 -> m5_20  [key=2, style=dotted];
m5_187 -> m5_188  [key=0, style=solid];
m5_188 -> m5_20  [key=2, style=dotted];
m5_188 -> m5_189  [key=0, style=solid];
m5_189 -> m5_20  [key=2, style=dotted];
m5_189 -> m5_190  [key=0, style=solid];
m5_186 -> m5_187  [key=0, style=solid];
m5_186 -> m5_188  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_186 -> m5_189  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_186 -> m5_202  [key=2, style=dotted];
m5_211 -> m5_209  [key=0, style=bold, color=blue];
m5_210 -> m5_211  [key=0, style=solid];
m5_214 -> m5_212  [key=0, style=bold, color=blue];
m5_213 -> m5_214  [key=0, style=solid];
m5_229 -> m5_227  [key=0, style=bold, color=blue];
m5_228 -> m5_229  [key=0, style=solid];
m5_232 -> m5_230  [key=0, style=bold, color=blue];
m5_231 -> m5_232  [key=0, style=solid];
m5_538 -> m5_536  [key=0, style=bold, color=blue];
m5_537 -> m5_538  [key=0, style=solid];
m5_541 -> m5_539  [key=0, style=bold, color=blue];
m5_540 -> m5_541  [key=0, style=solid];
m5_625 -> m5_623  [key=0, style=bold, color=blue];
m5_624 -> m5_625  [key=0, style=solid];
m5_628 -> m5_626  [key=0, style=bold, color=blue];
m5_627 -> m5_628  [key=0, style=solid];
m5_639 -> m5_637  [key=0, style=bold, color=blue];
m5_638 -> m5_639  [key=0, style=solid];
m5_641 -> m5_642  [key=0, style=solid];
m5_642 -> m5_640  [key=0, style=bold, color=blue];
m5_770 -> m5_771  [key=0, style=solid];
m5_772 -> m5_773  [key=0, style=solid];
m5_772 -> m5_88  [key=2, style=dotted];
m5_772 -> m5_774  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_771 -> m5_772  [key=0, style=solid];
m5_771 -> m5_771  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_771 -> m5_775  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_773 -> m5_770  [key=0, style=bold, color=blue];
m5_454 -> m5_455  [key=0, style=solid];
m5_455 -> m5_45  [key=2, style=dotted];
m5_455 -> m5_456  [key=0, style=solid];
m5_455 -> m5_457  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_456 -> m5_454  [key=0, style=bold, color=blue];
m5_564 -> m5_565  [key=0, style=solid];
m5_565 -> m5_45  [key=2, style=dotted];
m5_565 -> m5_566  [key=0, style=solid];
m5_565 -> m5_567  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_566 -> m5_564  [key=0, style=bold, color=blue];
m5_324 -> m5_325  [key=0, style=solid];
m5_325 -> m5_45  [key=2, style=dotted];
m5_325 -> m5_326  [key=0, style=solid];
m5_325 -> m5_327  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_326 -> m5_324  [key=0, style=bold, color=blue];
m5_243 -> m5_244  [key=0, style=solid];
m5_244 -> m5_45  [key=2, style=dotted];
m5_244 -> m5_245  [key=0, style=solid];
m5_244 -> m5_246  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_245 -> m5_243  [key=0, style=bold, color=blue];
m5_56 -> m5_57  [key=0, style=solid];
m5_57 -> m5_45  [key=2, style=dotted];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_58 -> m5_56  [key=0, style=bold, color=blue];
m5_400 -> m5_401  [key=0, style=solid];
m5_401 -> m5_45  [key=2, style=dotted];
m5_401 -> m5_402  [key=0, style=solid];
m5_401 -> m5_403  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_402 -> m5_400  [key=0, style=bold, color=blue];
m5_977 -> m5_979  [key=1, style=dashed, color=darkseagreen4, label=bool];
m5_977 -> m5_978  [key=0, style=solid];
m5_977 -> m5_981  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>"];
m5_979 -> m5_84  [key=2, style=dotted];
m5_979 -> m5_980  [key=0, style=solid];
m5_979 -> m5_984  [key=2, style=dotted];
m5_979 -> m5_985  [key=2, style=dotted];
m5_978 -> m5_983  [key=2, style=dotted];
m5_978 -> m5_979  [key=0, style=solid];
m5_978 -> m5_981  [key=1, style=dashed, color=darkseagreen4, label=sqlConnection];
m5_980 -> m5_24  [key=2, style=dotted];
m5_980 -> m5_981  [key=0, style=solid];
m5_981 -> m5_982  [key=0, style=solid];
m5_981 -> m5_986  [key=2, style=dotted];
m5_982 -> m5_977  [key=0, style=bold, color=blue];
m5_806 -> m5_807  [key=0, style=solid];
m5_807 -> m5_45  [key=2, style=dotted];
m5_807 -> m5_808  [key=0, style=solid];
m5_807 -> m5_809  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_808 -> m5_806  [key=0, style=bold, color=blue];
m5_614 -> m5_615  [key=0, style=solid];
m5_615 -> m5_616  [key=0, style=solid];
m5_615 -> m5_88  [key=2, style=dotted];
m5_615 -> m5_617  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_616 -> m5_614  [key=0, style=bold, color=blue];
m5_170 -> m5_86  [key=3, color=darkorchid, style=bold, label="Parameter variable string arg"];
m5_170 -> m5_172  [key=3, color=darkorchid, style=bold, label="Parameter variable string arg"];
m5_170 -> m5_253  [key=3, color=darkorchid, style=bold, label="Parameter variable string arg"];
m5_170 -> m5_999  [key=0, style=solid];
m5_999 -> m5_170  [key=0, style=bold, color=blue];
m5_593 -> m5_594  [key=0, style=solid];
m5_594 -> m5_45  [key=2, style=dotted];
m5_594 -> m5_595  [key=0, style=solid];
m5_594 -> m5_596  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_595 -> m5_593  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_6  [key=2, style=dotted];
m5_1 -> m5_0  [key=0, style=bold, color=blue];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_8  [key=2, style=dotted];
m5_3 -> m5_9  [key=2, style=dotted];
m5_3 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_3 -> m5_2  [key=0, style=bold, color=blue];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label=provider];
m5_2 -> m5_7  [key=2, style=dotted];
m5_156 -> m5_157  [key=0, style=solid];
m5_157 -> m5_45  [key=2, style=dotted];
m5_157 -> m5_158  [key=0, style=solid];
m5_157 -> m5_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_158 -> m5_156  [key=0, style=bold, color=blue];
m5_689 -> m5_690  [key=0, style=solid];
m5_691 -> m5_692  [key=0, style=solid];
m5_691 -> m5_88  [key=2, style=dotted];
m5_691 -> m5_693  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_690 -> m5_691  [key=0, style=solid];
m5_690 -> m5_690  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_690 -> m5_694  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_692 -> m5_689  [key=0, style=bold, color=blue];
m5_842 -> m5_843  [key=0, style=solid];
m5_843 -> m5_45  [key=2, style=dotted];
m5_843 -> m5_844  [key=0, style=solid];
m5_843 -> m5_845  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_844 -> m5_842  [key=0, style=bold, color=blue];
m5_552 -> m5_553  [key=0, style=solid];
m5_554 -> m5_555  [key=0, style=solid];
m5_554 -> m5_88  [key=2, style=dotted];
m5_554 -> m5_556  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_553 -> m5_554  [key=0, style=solid];
m5_553 -> m5_553  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_553 -> m5_557  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_555 -> m5_552  [key=0, style=bold, color=blue];
m5_832 -> m5_833  [key=0, style=solid];
m5_833 -> m5_45  [key=2, style=dotted];
m5_833 -> m5_834  [key=0, style=solid];
m5_833 -> m5_835  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_834 -> m5_832  [key=0, style=bold, color=blue];
m5_290 -> m5_291  [key=0, style=solid];
m5_292 -> m5_293  [key=0, style=solid];
m5_292 -> m5_88  [key=2, style=dotted];
m5_292 -> m5_294  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_291 -> m5_292  [key=0, style=solid];
m5_291 -> m5_291  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_291 -> m5_296  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_293 -> m5_290  [key=0, style=bold, color=blue];
m5_880 -> m5_881  [key=0, style=solid];
m5_881 -> m5_45  [key=2, style=dotted];
m5_881 -> m5_882  [key=0, style=solid];
m5_881 -> m5_883  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_882 -> m5_880  [key=0, style=bold, color=blue];
m5_42 -> m5_43  [key=0, style=solid];
m5_43 -> m5_45  [key=2, style=dotted];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_44 -> m5_42  [key=0, style=bold, color=blue];
m5_171 -> m5_172  [key=0, style=solid];
m5_172 -> m5_173  [key=0, style=solid];
m5_172 -> m5_88  [key=2, style=dotted];
m5_172 -> m5_174  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_173 -> m5_171  [key=0, style=bold, color=blue];
m5_8 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerPool"];
m5_8 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerPool"];
m5_753 -> m5_754  [key=0, style=solid];
m5_754 -> m5_45  [key=2, style=dotted];
m5_754 -> m5_755  [key=0, style=solid];
m5_754 -> m5_756  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_755 -> m5_753  [key=0, style=bold, color=blue];
m5_25 -> m5_26  [key=0, style=solid];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_28  [key=2, style=dotted];
m5_26 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_27 -> m5_25  [key=0, style=bold, color=blue];
m5_582 -> m5_583  [key=0, style=solid];
m5_584 -> m5_585  [key=0, style=solid];
m5_584 -> m5_88  [key=2, style=dotted];
m5_584 -> m5_586  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_583 -> m5_584  [key=0, style=solid];
m5_583 -> m5_583  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_583 -> m5_587  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_585 -> m5_582  [key=0, style=bold, color=blue];
m5_135 -> m5_136  [key=0, style=solid];
m5_136 -> m5_45  [key=2, style=dotted];
m5_136 -> m5_137  [key=0, style=solid];
m5_136 -> m5_138  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_137 -> m5_135  [key=0, style=bold, color=blue];
m5_604 -> m5_605  [key=0, style=solid];
m5_605 -> m5_45  [key=2, style=dotted];
m5_605 -> m5_606  [key=0, style=solid];
m5_605 -> m5_607  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_606 -> m5_604  [key=0, style=bold, color=blue];
m5_763 -> m5_764  [key=0, style=solid];
m5_764 -> m5_45  [key=2, style=dotted];
m5_764 -> m5_765  [key=0, style=solid];
m5_764 -> m5_766  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_765 -> m5_763  [key=0, style=bold, color=blue];
m5_779 -> m5_780  [key=0, style=solid];
m5_780 -> m5_45  [key=2, style=dotted];
m5_780 -> m5_781  [key=0, style=solid];
m5_780 -> m5_782  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_781 -> m5_779  [key=0, style=bold, color=blue];
m5_718 -> m5_719  [key=0, style=solid];
m5_719 -> m5_45  [key=2, style=dotted];
m5_719 -> m5_720  [key=0, style=solid];
m5_719 -> m5_721  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_720 -> m5_718  [key=0, style=bold, color=blue];
m5_28 -> m5_26  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<Hangfire.SqlServer.SqlServerConnection> action"];
m5_28 -> m5_98  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<Hangfire.SqlServer.SqlServerConnection> action"];
m5_28 -> m5_987  [key=0, style=solid];
m5_28 -> m5_991  [key=1, style=dashed, color=darkseagreen4, label="System.Action<Hangfire.SqlServer.SqlServerConnection>"];
m5_989 -> m5_990  [key=0, style=solid];
m5_989 -> m5_8  [key=2, style=dotted];
m5_989 -> m5_9  [key=2, style=dotted];
m5_989 -> m5_996  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_988 -> m5_989  [key=0, style=solid];
m5_988 -> m5_993  [key=2, style=dotted];
m5_988 -> m5_990  [key=1, style=dashed, color=darkseagreen4, label=storage];
m5_990 -> m5_991  [key=0, style=solid];
m5_990 -> m5_994  [key=2, style=dotted];
m5_987 -> m5_988  [key=0, style=solid];
m5_987 -> m5_983  [key=2, style=dotted];
m5_991 -> m5_992  [key=0, style=solid];
m5_991 -> n19  [key=2, style=dotted];
m5_992 -> m5_28  [key=0, style=bold, color=blue];
m5_896 -> m5_897  [key=0, style=solid];
m5_897 -> m5_45  [key=2, style=dotted];
m5_897 -> m5_898  [key=0, style=solid];
m5_897 -> m5_899  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_898 -> m5_896  [key=0, style=bold, color=blue];
m5_379 -> m5_380  [key=0, style=solid];
m5_380 -> m5_45  [key=2, style=dotted];
m5_380 -> m5_381  [key=0, style=solid];
m5_380 -> m5_382  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_381 -> m5_379  [key=0, style=bold, color=blue];
m5_915 -> m5_916  [key=0, style=solid];
m5_917 -> m5_918  [key=0, style=solid];
m5_917 -> m5_88  [key=2, style=dotted];
m5_917 -> m5_919  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_916 -> m5_917  [key=0, style=solid];
m5_916 -> m5_916  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_916 -> m5_920  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_918 -> m5_915  [key=0, style=bold, color=blue];
m5_144 -> m5_145  [key=0, style=solid];
m5_145 -> m5_45  [key=2, style=dotted];
m5_145 -> m5_146  [key=0, style=solid];
m5_145 -> m5_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_146 -> m5_144  [key=0, style=bold, color=blue];
m5_728 -> m5_729  [key=0, style=solid];
m5_729 -> m5_45  [key=2, style=dotted];
m5_729 -> m5_730  [key=0, style=solid];
m5_729 -> m5_731  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_730 -> m5_728  [key=0, style=bold, color=blue];
m5_950 -> m5_951  [key=0, style=solid];
m5_951 -> m5_45  [key=2, style=dotted];
m5_951 -> m5_952  [key=0, style=solid];
m5_951 -> m5_953  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_952 -> m5_950  [key=0, style=bold, color=blue];
m5_65 -> m5_66  [key=0, style=solid];
m5_66 -> m5_45  [key=2, style=dotted];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_67 -> m5_65  [key=0, style=bold, color=blue];
m5_672 -> m5_673  [key=0, style=solid];
m5_673 -> m5_45  [key=2, style=dotted];
m5_673 -> m5_674  [key=0, style=solid];
m5_673 -> m5_675  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_674 -> m5_672  [key=0, style=bold, color=blue];
m5_444 -> m5_445  [key=0, style=solid];
m5_446 -> m5_447  [key=0, style=solid];
m5_446 -> m5_88  [key=2, style=dotted];
m5_446 -> m5_448  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_445 -> m5_446  [key=0, style=solid];
m5_445 -> m5_445  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_445 -> m5_449  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_447 -> m5_444  [key=0, style=bold, color=blue];
m5_709 -> m5_710  [key=0, style=solid];
m5_711 -> m5_712  [key=0, style=solid];
m5_711 -> m5_88  [key=2, style=dotted];
m5_711 -> m5_713  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_710 -> m5_711  [key=0, style=solid];
m5_710 -> m5_710  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_710 -> m5_714  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_712 -> m5_709  [key=0, style=bold, color=blue];
m5_356 -> m5_357  [key=0, style=solid];
m5_358 -> m5_359  [key=0, style=solid];
m5_358 -> m5_88  [key=2, style=dotted];
m5_358 -> m5_360  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_357 -> m5_358  [key=0, style=solid];
m5_357 -> m5_346  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_357 -> m5_361  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_359 -> m5_356  [key=0, style=bold, color=blue];
m5_525 -> m5_526  [key=0, style=solid];
m5_527 -> m5_528  [key=0, style=solid];
m5_527 -> m5_88  [key=2, style=dotted];
m5_527 -> m5_529  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_526 -> m5_527  [key=0, style=solid];
m5_526 -> m5_526  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_526 -> m5_530  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_528 -> m5_525  [key=0, style=bold, color=blue];
m5_907 -> m5_908  [key=0, style=solid];
m5_908 -> m5_45  [key=2, style=dotted];
m5_908 -> m5_909  [key=0, style=solid];
m5_908 -> m5_910  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_909 -> m5_907  [key=0, style=bold, color=blue];
m5_74 -> m5_75  [key=0, style=solid];
m5_75 -> m5_45  [key=2, style=dotted];
m5_75 -> m5_76  [key=0, style=solid];
m5_75 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_76 -> m5_74  [key=0, style=bold, color=blue];
m5_251 -> m5_252  [key=0, style=solid];
m5_253 -> m5_254  [key=0, style=solid];
m5_253 -> m5_88  [key=2, style=dotted];
m5_253 -> m5_255  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_252 -> m5_253  [key=0, style=solid];
m5_252 -> m5_252  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_252 -> m5_257  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_254 -> m5_251  [key=0, style=bold, color=blue];
m5_515 -> m5_516  [key=0, style=solid];
m5_516 -> m5_45  [key=2, style=dotted];
m5_516 -> m5_517  [key=0, style=solid];
m5_516 -> m5_518  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_517 -> m5_515  [key=0, style=bold, color=blue];
m5_823 -> m5_824  [key=0, style=solid];
m5_825 -> m5_826  [key=0, style=solid];
m5_825 -> m5_88  [key=2, style=dotted];
m5_825 -> m5_827  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_824 -> m5_825  [key=0, style=solid];
m5_824 -> m5_824  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m5_824 -> m5_828  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_826 -> m5_823  [key=0, style=bold, color=blue];
m5_233 -> m5_234  [key=0, style=solid];
m5_234 -> m5_45  [key=2, style=dotted];
m5_234 -> m5_235  [key=0, style=solid];
m5_234 -> m5_236  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_235 -> m5_233  [key=0, style=bold, color=blue];
m5_437 -> m5_438  [key=0, style=solid];
m5_438 -> m5_45  [key=2, style=dotted];
m5_438 -> m5_439  [key=0, style=solid];
m5_438 -> m5_440  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_439 -> m5_437  [key=0, style=bold, color=blue];
m5_682 -> m5_683  [key=0, style=solid];
m5_683 -> m5_45  [key=2, style=dotted];
m5_683 -> m5_684  [key=0, style=solid];
m5_683 -> m5_685  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_684 -> m5_682  [key=0, style=bold, color=blue];
m5_1000 -> m5_644  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_654  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_75  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_98  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_112  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_101  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_126  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_136  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_145  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_157  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_172  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_216  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_234  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_244  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_253  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_274  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_284  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_292  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_305  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_316  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_325  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_336  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_347  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_358  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_370  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_380  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_391  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_401  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_409  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_418  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_429  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_438  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_446  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_455  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_467  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_477  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_495  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_506  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_516  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_527  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_543  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_554  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_565  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_575  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_584  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_594  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_605  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_615  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_630  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_662  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_673  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_683  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_691  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_700  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_711  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_719  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_729  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_737  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_746  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_754  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_764  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_772  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_780  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_790  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_798  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_807  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_817  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_825  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_833  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_843  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_851  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_860  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_871  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_881  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_889  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_897  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_908  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_917  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_925  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_935  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_943  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_951  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_961  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_969  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1000 -> m5_989  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m5_1040 -> m5_650  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1006 -> m5_112  [key=1, style=dashed, color=darkseagreen4, label=releaseLock];
m5_1006 -> m5_117  [key=1, style=dashed, color=darkseagreen4, label=releaseLock];
m5_1007 -> m5_112  [key=1, style=dashed, color=darkseagreen4, label=lockAcquired];
m5_1007 -> m5_116  [key=1, style=dashed, color=darkseagreen4, label=lockAcquired];
m5_1024 -> m5_412  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1041 -> m5_665  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1001 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label=token];
m5_1002 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label=queues];
m5_1003 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1004 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label=token];
m5_1005 -> m5_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1008 -> m5_123  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1009 -> m5_152  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1010 -> m5_164  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1011 -> m5_240  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1012 -> m5_257  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1013 -> m5_280  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1014 -> m5_296  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1015 -> m5_309  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1016 -> m5_319  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1017 -> m5_332  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1018 -> m5_343  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1019 -> m5_350  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1020 -> m5_361  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1021 -> m5_373  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1022 -> m5_387  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1023 -> m5_398  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1025 -> m5_425  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1026 -> m5_435  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1027 -> m5_449  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1028 -> m5_462  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1029 -> m5_474  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1030 -> m5_501  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1031 -> m5_509  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1032 -> m5_522  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1033 -> m5_530  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1034 -> m5_549  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1035 -> m5_557  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1036 -> m5_571  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1037 -> m5_587  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1038 -> m5_601  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1039 -> m5_612  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1042 -> m5_679  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1043 -> m5_694  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1044 -> m5_706  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1045 -> m5_714  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1046 -> m5_725  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1047 -> m5_740  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1048 -> m5_749  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1049 -> m5_760  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1050 -> m5_775  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1051 -> m5_786  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1052 -> m5_801  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1053 -> m5_813  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1054 -> m5_828  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1055 -> m5_839  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1056 -> m5_854  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1057 -> m5_867  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1058 -> m5_878  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1059 -> m5_892  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1060 -> m5_904  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1061 -> m5_920  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1062 -> m5_931  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1063 -> m5_946  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m5_1064 -> m5_957  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m5_1065 -> m5_972  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m6_92 -> m6_104  [key=0, style=solid];
m6_92 -> m6_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m6_92 -> m6_106  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_55  [key=2, style=dotted];
m6_104 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_56  [key=2, style=dotted];
m6_106 -> m6_107  [key=0, style=solid];
m6_106 -> m6_57  [key=2, style=dotted];
m6_107 -> m6_108  [key=0, style=solid];
m6_107 -> m6_59  [key=2, style=dotted];
m6_108 -> m6_92  [key=0, style=bold, color=blue];
m6_17 -> m6_153  [key=0, style=solid];
m6_17 -> m6_155  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m6_17 -> m6_157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m6_17 -> m6_158  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m6_17 -> m6_159  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobStateHandler"];
m6_153 -> m6_154  [key=0, style=solid];
m6_153 -> m6_155  [key=0, style=solid];
m6_155 -> m6_156  [key=0, style=solid];
m6_155 -> m6_157  [key=0, style=solid];
m6_155 -> m6_123  [key=2, style=dotted];
m6_157 -> m6_158  [key=0, style=solid];
m6_157 -> m6_159  [key=0, style=solid];
m6_157 -> m6_124  [key=2, style=dotted];
m6_158 -> m6_159  [key=0, style=solid];
m6_158 -> m6_161  [key=2, style=dotted];
m6_158 -> m6_162  [key=2, style=dotted];
m6_159 -> m6_160  [key=0, style=solid];
m6_159 -> m6_163  [key=2, style=dotted];
m6_154 -> m6_160  [key=0, style=solid];
m6_154 -> n17  [key=2, style=dotted];
m6_156 -> m6_160  [key=0, style=solid];
m6_156 -> n17  [key=2, style=dotted];
m6_160 -> m6_17  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [key=0, style=bold, color=blue];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_29  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m6_26 -> m6_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m6_26 -> m6_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m6_26 -> m6_34  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_26 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m6_26 -> m6_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m6_26 -> m6_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_29  [key=0, style=solid];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_31  [key=0, style=solid];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_33  [key=0, style=solid];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_46  [key=2, style=dotted];
m6_33 -> m6_47  [key=2, style=dotted];
m6_33 -> m6_21  [key=2, style=dotted];
m6_33 -> m6_48  [key=2, style=dotted];
m6_33 -> m6_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_49  [key=2, style=dotted];
m6_34 -> m6_50  [key=2, style=dotted];
m6_34 -> m6_36  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_34 -> m6_42  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_34 -> m6_44  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_51  [key=2, style=dotted];
m6_35 -> m6_38  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m6_35 -> m6_41  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_52  [key=2, style=dotted];
m6_36 -> m6_40  [key=1, style=dashed, color=darkseagreen4, label=context];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_53  [key=2, style=dotted];
m6_37 -> m6_41  [key=1, style=dashed, color=darkseagreen4, label=changingContext];
m6_28 -> m6_45  [key=0, style=solid];
m6_28 -> n17  [key=2, style=dotted];
m6_30 -> m6_45  [key=0, style=solid];
m6_30 -> n17  [key=2, style=dotted];
m6_32 -> m6_45  [key=0, style=solid];
m6_32 -> n17  [key=2, style=dotted];
m6_42 -> m6_43  [key=0, style=solid];
m6_42 -> m6_58  [key=2, style=dotted];
m6_44 -> m6_45  [key=0, style=solid];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_54  [key=2, style=dotted];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_57  [key=2, style=dotted];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_56  [key=2, style=dotted];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_55  [key=2, style=dotted];
m6_39 -> m6_42  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m6_39 -> m6_43  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_59  [key=2, style=dotted];
m6_45 -> m6_26  [key=0, style=bold, color=blue];
m6_60 -> m6_61  [key=0, style=solid];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_21  [key=2, style=dotted];
m6_19 -> m6_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_18 -> m6_19  [key=0, style=solid];
m6_20 -> m6_18  [key=0, style=bold, color=blue];
m6_22 -> m6_23  [key=0, style=solid];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_25  [key=2, style=dotted];
m6_24 -> m6_22  [key=0, style=bold, color=blue];
m6_61 -> m6_62  [key=0, style=solid];
m6_62 -> m6_60  [key=0, style=bold, color=blue];
m6_54 -> m6_96  [key=0, style=solid];
m6_54 -> m6_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m6_54 -> m6_98  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m6_54 -> m6_99  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m6_54 -> m6_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m6_96 -> m6_97  [key=0, style=solid];
m6_96 -> m6_101  [key=0, style=solid];
m6_96 -> m6_98  [key=1, style=dashed, color=darkseagreen4, label=filter];
m6_97 -> m6_98  [key=0, style=solid];
m6_97 -> m6_99  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m6_97 -> m6_100  [key=1, style=dashed, color=darkseagreen4, label=oldState];
m6_98 -> m6_99  [key=0, style=solid];
m6_98 -> m6_102  [key=2, style=dotted];
m6_99 -> m6_100  [key=0, style=solid];
m6_99 -> m6_96  [key=0, style=solid];
m6_100 -> m6_96  [key=0, style=solid];
m6_100 -> m6_103  [key=2, style=dotted];
m6_101 -> m6_54  [key=0, style=bold, color=blue];
m6_57 -> m6_109  [key=0, style=solid];
m6_57 -> m6_110  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_57 -> m6_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_57 -> m6_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m6_57 -> m6_113  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>"];
m6_57 -> m6_114  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m6_57 -> m6_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m6_57 -> m6_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m6_57 -> m6_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m6_57 -> m6_118  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m6_57 -> m6_119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m6_57 -> m6_120  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>"];
m6_57 -> m6_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m6_109 -> m6_110  [key=0, style=solid];
m6_109 -> m6_115  [key=0, style=solid];
m6_109 -> m6_123  [key=2, style=dotted];
m6_110 -> m6_111  [key=0, style=solid];
m6_110 -> m6_113  [key=0, style=solid];
m6_110 -> m6_124  [key=2, style=dotted];
m6_111 -> m6_112  [key=0, style=solid];
m6_111 -> m6_113  [key=0, style=solid];
m6_112 -> m6_111  [key=0, style=solid];
m6_112 -> m6_125  [key=2, style=dotted];
m6_113 -> m6_114  [key=0, style=solid];
m6_113 -> m6_115  [key=0, style=solid];
m6_114 -> m6_113  [key=0, style=solid];
m6_114 -> m6_126  [key=2, style=dotted];
m6_115 -> m6_116  [key=0, style=solid];
m6_115 -> m6_119  [key=0, style=solid];
m6_115 -> m6_124  [key=2, style=dotted];
m6_116 -> m6_117  [key=0, style=solid];
m6_116 -> m6_127  [key=2, style=dotted];
m6_116 -> m6_118  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m6_117 -> m6_118  [key=0, style=solid];
m6_117 -> m6_119  [key=0, style=solid];
m6_118 -> m6_117  [key=0, style=solid];
m6_118 -> m6_128  [key=2, style=dotted];
m6_119 -> m6_120  [key=0, style=solid];
m6_119 -> m6_129  [key=2, style=dotted];
m6_120 -> m6_121  [key=0, style=solid];
m6_120 -> m6_122  [key=0, style=solid];
m6_121 -> m6_120  [key=0, style=solid];
m6_121 -> m6_130  [key=2, style=dotted];
m6_122 -> m6_57  [key=0, style=bold, color=blue];
m6_63 -> m6_64  [key=0, style=solid];
m6_63 -> m6_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m6_63 -> m6_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_63 -> m6_69  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_63 -> m6_73  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m6_63 -> m6_77  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_63 -> m6_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m6_63 -> m6_82  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_66  [key=0, style=solid];
m6_64 -> m6_87  [key=2, style=dotted];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_68  [key=0, style=solid];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_88  [key=2, style=dotted];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_89  [key=2, style=dotted];
m6_69 -> m6_72  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m6_69 -> m6_75  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m6_73 -> m6_74  [key=0, style=solid];
m6_73 -> m6_75  [key=0, style=solid];
m6_73 -> m6_90  [key=2, style=dotted];
m6_77 -> m6_78  [key=0, style=solid];
m6_77 -> m6_52  [key=2, style=dotted];
m6_78 -> m6_79  [key=0, style=solid];
m6_78 -> m6_53  [key=2, style=dotted];
m6_78 -> m6_80  [key=1, style=dashed, color=darkseagreen4, label=changingContext];
m6_82 -> m6_83  [key=0, style=solid];
m6_82 -> m6_53  [key=2, style=dotted];
m6_82 -> m6_52  [key=2, style=dotted];
m6_82 -> m6_93  [key=2, style=dotted];
m6_82 -> m6_94  [key=2, style=dotted];
m6_65 -> m6_86  [key=0, style=solid];
m6_65 -> n17  [key=2, style=dotted];
m6_67 -> m6_86  [key=0, style=solid];
m6_67 -> n17  [key=2, style=dotted];
m6_70 -> m6_71  [key=0, style=solid];
m6_70 -> m6_72  [key=0, style=solid];
m6_72 -> m6_73  [key=0, style=solid];
m6_72 -> m6_78  [key=1, style=dashed, color=darkseagreen4, label=currentState];
m6_72 -> m6_82  [key=1, style=dashed, color=darkseagreen4, label=currentState];
m6_75 -> m6_76  [key=0, style=solid];
m6_75 -> m6_91  [key=2, style=dotted];
m6_75 -> m6_77  [key=1, style=dashed, color=darkseagreen4, label=jobMethod];
m6_71 -> m6_86  [key=0, style=solid];
m6_74 -> m6_86  [key=0, style=solid];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_51  [key=2, style=dotted];
m6_76 -> m6_79  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m6_76 -> m6_80  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_54  [key=2, style=dotted];
m6_80 -> m6_86  [key=0, style=solid];
m6_80 -> m6_92  [key=2, style=dotted];
m6_81 -> m6_82  [key=0, style=solid];
m6_83 -> m6_86  [key=0, style=solid];
m6_83 -> m6_95  [key=2, style=dotted];
m6_83 -> m6_92  [key=2, style=dotted];
m6_84 -> m6_85  [key=0, style=solid];
m6_85 -> m6_86  [key=0, style=solid];
m6_86 -> m6_63  [key=0, style=bold, color=blue];
m6_129 -> m6_135  [key=0, style=solid];
m6_129 -> m6_137  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m6_129 -> m6_138  [key=1, style=dashed, color=darkseagreen4, label=bool];
m6_129 -> m6_139  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IAtomicWriteTransaction"];
m6_129 -> m6_140  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m6_129 -> m6_142  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IAtomicWriteTransaction"];
m6_135 -> m6_136  [key=0, style=solid];
m6_135 -> m6_144  [key=2, style=dotted];
m6_135 -> m6_127  [key=2, style=dotted];
m6_135 -> m6_137  [key=1, style=dashed, color=darkseagreen4, label=properties];
m6_135 -> m6_139  [key=1, style=dashed, color=darkseagreen4, label=properties];
m6_135 -> m6_140  [key=1, style=dashed, color=darkseagreen4, label=properties];
m6_135 -> m6_141  [key=1, style=dashed, color=darkseagreen4, label=properties];
m6_135 -> m6_142  [key=1, style=dashed, color=darkseagreen4, label=properties];
m6_137 -> m6_138  [key=0, style=solid];
m6_137 -> m6_145  [key=2, style=dotted];
m6_138 -> m6_139  [key=0, style=solid];
m6_138 -> m6_140  [key=0, style=solid];
m6_139 -> m6_140  [key=0, style=solid];
m6_139 -> m6_146  [key=2, style=dotted];
m6_140 -> m6_141  [key=0, style=solid];
m6_140 -> m6_145  [key=2, style=dotted];
m6_142 -> m6_143  [key=0, style=solid];
m6_142 -> m6_148  [key=2, style=dotted];
m6_136 -> m6_137  [key=0, style=solid];
m6_136 -> m6_141  [key=1, style=dashed, color=darkseagreen4, label=now];
m6_141 -> m6_142  [key=0, style=solid];
m6_141 -> m6_147  [key=2, style=dotted];
m6_141 -> m6_145  [key=2, style=dotted];
m6_143 -> m6_129  [key=0, style=bold, color=blue];
m6_51 -> m6_149  [key=0, style=solid];
m6_149 -> m6_150  [key=0, style=solid];
m6_149 -> m6_151  [key=2, style=dotted];
m6_149 -> m6_152  [key=2, style=dotted];
m6_150 -> m6_51  [key=0, style=bold, color=blue];
m6_103 -> m6_131  [key=0, style=solid];
m6_103 -> m6_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateContext"];
m6_131 -> m6_132  [key=0, style=solid];
m6_131 -> m6_55  [key=2, style=dotted];
m6_131 -> m6_133  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m6_132 -> m6_133  [key=0, style=solid];
m6_132 -> m6_129  [key=2, style=dotted];
m6_133 -> m6_134  [key=0, style=solid];
m6_133 -> m6_59  [key=2, style=dotted];
m6_134 -> m6_103  [key=0, style=bold, color=blue];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>"];
m6_2 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m6_2 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m6_2 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m6_2 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m6_2 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_7  [key=0, style=solid];
m6_7 -> m6_8  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_15  [key=2, style=dotted];
m6_8 -> m6_16  [key=2, style=dotted];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_13  [key=0, style=solid];
m6_12 -> m6_13  [key=0, style=solid];
m6_4 -> m6_13  [key=0, style=solid];
m6_4 -> n17  [key=2, style=dotted];
m6_6 -> m6_13  [key=0, style=solid];
m6_6 -> n17  [key=2, style=dotted];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_11  [key=0, style=solid];
m6_10 -> m6_9  [key=0, style=solid];
m6_10 -> m6_17  [key=2, style=dotted];
m6_13 -> m6_2  [key=0, style=bold, color=blue];
m6_164 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_82  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_104  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_106  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_110  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_111  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_131  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_158  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_164 -> m6_159  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m6_165 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m7_0 -> m7_1  [key=0, style=solid];
m7_16 -> m7_17  [key=0, style=solid, color=green];
m7_16 -> m7_76  [key=2, style=dotted, color=green];
m7_15 -> m7_16  [key=0, style=solid, color=green];
m7_15 -> m7_82  [key=2, style=dotted];
m7_15 -> m7_84  [key=2, style=dotted];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_82  [key=2, style=dotted];
m7_17 -> m7_84  [key=2, style=dotted];
m7_1 -> m7_76  [key=2, style=dotted];
m7_1 -> m7_2  [key=0, style=solid];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_77  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_78  [key=2, style=dotted];
m7_4 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label=from];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_78  [key=2, style=dotted];
m7_5 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label=perPage];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_80  [key=2, style=dotted];
m7_9 -> m7_81  [key=2, style=dotted];
m7_9 -> m7_82  [key=2, style=dotted];
m7_9 -> m7_12  [key=1, style=dashed, color=darkseagreen4, label=pager];
m7_9 -> m7_19  [key=1, style=dashed, color=darkseagreen4, label=pager];
m7_9 -> m7_74  [key=1, style=dashed, color=darkseagreen4, label=pager];
m7_11 -> m7_76  [key=2, style=dotted];
m7_11 -> m7_12  [key=0, style=solid];
m7_13 -> m7_76  [key=2, style=dotted];
m7_13 -> m7_75  [key=0, style=solid];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_76  [key=2, style=dotted];
m7_18 -> m7_76  [key=2, style=dotted];
m7_18 -> m7_19  [key=0, style=solid];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_85  [key=2, style=dotted];
m7_19 -> m7_86  [key=2, style=dotted];
m7_19 -> m7_87  [key=2, style=dotted];
m7_20 -> m7_76  [key=2, style=dotted];
m7_20 -> m7_21  [key=0, style=solid];
m7_23 -> m7_76  [key=2, style=dotted];
m7_23 -> m7_24  [key=0, style=solid];
m7_24 -> m7_24  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_84  [key=2, style=dotted];
m7_24 -> m7_26  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_25 -> m7_76  [key=2, style=dotted];
m7_25 -> m7_26  [key=0, style=solid];
m7_26 -> m7_26  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> m7_84  [key=2, style=dotted];
m7_26 -> m7_28  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_27 -> m7_76  [key=2, style=dotted];
m7_27 -> m7_28  [key=0, style=solid];
m7_28 -> m7_28  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_84  [key=2, style=dotted];
m7_28 -> m7_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_29 -> m7_76  [key=2, style=dotted];
m7_29 -> m7_30  [key=0, style=solid];
m7_31 -> m7_76  [key=2, style=dotted];
m7_31 -> m7_32  [key=0, style=solid];
m7_32 -> m7_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_84  [key=2, style=dotted];
m7_32 -> m7_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_33 -> m7_76  [key=2, style=dotted];
m7_33 -> m7_34  [key=0, style=solid];
m7_34 -> m7_76  [key=2, style=dotted];
m7_34 -> m7_35  [key=0, style=solid];
m7_35 -> m7_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_84  [key=2, style=dotted];
m7_35 -> m7_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_36 -> m7_76  [key=2, style=dotted];
m7_36 -> m7_37  [key=0, style=solid];
m7_37 -> m7_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_82  [key=2, style=dotted];
m7_37 -> m7_84  [key=2, style=dotted];
m7_37 -> m7_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_38 -> m7_76  [key=2, style=dotted];
m7_38 -> m7_39  [key=0, style=solid];
m7_39 -> m7_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_88  [key=2, style=dotted];
m7_39 -> m7_87  [key=2, style=dotted];
m7_39 -> m7_41  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_40 -> m7_76  [key=2, style=dotted];
m7_40 -> m7_41  [key=0, style=solid];
m7_42 -> m7_76  [key=2, style=dotted];
m7_42 -> m7_43  [key=0, style=solid];
m7_43 -> m7_76  [key=2, style=dotted];
m7_43 -> m7_44  [key=0, style=solid];
m7_45 -> m7_76  [key=2, style=dotted];
m7_45 -> m7_46  [key=0, style=solid];
m7_46 -> m7_46  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_46 -> m7_47  [key=0, style=solid];
m7_46 -> m7_89  [key=2, style=dotted];
m7_46 -> m7_84  [key=2, style=dotted];
m7_46 -> m7_48  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_47 -> m7_76  [key=2, style=dotted];
m7_47 -> m7_48  [key=0, style=solid];
m7_48 -> m7_48  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_48 -> m7_49  [key=0, style=solid];
m7_48 -> m7_84  [key=2, style=dotted];
m7_48 -> m7_51  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_49 -> m7_76  [key=2, style=dotted];
m7_49 -> m7_50  [key=0, style=solid];
m7_50 -> m7_76  [key=2, style=dotted];
m7_50 -> m7_51  [key=0, style=solid];
m7_51 -> m7_51  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_82  [key=2, style=dotted];
m7_51 -> m7_84  [key=2, style=dotted];
m7_51 -> m7_53  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_52 -> m7_76  [key=2, style=dotted];
m7_52 -> m7_53  [key=0, style=solid];
m7_53 -> m7_53  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_90  [key=2, style=dotted];
m7_53 -> m7_87  [key=2, style=dotted];
m7_53 -> m7_55  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_54 -> m7_76  [key=2, style=dotted];
m7_54 -> m7_55  [key=0, style=solid];
m7_56 -> m7_76  [key=2, style=dotted];
m7_56 -> m7_57  [key=0, style=solid];
m7_57 -> m7_57  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_57 -> m7_58  [key=0, style=solid];
m7_57 -> m7_84  [key=2, style=dotted];
m7_57 -> m7_60  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_58 -> m7_76  [key=2, style=dotted];
m7_58 -> m7_59  [key=0, style=solid];
m7_59 -> m7_76  [key=2, style=dotted];
m7_59 -> m7_60  [key=0, style=solid];
m7_61 -> m7_76  [key=2, style=dotted];
m7_61 -> m7_62  [key=0, style=solid];
m7_62 -> m7_62  [key=1, style=dashed, color=darkseagreen4, label=index];
m7_62 -> m7_63  [key=0, style=solid];
m7_62 -> m7_84  [key=2, style=dotted];
m7_63 -> m7_76  [key=2, style=dotted];
m7_63 -> m7_64  [key=0, style=solid];
m7_64 -> m7_64  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_64 -> m7_65  [key=0, style=solid];
m7_64 -> m7_84  [key=2, style=dotted];
m7_64 -> m7_66  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_65 -> m7_76  [key=2, style=dotted];
m7_65 -> m7_66  [key=0, style=solid];
m7_66 -> m7_66  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_66 -> m7_67  [key=0, style=solid];
m7_66 -> m7_84  [key=2, style=dotted];
m7_66 -> m7_68  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_67 -> m7_76  [key=2, style=dotted];
m7_67 -> m7_68  [key=0, style=solid];
m7_69 -> m7_76  [key=2, style=dotted];
m7_69 -> m7_70  [key=0, style=solid];
m7_70 -> m7_70  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> m7_92  [key=2, style=dotted];
m7_70 -> m7_87  [key=2, style=dotted];
m7_71 -> m7_76  [key=2, style=dotted];
m7_71 -> m7_72  [key=0, style=solid];
m7_72 -> m7_76  [key=2, style=dotted];
m7_72 -> m7_22  [key=0, style=solid];
m7_73 -> m7_76  [key=2, style=dotted];
m7_73 -> m7_74  [key=0, style=solid];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_93  [key=2, style=dotted];
m7_74 -> m7_86  [key=2, style=dotted];
m7_74 -> m7_87  [key=2, style=dotted];
m7_3 -> m7_4  [key=0, style=solid];
m7_6 -> m7_7  [key=0, style=solid];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_79  [key=2, style=dotted];
m7_8 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label=monitor];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_83  [key=2, style=dotted];
m7_10 -> m7_22  [key=1, style=dashed, color=darkseagreen4, label=failedJobs];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_14  [key=0, style=solid];
m7_21 -> m7_62  [key=1, style=dashed, color=darkseagreen4, label=index];
m7_21 -> m7_22  [key=0, style=solid];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_24  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_22 -> m7_73  [key=0, style=solid];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_30 -> m7_34  [key=0, style=solid];
m7_30 -> m7_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_30 -> m7_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_43  [key=0, style=solid];
m7_41 -> m7_41  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_41 -> m7_44  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_46  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_44 -> m7_50  [key=0, style=solid];
m7_44 -> m7_51  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_44 -> m7_44  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_55 -> m7_56  [key=0, style=solid];
m7_55 -> m7_57  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_55 -> m7_59  [key=0, style=solid];
m7_55 -> m7_55  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_55 -> m7_91  [key=2, style=dotted];
m7_55 -> m7_60  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_64  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_60 -> m7_22  [key=0, style=solid];
m7_60 -> m7_60  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_68 -> m7_69  [key=0, style=solid];
m7_68 -> m7_70  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_68 -> m7_72  [key=0, style=solid];
m7_68 -> m7_68  [key=1, style=dashed, color=darkseagreen4, label=job];
m7_68 -> m7_91  [key=2, style=dotted];
m7_7 -> m7_8  [key=0, style=solid];
m7_75 -> m7_0  [key=0, style=bold, color=blue];
m7_94 -> m7_16  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_73  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m7_94 -> m7_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m8_68 -> m8_69  [key=0, style=solid];
m8_69 -> m8_70  [key=0, style=solid];
m8_69 -> m8_71  [key=2, style=dotted];
m8_69 -> m8_72  [key=2, style=dotted];
m8_70 -> m8_68  [key=0, style=bold, color=blue];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_64  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IFetchedJob"];
m8_61 -> m8_25  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.Storage.IFetchedJob fetchedJob"];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_65  [key=0, style=solid];
m8_62 -> m8_66  [key=2, style=dotted];
m8_64 -> m8_65  [key=0, style=solid];
m8_64 -> m8_67  [key=2, style=dotted];
m8_63 -> m8_64  [key=0, style=solid];
m8_65 -> m8_61  [key=0, style=bold, color=blue];
m8_56 -> m8_73  [key=0, style=solid];
m8_56 -> m8_77  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_56 -> m8_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m8_56 -> m8_79  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m8_56 -> m8_90  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m8_56 -> m8_21  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.Server.BackgroundProcessContext context"];
m8_56 -> m8_24  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.Storage.IStorageConnection connection"];
m8_56 -> m8_75  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.States.IState PerformJob"];
m8_73 -> m8_74  [key=0, style=solid];
m8_73 -> m8_94  [key=2, style=dotted];
m8_73 -> m8_76  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m8_73 -> m8_77  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m8_73 -> m8_80  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m8_77 -> m8_78  [key=0, style=solid];
m8_77 -> m8_96  [key=2, style=dotted];
m8_77 -> m8_79  [key=1, style=dashed, color=darkseagreen4, label=backgroundJob];
m8_78 -> m8_79  [key=0, style=solid];
m8_78 -> m8_97  [key=2, style=dotted];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_98  [key=2, style=dotted];
m8_79 -> m8_82  [key=1, style=dashed, color=darkseagreen4, label=performContext];
m8_90 -> m8_91  [key=0, style=solid];
m8_90 -> m8_92  [key=0, style=solid];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_76  [key=0, style=solid];
m8_76 -> m8_77  [key=0, style=solid];
m8_76 -> m8_95  [key=2, style=dotted];
m8_80 -> m8_81  [key=0, style=solid];
m8_80 -> m8_84  [key=1, style=dashed, color=darkseagreen4, label=latency];
m8_75 -> m8_93  [key=0, style=solid];
m8_82 -> m8_83  [key=0, style=solid];
m8_82 -> m8_100  [key=2, style=dotted];
m8_82 -> m8_84  [key=1, style=dashed, color=darkseagreen4, label=result];
m8_81 -> m8_82  [key=0, style=solid];
m8_81 -> m8_99  [key=2, style=dotted];
m8_81 -> m8_83  [key=1, style=dashed, color=darkseagreen4, label=duration];
m8_81 -> m8_84  [key=1, style=dashed, color=darkseagreen4, label=duration];
m8_84 -> m8_93  [key=0, style=solid];
m8_84 -> m8_102  [key=2, style=dotted];
m8_83 -> m8_84  [key=0, style=solid];
m8_83 -> m8_101  [key=2, style=dotted];
m8_85 -> m8_86  [key=0, style=solid];
m8_86 -> m8_93  [key=0, style=solid];
m8_87 -> m8_88  [key=0, style=solid];
m8_88 -> m8_93  [key=0, style=solid];
m8_88 -> m8_103  [key=2, style=dotted];
m8_89 -> m8_90  [key=0, style=solid];
m8_91 -> m8_93  [key=0, style=solid];
m8_92 -> m8_93  [key=0, style=solid];
m8_92 -> m8_103  [key=2, style=dotted];
m8_93 -> m8_56  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_0  [key=0, style=bold, color=blue];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_2  [key=0, style=bold, color=blue];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m8_4 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IBackgroundJobPerformer"];
m8_4 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IBackgroundJobPerformer"];
m8_4 -> m8_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IBackgroundJobStateChanger"];
m8_4 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IBackgroundJobStateChanger"];
m8_4 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m8_4 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IBackgroundJobPerformer"];
m8_4 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IBackgroundJobStateChanger"];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_7  [key=0, style=solid];
m8_6 -> m8_15  [key=0, style=solid];
m8_6 -> n17  [key=2, style=dotted];
m8_6 -> m8_17  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_9  [key=0, style=solid];
m8_8 -> m8_15  [key=0, style=solid];
m8_8 -> n17  [key=2, style=dotted];
m8_8 -> m8_17  [key=2, style=dotted];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_11  [key=0, style=solid];
m8_10 -> m8_15  [key=0, style=solid];
m8_10 -> n17  [key=2, style=dotted];
m8_10 -> m8_17  [key=2, style=dotted];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_18  [key=2, style=dotted];
m8_12 -> m8_13  [key=0, style=solid];
m8_13 -> m8_14  [key=0, style=solid];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_19  [key=2, style=dotted];
m8_14 -> m8_20  [key=2, style=dotted];
m8_15 -> m8_4  [key=0, style=bold, color=blue];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m8_21 -> m8_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m8_21 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m8_21 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m8_21 -> m8_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m8_21 -> m8_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m8_21 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m8_21 -> m8_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m8_21 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m8_21 -> m8_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m8_21 -> m8_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_24  [key=0, style=solid];
m8_23 -> m8_45  [key=0, style=solid];
m8_23 -> n17  [key=2, style=dotted];
m8_23 -> m8_17  [key=2, style=dotted];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_46  [key=2, style=dotted];
m8_24 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label=connection];
m8_24 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label=connection];
m8_24 -> m8_37  [key=1, style=dashed, color=darkseagreen4, label=connection];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_47  [key=2, style=dotted];
m8_25 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m8_25 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m8_25 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m8_25 -> m8_37  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m8_25 -> m8_38  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m8_25 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m8_25 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_48  [key=2, style=dotted];
m8_28 -> m8_29  [key=0, style=solid, color=green];
m8_28 -> m8_50  [key=2, style=dotted];
m8_28 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label=linkedCts];
m8_29 -> m8_30  [key=0, style=solid, color=green];
m8_29 -> m8_51  [key=2, style=dotted];
m8_30 -> m8_31  [key=0, style=solid, color=green];
m8_30 -> m8_52  [key=2, style=dotted];
m8_30 -> m8_53  [key=2, style=dotted];
m8_30 -> m8_54  [key=2, style=dotted, color=green];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_48  [key=2, style=dotted];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_56  [key=2, style=dotted];
m8_35 -> m8_37  [key=1, style=dashed, color=darkseagreen4, label=state];
m8_37 -> m8_38  [key=0, style=solid];
m8_37 -> m8_57  [key=2, style=dotted];
m8_37 -> m8_53  [key=2, style=dotted];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_42  [key=0, style=solid];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_55  [key=2, style=dotted];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_45  [key=0, style=solid];
m8_38 -> m8_55  [key=2, style=dotted];
m8_41 -> m8_43  [key=0, style=solid];
m8_41 -> m8_58  [key=2, style=dotted];
m8_41 -> m8_59  [key=2, style=dotted];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_61  [key=2, style=dotted];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_49  [key=2, style=dotted];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_35  [key=0, style=solid];
m8_31 -> m8_54  [key=2, style=dotted];
m8_31 -> m8_45  [key=0, style=solid, color=green];
m8_34 -> m8_45  [key=0, style=solid];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_38  [key=0, style=solid];
m8_39 -> m8_40  [key=0, style=solid];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_60  [key=2, style=dotted];
m8_44 -> m8_45  [key=0, style=solid];
m8_45 -> m8_21  [key=0, style=bold, color=blue];
m8_104 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m8_104 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m8_104 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m8_104 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m8_104 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m8_104 -> m8_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m8_104 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m8_104 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m8_104 -> m8_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m8_104 -> m8_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m8_104 -> m8_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m8_104 -> m8_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
}
